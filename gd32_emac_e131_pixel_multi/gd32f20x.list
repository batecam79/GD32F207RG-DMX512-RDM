
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	080085bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, pc}
 8007008:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800700c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007010:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007014:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007018:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 800702c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007030:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800703c:	08014061 	stmdaeq	r1, {r0, r5, r6, lr}
 8007040:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007044:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007048:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800704c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007050:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007054:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007058:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800705c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007060:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007064:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007068:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800706c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007070:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007074:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007078:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800707c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007080:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007084:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007088:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800708c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007090:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007094:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007098:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800709c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ac:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b8:	0800eef9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, fp, sp, lr, pc}
 80070bc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070dc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ec:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070fc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007100:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007104:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007108:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800710c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007110:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007114:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007118:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800711c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007120:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007124:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007128:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800712c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007130:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007134:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007138:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800713c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007140:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007144:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007148:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800714c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007158:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800715c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007160:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007164:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 8007178:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800717c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007180:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800718c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 80071a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80071a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f00a ffd5 	bl	80121a8 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f009 f9d0 	bl	80105ac <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f00b f9e6 	bl	80125e8 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	200159f4 	strdcs	r5, [r1], -r4
 8007240:	200159e8 	andcs	r5, r1, r8, ror #19
 8007244:	200159fa 	strdcs	r5, [r1], -sl

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f00b b8ae 	b.w	80123b8 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	200159fa 	strdcs	r5, [r1], -sl

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	20015a04 	andcs	r5, r1, r4, lsl #20

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f009 f9eb 	bl	8010660 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f009 f9df 	bl	8010660 <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	200165cc 	andcs	r6, r1, ip, asr #11
 80072b4:	200159f4 	strdcs	r5, [r1], -r4
 80072b8:	200159e8 	andcs	r5, r1, r8, ror #19
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f009 fb3e 	bl	8010968 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f009 fb5f 	bl	80109b8 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	20016be8 	andcs	r6, r1, r8, ror #23
 8007304:	20016bc8 	andcs	r6, r1, r8, asr #23
 8007308:	2001c888 	andcs	ip, r1, r8, lsl #17
 800730c:	20016bc4 	andcs	r6, r1, r4, asr #23
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f00a fdbc 	bl	8011eac <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f00a fda9 	bl	8011eac <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f00a fd9d 	bl	8011eac <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f00a fd8c 	bl	8011eac <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f00a fd80 	bl	8011eac <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f00a fd74 	bl	8011eac <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f00a bd79 	b.w	8011ec0 <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2001d2be 			; <UNDEFINED> instruction: 0x2001d2be
 80073ec:	2001d2b8 			; <UNDEFINED> instruction: 0x2001d2b8
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2001d2ce 	andcs	sp, r1, lr, asr #5
 80073fc:	2001d2d8 	ldrdcs	sp, [r1], -r8
 8007400:	2001d316 	andcs	sp, r1, r6, lsl r3
 8007404:	2001d310 	andcs	sp, r1, r0, lsl r3
 8007408:	2001d326 	andcs	sp, r1, r6, lsr #6
 800740c:	2001d330 	andcs	sp, r1, r0, lsr r3
 8007410:	2001d2e4 	andcs	sp, r1, r4, ror #5

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2001d4bc 			; <UNDEFINED> instruction: 0x2001d4bc
 8007444:	2001d340 	andcs	sp, r1, r0, asr #6

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f00b f818 	bl	80124a8 <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f00a ffc4 	bl	8012414 <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f00a ffaa 	bl	8012414 <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2001d6f4 	strdcs	sp, [r1], -r4
 80074e8:	2001d818 	andcs	sp, r1, r8, lsl r8
 80074ec:	2001d854 	andcs	sp, r1, r4, asr r8
 80074f0:	2001d814 	andcs	sp, r1, r4, lsl r8
 80074f4:	2001d84c 	andcs	sp, r1, ip, asr #16
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2001d81c 	andcs	sp, r1, ip, lsl r8
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f00b f822 	bl	8012560 <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2001d6f4 	strdcs	sp, [r1], -r4

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00c fd23 	bl	8013fa4 <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00c fd50 	bl	8014004 <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00c fd4d 	bl	8014004 <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	080161ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sp, lr}
 8007574:	080190e8 	stmdaeq	r1, {r3, r5, r6, r7, ip, pc}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00d fc61 	bl	8014e44 <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00d fc6b 	bl	8014e6c <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f008 bff7 	b.w	801058c <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	200159fc 	strdcs	r5, [r1], -ip

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f009 f853 	bl	8010674 <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f009 f834 	bl	8010660 <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f009 f825 	bl	8010660 <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f009 f81d 	bl	8010660 <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f009 f8c6 	bl	801080c <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f008 ffde 	bl	8010660 <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f008 ffd7 	bl	8010660 <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f008 fff6 	bl	80106c0 <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f008 ff91 	bl	801062c <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f008 ff72 	bl	801062c <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f008 ffaf 	bl	80106c0 <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f009 f84c 	bl	801080c <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f009 f82a 	bl	801080c <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f008 ff39 	bl	8010660 <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f008 ff55 	bl	80106c0 <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f008 ff37 	bl	80106c0 <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	20016588 	andcs	r6, r1, r8, lsl #11
 800786c:	20016590 	mulcs	r1, r0, r5
 8007870:	20015a18 	andcs	r5, r1, r8, lsl sl
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f008 fead 	bl	801062c <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f008 fee8 	bl	80106c0 <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	20016588 	andcs	r6, r1, r8, lsl #11

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f008 fff6 	bl	8010968 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f008 ffef 	bl	8010968 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	20016bc8 	andcs	r6, r1, r8, asr #23
 80079b4:	20016be8 	andcs	r6, r1, r8, ror #23

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f00a ba84 	b.w	8011ed4 <arp_handle_request>
 80079cc:	f00a baaa 	b.w	8011f24 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051d 	add.w	r5, r0, #29
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0621 	add.w	r6, r0, #33	; 0x21
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a12:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a50:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2001d818 	andcs	sp, r1, r8, lsl r8
 8007a6c:	2001d6f4 	strdcs	sp, [r1], -r4

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f00a fdb5 	bl	801262c <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f00a fdb0 	bl	801262c <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f00a fda5 	bl	801262c <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f00a fd9a 	bl	801262c <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f00a fd7b 	bl	80125fa <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f00a fd6e 	bl	80125fa <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00d f9a3 	bl	8014e74 <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	200159f4 	strdcs	r5, [r1], -r4
 8007b38:	200159e8 	andcs	r5, r1, r8, ror #19

08007b3c <__aeabi_d2f>:
 8007b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007b40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007b44:	bf24      	itt	cs
 8007b46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007b4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b4e:	d90d      	bls.n	8007b6c <__aeabi_d2f+0x30>
 8007b50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b64:	bf08      	it	eq
 8007b66:	f020 0001 	biceq.w	r0, r0, #1
 8007b6a:	4770      	bx	lr
 8007b6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b70:	d121      	bne.n	8007bb6 <__aeabi_d2f+0x7a>
 8007b72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b76:	bfbc      	itt	lt
 8007b78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b7c:	4770      	bxlt	lr
 8007b7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b86:	f1c2 0218 	rsb	r2, r2, #24
 8007b8a:	f1c2 0c20 	rsb	ip, r2, #32
 8007b8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b92:	fa20 f002 	lsr.w	r0, r0, r2
 8007b96:	bf18      	it	ne
 8007b98:	f040 0001 	orrne.w	r0, r0, #1
 8007b9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007ba0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007ba4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007ba8:	ea40 000c 	orr.w	r0, r0, ip
 8007bac:	fa23 f302 	lsr.w	r3, r3, r2
 8007bb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bb4:	e7cc      	b.n	8007b50 <__aeabi_d2f+0x14>
 8007bb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007bba:	d107      	bne.n	8007bcc <__aeabi_d2f+0x90>
 8007bbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007bc0:	bf1e      	ittt	ne
 8007bc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007bc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007bca:	4770      	bxne	lr
 8007bcc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007bd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007bd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd8:	4770      	bx	lr
 8007bda:	bf00      	nop

08007bdc <__aeabi_frsub>:
 8007bdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007be0:	e002      	b.n	8007be8 <__addsf3>
 8007be2:	bf00      	nop

08007be4 <__aeabi_fsub>:
 8007be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007be8 <__addsf3>:
 8007be8:	0042      	lsls	r2, r0, #1
 8007bea:	bf1f      	itttt	ne
 8007bec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007bf0:	ea92 0f03 	teqne	r2, r3
 8007bf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bfc:	d06a      	beq.n	8007cd4 <__addsf3+0xec>
 8007bfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007c02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007c06:	bfc1      	itttt	gt
 8007c08:	18d2      	addgt	r2, r2, r3
 8007c0a:	4041      	eorgt	r1, r0
 8007c0c:	4048      	eorgt	r0, r1
 8007c0e:	4041      	eorgt	r1, r0
 8007c10:	bfb8      	it	lt
 8007c12:	425b      	neglt	r3, r3
 8007c14:	2b19      	cmp	r3, #25
 8007c16:	bf88      	it	hi
 8007c18:	4770      	bxhi	lr
 8007c1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007c1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007c26:	bf18      	it	ne
 8007c28:	4240      	negne	r0, r0
 8007c2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007c2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007c32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c36:	bf18      	it	ne
 8007c38:	4249      	negne	r1, r1
 8007c3a:	ea92 0f03 	teq	r2, r3
 8007c3e:	d03f      	beq.n	8007cc0 <__addsf3+0xd8>
 8007c40:	f1a2 0201 	sub.w	r2, r2, #1
 8007c44:	fa41 fc03 	asr.w	ip, r1, r3
 8007c48:	eb10 000c 	adds.w	r0, r0, ip
 8007c4c:	f1c3 0320 	rsb	r3, r3, #32
 8007c50:	fa01 f103 	lsl.w	r1, r1, r3
 8007c54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c58:	d502      	bpl.n	8007c60 <__addsf3+0x78>
 8007c5a:	4249      	negs	r1, r1
 8007c5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c64:	d313      	bcc.n	8007c8e <__addsf3+0xa6>
 8007c66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c6a:	d306      	bcc.n	8007c7a <__addsf3+0x92>
 8007c6c:	0840      	lsrs	r0, r0, #1
 8007c6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c72:	f102 0201 	add.w	r2, r2, #1
 8007c76:	2afe      	cmp	r2, #254	; 0xfe
 8007c78:	d251      	bcs.n	8007d1e <__addsf3+0x136>
 8007c7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c82:	bf08      	it	eq
 8007c84:	f020 0001 	biceq.w	r0, r0, #1
 8007c88:	ea40 0003 	orr.w	r0, r0, r3
 8007c8c:	4770      	bx	lr
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	eb40 0000 	adc.w	r0, r0, r0
 8007c94:	3a01      	subs	r2, #1
 8007c96:	bf28      	it	cs
 8007c98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c9c:	d2ed      	bcs.n	8007c7a <__addsf3+0x92>
 8007c9e:	fab0 fc80 	clz	ip, r0
 8007ca2:	f1ac 0c08 	sub.w	ip, ip, #8
 8007ca6:	ebb2 020c 	subs.w	r2, r2, ip
 8007caa:	fa00 f00c 	lsl.w	r0, r0, ip
 8007cae:	bfaa      	itet	ge
 8007cb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007cb4:	4252      	neglt	r2, r2
 8007cb6:	4318      	orrge	r0, r3
 8007cb8:	bfbc      	itt	lt
 8007cba:	40d0      	lsrlt	r0, r2
 8007cbc:	4318      	orrlt	r0, r3
 8007cbe:	4770      	bx	lr
 8007cc0:	f092 0f00 	teq	r2, #0
 8007cc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007cc8:	bf06      	itte	eq
 8007cca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007cce:	3201      	addeq	r2, #1
 8007cd0:	3b01      	subne	r3, #1
 8007cd2:	e7b5      	b.n	8007c40 <__addsf3+0x58>
 8007cd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007cd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cdc:	bf18      	it	ne
 8007cde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ce2:	d021      	beq.n	8007d28 <__addsf3+0x140>
 8007ce4:	ea92 0f03 	teq	r2, r3
 8007ce8:	d004      	beq.n	8007cf4 <__addsf3+0x10c>
 8007cea:	f092 0f00 	teq	r2, #0
 8007cee:	bf08      	it	eq
 8007cf0:	4608      	moveq	r0, r1
 8007cf2:	4770      	bx	lr
 8007cf4:	ea90 0f01 	teq	r0, r1
 8007cf8:	bf1c      	itt	ne
 8007cfa:	2000      	movne	r0, #0
 8007cfc:	4770      	bxne	lr
 8007cfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007d02:	d104      	bne.n	8007d0e <__addsf3+0x126>
 8007d04:	0040      	lsls	r0, r0, #1
 8007d06:	bf28      	it	cs
 8007d08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007d0c:	4770      	bx	lr
 8007d0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007d12:	bf3c      	itt	cc
 8007d14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007d18:	4770      	bxcc	lr
 8007d1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007d1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007d22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d26:	4770      	bx	lr
 8007d28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007d2c:	bf16      	itet	ne
 8007d2e:	4608      	movne	r0, r1
 8007d30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007d34:	4601      	movne	r1, r0
 8007d36:	0242      	lsls	r2, r0, #9
 8007d38:	bf06      	itte	eq
 8007d3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007d3e:	ea90 0f01 	teqeq	r0, r1
 8007d42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007d46:	4770      	bx	lr

08007d48 <__aeabi_ui2f>:
 8007d48:	f04f 0300 	mov.w	r3, #0
 8007d4c:	e004      	b.n	8007d58 <__aeabi_i2f+0x8>
 8007d4e:	bf00      	nop

08007d50 <__aeabi_i2f>:
 8007d50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d54:	bf48      	it	mi
 8007d56:	4240      	negmi	r0, r0
 8007d58:	ea5f 0c00 	movs.w	ip, r0
 8007d5c:	bf08      	it	eq
 8007d5e:	4770      	bxeq	lr
 8007d60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d64:	4601      	mov	r1, r0
 8007d66:	f04f 0000 	mov.w	r0, #0
 8007d6a:	e01c      	b.n	8007da6 <__aeabi_l2f+0x2a>

08007d6c <__aeabi_ul2f>:
 8007d6c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d70:	bf08      	it	eq
 8007d72:	4770      	bxeq	lr
 8007d74:	f04f 0300 	mov.w	r3, #0
 8007d78:	e00a      	b.n	8007d90 <__aeabi_l2f+0x14>
 8007d7a:	bf00      	nop

08007d7c <__aeabi_l2f>:
 8007d7c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d80:	bf08      	it	eq
 8007d82:	4770      	bxeq	lr
 8007d84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d88:	d502      	bpl.n	8007d90 <__aeabi_l2f+0x14>
 8007d8a:	4240      	negs	r0, r0
 8007d8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d90:	ea5f 0c01 	movs.w	ip, r1
 8007d94:	bf02      	ittt	eq
 8007d96:	4684      	moveq	ip, r0
 8007d98:	4601      	moveq	r1, r0
 8007d9a:	2000      	moveq	r0, #0
 8007d9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007da0:	bf08      	it	eq
 8007da2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007da6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007daa:	fabc f28c 	clz	r2, ip
 8007dae:	3a08      	subs	r2, #8
 8007db0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007db4:	db10      	blt.n	8007dd8 <__aeabi_l2f+0x5c>
 8007db6:	fa01 fc02 	lsl.w	ip, r1, r2
 8007dba:	4463      	add	r3, ip
 8007dbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8007dc0:	f1c2 0220 	rsb	r2, r2, #32
 8007dc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007dc8:	fa20 f202 	lsr.w	r2, r0, r2
 8007dcc:	eb43 0002 	adc.w	r0, r3, r2
 8007dd0:	bf08      	it	eq
 8007dd2:	f020 0001 	biceq.w	r0, r0, #1
 8007dd6:	4770      	bx	lr
 8007dd8:	f102 0220 	add.w	r2, r2, #32
 8007ddc:	fa01 fc02 	lsl.w	ip, r1, r2
 8007de0:	f1c2 0220 	rsb	r2, r2, #32
 8007de4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007de8:	fa21 f202 	lsr.w	r2, r1, r2
 8007dec:	eb43 0002 	adc.w	r0, r3, r2
 8007df0:	bf08      	it	eq
 8007df2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007df6:	4770      	bx	lr

08007df8 <__gesf2>:
 8007df8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007dfc:	e006      	b.n	8007e0c <__cmpsf2+0x4>
 8007dfe:	bf00      	nop

08007e00 <__lesf2>:
 8007e00:	f04f 0c01 	mov.w	ip, #1
 8007e04:	e002      	b.n	8007e0c <__cmpsf2+0x4>
 8007e06:	bf00      	nop

08007e08 <__cmpsf2>:
 8007e08:	f04f 0c01 	mov.w	ip, #1
 8007e0c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007e10:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e14:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e18:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e1c:	bf18      	it	ne
 8007e1e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e22:	d011      	beq.n	8007e48 <__cmpsf2+0x40>
 8007e24:	b001      	add	sp, #4
 8007e26:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007e2a:	bf18      	it	ne
 8007e2c:	ea90 0f01 	teqne	r0, r1
 8007e30:	bf58      	it	pl
 8007e32:	ebb2 0003 	subspl.w	r0, r2, r3
 8007e36:	bf88      	it	hi
 8007e38:	17c8      	asrhi	r0, r1, #31
 8007e3a:	bf38      	it	cc
 8007e3c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007e40:	bf18      	it	ne
 8007e42:	f040 0001 	orrne.w	r0, r0, #1
 8007e46:	4770      	bx	lr
 8007e48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e4c:	d102      	bne.n	8007e54 <__cmpsf2+0x4c>
 8007e4e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e52:	d105      	bne.n	8007e60 <__cmpsf2+0x58>
 8007e54:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e58:	d1e4      	bne.n	8007e24 <__cmpsf2+0x1c>
 8007e5a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e5e:	d0e1      	beq.n	8007e24 <__cmpsf2+0x1c>
 8007e60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e64:	4770      	bx	lr
 8007e66:	bf00      	nop

08007e68 <__aeabi_cfrcmple>:
 8007e68:	4684      	mov	ip, r0
 8007e6a:	4608      	mov	r0, r1
 8007e6c:	4661      	mov	r1, ip
 8007e6e:	e7ff      	b.n	8007e70 <__aeabi_cfcmpeq>

08007e70 <__aeabi_cfcmpeq>:
 8007e70:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e72:	f7ff ffc9 	bl	8007e08 <__cmpsf2>
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf48      	it	mi
 8007e7a:	f110 0f00 	cmnmi.w	r0, #0
 8007e7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e80 <__aeabi_fcmpeq>:
 8007e80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e84:	f7ff fff4 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e88:	bf0c      	ite	eq
 8007e8a:	2001      	moveq	r0, #1
 8007e8c:	2000      	movne	r0, #0
 8007e8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e92:	bf00      	nop

08007e94 <__aeabi_fcmplt>:
 8007e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e98:	f7ff ffea 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e9c:	bf34      	ite	cc
 8007e9e:	2001      	movcc	r0, #1
 8007ea0:	2000      	movcs	r0, #0
 8007ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ea6:	bf00      	nop

08007ea8 <__aeabi_fcmple>:
 8007ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007eac:	f7ff ffe0 	bl	8007e70 <__aeabi_cfcmpeq>
 8007eb0:	bf94      	ite	ls
 8007eb2:	2001      	movls	r0, #1
 8007eb4:	2000      	movhi	r0, #0
 8007eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007eba:	bf00      	nop

08007ebc <__aeabi_fcmpge>:
 8007ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ec0:	f7ff ffd2 	bl	8007e68 <__aeabi_cfrcmple>
 8007ec4:	bf94      	ite	ls
 8007ec6:	2001      	movls	r0, #1
 8007ec8:	2000      	movhi	r0, #0
 8007eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ece:	bf00      	nop

08007ed0 <__aeabi_fcmpgt>:
 8007ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ed4:	f7ff ffc8 	bl	8007e68 <__aeabi_cfrcmple>
 8007ed8:	bf34      	ite	cc
 8007eda:	2001      	movcc	r0, #1
 8007edc:	2000      	movcs	r0, #0
 8007ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_f2iz>:
 8007ee4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007ee8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007eec:	d30f      	bcc.n	8007f0e <__aeabi_f2iz+0x2a>
 8007eee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ef2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007ef6:	d90d      	bls.n	8007f14 <__aeabi_f2iz+0x30>
 8007ef8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007efc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f00:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007f04:	fa23 f002 	lsr.w	r0, r3, r2
 8007f08:	bf18      	it	ne
 8007f0a:	4240      	negne	r0, r0
 8007f0c:	4770      	bx	lr
 8007f0e:	f04f 0000 	mov.w	r0, #0
 8007f12:	4770      	bx	lr
 8007f14:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007f18:	d101      	bne.n	8007f1e <__aeabi_f2iz+0x3a>
 8007f1a:	0242      	lsls	r2, r0, #9
 8007f1c:	d105      	bne.n	8007f2a <__aeabi_f2iz+0x46>
 8007f1e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007f22:	bf08      	it	eq
 8007f24:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007f28:	4770      	bx	lr
 8007f2a:	f04f 0000 	mov.w	r0, #0
 8007f2e:	4770      	bx	lr

08007f30 <__aeabi_uldivmod>:
 8007f30:	b953      	cbnz	r3, 8007f48 <__aeabi_uldivmod+0x18>
 8007f32:	b94a      	cbnz	r2, 8007f48 <__aeabi_uldivmod+0x18>
 8007f34:	2900      	cmp	r1, #0
 8007f36:	bf08      	it	eq
 8007f38:	2800      	cmpeq	r0, #0
 8007f3a:	bf1c      	itt	ne
 8007f3c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007f40:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007f44:	f000 b80c 	b.w	8007f60 <__aeabi_idiv0>
 8007f48:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f4c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f50:	f001 fbae 	bl	80096b0 <__udivmoddi4>
 8007f54:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f5c:	b004      	add	sp, #16
 8007f5e:	4770      	bx	lr

08007f60 <__aeabi_idiv0>:
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop

08007f64 <__aeabi_drsub>:
 8007f64:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f68:	e002      	b.n	8007f70 <__adddf3>
 8007f6a:	bf00      	nop

08007f6c <__aeabi_dsub>:
 8007f6c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f70 <__adddf3>:
 8007f70:	b530      	push	{r4, r5, lr}
 8007f72:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f76:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f7a:	ea94 0f05 	teq	r4, r5
 8007f7e:	bf08      	it	eq
 8007f80:	ea90 0f02 	teqeq	r0, r2
 8007f84:	bf1f      	itttt	ne
 8007f86:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f8a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f8e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f92:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f96:	f000 80e2 	beq.w	800815e <__adddf3+0x1ee>
 8007f9a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f9e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007fa2:	bfb8      	it	lt
 8007fa4:	426d      	neglt	r5, r5
 8007fa6:	dd0c      	ble.n	8007fc2 <__adddf3+0x52>
 8007fa8:	442c      	add	r4, r5
 8007faa:	ea80 0202 	eor.w	r2, r0, r2
 8007fae:	ea81 0303 	eor.w	r3, r1, r3
 8007fb2:	ea82 0000 	eor.w	r0, r2, r0
 8007fb6:	ea83 0101 	eor.w	r1, r3, r1
 8007fba:	ea80 0202 	eor.w	r2, r0, r2
 8007fbe:	ea81 0303 	eor.w	r3, r1, r3
 8007fc2:	2d36      	cmp	r5, #54	; 0x36
 8007fc4:	bf88      	it	hi
 8007fc6:	bd30      	pophi	{r4, r5, pc}
 8007fc8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007fd0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007fd4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007fd8:	d002      	beq.n	8007fe0 <__adddf3+0x70>
 8007fda:	4240      	negs	r0, r0
 8007fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007fe0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007fe4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007fe8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007fec:	d002      	beq.n	8007ff4 <__adddf3+0x84>
 8007fee:	4252      	negs	r2, r2
 8007ff0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007ff4:	ea94 0f05 	teq	r4, r5
 8007ff8:	f000 80a7 	beq.w	800814a <__adddf3+0x1da>
 8007ffc:	f1a4 0401 	sub.w	r4, r4, #1
 8008000:	f1d5 0e20 	rsbs	lr, r5, #32
 8008004:	db0d      	blt.n	8008022 <__adddf3+0xb2>
 8008006:	fa02 fc0e 	lsl.w	ip, r2, lr
 800800a:	fa22 f205 	lsr.w	r2, r2, r5
 800800e:	1880      	adds	r0, r0, r2
 8008010:	f141 0100 	adc.w	r1, r1, #0
 8008014:	fa03 f20e 	lsl.w	r2, r3, lr
 8008018:	1880      	adds	r0, r0, r2
 800801a:	fa43 f305 	asr.w	r3, r3, r5
 800801e:	4159      	adcs	r1, r3
 8008020:	e00e      	b.n	8008040 <__adddf3+0xd0>
 8008022:	f1a5 0520 	sub.w	r5, r5, #32
 8008026:	f10e 0e20 	add.w	lr, lr, #32
 800802a:	2a01      	cmp	r2, #1
 800802c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008030:	bf28      	it	cs
 8008032:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008036:	fa43 f305 	asr.w	r3, r3, r5
 800803a:	18c0      	adds	r0, r0, r3
 800803c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008040:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008044:	d507      	bpl.n	8008056 <__adddf3+0xe6>
 8008046:	f04f 0e00 	mov.w	lr, #0
 800804a:	f1dc 0c00 	rsbs	ip, ip, #0
 800804e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008052:	eb6e 0101 	sbc.w	r1, lr, r1
 8008056:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800805a:	d31b      	bcc.n	8008094 <__adddf3+0x124>
 800805c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008060:	d30c      	bcc.n	800807c <__adddf3+0x10c>
 8008062:	0849      	lsrs	r1, r1, #1
 8008064:	ea5f 0030 	movs.w	r0, r0, rrx
 8008068:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800806c:	f104 0401 	add.w	r4, r4, #1
 8008070:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008074:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008078:	f080 809a 	bcs.w	80081b0 <__adddf3+0x240>
 800807c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008080:	bf08      	it	eq
 8008082:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008086:	f150 0000 	adcs.w	r0, r0, #0
 800808a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800808e:	ea41 0105 	orr.w	r1, r1, r5
 8008092:	bd30      	pop	{r4, r5, pc}
 8008094:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008098:	4140      	adcs	r0, r0
 800809a:	eb41 0101 	adc.w	r1, r1, r1
 800809e:	3c01      	subs	r4, #1
 80080a0:	bf28      	it	cs
 80080a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80080a6:	d2e9      	bcs.n	800807c <__adddf3+0x10c>
 80080a8:	f091 0f00 	teq	r1, #0
 80080ac:	bf04      	itt	eq
 80080ae:	4601      	moveq	r1, r0
 80080b0:	2000      	moveq	r0, #0
 80080b2:	fab1 f381 	clz	r3, r1
 80080b6:	bf08      	it	eq
 80080b8:	3320      	addeq	r3, #32
 80080ba:	f1a3 030b 	sub.w	r3, r3, #11
 80080be:	f1b3 0220 	subs.w	r2, r3, #32
 80080c2:	da0c      	bge.n	80080de <__adddf3+0x16e>
 80080c4:	320c      	adds	r2, #12
 80080c6:	dd08      	ble.n	80080da <__adddf3+0x16a>
 80080c8:	f102 0c14 	add.w	ip, r2, #20
 80080cc:	f1c2 020c 	rsb	r2, r2, #12
 80080d0:	fa01 f00c 	lsl.w	r0, r1, ip
 80080d4:	fa21 f102 	lsr.w	r1, r1, r2
 80080d8:	e00c      	b.n	80080f4 <__adddf3+0x184>
 80080da:	f102 0214 	add.w	r2, r2, #20
 80080de:	bfd8      	it	le
 80080e0:	f1c2 0c20 	rsble	ip, r2, #32
 80080e4:	fa01 f102 	lsl.w	r1, r1, r2
 80080e8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80080ec:	bfdc      	itt	le
 80080ee:	ea41 010c 	orrle.w	r1, r1, ip
 80080f2:	4090      	lslle	r0, r2
 80080f4:	1ae4      	subs	r4, r4, r3
 80080f6:	bfa2      	ittt	ge
 80080f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080fc:	4329      	orrge	r1, r5
 80080fe:	bd30      	popge	{r4, r5, pc}
 8008100:	ea6f 0404 	mvn.w	r4, r4
 8008104:	3c1f      	subs	r4, #31
 8008106:	da1c      	bge.n	8008142 <__adddf3+0x1d2>
 8008108:	340c      	adds	r4, #12
 800810a:	dc0e      	bgt.n	800812a <__adddf3+0x1ba>
 800810c:	f104 0414 	add.w	r4, r4, #20
 8008110:	f1c4 0220 	rsb	r2, r4, #32
 8008114:	fa20 f004 	lsr.w	r0, r0, r4
 8008118:	fa01 f302 	lsl.w	r3, r1, r2
 800811c:	ea40 0003 	orr.w	r0, r0, r3
 8008120:	fa21 f304 	lsr.w	r3, r1, r4
 8008124:	ea45 0103 	orr.w	r1, r5, r3
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	f1c4 040c 	rsb	r4, r4, #12
 800812e:	f1c4 0220 	rsb	r2, r4, #32
 8008132:	fa20 f002 	lsr.w	r0, r0, r2
 8008136:	fa01 f304 	lsl.w	r3, r1, r4
 800813a:	ea40 0003 	orr.w	r0, r0, r3
 800813e:	4629      	mov	r1, r5
 8008140:	bd30      	pop	{r4, r5, pc}
 8008142:	fa21 f004 	lsr.w	r0, r1, r4
 8008146:	4629      	mov	r1, r5
 8008148:	bd30      	pop	{r4, r5, pc}
 800814a:	f094 0f00 	teq	r4, #0
 800814e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008152:	bf06      	itte	eq
 8008154:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008158:	3401      	addeq	r4, #1
 800815a:	3d01      	subne	r5, #1
 800815c:	e74e      	b.n	8007ffc <__adddf3+0x8c>
 800815e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008162:	bf18      	it	ne
 8008164:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008168:	d029      	beq.n	80081be <__adddf3+0x24e>
 800816a:	ea94 0f05 	teq	r4, r5
 800816e:	bf08      	it	eq
 8008170:	ea90 0f02 	teqeq	r0, r2
 8008174:	d005      	beq.n	8008182 <__adddf3+0x212>
 8008176:	ea54 0c00 	orrs.w	ip, r4, r0
 800817a:	bf04      	itt	eq
 800817c:	4619      	moveq	r1, r3
 800817e:	4610      	moveq	r0, r2
 8008180:	bd30      	pop	{r4, r5, pc}
 8008182:	ea91 0f03 	teq	r1, r3
 8008186:	bf1e      	ittt	ne
 8008188:	2100      	movne	r1, #0
 800818a:	2000      	movne	r0, #0
 800818c:	bd30      	popne	{r4, r5, pc}
 800818e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008192:	d105      	bne.n	80081a0 <__adddf3+0x230>
 8008194:	0040      	lsls	r0, r0, #1
 8008196:	4149      	adcs	r1, r1
 8008198:	bf28      	it	cs
 800819a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800819e:	bd30      	pop	{r4, r5, pc}
 80081a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80081a4:	bf3c      	itt	cc
 80081a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80081aa:	bd30      	popcc	{r4, r5, pc}
 80081ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80081b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80081b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081b8:	f04f 0000 	mov.w	r0, #0
 80081bc:	bd30      	pop	{r4, r5, pc}
 80081be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80081c2:	bf1a      	itte	ne
 80081c4:	4619      	movne	r1, r3
 80081c6:	4610      	movne	r0, r2
 80081c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80081cc:	bf1c      	itt	ne
 80081ce:	460b      	movne	r3, r1
 80081d0:	4602      	movne	r2, r0
 80081d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80081d6:	bf06      	itte	eq
 80081d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80081dc:	ea91 0f03 	teqeq	r1, r3
 80081e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80081e4:	bd30      	pop	{r4, r5, pc}
 80081e6:	bf00      	nop

080081e8 <__aeabi_ui2d>:
 80081e8:	f090 0f00 	teq	r0, #0
 80081ec:	bf04      	itt	eq
 80081ee:	2100      	moveq	r1, #0
 80081f0:	4770      	bxeq	lr
 80081f2:	b530      	push	{r4, r5, lr}
 80081f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081fc:	f04f 0500 	mov.w	r5, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	e750      	b.n	80080a8 <__adddf3+0x138>
 8008206:	bf00      	nop

08008208 <__aeabi_i2d>:
 8008208:	f090 0f00 	teq	r0, #0
 800820c:	bf04      	itt	eq
 800820e:	2100      	moveq	r1, #0
 8008210:	4770      	bxeq	lr
 8008212:	b530      	push	{r4, r5, lr}
 8008214:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008218:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800821c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008220:	bf48      	it	mi
 8008222:	4240      	negmi	r0, r0
 8008224:	f04f 0100 	mov.w	r1, #0
 8008228:	e73e      	b.n	80080a8 <__adddf3+0x138>
 800822a:	bf00      	nop

0800822c <__aeabi_f2d>:
 800822c:	0042      	lsls	r2, r0, #1
 800822e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008232:	ea4f 0131 	mov.w	r1, r1, rrx
 8008236:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800823a:	bf1f      	itttt	ne
 800823c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008244:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008248:	4770      	bxne	lr
 800824a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800824e:	bf08      	it	eq
 8008250:	4770      	bxeq	lr
 8008252:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008256:	bf04      	itt	eq
 8008258:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800825c:	4770      	bxeq	lr
 800825e:	b530      	push	{r4, r5, lr}
 8008260:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800826c:	e71c      	b.n	80080a8 <__adddf3+0x138>
 800826e:	bf00      	nop

08008270 <__aeabi_ul2d>:
 8008270:	ea50 0201 	orrs.w	r2, r0, r1
 8008274:	bf08      	it	eq
 8008276:	4770      	bxeq	lr
 8008278:	b530      	push	{r4, r5, lr}
 800827a:	f04f 0500 	mov.w	r5, #0
 800827e:	e00a      	b.n	8008296 <__aeabi_l2d+0x16>

08008280 <__aeabi_l2d>:
 8008280:	ea50 0201 	orrs.w	r2, r0, r1
 8008284:	bf08      	it	eq
 8008286:	4770      	bxeq	lr
 8008288:	b530      	push	{r4, r5, lr}
 800828a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800828e:	d502      	bpl.n	8008296 <__aeabi_l2d+0x16>
 8008290:	4240      	negs	r0, r0
 8008292:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008296:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800829a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800829e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80082a2:	f43f aed8 	beq.w	8008056 <__adddf3+0xe6>
 80082a6:	f04f 0203 	mov.w	r2, #3
 80082aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082ae:	bf18      	it	ne
 80082b0:	3203      	addne	r2, #3
 80082b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082b6:	bf18      	it	ne
 80082b8:	3203      	addne	r2, #3
 80082ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80082be:	f1c2 0320 	rsb	r3, r2, #32
 80082c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80082c6:	fa20 f002 	lsr.w	r0, r0, r2
 80082ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80082ce:	ea40 000e 	orr.w	r0, r0, lr
 80082d2:	fa21 f102 	lsr.w	r1, r1, r2
 80082d6:	4414      	add	r4, r2
 80082d8:	e6bd      	b.n	8008056 <__adddf3+0xe6>
 80082da:	bf00      	nop

080082dc <__aeabi_fmul>:
 80082dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082e4:	bf1e      	ittt	ne
 80082e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082ea:	ea92 0f0c 	teqne	r2, ip
 80082ee:	ea93 0f0c 	teqne	r3, ip
 80082f2:	d06f      	beq.n	80083d4 <__aeabi_fmul+0xf8>
 80082f4:	441a      	add	r2, r3
 80082f6:	ea80 0c01 	eor.w	ip, r0, r1
 80082fa:	0240      	lsls	r0, r0, #9
 80082fc:	bf18      	it	ne
 80082fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8008302:	d01e      	beq.n	8008342 <__aeabi_fmul+0x66>
 8008304:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008308:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800830c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008310:	fba0 3101 	umull	r3, r1, r0, r1
 8008314:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008318:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800831c:	bf3e      	ittt	cc
 800831e:	0049      	lslcc	r1, r1, #1
 8008320:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8008324:	005b      	lslcc	r3, r3, #1
 8008326:	ea40 0001 	orr.w	r0, r0, r1
 800832a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800832e:	2afd      	cmp	r2, #253	; 0xfd
 8008330:	d81d      	bhi.n	800836e <__aeabi_fmul+0x92>
 8008332:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008336:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800833a:	bf08      	it	eq
 800833c:	f020 0001 	biceq.w	r0, r0, #1
 8008340:	4770      	bx	lr
 8008342:	f090 0f00 	teq	r0, #0
 8008346:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800834a:	bf08      	it	eq
 800834c:	0249      	lsleq	r1, r1, #9
 800834e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008352:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8008356:	3a7f      	subs	r2, #127	; 0x7f
 8008358:	bfc2      	ittt	gt
 800835a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800835e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008362:	4770      	bxgt	lr
 8008364:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008368:	f04f 0300 	mov.w	r3, #0
 800836c:	3a01      	subs	r2, #1
 800836e:	dc5d      	bgt.n	800842c <__aeabi_fmul+0x150>
 8008370:	f112 0f19 	cmn.w	r2, #25
 8008374:	bfdc      	itt	le
 8008376:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800837a:	4770      	bxle	lr
 800837c:	f1c2 0200 	rsb	r2, r2, #0
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa21 f102 	lsr.w	r1, r1, r2
 8008386:	f1c2 0220 	rsb	r2, r2, #32
 800838a:	fa00 fc02 	lsl.w	ip, r0, r2
 800838e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008392:	f140 0000 	adc.w	r0, r0, #0
 8008396:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800839a:	bf08      	it	eq
 800839c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80083a0:	4770      	bx	lr
 80083a2:	f092 0f00 	teq	r2, #0
 80083a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083aa:	bf02      	ittt	eq
 80083ac:	0040      	lsleq	r0, r0, #1
 80083ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083b2:	3a01      	subeq	r2, #1
 80083b4:	d0f9      	beq.n	80083aa <__aeabi_fmul+0xce>
 80083b6:	ea40 000c 	orr.w	r0, r0, ip
 80083ba:	f093 0f00 	teq	r3, #0
 80083be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083c2:	bf02      	ittt	eq
 80083c4:	0049      	lsleq	r1, r1, #1
 80083c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083ca:	3b01      	subeq	r3, #1
 80083cc:	d0f9      	beq.n	80083c2 <__aeabi_fmul+0xe6>
 80083ce:	ea41 010c 	orr.w	r1, r1, ip
 80083d2:	e78f      	b.n	80082f4 <__aeabi_fmul+0x18>
 80083d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d8:	ea92 0f0c 	teq	r2, ip
 80083dc:	bf18      	it	ne
 80083de:	ea93 0f0c 	teqne	r3, ip
 80083e2:	d00a      	beq.n	80083fa <__aeabi_fmul+0x11e>
 80083e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80083e8:	bf18      	it	ne
 80083ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80083ee:	d1d8      	bne.n	80083a2 <__aeabi_fmul+0xc6>
 80083f0:	ea80 0001 	eor.w	r0, r0, r1
 80083f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083f8:	4770      	bx	lr
 80083fa:	f090 0f00 	teq	r0, #0
 80083fe:	bf17      	itett	ne
 8008400:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8008404:	4608      	moveq	r0, r1
 8008406:	f091 0f00 	teqne	r1, #0
 800840a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800840e:	d014      	beq.n	800843a <__aeabi_fmul+0x15e>
 8008410:	ea92 0f0c 	teq	r2, ip
 8008414:	d101      	bne.n	800841a <__aeabi_fmul+0x13e>
 8008416:	0242      	lsls	r2, r0, #9
 8008418:	d10f      	bne.n	800843a <__aeabi_fmul+0x15e>
 800841a:	ea93 0f0c 	teq	r3, ip
 800841e:	d103      	bne.n	8008428 <__aeabi_fmul+0x14c>
 8008420:	024b      	lsls	r3, r1, #9
 8008422:	bf18      	it	ne
 8008424:	4608      	movne	r0, r1
 8008426:	d108      	bne.n	800843a <__aeabi_fmul+0x15e>
 8008428:	ea80 0001 	eor.w	r0, r0, r1
 800842c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008430:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008434:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008438:	4770      	bx	lr
 800843a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800843e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8008442:	4770      	bx	lr

08008444 <__aeabi_fdiv>:
 8008444:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008448:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800844c:	bf1e      	ittt	ne
 800844e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008452:	ea92 0f0c 	teqne	r2, ip
 8008456:	ea93 0f0c 	teqne	r3, ip
 800845a:	d069      	beq.n	8008530 <__aeabi_fdiv+0xec>
 800845c:	eba2 0203 	sub.w	r2, r2, r3
 8008460:	ea80 0c01 	eor.w	ip, r0, r1
 8008464:	0249      	lsls	r1, r1, #9
 8008466:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800846a:	d037      	beq.n	80084dc <__aeabi_fdiv+0x98>
 800846c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008470:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008474:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008478:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800847c:	428b      	cmp	r3, r1
 800847e:	bf38      	it	cc
 8008480:	005b      	lslcc	r3, r3, #1
 8008482:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008486:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800848a:	428b      	cmp	r3, r1
 800848c:	bf24      	itt	cs
 800848e:	1a5b      	subcs	r3, r3, r1
 8008490:	ea40 000c 	orrcs.w	r0, r0, ip
 8008494:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008498:	bf24      	itt	cs
 800849a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800849e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80084a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80084a6:	bf24      	itt	cs
 80084a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80084ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80084b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80084b4:	bf24      	itt	cs
 80084b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80084ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80084be:	011b      	lsls	r3, r3, #4
 80084c0:	bf18      	it	ne
 80084c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80084c6:	d1e0      	bne.n	800848a <__aeabi_fdiv+0x46>
 80084c8:	2afd      	cmp	r2, #253	; 0xfd
 80084ca:	f63f af50 	bhi.w	800836e <__aeabi_fmul+0x92>
 80084ce:	428b      	cmp	r3, r1
 80084d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80084d4:	bf08      	it	eq
 80084d6:	f020 0001 	biceq.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80084e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80084e4:	327f      	adds	r2, #127	; 0x7f
 80084e6:	bfc2      	ittt	gt
 80084e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80084ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80084f0:	4770      	bxgt	lr
 80084f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80084f6:	f04f 0300 	mov.w	r3, #0
 80084fa:	3a01      	subs	r2, #1
 80084fc:	e737      	b.n	800836e <__aeabi_fmul+0x92>
 80084fe:	f092 0f00 	teq	r2, #0
 8008502:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008506:	bf02      	ittt	eq
 8008508:	0040      	lsleq	r0, r0, #1
 800850a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800850e:	3a01      	subeq	r2, #1
 8008510:	d0f9      	beq.n	8008506 <__aeabi_fdiv+0xc2>
 8008512:	ea40 000c 	orr.w	r0, r0, ip
 8008516:	f093 0f00 	teq	r3, #0
 800851a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800851e:	bf02      	ittt	eq
 8008520:	0049      	lsleq	r1, r1, #1
 8008522:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008526:	3b01      	subeq	r3, #1
 8008528:	d0f9      	beq.n	800851e <__aeabi_fdiv+0xda>
 800852a:	ea41 010c 	orr.w	r1, r1, ip
 800852e:	e795      	b.n	800845c <__aeabi_fdiv+0x18>
 8008530:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008534:	ea92 0f0c 	teq	r2, ip
 8008538:	d108      	bne.n	800854c <__aeabi_fdiv+0x108>
 800853a:	0242      	lsls	r2, r0, #9
 800853c:	f47f af7d 	bne.w	800843a <__aeabi_fmul+0x15e>
 8008540:	ea93 0f0c 	teq	r3, ip
 8008544:	f47f af70 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008548:	4608      	mov	r0, r1
 800854a:	e776      	b.n	800843a <__aeabi_fmul+0x15e>
 800854c:	ea93 0f0c 	teq	r3, ip
 8008550:	d104      	bne.n	800855c <__aeabi_fdiv+0x118>
 8008552:	024b      	lsls	r3, r1, #9
 8008554:	f43f af4c 	beq.w	80083f0 <__aeabi_fmul+0x114>
 8008558:	4608      	mov	r0, r1
 800855a:	e76e      	b.n	800843a <__aeabi_fmul+0x15e>
 800855c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008560:	bf18      	it	ne
 8008562:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008566:	d1ca      	bne.n	80084fe <__aeabi_fdiv+0xba>
 8008568:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800856c:	f47f af5c 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008570:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008574:	f47f af3c 	bne.w	80083f0 <__aeabi_fmul+0x114>
 8008578:	e75f      	b.n	800843a <__aeabi_fmul+0x15e>
 800857a:	bf00      	nop

0800857c <__aeabi_f2uiz>:
 800857c:	0042      	lsls	r2, r0, #1
 800857e:	d20e      	bcs.n	800859e <__aeabi_f2uiz+0x22>
 8008580:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008584:	d30b      	bcc.n	800859e <__aeabi_f2uiz+0x22>
 8008586:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800858a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800858e:	d409      	bmi.n	80085a4 <__aeabi_f2uiz+0x28>
 8008590:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008594:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008598:	fa23 f002 	lsr.w	r0, r3, r2
 800859c:	4770      	bx	lr
 800859e:	f04f 0000 	mov.w	r0, #0
 80085a2:	4770      	bx	lr
 80085a4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80085a8:	d101      	bne.n	80085ae <__aeabi_f2uiz+0x32>
 80085aa:	0242      	lsls	r2, r0, #9
 80085ac:	d102      	bne.n	80085b4 <__aeabi_f2uiz+0x38>
 80085ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80085b2:	4770      	bx	lr
 80085b4:	f04f 0000 	mov.w	r0, #0
 80085b8:	4770      	bx	lr
 80085ba:	bf00      	nop

080085bc <Reset_Handler>:
 80085bc:	2100      	movs	r1, #0
 80085be:	e003      	b.n	80085c8 <DataInit>

080085c0 <CopyData>:
 80085c0:	4b0a      	ldr	r3, [pc, #40]	; (80085ec <Zerobss+0x10>)
 80085c2:	585b      	ldr	r3, [r3, r1]
 80085c4:	5043      	str	r3, [r0, r1]
 80085c6:	3104      	adds	r1, #4

080085c8 <DataInit>:
 80085c8:	4809      	ldr	r0, [pc, #36]	; (80085f0 <Zerobss+0x14>)
 80085ca:	4b0a      	ldr	r3, [pc, #40]	; (80085f4 <Zerobss+0x18>)
 80085cc:	1842      	adds	r2, r0, r1
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d3f6      	bcc.n	80085c0 <CopyData>
 80085d2:	4a09      	ldr	r2, [pc, #36]	; (80085f8 <Zerobss+0x1c>)
 80085d4:	e002      	b.n	80085dc <Zerobss>

080085d6 <FillZerobss>:
 80085d6:	2300      	movs	r3, #0
 80085d8:	f842 3b04 	str.w	r3, [r2], #4

080085dc <Zerobss>:
 80085dc:	4b07      	ldr	r3, [pc, #28]	; (80085fc <Zerobss+0x20>)
 80085de:	429a      	cmp	r2, r3
 80085e0:	d3f9      	bcc.n	80085d6 <FillZerobss>
 80085e2:	f00b fd45 	bl	8014070 <SystemInit>
 80085e6:	f000 fa15 	bl	8008a14 <main>
 80085ea:	4770      	bx	lr
 80085ec:	080191e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, pc}
 80085f0:	20000000 	andcs	r0, r0, r0
 80085f4:	200000e8 	andcs	r0, r0, r8, ror #1
 80085f8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085fc:	2002b278 	andcs	fp, r2, r8, ror r2

08008600 <ADC0_1_IRQHandler>:
 8008600:	e7fe      	b.n	8008600 <ADC0_1_IRQHandler>

08008602 <memcpy>:
 8008602:	b510      	push	{r4, lr}
 8008604:	1e43      	subs	r3, r0, #1
 8008606:	440a      	add	r2, r1
 8008608:	4291      	cmp	r1, r2
 800860a:	d100      	bne.n	800860e <memcpy+0xc>
 800860c:	bd10      	pop	{r4, pc}
 800860e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008612:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008616:	e7f7      	b.n	8008608 <memcpy+0x6>

08008618 <DisplayHandler::~DisplayHandler()>:
 8008618:	4770      	bx	lr

0800861a <PixelDmxStartStop::~PixelDmxStartStop()>:
 800861a:	4770      	bx	lr

0800861c <PixelDmxStartStop::Start()>:
 800861c:	2204      	movs	r2, #4
 800861e:	4b01      	ldr	r3, [pc, #4]	; (8008624 <PixelDmxStartStop::Start()+0x8>)
 8008620:	611a      	str	r2, [r3, #16]
 8008622:	4770      	bx	lr
 8008624:	40011000 	andmi	r1, r1, r0

08008628 <PixelDmxStartStop::Stop()>:
 8008628:	2204      	movs	r2, #4
 800862a:	4b01      	ldr	r3, [pc, #4]	; (8008630 <PixelDmxStartStop::Stop()+0x8>)
 800862c:	615a      	str	r2, [r3, #20]
 800862e:	4770      	bx	lr
 8008630:	40011000 	andmi	r1, r1, r0

08008634 <RDMNetDevice::CopyUID(unsigned char*)>:
 8008634:	460b      	mov	r3, r1
 8008636:	2206      	movs	r2, #6
 8008638:	1d01      	adds	r1, r0, #4
 800863a:	4618      	mov	r0, r3
 800863c:	f7ff bfe1 	b.w	8008602 <memcpy>

08008640 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8008640:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008644:	e7f6      	b.n	8008634 <RDMNetDevice::CopyUID(unsigned char*)>
	...

08008648 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008648:	4608      	mov	r0, r1
 800864a:	2210      	movs	r2, #16
 800864c:	4901      	ldr	r1, [pc, #4]	; (8008654 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 800864e:	f7ff bfd8 	b.w	8008602 <memcpy>
 8008652:	bf00      	nop
 8008654:	2000c857 	andcs	ip, r0, r7, asr r8

08008658 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008658:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800865c:	e7f4      	b.n	8008648 <RDMNetDevice::CopyCID(unsigned char*)>
 800865e:	bf00      	nop

08008660 <FactoryDefaults::~FactoryDefaults()>:
 8008660:	4770      	bx	lr

08008662 <DisplayHandler::~DisplayHandler()>:
 8008662:	b510      	push	{r4, lr}
 8008664:	4604      	mov	r4, r0
 8008666:	f00b faaf 	bl	8013bc8 <operator delete(void*)>
 800866a:	4620      	mov	r0, r4
 800866c:	bd10      	pop	{r4, pc}

0800866e <PixelDmxStartStop::~PixelDmxStartStop()>:
 800866e:	b510      	push	{r4, lr}
 8008670:	4604      	mov	r4, r0
 8008672:	f00b faa9 	bl	8013bc8 <operator delete(void*)>
 8008676:	4620      	mov	r0, r4
 8008678:	bd10      	pop	{r4, pc}

0800867a <FactoryDefaults::~FactoryDefaults()>:
 800867a:	b510      	push	{r4, lr}
 800867c:	4604      	mov	r4, r0
 800867e:	f00b faa3 	bl	8013bc8 <operator delete(void*)>
 8008682:	4620      	mov	r0, r4
 8008684:	bd10      	pop	{r4, pc}
	...

08008688 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008688:	b510      	push	{r4, lr}
 800868a:	4c03      	ldr	r4, [pc, #12]	; (8008698 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 800868c:	30d0      	adds	r0, #208	; 0xd0
 800868e:	4622      	mov	r2, r4
 8008690:	f004 fdec 	bl	800d26c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8008694:	4620      	mov	r0, r4
 8008696:	bd10      	pop	{r4, pc}
 8008698:	2000c758 	andcs	ip, r0, r8, asr r7

0800869c <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800869c:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80086a0:	e7f2      	b.n	8008688 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80086a2:	bf00      	nop

080086a4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80086a4:	b110      	cbz	r0, 80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80086a6:	6803      	ldr	r3, [r0, #0]
 80086a8:	6a1b      	ldr	r3, [r3, #32]
 80086aa:	4718      	bx	r3
 80086ac:	4770      	bx	lr

080086ae <Display::PutChar(int) [clone .isra.0]>:
 80086ae:	b110      	cbz	r0, 80086b6 <Display::PutChar(int) [clone .isra.0]+0x8>
 80086b0:	6803      	ldr	r3, [r0, #0]
 80086b2:	695b      	ldr	r3, [r3, #20]
 80086b4:	4718      	bx	r3
 80086b6:	4770      	bx	lr

080086b8 <DisplayHandler::Print(unsigned int)>:
 80086b8:	b538      	push	{r3, r4, r5, lr}
 80086ba:	7903      	ldrb	r3, [r0, #4]
 80086bc:	b1f3      	cbz	r3, 80086fc <DisplayHandler::Print(unsigned int)+0x44>
 80086be:	2904      	cmp	r1, #4
 80086c0:	bf98      	it	ls
 80086c2:	4b0f      	ldrls	r3, [pc, #60]	; (8008700 <DisplayHandler::Print(unsigned int)+0x48>)
 80086c4:	4d0f      	ldr	r5, [pc, #60]	; (8008704 <DisplayHandler::Print(unsigned int)+0x4c>)
 80086c6:	bf98      	it	ls
 80086c8:	5c5c      	ldrbls	r4, [r3, r1]
 80086ca:	682b      	ldr	r3, [r5, #0]
 80086cc:	bf88      	it	hi
 80086ce:	2455      	movhi	r4, #85	; 0x55
 80086d0:	6998      	ldr	r0, [r3, #24]
 80086d2:	b178      	cbz	r0, 80086f4 <DisplayHandler::Print(unsigned int)+0x3c>
 80086d4:	7901      	ldrb	r1, [r0, #4]
 80086d6:	3901      	subs	r1, #1
 80086d8:	b2c9      	uxtb	r1, r1
 80086da:	b168      	cbz	r0, 80086f8 <DisplayHandler::Print(unsigned int)+0x40>
 80086dc:	7942      	ldrb	r2, [r0, #5]
 80086de:	3a01      	subs	r2, #1
 80086e0:	b2d2      	uxtb	r2, r2
 80086e2:	f7ff ffdf 	bl	80086a4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086e6:	682b      	ldr	r3, [r5, #0]
 80086e8:	4621      	mov	r1, r4
 80086ea:	6998      	ldr	r0, [r3, #24]
 80086ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086f0:	f7ff bfdd 	b.w	80086ae <Display::PutChar(int) [clone .isra.0]>
 80086f4:	4601      	mov	r1, r0
 80086f6:	e7ee      	b.n	80086d6 <DisplayHandler::Print(unsigned int)+0x1e>
 80086f8:	4602      	mov	r2, r0
 80086fa:	e7f0      	b.n	80086de <DisplayHandler::Print(unsigned int)+0x26>
 80086fc:	bd38      	pop	{r3, r4, r5, pc}
 80086fe:	bf00      	nop
 8008700:	080162a8 	stmdaeq	r1, {r3, r5, r7, r9, sp, lr}
 8008704:	2001d88c 	andcs	sp, r1, ip, lsl #17

08008708 <RDMNetDevice::~RDMNetDevice()>:
 8008708:	b510      	push	{r4, lr}
 800870a:	4604      	mov	r4, r0
 800870c:	4b05      	ldr	r3, [pc, #20]	; (8008724 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 800870e:	f840 3b88 	str.w	r3, [r0], #136
 8008712:	f004 f853 	bl	800c7bc <RDMSubDevices::~RDMSubDevices()>
 8008716:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800871a:	f004 f82f 	bl	800c77c <RDMSensors::~RDMSensors()>
 800871e:	4620      	mov	r0, r4
 8008720:	bd10      	pop	{r4, pc}
 8008722:	bf00      	nop
 8008724:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}

08008728 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008728:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800872c:	e7ec      	b.n	8008708 <RDMNetDevice::~RDMNetDevice()>
 800872e:	bf00      	nop

08008730 <RDMNetDevice::~RDMNetDevice()>:
 8008730:	b510      	push	{r4, lr}
 8008732:	4604      	mov	r4, r0
 8008734:	f7ff ffe8 	bl	8008708 <RDMNetDevice::~RDMNetDevice()>
 8008738:	4620      	mov	r0, r4
 800873a:	f00b fa45 	bl	8013bc8 <operator delete(void*)>
 800873e:	4620      	mov	r0, r4
 8008740:	bd10      	pop	{r4, pc}

08008742 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008742:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008746:	e7f3      	b.n	8008730 <RDMNetDevice::~RDMNetDevice()>

08008748 <Display::Printf(unsigned char, char const*, ...)>:
 8008748:	b40c      	push	{r2, r3}
 800874a:	b570      	push	{r4, r5, r6, lr}
 800874c:	6984      	ldr	r4, [r0, #24]
 800874e:	4605      	mov	r5, r0
 8008750:	460e      	mov	r6, r1
 8008752:	b08a      	sub	sp, #40	; 0x28
 8008754:	b174      	cbz	r4, 8008774 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8008756:	ab0f      	add	r3, sp, #60	; 0x3c
 8008758:	2120      	movs	r1, #32
 800875a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800875c:	a802      	add	r0, sp, #8
 800875e:	9301      	str	r3, [sp, #4]
 8008760:	f000 ff96 	bl	8009690 <vsnprintf>
 8008764:	4604      	mov	r4, r0
 8008766:	69a8      	ldr	r0, [r5, #24]
 8008768:	4631      	mov	r1, r6
 800876a:	6803      	ldr	r3, [r0, #0]
 800876c:	aa02      	add	r2, sp, #8
 800876e:	69dd      	ldr	r5, [r3, #28]
 8008770:	b2a3      	uxth	r3, r4
 8008772:	47a8      	blx	r5
 8008774:	4620      	mov	r0, r4
 8008776:	b00a      	add	sp, #40	; 0x28
 8008778:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800877c:	b002      	add	sp, #8
 800877e:	4770      	bx	lr

08008780 <Display::TextStatus(char const*)>:
 8008780:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008784:	4604      	mov	r4, r0
 8008786:	6980      	ldr	r0, [r0, #24]
 8008788:	460d      	mov	r5, r1
 800878a:	b360      	cbz	r0, 80087e6 <Display::TextStatus(char const*)+0x66>
 800878c:	7947      	ldrb	r7, [r0, #5]
 800878e:	2100      	movs	r1, #0
 8008790:	1e7e      	subs	r6, r7, #1
 8008792:	b2f6      	uxtb	r6, r6
 8008794:	4632      	mov	r2, r6
 8008796:	f890 9004 	ldrb.w	r9, [r0, #4]
 800879a:	f04f 0800 	mov.w	r8, #0
 800879e:	f7ff ff81 	bl	80086a4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087a2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087a6:	45c1      	cmp	r9, r8
 80087a8:	69a0      	ldr	r0, [r4, #24]
 80087aa:	d816      	bhi.n	80087da <Display::TextStatus(char const*)+0x5a>
 80087ac:	4632      	mov	r2, r6
 80087ae:	2100      	movs	r1, #0
 80087b0:	f7ff ff78 	bl	80086a4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087b4:	69a0      	ldr	r0, [r4, #24]
 80087b6:	b1b0      	cbz	r0, 80087e6 <Display::TextStatus(char const*)+0x66>
 80087b8:	2300      	movs	r3, #0
 80087ba:	7901      	ldrb	r1, [r0, #4]
 80087bc:	5cea      	ldrb	r2, [r5, r3]
 80087be:	b11a      	cbz	r2, 80087c8 <Display::TextStatus(char const*)+0x48>
 80087c0:	1c5a      	adds	r2, r3, #1
 80087c2:	4299      	cmp	r1, r3
 80087c4:	4613      	mov	r3, r2
 80087c6:	dcf9      	bgt.n	80087bc <Display::TextStatus(char const*)+0x3c>
 80087c8:	6802      	ldr	r2, [r0, #0]
 80087ca:	4639      	mov	r1, r7
 80087cc:	69d4      	ldr	r4, [r2, #28]
 80087ce:	b2db      	uxtb	r3, r3
 80087d0:	462a      	mov	r2, r5
 80087d2:	46a4      	mov	ip, r4
 80087d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087d8:	4760      	bx	ip
 80087da:	2120      	movs	r1, #32
 80087dc:	f7ff ff67 	bl	80086ae <Display::PutChar(int) [clone .isra.0]>
 80087e0:	f108 0801 	add.w	r8, r8, #1
 80087e4:	e7df      	b.n	80087a6 <Display::TextStatus(char const*)+0x26>
 80087e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80087ea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087ec:	4605      	mov	r5, r0
 80087ee:	461e      	mov	r6, r3
 80087f0:	460f      	mov	r7, r1
 80087f2:	4614      	mov	r4, r2
 80087f4:	f7ff ffc4 	bl	8008780 <Display::TextStatus(char const*)>
 80087f8:	7c6b      	ldrb	r3, [r5, #17]
 80087fa:	b19b      	cbz	r3, 8008824 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 80087fc:	43e2      	mvns	r2, r4
 80087fe:	2312      	movs	r3, #18
 8008800:	7a28      	ldrb	r0, [r5, #8]
 8008802:	f88d 3004 	strb.w	r3, [sp, #4]
 8008806:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800880a:	f88d 3005 	strb.w	r3, [sp, #5]
 800880e:	f88d 2006 	strb.w	r2, [sp, #6]
 8008812:	f00c fbc7 	bl	8014fa4 <gd32_i2c_set_address>
 8008816:	68e8      	ldr	r0, [r5, #12]
 8008818:	f00c fbbc 	bl	8014f94 <gd32_i2c_set_baudrate>
 800881c:	2103      	movs	r1, #3
 800881e:	a801      	add	r0, sp, #4
 8008820:	f00c fbc6 	bl	8014fb0 <gd32_i2c_write>
 8008824:	1c73      	adds	r3, r6, #1
 8008826:	d006      	beq.n	8008836 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008828:	4639      	mov	r1, r7
 800882a:	4630      	mov	r0, r6
 800882c:	b003      	add	sp, #12
 800882e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008832:	f00b b86d 	b.w	8013910 <console_status>
 8008836:	b003      	add	sp, #12
 8008838:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800883c <Display::SetSleep(bool)>:
 800883c:	b538      	push	{r3, r4, r5, lr}
 800883e:	4604      	mov	r4, r0
 8008840:	6980      	ldr	r0, [r0, #24]
 8008842:	460d      	mov	r5, r1
 8008844:	b138      	cbz	r0, 8008856 <Display::SetSleep(bool)+0x1a>
 8008846:	6803      	ldr	r3, [r0, #0]
 8008848:	7421      	strb	r1, [r4, #16]
 800884a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800884c:	4798      	blx	r3
 800884e:	b915      	cbnz	r5, 8008856 <Display::SetSleep(bool)+0x1a>
 8008850:	4b01      	ldr	r3, [pc, #4]	; (8008858 <Display::SetSleep(bool)+0x1c>)
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	6063      	str	r3, [r4, #4]
 8008856:	bd38      	pop	{r3, r4, r5, pc}
 8008858:	2001d994 	mulcs	r1, r4, r9

0800885c <display::timeout::gpio_init()>:
 800885c:	b510      	push	{r4, lr}
 800885e:	f240 6003 	movw	r0, #1539	; 0x603
 8008862:	f00b fe3d 	bl	80144e0 <rcu_periph_clock_enable>
 8008866:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800886a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800886e:	2203      	movs	r2, #3
 8008870:	2148      	movs	r1, #72	; 0x48
 8008872:	4801      	ldr	r0, [pc, #4]	; (8008878 <display::timeout::gpio_init()+0x1c>)
 8008874:	f00b bd9c 	b.w	80143b0 <gpio_init>
 8008878:	40010c00 	andmi	r0, r1, r0, lsl #24

0800887c <display::timeout::gpio_renew()>:
 800887c:	4b03      	ldr	r3, [pc, #12]	; (800888c <display::timeout::gpio_renew()+0x10>)
 800887e:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008882:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 8008886:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800888a:	4770      	bx	lr
 800888c:	40010000 	andmi	r0, r1, r0

08008890 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)>:
 8008890:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008894:	460f      	mov	r7, r1
 8008896:	4611      	mov	r1, r2
 8008898:	4605      	mov	r5, r0
 800889a:	f006 f875 	bl	800e988 <PixelPatterns::PixelPatterns(unsigned int)>
 800889e:	4b38      	ldr	r3, [pc, #224]	; (8008980 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xf0>)
 80088a0:	2f05      	cmp	r7, #5
 80088a2:	601f      	str	r7, [r3, #0]
 80088a4:	dc18      	bgt.n	80088d8 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x48>
 80088a6:	2400      	movs	r4, #0
 80088a8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8008984 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xf4>
 80088ac:	f8df 90d8 	ldr.w	r9, [pc, #216]	; 8008988 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xf8>
 80088b0:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 800898c <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xfc>
 80088b4:	2f05      	cmp	r7, #5
 80088b6:	d80a      	bhi.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 80088b8:	e8df f007 	tbb	[pc, r7]
 80088bc:	1c120339 	ldcne	3, cr0, [r2], {57}	; 0x39
 80088c0:	23002d25 	movwcs	r2, #3365	; 0xd25
 80088c4:	2264      	movs	r2, #100	; 0x64
 80088c6:	4621      	mov	r1, r4
 80088c8:	4628      	mov	r0, r5
 80088ca:	f006 f88f 	bl	800e9ec <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 80088ce:	3401      	adds	r4, #1
 80088d0:	2c08      	cmp	r4, #8
 80088d2:	f108 0820 	add.w	r8, r8, #32
 80088d6:	d1ed      	bne.n	80088b4 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x24>
 80088d8:	4628      	mov	r0, r5
 80088da:	b004      	add	sp, #16
 80088dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80088e0:	2364      	movs	r3, #100	; 0x64
 80088e2:	2200      	movs	r2, #0
 80088e4:	4621      	mov	r1, r4
 80088e6:	e9cd 3200 	strd	r3, r2, [sp]
 80088ea:	4628      	mov	r0, r5
 80088ec:	4b28      	ldr	r3, [pc, #160]	; (8008990 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x100>)
 80088ee:	f006 f893 	bl	800ea18 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80088f2:	e7ec      	b.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 80088f4:	2300      	movs	r3, #0
 80088f6:	4621      	mov	r1, r4
 80088f8:	9300      	str	r3, [sp, #0]
 80088fa:	4628      	mov	r0, r5
 80088fc:	2364      	movs	r3, #100	; 0x64
 80088fe:	4a24      	ldr	r2, [pc, #144]	; (8008990 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x100>)
 8008900:	f006 f8a6 	bl	800ea50 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008904:	e7e3      	b.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 8008906:	2364      	movs	r3, #100	; 0x64
 8008908:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 800890c:	4621      	mov	r1, r4
 800890e:	4628      	mov	r0, r5
 8008910:	f006 f8b8 	bl	800ea84 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008914:	e7db      	b.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 8008916:	2364      	movs	r3, #100	; 0x64
 8008918:	2200      	movs	r2, #0
 800891a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800891e:	230a      	movs	r3, #10
 8008920:	4621      	mov	r1, r4
 8008922:	9300      	str	r3, [sp, #0]
 8008924:	4628      	mov	r0, r5
 8008926:	4b1a      	ldr	r3, [pc, #104]	; (8008990 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x100>)
 8008928:	f006 f8e0 	bl	800eaec <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 800892c:	e7cf      	b.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 800892e:	2600      	movs	r6, #0
 8008930:	f8c8 601c 	str.w	r6, [r8, #28]
 8008934:	f8da 3000 	ldr.w	r3, [sl]
 8008938:	f8d9 0000 	ldr.w	r0, [r9]
 800893c:	429e      	cmp	r6, r3
 800893e:	d30a      	bcc.n	8008956 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xc6>
 8008940:	f8d9 0000 	ldr.w	r0, [r9]
 8008944:	f006 fecc 	bl	800f6e0 <WS28xxMulti::IsUpdating()>
 8008948:	2800      	cmp	r0, #0
 800894a:	d1f9      	bne.n	8008940 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xb0>
 800894c:	f8d9 0000 	ldr.w	r0, [r9]
 8008950:	f006 fd86 	bl	800f460 <WS28xxMulti::Update()>
 8008954:	e7bb      	b.n	80088ce <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0x3e>
 8008956:	6803      	ldr	r3, [r0, #0]
 8008958:	2b07      	cmp	r3, #7
 800895a:	f04f 0300 	mov.w	r3, #0
 800895e:	d007      	beq.n	8008970 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xe0>
 8008960:	4632      	mov	r2, r6
 8008962:	4621      	mov	r1, r4
 8008964:	e9cd 3300 	strd	r3, r3, [sp]
 8008968:	f006 ff3c 	bl	800f7e4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800896c:	3601      	adds	r6, #1
 800896e:	e7e1      	b.n	8008934 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xa4>
 8008970:	4632      	mov	r2, r6
 8008972:	4621      	mov	r1, r4
 8008974:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8008978:	9300      	str	r3, [sp, #0]
 800897a:	f006 ffbb 	bl	800f8f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800897e:	e7f5      	b.n	800896c <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)+0xdc>
 8008980:	2000c98c 	andcs	ip, r0, ip, lsl #19
 8008984:	2000c87c 	andcs	ip, r0, ip, ror r8
 8008988:	2000c988 	andcs	ip, r0, r8, lsl #19
 800898c:	2000c984 	andcs	ip, r0, r4, lsl #19
 8008990:	00646464 	rsbeq	r6, r4, r4, ror #8

08008994 <StoreNetwork::SaveDhcp(bool)>:
 8008994:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008996:	2301      	movs	r3, #1
 8008998:	f88d 1017 	strb.w	r1, [sp, #23]
 800899c:	2100      	movs	r1, #0
 800899e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80089a2:	4805      	ldr	r0, [pc, #20]	; (80089b8 <StoreNetwork::SaveDhcp(bool)+0x24>)
 80089a4:	9300      	str	r3, [sp, #0]
 80089a6:	2214      	movs	r2, #20
 80089a8:	6800      	ldr	r0, [r0, #0]
 80089aa:	f10d 0317 	add.w	r3, sp, #23
 80089ae:	f007 f8c9 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80089b2:	b007      	add	sp, #28
 80089b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80089b8:	200159ac 	andcs	r5, r1, ip, lsr #19

080089bc <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80089bc:	f1a0 0004 	sub.w	r0, r0, #4
 80089c0:	e7e8      	b.n	8008994 <StoreNetwork::SaveDhcp(bool)>
 80089c2:	bf00      	nop

080089c4 <FactoryDefaults::Set()>:
 80089c4:	b508      	push	{r3, lr}
 80089c6:	4b08      	ldr	r3, [pc, #32]	; (80089e8 <FactoryDefaults::Set()+0x24>)
 80089c8:	2100      	movs	r1, #0
 80089ca:	6818      	ldr	r0, [r3, #0]
 80089cc:	f001 f986 	bl	8009cdc <RemoteConfig::SetDisable(bool)>
 80089d0:	4b06      	ldr	r3, [pc, #24]	; (80089ec <FactoryDefaults::Set()+0x28>)
 80089d2:	210b      	movs	r1, #11
 80089d4:	6818      	ldr	r0, [r3, #0]
 80089d6:	f007 f8a3 	bl	800fb20 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80089da:	4b05      	ldr	r3, [pc, #20]	; (80089f0 <FactoryDefaults::Set()+0x2c>)
 80089dc:	2101      	movs	r1, #1
 80089de:	6818      	ldr	r0, [r3, #0]
 80089e0:	f7ff ffd8 	bl	8008994 <StoreNetwork::SaveDhcp(bool)>
 80089e4:	bd08      	pop	{r3, pc}
 80089e6:	bf00      	nop
 80089e8:	20000114 	andcs	r0, r0, r4, lsl r1
 80089ec:	200159ac 	andcs	r5, r1, ip, lsr #19
 80089f0:	200159b8 			; <UNDEFINED> instruction: 0x200159b8

080089f4 <Hardware::RebootHandler()>:
 80089f4:	b508      	push	{r3, lr}
 80089f6:	4b05      	ldr	r3, [pc, #20]	; (8008a0c <Hardware::RebootHandler()+0x18>)
 80089f8:	6818      	ldr	r0, [r3, #0]
 80089fa:	f006 fdad 	bl	800f558 <WS28xxMulti::Blackout()>
 80089fe:	4b04      	ldr	r3, [pc, #16]	; (8008a10 <Hardware::RebootHandler()+0x1c>)
 8008a00:	6818      	ldr	r0, [r3, #0]
 8008a02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8008a06:	f002 bb25 	b.w	800b054 <E131Bridge::Stop()>
 8008a0a:	bf00      	nop
 8008a0c:	2000c994 	mulcs	r0, r4, r9
 8008a10:	2000c73c 	andcs	ip, r0, ip, lsr r7

08008a14 <main>:
 8008a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a18:	2601      	movs	r6, #1
 8008a1a:	f5ad 5d9b 	sub.w	sp, sp, #4960	; 0x1360
 8008a1e:	b083      	sub	sp, #12
 8008a20:	a806      	add	r0, sp, #24
 8008a22:	f00b f829 	bl	8013a78 <Hardware::Hardware()>
 8008a26:	a8ab      	add	r0, sp, #684	; 0x2ac
 8008a28:	f008 fd12 	bl	8011450 <Network::Network()>
 8008a2c:	a815      	add	r0, sp, #84	; 0x54
 8008a2e:	f00a ffcd 	bl	80139cc <LedBlink::LedBlink()>
 8008a32:	a87f      	add	r0, sp, #508	; 0x1fc
 8008a34:	f009 fe1c 	bl	8012670 <DisplayUdf::DisplayUdf()>
 8008a38:	4bb9      	ldr	r3, [pc, #740]	; (8008d20 <main+0x30c>)
 8008a3a:	4aba      	ldr	r2, [pc, #744]	; (8008d24 <main+0x310>)
 8008a3c:	49ba      	ldr	r1, [pc, #744]	; (8008d28 <main+0x314>)
 8008a3e:	a807      	add	r0, sp, #28
 8008a40:	f00a ff7e 	bl	8013940 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008a44:	a808      	add	r0, sp, #32
 8008a46:	f007 fbc1 	bl	80101cc <FlashRom::FlashRom()>
 8008a4a:	4db8      	ldr	r5, [pc, #736]	; (8008d2c <main+0x318>)
 8008a4c:	a809      	add	r0, sp, #36	; 0x24
 8008a4e:	f007 f841 	bl	800fad4 <SpiFlashStore::SpiFlashStore()>
 8008a52:	49b7      	ldr	r1, [pc, #732]	; (8008d30 <main+0x31c>)
 8008a54:	a807      	add	r0, sp, #28
 8008a56:	f00a ffab 	bl	80139b0 <FirmwareVersion::Print(char const*)>
 8008a5a:	2008      	movs	r0, #8
 8008a5c:	612e      	str	r6, [r5, #16]
 8008a5e:	f00b f8b7 	bl	8013bd0 <operator new(unsigned int)>
 8008a62:	4bb4      	ldr	r3, [pc, #720]	; (8008d34 <main+0x320>)
 8008a64:	2400      	movs	r4, #0
 8008a66:	6003      	str	r3, [r0, #0]
 8008a68:	4bb3      	ldr	r3, [pc, #716]	; (8008d38 <main+0x324>)
 8008a6a:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008a6e:	681b      	ldr	r3, [r3, #0]
 8008a70:	49b2      	ldr	r1, [pc, #712]	; (8008d3c <main+0x328>)
 8008a72:	3b00      	subs	r3, #0
 8008a74:	bf18      	it	ne
 8008a76:	2301      	movne	r3, #1
 8008a78:	7103      	strb	r3, [r0, #4]
 8008a7a:	9017      	str	r0, [sp, #92]	; 0x5c
 8008a7c:	ab15      	add	r3, sp, #84	; 0x54
 8008a7e:	a87f      	add	r0, sp, #508	; 0x1fc
 8008a80:	2303      	movs	r3, #3
 8008a82:	f7ff feb2 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a86:	a80f      	add	r0, sp, #60	; 0x3c
 8008a88:	f007 f9ea 	bl	800fe60 <StoreNetwork::StoreNetwork()>
 8008a8c:	ab10      	add	r3, sp, #64	; 0x40
 8008a8e:	a90f      	add	r1, sp, #60	; 0x3c
 8008a90:	a8ab      	add	r0, sp, #684	; 0x2ac
 8008a92:	93d9      	str	r3, [sp, #868]	; 0x364
 8008a94:	f008 fd36 	bl	8011504 <Network::Init(NetworkParamsStore*)>
 8008a98:	a8ab      	add	r0, sp, #684	; 0x2ac
 8008a9a:	f008 ff9b 	bl	80119d4 <Network::Print()>
 8008a9e:	2303      	movs	r3, #3
 8008aa0:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008aa4:	49a6      	ldr	r1, [pc, #664]	; (8008d40 <main+0x32c>)
 8008aa6:	a87f      	add	r0, sp, #508	; 0x1fc
 8008aa8:	f7ff fe9f 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008aac:	a80a      	add	r0, sp, #40	; 0x28
 8008aae:	f008 f911 	bl	8010cd4 <MDNS::MDNS()>
 8008ab2:	a80a      	add	r0, sp, #40	; 0x28
 8008ab4:	f008 f9ce 	bl	8010e54 <MDNS::Start()>
 8008ab8:	f642 1305 	movw	r3, #10501	; 0x2905
 8008abc:	4621      	mov	r1, r4
 8008abe:	4aa1      	ldr	r2, [pc, #644]	; (8008d44 <main+0x330>)
 8008ac0:	e9cd 4400 	strd	r4, r4, [sp]
 8008ac4:	a80a      	add	r0, sp, #40	; 0x28
 8008ac6:	f008 fb2f 	bl	8011128 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008aca:	4b9f      	ldr	r3, [pc, #636]	; (8008d48 <main+0x334>)
 8008acc:	4621      	mov	r1, r4
 8008ace:	4a9f      	ldr	r2, [pc, #636]	; (8008d4c <main+0x338>)
 8008ad0:	e9cd 6300 	strd	r6, r3, [sp]
 8008ad4:	a80a      	add	r0, sp, #40	; 0x28
 8008ad6:	2350      	movs	r3, #80	; 0x50
 8008ad8:	f008 fb26 	bl	8011128 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008adc:	a80a      	add	r0, sp, #40	; 0x28
 8008ade:	f008 fc69 	bl	80113b4 <MDNS::Print()>
 8008ae2:	a848      	add	r0, sp, #288	; 0x120
 8008ae4:	f001 fd94 	bl	800a610 <HttpDaemon::HttpDaemon()>
 8008ae8:	a848      	add	r0, sp, #288	; 0x120
 8008aea:	f001 fda5 	bl	800a638 <HttpDaemon::Start()>
 8008aee:	2303      	movs	r3, #3
 8008af0:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008af4:	4996      	ldr	r1, [pc, #600]	; (8008d50 <main+0x33c>)
 8008af6:	a87f      	add	r0, sp, #508	; 0x1fc
 8008af8:	f7ff fe77 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008afc:	a80b      	add	r0, sp, #44	; 0x2c
 8008afe:	f007 fa7d 	bl	800fffc <StoreE131::StoreE131()>
 8008b02:	a90b      	add	r1, sp, #44	; 0x2c
 8008b04:	a82d      	add	r0, sp, #180	; 0xb4
 8008b06:	f003 f98f 	bl	800be28 <E131Params::E131Params(E131ParamsStore*)>
 8008b0a:	f20d 4054 	addw	r0, sp, #1108	; 0x454
 8008b0e:	f002 f9fd 	bl	800af0c <E131Bridge::E131Bridge()>
 8008b12:	a82d      	add	r0, sp, #180	; 0xb4
 8008b14:	f003 f9ac 	bl	800be70 <E131Params::Load()>
 8008b18:	b130      	cbz	r0, 8008b28 <main+0x114>
 8008b1a:	a82d      	add	r0, sp, #180	; 0xb4
 8008b1c:	4621      	mov	r1, r4
 8008b1e:	f003 fc85 	bl	800c42c <E131Params::Set(unsigned int)>
 8008b22:	a82d      	add	r0, sp, #180	; 0xb4
 8008b24:	f003 fcd8 	bl	800c4d8 <E131Params::Dump()>
 8008b28:	21aa      	movs	r1, #170	; 0xaa
 8008b2a:	2203      	movs	r2, #3
 8008b2c:	ab67      	add	r3, sp, #412	; 0x19c
 8008b2e:	e9c3 2100 	strd	r2, r1, [r3]
 8008b32:	2006      	movs	r0, #6
 8008b34:	2200      	movs	r2, #0
 8008b36:	e9c3 0202 	strd	r0, r2, [r3, #8]
 8008b3a:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8008b3e:	611a      	str	r2, [r3, #16]
 8008b40:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008b44:	829a      	strh	r2, [r3, #20]
 8008b46:	4a83      	ldr	r2, [pc, #524]	; (8008d54 <main+0x340>)
 8008b48:	6259      	str	r1, [r3, #36]	; 0x24
 8008b4a:	619a      	str	r2, [r3, #24]
 8008b4c:	2201      	movs	r2, #1
 8008b4e:	a811      	add	r0, sp, #68	; 0x44
 8008b50:	e9c3 2207 	strd	r2, r2, [r3, #28]
 8008b54:	859a      	strh	r2, [r3, #44]	; 0x2c
 8008b56:	f007 fb2d 	bl	80101b4 <StorePixelDmx::StorePixelDmx()>
 8008b5a:	a911      	add	r1, sp, #68	; 0x44
 8008b5c:	a85c      	add	r0, sp, #368	; 0x170
 8008b5e:	f005 f971 	bl	800de44 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8008b62:	a85c      	add	r0, sp, #368	; 0x170
 8008b64:	f005 f990 	bl	800de88 <PixelDmxParams::Load()>
 8008b68:	b130      	cbz	r0, 8008b78 <main+0x164>
 8008b6a:	a85c      	add	r0, sp, #368	; 0x170
 8008b6c:	a967      	add	r1, sp, #412	; 0x19c
 8008b6e:	f005 fc9a 	bl	800e4a6 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8008b72:	a85c      	add	r0, sp, #368	; 0x170
 8008b74:	f005 fcdc 	bl	800e530 <PixelDmxParams::Dump()>
 8008b78:	a967      	add	r1, sp, #412	; 0x19c
 8008b7a:	a895      	add	r0, sp, #596	; 0x254
 8008b7c:	f005 f87a 	bl	800dc74 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008b80:	2004      	movs	r0, #4
 8008b82:	f00b f825 	bl	8013bd0 <operator new(unsigned int)>
 8008b86:	4b74      	ldr	r3, [pc, #464]	; (8008d58 <main+0x344>)
 8008b88:	4604      	mov	r4, r0
 8008b8a:	6003      	str	r3, [r0, #0]
 8008b8c:	2110      	movs	r1, #16
 8008b8e:	2304      	movs	r3, #4
 8008b90:	2203      	movs	r2, #3
 8008b92:	4866      	ldr	r0, [pc, #408]	; (8008d2c <main+0x318>)
 8008b94:	f00b fc0c 	bl	80143b0 <gpio_init>
 8008b98:	2304      	movs	r3, #4
 8008b9a:	616b      	str	r3, [r5, #20]
 8008b9c:	94a8      	str	r4, [sp, #672]	; 0x2a0
 8008b9e:	2400      	movs	r4, #0
 8008ba0:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 8008ba4:	4621      	mov	r1, r4
 8008ba6:	f8dd 9280 	ldr.w	r9, [sp, #640]	; 0x280
 8008baa:	9e9d      	ldr	r6, [sp, #628]	; 0x274
 8008bac:	42b4      	cmp	r4, r6
 8008bae:	f040 81d4 	bne.w	8008f5a <main+0x546>
 8008bb2:	f89d 7184 	ldrb.w	r7, [sp, #388]	; 0x184
 8008bb6:	ab5c      	add	r3, sp, #368	; 0x170
 8008bb8:	2f00      	cmp	r7, #0
 8008bba:	f000 81f7 	beq.w	8008fac <main+0x598>
 8008bbe:	2001      	movs	r0, #1
 8008bc0:	f00b f806 	bl	8013bd0 <operator new(unsigned int)>
 8008bc4:	4632      	mov	r2, r6
 8008bc6:	4639      	mov	r1, r7
 8008bc8:	4680      	mov	r8, r0
 8008bca:	f7ff fe61 	bl	8008890 <PixelTestPattern::PixelTestPattern(pixelpatterns::Pattern, unsigned int)>
 8008bce:	2300      	movs	r3, #0
 8008bd0:	f8df 9188 	ldr.w	r9, [pc, #392]	; 8008d5c <main+0x348>
 8008bd4:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8008bd8:	4961      	ldr	r1, [pc, #388]	; (8008d60 <main+0x34c>)
 8008bda:	f8cd 3458 	str.w	r3, [sp, #1112]	; 0x458
 8008bde:	a87f      	add	r0, sp, #508	; 0x1fc
 8008be0:	2303      	movs	r3, #3
 8008be2:	f7ff fe02 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008be6:	f8d9 3000 	ldr.w	r3, [r9]
 8008bea:	6818      	ldr	r0, [r3, #0]
 8008bec:	f005 fda8 	bl	800e740 <PixelType::GetType(pixel::Type)>
 8008bf0:	f8d9 3000 	ldr.w	r3, [r9]
 8008bf4:	2120      	movs	r1, #32
 8008bf6:	685b      	ldr	r3, [r3, #4]
 8008bf8:	4a5a      	ldr	r2, [pc, #360]	; (8008d64 <main+0x350>)
 8008bfa:	e9cd 0300 	strd	r0, r3, [sp]
 8008bfe:	4633      	mov	r3, r6
 8008c00:	a81b      	add	r0, sp, #108	; 0x6c
 8008c02:	f000 fd2d 	bl	8009660 <snprintf>
 8008c06:	4a58      	ldr	r2, [pc, #352]	; (8008d68 <main+0x354>)
 8008c08:	2120      	movs	r1, #32
 8008c0a:	a824      	add	r0, sp, #144	; 0x90
 8008c0c:	f000 fd28 	bl	8009660 <snprintf>
 8008c10:	4604      	mov	r4, r0
 8008c12:	202c      	movs	r0, #44	; 0x2c
 8008c14:	f00a ffdc 	bl	8013bd0 <operator new(unsigned int)>
 8008c18:	2200      	movs	r2, #0
 8008c1a:	4603      	mov	r3, r0
 8008c1c:	6042      	str	r2, [r0, #4]
 8008c1e:	6282      	str	r2, [r0, #40]	; 0x28
 8008c20:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008c24:	f823 2b08 	strh.w	r2, [r3], #8
 8008c28:	aa1b      	add	r2, sp, #108	; 0x6c
 8008c2a:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008c2e:	b111      	cbz	r1, 8008c36 <main+0x222>
 8008c30:	4563      	cmp	r3, ip
 8008c32:	f040 81be 	bne.w	8008fb2 <main+0x59e>
 8008c36:	2201      	movs	r2, #1
 8008c38:	900c      	str	r0, [sp, #48]	; 0x30
 8008c3a:	a90c      	add	r1, sp, #48	; 0x30
 8008c3c:	a8de      	add	r0, sp, #888	; 0x378
 8008c3e:	ab0c      	add	r3, sp, #48	; 0x30
 8008c40:	f003 fede 	bl	800ca00 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008c44:	f20d 4044 	addw	r0, sp, #1092	; 0x444
 8008c48:	f003 fc5c 	bl	800c504 <LLRPDevice::LLRPDevice()>
 8008c4c:	4b47      	ldr	r3, [pc, #284]	; (8008d6c <main+0x358>)
 8008c4e:	2100      	movs	r1, #0
 8008c50:	93de      	str	r3, [sp, #888]	; 0x378
 8008c52:	f50d 6089 	add.w	r0, sp, #1096	; 0x448
 8008c56:	3324      	adds	r3, #36	; 0x24
 8008c58:	f8cd 3444 	str.w	r3, [sp, #1092]	; 0x444
 8008c5c:	f004 f8c6 	bl	800cdec <RDMHandler::RDMHandler(bool)>
 8008c60:	4b43      	ldr	r3, [pc, #268]	; (8008d70 <main+0x35c>)
 8008c62:	b2e4      	uxtb	r4, r4
 8008c64:	4943      	ldr	r1, [pc, #268]	; (8008d74 <main+0x360>)
 8008c66:	6818      	ldr	r0, [r3, #0]
 8008c68:	f00a ff56 	bl	8013b18 <Hardware::GetUuid(unsigned char*)>
 8008c6c:	2c20      	cmp	r4, #32
 8008c6e:	bf28      	it	cs
 8008c70:	2420      	movcs	r4, #32
 8008c72:	f89d 33cc 	ldrb.w	r3, [sp, #972]	; 0x3cc
 8008c76:	4622      	mov	r2, r4
 8008c78:	a924      	add	r1, sp, #144	; 0x90
 8008c7a:	2b00      	cmp	r3, #0
 8008c7c:	f000 819f 	beq.w	8008fbe <main+0x5aa>
 8008c80:	f20d 3086 	addw	r0, sp, #902	; 0x386
 8008c84:	f7ff fcbd 	bl	8008602 <memcpy>
 8008c88:	98fc      	ldr	r0, [sp, #1008]	; 0x3f0
 8008c8a:	f88d 43a6 	strb.w	r4, [sp, #934]	; 0x3a6
 8008c8e:	b128      	cbz	r0, 8008c9c <main+0x288>
 8008c90:	6803      	ldr	r3, [r0, #0]
 8008c92:	4622      	mov	r2, r4
 8008c94:	689b      	ldr	r3, [r3, #8]
 8008c96:	f20d 3186 	addw	r1, sp, #902	; 0x386
 8008c9a:	4798      	blx	r3
 8008c9c:	4b36      	ldr	r3, [pc, #216]	; (8008d78 <main+0x364>)
 8008c9e:	2004      	movs	r0, #4
 8008ca0:	93f2      	str	r3, [sp, #968]	; 0x3c8
 8008ca2:	f00a ff95 	bl	8013bd0 <operator new(unsigned int)>
 8008ca6:	4b35      	ldr	r3, [pc, #212]	; (8008d7c <main+0x368>)
 8008ca8:	f8cd 0440 	str.w	r0, [sp, #1088]	; 0x440
 8008cac:	6003      	str	r3, [r0, #0]
 8008cae:	a8de      	add	r0, sp, #888	; 0x378
 8008cb0:	f003 fef6 	bl	800caa0 <RDMDeviceResponder::Init()>
 8008cb4:	a813      	add	r0, sp, #76	; 0x4c
 8008cb6:	f007 f933 	bl	800ff20 <StoreRDMDevice::StoreRDMDevice()>
 8008cba:	a913      	add	r1, sp, #76	; 0x4c
 8008cbc:	a873      	add	r0, sp, #460	; 0x1cc
 8008cbe:	f003 fe2f 	bl	800c920 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008cc2:	a873      	add	r0, sp, #460	; 0x1cc
 8008cc4:	f003 fe3e 	bl	800c944 <RDMDeviceParams::Load()>
 8008cc8:	b130      	cbz	r0, 8008cd8 <main+0x2c4>
 8008cca:	a873      	add	r0, sp, #460	; 0x1cc
 8008ccc:	a9df      	add	r1, sp, #892	; 0x37c
 8008cce:	f003 fe44 	bl	800c95a <RDMDeviceParams::Set(RDMDevice*)>
 8008cd2:	a873      	add	r0, sp, #460	; 0x1cc
 8008cd4:	f003 fe76 	bl	800c9c4 <RDMDeviceParams::Dump()>
 8008cd8:	ab14      	add	r3, sp, #80	; 0x50
 8008cda:	a8de      	add	r0, sp, #888	; 0x378
 8008cdc:	93fc      	str	r3, [sp, #1008]	; 0x3f0
 8008cde:	f003 fd25 	bl	800c72c <RDMNetDevice::Print()>
 8008ce2:	f20d 4054 	addw	r0, sp, #1108	; 0x454
 8008ce6:	f002 ffe9 	bl	800bcbc <E131Bridge::Print()>
 8008cea:	a896      	add	r0, sp, #600	; 0x258
 8008cec:	f004 feb8 	bl	800da60 <PixelDmxConfiguration::Print()>
 8008cf0:	f8d9 3000 	ldr.w	r3, [r9]
 8008cf4:	4632      	mov	r2, r6
 8008cf6:	685b      	ldr	r3, [r3, #4]
 8008cf8:	4921      	ldr	r1, [pc, #132]	; (8008d80 <main+0x36c>)
 8008cfa:	a87f      	add	r0, sp, #508	; 0x1fc
 8008cfc:	f009 fcce 	bl	801269c <DisplayUdf::SetTitle(char const*, ...)>
 8008d00:	2202      	movs	r2, #2
 8008d02:	a87f      	add	r0, sp, #508	; 0x1fc
 8008d04:	4611      	mov	r1, r2
 8008d06:	f009 fcdc 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d0a:	2207      	movs	r2, #7
 8008d0c:	2103      	movs	r1, #3
 8008d0e:	a87f      	add	r0, sp, #508	; 0x1fc
 8008d10:	f009 fcd7 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d14:	2203      	movs	r2, #3
 8008d16:	2104      	movs	r1, #4
 8008d18:	a87f      	add	r0, sp, #508	; 0x1fc
 8008d1a:	f009 fcd2 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d1e:	e031      	b.n	8008d84 <main+0x370>
 8008d20:	08016168 	stmdaeq	r1, {r3, r5, r6, r8, sp, lr}
 8008d24:	08016171 	stmdaeq	r1, {r0, r4, r5, r6, r8, sp, lr}
 8008d28:	080162ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sp, lr}
 8008d2c:	40011000 	andmi	r1, r1, r0
 8008d30:	0801617d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sp, lr}
 8008d34:	08016230 	stmdaeq	r1, {r4, r5, r9, sp, lr}
 8008d38:	2001d88c 	andcs	sp, r1, ip, lsl #17
 8008d3c:	0801881d 	stmdaeq	r1, {r0, r2, r3, r4, fp, pc}
 8008d40:	0801880c 	stmdaeq	r1, {r2, r3, fp, pc}
 8008d44:	080161b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sp, lr}
 8008d48:	080161c4 	stmdaeq	r1, {r2, r6, r7, r8, sp, lr}
 8008d4c:	080161bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sp, lr}
 8008d50:	08017523 	stmdaeq	r1, {r0, r1, r5, r8, sl, ip, sp, lr}
 8008d54:	080162b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sp, lr}
 8008d58:	08016244 	stmdaeq	r1, {r2, r6, r9, sp, lr}
 8008d5c:	2000c994 	mulcs	r0, r4, r9
 8008d60:	080176c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, ip, sp, lr}
 8008d64:	080161da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sp, lr}
 8008d68:	080161ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, sp, lr}
 8008d6c:	0801625c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sp, lr}
 8008d70:	2001d97c 	andcs	sp, r1, ip, ror r9
 8008d74:	2000c857 	andcs	ip, r0, r7, asr r8
 8008d78:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008d7c:	0801629c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sp, lr}
 8008d80:	080161ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sp, lr}
 8008d84:	2204      	movs	r2, #4
 8008d86:	2105      	movs	r1, #5
 8008d88:	a87f      	add	r0, sp, #508	; 0x1fc
 8008d8a:	f009 fc9a 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d8e:	ac67      	add	r4, sp, #412	; 0x19c
 8008d90:	2201      	movs	r2, #1
 8008d92:	2106      	movs	r1, #6
 8008d94:	a87f      	add	r0, sp, #508	; 0x1fc
 8008d96:	f009 fc94 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008d9a:	6820      	ldr	r0, [r4, #0]
 8008d9c:	f005 fcd0 	bl	800e740 <PixelType::GetType(pixel::Type)>
 8008da0:	4606      	mov	r6, r0
 8008da2:	68a0      	ldr	r0, [r4, #8]
 8008da4:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8008da8:	f8d4 a020 	ldr.w	sl, [r4, #32]
 8008dac:	f005 fd20 	bl	800e7f0 <PixelType::GetMap(pixel::Map)>
 8008db0:	4633      	mov	r3, r6
 8008db2:	2107      	movs	r1, #7
 8008db4:	4a88      	ldr	r2, [pc, #544]	; (8008fd8 <main+0x5c4>)
 8008db6:	e9cd a001 	strd	sl, r0, [sp, #4]
 8008dba:	f8cd 9000 	str.w	r9, [sp]
 8008dbe:	a87f      	add	r0, sp, #508	; 0x1fc
 8008dc0:	f7ff fcc2 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8008dc4:	a80d      	add	r0, sp, #52	; 0x34
 8008dc6:	f006 ffb5 	bl	800fd34 <StoreDisplayUdf::StoreDisplayUdf()>
 8008dca:	a90d      	add	r1, sp, #52	; 0x34
 8008dcc:	a852      	add	r0, sp, #328	; 0x148
 8008dce:	f009 fdf9 	bl	80129c4 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008dd2:	a852      	add	r0, sp, #328	; 0x148
 8008dd4:	f009 fe03 	bl	80129de <DisplayUdfParams::Load()>
 8008dd8:	b130      	cbz	r0, 8008de8 <main+0x3d4>
 8008dda:	a852      	add	r0, sp, #328	; 0x148
 8008ddc:	a97f      	add	r1, sp, #508	; 0x1fc
 8008dde:	f009 ff36 	bl	8012c4e <DisplayUdfParams::Set(DisplayUdf*)>
 8008de2:	a852      	add	r0, sp, #328	; 0x148
 8008de4:	f009 ff66 	bl	8012cb4 <DisplayUdfParams::Dump()>
 8008de8:	f20d 4154 	addw	r1, sp, #1108	; 0x454
 8008dec:	a87f      	add	r0, sp, #508	; 0x1fc
 8008dee:	f009 ff63 	bl	8012cb8 <DisplayUdf::Show(E131Bridge*)>
 8008df2:	b187      	cbz	r7, 8008e16 <main+0x402>
 8008df4:	9885      	ldr	r0, [sp, #532]	; 0x214
 8008df6:	ab7f      	add	r3, sp, #508	; 0x1fc
 8008df8:	b118      	cbz	r0, 8008e02 <main+0x3ee>
 8008dfa:	6803      	ldr	r3, [r0, #0]
 8008dfc:	2106      	movs	r1, #6
 8008dfe:	691b      	ldr	r3, [r3, #16]
 8008e00:	4798      	blx	r3
 8008e02:	4638      	mov	r0, r7
 8008e04:	f005 fde6 	bl	800e9d4 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008e08:	2106      	movs	r1, #6
 8008e0a:	4603      	mov	r3, r0
 8008e0c:	4a73      	ldr	r2, [pc, #460]	; (8008fdc <main+0x5c8>)
 8008e0e:	9700      	str	r7, [sp, #0]
 8008e10:	a87f      	add	r0, sp, #508	; 0x1fc
 8008e12:	f7ff fc99 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8008e16:	2203      	movs	r2, #3
 8008e18:	2101      	movs	r1, #1
 8008e1a:	f89d 395f 	ldrb.w	r3, [sp, #2399]	; 0x95f
 8008e1e:	a836      	add	r0, sp, #216	; 0xd8
 8008e20:	f000 ff10 	bl	8009c44 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008e24:	ab0e      	add	r3, sp, #56	; 0x38
 8008e26:	4618      	mov	r0, r3
 8008e28:	9305      	str	r3, [sp, #20]
 8008e2a:	f007 f8b1 	bl	800ff90 <StoreRemoteConfig::StoreRemoteConfig()>
 8008e2e:	9905      	ldr	r1, [sp, #20]
 8008e30:	a83f      	add	r0, sp, #252	; 0xfc
 8008e32:	f001 f9d7 	bl	800a1e4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008e36:	a83f      	add	r0, sp, #252	; 0xfc
 8008e38:	f001 f9de 	bl	800a1f8 <RemoteConfigParams::Load()>
 8008e3c:	b130      	cbz	r0, 8008e4c <main+0x438>
 8008e3e:	a83f      	add	r0, sp, #252	; 0xfc
 8008e40:	f001 fb21 	bl	800a486 <RemoteConfigParams::Dump()>
 8008e44:	a936      	add	r1, sp, #216	; 0xd8
 8008e46:	a83f      	add	r0, sp, #252	; 0xfc
 8008e48:	f001 fafd 	bl	800a446 <RemoteConfigParams::Set(RemoteConfig*)>
 8008e4c:	a809      	add	r0, sp, #36	; 0x24
 8008e4e:	f006 feeb 	bl	800fc28 <SpiFlashStore::Flash()>
 8008e52:	2800      	cmp	r0, #0
 8008e54:	d1fa      	bne.n	8008e4c <main+0x438>
 8008e56:	4c62      	ldr	r4, [pc, #392]	; (8008fe0 <main+0x5cc>)
 8008e58:	2303      	movs	r3, #3
 8008e5a:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008e5e:	4961      	ldr	r1, [pc, #388]	; (8008fe4 <main+0x5d0>)
 8008e60:	a87f      	add	r0, sp, #508	; 0x1fc
 8008e62:	f7ff fcc2 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008e66:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008e6a:	6820      	ldr	r0, [r4, #0]
 8008e6c:	f008 fb22 	bl	80114b4 <Network::Begin(unsigned short)>
 8008e70:	4b5d      	ldr	r3, [pc, #372]	; (8008fe8 <main+0x5d4>)
 8008e72:	4601      	mov	r1, r0
 8008e74:	6018      	str	r0, [r3, #0]
 8008e76:	4b5d      	ldr	r3, [pc, #372]	; (8008fec <main+0x5d8>)
 8008e78:	6820      	ldr	r0, [r4, #0]
 8008e7a:	681a      	ldr	r2, [r3, #0]
 8008e7c:	f008 fb2b 	bl	80114d6 <Network::JoinGroup(int, unsigned int)>
 8008e80:	2302      	movs	r3, #2
 8008e82:	f248 0280 	movw	r2, #32896	; 0x8080
 8008e86:	495a      	ldr	r1, [pc, #360]	; (8008ff0 <main+0x5dc>)
 8008e88:	a87f      	add	r0, sp, #508	; 0x1fc
 8008e8a:	f7ff fcae 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008e8e:	2303      	movs	r3, #3
 8008e90:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008e94:	4957      	ldr	r1, [pc, #348]	; (8008ff4 <main+0x5e0>)
 8008e96:	a87f      	add	r0, sp, #508	; 0x1fc
 8008e98:	f7ff fca7 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008e9c:	f20d 4054 	addw	r0, sp, #1108	; 0x454
 8008ea0:	f002 f89c 	bl	800afdc <E131Bridge::Start()>
 8008ea4:	f248 0280 	movw	r2, #32896	; 0x8080
 8008ea8:	2302      	movs	r3, #2
 8008eaa:	4953      	ldr	r1, [pc, #332]	; (8008ff8 <main+0x5e4>)
 8008eac:	a87f      	add	r0, sp, #508	; 0x1fc
 8008eae:	f7ff fc9c 	bl	80087ea <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008eb2:	2102      	movs	r1, #2
 8008eb4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008eb8:	f00b fa50 	bl	801435c <fwdgt_config>
 8008ebc:	2801      	cmp	r0, #1
 8008ebe:	bf0c      	ite	eq
 8008ec0:	2201      	moveq	r2, #1
 8008ec2:	2200      	movne	r2, #0
 8008ec4:	ab06      	add	r3, sp, #24
 8008ec6:	701a      	strb	r2, [r3, #0]
 8008ec8:	d101      	bne.n	8008ece <main+0x4ba>
 8008eca:	f00b fa37 	bl	801433c <fwdgt_enable>
 8008ece:	4f4b      	ldr	r7, [pc, #300]	; (8008ffc <main+0x5e8>)
 8008ed0:	4e4b      	ldr	r6, [pc, #300]	; (8009000 <main+0x5ec>)
 8008ed2:	ac7f      	add	r4, sp, #508	; 0x1fc
 8008ed4:	f00b fa3a 	bl	801434c <fwdgt_counter_reload>
 8008ed8:	f7fe fb4e 	bl	8007578 <net_handle>
 8008edc:	f20d 4054 	addw	r0, sp, #1108	; 0x454
 8008ee0:	f002 fc9a 	bl	800b818 <E131Bridge::Run()>
 8008ee4:	a836      	add	r0, sp, #216	; 0xd8
 8008ee6:	f001 f841 	bl	8009f6c <RemoteConfig::Run()>
 8008eea:	a809      	add	r0, sp, #36	; 0x24
 8008eec:	f006 fe9c 	bl	800fc28 <SpiFlashStore::Flash()>
 8008ef0:	f1b8 0f00 	cmp.w	r8, #0
 8008ef4:	d004      	beq.n	8008f00 <main+0x4ec>
 8008ef6:	683b      	ldr	r3, [r7, #0]
 8008ef8:	b113      	cbz	r3, 8008f00 <main+0x4ec>
 8008efa:	4640      	mov	r0, r8
 8008efc:	f005 ff8c 	bl	800ee18 <PixelPatterns::Run()>
 8008f00:	a80a      	add	r0, sp, #40	; 0x28
 8008f02:	f008 fa33 	bl	801136c <MDNS::Run()>
 8008f06:	f20d 4044 	addw	r0, sp, #1092	; 0x444
 8008f0a:	f003 fbb9 	bl	800c680 <LLRPDevice::Run()>
 8008f0e:	a848      	add	r0, sp, #288	; 0x120
 8008f10:	f001 fdfe 	bl	800ab10 <HttpDaemon::Run()>
 8008f14:	6962      	ldr	r2, [r4, #20]
 8008f16:	b15a      	cbz	r2, 8008f30 <main+0x51c>
 8008f18:	7c23      	ldrb	r3, [r4, #16]
 8008f1a:	2b00      	cmp	r3, #0
 8008f1c:	d156      	bne.n	8008fcc <main+0x5b8>
 8008f1e:	6833      	ldr	r3, [r6, #0]
 8008f20:	6861      	ldr	r1, [r4, #4]
 8008f22:	1a5b      	subs	r3, r3, r1
 8008f24:	429a      	cmp	r2, r3
 8008f26:	d203      	bcs.n	8008f30 <main+0x51c>
 8008f28:	2101      	movs	r1, #1
 8008f2a:	a87f      	add	r0, sp, #508	; 0x1fc
 8008f2c:	f7ff fc86 	bl	800883c <Display::SetSleep(bool)>
 8008f30:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008f32:	ab15      	add	r3, sp, #84	; 0x54
 8008f34:	2900      	cmp	r1, #0
 8008f36:	d0cd      	beq.n	8008ed4 <main+0x4c0>
 8008f38:	6832      	ldr	r2, [r6, #0]
 8008f3a:	6958      	ldr	r0, [r3, #20]
 8008f3c:	1a12      	subs	r2, r2, r0
 8008f3e:	4291      	cmp	r1, r2
 8008f40:	d8c8      	bhi.n	8008ed4 <main+0x4c0>
 8008f42:	6832      	ldr	r2, [r6, #0]
 8008f44:	615a      	str	r2, [r3, #20]
 8008f46:	691a      	ldr	r2, [r3, #16]
 8008f48:	2a01      	cmp	r2, #1
 8008f4a:	f082 0101 	eor.w	r1, r2, #1
 8008f4e:	6119      	str	r1, [r3, #16]
 8008f50:	bf16      	itet	ne
 8008f52:	2301      	movne	r3, #1
 8008f54:	616a      	streq	r2, [r5, #20]
 8008f56:	612b      	strne	r3, [r5, #16]
 8008f58:	e7bc      	b.n	8008ed4 <main+0x4c0>
 8008f5a:	2c07      	cmp	r4, #7
 8008f5c:	d814      	bhi.n	8008f88 <main+0x574>
 8008f5e:	aa5c      	add	r2, sp, #368	; 0x170
 8008f60:	6852      	ldr	r2, [r2, #4]
 8008f62:	fa0a f304 	lsl.w	r3, sl, r4
 8008f66:	4393      	bics	r3, r2
 8008f68:	bf0c      	ite	eq
 8008f6a:	f04f 0801 	moveq.w	r8, #1
 8008f6e:	f04f 0800 	movne.w	r8, #0
 8008f72:	ab5c      	add	r3, sp, #368	; 0x170
 8008f74:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8008f78:	8b5f      	ldrh	r7, [r3, #26]
 8008f7a:	eb01 0b09 	add.w	fp, r1, r9
 8008f7e:	1a7f      	subs	r7, r7, r1
 8008f80:	4559      	cmp	r1, fp
 8008f82:	d105      	bne.n	8008f90 <main+0x57c>
 8008f84:	3401      	adds	r4, #1
 8008f86:	e611      	b.n	8008bac <main+0x198>
 8008f88:	f04f 0800 	mov.w	r8, #0
 8008f8c:	4647      	mov	r7, r8
 8008f8e:	e7f4      	b.n	8008f7a <main+0x566>
 8008f90:	f1b8 0f00 	cmp.w	r8, #0
 8008f94:	d008      	beq.n	8008fa8 <main+0x594>
 8008f96:	187b      	adds	r3, r7, r1
 8008f98:	2201      	movs	r2, #1
 8008f9a:	b29b      	uxth	r3, r3
 8008f9c:	f20d 4054 	addw	r0, sp, #1108	; 0x454
 8008fa0:	9105      	str	r1, [sp, #20]
 8008fa2:	f002 f8d7 	bl	800b154 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008fa6:	9905      	ldr	r1, [sp, #20]
 8008fa8:	3101      	adds	r1, #1
 8008faa:	e7e9      	b.n	8008f80 <main+0x56c>
 8008fac:	46b8      	mov	r8, r7
 8008fae:	ab95      	add	r3, sp, #596	; 0x254
 8008fb0:	e60e      	b.n	8008bd0 <main+0x1bc>
 8008fb2:	f803 1b01 	strb.w	r1, [r3], #1
 8008fb6:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008fb8:	3101      	adds	r1, #1
 8008fba:	6281      	str	r1, [r0, #40]	; 0x28
 8008fbc:	e635      	b.n	8008c2a <main+0x216>
 8008fbe:	f20d 30cd 	addw	r0, sp, #973	; 0x3cd
 8008fc2:	f7ff fb1e 	bl	8008602 <memcpy>
 8008fc6:	f88d 43ed 	strb.w	r4, [sp, #1005]	; 0x3ed
 8008fca:	e667      	b.n	8008c9c <main+0x288>
 8008fcc:	f7ff fc56 	bl	800887c <display::timeout::gpio_renew()>
 8008fd0:	2800      	cmp	r0, #0
 8008fd2:	d0ad      	beq.n	8008f30 <main+0x51c>
 8008fd4:	2100      	movs	r1, #0
 8008fd6:	e7a8      	b.n	8008f2a <main+0x516>
 8008fd8:	08016212 	stmdaeq	r1, {r1, r4, r9, sp, lr}
 8008fdc:	0801621f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sp, lr}
 8008fe0:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8008fe4:	080176ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, ip, sp, lr}
 8008fe8:	20000000 	andcs	r0, r0, r0
 8008fec:	2000c74c 	andcs	ip, r0, ip, asr #14
 8008ff0:	080176db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r9, sl, ip, sp, lr}
 8008ff4:	0801750f 	stmdaeq	r1, {r0, r1, r2, r3, r8, sl, ip, sp, lr}
 8008ff8:	0801753a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, lr}
 8008ffc:	2000c98c 	andcs	ip, r0, ip, lsl #19
 8009000:	2001d994 	mulcs	r1, r4, r9

08009004 <RDMSoftwareVersion::GetVersion()>:
 8009004:	4800      	ldr	r0, [pc, #0]	; (8009008 <RDMSoftwareVersion::GetVersion()+0x4>)
 8009006:	4770      	bx	lr
 8009008:	080163b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sp, lr}

0800900c <RDMSoftwareVersion::GetVersionLength()>:
 800900c:	2003      	movs	r0, #3
 800900e:	4770      	bx	lr

08009010 <RDMSoftwareVersion::GetVersionId()>:
 8009010:	4800      	ldr	r0, [pc, #0]	; (8009014 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8009012:	4770      	bx	lr
 8009014:	63445cb5 	movtvs	r5, #19637	; 0x4cb5

08009018 <_itostr>:
 8009018:	b5f0      	push	{r4, r5, r6, r7, lr}
 800901a:	0fc7      	lsrs	r7, r0, #31
 800901c:	b091      	sub	sp, #68	; 0x44
 800901e:	bf18      	it	ne
 8009020:	4240      	negne	r0, r0
 8009022:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8009026:	b9c8      	cbnz	r0, 800905c <_itostr+0x44>
 8009028:	2330      	movs	r3, #48	; 0x30
 800902a:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800902e:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009032:	b132      	cbz	r2, 8009042 <_itostr+0x2a>
 8009034:	4668      	mov	r0, sp
 8009036:	2530      	movs	r5, #48	; 0x30
 8009038:	1ae6      	subs	r6, r4, r3
 800903a:	4296      	cmp	r6, r2
 800903c:	da01      	bge.n	8009042 <_itostr+0x2a>
 800903e:	4283      	cmp	r3, r0
 8009040:	d81c      	bhi.n	800907c <_itostr+0x64>
 8009042:	b117      	cbz	r7, 800904a <_itostr+0x32>
 8009044:	222d      	movs	r2, #45	; 0x2d
 8009046:	f803 2901 	strb.w	r2, [r3], #-1
 800904a:	3301      	adds	r3, #1
 800904c:	1ae0      	subs	r0, r4, r3
 800904e:	3901      	subs	r1, #1
 8009050:	aa10      	add	r2, sp, #64	; 0x40
 8009052:	4293      	cmp	r3, r2
 8009054:	d315      	bcc.n	8009082 <_itostr+0x6a>
 8009056:	3001      	adds	r0, #1
 8009058:	b011      	add	sp, #68	; 0x44
 800905a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800905c:	4623      	mov	r3, r4
 800905e:	250a      	movs	r5, #10
 8009060:	46ec      	mov	ip, sp
 8009062:	fb90 f6f5 	sdiv	r6, r0, r5
 8009066:	fb05 0016 	mls	r0, r5, r6, r0
 800906a:	3030      	adds	r0, #48	; 0x30
 800906c:	f803 0901 	strb.w	r0, [r3], #-1
 8009070:	4630      	mov	r0, r6
 8009072:	2e00      	cmp	r6, #0
 8009074:	d0dd      	beq.n	8009032 <_itostr+0x1a>
 8009076:	4563      	cmp	r3, ip
 8009078:	d1f3      	bne.n	8009062 <_itostr+0x4a>
 800907a:	e7da      	b.n	8009032 <_itostr+0x1a>
 800907c:	f803 5901 	strb.w	r5, [r3], #-1
 8009080:	e7da      	b.n	8009038 <_itostr+0x20>
 8009082:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009086:	f801 2f01 	strb.w	r2, [r1, #1]!
 800908a:	e7e1      	b.n	8009050 <_itostr+0x38>

0800908c <_xputch>:
 800908c:	4603      	mov	r3, r0
 800908e:	b410      	push	{r4}
 8009090:	4c08      	ldr	r4, [pc, #32]	; (80090b4 <_xputch+0x28>)
 8009092:	68da      	ldr	r2, [r3, #12]
 8009094:	4608      	mov	r0, r1
 8009096:	6821      	ldr	r1, [r4, #0]
 8009098:	3201      	adds	r2, #1
 800909a:	60da      	str	r2, [r3, #12]
 800909c:	b139      	cbz	r1, 80090ae <_xputch+0x22>
 800909e:	691b      	ldr	r3, [r3, #16]
 80090a0:	429a      	cmp	r2, r3
 80090a2:	da02      	bge.n	80090aa <_xputch+0x1e>
 80090a4:	1c4b      	adds	r3, r1, #1
 80090a6:	6023      	str	r3, [r4, #0]
 80090a8:	7008      	strb	r0, [r1, #0]
 80090aa:	bc10      	pop	{r4}
 80090ac:	4770      	bx	lr
 80090ae:	bc10      	pop	{r4}
 80090b0:	f00a bbf6 	b.w	80138a0 <console_putc>
 80090b4:	200000e8 	andcs	r0, r0, r8, ror #1

080090b8 <_format_int>:
 80090b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80090bc:	4698      	mov	r8, r3
 80090be:	b091      	sub	sp, #68	; 0x44
 80090c0:	ea52 0308 	orrs.w	r3, r2, r8
 80090c4:	4606      	mov	r6, r0
 80090c6:	4617      	mov	r7, r2
 80090c8:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 80090cc:	d133      	bne.n	8009136 <_format_int+0x7e>
 80090ce:	2330      	movs	r3, #48	; 0x30
 80090d0:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 80090d4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80090d8:	6833      	ldr	r3, [r6, #0]
 80090da:	07d8      	lsls	r0, r3, #31
 80090dc:	d507      	bpl.n	80090ee <_format_int+0x36>
 80090de:	466a      	mov	r2, sp
 80090e0:	2030      	movs	r0, #48	; 0x30
 80090e2:	6871      	ldr	r1, [r6, #4]
 80090e4:	1b2f      	subs	r7, r5, r4
 80090e6:	428f      	cmp	r7, r1
 80090e8:	da01      	bge.n	80090ee <_format_int+0x36>
 80090ea:	4294      	cmp	r4, r2
 80090ec:	d839      	bhi.n	8009162 <_format_int+0xaa>
 80090ee:	0699      	lsls	r1, r3, #26
 80090f0:	d507      	bpl.n	8009102 <_format_int+0x4a>
 80090f2:	466a      	mov	r2, sp
 80090f4:	2030      	movs	r0, #48	; 0x30
 80090f6:	68b1      	ldr	r1, [r6, #8]
 80090f8:	1b2f      	subs	r7, r5, r4
 80090fa:	428f      	cmp	r7, r1
 80090fc:	da01      	bge.n	8009102 <_format_int+0x4a>
 80090fe:	4294      	cmp	r4, r2
 8009100:	d832      	bhi.n	8009168 <_format_int+0xb0>
 8009102:	071a      	lsls	r2, r3, #28
 8009104:	bf44      	itt	mi
 8009106:	222d      	movmi	r2, #45	; 0x2d
 8009108:	f804 2901 	strbmi.w	r2, [r4], #-1
 800910c:	065b      	lsls	r3, r3, #25
 800910e:	d407      	bmi.n	8009120 <_format_int+0x68>
 8009110:	466b      	mov	r3, sp
 8009112:	2120      	movs	r1, #32
 8009114:	68b2      	ldr	r2, [r6, #8]
 8009116:	1b28      	subs	r0, r5, r4
 8009118:	4290      	cmp	r0, r2
 800911a:	da01      	bge.n	8009120 <_format_int+0x68>
 800911c:	429c      	cmp	r4, r3
 800911e:	d826      	bhi.n	800916e <_format_int+0xb6>
 8009120:	1b2d      	subs	r5, r5, r4
 8009122:	3401      	adds	r4, #1
 8009124:	ab10      	add	r3, sp, #64	; 0x40
 8009126:	429c      	cmp	r4, r3
 8009128:	d324      	bcc.n	8009174 <_format_int+0xbc>
 800912a:	68b3      	ldr	r3, [r6, #8]
 800912c:	42ab      	cmp	r3, r5
 800912e:	dc27      	bgt.n	8009180 <_format_int+0xc8>
 8009130:	b011      	add	sp, #68	; 0x44
 8009132:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009136:	462c      	mov	r4, r5
 8009138:	46e9      	mov	r9, sp
 800913a:	4638      	mov	r0, r7
 800913c:	4641      	mov	r1, r8
 800913e:	220a      	movs	r2, #10
 8009140:	2300      	movs	r3, #0
 8009142:	f7fe fef5 	bl	8007f30 <__aeabi_uldivmod>
 8009146:	3230      	adds	r2, #48	; 0x30
 8009148:	f804 2901 	strb.w	r2, [r4], #-1
 800914c:	463a      	mov	r2, r7
 800914e:	4643      	mov	r3, r8
 8009150:	2a0a      	cmp	r2, #10
 8009152:	f173 0300 	sbcs.w	r3, r3, #0
 8009156:	4607      	mov	r7, r0
 8009158:	4688      	mov	r8, r1
 800915a:	d3bd      	bcc.n	80090d8 <_format_int+0x20>
 800915c:	454c      	cmp	r4, r9
 800915e:	d1ec      	bne.n	800913a <_format_int+0x82>
 8009160:	e7ba      	b.n	80090d8 <_format_int+0x20>
 8009162:	f804 0901 	strb.w	r0, [r4], #-1
 8009166:	e7bd      	b.n	80090e4 <_format_int+0x2c>
 8009168:	f804 0901 	strb.w	r0, [r4], #-1
 800916c:	e7c4      	b.n	80090f8 <_format_int+0x40>
 800916e:	f804 1901 	strb.w	r1, [r4], #-1
 8009172:	e7d0      	b.n	8009116 <_format_int+0x5e>
 8009174:	4630      	mov	r0, r6
 8009176:	f814 1b01 	ldrb.w	r1, [r4], #1
 800917a:	f7ff ff87 	bl	800908c <_xputch>
 800917e:	e7d1      	b.n	8009124 <_format_int+0x6c>
 8009180:	2120      	movs	r1, #32
 8009182:	4630      	mov	r0, r6
 8009184:	f7ff ff82 	bl	800908c <_xputch>
 8009188:	3501      	adds	r5, #1
 800918a:	e7ce      	b.n	800912a <_format_int+0x72>

0800918c <_format_hex>:
 800918c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800918e:	b091      	sub	sp, #68	; 0x44
 8009190:	4606      	mov	r6, r0
 8009192:	6804      	ldr	r4, [r0, #0]
 8009194:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009198:	bb61      	cbnz	r1, 80091f4 <_format_hex+0x68>
 800919a:	2330      	movs	r3, #48	; 0x30
 800919c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80091a0:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80091a4:	07e5      	lsls	r5, r4, #31
 80091a6:	d507      	bpl.n	80091b8 <_format_hex+0x2c>
 80091a8:	4669      	mov	r1, sp
 80091aa:	2530      	movs	r5, #48	; 0x30
 80091ac:	6870      	ldr	r0, [r6, #4]
 80091ae:	1ad7      	subs	r7, r2, r3
 80091b0:	4287      	cmp	r7, r0
 80091b2:	da01      	bge.n	80091b8 <_format_hex+0x2c>
 80091b4:	428b      	cmp	r3, r1
 80091b6:	d831      	bhi.n	800921c <_format_hex+0x90>
 80091b8:	06a0      	lsls	r0, r4, #26
 80091ba:	d507      	bpl.n	80091cc <_format_hex+0x40>
 80091bc:	4669      	mov	r1, sp
 80091be:	2530      	movs	r5, #48	; 0x30
 80091c0:	68b0      	ldr	r0, [r6, #8]
 80091c2:	1ad7      	subs	r7, r2, r3
 80091c4:	4287      	cmp	r7, r0
 80091c6:	da01      	bge.n	80091cc <_format_hex+0x40>
 80091c8:	428b      	cmp	r3, r1
 80091ca:	d82a      	bhi.n	8009222 <_format_hex+0x96>
 80091cc:	0661      	lsls	r1, r4, #25
 80091ce:	d407      	bmi.n	80091e0 <_format_hex+0x54>
 80091d0:	4669      	mov	r1, sp
 80091d2:	2420      	movs	r4, #32
 80091d4:	68b0      	ldr	r0, [r6, #8]
 80091d6:	1ad5      	subs	r5, r2, r3
 80091d8:	4285      	cmp	r5, r0
 80091da:	da01      	bge.n	80091e0 <_format_hex+0x54>
 80091dc:	428b      	cmp	r3, r1
 80091de:	d823      	bhi.n	8009228 <_format_hex+0x9c>
 80091e0:	1ad5      	subs	r5, r2, r3
 80091e2:	1c5c      	adds	r4, r3, #1
 80091e4:	ab10      	add	r3, sp, #64	; 0x40
 80091e6:	429c      	cmp	r4, r3
 80091e8:	d321      	bcc.n	800922e <_format_hex+0xa2>
 80091ea:	68b3      	ldr	r3, [r6, #8]
 80091ec:	429d      	cmp	r5, r3
 80091ee:	db24      	blt.n	800923a <_format_hex+0xae>
 80091f0:	b011      	add	sp, #68	; 0x44
 80091f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091f4:	f014 0f02 	tst.w	r4, #2
 80091f8:	bf0c      	ite	eq
 80091fa:	2757      	moveq	r7, #87	; 0x57
 80091fc:	2737      	movne	r7, #55	; 0x37
 80091fe:	4613      	mov	r3, r2
 8009200:	466d      	mov	r5, sp
 8009202:	f001 000f 	and.w	r0, r1, #15
 8009206:	2809      	cmp	r0, #9
 8009208:	bf94      	ite	ls
 800920a:	3030      	addls	r0, #48	; 0x30
 800920c:	19c0      	addhi	r0, r0, r7
 800920e:	0909      	lsrs	r1, r1, #4
 8009210:	f803 0901 	strb.w	r0, [r3], #-1
 8009214:	d0c6      	beq.n	80091a4 <_format_hex+0x18>
 8009216:	42ab      	cmp	r3, r5
 8009218:	d1f3      	bne.n	8009202 <_format_hex+0x76>
 800921a:	e7c3      	b.n	80091a4 <_format_hex+0x18>
 800921c:	f803 5901 	strb.w	r5, [r3], #-1
 8009220:	e7c5      	b.n	80091ae <_format_hex+0x22>
 8009222:	f803 5901 	strb.w	r5, [r3], #-1
 8009226:	e7cc      	b.n	80091c2 <_format_hex+0x36>
 8009228:	f803 4901 	strb.w	r4, [r3], #-1
 800922c:	e7d3      	b.n	80091d6 <_format_hex+0x4a>
 800922e:	4630      	mov	r0, r6
 8009230:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009234:	f7ff ff2a 	bl	800908c <_xputch>
 8009238:	e7d4      	b.n	80091e4 <_format_hex+0x58>
 800923a:	2120      	movs	r1, #32
 800923c:	4630      	mov	r0, r6
 800923e:	f7ff ff25 	bl	800908c <_xputch>
 8009242:	3501      	adds	r5, #1
 8009244:	e7d1      	b.n	80091ea <_format_hex+0x5e>
	...

08009248 <_vprintf>:
 8009248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800924c:	4614      	mov	r4, r2
 800924e:	2200      	movs	r2, #0
 8009250:	460b      	mov	r3, r1
 8009252:	f04f 0800 	mov.w	r8, #0
 8009256:	b099      	sub	sp, #100	; 0x64
 8009258:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800925c:	af08      	add	r7, sp, #32
 800925e:	7819      	ldrb	r1, [r3, #0]
 8009260:	b919      	cbnz	r1, 800926a <_vprintf+0x22>
 8009262:	9806      	ldr	r0, [sp, #24]
 8009264:	b019      	add	sp, #100	; 0x64
 8009266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800926a:	2925      	cmp	r1, #37	; 0x25
 800926c:	f103 0601 	add.w	r6, r3, #1
 8009270:	d004      	beq.n	800927c <_vprintf+0x34>
 8009272:	a803      	add	r0, sp, #12
 8009274:	f7ff ff0a 	bl	800908c <_xputch>
 8009278:	4633      	mov	r3, r6
 800927a:	e7f0      	b.n	800925e <_vprintf+0x16>
 800927c:	2200      	movs	r2, #0
 800927e:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8009282:	9205      	str	r2, [sp, #20]
 8009284:	785a      	ldrb	r2, [r3, #1]
 8009286:	2a30      	cmp	r2, #48	; 0x30
 8009288:	d129      	bne.n	80092de <_vprintf+0x96>
 800928a:	2220      	movs	r2, #32
 800928c:	9203      	str	r2, [sp, #12]
 800928e:	1c9e      	adds	r6, r3, #2
 8009290:	2200      	movs	r2, #0
 8009292:	4635      	mov	r5, r6
 8009294:	4613      	mov	r3, r2
 8009296:	f04f 0c0a 	mov.w	ip, #10
 800929a:	7829      	ldrb	r1, [r5, #0]
 800929c:	462e      	mov	r6, r5
 800929e:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80092a2:	2809      	cmp	r0, #9
 80092a4:	f105 0501 	add.w	r5, r5, #1
 80092a8:	d91d      	bls.n	80092e6 <_vprintf+0x9e>
 80092aa:	b12a      	cbz	r2, 80092b8 <_vprintf+0x70>
 80092ac:	9305      	str	r3, [sp, #20]
 80092ae:	b11b      	cbz	r3, 80092b8 <_vprintf+0x70>
 80092b0:	9b03      	ldr	r3, [sp, #12]
 80092b2:	f043 0310 	orr.w	r3, r3, #16
 80092b6:	9303      	str	r3, [sp, #12]
 80092b8:	292e      	cmp	r1, #46	; 0x2e
 80092ba:	d123      	bne.n	8009304 <_vprintf+0xbc>
 80092bc:	7873      	ldrb	r3, [r6, #1]
 80092be:	2b2a      	cmp	r3, #42	; 0x2a
 80092c0:	d015      	beq.n	80092ee <_vprintf+0xa6>
 80092c2:	2100      	movs	r1, #0
 80092c4:	250a      	movs	r5, #10
 80092c6:	460a      	mov	r2, r1
 80092c8:	1c70      	adds	r0, r6, #1
 80092ca:	7803      	ldrb	r3, [r0, #0]
 80092cc:	4606      	mov	r6, r0
 80092ce:	3b30      	subs	r3, #48	; 0x30
 80092d0:	2b09      	cmp	r3, #9
 80092d2:	f100 0001 	add.w	r0, r0, #1
 80092d6:	d959      	bls.n	800938c <_vprintf+0x144>
 80092d8:	b181      	cbz	r1, 80092fc <_vprintf+0xb4>
 80092da:	9204      	str	r2, [sp, #16]
 80092dc:	e00e      	b.n	80092fc <_vprintf+0xb4>
 80092de:	2a2d      	cmp	r2, #45	; 0x2d
 80092e0:	d1d6      	bne.n	8009290 <_vprintf+0x48>
 80092e2:	2240      	movs	r2, #64	; 0x40
 80092e4:	e7d2      	b.n	800928c <_vprintf+0x44>
 80092e6:	2201      	movs	r2, #1
 80092e8:	fb0c 0303 	mla	r3, ip, r3, r0
 80092ec:	e7d5      	b.n	800929a <_vprintf+0x52>
 80092ee:	f854 3b04 	ldr.w	r3, [r4], #4
 80092f2:	3602      	adds	r6, #2
 80092f4:	2b00      	cmp	r3, #0
 80092f6:	bfb8      	it	lt
 80092f8:	425b      	neglt	r3, r3
 80092fa:	9304      	str	r3, [sp, #16]
 80092fc:	9b03      	ldr	r3, [sp, #12]
 80092fe:	f043 0301 	orr.w	r3, r3, #1
 8009302:	9303      	str	r3, [sp, #12]
 8009304:	7833      	ldrb	r3, [r6, #0]
 8009306:	2b6c      	cmp	r3, #108	; 0x6c
 8009308:	bf04      	itt	eq
 800930a:	9b03      	ldreq	r3, [sp, #12]
 800930c:	3601      	addeq	r6, #1
 800930e:	7831      	ldrb	r1, [r6, #0]
 8009310:	bf04      	itt	eq
 8009312:	f043 0304 	orreq.w	r3, r3, #4
 8009316:	9303      	streq	r3, [sp, #12]
 8009318:	2958      	cmp	r1, #88	; 0x58
 800931a:	f000 8171 	beq.w	8009600 <_vprintf+0x3b8>
 800931e:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009322:	b2da      	uxtb	r2, r3
 8009324:	2a15      	cmp	r2, #21
 8009326:	d8a4      	bhi.n	8009272 <_vprintf+0x2a>
 8009328:	2b15      	cmp	r3, #21
 800932a:	d8a2      	bhi.n	8009272 <_vprintf+0x2a>
 800932c:	a201      	add	r2, pc, #4	; (adr r2, 8009334 <_vprintf+0xec>)
 800932e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009332:	bf00      	nop
 8009334:	08009395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, ip, pc}
 8009338:	080093a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, ip, pc}
 800933c:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009340:	080093dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, ip, pc}
 8009344:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009348:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 800934c:	080093a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, ip, pc}
 8009350:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009354:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009358:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 800935c:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009360:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009364:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009368:	08009543 	stmdaeq	r0, {r0, r1, r6, r8, sl, ip, pc}
 800936c:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009370:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009374:	0800956b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r8, sl, ip, pc}
 8009378:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 800937c:	080095e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, ip, pc}
 8009380:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009384:	08009273 	stmdaeq	r0, {r0, r1, r4, r5, r6, r9, ip, pc}
 8009388:	08009609 	stmdaeq	r0, {r0, r3, r9, sl, ip, pc}
 800938c:	2101      	movs	r1, #1
 800938e:	fb05 3202 	mla	r2, r5, r2, r3
 8009392:	e79a      	b.n	80092ca <_vprintf+0x82>
 8009394:	4625      	mov	r5, r4
 8009396:	a803      	add	r0, sp, #12
 8009398:	f855 1b04 	ldr.w	r1, [r5], #4
 800939c:	f7ff fe76 	bl	800908c <_xputch>
 80093a0:	462c      	mov	r4, r5
 80093a2:	3601      	adds	r6, #1
 80093a4:	e768      	b.n	8009278 <_vprintf+0x30>
 80093a6:	9903      	ldr	r1, [sp, #12]
 80093a8:	074d      	lsls	r5, r1, #29
 80093aa:	bf51      	iteee	pl
 80093ac:	4625      	movpl	r5, r4
 80093ae:	3407      	addmi	r4, #7
 80093b0:	f024 0407 	bicmi.w	r4, r4, #7
 80093b4:	4625      	movmi	r5, r4
 80093b6:	bf55      	itete	pl
 80093b8:	f855 2b04 	ldrpl.w	r2, [r5], #4
 80093bc:	6863      	ldrmi	r3, [r4, #4]
 80093be:	17d3      	asrpl	r3, r2, #31
 80093c0:	f855 2b08 	ldrmi.w	r2, [r5], #8
 80093c4:	2b00      	cmp	r3, #0
 80093c6:	da05      	bge.n	80093d4 <_vprintf+0x18c>
 80093c8:	f041 0108 	orr.w	r1, r1, #8
 80093cc:	4252      	negs	r2, r2
 80093ce:	9103      	str	r1, [sp, #12]
 80093d0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80093d4:	a803      	add	r0, sp, #12
 80093d6:	f7ff fe6f 	bl	80090b8 <_format_int>
 80093da:	e7e1      	b.n	80093a0 <_vprintf+0x158>
 80093dc:	3407      	adds	r4, #7
 80093de:	f024 0507 	bic.w	r5, r4, #7
 80093e2:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80093e6:	f7fe fba9 	bl	8007b3c <__aeabi_d2f>
 80093ea:	9b03      	ldr	r3, [sp, #12]
 80093ec:	4641      	mov	r1, r8
 80093ee:	07dc      	lsls	r4, r3, #31
 80093f0:	bf54      	ite	pl
 80093f2:	f04f 0a06 	movpl.w	sl, #6
 80093f6:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80093fa:	4681      	mov	r9, r0
 80093fc:	f7fe fd4a 	bl	8007e94 <__aeabi_fcmplt>
 8009400:	2800      	cmp	r0, #0
 8009402:	d063      	beq.n	80094cc <_vprintf+0x284>
 8009404:	232d      	movs	r3, #45	; 0x2d
 8009406:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 800940a:	f88d 3020 	strb.w	r3, [sp, #32]
 800940e:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009412:	4648      	mov	r0, r9
 8009414:	f7fe fd66 	bl	8007ee4 <__aeabi_f2iz>
 8009418:	4659      	mov	r1, fp
 800941a:	2200      	movs	r2, #0
 800941c:	4604      	mov	r4, r0
 800941e:	f7ff fdfb 	bl	8009018 <_itostr>
 8009422:	eb0b 0200 	add.w	r2, fp, r0
 8009426:	e9cd 2000 	strd	r2, r0, [sp]
 800942a:	4620      	mov	r0, r4
 800942c:	f7fe fc90 	bl	8007d50 <__aeabi_i2f>
 8009430:	4601      	mov	r1, r0
 8009432:	4648      	mov	r0, r9
 8009434:	f7fe fbd6 	bl	8007be4 <__aeabi_fsub>
 8009438:	222e      	movs	r2, #46	; 0x2e
 800943a:	4601      	mov	r1, r0
 800943c:	200a      	movs	r0, #10
 800943e:	9b00      	ldr	r3, [sp, #0]
 8009440:	f10a 0901 	add.w	r9, sl, #1
 8009444:	1c5c      	adds	r4, r3, #1
 8009446:	9b01      	ldr	r3, [sp, #4]
 8009448:	f80b 2003 	strb.w	r2, [fp, r3]
 800944c:	4603      	mov	r3, r0
 800944e:	f1ba 0f00 	cmp.w	sl, #0
 8009452:	dc3d      	bgt.n	80094d0 <_vprintf+0x288>
 8009454:	9100      	str	r1, [sp, #0]
 8009456:	f7fe fc7b 	bl	8007d50 <__aeabi_i2f>
 800945a:	9900      	ldr	r1, [sp, #0]
 800945c:	f7fe ff3e 	bl	80082dc <__aeabi_fmul>
 8009460:	f7fe fd40 	bl	8007ee4 <__aeabi_f2iz>
 8009464:	464a      	mov	r2, r9
 8009466:	4621      	mov	r1, r4
 8009468:	f7ff fdd6 	bl	8009018 <_itostr>
 800946c:	4404      	add	r4, r0
 800946e:	1be0      	subs	r0, r4, r7
 8009470:	1e44      	subs	r4, r0, #1
 8009472:	5d3b      	ldrb	r3, [r7, r4]
 8009474:	193a      	adds	r2, r7, r4
 8009476:	2b34      	cmp	r3, #52	; 0x34
 8009478:	d910      	bls.n	800949c <_vprintf+0x254>
 800947a:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800947e:	1e53      	subs	r3, r2, #1
 8009480:	292e      	cmp	r1, #46	; 0x2e
 8009482:	d02c      	beq.n	80094de <_vprintf+0x296>
 8009484:	469c      	mov	ip, r3
 8009486:	f04f 0e30 	mov.w	lr, #48	; 0x30
 800948a:	4663      	mov	r3, ip
 800948c:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8009490:	2939      	cmp	r1, #57	; 0x39
 8009492:	d021      	beq.n	80094d8 <_vprintf+0x290>
 8009494:	292e      	cmp	r1, #46	; 0x2e
 8009496:	d022      	beq.n	80094de <_vprintf+0x296>
 8009498:	3101      	adds	r1, #1
 800949a:	7019      	strb	r1, [r3, #0]
 800949c:	f104 0360 	add.w	r3, r4, #96	; 0x60
 80094a0:	446b      	add	r3, sp
 80094a2:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80094a6:	2b2e      	cmp	r3, #46	; 0x2e
 80094a8:	bf08      	it	eq
 80094aa:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 80094ae:	46a1      	mov	r9, r4
 80094b0:	9b05      	ldr	r3, [sp, #20]
 80094b2:	4599      	cmp	r9, r3
 80094b4:	db3e      	blt.n	8009534 <_vprintf+0x2ec>
 80094b6:	46b9      	mov	r9, r7
 80094b8:	2c00      	cmp	r4, #0
 80094ba:	f77f af71 	ble.w	80093a0 <_vprintf+0x158>
 80094be:	f819 1b01 	ldrb.w	r1, [r9], #1
 80094c2:	a803      	add	r0, sp, #12
 80094c4:	f7ff fde2 	bl	800908c <_xputch>
 80094c8:	3c01      	subs	r4, #1
 80094ca:	e7f5      	b.n	80094b8 <_vprintf+0x270>
 80094cc:	46bb      	mov	fp, r7
 80094ce:	e7a0      	b.n	8009412 <_vprintf+0x1ca>
 80094d0:	4358      	muls	r0, r3
 80094d2:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80094d6:	e7ba      	b.n	800944e <_vprintf+0x206>
 80094d8:	f88c e001 	strb.w	lr, [ip, #1]
 80094dc:	e7d5      	b.n	800948a <_vprintf+0x242>
 80094de:	f04f 0c30 	mov.w	ip, #48	; 0x30
 80094e2:	3b01      	subs	r3, #1
 80094e4:	7819      	ldrb	r1, [r3, #0]
 80094e6:	2939      	cmp	r1, #57	; 0x39
 80094e8:	d112      	bne.n	8009510 <_vprintf+0x2c8>
 80094ea:	42bb      	cmp	r3, r7
 80094ec:	d20d      	bcs.n	800950a <_vprintf+0x2c2>
 80094ee:	1c5c      	adds	r4, r3, #1
 80094f0:	1c99      	adds	r1, r3, #2
 80094f2:	428c      	cmp	r4, r1
 80094f4:	eba2 0203 	sub.w	r2, r2, r3
 80094f8:	d913      	bls.n	8009522 <_vprintf+0x2da>
 80094fa:	4619      	mov	r1, r3
 80094fc:	441a      	add	r2, r3
 80094fe:	428a      	cmp	r2, r1
 8009500:	d10b      	bne.n	800951a <_vprintf+0x2d2>
 8009502:	2231      	movs	r2, #49	; 0x31
 8009504:	4604      	mov	r4, r0
 8009506:	705a      	strb	r2, [r3, #1]
 8009508:	e7c8      	b.n	800949c <_vprintf+0x254>
 800950a:	f803 c901 	strb.w	ip, [r3], #-1
 800950e:	e7e9      	b.n	80094e4 <_vprintf+0x29c>
 8009510:	42bb      	cmp	r3, r7
 8009512:	d3ec      	bcc.n	80094ee <_vprintf+0x2a6>
 8009514:	292d      	cmp	r1, #45	; 0x2d
 8009516:	d0ea      	beq.n	80094ee <_vprintf+0x2a6>
 8009518:	e7be      	b.n	8009498 <_vprintf+0x250>
 800951a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800951e:	704c      	strb	r4, [r1, #1]
 8009520:	e7ed      	b.n	80094fe <_vprintf+0x2b6>
 8009522:	4414      	add	r4, r2
 8009524:	440a      	add	r2, r1
 8009526:	428a      	cmp	r2, r1
 8009528:	d0eb      	beq.n	8009502 <_vprintf+0x2ba>
 800952a:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800952e:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8009532:	e7f8      	b.n	8009526 <_vprintf+0x2de>
 8009534:	2120      	movs	r1, #32
 8009536:	a803      	add	r0, sp, #12
 8009538:	f7ff fda8 	bl	800908c <_xputch>
 800953c:	f109 0901 	add.w	r9, r9, #1
 8009540:	e7b6      	b.n	80094b0 <_vprintf+0x268>
 8009542:	2308      	movs	r3, #8
 8009544:	4625      	mov	r5, r4
 8009546:	9305      	str	r3, [sp, #20]
 8009548:	2320      	movs	r3, #32
 800954a:	2130      	movs	r1, #48	; 0x30
 800954c:	f855 4b04 	ldr.w	r4, [r5], #4
 8009550:	a803      	add	r0, sp, #12
 8009552:	9303      	str	r3, [sp, #12]
 8009554:	f7ff fd9a 	bl	800908c <_xputch>
 8009558:	2178      	movs	r1, #120	; 0x78
 800955a:	a803      	add	r0, sp, #12
 800955c:	f7ff fd96 	bl	800908c <_xputch>
 8009560:	4621      	mov	r1, r4
 8009562:	a803      	add	r0, sp, #12
 8009564:	f7ff fe12 	bl	800918c <_format_hex>
 8009568:	e71a      	b.n	80093a0 <_vprintf+0x158>
 800956a:	4625      	mov	r5, r4
 800956c:	2400      	movs	r4, #0
 800956e:	f855 9b04 	ldr.w	r9, [r5], #4
 8009572:	f819 3004 	ldrb.w	r3, [r9, r4]
 8009576:	b993      	cbnz	r3, 800959e <_vprintf+0x356>
 8009578:	9b03      	ldr	r3, [sp, #12]
 800957a:	07d9      	lsls	r1, r3, #31
 800957c:	d503      	bpl.n	8009586 <_vprintf+0x33e>
 800957e:	9b04      	ldr	r3, [sp, #16]
 8009580:	429c      	cmp	r4, r3
 8009582:	bfa8      	it	ge
 8009584:	461c      	movge	r4, r3
 8009586:	9b03      	ldr	r3, [sp, #12]
 8009588:	f104 0a01 	add.w	sl, r4, #1
 800958c:	065a      	lsls	r2, r3, #25
 800958e:	d403      	bmi.n	8009598 <_vprintf+0x350>
 8009590:	9b05      	ldr	r3, [sp, #20]
 8009592:	429c      	cmp	r4, r3
 8009594:	db05      	blt.n	80095a2 <_vprintf+0x35a>
 8009596:	4654      	mov	r4, sl
 8009598:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800959c:	e00d      	b.n	80095ba <_vprintf+0x372>
 800959e:	3401      	adds	r4, #1
 80095a0:	e7e7      	b.n	8009572 <_vprintf+0x32a>
 80095a2:	2120      	movs	r1, #32
 80095a4:	a803      	add	r0, sp, #12
 80095a6:	f7ff fd71 	bl	800908c <_xputch>
 80095aa:	4654      	mov	r4, sl
 80095ac:	e7eb      	b.n	8009586 <_vprintf+0x33e>
 80095ae:	a803      	add	r0, sp, #12
 80095b0:	f7ff fd6c 	bl	800908c <_xputch>
 80095b4:	9b04      	ldr	r3, [sp, #16]
 80095b6:	3b01      	subs	r3, #1
 80095b8:	9304      	str	r3, [sp, #16]
 80095ba:	9b03      	ldr	r3, [sp, #12]
 80095bc:	07db      	lsls	r3, r3, #31
 80095be:	d501      	bpl.n	80095c4 <_vprintf+0x37c>
 80095c0:	9b04      	ldr	r3, [sp, #16]
 80095c2:	b11b      	cbz	r3, 80095cc <_vprintf+0x384>
 80095c4:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80095c8:	2900      	cmp	r1, #0
 80095ca:	d1f0      	bne.n	80095ae <_vprintf+0x366>
 80095cc:	9b05      	ldr	r3, [sp, #20]
 80095ce:	429c      	cmp	r4, r3
 80095d0:	f6bf aee6 	bge.w	80093a0 <_vprintf+0x158>
 80095d4:	2120      	movs	r1, #32
 80095d6:	a803      	add	r0, sp, #12
 80095d8:	f7ff fd58 	bl	800908c <_xputch>
 80095dc:	3401      	adds	r4, #1
 80095de:	e7f5      	b.n	80095cc <_vprintf+0x384>
 80095e0:	9b03      	ldr	r3, [sp, #12]
 80095e2:	f013 0304 	ands.w	r3, r3, #4
 80095e6:	bf1d      	ittte	ne
 80095e8:	3407      	addne	r4, #7
 80095ea:	f024 0407 	bicne.w	r4, r4, #7
 80095ee:	4625      	movne	r5, r4
 80095f0:	4625      	moveq	r5, r4
 80095f2:	bf1a      	itte	ne
 80095f4:	f855 2b08 	ldrne.w	r2, [r5], #8
 80095f8:	6863      	ldrne	r3, [r4, #4]
 80095fa:	f855 2b04 	ldreq.w	r2, [r5], #4
 80095fe:	e6e9      	b.n	80093d4 <_vprintf+0x18c>
 8009600:	9b03      	ldr	r3, [sp, #12]
 8009602:	f043 0302 	orr.w	r3, r3, #2
 8009606:	9303      	str	r3, [sp, #12]
 8009608:	4625      	mov	r5, r4
 800960a:	f855 1b04 	ldr.w	r1, [r5], #4
 800960e:	e7a8      	b.n	8009562 <_vprintf+0x31a>

08009610 <printf>:
 8009610:	b40f      	push	{r0, r1, r2, r3}
 8009612:	b507      	push	{r0, r1, r2, lr}
 8009614:	aa04      	add	r2, sp, #16
 8009616:	f852 1b04 	ldr.w	r1, [r2], #4
 800961a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800961e:	9201      	str	r2, [sp, #4]
 8009620:	f7ff fe12 	bl	8009248 <_vprintf>
 8009624:	b003      	add	sp, #12
 8009626:	f85d eb04 	ldr.w	lr, [sp], #4
 800962a:	b004      	add	sp, #16
 800962c:	4770      	bx	lr
	...

08009630 <sprintf>:
 8009630:	b40e      	push	{r1, r2, r3}
 8009632:	b517      	push	{r0, r1, r2, r4, lr}
 8009634:	4c09      	ldr	r4, [pc, #36]	; (800965c <sprintf+0x2c>)
 8009636:	aa05      	add	r2, sp, #20
 8009638:	f852 1b04 	ldr.w	r1, [r2], #4
 800963c:	6020      	str	r0, [r4, #0]
 800963e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8009642:	9201      	str	r2, [sp, #4]
 8009644:	f7ff fe00 	bl	8009248 <_vprintf>
 8009648:	2300      	movs	r3, #0
 800964a:	6822      	ldr	r2, [r4, #0]
 800964c:	6023      	str	r3, [r4, #0]
 800964e:	7013      	strb	r3, [r2, #0]
 8009650:	b003      	add	sp, #12
 8009652:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009656:	b003      	add	sp, #12
 8009658:	4770      	bx	lr
 800965a:	bf00      	nop
 800965c:	200000e8 	andcs	r0, r0, r8, ror #1

08009660 <snprintf>:
 8009660:	b40c      	push	{r2, r3}
 8009662:	460b      	mov	r3, r1
 8009664:	b513      	push	{r0, r1, r4, lr}
 8009666:	4c09      	ldr	r4, [pc, #36]	; (800968c <snprintf+0x2c>)
 8009668:	aa04      	add	r2, sp, #16
 800966a:	f852 1b04 	ldr.w	r1, [r2], #4
 800966e:	6020      	str	r0, [r4, #0]
 8009670:	4618      	mov	r0, r3
 8009672:	9201      	str	r2, [sp, #4]
 8009674:	f7ff fde8 	bl	8009248 <_vprintf>
 8009678:	2300      	movs	r3, #0
 800967a:	6822      	ldr	r2, [r4, #0]
 800967c:	6023      	str	r3, [r4, #0]
 800967e:	7013      	strb	r3, [r2, #0]
 8009680:	b002      	add	sp, #8
 8009682:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009686:	b002      	add	sp, #8
 8009688:	4770      	bx	lr
 800968a:	bf00      	nop
 800968c:	200000e8 	andcs	r0, r0, r8, ror #1

08009690 <vsnprintf>:
 8009690:	b538      	push	{r3, r4, r5, lr}
 8009692:	4605      	mov	r5, r0
 8009694:	4c05      	ldr	r4, [pc, #20]	; (80096ac <vsnprintf+0x1c>)
 8009696:	4608      	mov	r0, r1
 8009698:	4611      	mov	r1, r2
 800969a:	461a      	mov	r2, r3
 800969c:	6025      	str	r5, [r4, #0]
 800969e:	f7ff fdd3 	bl	8009248 <_vprintf>
 80096a2:	2300      	movs	r3, #0
 80096a4:	6822      	ldr	r2, [r4, #0]
 80096a6:	6023      	str	r3, [r4, #0]
 80096a8:	7013      	strb	r3, [r2, #0]
 80096aa:	bd38      	pop	{r3, r4, r5, pc}
 80096ac:	200000e8 	andcs	r0, r0, r8, ror #1

080096b0 <__udivmoddi4>:
 80096b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80096b4:	9e08      	ldr	r6, [sp, #32]
 80096b6:	460d      	mov	r5, r1
 80096b8:	4604      	mov	r4, r0
 80096ba:	468e      	mov	lr, r1
 80096bc:	2b00      	cmp	r3, #0
 80096be:	d14c      	bne.n	800975a <__udivmoddi4+0xaa>
 80096c0:	428a      	cmp	r2, r1
 80096c2:	4694      	mov	ip, r2
 80096c4:	d967      	bls.n	8009796 <__udivmoddi4+0xe6>
 80096c6:	fab2 f382 	clz	r3, r2
 80096ca:	b153      	cbz	r3, 80096e2 <__udivmoddi4+0x32>
 80096cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80096d0:	f1c3 0220 	rsb	r2, r3, #32
 80096d4:	fa01 fe03 	lsl.w	lr, r1, r3
 80096d8:	fa20 f202 	lsr.w	r2, r0, r2
 80096dc:	ea42 0e0e 	orr.w	lr, r2, lr
 80096e0:	409c      	lsls	r4, r3
 80096e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80096e6:	fbbe f1f7 	udiv	r1, lr, r7
 80096ea:	fa1f f58c 	uxth.w	r5, ip
 80096ee:	fb07 ee11 	mls	lr, r7, r1, lr
 80096f2:	fb01 f005 	mul.w	r0, r1, r5
 80096f6:	0c22      	lsrs	r2, r4, #16
 80096f8:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80096fc:	4290      	cmp	r0, r2
 80096fe:	d90a      	bls.n	8009716 <__udivmoddi4+0x66>
 8009700:	eb1c 0202 	adds.w	r2, ip, r2
 8009704:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8009708:	f080 8119 	bcs.w	800993e <__udivmoddi4+0x28e>
 800970c:	4290      	cmp	r0, r2
 800970e:	f240 8116 	bls.w	800993e <__udivmoddi4+0x28e>
 8009712:	3902      	subs	r1, #2
 8009714:	4462      	add	r2, ip
 8009716:	1a12      	subs	r2, r2, r0
 8009718:	fbb2 f0f7 	udiv	r0, r2, r7
 800971c:	fb07 2210 	mls	r2, r7, r0, r2
 8009720:	fb00 f505 	mul.w	r5, r0, r5
 8009724:	b2a4      	uxth	r4, r4
 8009726:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800972a:	42a5      	cmp	r5, r4
 800972c:	d90a      	bls.n	8009744 <__udivmoddi4+0x94>
 800972e:	eb1c 0404 	adds.w	r4, ip, r4
 8009732:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009736:	f080 8104 	bcs.w	8009942 <__udivmoddi4+0x292>
 800973a:	42a5      	cmp	r5, r4
 800973c:	f240 8101 	bls.w	8009942 <__udivmoddi4+0x292>
 8009740:	4464      	add	r4, ip
 8009742:	3802      	subs	r0, #2
 8009744:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8009748:	2100      	movs	r1, #0
 800974a:	1b64      	subs	r4, r4, r5
 800974c:	b11e      	cbz	r6, 8009756 <__udivmoddi4+0xa6>
 800974e:	40dc      	lsrs	r4, r3
 8009750:	2300      	movs	r3, #0
 8009752:	e9c6 4300 	strd	r4, r3, [r6]
 8009756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800975a:	428b      	cmp	r3, r1
 800975c:	d908      	bls.n	8009770 <__udivmoddi4+0xc0>
 800975e:	2e00      	cmp	r6, #0
 8009760:	f000 80ea 	beq.w	8009938 <__udivmoddi4+0x288>
 8009764:	2100      	movs	r1, #0
 8009766:	e9c6 0500 	strd	r0, r5, [r6]
 800976a:	4608      	mov	r0, r1
 800976c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009770:	fab3 f183 	clz	r1, r3
 8009774:	2900      	cmp	r1, #0
 8009776:	d148      	bne.n	800980a <__udivmoddi4+0x15a>
 8009778:	42ab      	cmp	r3, r5
 800977a:	d302      	bcc.n	8009782 <__udivmoddi4+0xd2>
 800977c:	4282      	cmp	r2, r0
 800977e:	f200 80f8 	bhi.w	8009972 <__udivmoddi4+0x2c2>
 8009782:	1a84      	subs	r4, r0, r2
 8009784:	eb65 0203 	sbc.w	r2, r5, r3
 8009788:	2001      	movs	r0, #1
 800978a:	4696      	mov	lr, r2
 800978c:	2e00      	cmp	r6, #0
 800978e:	d0e2      	beq.n	8009756 <__udivmoddi4+0xa6>
 8009790:	e9c6 4e00 	strd	r4, lr, [r6]
 8009794:	e7df      	b.n	8009756 <__udivmoddi4+0xa6>
 8009796:	b902      	cbnz	r2, 800979a <__udivmoddi4+0xea>
 8009798:	deff      	udf	#255	; 0xff
 800979a:	fab2 f382 	clz	r3, r2
 800979e:	2b00      	cmp	r3, #0
 80097a0:	f040 808e 	bne.w	80098c0 <__udivmoddi4+0x210>
 80097a4:	1a88      	subs	r0, r1, r2
 80097a6:	2101      	movs	r1, #1
 80097a8:	0c17      	lsrs	r7, r2, #16
 80097aa:	fa1f fe82 	uxth.w	lr, r2
 80097ae:	fbb0 f5f7 	udiv	r5, r0, r7
 80097b2:	fb07 0015 	mls	r0, r7, r5, r0
 80097b6:	0c22      	lsrs	r2, r4, #16
 80097b8:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80097bc:	fb0e f005 	mul.w	r0, lr, r5
 80097c0:	4290      	cmp	r0, r2
 80097c2:	d908      	bls.n	80097d6 <__udivmoddi4+0x126>
 80097c4:	eb1c 0202 	adds.w	r2, ip, r2
 80097c8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80097cc:	d202      	bcs.n	80097d4 <__udivmoddi4+0x124>
 80097ce:	4290      	cmp	r0, r2
 80097d0:	f200 80cc 	bhi.w	800996c <__udivmoddi4+0x2bc>
 80097d4:	4645      	mov	r5, r8
 80097d6:	1a12      	subs	r2, r2, r0
 80097d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80097dc:	fb07 2210 	mls	r2, r7, r0, r2
 80097e0:	fb0e fe00 	mul.w	lr, lr, r0
 80097e4:	b2a4      	uxth	r4, r4
 80097e6:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80097ea:	45a6      	cmp	lr, r4
 80097ec:	d908      	bls.n	8009800 <__udivmoddi4+0x150>
 80097ee:	eb1c 0404 	adds.w	r4, ip, r4
 80097f2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80097f6:	d202      	bcs.n	80097fe <__udivmoddi4+0x14e>
 80097f8:	45a6      	cmp	lr, r4
 80097fa:	f200 80b4 	bhi.w	8009966 <__udivmoddi4+0x2b6>
 80097fe:	4610      	mov	r0, r2
 8009800:	eba4 040e 	sub.w	r4, r4, lr
 8009804:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8009808:	e7a0      	b.n	800974c <__udivmoddi4+0x9c>
 800980a:	f1c1 0720 	rsb	r7, r1, #32
 800980e:	408b      	lsls	r3, r1
 8009810:	fa22 fc07 	lsr.w	ip, r2, r7
 8009814:	ea4c 0c03 	orr.w	ip, ip, r3
 8009818:	fa25 fa07 	lsr.w	sl, r5, r7
 800981c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8009820:	fbba f8f9 	udiv	r8, sl, r9
 8009824:	408d      	lsls	r5, r1
 8009826:	fa20 f307 	lsr.w	r3, r0, r7
 800982a:	fb09 aa18 	mls	sl, r9, r8, sl
 800982e:	fa1f fe8c 	uxth.w	lr, ip
 8009832:	432b      	orrs	r3, r5
 8009834:	fa00 f501 	lsl.w	r5, r0, r1
 8009838:	fb08 f00e 	mul.w	r0, r8, lr
 800983c:	0c1c      	lsrs	r4, r3, #16
 800983e:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8009842:	42a0      	cmp	r0, r4
 8009844:	fa02 f201 	lsl.w	r2, r2, r1
 8009848:	d90b      	bls.n	8009862 <__udivmoddi4+0x1b2>
 800984a:	eb1c 0404 	adds.w	r4, ip, r4
 800984e:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8009852:	f080 8086 	bcs.w	8009962 <__udivmoddi4+0x2b2>
 8009856:	42a0      	cmp	r0, r4
 8009858:	f240 8083 	bls.w	8009962 <__udivmoddi4+0x2b2>
 800985c:	f1a8 0802 	sub.w	r8, r8, #2
 8009860:	4464      	add	r4, ip
 8009862:	1a24      	subs	r4, r4, r0
 8009864:	b298      	uxth	r0, r3
 8009866:	fbb4 f3f9 	udiv	r3, r4, r9
 800986a:	fb09 4413 	mls	r4, r9, r3, r4
 800986e:	fb03 fe0e 	mul.w	lr, r3, lr
 8009872:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8009876:	45a6      	cmp	lr, r4
 8009878:	d908      	bls.n	800988c <__udivmoddi4+0x1dc>
 800987a:	eb1c 0404 	adds.w	r4, ip, r4
 800987e:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 8009882:	d26a      	bcs.n	800995a <__udivmoddi4+0x2aa>
 8009884:	45a6      	cmp	lr, r4
 8009886:	d968      	bls.n	800995a <__udivmoddi4+0x2aa>
 8009888:	3b02      	subs	r3, #2
 800988a:	4464      	add	r4, ip
 800988c:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8009890:	fba0 9302 	umull	r9, r3, r0, r2
 8009894:	eba4 040e 	sub.w	r4, r4, lr
 8009898:	429c      	cmp	r4, r3
 800989a:	46c8      	mov	r8, r9
 800989c:	469e      	mov	lr, r3
 800989e:	d354      	bcc.n	800994a <__udivmoddi4+0x29a>
 80098a0:	d051      	beq.n	8009946 <__udivmoddi4+0x296>
 80098a2:	2e00      	cmp	r6, #0
 80098a4:	d067      	beq.n	8009976 <__udivmoddi4+0x2c6>
 80098a6:	ebb5 0308 	subs.w	r3, r5, r8
 80098aa:	eb64 040e 	sbc.w	r4, r4, lr
 80098ae:	40cb      	lsrs	r3, r1
 80098b0:	fa04 f707 	lsl.w	r7, r4, r7
 80098b4:	431f      	orrs	r7, r3
 80098b6:	40cc      	lsrs	r4, r1
 80098b8:	e9c6 7400 	strd	r7, r4, [r6]
 80098bc:	2100      	movs	r1, #0
 80098be:	e74a      	b.n	8009756 <__udivmoddi4+0xa6>
 80098c0:	fa02 fc03 	lsl.w	ip, r2, r3
 80098c4:	f1c3 0020 	rsb	r0, r3, #32
 80098c8:	40c1      	lsrs	r1, r0
 80098ca:	409d      	lsls	r5, r3
 80098cc:	fa24 f000 	lsr.w	r0, r4, r0
 80098d0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80098d4:	4328      	orrs	r0, r5
 80098d6:	fbb1 f5f7 	udiv	r5, r1, r7
 80098da:	fb07 1115 	mls	r1, r7, r5, r1
 80098de:	fa1f fe8c 	uxth.w	lr, ip
 80098e2:	0c02      	lsrs	r2, r0, #16
 80098e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80098e8:	fb05 f10e 	mul.w	r1, r5, lr
 80098ec:	4291      	cmp	r1, r2
 80098ee:	fa04 f403 	lsl.w	r4, r4, r3
 80098f2:	d908      	bls.n	8009906 <__udivmoddi4+0x256>
 80098f4:	eb1c 0202 	adds.w	r2, ip, r2
 80098f8:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80098fc:	d22f      	bcs.n	800995e <__udivmoddi4+0x2ae>
 80098fe:	4291      	cmp	r1, r2
 8009900:	d92d      	bls.n	800995e <__udivmoddi4+0x2ae>
 8009902:	3d02      	subs	r5, #2
 8009904:	4462      	add	r2, ip
 8009906:	1a52      	subs	r2, r2, r1
 8009908:	fbb2 f1f7 	udiv	r1, r2, r7
 800990c:	fb07 2211 	mls	r2, r7, r1, r2
 8009910:	b280      	uxth	r0, r0
 8009912:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009916:	fb01 f20e 	mul.w	r2, r1, lr
 800991a:	4282      	cmp	r2, r0
 800991c:	d908      	bls.n	8009930 <__udivmoddi4+0x280>
 800991e:	eb1c 0000 	adds.w	r0, ip, r0
 8009922:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8009926:	d216      	bcs.n	8009956 <__udivmoddi4+0x2a6>
 8009928:	4282      	cmp	r2, r0
 800992a:	d914      	bls.n	8009956 <__udivmoddi4+0x2a6>
 800992c:	3902      	subs	r1, #2
 800992e:	4460      	add	r0, ip
 8009930:	1a80      	subs	r0, r0, r2
 8009932:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8009936:	e73a      	b.n	80097ae <__udivmoddi4+0xfe>
 8009938:	4631      	mov	r1, r6
 800993a:	4630      	mov	r0, r6
 800993c:	e70b      	b.n	8009756 <__udivmoddi4+0xa6>
 800993e:	4671      	mov	r1, lr
 8009940:	e6e9      	b.n	8009716 <__udivmoddi4+0x66>
 8009942:	4610      	mov	r0, r2
 8009944:	e6fe      	b.n	8009744 <__udivmoddi4+0x94>
 8009946:	454d      	cmp	r5, r9
 8009948:	d2ab      	bcs.n	80098a2 <__udivmoddi4+0x1f2>
 800994a:	ebb9 0802 	subs.w	r8, r9, r2
 800994e:	eb63 0e0c 	sbc.w	lr, r3, ip
 8009952:	3801      	subs	r0, #1
 8009954:	e7a5      	b.n	80098a2 <__udivmoddi4+0x1f2>
 8009956:	4641      	mov	r1, r8
 8009958:	e7ea      	b.n	8009930 <__udivmoddi4+0x280>
 800995a:	4603      	mov	r3, r0
 800995c:	e796      	b.n	800988c <__udivmoddi4+0x1dc>
 800995e:	4645      	mov	r5, r8
 8009960:	e7d1      	b.n	8009906 <__udivmoddi4+0x256>
 8009962:	46d0      	mov	r8, sl
 8009964:	e77d      	b.n	8009862 <__udivmoddi4+0x1b2>
 8009966:	4464      	add	r4, ip
 8009968:	3802      	subs	r0, #2
 800996a:	e749      	b.n	8009800 <__udivmoddi4+0x150>
 800996c:	3d02      	subs	r5, #2
 800996e:	4462      	add	r2, ip
 8009970:	e731      	b.n	80097d6 <__udivmoddi4+0x126>
 8009972:	4608      	mov	r0, r1
 8009974:	e70a      	b.n	800978c <__udivmoddi4+0xdc>
 8009976:	4631      	mov	r1, r6
 8009978:	e6ed      	b.n	8009756 <__udivmoddi4+0xa6>
 800997a:	bf00      	nop

0800997c <RemoteConfig::HandleList()>:
 800997c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009980:	6801      	ldr	r1, [r0, #0]
 8009982:	4604      	mov	r4, r0
 8009984:	2012      	movs	r0, #18
 8009986:	f04f 080c 	mov.w	r8, #12
 800998a:	4a29      	ldr	r2, [pc, #164]	; (8009a30 <RemoteConfig::HandleList()+0xb4>)
 800998c:	4b29      	ldr	r3, [pc, #164]	; (8009a34 <RemoteConfig::HandleList()+0xb8>)
 800998e:	fb00 2201 	mla	r2, r0, r1, r2
 8009992:	6860      	ldr	r0, [r4, #4]
 8009994:	4928      	ldr	r1, [pc, #160]	; (8009a38 <RemoteConfig::HandleList()+0xbc>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	fb08 1100 	mla	r1, r8, r0, r1
 800999c:	4e27      	ldr	r6, [pc, #156]	; (8009a3c <RemoteConfig::HandleList()+0xc0>)
 800999e:	4828      	ldr	r0, [pc, #160]	; (8009a40 <RemoteConfig::HandleList()+0xc4>)
 80099a0:	695f      	ldr	r7, [r3, #20]
 80099a2:	6835      	ldr	r5, [r6, #0]
 80099a4:	f890 9009 	ldrb.w	r9, [r0, #9]
 80099a8:	b2fb      	uxtb	r3, r7
 80099aa:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80099ae:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 80099b2:	f8d4 8008 	ldr.w	r8, [r4, #8]
 80099b6:	b089      	sub	sp, #36	; 0x24
 80099b8:	3507      	adds	r5, #7
 80099ba:	0e3f      	lsrs	r7, r7, #24
 80099bc:	f1b9 0f00 	cmp.w	r9, #0
 80099c0:	d01d      	beq.n	80099fe <RemoteConfig::HandleList()+0x82>
 80099c2:	3009      	adds	r0, #9
 80099c4:	e9cd 2103 	strd	r2, r1, [sp, #12]
 80099c8:	e9cd 8005 	strd	r8, r0, [sp, #20]
 80099cc:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80099d0:	4628      	mov	r0, r5
 80099d2:	e9cd e701 	strd	lr, r7, [sp, #4]
 80099d6:	4a1b      	ldr	r2, [pc, #108]	; (8009a44 <RemoteConfig::HandleList()+0xc8>)
 80099d8:	f8cd c000 	str.w	ip, [sp]
 80099dc:	f7ff fe40 	bl	8009660 <snprintf>
 80099e0:	69e3      	ldr	r3, [r4, #28]
 80099e2:	2b05      	cmp	r3, #5
 80099e4:	d118      	bne.n	8009a18 <RemoteConfig::HandleList()+0x9c>
 80099e6:	f642 1305 	movw	r3, #10501	; 0x2905
 80099ea:	9300      	str	r3, [sp, #0]
 80099ec:	69a3      	ldr	r3, [r4, #24]
 80099ee:	b282      	uxth	r2, r0
 80099f0:	4629      	mov	r1, r5
 80099f2:	7d20      	ldrb	r0, [r4, #20]
 80099f4:	f007 f896 	bl	8010b24 <udp_send>
 80099f8:	b009      	add	sp, #36	; 0x24
 80099fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80099fe:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8009a02:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8009a06:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009a0a:	4628      	mov	r0, r5
 8009a0c:	e9cd ce00 	strd	ip, lr, [sp]
 8009a10:	4a0d      	ldr	r2, [pc, #52]	; (8009a48 <RemoteConfig::HandleList()+0xcc>)
 8009a12:	f7ff fe25 	bl	8009660 <snprintf>
 8009a16:	e7e3      	b.n	80099e0 <RemoteConfig::HandleList()+0x64>
 8009a18:	2b06      	cmp	r3, #6
 8009a1a:	d1ed      	bne.n	80099f8 <RemoteConfig::HandleList()+0x7c>
 8009a1c:	6833      	ldr	r3, [r6, #0]
 8009a1e:	799b      	ldrb	r3, [r3, #6]
 8009a20:	2b2a      	cmp	r3, #42	; 0x2a
 8009a22:	d1e9      	bne.n	80099f8 <RemoteConfig::HandleList()+0x7c>
 8009a24:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a28:	9300      	str	r3, [sp, #0]
 8009a2a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009a2e:	e7de      	b.n	80099ee <RemoteConfig::HandleList()+0x72>
 8009a30:	080164a0 	stmdaeq	r1, {r5, r7, sl, sp, lr}
 8009a34:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8009a38:	08016566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, sp, lr}
 8009a3c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a40:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009a44:	080163b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, sp, lr}
 8009a48:	080163ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sp, lr}

08009a4c <RemoteConfig::HandleDisplayGet()>:
 8009a4c:	69c3      	ldr	r3, [r0, #28]
 8009a4e:	2b08      	cmp	r3, #8
 8009a50:	d11b      	bne.n	8009a8a <RemoteConfig::HandleDisplayGet()+0x3e>
 8009a52:	4b0e      	ldr	r3, [pc, #56]	; (8009a8c <RemoteConfig::HandleDisplayGet()+0x40>)
 8009a54:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a56:	681b      	ldr	r3, [r3, #0]
 8009a58:	4d0d      	ldr	r5, [pc, #52]	; (8009a90 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009a5a:	7c19      	ldrb	r1, [r3, #16]
 8009a5c:	4a0d      	ldr	r2, [pc, #52]	; (8009a94 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009a5e:	4b0e      	ldr	r3, [pc, #56]	; (8009a98 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009a60:	4604      	mov	r4, r0
 8009a62:	2900      	cmp	r1, #0
 8009a64:	bf18      	it	ne
 8009a66:	4613      	movne	r3, r2
 8009a68:	6828      	ldr	r0, [r5, #0]
 8009a6a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009a6e:	4a0b      	ldr	r2, [pc, #44]	; (8009a9c <RemoteConfig::HandleDisplayGet()+0x50>)
 8009a70:	f7ff fdf6 	bl	8009660 <snprintf>
 8009a74:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a78:	9300      	str	r3, [sp, #0]
 8009a7a:	b282      	uxth	r2, r0
 8009a7c:	69a3      	ldr	r3, [r4, #24]
 8009a7e:	6829      	ldr	r1, [r5, #0]
 8009a80:	7d20      	ldrb	r0, [r4, #20]
 8009a82:	f007 f84f 	bl	8010b24 <udp_send>
 8009a86:	b003      	add	sp, #12
 8009a88:	bd30      	pop	{r4, r5, pc}
 8009a8a:	4770      	bx	lr
 8009a8c:	2001d88c 	andcs	sp, r1, ip, lsl #17
 8009a90:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a94:	080163e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sp, lr}
 8009a98:	080163e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp, lr}
 8009a9c:	080163eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, sp, lr}

08009aa0 <RemoteConfig::HandleTftpGet()>:
 8009aa0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009aa2:	4604      	mov	r4, r0
 8009aa4:	f000 fd74 	bl	800a590 <RemoteConfig::PlatformHandleTftpGet()>
 8009aa8:	69e3      	ldr	r3, [r4, #28]
 8009aaa:	2b05      	cmp	r3, #5
 8009aac:	d116      	bne.n	8009adc <RemoteConfig::HandleTftpGet()+0x3c>
 8009aae:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009ab2:	4d0b      	ldr	r5, [pc, #44]	; (8009ae0 <RemoteConfig::HandleTftpGet()+0x40>)
 8009ab4:	4a0b      	ldr	r2, [pc, #44]	; (8009ae4 <RemoteConfig::HandleTftpGet()+0x44>)
 8009ab6:	4b0c      	ldr	r3, [pc, #48]	; (8009ae8 <RemoteConfig::HandleTftpGet()+0x48>)
 8009ab8:	6828      	ldr	r0, [r5, #0]
 8009aba:	2900      	cmp	r1, #0
 8009abc:	bf08      	it	eq
 8009abe:	4613      	moveq	r3, r2
 8009ac0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009ac4:	4a09      	ldr	r2, [pc, #36]	; (8009aec <RemoteConfig::HandleTftpGet()+0x4c>)
 8009ac6:	f7ff fdcb 	bl	8009660 <snprintf>
 8009aca:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ace:	b282      	uxth	r2, r0
 8009ad0:	9300      	str	r3, [sp, #0]
 8009ad2:	6829      	ldr	r1, [r5, #0]
 8009ad4:	69a3      	ldr	r3, [r4, #24]
 8009ad6:	7d20      	ldrb	r0, [r4, #20]
 8009ad8:	f007 f824 	bl	8010b24 <udp_send>
 8009adc:	b003      	add	sp, #12
 8009ade:	bd30      	pop	{r4, r5, pc}
 8009ae0:	200000ec 	andcs	r0, r0, ip, ror #1
 8009ae4:	080163e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, sp, lr}
 8009ae8:	080163e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sp, lr}
 8009aec:	080163f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sp, lr}

08009af0 <RemoteConfig::HandleVersion()>:
 8009af0:	69c3      	ldr	r3, [r0, #28]
 8009af2:	2b08      	cmp	r3, #8
 8009af4:	d114      	bne.n	8009b20 <RemoteConfig::HandleVersion()+0x30>
 8009af6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009af8:	4d0a      	ldr	r5, [pc, #40]	; (8009b24 <RemoteConfig::HandleVersion()+0x34>)
 8009afa:	4604      	mov	r4, r0
 8009afc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009b00:	4b09      	ldr	r3, [pc, #36]	; (8009b28 <RemoteConfig::HandleVersion()+0x38>)
 8009b02:	4a0a      	ldr	r2, [pc, #40]	; (8009b2c <RemoteConfig::HandleVersion()+0x3c>)
 8009b04:	6828      	ldr	r0, [r5, #0]
 8009b06:	f7ff fdab 	bl	8009660 <snprintf>
 8009b0a:	f642 1305 	movw	r3, #10501	; 0x2905
 8009b0e:	9300      	str	r3, [sp, #0]
 8009b10:	b282      	uxth	r2, r0
 8009b12:	69a3      	ldr	r3, [r4, #24]
 8009b14:	6829      	ldr	r1, [r5, #0]
 8009b16:	7d20      	ldrb	r0, [r4, #20]
 8009b18:	f007 f804 	bl	8010b24 <udp_send>
 8009b1c:	b003      	add	sp, #12
 8009b1e:	bd30      	pop	{r4, r5, pc}
 8009b20:	4770      	bx	lr
 8009b22:	bf00      	nop
 8009b24:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b28:	2001d932 	andcs	sp, r1, r2, lsr r9
 8009b2c:	08016400 	stmdaeq	r1, {sl, sp, lr}

08009b30 <RemoteConfig::HandleUptime()>:
 8009b30:	7bc3      	ldrb	r3, [r0, #15]
 8009b32:	b1e3      	cbz	r3, 8009b6e <RemoteConfig::HandleUptime()+0x3e>
 8009b34:	4b0e      	ldr	r3, [pc, #56]	; (8009b70 <RemoteConfig::HandleUptime()+0x40>)
 8009b36:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009b38:	681a      	ldr	r2, [r3, #0]
 8009b3a:	69c3      	ldr	r3, [r0, #28]
 8009b3c:	4604      	mov	r4, r0
 8009b3e:	2b07      	cmp	r3, #7
 8009b40:	d113      	bne.n	8009b6a <RemoteConfig::HandleUptime()+0x3a>
 8009b42:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009b46:	4d0b      	ldr	r5, [pc, #44]	; (8009b74 <RemoteConfig::HandleUptime()+0x44>)
 8009b48:	fbb2 f3f3 	udiv	r3, r2, r3
 8009b4c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009b50:	4a09      	ldr	r2, [pc, #36]	; (8009b78 <RemoteConfig::HandleUptime()+0x48>)
 8009b52:	6828      	ldr	r0, [r5, #0]
 8009b54:	f7ff fd84 	bl	8009660 <snprintf>
 8009b58:	f642 1305 	movw	r3, #10501	; 0x2905
 8009b5c:	9300      	str	r3, [sp, #0]
 8009b5e:	b282      	uxth	r2, r0
 8009b60:	69a3      	ldr	r3, [r4, #24]
 8009b62:	6829      	ldr	r1, [r5, #0]
 8009b64:	7d20      	ldrb	r0, [r4, #20]
 8009b66:	f006 ffdd 	bl	8010b24 <udp_send>
 8009b6a:	b003      	add	sp, #12
 8009b6c:	bd30      	pop	{r4, r5, pc}
 8009b6e:	4770      	bx	lr
 8009b70:	2001d994 	mulcs	r1, r4, r9
 8009b74:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b78:	0801640b 	stmdaeq	r1, {r0, r1, r3, sl, sp, lr}

08009b7c <Display::Status(Display7SegmentMessage)>:
 8009b7c:	7c43      	ldrb	r3, [r0, #17]
 8009b7e:	b1bb      	cbz	r3, 8009bb0 <Display::Status(Display7SegmentMessage)+0x34>
 8009b80:	b513      	push	{r0, r1, r4, lr}
 8009b82:	2312      	movs	r3, #18
 8009b84:	43c9      	mvns	r1, r1
 8009b86:	4604      	mov	r4, r0
 8009b88:	f88d 3004 	strb.w	r3, [sp, #4]
 8009b8c:	7a00      	ldrb	r0, [r0, #8]
 8009b8e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8009b92:	f88d 3005 	strb.w	r3, [sp, #5]
 8009b96:	f88d 1006 	strb.w	r1, [sp, #6]
 8009b9a:	f00b fa03 	bl	8014fa4 <gd32_i2c_set_address>
 8009b9e:	68e0      	ldr	r0, [r4, #12]
 8009ba0:	f00b f9f8 	bl	8014f94 <gd32_i2c_set_baudrate>
 8009ba4:	2103      	movs	r1, #3
 8009ba6:	a801      	add	r0, sp, #4
 8009ba8:	f00b fa02 	bl	8014fb0 <gd32_i2c_write>
 8009bac:	b002      	add	sp, #8
 8009bae:	bd10      	pop	{r4, pc}
 8009bb0:	4770      	bx	lr
	...

08009bb4 <RemoteConfig::HandleDisplaySet()>:
 8009bb4:	b508      	push	{r3, lr}
 8009bb6:	69c3      	ldr	r3, [r0, #28]
 8009bb8:	2b09      	cmp	r3, #9
 8009bba:	d10a      	bne.n	8009bd2 <RemoteConfig::HandleDisplaySet()+0x1e>
 8009bbc:	4b05      	ldr	r3, [pc, #20]	; (8009bd4 <RemoteConfig::HandleDisplaySet()+0x20>)
 8009bbe:	681b      	ldr	r3, [r3, #0]
 8009bc0:	7a59      	ldrb	r1, [r3, #9]
 8009bc2:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8009bc6:	4259      	negs	r1, r3
 8009bc8:	4159      	adcs	r1, r3
 8009bca:	4b03      	ldr	r3, [pc, #12]	; (8009bd8 <RemoteConfig::HandleDisplaySet()+0x24>)
 8009bcc:	6818      	ldr	r0, [r3, #0]
 8009bce:	f7fe fe35 	bl	800883c <Display::SetSleep(bool)>
 8009bd2:	bd08      	pop	{r3, pc}
 8009bd4:	200000ec 	andcs	r0, r0, ip, ror #1
 8009bd8:	2001d88c 	andcs	sp, r1, ip, lsl #17

08009bdc <RemoteConfig::HandleTftpSet()>:
 8009bdc:	69c3      	ldr	r3, [r0, #28]
 8009bde:	2b06      	cmp	r3, #6
 8009be0:	d127      	bne.n	8009c32 <RemoteConfig::HandleTftpSet()+0x56>
 8009be2:	b570      	push	{r4, r5, r6, lr}
 8009be4:	4b13      	ldr	r3, [pc, #76]	; (8009c34 <RemoteConfig::HandleTftpSet()+0x58>)
 8009be6:	4e14      	ldr	r6, [pc, #80]	; (8009c38 <RemoteConfig::HandleTftpSet()+0x5c>)
 8009be8:	681b      	ldr	r3, [r3, #0]
 8009bea:	4604      	mov	r4, r0
 8009bec:	799b      	ldrb	r3, [r3, #6]
 8009bee:	6835      	ldr	r5, [r6, #0]
 8009bf0:	2b30      	cmp	r3, #48	; 0x30
 8009bf2:	bf14      	ite	ne
 8009bf4:	2301      	movne	r3, #1
 8009bf6:	2300      	moveq	r3, #0
 8009bf8:	f880 3020 	strb.w	r3, [r0, #32]
 8009bfc:	d012      	beq.n	8009c24 <RemoteConfig::HandleTftpSet()+0x48>
 8009bfe:	4628      	mov	r0, r5
 8009c00:	2100      	movs	r1, #0
 8009c02:	f7fe fe1b 	bl	800883c <Display::SetSleep(bool)>
 8009c06:	6835      	ldr	r5, [r6, #0]
 8009c08:	490c      	ldr	r1, [pc, #48]	; (8009c3c <RemoteConfig::HandleTftpSet()+0x60>)
 8009c0a:	4628      	mov	r0, r5
 8009c0c:	f7fe fdb8 	bl	8008780 <Display::TextStatus(char const*)>
 8009c10:	f244 0171 	movw	r1, #16497	; 0x4071
 8009c14:	4628      	mov	r0, r5
 8009c16:	f7ff ffb1 	bl	8009b7c <Display::Status(Display7SegmentMessage)>
 8009c1a:	4620      	mov	r0, r4
 8009c1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009c20:	f000 bcae 	b.w	800a580 <RemoteConfig::PlatformHandleTftpSet()>
 8009c24:	4906      	ldr	r1, [pc, #24]	; (8009c40 <RemoteConfig::HandleTftpSet()+0x64>)
 8009c26:	4628      	mov	r0, r5
 8009c28:	f7fe fdaa 	bl	8008780 <Display::TextStatus(char const*)>
 8009c2c:	f248 0171 	movw	r1, #32881	; 0x8071
 8009c30:	e7f0      	b.n	8009c14 <RemoteConfig::HandleTftpSet()+0x38>
 8009c32:	4770      	bx	lr
 8009c34:	200000ec 	andcs	r0, r0, ip, ror #1
 8009c38:	2001d88c 	andcs	sp, r1, ip, lsl #17
 8009c3c:	08016418 	stmdaeq	r1, {r3, r4, sl, sp, lr}
 8009c40:	0801642a 	stmdaeq	r1, {r1, r3, r5, sl, sp, lr}

08009c44 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009c44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009c48:	2500      	movs	r5, #0
 8009c4a:	461f      	mov	r7, r3
 8009c4c:	6083      	str	r3, [r0, #8]
 8009c4e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009c52:	4690      	mov	r8, r2
 8009c54:	4689      	mov	r9, r1
 8009c56:	4e12      	ldr	r6, [pc, #72]	; (8009ca0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009c58:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009c5c:	f8df a044 	ldr.w	sl, [pc, #68]	; 8009ca4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009c60:	4b11      	ldr	r3, [pc, #68]	; (8009ca8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8009c62:	e9c0 1200 	strd	r1, r2, [r0]
 8009c66:	4604      	mov	r4, r0
 8009c68:	6018      	str	r0, [r3, #0]
 8009c6a:	4631      	mov	r1, r6
 8009c6c:	60c5      	str	r5, [r0, #12]
 8009c6e:	8205      	strh	r5, [r0, #16]
 8009c70:	61c5      	str	r5, [r0, #28]
 8009c72:	f880 5020 	strb.w	r5, [r0, #32]
 8009c76:	f8da 0000 	ldr.w	r0, [sl]
 8009c7a:	f007 fc21 	bl	80114c0 <Network::MacAddressCopyTo(unsigned char*)>
 8009c7e:	f642 1105 	movw	r1, #10501	; 0x2905
 8009c82:	f8da 0000 	ldr.w	r0, [sl]
 8009c86:	f886 9006 	strb.w	r9, [r6, #6]
 8009c8a:	f886 8007 	strb.w	r8, [r6, #7]
 8009c8e:	7237      	strb	r7, [r6, #8]
 8009c90:	7275      	strb	r5, [r6, #9]
 8009c92:	f007 fc0f 	bl	80114b4 <Network::Begin(unsigned short)>
 8009c96:	6160      	str	r0, [r4, #20]
 8009c98:	4620      	mov	r0, r4
 8009c9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009c9e:	bf00      	nop
 8009ca0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009ca4:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8009ca8:	20000114 	andcs	r0, r0, r4, lsl r1

08009cac <RemoteConfig::GetStringNode() const>:
 8009cac:	2012      	movs	r0, #18
 8009cae:	4b03      	ldr	r3, [pc, #12]	; (8009cbc <RemoteConfig::GetStringNode() const+0x10>)
 8009cb0:	799a      	ldrb	r2, [r3, #6]
 8009cb2:	4b03      	ldr	r3, [pc, #12]	; (8009cc0 <RemoteConfig::GetStringNode() const+0x14>)
 8009cb4:	fb00 3002 	mla	r0, r0, r2, r3
 8009cb8:	4770      	bx	lr
 8009cba:	bf00      	nop
 8009cbc:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009cc0:	080164a0 	stmdaeq	r1, {r5, r7, sl, sp, lr}

08009cc4 <RemoteConfig::GetStringOutput() const>:
 8009cc4:	200c      	movs	r0, #12
 8009cc6:	4b03      	ldr	r3, [pc, #12]	; (8009cd4 <RemoteConfig::GetStringOutput() const+0x10>)
 8009cc8:	79da      	ldrb	r2, [r3, #7]
 8009cca:	4b03      	ldr	r3, [pc, #12]	; (8009cd8 <RemoteConfig::GetStringOutput() const+0x14>)
 8009ccc:	fb00 3002 	mla	r0, r0, r2, r3
 8009cd0:	4770      	bx	lr
 8009cd2:	bf00      	nop
 8009cd4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009cd8:	08016566 	stmdaeq	r1, {r1, r2, r5, r6, r8, sl, sp, lr}

08009cdc <RemoteConfig::SetDisable(bool)>:
 8009cdc:	b538      	push	{r3, r4, r5, lr}
 8009cde:	4604      	mov	r4, r0
 8009ce0:	7b03      	ldrb	r3, [r0, #12]
 8009ce2:	b161      	cbz	r1, 8009cfe <RemoteConfig::SetDisable(bool)+0x22>
 8009ce4:	b953      	cbnz	r3, 8009cfc <RemoteConfig::SetDisable(bool)+0x20>
 8009ce6:	4b0c      	ldr	r3, [pc, #48]	; (8009d18 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009ce8:	f642 1105 	movw	r1, #10501	; 0x2905
 8009cec:	6818      	ldr	r0, [r3, #0]
 8009cee:	f007 fbe4 	bl	80114ba <Network::End(unsigned short)>
 8009cf2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009cf6:	6163      	str	r3, [r4, #20]
 8009cf8:	2301      	movs	r3, #1
 8009cfa:	7323      	strb	r3, [r4, #12]
 8009cfc:	bd38      	pop	{r3, r4, r5, pc}
 8009cfe:	2b00      	cmp	r3, #0
 8009d00:	d0fc      	beq.n	8009cfc <RemoteConfig::SetDisable(bool)+0x20>
 8009d02:	4b05      	ldr	r3, [pc, #20]	; (8009d18 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009d04:	460d      	mov	r5, r1
 8009d06:	6818      	ldr	r0, [r3, #0]
 8009d08:	f642 1105 	movw	r1, #10501	; 0x2905
 8009d0c:	f007 fbd2 	bl	80114b4 <Network::Begin(unsigned short)>
 8009d10:	7325      	strb	r5, [r4, #12]
 8009d12:	6160      	str	r0, [r4, #20]
 8009d14:	e7f2      	b.n	8009cfc <RemoteConfig::SetDisable(bool)+0x20>
 8009d16:	bf00      	nop
 8009d18:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

08009d1c <RemoteConfig::SetDisplayName(char const*)>:
 8009d1c:	2217      	movs	r2, #23
 8009d1e:	4809      	ldr	r0, [pc, #36]	; (8009d44 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009d20:	b508      	push	{r3, lr}
 8009d22:	1e4b      	subs	r3, r1, #1
 8009d24:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009d28:	b911      	cbnz	r1, 8009d30 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009d2a:	f00a f827 	bl	8013d7c <memset>
 8009d2e:	e003      	b.n	8009d38 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009d30:	3a01      	subs	r2, #1
 8009d32:	f800 1b01 	strb.w	r1, [r0], #1
 8009d36:	d1f5      	bne.n	8009d24 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009d38:	2200      	movs	r2, #0
 8009d3a:	4b03      	ldr	r3, [pc, #12]	; (8009d48 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009d3c:	f883 2020 	strb.w	r2, [r3, #32]
 8009d40:	bd08      	pop	{r3, pc}
 8009d42:	bf00      	nop
 8009d44:	200000f9 	strdcs	r0, [r0], -r9
 8009d48:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009d4c <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d4e:	4604      	mov	r4, r0
 8009d50:	4616      	mov	r6, r2
 8009d52:	460d      	mov	r5, r1
 8009d54:	4f28      	ldr	r7, [pc, #160]	; (8009df8 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009d56:	b085      	sub	sp, #20
 8009d58:	b9a9      	cbnz	r1, 8009d86 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009d5a:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009d5e:	6839      	ldr	r1, [r7, #0]
 8009d60:	aa03      	add	r2, sp, #12
 8009d62:	3105      	adds	r1, #5
 8009d64:	9303      	str	r3, [sp, #12]
 8009d66:	f000 fbe1 	bl	800a52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009d6a:	1e03      	subs	r3, r0, #0
 8009d6c:	da1b      	bge.n	8009da6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009d6e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d72:	220b      	movs	r2, #11
 8009d74:	9300      	str	r3, [sp, #0]
 8009d76:	4921      	ldr	r1, [pc, #132]	; (8009dfc <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009d78:	69a3      	ldr	r3, [r4, #24]
 8009d7a:	7d20      	ldrb	r0, [r4, #20]
 8009d7c:	f006 fed2 	bl	8010b24 <udp_send>
 8009d80:	200c      	movs	r0, #12
 8009d82:	b005      	add	sp, #20
 8009d84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009d86:	9203      	str	r2, [sp, #12]
 8009d88:	aa03      	add	r2, sp, #12
 8009d8a:	6039      	str	r1, [r7, #0]
 8009d8c:	f000 fbce 	bl	800a52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009d90:	1e03      	subs	r3, r0, #0
 8009d92:	da08      	bge.n	8009da6 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009d94:	2e0b      	cmp	r6, #11
 8009d96:	4632      	mov	r2, r6
 8009d98:	4628      	mov	r0, r5
 8009d9a:	bf28      	it	cs
 8009d9c:	220b      	movcs	r2, #11
 8009d9e:	4917      	ldr	r1, [pc, #92]	; (8009dfc <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009da0:	f009 ffca 	bl	8013d38 <memcpy>
 8009da4:	e7ec      	b.n	8009d80 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009da6:	221c      	movs	r2, #28
 8009da8:	4353      	muls	r3, r2
 8009daa:	4915      	ldr	r1, [pc, #84]	; (8009e00 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009dac:	18ca      	adds	r2, r1, r3
 8009dae:	6852      	ldr	r2, [r2, #4]
 8009db0:	58cb      	ldr	r3, [r1, r3]
 8009db2:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009db6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009dba:	07d2      	lsls	r2, r2, #31
 8009dbc:	bf48      	it	mi
 8009dbe:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009dc2:	a903      	add	r1, sp, #12
 8009dc4:	bf48      	it	mi
 8009dc6:	58d3      	ldrmi	r3, [r2, r3]
 8009dc8:	4798      	blx	r3
 8009dca:	b95d      	cbnz	r5, 8009de4 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009dcc:	f642 1305 	movw	r3, #10501	; 0x2905
 8009dd0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009dd4:	9300      	str	r3, [sp, #0]
 8009dd6:	6839      	ldr	r1, [r7, #0]
 8009dd8:	69a3      	ldr	r3, [r4, #24]
 8009dda:	7d20      	ldrb	r0, [r4, #20]
 8009ddc:	f006 fea2 	bl	8010b24 <udp_send>
 8009de0:	9803      	ldr	r0, [sp, #12]
 8009de2:	e7ce      	b.n	8009d82 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009de4:	9a03      	ldr	r2, [sp, #12]
 8009de6:	4628      	mov	r0, r5
 8009de8:	42b2      	cmp	r2, r6
 8009dea:	bf28      	it	cs
 8009dec:	4632      	movcs	r2, r6
 8009dee:	6839      	ldr	r1, [r7, #0]
 8009df0:	f009 ffad 	bl	8013d4e <memmove>
 8009df4:	e7f4      	b.n	8009de0 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009df6:	bf00      	nop
 8009df8:	200000ec 	andcs	r0, r0, ip, ror #1
 8009dfc:	0801643d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, sp, lr}
 8009e00:	08016724 	stmdaeq	r1, {r2, r5, r8, r9, sl, sp, lr}

08009e04 <RemoteConfig::HandleGetNoParams()>:
 8009e04:	2200      	movs	r2, #0
 8009e06:	4611      	mov	r1, r2
 8009e08:	f7ff bfa0 	b.w	8009d4c <RemoteConfig::HandleGet(void*, unsigned int)>

08009e0c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009e0c:	b510      	push	{r4, lr}
 8009e0e:	460c      	mov	r4, r1
 8009e10:	4b07      	ldr	r3, [pc, #28]	; (8009e30 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009e12:	b08a      	sub	sp, #40	; 0x28
 8009e14:	6819      	ldr	r1, [r3, #0]
 8009e16:	a801      	add	r0, sp, #4
 8009e18:	f000 f9e4 	bl	800a1e4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009e1c:	4905      	ldr	r1, [pc, #20]	; (8009e34 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009e1e:	4623      	mov	r3, r4
 8009e20:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009e24:	6809      	ldr	r1, [r1, #0]
 8009e26:	a801      	add	r0, sp, #4
 8009e28:	f000 fb00 	bl	800a42c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009e2c:	b00a      	add	sp, #40	; 0x28
 8009e2e:	bd10      	pop	{r4, pc}
 8009e30:	200159c0 	andcs	r5, r1, r0, asr #19
 8009e34:	200000ec 	andcs	r0, r0, ip, ror #1

08009e38 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009e38:	b510      	push	{r4, lr}
 8009e3a:	460c      	mov	r4, r1
 8009e3c:	4b07      	ldr	r3, [pc, #28]	; (8009e5c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009e3e:	b09a      	sub	sp, #104	; 0x68
 8009e40:	6819      	ldr	r1, [r3, #0]
 8009e42:	a801      	add	r0, sp, #4
 8009e44:	f007 fe4e 	bl	8011ae4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009e48:	4905      	ldr	r1, [pc, #20]	; (8009e60 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009e4a:	4623      	mov	r3, r4
 8009e4c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009e50:	6809      	ldr	r1, [r1, #0]
 8009e52:	a801      	add	r0, sp, #4
 8009e54:	f008 f81c 	bl	8011e90 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009e58:	b01a      	add	sp, #104	; 0x68
 8009e5a:	bd10      	pop	{r4, pc}
 8009e5c:	200159b8 			; <UNDEFINED> instruction: 0x200159b8
 8009e60:	200000ec 	andcs	r0, r0, ip, ror #1

08009e64 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8009e64:	b510      	push	{r4, lr}
 8009e66:	460c      	mov	r4, r1
 8009e68:	4b07      	ldr	r3, [pc, #28]	; (8009e88 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8009e6a:	b08a      	sub	sp, #40	; 0x28
 8009e6c:	6819      	ldr	r1, [r3, #0]
 8009e6e:	a801      	add	r0, sp, #4
 8009e70:	f001 ffda 	bl	800be28 <E131Params::E131Params(E131ParamsStore*)>
 8009e74:	4905      	ldr	r1, [pc, #20]	; (8009e8c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8009e76:	4623      	mov	r3, r4
 8009e78:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009e7c:	6809      	ldr	r1, [r1, #0]
 8009e7e:	a801      	add	r0, sp, #4
 8009e80:	f002 fac6 	bl	800c410 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009e84:	b00a      	add	sp, #40	; 0x28
 8009e86:	bd10      	pop	{r4, pc}
 8009e88:	200159c4 	andcs	r5, r1, r4, asr #19
 8009e8c:	200000ec 	andcs	r0, r0, ip, ror #1

08009e90 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009e90:	b510      	push	{r4, lr}
 8009e92:	460c      	mov	r4, r1
 8009e94:	4b07      	ldr	r3, [pc, #28]	; (8009eb4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009e96:	b08c      	sub	sp, #48	; 0x30
 8009e98:	6819      	ldr	r1, [r3, #0]
 8009e9a:	a801      	add	r0, sp, #4
 8009e9c:	f003 ffd2 	bl	800de44 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009ea0:	4905      	ldr	r1, [pc, #20]	; (8009eb8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009ea2:	4623      	mov	r3, r4
 8009ea4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ea8:	6809      	ldr	r1, [r1, #0]
 8009eaa:	a801      	add	r0, sp, #4
 8009eac:	f004 faee 	bl	800e48c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009eb0:	b00c      	add	sp, #48	; 0x30
 8009eb2:	bd10      	pop	{r4, pc}
 8009eb4:	200159c8 	andcs	r5, r1, r8, asr #19
 8009eb8:	200000ec 	andcs	r0, r0, ip, ror #1

08009ebc <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009ebc:	b510      	push	{r4, lr}
 8009ebe:	460c      	mov	r4, r1
 8009ec0:	4b07      	ldr	r3, [pc, #28]	; (8009ee0 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009ec2:	b08a      	sub	sp, #40	; 0x28
 8009ec4:	6819      	ldr	r1, [r3, #0]
 8009ec6:	4668      	mov	r0, sp
 8009ec8:	f008 fd7c 	bl	80129c4 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009ecc:	4905      	ldr	r1, [pc, #20]	; (8009ee4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009ece:	4623      	mov	r3, r4
 8009ed0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ed4:	4668      	mov	r0, sp
 8009ed6:	6809      	ldr	r1, [r1, #0]
 8009ed8:	f008 feac 	bl	8012c34 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009edc:	b00a      	add	sp, #40	; 0x28
 8009ede:	bd10      	pop	{r4, pc}
 8009ee0:	200159b4 			; <UNDEFINED> instruction: 0x200159b4
 8009ee4:	200000ec 	andcs	r0, r0, ip, ror #1

08009ee8 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009ee8:	b530      	push	{r4, r5, lr}
 8009eea:	b085      	sub	sp, #20
 8009eec:	4604      	mov	r4, r0
 8009eee:	9201      	str	r2, [sp, #4]
 8009ef0:	b9d1      	cbnz	r1, 8009f28 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009ef2:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009ef6:	9303      	str	r3, [sp, #12]
 8009ef8:	4b19      	ldr	r3, [pc, #100]	; (8009f60 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009efa:	aa03      	add	r2, sp, #12
 8009efc:	6819      	ldr	r1, [r3, #0]
 8009efe:	3101      	adds	r1, #1
 8009f00:	f000 fb14 	bl	800a52c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009f04:	2800      	cmp	r0, #0
 8009f06:	db0d      	blt.n	8009f24 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009f08:	221c      	movs	r2, #28
 8009f0a:	4b16      	ldr	r3, [pc, #88]	; (8009f64 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009f0c:	fb02 3300 	mla	r3, r2, r0, r3
 8009f10:	68da      	ldr	r2, [r3, #12]
 8009f12:	689b      	ldr	r3, [r3, #8]
 8009f14:	1051      	asrs	r1, r2, #1
 8009f16:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009f1a:	07d2      	lsls	r2, r2, #31
 8009f1c:	bf44      	itt	mi
 8009f1e:	5862      	ldrmi	r2, [r4, r1]
 8009f20:	58d3      	ldrmi	r3, [r2, r3]
 8009f22:	4798      	blx	r3
 8009f24:	b005      	add	sp, #20
 8009f26:	bd30      	pop	{r4, r5, pc}
 8009f28:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009f2c:	d8fa      	bhi.n	8009f24 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009f2e:	4b0e      	ldr	r3, [pc, #56]	; (8009f68 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009f30:	460d      	mov	r5, r1
 8009f32:	781b      	ldrb	r3, [r3, #0]
 8009f34:	07d9      	lsls	r1, r3, #31
 8009f36:	d50b      	bpl.n	8009f50 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009f38:	782b      	ldrb	r3, [r5, #0]
 8009f3a:	2b7b      	cmp	r3, #123	; 0x7b
 8009f3c:	d108      	bne.n	8009f50 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009f3e:	1e51      	subs	r1, r2, #1
 8009f40:	4628      	mov	r0, r5
 8009f42:	2200      	movs	r2, #0
 8009f44:	b289      	uxth	r1, r1
 8009f46:	f008 ff43 	bl	8012dd0 <properties::convert_json_file(char*, unsigned short, bool)>
 8009f4a:	1e02      	subs	r2, r0, #0
 8009f4c:	ddea      	ble.n	8009f24 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009f4e:	b292      	uxth	r2, r2
 8009f50:	4b03      	ldr	r3, [pc, #12]	; (8009f60 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009f52:	61e2      	str	r2, [r4, #28]
 8009f54:	4620      	mov	r0, r4
 8009f56:	601d      	str	r5, [r3, #0]
 8009f58:	aa01      	add	r2, sp, #4
 8009f5a:	1c69      	adds	r1, r5, #1
 8009f5c:	e7d0      	b.n	8009f00 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009f5e:	bf00      	nop
 8009f60:	200000ec 	andcs	r0, r0, ip, ror #1
 8009f64:	08016724 	stmdaeq	r1, {r2, r5, r8, r9, sl, sp, lr}
 8009f68:	2001d888 	andcs	sp, r1, r8, lsl #17

08009f6c <RemoteConfig::Run()>:
 8009f6c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009f70:	7b05      	ldrb	r5, [r0, #12]
 8009f72:	2d00      	cmp	r5, #0
 8009f74:	d156      	bne.n	800a024 <RemoteConfig::Run()+0xb8>
 8009f76:	4e45      	ldr	r6, [pc, #276]	; (800a08c <RemoteConfig::Run()+0x120>)
 8009f78:	4604      	mov	r4, r0
 8009f7a:	f100 0218 	add.w	r2, r0, #24
 8009f7e:	4631      	mov	r1, r6
 8009f80:	7d00      	ldrb	r0, [r0, #20]
 8009f82:	f10d 030e 	add.w	r3, sp, #14
 8009f86:	f006 fda7 	bl	8010ad8 <udp_recv2>
 8009f8a:	2803      	cmp	r0, #3
 8009f8c:	61e0      	str	r0, [r4, #28]
 8009f8e:	d949      	bls.n	800a024 <RemoteConfig::Run()+0xb8>
 8009f90:	6831      	ldr	r1, [r6, #0]
 8009f92:	1e43      	subs	r3, r0, #1
 8009f94:	5cca      	ldrb	r2, [r1, r3]
 8009f96:	2a0a      	cmp	r2, #10
 8009f98:	bf18      	it	ne
 8009f9a:	4603      	movne	r3, r0
 8009f9c:	61e3      	str	r3, [r4, #28]
 8009f9e:	7808      	ldrb	r0, [r1, #0]
 8009fa0:	283f      	cmp	r0, #63	; 0x3f
 8009fa2:	d137      	bne.n	800a014 <RemoteConfig::Run()+0xa8>
 8009fa4:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 800a090 <RemoteConfig::Run()+0x124>
 8009fa8:	462a      	mov	r2, r5
 8009faa:	4667      	mov	r7, ip
 8009fac:	3b01      	subs	r3, #1
 8009fae:	61e3      	str	r3, [r4, #28]
 8009fb0:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009fb4:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009fb8:	b16d      	cbz	r5, 8009fd6 <RemoteConfig::Run()+0x6a>
 8009fba:	4283      	cmp	r3, r0
 8009fbc:	d80d      	bhi.n	8009fda <RemoteConfig::Run()+0x6e>
 8009fbe:	3201      	adds	r2, #1
 8009fc0:	2a09      	cmp	r2, #9
 8009fc2:	f10c 0c10 	add.w	ip, ip, #16
 8009fc6:	d1f3      	bne.n	8009fb0 <RemoteConfig::Run()+0x44>
 8009fc8:	f642 1305 	movw	r3, #10501	; 0x2905
 8009fcc:	9300      	str	r3, [sp, #0]
 8009fce:	2208      	movs	r2, #8
 8009fd0:	69a3      	ldr	r3, [r4, #24]
 8009fd2:	4930      	ldr	r1, [pc, #192]	; (800a094 <RemoteConfig::Run()+0x128>)
 8009fd4:	e04e      	b.n	800a074 <RemoteConfig::Run()+0x108>
 8009fd6:	4283      	cmp	r3, r0
 8009fd8:	d1f1      	bne.n	8009fbe <RemoteConfig::Run()+0x52>
 8009fda:	460e      	mov	r6, r1
 8009fdc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009fe0:	4408      	add	r0, r1
 8009fe2:	3d01      	subs	r5, #1
 8009fe4:	4286      	cmp	r6, r0
 8009fe6:	d10b      	bne.n	800a000 <RemoteConfig::Run()+0x94>
 8009fe8:	0113      	lsls	r3, r2, #4
 8009fea:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009fee:	6852      	ldr	r2, [r2, #4]
 8009ff0:	58fb      	ldr	r3, [r7, r3]
 8009ff2:	1051      	asrs	r1, r2, #1
 8009ff4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009ff8:	07d2      	lsls	r2, r2, #31
 8009ffa:	d408      	bmi.n	800a00e <RemoteConfig::Run()+0xa2>
 8009ffc:	4798      	blx	r3
 8009ffe:	e011      	b.n	800a024 <RemoteConfig::Run()+0xb8>
 800a000:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 800a004:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 800a008:	45f0      	cmp	r8, lr
 800a00a:	d0eb      	beq.n	8009fe4 <RemoteConfig::Run()+0x78>
 800a00c:	e7d7      	b.n	8009fbe <RemoteConfig::Run()+0x52>
 800a00e:	5862      	ldr	r2, [r4, r1]
 800a010:	58d3      	ldr	r3, [r2, r3]
 800a012:	e7f3      	b.n	8009ffc <RemoteConfig::Run()+0x90>
 800a014:	7b62      	ldrb	r2, [r4, #13]
 800a016:	b92a      	cbnz	r2, 800a024 <RemoteConfig::Run()+0xb8>
 800a018:	2823      	cmp	r0, #35	; 0x23
 800a01a:	d106      	bne.n	800a02a <RemoteConfig::Run()+0xbe>
 800a01c:	4611      	mov	r1, r2
 800a01e:	4620      	mov	r0, r4
 800a020:	f7ff ff62 	bl	8009ee8 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a024:	b004      	add	sp, #16
 800a026:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a02a:	2821      	cmp	r0, #33	; 0x21
 800a02c:	d1fa      	bne.n	800a024 <RemoteConfig::Run()+0xb8>
 800a02e:	3b01      	subs	r3, #1
 800a030:	2b05      	cmp	r3, #5
 800a032:	61e3      	str	r3, [r4, #28]
 800a034:	d918      	bls.n	800a068 <RemoteConfig::Run()+0xfc>
 800a036:	460a      	mov	r2, r1
 800a038:	4608      	mov	r0, r1
 800a03a:	4d17      	ldr	r5, [pc, #92]	; (800a098 <RemoteConfig::Run()+0x12c>)
 800a03c:	f101 0c05 	add.w	ip, r1, #5
 800a040:	4560      	cmp	r0, ip
 800a042:	d01b      	beq.n	800a07c <RemoteConfig::Run()+0x110>
 800a044:	f815 6b01 	ldrb.w	r6, [r5], #1
 800a048:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 800a04c:	42b7      	cmp	r7, r6
 800a04e:	d0f7      	beq.n	800a040 <RemoteConfig::Run()+0xd4>
 800a050:	2b08      	cmp	r3, #8
 800a052:	d909      	bls.n	800a068 <RemoteConfig::Run()+0xfc>
 800a054:	4b11      	ldr	r3, [pc, #68]	; (800a09c <RemoteConfig::Run()+0x130>)
 800a056:	3108      	adds	r1, #8
 800a058:	428a      	cmp	r2, r1
 800a05a:	d015      	beq.n	800a088 <RemoteConfig::Run()+0x11c>
 800a05c:	f813 0b01 	ldrb.w	r0, [r3], #1
 800a060:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 800a064:	4285      	cmp	r5, r0
 800a066:	d0f7      	beq.n	800a058 <RemoteConfig::Run()+0xec>
 800a068:	f642 1305 	movw	r3, #10501	; 0x2905
 800a06c:	2208      	movs	r2, #8
 800a06e:	9300      	str	r3, [sp, #0]
 800a070:	69a3      	ldr	r3, [r4, #24]
 800a072:	490b      	ldr	r1, [pc, #44]	; (800a0a0 <RemoteConfig::Run()+0x134>)
 800a074:	7d20      	ldrb	r0, [r4, #20]
 800a076:	f006 fd55 	bl	8010b24 <udp_send>
 800a07a:	e7d3      	b.n	800a024 <RemoteConfig::Run()+0xb8>
 800a07c:	2300      	movs	r3, #0
 800a07e:	4a09      	ldr	r2, [pc, #36]	; (800a0a4 <RemoteConfig::Run()+0x138>)
 800a080:	011b      	lsls	r3, r3, #4
 800a082:	4620      	mov	r0, r4
 800a084:	58d3      	ldr	r3, [r2, r3]
 800a086:	e7b9      	b.n	8009ffc <RemoteConfig::Run()+0x90>
 800a088:	2301      	movs	r3, #1
 800a08a:	e7f8      	b.n	800a07e <RemoteConfig::Run()+0x112>
 800a08c:	200000ec 	andcs	r0, r0, ip, ror #1
 800a090:	080165f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, sp, lr}
 800a094:	08016461 	stmdaeq	r1, {r0, r5, r6, sl, sp, lr}
 800a098:	08016449 	stmdaeq	r1, {r0, r3, r6, sl, sp, lr}
 800a09c:	0801644f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp, lr}
 800a0a0:	08016458 	stmdaeq	r1, {r3, r4, r6, sl, sp, lr}
 800a0a4:	08016688 	stmdaeq	r1, {r3, r7, r9, sl, sp, lr}

0800a0a8 <RemoteConfig::HandleSetRconfig()>:
 800a0a8:	b510      	push	{r4, lr}
 800a0aa:	4604      	mov	r4, r0
 800a0ac:	4b08      	ldr	r3, [pc, #32]	; (800a0d0 <RemoteConfig::HandleSetRconfig()+0x28>)
 800a0ae:	b08a      	sub	sp, #40	; 0x28
 800a0b0:	6819      	ldr	r1, [r3, #0]
 800a0b2:	a801      	add	r0, sp, #4
 800a0b4:	f000 f896 	bl	800a1e4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800a0b8:	4b06      	ldr	r3, [pc, #24]	; (800a0d4 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800a0ba:	69e2      	ldr	r2, [r4, #28]
 800a0bc:	6819      	ldr	r1, [r3, #0]
 800a0be:	a801      	add	r0, sp, #4
 800a0c0:	f000 f8a6 	bl	800a210 <RemoteConfigParams::Load(char const*, unsigned int)>
 800a0c4:	4621      	mov	r1, r4
 800a0c6:	a801      	add	r0, sp, #4
 800a0c8:	f000 f9bd 	bl	800a446 <RemoteConfigParams::Set(RemoteConfig*)>
 800a0cc:	b00a      	add	sp, #40	; 0x28
 800a0ce:	bd10      	pop	{r4, pc}
 800a0d0:	200159c0 	andcs	r5, r1, r0, asr #19
 800a0d4:	200000ec 	andcs	r0, r0, ip, ror #1

0800a0d8 <RemoteConfig::HandleSetNetworkTxt()>:
 800a0d8:	b510      	push	{r4, lr}
 800a0da:	4604      	mov	r4, r0
 800a0dc:	4b06      	ldr	r3, [pc, #24]	; (800a0f8 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800a0de:	b09a      	sub	sp, #104	; 0x68
 800a0e0:	6819      	ldr	r1, [r3, #0]
 800a0e2:	a801      	add	r0, sp, #4
 800a0e4:	f007 fcfe 	bl	8011ae4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a0e8:	4b04      	ldr	r3, [pc, #16]	; (800a0fc <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800a0ea:	69e2      	ldr	r2, [r4, #28]
 800a0ec:	6819      	ldr	r1, [r3, #0]
 800a0ee:	a801      	add	r0, sp, #4
 800a0f0:	f007 fd10 	bl	8011b14 <NetworkParams::Load(char const*, unsigned int)>
 800a0f4:	b01a      	add	sp, #104	; 0x68
 800a0f6:	bd10      	pop	{r4, pc}
 800a0f8:	200159b8 			; <UNDEFINED> instruction: 0x200159b8
 800a0fc:	200000ec 	andcs	r0, r0, ip, ror #1

0800a100 <RemoteConfig::HandleSetE131Txt()>:
 800a100:	b510      	push	{r4, lr}
 800a102:	4604      	mov	r4, r0
 800a104:	4b06      	ldr	r3, [pc, #24]	; (800a120 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800a106:	b08a      	sub	sp, #40	; 0x28
 800a108:	6819      	ldr	r1, [r3, #0]
 800a10a:	a801      	add	r0, sp, #4
 800a10c:	f001 fe8c 	bl	800be28 <E131Params::E131Params(E131ParamsStore*)>
 800a110:	4b04      	ldr	r3, [pc, #16]	; (800a124 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800a112:	69e2      	ldr	r2, [r4, #28]
 800a114:	6819      	ldr	r1, [r3, #0]
 800a116:	a801      	add	r0, sp, #4
 800a118:	f001 feb6 	bl	800be88 <E131Params::Load(char const*, unsigned int)>
 800a11c:	b00a      	add	sp, #40	; 0x28
 800a11e:	bd10      	pop	{r4, pc}
 800a120:	200159c4 	andcs	r5, r1, r4, asr #19
 800a124:	200000ec 	andcs	r0, r0, ip, ror #1

0800a128 <RemoteConfig::HandleSetDevicesTxt()>:
 800a128:	b510      	push	{r4, lr}
 800a12a:	4604      	mov	r4, r0
 800a12c:	4b06      	ldr	r3, [pc, #24]	; (800a148 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800a12e:	b08c      	sub	sp, #48	; 0x30
 800a130:	6819      	ldr	r1, [r3, #0]
 800a132:	a801      	add	r0, sp, #4
 800a134:	f003 fe86 	bl	800de44 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800a138:	4b04      	ldr	r3, [pc, #16]	; (800a14c <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800a13a:	69e2      	ldr	r2, [r4, #28]
 800a13c:	6819      	ldr	r1, [r3, #0]
 800a13e:	a801      	add	r0, sp, #4
 800a140:	f003 feae 	bl	800dea0 <PixelDmxParams::Load(char const*, unsigned int)>
 800a144:	b00c      	add	sp, #48	; 0x30
 800a146:	bd10      	pop	{r4, pc}
 800a148:	200159c8 	andcs	r5, r1, r8, asr #19
 800a14c:	200000ec 	andcs	r0, r0, ip, ror #1

0800a150 <RemoteConfig::HandleSetDisplayTxt()>:
 800a150:	b510      	push	{r4, lr}
 800a152:	4604      	mov	r4, r0
 800a154:	4b06      	ldr	r3, [pc, #24]	; (800a170 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800a156:	b08a      	sub	sp, #40	; 0x28
 800a158:	6819      	ldr	r1, [r3, #0]
 800a15a:	4668      	mov	r0, sp
 800a15c:	f008 fc32 	bl	80129c4 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a160:	4b04      	ldr	r3, [pc, #16]	; (800a174 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800a162:	4668      	mov	r0, sp
 800a164:	69e2      	ldr	r2, [r4, #28]
 800a166:	6819      	ldr	r1, [r3, #0]
 800a168:	f008 fc46 	bl	80129f8 <DisplayUdfParams::Load(char const*, unsigned int)>
 800a16c:	b00a      	add	sp, #40	; 0x28
 800a16e:	bd10      	pop	{r4, pc}
 800a170:	200159b4 			; <UNDEFINED> instruction: 0x200159b4
 800a174:	200000ec 	andcs	r0, r0, ip, ror #1

0800a178 <RemoteConfig::HandleFactory()>:
 800a178:	b538      	push	{r3, r4, r5, lr}
 800a17a:	2400      	movs	r4, #0
 800a17c:	4d04      	ldr	r5, [pc, #16]	; (800a190 <RemoteConfig::HandleFactory()+0x18>)
 800a17e:	4621      	mov	r1, r4
 800a180:	6828      	ldr	r0, [r5, #0]
 800a182:	3401      	adds	r4, #1
 800a184:	f005 fccc 	bl	800fb20 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800a188:	2c1c      	cmp	r4, #28
 800a18a:	d1f8      	bne.n	800a17e <RemoteConfig::HandleFactory()+0x6>
 800a18c:	bd38      	pop	{r3, r4, r5, pc}
 800a18e:	bf00      	nop
 800a190:	200159ac 	andcs	r5, r1, ip, lsr #19

0800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a194:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a196:	460b      	mov	r3, r1
 800a198:	8885      	ldrh	r5, [r0, #4]
 800a19a:	88c1      	ldrh	r1, [r0, #6]
 800a19c:	42a9      	cmp	r1, r5
 800a19e:	d214      	bcs.n	800a1ca <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a1a0:	4604      	mov	r4, r0
 800a1a2:	6800      	ldr	r0, [r0, #0]
 800a1a4:	1a6d      	subs	r5, r5, r1
 800a1a6:	4408      	add	r0, r1
 800a1a8:	7a21      	ldrb	r1, [r4, #8]
 800a1aa:	b91a      	cbnz	r2, 800a1b4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a1ac:	b919      	cbnz	r1, 800a1b6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a1ae:	4a0a      	ldr	r2, [pc, #40]	; (800a1d8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a1b0:	9100      	str	r1, [sp, #0]
 800a1b2:	e002      	b.n	800a1ba <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a1b4:	b159      	cbz	r1, 800a1ce <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a1b6:	9200      	str	r2, [sp, #0]
 800a1b8:	4a08      	ldr	r2, [pc, #32]	; (800a1dc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a1ba:	4629      	mov	r1, r5
 800a1bc:	f7ff fa50 	bl	8009660 <snprintf>
 800a1c0:	4285      	cmp	r5, r0
 800a1c2:	bfa2      	ittt	ge
 800a1c4:	88e3      	ldrhge	r3, [r4, #6]
 800a1c6:	181b      	addge	r3, r3, r0
 800a1c8:	80e3      	strhge	r3, [r4, #6]
 800a1ca:	b003      	add	sp, #12
 800a1cc:	bd30      	pop	{r4, r5, pc}
 800a1ce:	2201      	movs	r2, #1
 800a1d0:	9200      	str	r2, [sp, #0]
 800a1d2:	4a03      	ldr	r2, [pc, #12]	; (800a1e0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a1d4:	e7f1      	b.n	800a1ba <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a1d6:	bf00      	nop
 800a1d8:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 800a1dc:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800a1e0:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}

0800a1e4 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800a1e4:	b510      	push	{r4, lr}
 800a1e6:	4604      	mov	r4, r0
 800a1e8:	2220      	movs	r2, #32
 800a1ea:	f840 1b04 	str.w	r1, [r0], #4
 800a1ee:	2100      	movs	r1, #0
 800a1f0:	f009 fdc4 	bl	8013d7c <memset>
 800a1f4:	4620      	mov	r0, r4
 800a1f6:	bd10      	pop	{r4, pc}

0800a1f8 <RemoteConfigParams::Load()>:
 800a1f8:	b508      	push	{r3, lr}
 800a1fa:	2300      	movs	r3, #0
 800a1fc:	4601      	mov	r1, r0
 800a1fe:	6043      	str	r3, [r0, #4]
 800a200:	6800      	ldr	r0, [r0, #0]
 800a202:	b120      	cbz	r0, 800a20e <RemoteConfigParams::Load()+0x16>
 800a204:	6803      	ldr	r3, [r0, #0]
 800a206:	3104      	adds	r1, #4
 800a208:	68db      	ldr	r3, [r3, #12]
 800a20a:	4798      	blx	r3
 800a20c:	2001      	movs	r0, #1
 800a20e:	bd08      	pop	{r3, pc}

0800a210 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800a210:	2300      	movs	r3, #0
 800a212:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a214:	460d      	mov	r5, r1
 800a216:	4616      	mov	r6, r2
 800a218:	4604      	mov	r4, r0
 800a21a:	6043      	str	r3, [r0, #4]
 800a21c:	4602      	mov	r2, r0
 800a21e:	490a      	ldr	r1, [pc, #40]	; (800a248 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800a220:	4668      	mov	r0, sp
 800a222:	f008 ff27 	bl	8013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a226:	4632      	mov	r2, r6
 800a228:	4629      	mov	r1, r5
 800a22a:	4668      	mov	r0, sp
 800a22c:	f008 ff26 	bl	801307c <ReadConfigFile::Read(char const*, unsigned int)>
 800a230:	4621      	mov	r1, r4
 800a232:	f851 0b04 	ldr.w	r0, [r1], #4
 800a236:	6803      	ldr	r3, [r0, #0]
 800a238:	689b      	ldr	r3, [r3, #8]
 800a23a:	4798      	blx	r3
 800a23c:	4668      	mov	r0, sp
 800a23e:	f008 ff1c 	bl	801307a <ReadConfigFile::~ReadConfigFile()>
 800a242:	b002      	add	sp, #8
 800a244:	bd70      	pop	{r4, r5, r6, pc}
 800a246:	bf00      	nop
 800a248:	0800a309 	stmdaeq	r0, {r0, r3, r8, r9, sp, pc}

0800a24c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800a24c:	6843      	ldr	r3, [r0, #4]
 800a24e:	b111      	cbz	r1, 800a256 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800a250:	4313      	orrs	r3, r2
 800a252:	6043      	str	r3, [r0, #4]
 800a254:	4770      	bx	lr
 800a256:	ea23 0302 	bic.w	r3, r3, r2
 800a25a:	e7fa      	b.n	800a252 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800a25c <RemoteConfigParams::callbackFunction(char const*)>:
 800a25c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a25e:	460d      	mov	r5, r1
 800a260:	4604      	mov	r4, r0
 800a262:	4923      	ldr	r1, [pc, #140]	; (800a2f0 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800a264:	4628      	mov	r0, r5
 800a266:	f10d 0203 	add.w	r2, sp, #3
 800a26a:	f009 f83f 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a26e:	b940      	cbnz	r0, 800a282 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800a270:	2201      	movs	r2, #1
 800a272:	4620      	mov	r0, r4
 800a274:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800a278:	b003      	add	sp, #12
 800a27a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a27e:	f7ff bfe5 	b.w	800a24c <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800a282:	4628      	mov	r0, r5
 800a284:	491b      	ldr	r1, [pc, #108]	; (800a2f4 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800a286:	f10d 0203 	add.w	r2, sp, #3
 800a28a:	f009 f82f 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a28e:	b908      	cbnz	r0, 800a294 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a290:	2202      	movs	r2, #2
 800a292:	e7ee      	b.n	800a272 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a294:	4628      	mov	r0, r5
 800a296:	4918      	ldr	r1, [pc, #96]	; (800a2f8 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800a298:	f10d 0203 	add.w	r2, sp, #3
 800a29c:	f009 f826 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a2a0:	b908      	cbnz	r0, 800a2a6 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800a2a2:	2204      	movs	r2, #4
 800a2a4:	e7e5      	b.n	800a272 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a2a6:	4628      	mov	r0, r5
 800a2a8:	4914      	ldr	r1, [pc, #80]	; (800a2fc <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800a2aa:	f10d 0203 	add.w	r2, sp, #3
 800a2ae:	f009 f81d 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a2b2:	b908      	cbnz	r0, 800a2b8 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800a2b4:	2208      	movs	r2, #8
 800a2b6:	e7dc      	b.n	800a272 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a2b8:	4628      	mov	r0, r5
 800a2ba:	4911      	ldr	r1, [pc, #68]	; (800a300 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800a2bc:	f10d 0203 	add.w	r2, sp, #3
 800a2c0:	f009 f814 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a2c4:	b908      	cbnz	r0, 800a2ca <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800a2c6:	2220      	movs	r2, #32
 800a2c8:	e7d3      	b.n	800a272 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a2ca:	2317      	movs	r3, #23
 800a2cc:	4628      	mov	r0, r5
 800a2ce:	9301      	str	r3, [sp, #4]
 800a2d0:	490c      	ldr	r1, [pc, #48]	; (800a304 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800a2d2:	ab01      	add	r3, sp, #4
 800a2d4:	f104 020c 	add.w	r2, r4, #12
 800a2d8:	f008 ff04 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a2dc:	b930      	cbnz	r0, 800a2ec <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800a2de:	9b01      	ldr	r3, [sp, #4]
 800a2e0:	4423      	add	r3, r4
 800a2e2:	7318      	strb	r0, [r3, #12]
 800a2e4:	6863      	ldr	r3, [r4, #4]
 800a2e6:	f043 0310 	orr.w	r3, r3, #16
 800a2ea:	6063      	str	r3, [r4, #4]
 800a2ec:	b003      	add	sp, #12
 800a2ee:	bd30      	pop	{r4, r5, pc}
 800a2f0:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 800a2f4:	08016ab6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, fp, sp, lr}
 800a2f8:	08016ac4 	stmdaeq	r1, {r2, r6, r7, r9, fp, sp, lr}
 800a2fc:	08016ad2 	stmdaeq	r1, {r1, r4, r6, r7, r9, fp, sp, lr}
 800a300:	08016ae0 	stmdaeq	r1, {r5, r6, r7, r9, fp, sp, lr}
 800a304:	08016aa9 	stmdaeq	r1, {r0, r3, r5, r7, r9, fp, sp, lr}

0800a308 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a308:	f7ff bfa8 	b.w	800a25c <RemoteConfigParams::callbackFunction(char const*)>

0800a30c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800a30c:	b570      	push	{r4, r5, r6, lr}
 800a30e:	4604      	mov	r4, r0
 800a310:	4615      	mov	r5, r2
 800a312:	461e      	mov	r6, r3
 800a314:	b086      	sub	sp, #24
 800a316:	3004      	adds	r0, #4
 800a318:	2900      	cmp	r1, #0
 800a31a:	d041      	beq.n	800a3a0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800a31c:	2220      	movs	r2, #32
 800a31e:	f009 fd16 	bl	8013d4e <memmove>
 800a322:	4633      	mov	r3, r6
 800a324:	462a      	mov	r2, r5
 800a326:	4937      	ldr	r1, [pc, #220]	; (800a404 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800a328:	a803      	add	r0, sp, #12
 800a32a:	f008 fe03 	bl	8012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a32e:	6862      	ldr	r2, [r4, #4]
 800a330:	4935      	ldr	r1, [pc, #212]	; (800a408 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800a332:	f002 0201 	and.w	r2, r2, #1
 800a336:	a803      	add	r0, sp, #12
 800a338:	f7ff ff2c 	bl	800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a33c:	6862      	ldr	r2, [r4, #4]
 800a33e:	4933      	ldr	r1, [pc, #204]	; (800a40c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800a340:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a344:	a803      	add	r0, sp, #12
 800a346:	f7ff ff25 	bl	800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a34a:	6862      	ldr	r2, [r4, #4]
 800a34c:	4930      	ldr	r1, [pc, #192]	; (800a410 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a34e:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a352:	a803      	add	r0, sp, #12
 800a354:	f7ff ff1e 	bl	800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a358:	6862      	ldr	r2, [r4, #4]
 800a35a:	492e      	ldr	r1, [pc, #184]	; (800a414 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a35c:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a360:	a803      	add	r0, sp, #12
 800a362:	f7ff ff17 	bl	800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a366:	6862      	ldr	r2, [r4, #4]
 800a368:	492b      	ldr	r1, [pc, #172]	; (800a418 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a36a:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a36e:	a803      	add	r0, sp, #12
 800a370:	f7ff ff10 	bl	800a194 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a374:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a378:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a37c:	6862      	ldr	r2, [r4, #4]
 800a37e:	42ab      	cmp	r3, r5
 800a380:	d223      	bcs.n	800a3ca <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800a382:	9803      	ldr	r0, [sp, #12]
 800a384:	06d2      	lsls	r2, r2, #27
 800a386:	4418      	add	r0, r3
 800a388:	eba5 0503 	sub.w	r5, r5, r3
 800a38c:	f104 040c 	add.w	r4, r4, #12
 800a390:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a394:	d40b      	bmi.n	800a3ae <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a396:	b95b      	cbnz	r3, 800a3b0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a398:	4b20      	ldr	r3, [pc, #128]	; (800a41c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a39a:	4a21      	ldr	r2, [pc, #132]	; (800a420 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a39c:	9400      	str	r4, [sp, #0]
 800a39e:	e00a      	b.n	800a3b6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a3a0:	6823      	ldr	r3, [r4, #0]
 800a3a2:	4601      	mov	r1, r0
 800a3a4:	681a      	ldr	r2, [r3, #0]
 800a3a6:	4618      	mov	r0, r3
 800a3a8:	68d2      	ldr	r2, [r2, #12]
 800a3aa:	4790      	blx	r2
 800a3ac:	e7b9      	b.n	800a322 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a3ae:	b32b      	cbz	r3, 800a3fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a3b0:	4b1a      	ldr	r3, [pc, #104]	; (800a41c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a3b2:	4a1c      	ldr	r2, [pc, #112]	; (800a424 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a3b4:	9400      	str	r4, [sp, #0]
 800a3b6:	4629      	mov	r1, r5
 800a3b8:	f7ff f952 	bl	8009660 <snprintf>
 800a3bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a3c0:	4285      	cmp	r5, r0
 800a3c2:	bfa4      	itt	ge
 800a3c4:	181b      	addge	r3, r3, r0
 800a3c6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a3ca:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a3ce:	b17b      	cbz	r3, 800a3f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a3d0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a3d4:	9b03      	ldr	r3, [sp, #12]
 800a3d6:	4413      	add	r3, r2
 800a3d8:	227d      	movs	r2, #125	; 0x7d
 800a3da:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a3de:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a3e2:	9903      	ldr	r1, [sp, #12]
 800a3e4:	54ca      	strb	r2, [r1, r3]
 800a3e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a3ea:	3301      	adds	r3, #1
 800a3ec:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a3f0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a3f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a3f6:	601a      	str	r2, [r3, #0]
 800a3f8:	b006      	add	sp, #24
 800a3fa:	bd70      	pop	{r4, r5, r6, pc}
 800a3fc:	4b07      	ldr	r3, [pc, #28]	; (800a41c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a3fe:	4a0a      	ldr	r2, [pc, #40]	; (800a428 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a400:	9400      	str	r4, [sp, #0]
 800a402:	e7d8      	b.n	800a3b6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a404:	08016a9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, fp, sp, lr}
 800a408:	08016a95 	stmdaeq	r1, {r0, r2, r4, r7, r9, fp, sp, lr}
 800a40c:	08016ab6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, fp, sp, lr}
 800a410:	08016ac4 	stmdaeq	r1, {r2, r6, r7, r9, fp, sp, lr}
 800a414:	08016ad2 	stmdaeq	r1, {r1, r4, r6, r7, r9, fp, sp, lr}
 800a418:	08016ae0 	stmdaeq	r1, {r5, r6, r7, r9, fp, sp, lr}
 800a41c:	08016aa9 	stmdaeq	r1, {r0, r3, r5, r7, r9, fp, sp, lr}
 800a420:	080166c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, sp, lr}
 800a424:	080166b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr}
 800a428:	080166c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, lr}

0800a42c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a42c:	b513      	push	{r0, r1, r4, lr}
 800a42e:	6804      	ldr	r4, [r0, #0]
 800a430:	b914      	cbnz	r4, 800a438 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a432:	601c      	str	r4, [r3, #0]
 800a434:	b002      	add	sp, #8
 800a436:	bd10      	pop	{r4, pc}
 800a438:	9300      	str	r3, [sp, #0]
 800a43a:	4613      	mov	r3, r2
 800a43c:	460a      	mov	r2, r1
 800a43e:	2100      	movs	r1, #0
 800a440:	f7ff ff64 	bl	800a30c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a444:	e7f6      	b.n	800a434 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a446 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a446:	b538      	push	{r3, r4, r5, lr}
 800a448:	460c      	mov	r4, r1
 800a44a:	4605      	mov	r5, r0
 800a44c:	6841      	ldr	r1, [r0, #4]
 800a44e:	4620      	mov	r0, r4
 800a450:	f001 0101 	and.w	r1, r1, #1
 800a454:	f7ff fc42 	bl	8009cdc <RemoteConfig::SetDisable(bool)>
 800a458:	686b      	ldr	r3, [r5, #4]
 800a45a:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a45e:	7362      	strb	r2, [r4, #13]
 800a460:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a464:	73a2      	strb	r2, [r4, #14]
 800a466:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a46a:	73e2      	strb	r2, [r4, #15]
 800a46c:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a470:	06db      	lsls	r3, r3, #27
 800a472:	7422      	strb	r2, [r4, #16]
 800a474:	d506      	bpl.n	800a484 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a476:	4620      	mov	r0, r4
 800a478:	f105 010c 	add.w	r1, r5, #12
 800a47c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a480:	f7ff bc4c 	b.w	8009d1c <RemoteConfig::SetDisplayName(char const*)>
 800a484:	bd38      	pop	{r3, r4, r5, pc}

0800a486 <RemoteConfigParams::Dump()>:
 800a486:	4770      	bx	lr

0800a488 <RemoteConfig::HandleReboot()>:
 800a488:	7b83      	ldrb	r3, [r0, #14]
 800a48a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a48c:	2b00      	cmp	r3, #0
 800a48e:	d03c      	beq.n	800a50a <RemoteConfig::HandleReboot()+0x82>
 800a490:	2301      	movs	r3, #1
 800a492:	4c1f      	ldr	r4, [pc, #124]	; (800a510 <RemoteConfig::HandleReboot()+0x88>)
 800a494:	7443      	strb	r3, [r0, #17]
 800a496:	6825      	ldr	r5, [r4, #0]
 800a498:	69a8      	ldr	r0, [r5, #24]
 800a49a:	b138      	cbz	r0, 800a4ac <RemoteConfig::HandleReboot()+0x24>
 800a49c:	2100      	movs	r1, #0
 800a49e:	6803      	ldr	r3, [r0, #0]
 800a4a0:	7429      	strb	r1, [r5, #16]
 800a4a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a4a4:	4798      	blx	r3
 800a4a6:	4b1b      	ldr	r3, [pc, #108]	; (800a514 <RemoteConfig::HandleReboot()+0x8c>)
 800a4a8:	681b      	ldr	r3, [r3, #0]
 800a4aa:	606b      	str	r3, [r5, #4]
 800a4ac:	4d1a      	ldr	r5, [pc, #104]	; (800a518 <RemoteConfig::HandleReboot()+0x90>)
 800a4ae:	6828      	ldr	r0, [r5, #0]
 800a4b0:	f005 fbba 	bl	800fc28 <SpiFlashStore::Flash()>
 800a4b4:	2800      	cmp	r0, #0
 800a4b6:	d1fa      	bne.n	800a4ae <RemoteConfig::HandleReboot()+0x26>
 800a4b8:	4b18      	ldr	r3, [pc, #96]	; (800a51c <RemoteConfig::HandleReboot()+0x94>)
 800a4ba:	6818      	ldr	r0, [r3, #0]
 800a4bc:	f006 fff2 	bl	80114a4 <Network::Shutdown()>
 800a4c0:	4817      	ldr	r0, [pc, #92]	; (800a520 <RemoteConfig::HandleReboot()+0x98>)
 800a4c2:	f7ff f8a5 	bl	8009610 <printf>
 800a4c6:	6823      	ldr	r3, [r4, #0]
 800a4c8:	6998      	ldr	r0, [r3, #24]
 800a4ca:	b110      	cbz	r0, 800a4d2 <RemoteConfig::HandleReboot()+0x4a>
 800a4cc:	6803      	ldr	r3, [r0, #0]
 800a4ce:	68db      	ldr	r3, [r3, #12]
 800a4d0:	4798      	blx	r3
 800a4d2:	6824      	ldr	r4, [r4, #0]
 800a4d4:	4913      	ldr	r1, [pc, #76]	; (800a524 <RemoteConfig::HandleReboot()+0x9c>)
 800a4d6:	4620      	mov	r0, r4
 800a4d8:	f7fe f952 	bl	8008780 <Display::TextStatus(char const*)>
 800a4dc:	7c63      	ldrb	r3, [r4, #17]
 800a4de:	b183      	cbz	r3, 800a502 <RemoteConfig::HandleReboot()+0x7a>
 800a4e0:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a4e4:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a4e8:	23bf      	movs	r3, #191	; 0xbf
 800a4ea:	7a20      	ldrb	r0, [r4, #8]
 800a4ec:	f88d 3006 	strb.w	r3, [sp, #6]
 800a4f0:	f00a fd58 	bl	8014fa4 <gd32_i2c_set_address>
 800a4f4:	68e0      	ldr	r0, [r4, #12]
 800a4f6:	f00a fd4d 	bl	8014f94 <gd32_i2c_set_baudrate>
 800a4fa:	2103      	movs	r1, #3
 800a4fc:	a801      	add	r0, sp, #4
 800a4fe:	f00a fd57 	bl	8014fb0 <gd32_i2c_write>
 800a502:	4b09      	ldr	r3, [pc, #36]	; (800a528 <RemoteConfig::HandleReboot()+0xa0>)
 800a504:	6818      	ldr	r0, [r3, #0]
 800a506:	f009 fb23 	bl	8013b50 <Hardware::Reboot()>
 800a50a:	b003      	add	sp, #12
 800a50c:	bd30      	pop	{r4, r5, pc}
 800a50e:	bf00      	nop
 800a510:	2001d88c 	andcs	sp, r1, ip, lsl #17
 800a514:	2001d994 	mulcs	r1, r4, r9
 800a518:	200159ac 	andcs	r5, r1, ip, lsr #19
 800a51c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800a520:	080166cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, sp, lr}
 800a524:	080166db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r9, sl, sp, lr}
 800a528:	2001d97c 	andcs	sp, r1, ip, ror r9

0800a52c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a52c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a530:	2000      	movs	r0, #0
 800a532:	4d12      	ldr	r5, [pc, #72]	; (800a57c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a534:	f10d 0c04 	add.w	ip, sp, #4
 800a538:	6814      	ldr	r4, [r2, #0]
 800a53a:	7d2b      	ldrb	r3, [r5, #20]
 800a53c:	692e      	ldr	r6, [r5, #16]
 800a53e:	42a3      	cmp	r3, r4
 800a540:	bf34      	ite	cc
 800a542:	4664      	movcc	r4, ip
 800a544:	4614      	movcs	r4, r2
 800a546:	9301      	str	r3, [sp, #4]
 800a548:	6827      	ldr	r7, [r4, #0]
 800a54a:	460c      	mov	r4, r1
 800a54c:	3e01      	subs	r6, #1
 800a54e:	440f      	add	r7, r1
 800a550:	42bc      	cmp	r4, r7
 800a552:	d101      	bne.n	800a558 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a554:	6013      	str	r3, [r2, #0]
 800a556:	e00c      	b.n	800a572 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a558:	f894 8000 	ldrb.w	r8, [r4]
 800a55c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a560:	45f0      	cmp	r8, lr
 800a562:	d009      	beq.n	800a578 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a564:	3001      	adds	r0, #1
 800a566:	2805      	cmp	r0, #5
 800a568:	f105 051c 	add.w	r5, r5, #28
 800a56c:	d1e4      	bne.n	800a538 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a56e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a572:	b002      	add	sp, #8
 800a574:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a578:	3401      	adds	r4, #1
 800a57a:	e7e9      	b.n	800a550 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a57c:	08016724 	stmdaeq	r1, {r2, r5, r8, r9, sl, sp, lr}

0800a580 <RemoteConfig::PlatformHandleTftpSet()>:
 800a580:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a584:	b109      	cbz	r1, 800a58a <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a586:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a58a:	2002      	movs	r0, #2
 800a58c:	f009 bdee 	b.w	801416c <bkp_data_write>

0800a590 <RemoteConfig::PlatformHandleTftpGet()>:
 800a590:	b510      	push	{r4, lr}
 800a592:	4604      	mov	r4, r0
 800a594:	2002      	movs	r0, #2
 800a596:	f009 fdff 	bl	8014198 <bkp_data_read>
 800a59a:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a59e:	1ac3      	subs	r3, r0, r3
 800a5a0:	4258      	negs	r0, r3
 800a5a2:	4158      	adcs	r0, r3
 800a5a4:	f884 0020 	strb.w	r0, [r4, #32]
 800a5a8:	bd10      	pop	{r4, pc}

0800a5aa <strcmp>:
 800a5aa:	1e43      	subs	r3, r0, #1
 800a5ac:	3901      	subs	r1, #1
 800a5ae:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a5b2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a5b6:	4290      	cmp	r0, r2
 800a5b8:	d001      	beq.n	800a5be <strcmp+0x14>
 800a5ba:	1a80      	subs	r0, r0, r2
 800a5bc:	e001      	b.n	800a5c2 <strcmp+0x18>
 800a5be:	2800      	cmp	r0, #0
 800a5c0:	d1f5      	bne.n	800a5ae <strcmp+0x4>
 800a5c2:	4770      	bx	lr

0800a5c4 <strcasecmp>:
 800a5c4:	b530      	push	{r4, r5, lr}
 800a5c6:	1e42      	subs	r2, r0, #1
 800a5c8:	3901      	subs	r1, #1
 800a5ca:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a5ce:	4604      	mov	r4, r0
 800a5d0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a5d4:	2b19      	cmp	r3, #25
 800a5d6:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a5da:	bf98      	it	ls
 800a5dc:	f100 0420 	addls.w	r4, r0, #32
 800a5e0:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a5e4:	2d19      	cmp	r5, #25
 800a5e6:	bf98      	it	ls
 800a5e8:	3320      	addls	r3, #32
 800a5ea:	42a3      	cmp	r3, r4
 800a5ec:	d001      	beq.n	800a5f2 <strcasecmp+0x2e>
 800a5ee:	1ae0      	subs	r0, r4, r3
 800a5f0:	e001      	b.n	800a5f6 <strcasecmp+0x32>
 800a5f2:	2800      	cmp	r0, #0
 800a5f4:	d1e9      	bne.n	800a5ca <strcasecmp+0x6>
 800a5f6:	bd30      	pop	{r4, r5, pc}

0800a5f8 <PropertiesConfig::EnableJSON(bool)>:
 800a5f8:	4a04      	ldr	r2, [pc, #16]	; (800a60c <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a5fa:	7813      	ldrb	r3, [r2, #0]
 800a5fc:	b118      	cbz	r0, 800a606 <PropertiesConfig::EnableJSON(bool)+0xe>
 800a5fe:	f043 0301 	orr.w	r3, r3, #1
 800a602:	7013      	strb	r3, [r2, #0]
 800a604:	4770      	bx	lr
 800a606:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a60a:	e7fa      	b.n	800a602 <PropertiesConfig::EnableJSON(bool)+0xa>
 800a60c:	2001d888 	andcs	sp, r1, r8, lsl #17

0800a610 <HttpDaemon::HttpDaemon()>:
 800a610:	4a08      	ldr	r2, [pc, #32]	; (800a634 <HttpDaemon::HttpDaemon()+0x24>)
 800a612:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a616:	6002      	str	r2, [r0, #0]
 800a618:	2200      	movs	r2, #0
 800a61a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a61e:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a622:	2102      	movs	r1, #2
 800a624:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a628:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a62c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a630:	60c2      	str	r2, [r0, #12]
 800a632:	4770      	bx	lr
 800a634:	08016a15 	stmdaeq	r1, {r0, r2, r4, r9, fp, sp, lr}

0800a638 <HttpDaemon::Start()>:
 800a638:	4b04      	ldr	r3, [pc, #16]	; (800a64c <HttpDaemon::Start()+0x14>)
 800a63a:	b510      	push	{r4, lr}
 800a63c:	2150      	movs	r1, #80	; 0x50
 800a63e:	4604      	mov	r4, r0
 800a640:	6818      	ldr	r0, [r3, #0]
 800a642:	f007 fa43 	bl	8011acc <Network::TcpBegin(unsigned short)>
 800a646:	6120      	str	r0, [r4, #16]
 800a648:	bd10      	pop	{r4, pc}
 800a64a:	bf00      	nop
 800a64c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800a650 <HttpDaemon::ParseMethod(char*)>:
 800a650:	b538      	push	{r3, r4, r5, lr}
 800a652:	4604      	mov	r4, r0
 800a654:	4608      	mov	r0, r1
 800a656:	491a      	ldr	r1, [pc, #104]	; (800a6c0 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a658:	f009 fbba 	bl	8013dd0 <strtok>
 800a65c:	4605      	mov	r5, r0
 800a65e:	b360      	cbz	r0, 800a6ba <HttpDaemon::ParseMethod(char*)+0x6a>
 800a660:	4918      	ldr	r1, [pc, #96]	; (800a6c4 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a662:	f7ff ffa2 	bl	800a5aa <strcmp>
 800a666:	b128      	cbz	r0, 800a674 <HttpDaemon::ParseMethod(char*)+0x24>
 800a668:	4628      	mov	r0, r5
 800a66a:	4917      	ldr	r1, [pc, #92]	; (800a6c8 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a66c:	f7ff ff9d 	bl	800a5aa <strcmp>
 800a670:	bb18      	cbnz	r0, 800a6ba <HttpDaemon::ParseMethod(char*)+0x6a>
 800a672:	2001      	movs	r0, #1
 800a674:	61e0      	str	r0, [r4, #28]
 800a676:	4912      	ldr	r1, [pc, #72]	; (800a6c0 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a678:	2000      	movs	r0, #0
 800a67a:	f009 fba9 	bl	8013dd0 <strtok>
 800a67e:	b910      	cbnz	r0, 800a686 <HttpDaemon::ParseMethod(char*)+0x36>
 800a680:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a684:	bd38      	pop	{r3, r4, r5, pc}
 800a686:	6060      	str	r0, [r4, #4]
 800a688:	4910      	ldr	r1, [pc, #64]	; (800a6cc <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a68a:	2000      	movs	r0, #0
 800a68c:	f009 fba0 	bl	8013dd0 <strtok>
 800a690:	2800      	cmp	r0, #0
 800a692:	d0f5      	beq.n	800a680 <HttpDaemon::ParseMethod(char*)+0x30>
 800a694:	490e      	ldr	r1, [pc, #56]	; (800a6d0 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a696:	f7ff ff88 	bl	800a5aa <strcmp>
 800a69a:	2800      	cmp	r0, #0
 800a69c:	d1f0      	bne.n	800a680 <HttpDaemon::ParseMethod(char*)+0x30>
 800a69e:	490d      	ldr	r1, [pc, #52]	; (800a6d4 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a6a0:	f009 fb96 	bl	8013dd0 <strtok>
 800a6a4:	2800      	cmp	r0, #0
 800a6a6:	d0eb      	beq.n	800a680 <HttpDaemon::ParseMethod(char*)+0x30>
 800a6a8:	490b      	ldr	r1, [pc, #44]	; (800a6d8 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a6aa:	f7ff ff7e 	bl	800a5aa <strcmp>
 800a6ae:	2800      	cmp	r0, #0
 800a6b0:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a6b4:	bf08      	it	eq
 800a6b6:	20c8      	moveq	r0, #200	; 0xc8
 800a6b8:	e7e4      	b.n	800a684 <HttpDaemon::ParseMethod(char*)+0x34>
 800a6ba:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a6be:	e7e1      	b.n	800a684 <HttpDaemon::ParseMethod(char*)+0x34>
 800a6c0:	0801643b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, sp, lr}
 800a6c4:	080167b0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, sp, lr}
 800a6c8:	080167b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, sp, lr}
 800a6cc:	0801681e 	stmdaeq	r1, {r1, r2, r3, r4, fp, sp, lr}
 800a6d0:	080167b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, sp, lr}
 800a6d4:	080167be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, sp, lr}
 800a6d8:	080167c1 	stmdaeq	r1, {r0, r6, r7, r8, r9, sl, sp, lr}

0800a6dc <HttpDaemon::ParseHeaderField(char*)>:
 800a6dc:	b538      	push	{r3, r4, r5, lr}
 800a6de:	4605      	mov	r5, r0
 800a6e0:	4608      	mov	r0, r1
 800a6e2:	491d      	ldr	r1, [pc, #116]	; (800a758 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a6e4:	f009 fb74 	bl	8013dd0 <strtok>
 800a6e8:	4604      	mov	r4, r0
 800a6ea:	b910      	cbnz	r0, 800a6f2 <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a6ec:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a6f0:	bd38      	pop	{r3, r4, r5, pc}
 800a6f2:	491a      	ldr	r1, [pc, #104]	; (800a75c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a6f4:	f7ff ff66 	bl	800a5c4 <strcasecmp>
 800a6f8:	b970      	cbnz	r0, 800a718 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a6fa:	4919      	ldr	r1, [pc, #100]	; (800a760 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a6fc:	f009 fb68 	bl	8013dd0 <strtok>
 800a700:	2800      	cmp	r0, #0
 800a702:	d0f3      	beq.n	800a6ec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a704:	4917      	ldr	r1, [pc, #92]	; (800a764 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a706:	f7ff ff50 	bl	800a5aa <strcmp>
 800a70a:	b108      	cbz	r0, 800a710 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a70c:	20c8      	movs	r0, #200	; 0xc8
 800a70e:	e7ef      	b.n	800a6f0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a710:	2301      	movs	r3, #1
 800a712:	f885 3020 	strb.w	r3, [r5, #32]
 800a716:	e7f9      	b.n	800a70c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a718:	4620      	mov	r0, r4
 800a71a:	4913      	ldr	r1, [pc, #76]	; (800a768 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a71c:	f7ff ff52 	bl	800a5c4 <strcasecmp>
 800a720:	4604      	mov	r4, r0
 800a722:	2800      	cmp	r0, #0
 800a724:	d1f2      	bne.n	800a70c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a726:	4911      	ldr	r1, [pc, #68]	; (800a76c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a728:	f009 fb52 	bl	8013dd0 <strtok>
 800a72c:	2800      	cmp	r0, #0
 800a72e:	d0dd      	beq.n	800a6ec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a730:	1e42      	subs	r2, r0, #1
 800a732:	4623      	mov	r3, r4
 800a734:	200a      	movs	r0, #10
 800a736:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a73a:	b909      	cbnz	r1, 800a740 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a73c:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a73e:	e7e5      	b.n	800a70c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a740:	3930      	subs	r1, #48	; 0x30
 800a742:	2909      	cmp	r1, #9
 800a744:	d8d2      	bhi.n	800a6ec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a746:	fb00 1303 	mla	r3, r0, r3, r1
 800a74a:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a74e:	d9f2      	bls.n	800a736 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a750:	f240 109d 	movw	r0, #413	; 0x19d
 800a754:	e7cc      	b.n	800a6f0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a756:	bf00      	nop
 800a758:	080167c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sl, sp, lr}
 800a75c:	080167c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, sl, sp, lr}
 800a760:	080167d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, sp, lr}
 800a764:	080167d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, sp, lr}
 800a768:	080167e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, lr}
 800a76c:	0801643b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, sp, lr}

0800a770 <HttpDaemon::ParseRequest()>:
 800a770:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a772:	2400      	movs	r4, #0
 800a774:	4605      	mov	r5, r0
 800a776:	4622      	mov	r2, r4
 800a778:	4626      	mov	r6, r4
 800a77a:	68c1      	ldr	r1, [r0, #12]
 800a77c:	f880 4020 	strb.w	r4, [r0, #32]
 800a780:	6244      	str	r4, [r0, #36]	; 0x24
 800a782:	8aab      	ldrh	r3, [r5, #20]
 800a784:	42a3      	cmp	r3, r4
 800a786:	d91d      	bls.n	800a7c4 <HttpDaemon::ParseRequest()+0x54>
 800a788:	68eb      	ldr	r3, [r5, #12]
 800a78a:	5d18      	ldrb	r0, [r3, r4]
 800a78c:	280a      	cmp	r0, #10
 800a78e:	d10e      	bne.n	800a7ae <HttpDaemon::ParseRequest()+0x3e>
 800a790:	4423      	add	r3, r4
 800a792:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a796:	1c57      	adds	r7, r2, #1
 800a798:	b962      	cbnz	r2, 800a7b4 <HttpDaemon::ParseRequest()+0x44>
 800a79a:	4628      	mov	r0, r5
 800a79c:	f7ff ff58 	bl	800a650 <HttpDaemon::ParseMethod(char*)>
 800a7a0:	28c8      	cmp	r0, #200	; 0xc8
 800a7a2:	d110      	bne.n	800a7c6 <HttpDaemon::ParseRequest()+0x56>
 800a7a4:	463a      	mov	r2, r7
 800a7a6:	68e9      	ldr	r1, [r5, #12]
 800a7a8:	3401      	adds	r4, #1
 800a7aa:	b2a4      	uxth	r4, r4
 800a7ac:	4421      	add	r1, r4
 800a7ae:	3401      	adds	r4, #1
 800a7b0:	b2a4      	uxth	r4, r4
 800a7b2:	e7e6      	b.n	800a782 <HttpDaemon::ParseRequest()+0x12>
 800a7b4:	7808      	ldrb	r0, [r1, #0]
 800a7b6:	b968      	cbnz	r0, 800a7d4 <HttpDaemon::ParseRequest()+0x64>
 800a7b8:	696b      	ldr	r3, [r5, #20]
 800a7ba:	3b01      	subs	r3, #1
 800a7bc:	1b1b      	subs	r3, r3, r4
 800a7be:	b29b      	uxth	r3, r3
 800a7c0:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a7c2:	b90b      	cbnz	r3, 800a7c8 <HttpDaemon::ParseRequest()+0x58>
 800a7c4:	20c8      	movs	r0, #200	; 0xc8
 800a7c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a7c8:	68ea      	ldr	r2, [r5, #12]
 800a7ca:	3401      	adds	r4, #1
 800a7cc:	4414      	add	r4, r2
 800a7ce:	60ac      	str	r4, [r5, #8]
 800a7d0:	54e0      	strb	r0, [r4, r3]
 800a7d2:	e7f7      	b.n	800a7c4 <HttpDaemon::ParseRequest()+0x54>
 800a7d4:	4628      	mov	r0, r5
 800a7d6:	f7ff ff81 	bl	800a6dc <HttpDaemon::ParseHeaderField(char*)>
 800a7da:	e7e1      	b.n	800a7a0 <HttpDaemon::ParseRequest()+0x30>

0800a7dc <HttpDaemon::HandleGetTxt()>:
 800a7dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a7e0:	6846      	ldr	r6, [r0, #4]
 800a7e2:	4607      	mov	r7, r0
 800a7e4:	1db4      	adds	r4, r6, #6
 800a7e6:	4622      	mov	r2, r4
 800a7e8:	4613      	mov	r3, r2
 800a7ea:	7819      	ldrb	r1, [r3, #0]
 800a7ec:	3201      	adds	r2, #1
 800a7ee:	2900      	cmp	r1, #0
 800a7f0:	d1fa      	bne.n	800a7e8 <HttpDaemon::HandleGetTxt()+0xc>
 800a7f2:	1b1b      	subs	r3, r3, r4
 800a7f4:	2b04      	cmp	r3, #4
 800a7f6:	d803      	bhi.n	800a800 <HttpDaemon::HandleGetTxt()+0x24>
 800a7f8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a7fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a800:	3b04      	subs	r3, #4
 800a802:	4914      	ldr	r1, [pc, #80]	; (800a854 <HttpDaemon::HandleGetTxt()+0x78>)
 800a804:	18e0      	adds	r0, r4, r3
 800a806:	f7ff fed0 	bl	800a5aa <strcmp>
 800a80a:	2800      	cmp	r0, #0
 800a80c:	d1f4      	bne.n	800a7f8 <HttpDaemon::HandleGetTxt()+0x1c>
 800a80e:	4b12      	ldr	r3, [pc, #72]	; (800a858 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a810:	2001      	movs	r0, #1
 800a812:	f893 8000 	ldrb.w	r8, [r3]
 800a816:	f7ff feef 	bl	800a5f8 <PropertiesConfig::EnableJSON(bool)>
 800a81a:	4b10      	ldr	r3, [pc, #64]	; (800a85c <HttpDaemon::HandleGetTxt()+0x80>)
 800a81c:	f240 529b 	movw	r2, #1435	; 0x59b
 800a820:	4621      	mov	r1, r4
 800a822:	6818      	ldr	r0, [r3, #0]
 800a824:	f7ff fa92 	bl	8009d4c <RemoteConfig::HandleGet(void*, unsigned int)>
 800a828:	4605      	mov	r5, r0
 800a82a:	f008 0801 	and.w	r8, r8, #1
 800a82e:	4640      	mov	r0, r8
 800a830:	f7ff fee2 	bl	800a5f8 <PropertiesConfig::EnableJSON(bool)>
 800a834:	2d00      	cmp	r5, #0
 800a836:	d0df      	beq.n	800a7f8 <HttpDaemon::HandleGetTxt()+0x1c>
 800a838:	847d      	strh	r5, [r7, #34]	; 0x22
 800a83a:	4b09      	ldr	r3, [pc, #36]	; (800a860 <HttpDaemon::HandleGetTxt()+0x84>)
 800a83c:	3506      	adds	r5, #6
 800a83e:	442e      	add	r6, r5
 800a840:	42b4      	cmp	r4, r6
 800a842:	d101      	bne.n	800a848 <HttpDaemon::HandleGetTxt()+0x6c>
 800a844:	20c8      	movs	r0, #200	; 0xc8
 800a846:	e7d9      	b.n	800a7fc <HttpDaemon::HandleGetTxt()+0x20>
 800a848:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a84c:	f803 2b01 	strb.w	r2, [r3], #1
 800a850:	e7f6      	b.n	800a840 <HttpDaemon::HandleGetTxt()+0x64>
 800a852:	bf00      	nop
 800a854:	08016711 	stmdaeq	r1, {r0, r4, r8, r9, sl, sp, lr}
 800a858:	2001d888 	andcs	sp, r1, r8, lsl #17
 800a85c:	20000114 	andcs	r0, r0, r4, lsl r1
 800a860:	20000118 	andcs	r0, r0, r8, lsl r1

0800a864 <HttpDaemon::HandleGet()>:
 800a864:	b570      	push	{r4, r5, r6, lr}
 800a866:	6845      	ldr	r5, [r0, #4]
 800a868:	4604      	mov	r4, r0
 800a86a:	493e      	ldr	r1, [pc, #248]	; (800a964 <HttpDaemon::HandleGet()+0x100>)
 800a86c:	4628      	mov	r0, r5
 800a86e:	f7ff fe9c 	bl	800a5aa <strcmp>
 800a872:	b120      	cbz	r0, 800a87e <HttpDaemon::HandleGet()+0x1a>
 800a874:	4628      	mov	r0, r5
 800a876:	493c      	ldr	r1, [pc, #240]	; (800a968 <HttpDaemon::HandleGet()+0x104>)
 800a878:	f7ff fe97 	bl	800a5aa <strcmp>
 800a87c:	b950      	cbnz	r0, 800a894 <HttpDaemon::HandleGet()+0x30>
 800a87e:	4b3b      	ldr	r3, [pc, #236]	; (800a96c <HttpDaemon::HandleGet()+0x108>)
 800a880:	493b      	ldr	r1, [pc, #236]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a882:	483c      	ldr	r0, [pc, #240]	; (800a974 <HttpDaemon::HandleGet()+0x110>)
 800a884:	6023      	str	r3, [r4, #0]
 800a886:	f000 fa67 	bl	800ad58 <get_file_content(char const*, char*)>
 800a88a:	2800      	cmp	r0, #0
 800a88c:	dd2f      	ble.n	800a8ee <HttpDaemon::HandleGet()+0x8a>
 800a88e:	8460      	strh	r0, [r4, #34]	; 0x22
 800a890:	20c8      	movs	r0, #200	; 0xc8
 800a892:	bd70      	pop	{r4, r5, r6, pc}
 800a894:	4628      	mov	r0, r5
 800a896:	4938      	ldr	r1, [pc, #224]	; (800a978 <HttpDaemon::HandleGet()+0x114>)
 800a898:	f7ff fe87 	bl	800a5aa <strcmp>
 800a89c:	b920      	cbnz	r0, 800a8a8 <HttpDaemon::HandleGet()+0x44>
 800a89e:	4b37      	ldr	r3, [pc, #220]	; (800a97c <HttpDaemon::HandleGet()+0x118>)
 800a8a0:	4933      	ldr	r1, [pc, #204]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a8a2:	4837      	ldr	r0, [pc, #220]	; (800a980 <HttpDaemon::HandleGet()+0x11c>)
 800a8a4:	6023      	str	r3, [r4, #0]
 800a8a6:	e7ee      	b.n	800a886 <HttpDaemon::HandleGet()+0x22>
 800a8a8:	4628      	mov	r0, r5
 800a8aa:	4936      	ldr	r1, [pc, #216]	; (800a984 <HttpDaemon::HandleGet()+0x120>)
 800a8ac:	f7ff fe7d 	bl	800a5aa <strcmp>
 800a8b0:	b190      	cbz	r0, 800a8d8 <HttpDaemon::HandleGet()+0x74>
 800a8b2:	4a35      	ldr	r2, [pc, #212]	; (800a988 <HttpDaemon::HandleGet()+0x124>)
 800a8b4:	1e6b      	subs	r3, r5, #1
 800a8b6:	1d69      	adds	r1, r5, #5
 800a8b8:	428b      	cmp	r3, r1
 800a8ba:	d112      	bne.n	800a8e2 <HttpDaemon::HandleGet()+0x7e>
 800a8bc:	4b33      	ldr	r3, [pc, #204]	; (800a98c <HttpDaemon::HandleGet()+0x128>)
 800a8be:	3506      	adds	r5, #6
 800a8c0:	4628      	mov	r0, r5
 800a8c2:	4933      	ldr	r1, [pc, #204]	; (800a990 <HttpDaemon::HandleGet()+0x12c>)
 800a8c4:	6023      	str	r3, [r4, #0]
 800a8c6:	f7ff fe70 	bl	800a5aa <strcmp>
 800a8ca:	b998      	cbnz	r0, 800a8f4 <HttpDaemon::HandleGet()+0x90>
 800a8cc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a8d0:	4827      	ldr	r0, [pc, #156]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a8d2:	f000 f9c9 	bl	800ac68 <remoteconfig::json_get_list(char*, unsigned short)>
 800a8d6:	e7d8      	b.n	800a88a <HttpDaemon::HandleGet()+0x26>
 800a8d8:	4b2e      	ldr	r3, [pc, #184]	; (800a994 <HttpDaemon::HandleGet()+0x130>)
 800a8da:	4925      	ldr	r1, [pc, #148]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a8dc:	482e      	ldr	r0, [pc, #184]	; (800a998 <HttpDaemon::HandleGet()+0x134>)
 800a8de:	6023      	str	r3, [r4, #0]
 800a8e0:	e7d1      	b.n	800a886 <HttpDaemon::HandleGet()+0x22>
 800a8e2:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a8e6:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a8ea:	4286      	cmp	r6, r0
 800a8ec:	d0e4      	beq.n	800a8b8 <HttpDaemon::HandleGet()+0x54>
 800a8ee:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a8f2:	e7ce      	b.n	800a892 <HttpDaemon::HandleGet()+0x2e>
 800a8f4:	4628      	mov	r0, r5
 800a8f6:	4929      	ldr	r1, [pc, #164]	; (800a99c <HttpDaemon::HandleGet()+0x138>)
 800a8f8:	f7ff fe57 	bl	800a5aa <strcmp>
 800a8fc:	b928      	cbnz	r0, 800a90a <HttpDaemon::HandleGet()+0xa6>
 800a8fe:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a902:	481b      	ldr	r0, [pc, #108]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a904:	f000 f9e4 	bl	800acd0 <remoteconfig::json_get_version(char*, unsigned short)>
 800a908:	e7bf      	b.n	800a88a <HttpDaemon::HandleGet()+0x26>
 800a90a:	4628      	mov	r0, r5
 800a90c:	4924      	ldr	r1, [pc, #144]	; (800a9a0 <HttpDaemon::HandleGet()+0x13c>)
 800a90e:	f7ff fe4c 	bl	800a5aa <strcmp>
 800a912:	b948      	cbnz	r0, 800a928 <HttpDaemon::HandleGet()+0xc4>
 800a914:	4b23      	ldr	r3, [pc, #140]	; (800a9a4 <HttpDaemon::HandleGet()+0x140>)
 800a916:	681b      	ldr	r3, [r3, #0]
 800a918:	7bdb      	ldrb	r3, [r3, #15]
 800a91a:	b303      	cbz	r3, 800a95e <HttpDaemon::HandleGet()+0xfa>
 800a91c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a920:	4813      	ldr	r0, [pc, #76]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a922:	f000 f9f1 	bl	800ad08 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a926:	e7b0      	b.n	800a88a <HttpDaemon::HandleGet()+0x26>
 800a928:	4628      	mov	r0, r5
 800a92a:	491f      	ldr	r1, [pc, #124]	; (800a9a8 <HttpDaemon::HandleGet()+0x144>)
 800a92c:	f7ff fe3d 	bl	800a5aa <strcmp>
 800a930:	b928      	cbnz	r0, 800a93e <HttpDaemon::HandleGet()+0xda>
 800a932:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a936:	480e      	ldr	r0, [pc, #56]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a938:	f000 f9f6 	bl	800ad28 <remoteconfig::json_get_display(char*, unsigned short)>
 800a93c:	e7a5      	b.n	800a88a <HttpDaemon::HandleGet()+0x26>
 800a93e:	4628      	mov	r0, r5
 800a940:	491a      	ldr	r1, [pc, #104]	; (800a9ac <HttpDaemon::HandleGet()+0x148>)
 800a942:	f7ff fe32 	bl	800a5aa <strcmp>
 800a946:	b928      	cbnz	r0, 800a954 <HttpDaemon::HandleGet()+0xf0>
 800a948:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a94c:	4808      	ldr	r0, [pc, #32]	; (800a970 <HttpDaemon::HandleGet()+0x10c>)
 800a94e:	f000 f9fb 	bl	800ad48 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a952:	e79a      	b.n	800a88a <HttpDaemon::HandleGet()+0x26>
 800a954:	4620      	mov	r0, r4
 800a956:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a95a:	f7ff bf3f 	b.w	800a7dc <HttpDaemon::HandleGetTxt()>
 800a95e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a962:	e796      	b.n	800a892 <HttpDaemon::HandleGet()+0x2e>
 800a964:	0801681e 	stmdaeq	r1, {r1, r2, r3, r4, fp, sp, lr}
 800a968:	080167f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800a96c:	08016a15 	stmdaeq	r1, {r0, r2, r4, r9, fp, sp, lr}
 800a970:	20000118 	andcs	r0, r0, r8, lsl r1
 800a974:	080167f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800a978:	08016803 	stmdaeq	r1, {r0, r1, fp, sp, lr}
 800a97c:	08016a35 	stmdaeq	r1, {r0, r2, r4, r5, r9, fp, sp, lr}
 800a980:	08016804 	stmdaeq	r1, {r2, fp, sp, lr}
 800a984:	0801680f 	stmdaeq	r1, {r0, r1, r2, r3, fp, sp, lr}
 800a988:	08016819 	stmdaeq	r1, {r0, r3, r4, fp, sp, lr}
 800a98c:	08016a75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, fp, sp, lr}
 800a990:	08016820 	stmdaeq	r1, {r5, fp, sp, lr}
 800a994:	08016a55 	stmdaeq	r1, {r0, r2, r4, r6, r9, fp, sp, lr}
 800a998:	08016810 	stmdaeq	r1, {r4, fp, sp, lr}
 800a99c:	08016825 	stmdaeq	r1, {r0, r2, r5, fp, sp, lr}
 800a9a0:	0801682d 	stmdaeq	r1, {r0, r2, r3, r5, fp, sp, lr}
 800a9a4:	20000114 	andcs	r0, r0, r4, lsl r1
 800a9a8:	08016834 	stmdaeq	r1, {r2, r4, r5, fp, sp, lr}
 800a9ac:	0801683c 	stmdaeq	r1, {r2, r3, r4, r5, fp, sp, lr}

0800a9b0 <HttpDaemon::HandlePost(bool)>:
 800a9b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a9b2:	4604      	mov	r4, r0
 800a9b4:	2900      	cmp	r1, #0
 800a9b6:	f040 808a 	bne.w	800aace <HttpDaemon::HandlePost(bool)+0x11e>
 800a9ba:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a9be:	2b00      	cmp	r3, #0
 800a9c0:	d05a      	beq.n	800aa78 <HttpDaemon::HandlePost(bool)+0xc8>
 800a9c2:	6845      	ldr	r5, [r0, #4]
 800a9c4:	4944      	ldr	r1, [pc, #272]	; (800aad8 <HttpDaemon::HandlePost(bool)+0x128>)
 800a9c6:	4628      	mov	r0, r5
 800a9c8:	f7ff fdef 	bl	800a5aa <strcmp>
 800a9cc:	2800      	cmp	r0, #0
 800a9ce:	bf0c      	ite	eq
 800a9d0:	2301      	moveq	r3, #1
 800a9d2:	2300      	movne	r3, #0
 800a9d4:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a9d8:	d052      	beq.n	800aa80 <HttpDaemon::HandlePost(bool)+0xd0>
 800a9da:	4628      	mov	r0, r5
 800a9dc:	493f      	ldr	r1, [pc, #252]	; (800aadc <HttpDaemon::HandlePost(bool)+0x12c>)
 800a9de:	f7ff fde4 	bl	800a5aa <strcmp>
 800a9e2:	2800      	cmp	r0, #0
 800a9e4:	d04c      	beq.n	800aa80 <HttpDaemon::HandlePost(bool)+0xd0>
 800a9e6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a9ea:	e047      	b.n	800aa7c <HttpDaemon::HandlePost(bool)+0xcc>
 800a9ec:	493c      	ldr	r1, [pc, #240]	; (800aae0 <HttpDaemon::HandlePost(bool)+0x130>)
 800a9ee:	68a0      	ldr	r0, [r4, #8]
 800a9f0:	f10d 0207 	add.w	r2, sp, #7
 800a9f4:	f008 fc7a 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a9f8:	b9d8      	cbnz	r0, 800aa32 <HttpDaemon::HandlePost(bool)+0x82>
 800a9fa:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a9fe:	4b39      	ldr	r3, [pc, #228]	; (800aae4 <HttpDaemon::HandlePost(bool)+0x134>)
 800aa00:	fab6 f186 	clz	r1, r6
 800aa04:	681d      	ldr	r5, [r3, #0]
 800aa06:	0949      	lsrs	r1, r1, #5
 800aa08:	69a8      	ldr	r0, [r5, #24]
 800aa0a:	b138      	cbz	r0, 800aa1c <HttpDaemon::HandlePost(bool)+0x6c>
 800aa0c:	6803      	ldr	r3, [r0, #0]
 800aa0e:	7429      	strb	r1, [r5, #16]
 800aa10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800aa12:	4798      	blx	r3
 800aa14:	b116      	cbz	r6, 800aa1c <HttpDaemon::HandlePost(bool)+0x6c>
 800aa16:	4b34      	ldr	r3, [pc, #208]	; (800aae8 <HttpDaemon::HandlePost(bool)+0x138>)
 800aa18:	681b      	ldr	r3, [r3, #0]
 800aa1a:	606b      	str	r3, [r5, #4]
 800aa1c:	4b33      	ldr	r3, [pc, #204]	; (800aaec <HttpDaemon::HandlePost(bool)+0x13c>)
 800aa1e:	f240 519f 	movw	r1, #1439	; 0x59f
 800aa22:	4a33      	ldr	r2, [pc, #204]	; (800aaf0 <HttpDaemon::HandlePost(bool)+0x140>)
 800aa24:	4833      	ldr	r0, [pc, #204]	; (800aaf4 <HttpDaemon::HandlePost(bool)+0x144>)
 800aa26:	6023      	str	r3, [r4, #0]
 800aa28:	f7fe fe1a 	bl	8009660 <snprintf>
 800aa2c:	8460      	strh	r0, [r4, #34]	; 0x22
 800aa2e:	20c8      	movs	r0, #200	; 0xc8
 800aa30:	e024      	b.n	800aa7c <HttpDaemon::HandlePost(bool)+0xcc>
 800aa32:	4931      	ldr	r1, [pc, #196]	; (800aaf8 <HttpDaemon::HandlePost(bool)+0x148>)
 800aa34:	68a0      	ldr	r0, [r4, #8]
 800aa36:	f10d 0207 	add.w	r2, sp, #7
 800aa3a:	f008 fc57 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aa3e:	b9d8      	cbnz	r0, 800aa78 <HttpDaemon::HandlePost(bool)+0xc8>
 800aa40:	4b2e      	ldr	r3, [pc, #184]	; (800aafc <HttpDaemon::HandlePost(bool)+0x14c>)
 800aa42:	6818      	ldr	r0, [r3, #0]
 800aa44:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800aa48:	b11b      	cbz	r3, 800aa52 <HttpDaemon::HandlePost(bool)+0xa2>
 800aa4a:	2104      	movs	r1, #4
 800aa4c:	f008 ffe0 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800aa50:	e7e4      	b.n	800aa1c <HttpDaemon::HandlePost(bool)+0x6c>
 800aa52:	2102      	movs	r1, #2
 800aa54:	e7fa      	b.n	800aa4c <HttpDaemon::HandlePost(bool)+0x9c>
 800aa56:	4b2a      	ldr	r3, [pc, #168]	; (800ab00 <HttpDaemon::HandlePost(bool)+0x150>)
 800aa58:	2001      	movs	r0, #1
 800aa5a:	781d      	ldrb	r5, [r3, #0]
 800aa5c:	f7ff fdcc 	bl	800a5f8 <PropertiesConfig::EnableJSON(bool)>
 800aa60:	4b28      	ldr	r3, [pc, #160]	; (800ab04 <HttpDaemon::HandlePost(bool)+0x154>)
 800aa62:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800aa64:	6818      	ldr	r0, [r3, #0]
 800aa66:	68a1      	ldr	r1, [r4, #8]
 800aa68:	f005 0501 	and.w	r5, r5, #1
 800aa6c:	f7ff fa3c 	bl	8009ee8 <RemoteConfig::HandleSet(void*, unsigned int)>
 800aa70:	4628      	mov	r0, r5
 800aa72:	f7ff fdc1 	bl	800a5f8 <PropertiesConfig::EnableJSON(bool)>
 800aa76:	e7d1      	b.n	800aa1c <HttpDaemon::HandlePost(bool)+0x6c>
 800aa78:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800aa7c:	b002      	add	sp, #8
 800aa7e:	bd70      	pop	{r4, r5, r6, pc}
 800aa80:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800aa82:	6962      	ldr	r2, [r4, #20]
 800aa84:	429a      	cmp	r2, r3
 800aa86:	dbd2      	blt.n	800aa2e <HttpDaemon::HandlePost(bool)+0x7e>
 800aa88:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800aa8a:	2b00      	cmp	r3, #0
 800aa8c:	d0cf      	beq.n	800aa2e <HttpDaemon::HandlePost(bool)+0x7e>
 800aa8e:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800aa92:	2b00      	cmp	r3, #0
 800aa94:	d0df      	beq.n	800aa56 <HttpDaemon::HandlePost(bool)+0xa6>
 800aa96:	2201      	movs	r2, #1
 800aa98:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800aa9a:	68a0      	ldr	r0, [r4, #8]
 800aa9c:	f008 f998 	bl	8012dd0 <properties::convert_json_file(char*, unsigned short, bool)>
 800aaa0:	2800      	cmp	r0, #0
 800aaa2:	dde9      	ble.n	800aa78 <HttpDaemon::HandlePost(bool)+0xc8>
 800aaa4:	4918      	ldr	r1, [pc, #96]	; (800ab08 <HttpDaemon::HandlePost(bool)+0x158>)
 800aaa6:	68a0      	ldr	r0, [r4, #8]
 800aaa8:	f10d 0207 	add.w	r2, sp, #7
 800aaac:	f008 fc1e 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aab0:	2800      	cmp	r0, #0
 800aab2:	d19b      	bne.n	800a9ec <HttpDaemon::HandlePost(bool)+0x3c>
 800aab4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800aab8:	2b00      	cmp	r3, #0
 800aaba:	d0af      	beq.n	800aa1c <HttpDaemon::HandlePost(bool)+0x6c>
 800aabc:	4b11      	ldr	r3, [pc, #68]	; (800ab04 <HttpDaemon::HandlePost(bool)+0x154>)
 800aabe:	681b      	ldr	r3, [r3, #0]
 800aac0:	7b9b      	ldrb	r3, [r3, #14]
 800aac2:	2b00      	cmp	r3, #0
 800aac4:	d0d8      	beq.n	800aa78 <HttpDaemon::HandlePost(bool)+0xc8>
 800aac6:	4b11      	ldr	r3, [pc, #68]	; (800ab0c <HttpDaemon::HandlePost(bool)+0x15c>)
 800aac8:	6818      	ldr	r0, [r3, #0]
 800aaca:	f009 f841 	bl	8013b50 <Hardware::Reboot()>
 800aace:	68c3      	ldr	r3, [r0, #12]
 800aad0:	6083      	str	r3, [r0, #8]
 800aad2:	6943      	ldr	r3, [r0, #20]
 800aad4:	8483      	strh	r3, [r0, #36]	; 0x24
 800aad6:	e7da      	b.n	800aa8e <HttpDaemon::HandlePost(bool)+0xde>
 800aad8:	08016846 	stmdaeq	r1, {r1, r2, r6, fp, sp, lr}
 800aadc:	080167e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, sp, lr}
 800aae0:	08016834 	stmdaeq	r1, {r2, r4, r5, fp, sp, lr}
 800aae4:	2001d88c 	andcs	sp, r1, ip, lsl #17
 800aae8:	2001d994 	mulcs	r1, r4, r9
 800aaec:	08016a15 	stmdaeq	r1, {r0, r2, r4, r9, fp, sp, lr}
 800aaf0:	08016863 	stmdaeq	r1, {r0, r1, r5, r6, fp, sp, lr}
 800aaf4:	20000118 	andcs	r0, r0, r8, lsl r1
 800aaf8:	0801685a 	stmdaeq	r1, {r1, r3, r4, r6, fp, sp, lr}
 800aafc:	2001d978 	andcs	sp, r1, r8, ror r9
 800ab00:	2001d888 	andcs	sp, r1, r8, lsl #17
 800ab04:	20000114 	andcs	r0, r0, r4, lsl r1
 800ab08:	08016853 	stmdaeq	r1, {r0, r1, r4, r6, fp, sp, lr}
 800ab0c:	2001d97c 	andcs	sp, r1, ip, ror r9

0800ab10 <HttpDaemon::Run()>:
 800ab10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ab12:	4e46      	ldr	r6, [pc, #280]	; (800ac2c <HttpDaemon::Run()+0x11c>)
 800ab14:	4604      	mov	r4, r0
 800ab16:	6901      	ldr	r1, [r0, #16]
 800ab18:	f100 020c 	add.w	r2, r0, #12
 800ab1c:	6830      	ldr	r0, [r6, #0]
 800ab1e:	f006 ffd8 	bl	8011ad2 <Network::TcpRead(int, unsigned char const**)>
 800ab22:	6160      	str	r0, [r4, #20]
 800ab24:	2800      	cmp	r0, #0
 800ab26:	d05b      	beq.n	800abe0 <HttpDaemon::Run()+0xd0>
 800ab28:	69a3      	ldr	r3, [r4, #24]
 800ab2a:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ab2e:	d159      	bne.n	800abe4 <HttpDaemon::Run()+0xd4>
 800ab30:	4620      	mov	r0, r4
 800ab32:	f7ff fe1d 	bl	800a770 <HttpDaemon::ParseRequest()>
 800ab36:	28c8      	cmp	r0, #200	; 0xc8
 800ab38:	61a0      	str	r0, [r4, #24]
 800ab3a:	d106      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800ab3c:	69e3      	ldr	r3, [r4, #28]
 800ab3e:	2b00      	cmp	r3, #0
 800ab40:	d142      	bne.n	800abc8 <HttpDaemon::Run()+0xb8>
 800ab42:	4620      	mov	r0, r4
 800ab44:	f7ff fe8e 	bl	800a864 <HttpDaemon::HandleGet()>
 800ab48:	61a0      	str	r0, [r4, #24]
 800ab4a:	69a3      	ldr	r3, [r4, #24]
 800ab4c:	2bc8      	cmp	r3, #200	; 0xc8
 800ab4e:	d06b      	beq.n	800ac28 <HttpDaemon::Run()+0x118>
 800ab50:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800ab54:	d05e      	beq.n	800ac14 <HttpDaemon::Run()+0x104>
 800ab56:	dc4e      	bgt.n	800abf6 <HttpDaemon::Run()+0xe6>
 800ab58:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800ab5c:	d05c      	beq.n	800ac18 <HttpDaemon::Run()+0x108>
 800ab5e:	f240 129d 	movw	r2, #413	; 0x19d
 800ab62:	4293      	cmp	r3, r2
 800ab64:	d05a      	beq.n	800ac1c <HttpDaemon::Run()+0x10c>
 800ab66:	4d32      	ldr	r5, [pc, #200]	; (800ac30 <HttpDaemon::Run()+0x120>)
 800ab68:	4a32      	ldr	r2, [pc, #200]	; (800ac34 <HttpDaemon::Run()+0x124>)
 800ab6a:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800ab6e:	bf18      	it	ne
 800ab70:	4615      	movne	r5, r2
 800ab72:	4a31      	ldr	r2, [pc, #196]	; (800ac38 <HttpDaemon::Run()+0x128>)
 800ab74:	f240 519f 	movw	r1, #1439	; 0x59f
 800ab78:	6022      	str	r2, [r4, #0]
 800ab7a:	e9cd 5500 	strd	r5, r5, [sp]
 800ab7e:	4a2f      	ldr	r2, [pc, #188]	; (800ac3c <HttpDaemon::Run()+0x12c>)
 800ab80:	482f      	ldr	r0, [pc, #188]	; (800ac40 <HttpDaemon::Run()+0x130>)
 800ab82:	f7fe fd6d 	bl	8009660 <snprintf>
 800ab86:	8460      	strh	r0, [r4, #34]	; 0x22
 800ab88:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ab8a:	f240 519f 	movw	r1, #1439	; 0x59f
 800ab8e:	9303      	str	r3, [sp, #12]
 800ab90:	6823      	ldr	r3, [r4, #0]
 800ab92:	4a2c      	ldr	r2, [pc, #176]	; (800ac44 <HttpDaemon::Run()+0x134>)
 800ab94:	9302      	str	r3, [sp, #8]
 800ab96:	4b2c      	ldr	r3, [pc, #176]	; (800ac48 <HttpDaemon::Run()+0x138>)
 800ab98:	68e0      	ldr	r0, [r4, #12]
 800ab9a:	e9cd 5300 	strd	r5, r3, [sp]
 800ab9e:	69a3      	ldr	r3, [r4, #24]
 800aba0:	f7fe fd5e 	bl	8009660 <snprintf>
 800aba4:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800aba8:	b283      	uxth	r3, r0
 800abaa:	6830      	ldr	r0, [r6, #0]
 800abac:	f006 ff95 	bl	8011ada <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800abb0:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800abb2:	4a23      	ldr	r2, [pc, #140]	; (800ac40 <HttpDaemon::Run()+0x130>)
 800abb4:	6921      	ldr	r1, [r4, #16]
 800abb6:	6830      	ldr	r0, [r6, #0]
 800abb8:	f006 ff8f 	bl	8011ada <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800abbc:	f44f 7202 	mov.w	r2, #520	; 0x208
 800abc0:	2302      	movs	r3, #2
 800abc2:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800abc6:	e00b      	b.n	800abe0 <HttpDaemon::Run()+0xd0>
 800abc8:	2b01      	cmp	r3, #1
 800abca:	d1be      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800abcc:	2100      	movs	r1, #0
 800abce:	4620      	mov	r0, r4
 800abd0:	f7ff feee 	bl	800a9b0 <HttpDaemon::HandlePost(bool)>
 800abd4:	28c8      	cmp	r0, #200	; 0xc8
 800abd6:	61a0      	str	r0, [r4, #24]
 800abd8:	d1b7      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800abda:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800abdc:	2b00      	cmp	r3, #0
 800abde:	d1b4      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800abe0:	b004      	add	sp, #16
 800abe2:	bd70      	pop	{r4, r5, r6, pc}
 800abe4:	2bc8      	cmp	r3, #200	; 0xc8
 800abe6:	d1b0      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800abe8:	69e1      	ldr	r1, [r4, #28]
 800abea:	2901      	cmp	r1, #1
 800abec:	d1ad      	bne.n	800ab4a <HttpDaemon::Run()+0x3a>
 800abee:	4620      	mov	r0, r4
 800abf0:	f7ff fede 	bl	800a9b0 <HttpDaemon::HandlePost(bool)>
 800abf4:	e7a8      	b.n	800ab48 <HttpDaemon::Run()+0x38>
 800abf6:	f240 12f5 	movw	r2, #501	; 0x1f5
 800abfa:	4293      	cmp	r3, r2
 800abfc:	d010      	beq.n	800ac20 <HttpDaemon::Run()+0x110>
 800abfe:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ac02:	4293      	cmp	r3, r2
 800ac04:	d00e      	beq.n	800ac24 <HttpDaemon::Run()+0x114>
 800ac06:	4d11      	ldr	r5, [pc, #68]	; (800ac4c <HttpDaemon::Run()+0x13c>)
 800ac08:	4a0a      	ldr	r2, [pc, #40]	; (800ac34 <HttpDaemon::Run()+0x124>)
 800ac0a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ac0e:	bf18      	it	ne
 800ac10:	4615      	movne	r5, r2
 800ac12:	e7ae      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac14:	4d0e      	ldr	r5, [pc, #56]	; (800ac50 <HttpDaemon::Run()+0x140>)
 800ac16:	e7ac      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac18:	4d0e      	ldr	r5, [pc, #56]	; (800ac54 <HttpDaemon::Run()+0x144>)
 800ac1a:	e7aa      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac1c:	4d0e      	ldr	r5, [pc, #56]	; (800ac58 <HttpDaemon::Run()+0x148>)
 800ac1e:	e7a8      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac20:	4d0e      	ldr	r5, [pc, #56]	; (800ac5c <HttpDaemon::Run()+0x14c>)
 800ac22:	e7a6      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac24:	4d0e      	ldr	r5, [pc, #56]	; (800ac60 <HttpDaemon::Run()+0x150>)
 800ac26:	e7a4      	b.n	800ab72 <HttpDaemon::Run()+0x62>
 800ac28:	4d0e      	ldr	r5, [pc, #56]	; (800ac64 <HttpDaemon::Run()+0x154>)
 800ac2a:	e7ad      	b.n	800ab88 <HttpDaemon::Run()+0x78>
 800ac2c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800ac30:	080168bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, fp, sp, lr}
 800ac34:	08016946 	stmdaeq	r1, {r1, r2, r6, r8, fp, sp, lr}
 800ac38:	08016a15 	stmdaeq	r1, {r0, r2, r4, r9, fp, sp, lr}
 800ac3c:	08016957 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, fp, sp, lr}
 800ac40:	20000118 	andcs	r0, r0, r8, lsl r1
 800ac44:	080169b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, fp, sp, lr}
 800ac48:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 800ac4c:	08016903 	stmdaeq	r1, {r0, r1, r8, fp, sp, lr}
 800ac50:	080168ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, fp, sp, lr}
 800ac54:	080168cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, fp, sp, lr}
 800ac58:	080168d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, fp, sp, lr}
 800ac5c:	08016919 	stmdaeq	r1, {r0, r3, r4, r8, fp, sp, lr}
 800ac60:	08016930 	stmdaeq	r1, {r4, r5, r8, fp, sp, lr}
 800ac64:	08016954 	stmdaeq	r1, {r2, r4, r6, r8, fp, sp, lr}

0800ac68 <remoteconfig::json_get_list(char*, unsigned short)>:
 800ac68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac6c:	4b14      	ldr	r3, [pc, #80]	; (800acc0 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ac6e:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800acc4 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ac72:	681b      	ldr	r3, [r3, #0]
 800ac74:	b088      	sub	sp, #32
 800ac76:	4605      	mov	r5, r0
 800ac78:	f8d8 0000 	ldr.w	r0, [r8]
 800ac7c:	695c      	ldr	r4, [r3, #20]
 800ac7e:	460e      	mov	r6, r1
 800ac80:	f7ff f814 	bl	8009cac <RemoteConfig::GetStringNode() const>
 800ac84:	4607      	mov	r7, r0
 800ac86:	f8d8 0000 	ldr.w	r0, [r8]
 800ac8a:	f7ff f81b 	bl	8009cc4 <RemoteConfig::GetStringOutput() const>
 800ac8e:	4b0e      	ldr	r3, [pc, #56]	; (800acc8 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ac90:	4631      	mov	r1, r6
 800ac92:	7a1a      	ldrb	r2, [r3, #8]
 800ac94:	3309      	adds	r3, #9
 800ac96:	9303      	str	r3, [sp, #12]
 800ac98:	0e23      	lsrs	r3, r4, #24
 800ac9a:	9302      	str	r3, [sp, #8]
 800ac9c:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800aca0:	9301      	str	r3, [sp, #4]
 800aca2:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800aca6:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800acaa:	9300      	str	r3, [sp, #0]
 800acac:	4628      	mov	r0, r5
 800acae:	4a07      	ldr	r2, [pc, #28]	; (800accc <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800acb0:	9704      	str	r7, [sp, #16]
 800acb2:	b2e3      	uxtb	r3, r4
 800acb4:	f7fe fcd4 	bl	8009660 <snprintf>
 800acb8:	b280      	uxth	r0, r0
 800acba:	b008      	add	sp, #32
 800acbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800acc0:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800acc4:	20000114 	andcs	r0, r0, r4, lsl r1
 800acc8:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800accc:	08016aef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, fp, sp, lr}

0800acd0 <remoteconfig::json_get_version(char*, unsigned short)>:
 800acd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800acd2:	2208      	movs	r2, #8
 800acd4:	4b09      	ldr	r3, [pc, #36]	; (800acfc <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800acd6:	9204      	str	r2, [sp, #16]
 800acd8:	f1a3 020b 	sub.w	r2, r3, #11
 800acdc:	9203      	str	r2, [sp, #12]
 800acde:	220b      	movs	r2, #11
 800ace0:	9202      	str	r2, [sp, #8]
 800ace2:	4a07      	ldr	r2, [pc, #28]	; (800ad00 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800ace4:	9305      	str	r3, [sp, #20]
 800ace6:	3b0e      	subs	r3, #14
 800ace8:	9201      	str	r2, [sp, #4]
 800acea:	9300      	str	r3, [sp, #0]
 800acec:	4a05      	ldr	r2, [pc, #20]	; (800ad04 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800acee:	2303      	movs	r3, #3
 800acf0:	f7fe fcb6 	bl	8009660 <snprintf>
 800acf4:	b280      	uxth	r0, r0
 800acf6:	b007      	add	sp, #28
 800acf8:	f85d fb04 	ldr.w	pc, [sp], #4
 800acfc:	2001d92a 	andcs	sp, r1, sl, lsr #18
 800ad00:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 800ad04:	08016b4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, fp, sp, lr}

0800ad08 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800ad08:	b508      	push	{r3, lr}
 800ad0a:	4b05      	ldr	r3, [pc, #20]	; (800ad20 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800ad0c:	681a      	ldr	r2, [r3, #0]
 800ad0e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ad12:	fbb2 f3f3 	udiv	r3, r2, r3
 800ad16:	4a03      	ldr	r2, [pc, #12]	; (800ad24 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800ad18:	f7fe fca2 	bl	8009660 <snprintf>
 800ad1c:	b280      	uxth	r0, r0
 800ad1e:	bd08      	pop	{r3, pc}
 800ad20:	2001d994 	mulcs	r1, r4, r9
 800ad24:	08016b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, sp, lr}

0800ad28 <remoteconfig::json_get_display(char*, unsigned short)>:
 800ad28:	b508      	push	{r3, lr}
 800ad2a:	4b05      	ldr	r3, [pc, #20]	; (800ad40 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800ad2c:	4a05      	ldr	r2, [pc, #20]	; (800ad44 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	7c1b      	ldrb	r3, [r3, #16]
 800ad32:	f083 0301 	eor.w	r3, r3, #1
 800ad36:	f7fe fc93 	bl	8009660 <snprintf>
 800ad3a:	b280      	uxth	r0, r0
 800ad3c:	bd08      	pop	{r3, pc}
 800ad3e:	bf00      	nop
 800ad40:	2001d88c 	andcs	sp, r1, ip, lsl #17
 800ad44:	08016ba3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, fp, sp, lr}

0800ad48 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ad48:	b508      	push	{r3, lr}
 800ad4a:	4a02      	ldr	r2, [pc, #8]	; (800ad54 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ad4c:	f7fe fc88 	bl	8009660 <snprintf>
 800ad50:	b280      	uxth	r0, r0
 800ad52:	bd08      	pop	{r3, pc}
 800ad54:	08016bb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, fp, sp, lr}

0800ad58 <get_file_content(char const*, char*)>:
 800ad58:	2300      	movs	r3, #0
 800ad5a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ad5c:	4a10      	ldr	r2, [pc, #64]	; (800ada0 <get_file_content(char const*, char*)+0x48>)
 800ad5e:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ad62:	1e46      	subs	r6, r0, #1
 800ad64:	3c01      	subs	r4, #1
 800ad66:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ad6a:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ad6e:	42bd      	cmp	r5, r7
 800ad70:	d005      	beq.n	800ad7e <get_file_content(char const*, char*)+0x26>
 800ad72:	3301      	adds	r3, #1
 800ad74:	2b03      	cmp	r3, #3
 800ad76:	d1f2      	bne.n	800ad5e <get_file_content(char const*, char*)+0x6>
 800ad78:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ad7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ad7e:	2d00      	cmp	r5, #0
 800ad80:	d1f1      	bne.n	800ad66 <get_file_content(char const*, char*)+0xe>
 800ad82:	4608      	mov	r0, r1
 800ad84:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800ad88:	6853      	ldr	r3, [r2, #4]
 800ad8a:	3b01      	subs	r3, #1
 800ad8c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ad90:	f800 2b01 	strb.w	r2, [r0], #1
 800ad94:	2a00      	cmp	r2, #0
 800ad96:	d1f9      	bne.n	800ad8c <get_file_content(char const*, char*)+0x34>
 800ad98:	1a40      	subs	r0, r0, r1
 800ad9a:	3801      	subs	r0, #1
 800ad9c:	e7ee      	b.n	800ad7c <get_file_content(char const*, char*)+0x24>
 800ad9e:	bf00      	nop
 800ada0:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}

0800ada4 <e131::universe_to_multicast_ip(unsigned short)>:
 800ada4:	b513      	push	{r0, r1, r4, lr}
 800ada6:	4604      	mov	r4, r0
 800ada8:	a901      	add	r1, sp, #4
 800adaa:	4806      	ldr	r0, [pc, #24]	; (800adc4 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800adac:	f008 ff14 	bl	8013bd8 <inet_aton>
 800adb0:	9801      	ldr	r0, [sp, #4]
 800adb2:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800adb6:	0224      	lsls	r4, r4, #8
 800adb8:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800adbc:	4320      	orrs	r0, r4
 800adbe:	b002      	add	sp, #8
 800adc0:	bd10      	pop	{r4, pc}
 800adc2:	bf00      	nop
 800adc4:	08017431 	stmdaeq	r1, {r0, r4, r5, sl, ip, sp, lr}

0800adc8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800adc8:	f240 6304 	movw	r3, #1540	; 0x604
 800adcc:	fb03 0001 	mla	r0, r3, r1, r0
 800add0:	2300      	movs	r3, #0
 800add2:	b510      	push	{r4, lr}
 800add4:	4293      	cmp	r3, r2
 800add6:	d100      	bne.n	800adda <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800add8:	bd10      	pop	{r4, pc}
 800adda:	f810 4b01 	ldrb.w	r4, [r0], #1
 800adde:	3301      	adds	r3, #1
 800ade0:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800ade4:	42a1      	cmp	r1, r4
 800ade6:	bf38      	it	cc
 800ade8:	4621      	movcc	r1, r4
 800adea:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800adee:	e7f1      	b.n	800add4 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800adf0 <memset.constprop.0.isra.0>:
 800adf0:	2300      	movs	r3, #0
 800adf2:	4401      	add	r1, r0
 800adf4:	4288      	cmp	r0, r1
 800adf6:	d100      	bne.n	800adfa <memset.constprop.0.isra.0+0xa>
 800adf8:	4770      	bx	lr
 800adfa:	f800 3b01 	strb.w	r3, [r0], #1
 800adfe:	e7f9      	b.n	800adf4 <memset.constprop.0.isra.0+0x4>

0800ae00 <memcpy.isra.0>:
 800ae00:	3801      	subs	r0, #1
 800ae02:	440a      	add	r2, r1
 800ae04:	4291      	cmp	r1, r2
 800ae06:	d100      	bne.n	800ae0a <memcpy.isra.0+0xa>
 800ae08:	4770      	bx	lr
 800ae0a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ae0e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ae12:	e7f7      	b.n	800ae04 <memcpy.isra.0+0x4>

0800ae14 <lightset::Data::Get()>:
 800ae14:	4b03      	ldr	r3, [pc, #12]	; (800ae24 <lightset::Data::Get()+0x10>)
 800ae16:	4804      	ldr	r0, [pc, #16]	; (800ae28 <lightset::Data::Get()+0x14>)
 800ae18:	681a      	ldr	r2, [r3, #0]
 800ae1a:	07d2      	lsls	r2, r2, #31
 800ae1c:	bf5c      	itt	pl
 800ae1e:	2201      	movpl	r2, #1
 800ae20:	601a      	strpl	r2, [r3, #0]
 800ae22:	4770      	bx	lr
 800ae24:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800ae28:	200006bc 			; <UNDEFINED> instruction: 0x200006bc

0800ae2c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800ae2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae30:	4615      	mov	r5, r2
 800ae32:	460f      	mov	r7, r1
 800ae34:	4604      	mov	r4, r0
 800ae36:	f7ff ffed 	bl	800ae14 <lightset::Data::Get()>
 800ae3a:	f240 6304 	movw	r3, #1540	; 0x604
 800ae3e:	4606      	mov	r6, r0
 800ae40:	435c      	muls	r4, r3
 800ae42:	eb00 0804 	add.w	r8, r0, r4
 800ae46:	462a      	mov	r2, r5
 800ae48:	4639      	mov	r1, r7
 800ae4a:	4640      	mov	r0, r8
 800ae4c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ae50:	f7ff ffd6 	bl	800ae00 <memcpy.isra.0>
 800ae54:	462a      	mov	r2, r5
 800ae56:	4639      	mov	r1, r7
 800ae58:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800ae5c:	1930      	adds	r0, r6, r4
 800ae5e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ae62:	f7ff bfcd 	b.w	800ae00 <memcpy.isra.0>

0800ae66 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800ae66:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ae6a:	4680      	mov	r8, r0
 800ae6c:	f240 6404 	movw	r4, #1540	; 0x604
 800ae70:	4615      	mov	r5, r2
 800ae72:	460f      	mov	r7, r1
 800ae74:	4699      	mov	r9, r3
 800ae76:	f7ff ffcd 	bl	800ae14 <lightset::Data::Get()>
 800ae7a:	fb04 f408 	mul.w	r4, r4, r8
 800ae7e:	eb00 0a04 	add.w	sl, r0, r4
 800ae82:	4606      	mov	r6, r0
 800ae84:	462a      	mov	r2, r5
 800ae86:	4639      	mov	r1, r7
 800ae88:	4650      	mov	r0, sl
 800ae8a:	f7ff ffb9 	bl	800ae00 <memcpy.isra.0>
 800ae8e:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800ae92:	f1b9 0f00 	cmp.w	r9, #0
 800ae96:	d106      	bne.n	800aea6 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800ae98:	462a      	mov	r2, r5
 800ae9a:	4641      	mov	r1, r8
 800ae9c:	4630      	mov	r0, r6
 800ae9e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aea2:	f7ff bf91 	b.w	800adc8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800aea6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800aeaa:	462a      	mov	r2, r5
 800aeac:	4639      	mov	r1, r7
 800aeae:	1930      	adds	r0, r6, r4
 800aeb0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aeb4:	f7ff bfa4 	b.w	800ae00 <memcpy.isra.0>

0800aeb8 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800aeb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aebc:	4616      	mov	r6, r2
 800aebe:	4699      	mov	r9, r3
 800aec0:	4680      	mov	r8, r0
 800aec2:	460f      	mov	r7, r1
 800aec4:	f7ff ffa6 	bl	800ae14 <lightset::Data::Get()>
 800aec8:	f240 6404 	movw	r4, #1540	; 0x604
 800aecc:	4605      	mov	r5, r0
 800aece:	fb04 f408 	mul.w	r4, r4, r8
 800aed2:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800aed6:	4632      	mov	r2, r6
 800aed8:	4639      	mov	r1, r7
 800aeda:	4428      	add	r0, r5
 800aedc:	f7ff ff90 	bl	800ae00 <memcpy.isra.0>
 800aee0:	192b      	adds	r3, r5, r4
 800aee2:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800aee6:	f1b9 0f00 	cmp.w	r9, #0
 800aeea:	d106      	bne.n	800aefa <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800aeec:	4632      	mov	r2, r6
 800aeee:	4641      	mov	r1, r8
 800aef0:	4628      	mov	r0, r5
 800aef2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800aef6:	f7ff bf67 	b.w	800adc8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800aefa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800aefe:	4632      	mov	r2, r6
 800af00:	4639      	mov	r1, r7
 800af02:	1928      	adds	r0, r5, r4
 800af04:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800af08:	f7ff bf7a 	b.w	800ae00 <memcpy.isra.0>

0800af0c <E131Bridge::E131Bridge()>:
 800af0c:	2300      	movs	r3, #0
 800af0e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800af12:	b5f0      	push	{r4, r5, r6, r7, lr}
 800af14:	e9c0 2300 	strd	r2, r3, [r0]
 800af18:	2201      	movs	r2, #1
 800af1a:	4604      	mov	r4, r0
 800af1c:	2764      	movs	r7, #100	; 0x64
 800af1e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800af22:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800af26:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800af2a:	6743      	str	r3, [r0, #116]	; 0x74
 800af2c:	4b26      	ldr	r3, [pc, #152]	; (800afc8 <E131Bridge::E131Bridge()+0xbc>)
 800af2e:	7202      	strb	r2, [r0, #8]
 800af30:	b093      	sub	sp, #76	; 0x4c
 800af32:	6018      	str	r0, [r3, #0]
 800af34:	f200 5514 	addw	r5, r0, #1300	; 0x514
 800af38:	f600 5294 	addw	r2, r0, #3476	; 0xd94
 800af3c:	f600 7614 	addw	r6, r0, #3860	; 0xf14
 800af40:	4628      	mov	r0, r5
 800af42:	2144      	movs	r1, #68	; 0x44
 800af44:	f7ff ff54 	bl	800adf0 <memset.constprop.0.isra.0>
 800af48:	4610      	mov	r0, r2
 800af4a:	210c      	movs	r1, #12
 800af4c:	f7ff ff50 	bl	800adf0 <memset.constprop.0.isra.0>
 800af50:	320c      	adds	r2, #12
 800af52:	f802 7c03 	strb.w	r7, [r2, #-3]
 800af56:	4296      	cmp	r6, r2
 800af58:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800af5c:	d1f0      	bne.n	800af40 <E131Bridge::E131Bridge()+0x34>
 800af5e:	2120      	movs	r1, #32
 800af60:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800af64:	f7ff ff44 	bl	800adf0 <memset.constprop.0.isra.0>
 800af68:	2301      	movs	r3, #1
 800af6a:	4d18      	ldr	r5, [pc, #96]	; (800afcc <E131Bridge::E131Bridge()+0xc0>)
 800af6c:	4a18      	ldr	r2, [pc, #96]	; (800afd0 <E131Bridge::E131Bridge()+0xc4>)
 800af6e:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800af72:	682b      	ldr	r3, [r5, #0]
 800af74:	2140      	movs	r1, #64	; 0x40
 800af76:	9200      	str	r2, [sp, #0]
 800af78:	3320      	adds	r3, #32
 800af7a:	4a16      	ldr	r2, [pc, #88]	; (800afd4 <E131Bridge::E131Bridge()+0xc8>)
 800af7c:	a802      	add	r0, sp, #8
 800af7e:	f7fe fb6f 	bl	8009660 <snprintf>
 800af82:	233f      	movs	r3, #63	; 0x3f
 800af84:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800af88:	a902      	add	r1, sp, #8
 800af8a:	f811 0b01 	ldrb.w	r0, [r1], #1
 800af8e:	b928      	cbnz	r0, 800af9c <E131Bridge::E131Bridge()+0x90>
 800af90:	4413      	add	r3, r2
 800af92:	429a      	cmp	r2, r3
 800af94:	d006      	beq.n	800afa4 <E131Bridge::E131Bridge()+0x98>
 800af96:	f802 0b01 	strb.w	r0, [r2], #1
 800af9a:	e7fa      	b.n	800af92 <E131Bridge::E131Bridge()+0x86>
 800af9c:	3b01      	subs	r3, #1
 800af9e:	f802 0b01 	strb.w	r0, [r2], #1
 800afa2:	d1f2      	bne.n	800af8a <E131Bridge::E131Bridge()+0x7e>
 800afa4:	2300      	movs	r3, #0
 800afa6:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800afaa:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800afae:	6828      	ldr	r0, [r5, #0]
 800afb0:	f006 fa80 	bl	80114b4 <Network::Begin(unsigned short)>
 800afb4:	4621      	mov	r1, r4
 800afb6:	4b08      	ldr	r3, [pc, #32]	; (800afd8 <E131Bridge::E131Bridge()+0xcc>)
 800afb8:	f841 0b24 	str.w	r0, [r1], #36
 800afbc:	6818      	ldr	r0, [r3, #0]
 800afbe:	f008 fdab 	bl	8013b18 <Hardware::GetUuid(unsigned char*)>
 800afc2:	4620      	mov	r0, r4
 800afc4:	b013      	add	sp, #76	; 0x4c
 800afc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800afc8:	2000c73c 	andcs	ip, r0, ip, lsr r7
 800afcc:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800afd0:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 800afd4:	0801743d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, ip, sp, lr}
 800afd8:	2001d97c 	andcs	sp, r1, ip, ror r9

0800afdc <E131Bridge::Start()>:
 800afdc:	6943      	ldr	r3, [r0, #20]
 800afde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800afe0:	4604      	mov	r4, r0
 800afe2:	b35b      	cbz	r3, 800b03c <E131Bridge::Start()+0x60>
 800afe4:	6983      	ldr	r3, [r0, #24]
 800afe6:	b9cb      	cbnz	r3, 800b01c <E131Bridge::Start()+0x40>
 800afe8:	a901      	add	r1, sp, #4
 800afea:	4818      	ldr	r0, [pc, #96]	; (800b04c <E131Bridge::Start()+0x70>)
 800afec:	f008 fdf4 	bl	8013bd8 <inet_aton>
 800aff0:	9b01      	ldr	r3, [sp, #4]
 800aff2:	f240 207e 	movw	r0, #638	; 0x27e
 800aff6:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800affa:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800affe:	6223      	str	r3, [r4, #32]
 800b000:	f008 fde6 	bl	8013bd0 <operator new(unsigned int)>
 800b004:	61a0      	str	r0, [r4, #24]
 800b006:	4620      	mov	r0, r4
 800b008:	f000 fd36 	bl	800ba78 <E131Bridge::FillDataPacket()>
 800b00c:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800b010:	f008 fdde 	bl	8013bd0 <operator new(unsigned int)>
 800b014:	61e0      	str	r0, [r4, #28]
 800b016:	4620      	mov	r0, r4
 800b018:	f000 fc86 	bl	800b928 <E131Bridge::FillDiscoveryPacket()>
 800b01c:	2500      	movs	r5, #0
 800b01e:	270c      	movs	r7, #12
 800b020:	f604 5696 	addw	r6, r4, #3478	; 0xd96
 800b024:	fb07 f305 	mul.w	r3, r7, r5
 800b028:	5cf3      	ldrb	r3, [r6, r3]
 800b02a:	b123      	cbz	r3, 800b036 <E131Bridge::Start()+0x5a>
 800b02c:	6960      	ldr	r0, [r4, #20]
 800b02e:	4629      	mov	r1, r5
 800b030:	6803      	ldr	r3, [r0, #0]
 800b032:	689b      	ldr	r3, [r3, #8]
 800b034:	4798      	blx	r3
 800b036:	3501      	adds	r5, #1
 800b038:	2d20      	cmp	r5, #32
 800b03a:	d1f3      	bne.n	800b024 <E131Bridge::Start()+0x48>
 800b03c:	2102      	movs	r1, #2
 800b03e:	4b04      	ldr	r3, [pc, #16]	; (800b050 <E131Bridge::Start()+0x74>)
 800b040:	6818      	ldr	r0, [r3, #0]
 800b042:	b003      	add	sp, #12
 800b044:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800b048:	f008 bce2 	b.w	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800b04c:	08017431 	stmdaeq	r1, {r0, r4, r5, sl, ip, sp, lr}
 800b050:	2001d978 	andcs	sp, r1, r8, ror r9

0800b054 <E131Bridge::Stop()>:
 800b054:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b058:	2500      	movs	r5, #0
 800b05a:	2301      	movs	r3, #1
 800b05c:	4604      	mov	r4, r0
 800b05e:	f240 6804 	movw	r8, #1540	; 0x604
 800b062:	462e      	mov	r6, r5
 800b064:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800b068:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800b06c:	6860      	ldr	r0, [r4, #4]
 800b06e:	b118      	cbz	r0, 800b078 <E131Bridge::Stop()+0x24>
 800b070:	6803      	ldr	r3, [r0, #0]
 800b072:	4629      	mov	r1, r5
 800b074:	68db      	ldr	r3, [r3, #12]
 800b076:	4798      	blx	r3
 800b078:	f7ff fecc 	bl	800ae14 <lightset::Data::Get()>
 800b07c:	2344      	movs	r3, #68	; 0x44
 800b07e:	fb08 0005 	mla	r0, r8, r5, r0
 800b082:	436b      	muls	r3, r5
 800b084:	3501      	adds	r5, #1
 800b086:	2d20      	cmp	r5, #32
 800b088:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800b08c:	54fe      	strb	r6, [r7, r3]
 800b08e:	d1ed      	bne.n	800b06c <E131Bridge::Stop()+0x18>
 800b090:	6963      	ldr	r3, [r4, #20]
 800b092:	b17b      	cbz	r3, 800b0b4 <E131Bridge::Stop()+0x60>
 800b094:	2500      	movs	r5, #0
 800b096:	270c      	movs	r7, #12
 800b098:	f604 5696 	addw	r6, r4, #3478	; 0xd96
 800b09c:	fb07 f305 	mul.w	r3, r7, r5
 800b0a0:	5cf3      	ldrb	r3, [r6, r3]
 800b0a2:	b123      	cbz	r3, 800b0ae <E131Bridge::Stop()+0x5a>
 800b0a4:	6960      	ldr	r0, [r4, #20]
 800b0a6:	4629      	mov	r1, r5
 800b0a8:	6803      	ldr	r3, [r0, #0]
 800b0aa:	68db      	ldr	r3, [r3, #12]
 800b0ac:	4798      	blx	r3
 800b0ae:	3501      	adds	r5, #1
 800b0b0:	2d20      	cmp	r5, #32
 800b0b2:	d1f3      	bne.n	800b09c <E131Bridge::Stop()+0x48>
 800b0b4:	4b03      	ldr	r3, [pc, #12]	; (800b0c4 <E131Bridge::Stop()+0x70>)
 800b0b6:	2100      	movs	r1, #0
 800b0b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b0bc:	6818      	ldr	r0, [r3, #0]
 800b0be:	f008 bca7 	b.w	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800b0c2:	bf00      	nop
 800b0c4:	2001d978 	andcs	sp, r1, r8, ror r9

0800b0c8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800b0c8:	b570      	push	{r4, r5, r6, lr}
 800b0ca:	4604      	mov	r4, r0
 800b0cc:	2300      	movs	r3, #0
 800b0ce:	2544      	movs	r5, #68	; 0x44
 800b0d0:	4610      	mov	r0, r2
 800b0d2:	f204 5214 	addw	r2, r4, #1300	; 0x514
 800b0d6:	4299      	cmp	r1, r3
 800b0d8:	d004      	beq.n	800b0e4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800b0da:	fb05 f603 	mul.w	r6, r5, r3
 800b0de:	5b96      	ldrh	r6, [r2, r6]
 800b0e0:	4286      	cmp	r6, r0
 800b0e2:	d00e      	beq.n	800b102 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800b0e4:	3301      	adds	r3, #1
 800b0e6:	2b20      	cmp	r3, #32
 800b0e8:	d1f5      	bne.n	800b0d6 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800b0ea:	4b06      	ldr	r3, [pc, #24]	; (800b104 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800b0ec:	6825      	ldr	r5, [r4, #0]
 800b0ee:	681c      	ldr	r4, [r3, #0]
 800b0f0:	f7ff fe58 	bl	800ada4 <e131::universe_to_multicast_ip(unsigned short)>
 800b0f4:	4629      	mov	r1, r5
 800b0f6:	4602      	mov	r2, r0
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b0fe:	f006 b9ed 	b.w	80114dc <Network::LeaveGroup(int, unsigned int)>
 800b102:	bd70      	pop	{r4, r5, r6, pc}
 800b104:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800b108 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800b108:	b570      	push	{r4, r5, r6, lr}
 800b10a:	4604      	mov	r4, r0
 800b10c:	461d      	mov	r5, r3
 800b10e:	b1c1      	cbz	r1, 800b142 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800b110:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b114:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800b118:	b12a      	cbz	r2, 800b126 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800b11a:	42aa      	cmp	r2, r5
 800b11c:	d017      	beq.n	800b14e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800b11e:	2120      	movs	r1, #32
 800b120:	4620      	mov	r0, r4
 800b122:	f7ff ffd1 	bl	800b0c8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800b126:	4b0a      	ldr	r3, [pc, #40]	; (800b150 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 800b128:	8035      	strh	r5, [r6, #0]
 800b12a:	4628      	mov	r0, r5
 800b12c:	6826      	ldr	r6, [r4, #0]
 800b12e:	681c      	ldr	r4, [r3, #0]
 800b130:	f7ff fe38 	bl	800ada4 <e131::universe_to_multicast_ip(unsigned short)>
 800b134:	4631      	mov	r1, r6
 800b136:	4602      	mov	r2, r0
 800b138:	4620      	mov	r0, r4
 800b13a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b13e:	f006 b9ca 	b.w	80114d6 <Network::JoinGroup(int, unsigned int)>
 800b142:	b122      	cbz	r2, 800b14e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800b144:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b148:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800b14c:	e7e4      	b.n	800b118 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800b14e:	bd70      	pop	{r4, r5, r6, pc}
 800b150:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800b154 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800b154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b158:	4604      	mov	r4, r0
 800b15a:	460d      	mov	r5, r1
 800b15c:	461e      	mov	r6, r3
 800b15e:	bb02      	cbnz	r2, 800b1a2 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800b160:	291f      	cmp	r1, #31
 800b162:	d843      	bhi.n	800b1ec <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800b164:	230c      	movs	r3, #12
 800b166:	fb03 0301 	mla	r3, r3, r1, r0
 800b16a:	f893 2d96 	ldrb.w	r2, [r3, #3478]	; 0xd96
 800b16e:	b12a      	cbz	r2, 800b17c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800b170:	f8b3 3d94 	ldrh.w	r3, [r3, #3476]	; 0xd94
 800b174:	42b3      	cmp	r3, r6
 800b176:	d109      	bne.n	800b18c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800b178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b17c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b180:	3201      	adds	r2, #1
 800b182:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800b186:	2201      	movs	r2, #1
 800b188:	f883 2d96 	strb.w	r2, [r3, #3478]	; 0xd96
 800b18c:	230c      	movs	r3, #12
 800b18e:	fb03 4405 	mla	r4, r3, r5, r4
 800b192:	4630      	mov	r0, r6
 800b194:	f8a4 6d94 	strh.w	r6, [r4, #3476]	; 0xd94
 800b198:	f7ff fe04 	bl	800ada4 <e131::universe_to_multicast_ip(unsigned short)>
 800b19c:	f8c4 0d98 	str.w	r0, [r4, #3480]	; 0xd98
 800b1a0:	e7ea      	b.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b1a2:	2a02      	cmp	r2, #2
 800b1a4:	d122      	bne.n	800b1ec <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800b1a6:	291f      	cmp	r1, #31
 800b1a8:	d8e6      	bhi.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b1aa:	2344      	movs	r3, #68	; 0x44
 800b1ac:	fb03 0301 	mla	r3, r3, r1, r0
 800b1b0:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800b1b4:	b152      	cbz	r2, 800b1cc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800b1b6:	2200      	movs	r2, #0
 800b1b8:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800b1bc:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800b1c0:	4632      	mov	r2, r6
 800b1c2:	3b01      	subs	r3, #1
 800b1c4:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800b1c8:	f7ff ff7e 	bl	800b0c8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800b1cc:	230c      	movs	r3, #12
 800b1ce:	fb03 4505 	mla	r5, r3, r5, r4
 800b1d2:	f895 3d96 	ldrb.w	r3, [r5, #3478]	; 0xd96
 800b1d6:	2b00      	cmp	r3, #0
 800b1d8:	d0ce      	beq.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b1da:	2300      	movs	r3, #0
 800b1dc:	f885 3d96 	strb.w	r3, [r5, #3478]	; 0xd96
 800b1e0:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b1e4:	3b01      	subs	r3, #1
 800b1e6:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800b1ea:	e7c5      	b.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b1ec:	2344      	movs	r3, #68	; 0x44
 800b1ee:	fb03 4305 	mla	r3, r3, r5, r4
 800b1f2:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800b1f6:	b1d2      	cbz	r2, 800b22e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800b1f8:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800b1fc:	42b3      	cmp	r3, r6
 800b1fe:	d0bb      	beq.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b200:	4632      	mov	r2, r6
 800b202:	4629      	mov	r1, r5
 800b204:	4620      	mov	r0, r4
 800b206:	f7ff ff5f 	bl	800b0c8 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800b20a:	4b0d      	ldr	r3, [pc, #52]	; (800b240 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800b20c:	4630      	mov	r0, r6
 800b20e:	681f      	ldr	r7, [r3, #0]
 800b210:	f8d4 8000 	ldr.w	r8, [r4]
 800b214:	f7ff fdc6 	bl	800ada4 <e131::universe_to_multicast_ip(unsigned short)>
 800b218:	4641      	mov	r1, r8
 800b21a:	4602      	mov	r2, r0
 800b21c:	4638      	mov	r0, r7
 800b21e:	f006 f95a 	bl	80114d6 <Network::JoinGroup(int, unsigned int)>
 800b222:	2344      	movs	r3, #68	; 0x44
 800b224:	fb03 4305 	mla	r3, r3, r5, r4
 800b228:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800b22c:	e7a4      	b.n	800b178 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800b22e:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800b232:	3201      	adds	r2, #1
 800b234:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800b238:	2201      	movs	r2, #1
 800b23a:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800b23e:	e7e4      	b.n	800b20a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800b240:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800b244 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800b244:	b953      	cbnz	r3, 800b25c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800b246:	291f      	cmp	r1, #31
 800b248:	d811      	bhi.n	800b26e <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800b24a:	230c      	movs	r3, #12
 800b24c:	fb03 0001 	mla	r0, r3, r1, r0
 800b250:	f8b0 3d94 	ldrh.w	r3, [r0, #3476]	; 0xd94
 800b254:	f890 0d96 	ldrb.w	r0, [r0, #3478]	; 0xd96
 800b258:	8013      	strh	r3, [r2, #0]
 800b25a:	4770      	bx	lr
 800b25c:	2344      	movs	r3, #68	; 0x44
 800b25e:	fb03 0001 	mla	r0, r3, r1, r0
 800b262:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 800b266:	f890 0516 	ldrb.w	r0, [r0, #1302]	; 0x516
 800b26a:	8013      	strh	r3, [r2, #0]
 800b26c:	4770      	bx	lr
 800b26e:	4618      	mov	r0, r3
 800b270:	4770      	bx	lr

0800b272 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800b272:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800b276:	b923      	cbnz	r3, 800b282 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800b278:	2301      	movs	r3, #1
 800b27a:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800b27e:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800b282:	2344      	movs	r3, #68	; 0x44
 800b284:	fb03 0001 	mla	r0, r3, r1, r0
 800b288:	2301      	movs	r3, #1
 800b28a:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 800b28e:	4770      	bx	lr

0800b290 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800b290:	4602      	mov	r2, r0
 800b292:	2044      	movs	r0, #68	; 0x44
 800b294:	4348      	muls	r0, r1
 800b296:	b570      	push	{r4, r5, r6, lr}
 800b298:	1815      	adds	r5, r2, r0
 800b29a:	460c      	mov	r4, r1
 800b29c:	68d3      	ldr	r3, [r2, #12]
 800b29e:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800b2a2:	1a5b      	subs	r3, r3, r1
 800b2a4:	f242 7110 	movw	r1, #10000	; 0x2710
 800b2a8:	428b      	cmp	r3, r1
 800b2aa:	d90a      	bls.n	800b2c2 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800b2ac:	2600      	movs	r6, #0
 800b2ae:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800b2b2:	2110      	movs	r1, #16
 800b2b4:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800b2b8:	4410      	add	r0, r2
 800b2ba:	f7ff fd99 	bl	800adf0 <memset.constprop.0.isra.0>
 800b2be:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800b2c2:	2344      	movs	r3, #68	; 0x44
 800b2c4:	435c      	muls	r4, r3
 800b2c6:	1915      	adds	r5, r2, r4
 800b2c8:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800b2cc:	68d3      	ldr	r3, [r2, #12]
 800b2ce:	1a5b      	subs	r3, r3, r1
 800b2d0:	f242 7110 	movw	r1, #10000	; 0x2710
 800b2d4:	428b      	cmp	r3, r1
 800b2d6:	d90a      	bls.n	800b2ee <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800b2d8:	2600      	movs	r6, #0
 800b2da:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800b2de:	2110      	movs	r1, #16
 800b2e0:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800b2e4:	1910      	adds	r0, r2, r4
 800b2e6:	f7ff fd83 	bl	800adf0 <memset.constprop.0.isra.0>
 800b2ea:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800b2ee:	4611      	mov	r1, r2
 800b2f0:	2300      	movs	r3, #0
 800b2f2:	f502 6008 	add.w	r0, r2, #2176	; 0x880
 800b2f6:	f891 4555 	ldrb.w	r4, [r1, #1365]	; 0x555
 800b2fa:	3144      	adds	r1, #68	; 0x44
 800b2fc:	4281      	cmp	r1, r0
 800b2fe:	ea43 0304 	orr.w	r3, r3, r4
 800b302:	d1f8      	bne.n	800b2f6 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 800b304:	b923      	cbnz	r3, 800b310 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800b306:	2101      	movs	r1, #1
 800b308:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800b30c:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800b310:	bd70      	pop	{r4, r5, r6, pc}

0800b312 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800b312:	2244      	movs	r2, #68	; 0x44
 800b314:	fb02 0101 	mla	r1, r2, r1, r0
 800b318:	68c3      	ldr	r3, [r0, #12]
 800b31a:	b510      	push	{r4, lr}
 800b31c:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800b320:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800b324:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800b328:	1a9a      	subs	r2, r3, r2
 800b32a:	b184      	cbz	r4, 800b34e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800b32c:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800b330:	1a5b      	subs	r3, r3, r1
 800b332:	b128      	cbz	r0, 800b340 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800b334:	f242 700f 	movw	r0, #9999	; 0x270f
 800b338:	4283      	cmp	r3, r0
 800b33a:	d90d      	bls.n	800b358 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800b33c:	4282      	cmp	r2, r0
 800b33e:	e002      	b.n	800b346 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800b340:	f242 7010 	movw	r0, #10000	; 0x2710
 800b344:	4283      	cmp	r3, r0
 800b346:	bf94      	ite	ls
 800b348:	2000      	movls	r0, #0
 800b34a:	2001      	movhi	r0, #1
 800b34c:	bd10      	pop	{r4, pc}
 800b34e:	2800      	cmp	r0, #0
 800b350:	d0fc      	beq.n	800b34c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800b352:	f242 7010 	movw	r0, #10000	; 0x2710
 800b356:	e7f1      	b.n	800b33c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800b358:	2000      	movs	r0, #0
 800b35a:	e7f7      	b.n	800b34c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800b35c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800b35c:	684a      	ldr	r2, [r1, #4]
 800b35e:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800b360:	b510      	push	{r4, lr}
 800b362:	429a      	cmp	r2, r3
 800b364:	d10d      	bne.n	800b382 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800b366:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800b36a:	3107      	adds	r1, #7
 800b36c:	30a1      	adds	r0, #161	; 0xa1
 800b36e:	4283      	cmp	r3, r0
 800b370:	d101      	bne.n	800b376 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800b372:	2001      	movs	r0, #1
 800b374:	bd10      	pop	{r4, pc}
 800b376:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b37a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800b37e:	4294      	cmp	r4, r2
 800b380:	d0f5      	beq.n	800b36e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800b382:	2000      	movs	r0, #0
 800b384:	e7f6      	b.n	800b374 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

0800b388 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800b388:	2301      	movs	r3, #1
 800b38a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b38e:	4604      	mov	r4, r0
 800b390:	4690      	mov	r8, r2
 800b392:	460f      	mov	r7, r1
 800b394:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800b398:	2900      	cmp	r1, #0
 800b39a:	d044      	beq.n	800b426 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b39c:	2a00      	cmp	r2, #0
 800b39e:	d042      	beq.n	800b426 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800b3a0:	2600      	movs	r6, #0
 800b3a2:	f240 6904 	movw	r9, #1540	; 0x604
 800b3a6:	4632      	mov	r2, r6
 800b3a8:	4637      	mov	r7, r6
 800b3aa:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800b3ae:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800b3b2:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b3b6:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800b3ba:	f1b8 0f00 	cmp.w	r8, #0
 800b3be:	d018      	beq.n	800b3f2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800b3c0:	2110      	movs	r1, #16
 800b3c2:	4628      	mov	r0, r5
 800b3c4:	f845 7c04 	str.w	r7, [r5, #-4]
 800b3c8:	f7ff fd12 	bl	800adf0 <memset.constprop.0.isra.0>
 800b3cc:	2110      	movs	r1, #16
 800b3ce:	f105 001c 	add.w	r0, r5, #28
 800b3d2:	61af      	str	r7, [r5, #24]
 800b3d4:	f7ff fd0c 	bl	800adf0 <memset.constprop.0.isra.0>
 800b3d8:	f7ff fd1c 	bl	800ae14 <lightset::Data::Get()>
 800b3dc:	4642      	mov	r2, r8
 800b3de:	fb09 0006 	mla	r0, r9, r6, r0
 800b3e2:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800b3e6:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800b3ea:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800b3ee:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800b3f2:	3601      	adds	r6, #1
 800b3f4:	2e20      	cmp	r6, #32
 800b3f6:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b3fa:	d1dc      	bne.n	800b3b6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800b3fc:	b12a      	cbz	r2, 800b40a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b3fe:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800b402:	2901      	cmp	r1, #1
 800b404:	d04a      	beq.n	800b49c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800b406:	2902      	cmp	r1, #2
 800b408:	d04d      	beq.n	800b4a6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800b40a:	4b29      	ldr	r3, [pc, #164]	; (800b4b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800b40c:	2102      	movs	r1, #2
 800b40e:	6818      	ldr	r0, [r3, #0]
 800b410:	f008 fafe 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800b414:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b418:	f023 0302 	bic.w	r3, r3, #2
 800b41c:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b420:	b003      	add	sp, #12
 800b422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b426:	2600      	movs	r6, #0
 800b428:	f240 6b04 	movw	fp, #1540	; 0x604
 800b42c:	4632      	mov	r2, r6
 800b42e:	46b1      	mov	r9, r6
 800b430:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800b434:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800b438:	f1ba 0f00 	cmp.w	sl, #0
 800b43c:	d028      	beq.n	800b490 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b43e:	b15f      	cbz	r7, 800b458 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b440:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800b444:	b143      	cbz	r3, 800b458 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800b446:	2110      	movs	r1, #16
 800b448:	f845 9c20 	str.w	r9, [r5, #-32]
 800b44c:	f1a5 001c 	sub.w	r0, r5, #28
 800b450:	f7ff fcce 	bl	800adf0 <memset.constprop.0.isra.0>
 800b454:	f885 9019 	strb.w	r9, [r5, #25]
 800b458:	f1b8 0f00 	cmp.w	r8, #0
 800b45c:	d00a      	beq.n	800b474 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b45e:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b462:	b13b      	cbz	r3, 800b474 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800b464:	2110      	movs	r1, #16
 800b466:	4628      	mov	r0, r5
 800b468:	f845 9c04 	str.w	r9, [r5, #-4]
 800b46c:	f7ff fcc0 	bl	800adf0 <memset.constprop.0.isra.0>
 800b470:	f885 9019 	strb.w	r9, [r5, #25]
 800b474:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b478:	b953      	cbnz	r3, 800b490 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800b47a:	9301      	str	r3, [sp, #4]
 800b47c:	f7ff fcca 	bl	800ae14 <lightset::Data::Get()>
 800b480:	4652      	mov	r2, sl
 800b482:	fb0b 0006 	mla	r0, fp, r6, r0
 800b486:	9b01      	ldr	r3, [sp, #4]
 800b488:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800b48c:	762b      	strb	r3, [r5, #24]
 800b48e:	76ab      	strb	r3, [r5, #26]
 800b490:	3601      	adds	r6, #1
 800b492:	2e20      	cmp	r6, #32
 800b494:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b498:	d1cc      	bne.n	800b434 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800b49a:	e7af      	b.n	800b3fc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800b49c:	6860      	ldr	r0, [r4, #4]
 800b49e:	6803      	ldr	r3, [r0, #0]
 800b4a0:	695b      	ldr	r3, [r3, #20]
 800b4a2:	4798      	blx	r3
 800b4a4:	e7b1      	b.n	800b40a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b4a6:	6860      	ldr	r0, [r4, #4]
 800b4a8:	6803      	ldr	r3, [r0, #0]
 800b4aa:	699b      	ldr	r3, [r3, #24]
 800b4ac:	4798      	blx	r3
 800b4ae:	e7ac      	b.n	800b40a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800b4b0:	2001d978 	andcs	sp, r1, r8, ror r9

0800b4b4 <E131Bridge::HandleDmx()>:
 800b4b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b4b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4bc:	4604      	mov	r4, r0
 800b4be:	2600      	movs	r6, #0
 800b4c0:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800b4c4:	b085      	sub	sp, #20
 800b4c6:	ba7f      	rev16	r7, r7
 800b4c8:	b2bf      	uxth	r7, r7
 800b4ca:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800b4ce:	3f01      	subs	r7, #1
 800b4d0:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800b4d4:	9301      	str	r3, [sp, #4]
 800b4d6:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800b4da:	b353      	cbz	r3, 800b532 <E131Bridge::HandleDmx()+0x7e>
 800b4dc:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800b4e0:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800b4e4:	ba5b      	rev16	r3, r3
 800b4e6:	b29b      	uxth	r3, r3
 800b4e8:	429a      	cmp	r2, r3
 800b4ea:	d122      	bne.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b4ec:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800b4f0:	f1a5 0108 	sub.w	r1, r5, #8
 800b4f4:	4620      	mov	r0, r4
 800b4f6:	9302      	str	r3, [sp, #8]
 800b4f8:	f7ff ff30 	bl	800b35c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b4fc:	f105 0114 	add.w	r1, r5, #20
 800b500:	4682      	mov	sl, r0
 800b502:	4620      	mov	r0, r4
 800b504:	f7ff ff2a 	bl	800b35c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800b508:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800b50c:	4680      	mov	r8, r0
 800b50e:	f1ba 0f00 	cmp.w	sl, #0
 800b512:	d01a      	beq.n	800b54a <E131Bridge::HandleDmx()+0x96>
 800b514:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b518:	7c2a      	ldrb	r2, [r5, #16]
 800b51a:	742b      	strb	r3, [r5, #16]
 800b51c:	3313      	adds	r3, #19
 800b51e:	1a9b      	subs	r3, r3, r2
 800b520:	b2db      	uxtb	r3, r3
 800b522:	2b13      	cmp	r3, #19
 800b524:	d905      	bls.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b526:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800b52a:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b52e:	2a00      	cmp	r2, #0
 800b530:	da14      	bge.n	800b55c <E131Bridge::HandleDmx()+0xa8>
 800b532:	9b01      	ldr	r3, [sp, #4]
 800b534:	3601      	adds	r6, #1
 800b536:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800b53a:	2e20      	cmp	r6, #32
 800b53c:	9301      	str	r3, [sp, #4]
 800b53e:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b542:	d1c8      	bne.n	800b4d6 <E131Bridge::HandleDmx()+0x22>
 800b544:	b005      	add	sp, #20
 800b546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b54a:	2800      	cmp	r0, #0
 800b54c:	d0eb      	beq.n	800b526 <E131Bridge::HandleDmx()+0x72>
 800b54e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b552:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800b556:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b55a:	e7df      	b.n	800b51c <E131Bridge::HandleDmx()+0x68>
 800b55c:	065a      	lsls	r2, r3, #25
 800b55e:	d50b      	bpl.n	800b578 <E131Bridge::HandleDmx()+0xc4>
 800b560:	f1ba 0f00 	cmp.w	sl, #0
 800b564:	d102      	bne.n	800b56c <E131Bridge::HandleDmx()+0xb8>
 800b566:	f1b8 0f00 	cmp.w	r8, #0
 800b56a:	d0e2      	beq.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b56c:	4642      	mov	r2, r8
 800b56e:	4651      	mov	r1, sl
 800b570:	4620      	mov	r0, r4
 800b572:	f7ff ff09 	bl	800b388 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b576:	e7dc      	b.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b578:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b57c:	b133      	cbz	r3, 800b58c <E131Bridge::HandleDmx()+0xd8>
 800b57e:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800b582:	b91b      	cbnz	r3, 800b58c <E131Bridge::HandleDmx()+0xd8>
 800b584:	4631      	mov	r1, r6
 800b586:	4620      	mov	r0, r4
 800b588:	f7ff fe82 	bl	800b290 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800b58c:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800b590:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800b594:	4293      	cmp	r3, r2
 800b596:	d259      	bcs.n	800b64c <E131Bridge::HandleDmx()+0x198>
 800b598:	4631      	mov	r1, r6
 800b59a:	4620      	mov	r0, r4
 800b59c:	9303      	str	r3, [sp, #12]
 800b59e:	f7ff feb8 	bl	800b312 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800b5a2:	2800      	cmp	r0, #0
 800b5a4:	d0c5      	beq.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b5a6:	9b03      	ldr	r3, [sp, #12]
 800b5a8:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800b5ac:	9b02      	ldr	r3, [sp, #8]
 800b5ae:	2b00      	cmp	r3, #0
 800b5b0:	d154      	bne.n	800b65c <E131Bridge::HandleDmx()+0x1a8>
 800b5b2:	f1bb 0f00 	cmp.w	fp, #0
 800b5b6:	d15c      	bne.n	800b672 <E131Bridge::HandleDmx()+0x1be>
 800b5b8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b5ba:	2210      	movs	r2, #16
 800b5bc:	f845 3c04 	str.w	r3, [r5, #-4]
 800b5c0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b5c4:	4628      	mov	r0, r5
 800b5c6:	742b      	strb	r3, [r5, #16]
 800b5c8:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b5cc:	f7ff fc18 	bl	800ae00 <memcpy.isra.0>
 800b5d0:	68e3      	ldr	r3, [r4, #12]
 800b5d2:	463a      	mov	r2, r7
 800b5d4:	4649      	mov	r1, r9
 800b5d6:	4630      	mov	r0, r6
 800b5d8:	f845 3c08 	str.w	r3, [r5, #-8]
 800b5dc:	f7ff fc26 	bl	800ae2c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b5e0:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b5e4:	069b      	lsls	r3, r3, #26
 800b5e6:	f100 80aa 	bmi.w	800b73e <E131Bridge::HandleDmx()+0x28a>
 800b5ea:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800b5ee:	b29a      	uxth	r2, r3
 800b5f0:	2a00      	cmp	r2, #0
 800b5f2:	f000 80a8 	beq.w	800b746 <E131Bridge::HandleDmx()+0x292>
 800b5f6:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800b5fa:	2a00      	cmp	r2, #0
 800b5fc:	f040 80a3 	bne.w	800b746 <E131Bridge::HandleDmx()+0x292>
 800b600:	ba5b      	rev16	r3, r3
 800b602:	b29b      	uxth	r3, r3
 800b604:	f1ba 0f00 	cmp.w	sl, #0
 800b608:	f040 8096 	bne.w	800b738 <E131Bridge::HandleDmx()+0x284>
 800b60c:	f1b8 0f00 	cmp.w	r8, #0
 800b610:	f040 8092 	bne.w	800b738 <E131Bridge::HandleDmx()+0x284>
 800b614:	69aa      	ldr	r2, [r5, #24]
 800b616:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800b61a:	3a00      	subs	r2, #0
 800b61c:	bf18      	it	ne
 800b61e:	2201      	movne	r2, #1
 800b620:	3900      	subs	r1, #0
 800b622:	bf18      	it	ne
 800b624:	2101      	movne	r1, #1
 800b626:	4620      	mov	r0, r4
 800b628:	f7ff fd6e 	bl	800b108 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800b62c:	f240 1301 	movw	r3, #257	; 0x101
 800b630:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800b634:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b638:	2b00      	cmp	r3, #0
 800b63a:	f040 8089 	bne.w	800b750 <E131Bridge::HandleDmx()+0x29c>
 800b63e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b642:	f043 0302 	orr.w	r3, r3, #2
 800b646:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b64a:	e772      	b.n	800b532 <E131Bridge::HandleDmx()+0x7e>
 800b64c:	d9ae      	bls.n	800b5ac <E131Bridge::HandleDmx()+0xf8>
 800b64e:	2200      	movs	r2, #0
 800b650:	f845 2c04 	str.w	r2, [r5, #-4]
 800b654:	61aa      	str	r2, [r5, #24]
 800b656:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800b65a:	e7a5      	b.n	800b5a8 <E131Bridge::HandleDmx()+0xf4>
 800b65c:	f1ba 0f00 	cmp.w	sl, #0
 800b660:	f000 809a 	beq.w	800b798 <E131Bridge::HandleDmx()+0x2e4>
 800b664:	f1bb 0f00 	cmp.w	fp, #0
 800b668:	d159      	bne.n	800b71e <E131Bridge::HandleDmx()+0x26a>
 800b66a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b66e:	742b      	strb	r3, [r5, #16]
 800b670:	e7ae      	b.n	800b5d0 <E131Bridge::HandleDmx()+0x11c>
 800b672:	f1b8 0f00 	cmp.w	r8, #0
 800b676:	d038      	beq.n	800b6ea <E131Bridge::HandleDmx()+0x236>
 800b678:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b67c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b680:	68e3      	ldr	r3, [r4, #12]
 800b682:	616b      	str	r3, [r5, #20]
 800b684:	f7ff fbc6 	bl	800ae14 <lightset::Data::Get()>
 800b688:	4683      	mov	fp, r0
 800b68a:	9b01      	ldr	r3, [sp, #4]
 800b68c:	463a      	mov	r2, r7
 800b68e:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800b692:	4649      	mov	r1, r9
 800b694:	4458      	add	r0, fp
 800b696:	f7ff fbb3 	bl	800ae00 <memcpy.isra.0>
 800b69a:	f240 6304 	movw	r3, #1540	; 0x604
 800b69e:	fb03 b306 	mla	r3, r3, r6, fp
 800b6a2:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b6a6:	9b01      	ldr	r3, [sp, #4]
 800b6a8:	463a      	mov	r2, r7
 800b6aa:	4649      	mov	r1, r9
 800b6ac:	eb0b 0003 	add.w	r0, fp, r3
 800b6b0:	f7ff fba6 	bl	800ae00 <memcpy.isra.0>
 800b6b4:	e794      	b.n	800b5e0 <E131Bridge::HandleDmx()+0x12c>
 800b6b6:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b6b8:	2210      	movs	r2, #16
 800b6ba:	61ab      	str	r3, [r5, #24]
 800b6bc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b6c0:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b6c4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b6c8:	f105 001c 	add.w	r0, r5, #28
 800b6cc:	f7ff fb98 	bl	800ae00 <memcpy.isra.0>
 800b6d0:	68e3      	ldr	r3, [r4, #12]
 800b6d2:	4631      	mov	r1, r6
 800b6d4:	4620      	mov	r0, r4
 800b6d6:	616b      	str	r3, [r5, #20]
 800b6d8:	f7ff fdcb 	bl	800b272 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b6dc:	463a      	mov	r2, r7
 800b6de:	4649      	mov	r1, r9
 800b6e0:	4630      	mov	r0, r6
 800b6e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b6e4:	f7ff fbe8 	bl	800aeb8 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b6e8:	e77a      	b.n	800b5e0 <E131Bridge::HandleDmx()+0x12c>
 800b6ea:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b6ec:	2210      	movs	r2, #16
 800b6ee:	f845 3c04 	str.w	r3, [r5, #-4]
 800b6f2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b6f6:	4628      	mov	r0, r5
 800b6f8:	742b      	strb	r3, [r5, #16]
 800b6fa:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b6fe:	f7ff fb7f 	bl	800ae00 <memcpy.isra.0>
 800b702:	68e3      	ldr	r3, [r4, #12]
 800b704:	4631      	mov	r1, r6
 800b706:	4620      	mov	r0, r4
 800b708:	f845 3c08 	str.w	r3, [r5, #-8]
 800b70c:	f7ff fdb1 	bl	800b272 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b710:	463a      	mov	r2, r7
 800b712:	4649      	mov	r1, r9
 800b714:	4630      	mov	r0, r6
 800b716:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b718:	f7ff fba5 	bl	800ae66 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b71c:	e760      	b.n	800b5e0 <E131Bridge::HandleDmx()+0x12c>
 800b71e:	f1b8 0f00 	cmp.w	r8, #0
 800b722:	d103      	bne.n	800b72c <E131Bridge::HandleDmx()+0x278>
 800b724:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b728:	742b      	strb	r3, [r5, #16]
 800b72a:	e7ea      	b.n	800b702 <E131Bridge::HandleDmx()+0x24e>
 800b72c:	4820      	ldr	r0, [pc, #128]	; (800b7b0 <E131Bridge::HandleDmx()+0x2fc>)
 800b72e:	b005      	add	sp, #20
 800b730:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b734:	f7fd bf6c 	b.w	8009610 <printf>
 800b738:	4642      	mov	r2, r8
 800b73a:	4651      	mov	r1, sl
 800b73c:	e773      	b.n	800b626 <E131Bridge::HandleDmx()+0x172>
 800b73e:	f04f 0300 	mov.w	r3, #0
 800b742:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800b746:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b74a:	2b00      	cmp	r3, #0
 800b74c:	f47f af72 	bne.w	800b634 <E131Bridge::HandleDmx()+0x180>
 800b750:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b754:	f7ff fb5e 	bl	800ae14 <lightset::Data::Get()>
 800b758:	f240 6304 	movw	r3, #1540	; 0x604
 800b75c:	f8d8 2000 	ldr.w	r2, [r8]
 800b760:	fb03 0306 	mla	r3, r3, r6, r0
 800b764:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800b768:	9a01      	ldr	r2, [sp, #4]
 800b76a:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800b76e:	1882      	adds	r2, r0, r2
 800b770:	4631      	mov	r1, r6
 800b772:	4640      	mov	r0, r8
 800b774:	47d0      	blx	sl
 800b776:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800b77a:	2b00      	cmp	r3, #0
 800b77c:	f47f af5f 	bne.w	800b63e <E131Bridge::HandleDmx()+0x18a>
 800b780:	6860      	ldr	r0, [r4, #4]
 800b782:	4631      	mov	r1, r6
 800b784:	6803      	ldr	r3, [r0, #0]
 800b786:	689b      	ldr	r3, [r3, #8]
 800b788:	4798      	blx	r3
 800b78a:	f04f 0301 	mov.w	r3, #1
 800b78e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800b792:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800b796:	e752      	b.n	800b63e <E131Bridge::HandleDmx()+0x18a>
 800b798:	f1bb 0f00 	cmp.w	fp, #0
 800b79c:	d08b      	beq.n	800b6b6 <E131Bridge::HandleDmx()+0x202>
 800b79e:	f1b8 0f00 	cmp.w	r8, #0
 800b7a2:	d0c3      	beq.n	800b72c <E131Bridge::HandleDmx()+0x278>
 800b7a4:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b7a8:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b7ac:	e790      	b.n	800b6d0 <E131Bridge::HandleDmx()+0x21c>
 800b7ae:	bf00      	nop
 800b7b0:	08017446 	stmdaeq	r1, {r1, r2, r6, sl, ip, sp, lr}

0800b7b4 <E131Bridge::IsValidRoot()>:
 800b7b4:	b530      	push	{r4, r5, lr}
 800b7b6:	4a0d      	ldr	r2, [pc, #52]	; (800b7ec <E131Bridge::IsValidRoot()+0x38>)
 800b7b8:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800b7bc:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800b7c0:	4299      	cmp	r1, r3
 800b7c2:	d109      	bne.n	800b7d8 <E131Bridge::IsValidRoot()+0x24>
 800b7c4:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800b7c8:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800b7cc:	d00c      	beq.n	800b7e8 <E131Bridge::IsValidRoot()+0x34>
 800b7ce:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800b7d2:	4258      	negs	r0, r3
 800b7d4:	4158      	adcs	r0, r3
 800b7d6:	bd30      	pop	{r4, r5, pc}
 800b7d8:	f812 4b01 	ldrb.w	r4, [r2], #1
 800b7dc:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800b7e0:	42a5      	cmp	r5, r4
 800b7e2:	d0ed      	beq.n	800b7c0 <E131Bridge::IsValidRoot()+0xc>
 800b7e4:	2000      	movs	r0, #0
 800b7e6:	e7f6      	b.n	800b7d6 <E131Bridge::IsValidRoot()+0x22>
 800b7e8:	2001      	movs	r0, #1
 800b7ea:	e7f4      	b.n	800b7d6 <E131Bridge::IsValidRoot()+0x22>
 800b7ec:	080175f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}

0800b7f0 <E131Bridge::IsValidDataPacket()>:
 800b7f0:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800b7f4:	2b02      	cmp	r3, #2
 800b7f6:	d10d      	bne.n	800b814 <E131Bridge::IsValidDataPacket()+0x24>
 800b7f8:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800b7fc:	2ba1      	cmp	r3, #161	; 0xa1
 800b7fe:	d109      	bne.n	800b814 <E131Bridge::IsValidDataPacket()+0x24>
 800b800:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800b804:	b933      	cbnz	r3, 800b814 <E131Bridge::IsValidDataPacket()+0x24>
 800b806:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800b80a:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800b80e:	4258      	negs	r0, r3
 800b810:	4158      	adcs	r0, r3
 800b812:	4770      	bx	lr
 800b814:	2000      	movs	r0, #0
 800b816:	4770      	bx	lr

0800b818 <E131Bridge::Run()>:
 800b818:	b530      	push	{r4, r5, lr}
 800b81a:	4601      	mov	r1, r0
 800b81c:	4604      	mov	r4, r0
 800b81e:	b085      	sub	sp, #20
 800b820:	f10d 030e 	add.w	r3, sp, #14
 800b824:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800b828:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800b82c:	9300      	str	r3, [sp, #0]
 800b82e:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800b832:	f005 f91b 	bl	8010a6c <udp_recv>
 800b836:	4b3a      	ldr	r3, [pc, #232]	; (800b920 <E131Bridge::Run()+0x108>)
 800b838:	681d      	ldr	r5, [r3, #0]
 800b83a:	60e5      	str	r5, [r4, #12]
 800b83c:	2800      	cmp	r0, #0
 800b83e:	d138      	bne.n	800b8b2 <E131Bridge::Run()+0x9a>
 800b840:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b844:	b16b      	cbz	r3, 800b862 <E131Bridge::Run()+0x4a>
 800b846:	6923      	ldr	r3, [r4, #16]
 800b848:	1aed      	subs	r5, r5, r3
 800b84a:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800b84e:	429d      	cmp	r5, r3
 800b850:	d928      	bls.n	800b8a4 <E131Bridge::Run()+0x8c>
 800b852:	6863      	ldr	r3, [r4, #4]
 800b854:	b9eb      	cbnz	r3, 800b892 <E131Bridge::Run()+0x7a>
 800b856:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b85a:	f023 0302 	bic.w	r3, r3, #2
 800b85e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b862:	6963      	ldr	r3, [r4, #20]
 800b864:	b12b      	cbz	r3, 800b872 <E131Bridge::Run()+0x5a>
 800b866:	4620      	mov	r0, r4
 800b868:	f000 f94c 	bl	800bb04 <E131Bridge::HandleDmxIn()>
 800b86c:	4620      	mov	r0, r4
 800b86e:	f000 f8c7 	bl	800ba00 <E131Bridge::SendDiscoveryPacket()>
 800b872:	7a23      	ldrb	r3, [r4, #8]
 800b874:	b15b      	cbz	r3, 800b88e <E131Bridge::Run()+0x76>
 800b876:	4b2b      	ldr	r3, [pc, #172]	; (800b924 <E131Bridge::Run()+0x10c>)
 800b878:	6818      	ldr	r0, [r3, #0]
 800b87a:	6843      	ldr	r3, [r0, #4]
 800b87c:	2b04      	cmp	r3, #4
 800b87e:	d006      	beq.n	800b88e <E131Bridge::Run()+0x76>
 800b880:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b884:	2b00      	cmp	r3, #0
 800b886:	d049      	beq.n	800b91c <E131Bridge::Run()+0x104>
 800b888:	2103      	movs	r1, #3
 800b88a:	f008 f8c1 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800b88e:	b005      	add	sp, #20
 800b890:	bd30      	pop	{r4, r5, pc}
 800b892:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800b896:	2b00      	cmp	r3, #0
 800b898:	d1dd      	bne.n	800b856 <E131Bridge::Run()+0x3e>
 800b89a:	2201      	movs	r2, #1
 800b89c:	4620      	mov	r0, r4
 800b89e:	4611      	mov	r1, r2
 800b8a0:	f7ff fd72 	bl	800b388 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b8a4:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800b8a8:	1a9b      	subs	r3, r3, r2
 800b8aa:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800b8ae:	d3d8      	bcc.n	800b862 <E131Bridge::Run()+0x4a>
 800b8b0:	e7d1      	b.n	800b856 <E131Bridge::Run()+0x3e>
 800b8b2:	4620      	mov	r0, r4
 800b8b4:	f7ff ff7e 	bl	800b7b4 <E131Bridge::IsValidRoot()>
 800b8b8:	2800      	cmp	r0, #0
 800b8ba:	d0e8      	beq.n	800b88e <E131Bridge::Run()+0x76>
 800b8bc:	2300      	movs	r3, #0
 800b8be:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800b8c2:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b8c6:	6125      	str	r5, [r4, #16]
 800b8c8:	b15b      	cbz	r3, 800b8e2 <E131Bridge::Run()+0xca>
 800b8ca:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800b8ce:	b943      	cbnz	r3, 800b8e2 <E131Bridge::Run()+0xca>
 800b8d0:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800b8d4:	1aad      	subs	r5, r5, r2
 800b8d6:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800b8da:	4295      	cmp	r5, r2
 800b8dc:	bf88      	it	hi
 800b8de:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800b8e2:	6863      	ldr	r3, [r4, #4]
 800b8e4:	2b00      	cmp	r3, #0
 800b8e6:	d0bc      	beq.n	800b862 <E131Bridge::Run()+0x4a>
 800b8e8:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800b8ec:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800b8f0:	ba1a      	rev	r2, r3
 800b8f2:	d108      	bne.n	800b906 <E131Bridge::Run()+0xee>
 800b8f4:	4620      	mov	r0, r4
 800b8f6:	f7ff ff7b 	bl	800b7f0 <E131Bridge::IsValidDataPacket()>
 800b8fa:	2800      	cmp	r0, #0
 800b8fc:	d0b1      	beq.n	800b862 <E131Bridge::Run()+0x4a>
 800b8fe:	4620      	mov	r0, r4
 800b900:	f7ff fdd8 	bl	800b4b4 <E131Bridge::HandleDmx()>
 800b904:	e7ad      	b.n	800b862 <E131Bridge::Run()+0x4a>
 800b906:	2a08      	cmp	r2, #8
 800b908:	d1ab      	bne.n	800b862 <E131Bridge::Run()+0x4a>
 800b90a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b90e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b912:	d1a6      	bne.n	800b862 <E131Bridge::Run()+0x4a>
 800b914:	4620      	mov	r0, r4
 800b916:	f000 f973 	bl	800bc00 <E131Bridge::HandleSynchronization()>
 800b91a:	e7a2      	b.n	800b862 <E131Bridge::Run()+0x4a>
 800b91c:	2102      	movs	r1, #2
 800b91e:	e7b4      	b.n	800b88a <E131Bridge::Run()+0x72>
 800b920:	2001d994 	mulcs	r1, r4, r9
 800b924:	2001d978 	andcs	sp, r1, r8, ror r9

0800b928 <E131Bridge::FillDiscoveryPacket()>:
 800b928:	2200      	movs	r2, #0
 800b92a:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b92e:	b510      	push	{r4, lr}
 800b930:	333c      	adds	r3, #60	; 0x3c
 800b932:	005b      	lsls	r3, r3, #1
 800b934:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800b938:	69c3      	ldr	r3, [r0, #28]
 800b93a:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800b93e:	428b      	cmp	r3, r1
 800b940:	d14a      	bne.n	800b9d8 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800b942:	69c3      	ldr	r3, [r0, #28]
 800b944:	492d      	ldr	r1, [pc, #180]	; (800b9fc <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800b946:	701a      	strb	r2, [r3, #0]
 800b948:	2210      	movs	r2, #16
 800b94a:	705a      	strb	r2, [r3, #1]
 800b94c:	1cda      	adds	r2, r3, #3
 800b94e:	330f      	adds	r3, #15
 800b950:	4293      	cmp	r3, r2
 800b952:	d144      	bne.n	800b9de <E131Bridge::FillDiscoveryPacket()+0xb6>
 800b954:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b958:	69c3      	ldr	r3, [r0, #28]
 800b95a:	3234      	adds	r2, #52	; 0x34
 800b95c:	0052      	lsls	r2, r2, #1
 800b95e:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b962:	ba52      	rev16	r2, r2
 800b964:	821a      	strh	r2, [r3, #16]
 800b966:	2200      	movs	r2, #0
 800b968:	749a      	strb	r2, [r3, #18]
 800b96a:	74da      	strb	r2, [r3, #19]
 800b96c:	751a      	strb	r2, [r3, #20]
 800b96e:	2208      	movs	r2, #8
 800b970:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b974:	f803 2f15 	strb.w	r2, [r3, #21]!
 800b978:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800b97c:	4291      	cmp	r1, r2
 800b97e:	d133      	bne.n	800b9e8 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800b980:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b984:	69c3      	ldr	r3, [r0, #28]
 800b986:	3229      	adds	r2, #41	; 0x29
 800b988:	0052      	lsls	r2, r2, #1
 800b98a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b98e:	ba52      	rev16	r2, r2
 800b990:	84da      	strh	r2, [r3, #38]	; 0x26
 800b992:	2200      	movs	r2, #0
 800b994:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800b998:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800b99c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800b9a0:	2202      	movs	r2, #2
 800b9a2:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800b9a6:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800b9aa:	4291      	cmp	r1, r2
 800b9ac:	d121      	bne.n	800b9f2 <E131Bridge::FillDiscoveryPacket()+0xca>
 800b9ae:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b9b2:	69c2      	ldr	r2, [r0, #28]
 800b9b4:	3304      	adds	r3, #4
 800b9b6:	005b      	lsls	r3, r3, #1
 800b9b8:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b9bc:	ba5b      	rev16	r3, r3
 800b9be:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800b9c2:	2300      	movs	r3, #0
 800b9c4:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800b9c8:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800b9cc:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800b9d0:	2301      	movs	r3, #1
 800b9d2:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800b9d6:	bd10      	pop	{r4, pc}
 800b9d8:	f803 2b01 	strb.w	r2, [r3], #1
 800b9dc:	e7af      	b.n	800b93e <E131Bridge::FillDiscoveryPacket()+0x16>
 800b9de:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b9e2:	f802 4f01 	strb.w	r4, [r2, #1]!
 800b9e6:	e7b3      	b.n	800b950 <E131Bridge::FillDiscoveryPacket()+0x28>
 800b9e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b9ec:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b9f0:	e7c4      	b.n	800b97c <E131Bridge::FillDiscoveryPacket()+0x54>
 800b9f2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b9f6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b9fa:	e7d6      	b.n	800b9aa <E131Bridge::FillDiscoveryPacket()+0x82>
 800b9fc:	080175f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}

0800ba00 <E131Bridge::SendDiscoveryPacket()>:
 800ba00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ba02:	f242 710f 	movw	r1, #9999	; 0x270f
 800ba06:	68c2      	ldr	r2, [r0, #12]
 800ba08:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800ba0c:	4604      	mov	r4, r0
 800ba0e:	1ad3      	subs	r3, r2, r3
 800ba10:	428b      	cmp	r3, r1
 800ba12:	d924      	bls.n	800ba5e <E131Bridge::SendDiscoveryPacket()+0x5e>
 800ba14:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800ba18:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800ba1c:	b1ab      	cbz	r3, 800ba4a <E131Bridge::SendDiscoveryPacket()+0x4a>
 800ba1e:	2500      	movs	r5, #0
 800ba20:	462e      	mov	r6, r5
 800ba22:	2300      	movs	r3, #0
 800ba24:	4629      	mov	r1, r5
 800ba26:	4620      	mov	r0, r4
 800ba28:	f10d 020e 	add.w	r2, sp, #14
 800ba2c:	f7ff fc0a 	bl	800b244 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800ba30:	b140      	cbz	r0, 800ba44 <E131Bridge::SendDiscoveryPacket()+0x44>
 800ba32:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ba36:	69e2      	ldr	r2, [r4, #28]
 800ba38:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800ba3c:	ba5b      	rev16	r3, r3
 800ba3e:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800ba42:	3601      	adds	r6, #1
 800ba44:	3501      	adds	r5, #1
 800ba46:	2d20      	cmp	r5, #32
 800ba48:	d1eb      	bne.n	800ba22 <E131Bridge::SendDiscoveryPacket()+0x22>
 800ba4a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800ba4e:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800ba52:	9300      	str	r3, [sp, #0]
 800ba54:	69e1      	ldr	r1, [r4, #28]
 800ba56:	6a23      	ldr	r3, [r4, #32]
 800ba58:	7820      	ldrb	r0, [r4, #0]
 800ba5a:	f005 f863 	bl	8010b24 <udp_send>
 800ba5e:	b004      	add	sp, #16
 800ba60:	bd70      	pop	{r4, r5, r6, pc}

0800ba62 <memcpy.isra.0>:
 800ba62:	3801      	subs	r0, #1
 800ba64:	440a      	add	r2, r1
 800ba66:	4291      	cmp	r1, r2
 800ba68:	d100      	bne.n	800ba6c <memcpy.isra.0+0xa>
 800ba6a:	4770      	bx	lr
 800ba6c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ba70:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ba74:	e7f7      	b.n	800ba66 <memcpy.isra.0+0x4>
	...

0800ba78 <E131Bridge::FillDataPacket()>:
 800ba78:	b570      	push	{r4, r5, r6, lr}
 800ba7a:	2400      	movs	r4, #0
 800ba7c:	2610      	movs	r6, #16
 800ba7e:	4605      	mov	r5, r0
 800ba80:	6980      	ldr	r0, [r0, #24]
 800ba82:	220c      	movs	r2, #12
 800ba84:	7046      	strb	r6, [r0, #1]
 800ba86:	7004      	strb	r4, [r0, #0]
 800ba88:	7084      	strb	r4, [r0, #2]
 800ba8a:	70c4      	strb	r4, [r0, #3]
 800ba8c:	491c      	ldr	r1, [pc, #112]	; (800bb00 <E131Bridge::FillDataPacket()+0x88>)
 800ba8e:	3004      	adds	r0, #4
 800ba90:	f7ff ffe7 	bl	800ba62 <memcpy.isra.0>
 800ba94:	2304      	movs	r3, #4
 800ba96:	4632      	mov	r2, r6
 800ba98:	2602      	movs	r6, #2
 800ba9a:	69a8      	ldr	r0, [r5, #24]
 800ba9c:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800baa0:	7543      	strb	r3, [r0, #21]
 800baa2:	7484      	strb	r4, [r0, #18]
 800baa4:	74c4      	strb	r4, [r0, #19]
 800baa6:	7504      	strb	r4, [r0, #20]
 800baa8:	3016      	adds	r0, #22
 800baaa:	f7ff ffda 	bl	800ba62 <memcpy.isra.0>
 800baae:	69a8      	ldr	r0, [r5, #24]
 800bab0:	2240      	movs	r2, #64	; 0x40
 800bab2:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800bab6:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800baba:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800babe:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800bac2:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800bac6:	302c      	adds	r0, #44	; 0x2c
 800bac8:	f7ff ffcb 	bl	800ba62 <memcpy.isra.0>
 800bacc:	22a1      	movs	r2, #161	; 0xa1
 800bace:	69ab      	ldr	r3, [r5, #24]
 800bad0:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800bad4:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800bad8:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800badc:	69ab      	ldr	r3, [r5, #24]
 800bade:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800bae2:	69ab      	ldr	r3, [r5, #24]
 800bae4:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800bae8:	2201      	movs	r2, #1
 800baea:	69ab      	ldr	r3, [r5, #24]
 800baec:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800baf0:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800baf4:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800baf8:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800bafc:	bd70      	pop	{r4, r5, r6, pc}
 800bafe:	bf00      	nop
 800bb00:	080175f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}

0800bb04 <E131Bridge::HandleDmxIn()>:
 800bb04:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bb08:	4604      	mov	r4, r0
 800bb0a:	4605      	mov	r5, r0
 800bb0c:	2600      	movs	r6, #0
 800bb0e:	4f3b      	ldr	r7, [pc, #236]	; (800bbfc <E131Bridge::HandleDmxIn()+0xf8>)
 800bb10:	f895 3d96 	ldrb.w	r3, [r5, #3478]	; 0xd96
 800bb14:	2b00      	cmp	r3, #0
 800bb16:	d058      	beq.n	800bbca <E131Bridge::HandleDmxIn()+0xc6>
 800bb18:	6960      	ldr	r0, [r4, #20]
 800bb1a:	4631      	mov	r1, r6
 800bb1c:	6803      	ldr	r3, [r0, #0]
 800bb1e:	aa02      	add	r2, sp, #8
 800bb20:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800bb24:	ab03      	add	r3, sp, #12
 800bb26:	47c0      	blx	r8
 800bb28:	4601      	mov	r1, r0
 800bb2a:	2800      	cmp	r0, #0
 800bb2c:	d055      	beq.n	800bbda <E131Bridge::HandleDmxIn()+0xd6>
 800bb2e:	9a02      	ldr	r2, [sp, #8]
 800bb30:	69a0      	ldr	r0, [r4, #24]
 800bb32:	b293      	uxth	r3, r2
 800bb34:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800bb38:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800bb3c:	fa9c fc9c 	rev16.w	ip, ip
 800bb40:	f8a0 c010 	strh.w	ip, [r0, #16]
 800bb44:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800bb48:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800bb4c:	fa9c fc9c 	rev16.w	ip, ip
 800bb50:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800bb54:	f895 cd9d 	ldrb.w	ip, [r5, #3485]	; 0xd9d
 800bb58:	330a      	adds	r3, #10
 800bb5a:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800bb5e:	f895 cd9c 	ldrb.w	ip, [r5, #3484]	; 0xd9c
 800bb62:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800bb66:	f10c 0001 	add.w	r0, ip, #1
 800bb6a:	f885 0d9c 	strb.w	r0, [r5, #3484]	; 0xd9c
 800bb6e:	69a0      	ldr	r0, [r4, #24]
 800bb70:	ba5b      	rev16	r3, r3
 800bb72:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800bb76:	f8b5 cd94 	ldrh.w	ip, [r5, #3476]	; 0xd94
 800bb7a:	69a0      	ldr	r0, [r4, #24]
 800bb7c:	fa9c fc9c 	rev16.w	ip, ip
 800bb80:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800bb84:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800bb88:	307d      	adds	r0, #125	; 0x7d
 800bb8a:	f7ff ff6a 	bl	800ba62 <memcpy.isra.0>
 800bb8e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800bb92:	69a1      	ldr	r1, [r4, #24]
 800bb94:	ba53      	rev16	r3, r2
 800bb96:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800bb9a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800bb9e:	327d      	adds	r2, #125	; 0x7d
 800bba0:	9300      	str	r3, [sp, #0]
 800bba2:	f8d5 3d98 	ldr.w	r3, [r5, #3480]	; 0xd98
 800bba6:	b292      	uxth	r2, r2
 800bba8:	7820      	ldrb	r0, [r4, #0]
 800bbaa:	f004 ffbb 	bl	8010b24 <udp_send>
 800bbae:	2301      	movs	r3, #1
 800bbb0:	683a      	ldr	r2, [r7, #0]
 800bbb2:	40b3      	lsls	r3, r6
 800bbb4:	ea33 0102 	bics.w	r1, r3, r2
 800bbb8:	d007      	beq.n	800bbca <E131Bridge::HandleDmxIn()+0xc6>
 800bbba:	4313      	orrs	r3, r2
 800bbbc:	603b      	str	r3, [r7, #0]
 800bbbe:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800bbc2:	f043 0301 	orr.w	r3, r3, #1
 800bbc6:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800bbca:	3601      	adds	r6, #1
 800bbcc:	2e20      	cmp	r6, #32
 800bbce:	f105 050c 	add.w	r5, r5, #12
 800bbd2:	d19d      	bne.n	800bb10 <E131Bridge::HandleDmxIn()+0xc>
 800bbd4:	b004      	add	sp, #16
 800bbd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbda:	9b03      	ldr	r3, [sp, #12]
 800bbdc:	2b00      	cmp	r3, #0
 800bbde:	d1f4      	bne.n	800bbca <E131Bridge::HandleDmxIn()+0xc6>
 800bbe0:	2201      	movs	r2, #1
 800bbe2:	683b      	ldr	r3, [r7, #0]
 800bbe4:	40b2      	lsls	r2, r6
 800bbe6:	ea23 0302 	bic.w	r3, r3, r2
 800bbea:	603b      	str	r3, [r7, #0]
 800bbec:	2b00      	cmp	r3, #0
 800bbee:	d1ec      	bne.n	800bbca <E131Bridge::HandleDmxIn()+0xc6>
 800bbf0:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800bbf4:	f023 0301 	bic.w	r3, r3, #1
 800bbf8:	e7e5      	b.n	800bbc6 <E131Bridge::HandleDmxIn()+0xc2>
 800bbfa:	bf00      	nop
 800bbfc:	2000c740 	andcs	ip, r0, r0, asr #14

0800bc00 <E131Bridge::HandleSynchronization()>:
 800bc00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc04:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800bc08:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800bc0c:	ba5b      	rev16	r3, r3
 800bc0e:	b29b      	uxth	r3, r3
 800bc10:	429a      	cmp	r2, r3
 800bc12:	4604      	mov	r4, r0
 800bc14:	d00a      	beq.n	800bc2c <E131Bridge::HandleSynchronization()+0x2c>
 800bc16:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800bc1a:	429a      	cmp	r2, r3
 800bc1c:	d006      	beq.n	800bc2c <E131Bridge::HandleSynchronization()+0x2c>
 800bc1e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bc22:	4b23      	ldr	r3, [pc, #140]	; (800bcb0 <E131Bridge::HandleSynchronization()+0xb0>)
 800bc24:	2102      	movs	r1, #2
 800bc26:	6818      	ldr	r0, [r3, #0]
 800bc28:	f007 bef2 	b.w	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800bc2c:	2500      	movs	r5, #0
 800bc2e:	4627      	mov	r7, r4
 800bc30:	46a9      	mov	r9, r5
 800bc32:	68e3      	ldr	r3, [r4, #12]
 800bc34:	4e1f      	ldr	r6, [pc, #124]	; (800bcb4 <E131Bridge::HandleSynchronization()+0xb4>)
 800bc36:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800bcb8 <E131Bridge::HandleSynchronization()+0xb8>
 800bc3a:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800bc3e:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800bc42:	b323      	cbz	r3, 800bc8e <E131Bridge::HandleSynchronization()+0x8e>
 800bc44:	f8d8 3000 	ldr.w	r3, [r8]
 800bc48:	6860      	ldr	r0, [r4, #4]
 800bc4a:	07da      	lsls	r2, r3, #31
 800bc4c:	bf5c      	itt	pl
 800bc4e:	2301      	movpl	r3, #1
 800bc50:	f8c8 3000 	strpl.w	r3, [r8]
 800bc54:	6803      	ldr	r3, [r0, #0]
 800bc56:	4629      	mov	r1, r5
 800bc58:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800bc5c:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800bc60:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800bc64:	47d0      	blx	sl
 800bc66:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800bc6a:	b93b      	cbnz	r3, 800bc7c <E131Bridge::HandleSynchronization()+0x7c>
 800bc6c:	6860      	ldr	r0, [r4, #4]
 800bc6e:	4629      	mov	r1, r5
 800bc70:	6803      	ldr	r3, [r0, #0]
 800bc72:	689b      	ldr	r3, [r3, #8]
 800bc74:	4798      	blx	r3
 800bc76:	2301      	movs	r3, #1
 800bc78:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800bc7c:	f8d8 3000 	ldr.w	r3, [r8]
 800bc80:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800bc84:	07db      	lsls	r3, r3, #31
 800bc86:	bf5c      	itt	pl
 800bc88:	2301      	movpl	r3, #1
 800bc8a:	f8c8 3000 	strpl.w	r3, [r8]
 800bc8e:	3501      	adds	r5, #1
 800bc90:	2d20      	cmp	r5, #32
 800bc92:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800bc96:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800bc9a:	d1d0      	bne.n	800bc3e <E131Bridge::HandleSynchronization()+0x3e>
 800bc9c:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800bc9e:	b120      	cbz	r0, 800bcaa <E131Bridge::HandleSynchronization()+0xaa>
 800bca0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bca4:	6803      	ldr	r3, [r0, #0]
 800bca6:	689b      	ldr	r3, [r3, #8]
 800bca8:	4718      	bx	r3
 800bcaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bcae:	bf00      	nop
 800bcb0:	2001d978 	andcs	sp, r1, r8, ror r9
 800bcb4:	200006bc 			; <UNDEFINED> instruction: 0x200006bc
 800bcb8:	200006b8 			; <UNDEFINED> instruction: 0x200006b8

0800bcbc <E131Bridge::Print()>:
 800bcbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bcc0:	2500      	movs	r5, #0
 800bcc2:	4604      	mov	r4, r0
 800bcc4:	b08c      	sub	sp, #48	; 0x30
 800bcc6:	a902      	add	r1, sp, #8
 800bcc8:	3024      	adds	r0, #36	; 0x24
 800bcca:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bcce:	f001 fe81 	bl	800d9d4 <uuid_unparse>
 800bcd2:	482c      	ldr	r0, [pc, #176]	; (800bd84 <E131Bridge::Print()+0xc8>)
 800bcd4:	f7fd fc9c 	bl	8009610 <printf>
 800bcd8:	4b2b      	ldr	r3, [pc, #172]	; (800bd88 <E131Bridge::Print()+0xcc>)
 800bcda:	482c      	ldr	r0, [pc, #176]	; (800bd8c <E131Bridge::Print()+0xd0>)
 800bcdc:	7819      	ldrb	r1, [r3, #0]
 800bcde:	785a      	ldrb	r2, [r3, #1]
 800bce0:	f7fd fc96 	bl	8009610 <printf>
 800bce4:	482a      	ldr	r0, [pc, #168]	; (800bd90 <E131Bridge::Print()+0xd4>)
 800bce6:	a902      	add	r1, sp, #8
 800bce8:	f7fd fc92 	bl	8009610 <printf>
 800bcec:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800bcf0:	b303      	cbz	r3, 800bd34 <E131Bridge::Print()+0x78>
 800bcf2:	4828      	ldr	r0, [pc, #160]	; (800bd94 <E131Bridge::Print()+0xd8>)
 800bcf4:	f7fd fc8c 	bl	8009610 <printf>
 800bcf8:	4e27      	ldr	r6, [pc, #156]	; (800bd98 <E131Bridge::Print()+0xdc>)
 800bcfa:	4f28      	ldr	r7, [pc, #160]	; (800bd9c <E131Bridge::Print()+0xe0>)
 800bcfc:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800bda0 <E131Bridge::Print()+0xe4>
 800bd00:	2301      	movs	r3, #1
 800bd02:	4629      	mov	r1, r5
 800bd04:	4620      	mov	r0, r4
 800bd06:	f10d 0206 	add.w	r2, sp, #6
 800bd0a:	f7ff fa9b 	bl	800b244 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800bd0e:	b170      	cbz	r0, 800bd2e <E131Bridge::Print()+0x72>
 800bd10:	2344      	movs	r3, #68	; 0x44
 800bd12:	436b      	muls	r3, r5
 800bd14:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800bd18:	58d3      	ldr	r3, [r2, r3]
 800bd1a:	4629      	mov	r1, r5
 800bd1c:	2b00      	cmp	r3, #0
 800bd1e:	bf0c      	ite	eq
 800bd20:	4633      	moveq	r3, r6
 800bd22:	463b      	movne	r3, r7
 800bd24:	4640      	mov	r0, r8
 800bd26:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bd2a:	f7fd fc71 	bl	8009610 <printf>
 800bd2e:	3501      	adds	r5, #1
 800bd30:	2d20      	cmp	r5, #32
 800bd32:	d1e5      	bne.n	800bd00 <E131Bridge::Print()+0x44>
 800bd34:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800bd38:	b1d3      	cbz	r3, 800bd70 <E131Bridge::Print()+0xb4>
 800bd3a:	481a      	ldr	r0, [pc, #104]	; (800bda4 <E131Bridge::Print()+0xe8>)
 800bd3c:	f7fd fc68 	bl	8009610 <printf>
 800bd40:	2500      	movs	r5, #0
 800bd42:	4e19      	ldr	r6, [pc, #100]	; (800bda8 <E131Bridge::Print()+0xec>)
 800bd44:	2300      	movs	r3, #0
 800bd46:	4629      	mov	r1, r5
 800bd48:	4620      	mov	r0, r4
 800bd4a:	f10d 0206 	add.w	r2, sp, #6
 800bd4e:	f7ff fa79 	bl	800b244 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800bd52:	b150      	cbz	r0, 800bd6a <E131Bridge::Print()+0xae>
 800bd54:	230c      	movs	r3, #12
 800bd56:	436b      	muls	r3, r5
 800bd58:	f604 529d 	addw	r2, r4, #3485	; 0xd9d
 800bd5c:	5cd3      	ldrb	r3, [r2, r3]
 800bd5e:	4629      	mov	r1, r5
 800bd60:	4630      	mov	r0, r6
 800bd62:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bd66:	f7fd fc53 	bl	8009610 <printf>
 800bd6a:	3501      	adds	r5, #1
 800bd6c:	2d20      	cmp	r5, #32
 800bd6e:	d1e9      	bne.n	800bd44 <E131Bridge::Print()+0x88>
 800bd70:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800bd74:	b113      	cbz	r3, 800bd7c <E131Bridge::Print()+0xc0>
 800bd76:	480d      	ldr	r0, [pc, #52]	; (800bdac <E131Bridge::Print()+0xf0>)
 800bd78:	f7fd fc4a 	bl	8009610 <printf>
 800bd7c:	b00c      	add	sp, #48	; 0x30
 800bd7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd82:	bf00      	nop
 800bd84:	0801747b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, sl, ip, sp, lr}
 800bd88:	08017601 	stmdaeq	r1, {r0, r9, sl, ip, sp, lr}
 800bd8c:	08017483 	stmdaeq	r1, {r0, r1, r7, sl, ip, sp, lr}
 800bd90:	08017496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip, sp, lr}
 800bd94:	080174a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, ip, sp, lr}
 800bd98:	08017473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 800bd9c:	08017477 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, ip, sp, lr}
 800bda0:	080174af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, sl, ip, sp, lr}
 800bda4:	080174ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, ip, sp, lr}
 800bda8:	080174d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, sl, ip, sp, lr}
 800bdac:	080174f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, ip, sp, lr}

0800bdb0 <memcmp>:
 800bdb0:	4402      	add	r2, r0
 800bdb2:	4290      	cmp	r0, r2
 800bdb4:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800bdb8:	d106      	bne.n	800bdc8 <memcmp+0x18>
 800bdba:	2000      	movs	r0, #0
 800bdbc:	4770      	bx	lr
 800bdbe:	3001      	adds	r0, #1
 800bdc0:	4290      	cmp	r0, r2
 800bdc2:	d102      	bne.n	800bdca <memcmp+0x1a>
 800bdc4:	2000      	movs	r0, #0
 800bdc6:	e006      	b.n	800bdd6 <memcmp+0x26>
 800bdc8:	b510      	push	{r4, lr}
 800bdca:	7803      	ldrb	r3, [r0, #0]
 800bdcc:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800bdd0:	42a3      	cmp	r3, r4
 800bdd2:	d0f4      	beq.n	800bdbe <memcmp+0xe>
 800bdd4:	1b18      	subs	r0, r3, r4
 800bdd6:	bd10      	pop	{r4, pc}

0800bdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800bdd8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bdda:	88c6      	ldrh	r6, [r0, #6]
 800bddc:	8885      	ldrh	r5, [r0, #4]
 800bdde:	42ae      	cmp	r6, r5
 800bde0:	d216      	bcs.n	800be10 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800bde2:	4604      	mov	r4, r0
 800bde4:	6800      	ldr	r0, [r0, #0]
 800bde6:	1bad      	subs	r5, r5, r6
 800bde8:	4430      	add	r0, r6
 800bdea:	7a26      	ldrb	r6, [r4, #8]
 800bdec:	b923      	cbnz	r3, 800bdf8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800bdee:	b926      	cbnz	r6, 800bdfa <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800bdf0:	9200      	str	r2, [sp, #0]
 800bdf2:	460b      	mov	r3, r1
 800bdf4:	4a09      	ldr	r2, [pc, #36]	; (800be1c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800bdf6:	e003      	b.n	800be00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800bdf8:	b166      	cbz	r6, 800be14 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800bdfa:	460b      	mov	r3, r1
 800bdfc:	9200      	str	r2, [sp, #0]
 800bdfe:	4a08      	ldr	r2, [pc, #32]	; (800be20 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800be00:	4629      	mov	r1, r5
 800be02:	f7fd fc2d 	bl	8009660 <snprintf>
 800be06:	4285      	cmp	r5, r0
 800be08:	bfa2      	ittt	ge
 800be0a:	88e3      	ldrhge	r3, [r4, #6]
 800be0c:	181b      	addge	r3, r3, r0
 800be0e:	80e3      	strhge	r3, [r4, #6]
 800be10:	b002      	add	sp, #8
 800be12:	bd70      	pop	{r4, r5, r6, pc}
 800be14:	9200      	str	r2, [sp, #0]
 800be16:	460b      	mov	r3, r1
 800be18:	4a02      	ldr	r2, [pc, #8]	; (800be24 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800be1a:	e7f1      	b.n	800be00 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800be1c:	080166c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, sp, lr}
 800be20:	080166b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr}
 800be24:	080166c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, lr}

0800be28 <E131Params::E131Params(E131ParamsStore*)>:
 800be28:	b510      	push	{r4, lr}
 800be2a:	2219      	movs	r2, #25
 800be2c:	4604      	mov	r4, r0
 800be2e:	f840 1b04 	str.w	r1, [r0], #4
 800be32:	2100      	movs	r1, #0
 800be34:	f007 ffa2 	bl	8013d7c <memset>
 800be38:	2201      	movs	r2, #1
 800be3a:	72e2      	strb	r2, [r4, #11]
 800be3c:	2202      	movs	r2, #2
 800be3e:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800be42:	f8a4 200d 	strh.w	r2, [r4, #13]
 800be46:	2203      	movs	r2, #3
 800be48:	f8c4 301f 	str.w	r3, [r4, #31]
 800be4c:	2300      	movs	r3, #0
 800be4e:	2155      	movs	r1, #85	; 0x55
 800be50:	f8a4 200f 	strh.w	r2, [r4, #15]
 800be54:	2204      	movs	r2, #4
 800be56:	7323      	strb	r3, [r4, #12]
 800be58:	77a3      	strb	r3, [r4, #30]
 800be5a:	4b04      	ldr	r3, [pc, #16]	; (800be6c <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800be5c:	7761      	strb	r1, [r4, #29]
 800be5e:	6819      	ldr	r1, [r3, #0]
 800be60:	f8a4 2011 	strh.w	r2, [r4, #17]
 800be64:	b901      	cbnz	r1, 800be68 <E131Params::E131Params(E131ParamsStore*)+0x40>
 800be66:	601a      	str	r2, [r3, #0]
 800be68:	4620      	mov	r0, r4
 800be6a:	bd10      	pop	{r4, pc}
 800be6c:	2000c744 	andcs	ip, r0, r4, asr #14

0800be70 <E131Params::Load()>:
 800be70:	b508      	push	{r3, lr}
 800be72:	2300      	movs	r3, #0
 800be74:	4601      	mov	r1, r0
 800be76:	6043      	str	r3, [r0, #4]
 800be78:	6800      	ldr	r0, [r0, #0]
 800be7a:	b120      	cbz	r0, 800be86 <E131Params::Load()+0x16>
 800be7c:	6803      	ldr	r3, [r0, #0]
 800be7e:	3104      	adds	r1, #4
 800be80:	68db      	ldr	r3, [r3, #12]
 800be82:	4798      	blx	r3
 800be84:	2001      	movs	r0, #1
 800be86:	bd08      	pop	{r3, pc}

0800be88 <E131Params::Load(char const*, unsigned int)>:
 800be88:	6803      	ldr	r3, [r0, #0]
 800be8a:	b1d3      	cbz	r3, 800bec2 <E131Params::Load(char const*, unsigned int)+0x3a>
 800be8c:	2300      	movs	r3, #0
 800be8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800be90:	460d      	mov	r5, r1
 800be92:	4616      	mov	r6, r2
 800be94:	4604      	mov	r4, r0
 800be96:	6043      	str	r3, [r0, #4]
 800be98:	4602      	mov	r2, r0
 800be9a:	490a      	ldr	r1, [pc, #40]	; (800bec4 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800be9c:	4668      	mov	r0, sp
 800be9e:	f007 f8e9 	bl	8013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bea2:	4632      	mov	r2, r6
 800bea4:	4629      	mov	r1, r5
 800bea6:	4668      	mov	r0, sp
 800bea8:	f007 f8e8 	bl	801307c <ReadConfigFile::Read(char const*, unsigned int)>
 800beac:	4621      	mov	r1, r4
 800beae:	f851 0b04 	ldr.w	r0, [r1], #4
 800beb2:	6803      	ldr	r3, [r0, #0]
 800beb4:	689b      	ldr	r3, [r3, #8]
 800beb6:	4798      	blx	r3
 800beb8:	4668      	mov	r0, sp
 800beba:	f007 f8de 	bl	801307a <ReadConfigFile::~ReadConfigFile()>
 800bebe:	b002      	add	sp, #8
 800bec0:	bd70      	pop	{r4, r5, r6, pc}
 800bec2:	4770      	bx	lr
 800bec4:	0800c15d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, lr, pc}

0800bec8 <E131Params::callbackFunction(char const*)>:
 800bec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800becc:	460e      	mov	r6, r1
 800bece:	2708      	movs	r7, #8
 800bed0:	b087      	sub	sp, #28
 800bed2:	4604      	mov	r4, r0
 800bed4:	4997      	ldr	r1, [pc, #604]	; (800c134 <E131Params::callbackFunction(char const*)+0x26c>)
 800bed6:	4630      	mov	r0, r6
 800bed8:	ab01      	add	r3, sp, #4
 800beda:	eb0d 0207 	add.w	r2, sp, r7
 800bede:	9701      	str	r7, [sp, #4]
 800bee0:	f007 f900 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bee4:	bb68      	cbnz	r0, 800bf42 <E131Params::callbackFunction(char const*)+0x7a>
 800bee6:	2204      	movs	r2, #4
 800bee8:	4993      	ldr	r1, [pc, #588]	; (800c138 <E131Params::callbackFunction(char const*)+0x270>)
 800beea:	eb0d 0007 	add.w	r0, sp, r7
 800beee:	f7ff ff5f 	bl	800bdb0 <memcmp>
 800bef2:	6865      	ldr	r5, [r4, #4]
 800bef4:	b1a0      	cbz	r0, 800bf20 <E131Params::callbackFunction(char const*)+0x58>
 800bef6:	2203      	movs	r2, #3
 800bef8:	4990      	ldr	r1, [pc, #576]	; (800c13c <E131Params::callbackFunction(char const*)+0x274>)
 800befa:	eb0d 0007 	add.w	r0, sp, r7
 800befe:	f7ff ff57 	bl	800bdb0 <memcmp>
 800bf02:	b1b0      	cbz	r0, 800bf32 <E131Params::callbackFunction(char const*)+0x6a>
 800bf04:	2202      	movs	r2, #2
 800bf06:	498e      	ldr	r1, [pc, #568]	; (800c140 <E131Params::callbackFunction(char const*)+0x278>)
 800bf08:	eb0d 0007 	add.w	r0, sp, r7
 800bf0c:	f7ff ff50 	bl	800bdb0 <memcmp>
 800bf10:	b198      	cbz	r0, 800bf3a <E131Params::callbackFunction(char const*)+0x72>
 800bf12:	463a      	mov	r2, r7
 800bf14:	498b      	ldr	r1, [pc, #556]	; (800c144 <E131Params::callbackFunction(char const*)+0x27c>)
 800bf16:	eb0d 0007 	add.w	r0, sp, r7
 800bf1a:	f7ff ff49 	bl	800bdb0 <memcmp>
 800bf1e:	b170      	cbz	r0, 800bf3e <E131Params::callbackFunction(char const*)+0x76>
 800bf20:	2300      	movs	r3, #0
 800bf22:	f025 0501 	bic.w	r5, r5, #1
 800bf26:	6065      	str	r5, [r4, #4]
 800bf28:	f8a4 3009 	strh.w	r3, [r4, #9]
 800bf2c:	b007      	add	sp, #28
 800bf2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf32:	2301      	movs	r3, #1
 800bf34:	f045 0501 	orr.w	r5, r5, #1
 800bf38:	e7f5      	b.n	800bf26 <E131Params::callbackFunction(char const*)+0x5e>
 800bf3a:	2302      	movs	r3, #2
 800bf3c:	e7fa      	b.n	800bf34 <E131Params::callbackFunction(char const*)+0x6c>
 800bf3e:	2303      	movs	r3, #3
 800bf40:	e7f8      	b.n	800bf34 <E131Params::callbackFunction(char const*)+0x6c>
 800bf42:	2500      	movs	r5, #0
 800bf44:	f8df 9200 	ldr.w	r9, [pc, #512]	; 800c148 <E131Params::callbackFunction(char const*)+0x280>
 800bf48:	f8df 8200 	ldr.w	r8, [pc, #512]	; 800c14c <E131Params::callbackFunction(char const*)+0x284>
 800bf4c:	f8df a200 	ldr.w	sl, [pc, #512]	; 800c150 <E131Params::callbackFunction(char const*)+0x288>
 800bf50:	f8df b200 	ldr.w	fp, [pc, #512]	; 800c154 <E131Params::callbackFunction(char const*)+0x28c>
 800bf54:	4649      	mov	r1, r9
 800bf56:	4630      	mov	r0, r6
 800bf58:	f10d 0202 	add.w	r2, sp, #2
 800bf5c:	f007 f97f 	bl	801325e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bf60:	b9d8      	cbnz	r0, 800bf9a <E131Params::callbackFunction(char const*)+0xd2>
 800bf62:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800bf66:	2310      	movs	r3, #16
 800bf68:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800bf6c:	6861      	ldr	r1, [r4, #4]
 800bf6e:	1e42      	subs	r2, r0, #1
 800bf70:	b292      	uxth	r2, r2
 800bf72:	42b2      	cmp	r2, r6
 800bf74:	fa03 f305 	lsl.w	r3, r3, r5
 800bf78:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800bf7c:	d907      	bls.n	800bf8e <E131Params::callbackFunction(char const*)+0xc6>
 800bf7e:	3501      	adds	r5, #1
 800bf80:	4422      	add	r2, r4
 800bf82:	ea21 0103 	bic.w	r1, r1, r3
 800bf86:	f8a2 500b 	strh.w	r5, [r2, #11]
 800bf8a:	6061      	str	r1, [r4, #4]
 800bf8c:	e7ce      	b.n	800bf2c <E131Params::callbackFunction(char const*)+0x64>
 800bf8e:	4422      	add	r2, r4
 800bf90:	f8a2 000b 	strh.w	r0, [r2, #11]
 800bf94:	430b      	orrs	r3, r1
 800bf96:	6063      	str	r3, [r4, #4]
 800bf98:	e7c8      	b.n	800bf2c <E131Params::callbackFunction(char const*)+0x64>
 800bf9a:	2712      	movs	r7, #18
 800bf9c:	2303      	movs	r3, #3
 800bf9e:	436f      	muls	r7, r5
 800bfa0:	9301      	str	r3, [sp, #4]
 800bfa2:	4630      	mov	r0, r6
 800bfa4:	ab01      	add	r3, sp, #4
 800bfa6:	aa02      	add	r2, sp, #8
 800bfa8:	eb0a 0107 	add.w	r1, sl, r7
 800bfac:	f007 f89a 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bfb0:	bb00      	cbnz	r0, 800bff4 <E131Params::callbackFunction(char const*)+0x12c>
 800bfb2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800bfb6:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800bfba:	40ab      	lsls	r3, r5
 800bfbc:	f041 0120 	orr.w	r1, r1, #32
 800bfc0:	296c      	cmp	r1, #108	; 0x6c
 800bfc2:	6862      	ldr	r2, [r4, #4]
 800bfc4:	4425      	add	r5, r4
 800bfc6:	d10f      	bne.n	800bfe8 <E131Params::callbackFunction(char const*)+0x120>
 800bfc8:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800bfcc:	f041 0120 	orr.w	r1, r1, #32
 800bfd0:	2974      	cmp	r1, #116	; 0x74
 800bfd2:	d109      	bne.n	800bfe8 <E131Params::callbackFunction(char const*)+0x120>
 800bfd4:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800bfd8:	f041 0120 	orr.w	r1, r1, #32
 800bfdc:	2970      	cmp	r1, #112	; 0x70
 800bfde:	d103      	bne.n	800bfe8 <E131Params::callbackFunction(char const*)+0x120>
 800bfe0:	2101      	movs	r1, #1
 800bfe2:	7529      	strb	r1, [r5, #20]
 800bfe4:	4313      	orrs	r3, r2
 800bfe6:	e7d6      	b.n	800bf96 <E131Params::callbackFunction(char const*)+0xce>
 800bfe8:	2100      	movs	r1, #0
 800bfea:	ea22 0203 	bic.w	r2, r2, r3
 800bfee:	7529      	strb	r1, [r5, #20]
 800bff0:	6062      	str	r2, [r4, #4]
 800bff2:	e79b      	b.n	800bf2c <E131Params::callbackFunction(char const*)+0x64>
 800bff4:	2307      	movs	r3, #7
 800bff6:	4630      	mov	r0, r6
 800bff8:	9301      	str	r3, [sp, #4]
 800bffa:	aa02      	add	r2, sp, #8
 800bffc:	ab01      	add	r3, sp, #4
 800bffe:	eb0b 0107 	add.w	r1, fp, r7
 800c002:	f007 f86f 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c006:	2800      	cmp	r0, #0
 800c008:	d15e      	bne.n	800c0c8 <E131Params::callbackFunction(char const*)+0x200>
 800c00a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800c00e:	f043 0320 	orr.w	r3, r3, #32
 800c012:	2b69      	cmp	r3, #105	; 0x69
 800c014:	d123      	bne.n	800c05e <E131Params::callbackFunction(char const*)+0x196>
 800c016:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800c01a:	f043 0320 	orr.w	r3, r3, #32
 800c01e:	2b6e      	cmp	r3, #110	; 0x6e
 800c020:	d146      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c022:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800c026:	f043 0320 	orr.w	r3, r3, #32
 800c02a:	2b70      	cmp	r3, #112	; 0x70
 800c02c:	d140      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c02e:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800c032:	f043 0320 	orr.w	r3, r3, #32
 800c036:	2b75      	cmp	r3, #117	; 0x75
 800c038:	d13a      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c03a:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c03e:	f043 0320 	orr.w	r3, r3, #32
 800c042:	3b74      	subs	r3, #116	; 0x74
 800c044:	bf18      	it	ne
 800c046:	2301      	movne	r3, #1
 800c048:	2103      	movs	r1, #3
 800c04a:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800c04e:	006d      	lsls	r5, r5, #1
 800c050:	40a9      	lsls	r1, r5
 800c052:	ea22 0201 	bic.w	r2, r2, r1
 800c056:	bb6b      	cbnz	r3, 800c0b4 <E131Params::callbackFunction(char const*)+0x1ec>
 800c058:	f8a4 201d 	strh.w	r2, [r4, #29]
 800c05c:	e766      	b.n	800bf2c <E131Params::callbackFunction(char const*)+0x64>
 800c05e:	2b64      	cmp	r3, #100	; 0x64
 800c060:	d126      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c062:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800c066:	f043 0320 	orr.w	r3, r3, #32
 800c06a:	2b69      	cmp	r3, #105	; 0x69
 800c06c:	d120      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c06e:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800c072:	f043 0320 	orr.w	r3, r3, #32
 800c076:	2b73      	cmp	r3, #115	; 0x73
 800c078:	d11a      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c07a:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800c07e:	f043 0320 	orr.w	r3, r3, #32
 800c082:	2b61      	cmp	r3, #97	; 0x61
 800c084:	d114      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c086:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800c08a:	f043 0320 	orr.w	r3, r3, #32
 800c08e:	2b62      	cmp	r3, #98	; 0x62
 800c090:	d10e      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c092:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800c096:	f043 0320 	orr.w	r3, r3, #32
 800c09a:	2b6c      	cmp	r3, #108	; 0x6c
 800c09c:	d108      	bne.n	800c0b0 <E131Params::callbackFunction(char const*)+0x1e8>
 800c09e:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800c0a2:	f043 0320 	orr.w	r3, r3, #32
 800c0a6:	2b65      	cmp	r3, #101	; 0x65
 800c0a8:	bf14      	ite	ne
 800c0aa:	2301      	movne	r3, #1
 800c0ac:	2302      	moveq	r3, #2
 800c0ae:	e7cb      	b.n	800c048 <E131Params::callbackFunction(char const*)+0x180>
 800c0b0:	2301      	movs	r3, #1
 800c0b2:	e7c9      	b.n	800c048 <E131Params::callbackFunction(char const*)+0x180>
 800c0b4:	2b02      	cmp	r3, #2
 800c0b6:	bf15      	itete	ne
 800c0b8:	2301      	movne	r3, #1
 800c0ba:	40ab      	lsleq	r3, r5
 800c0bc:	fa03 f505 	lslne.w	r5, r3, r5
 800c0c0:	431a      	orreq	r2, r3
 800c0c2:	bf18      	it	ne
 800c0c4:	432a      	orrne	r2, r5
 800c0c6:	e7c7      	b.n	800c058 <E131Params::callbackFunction(char const*)+0x190>
 800c0c8:	4641      	mov	r1, r8
 800c0ca:	4630      	mov	r0, r6
 800c0cc:	f10d 0201 	add.w	r2, sp, #1
 800c0d0:	f007 f90c 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c0d4:	b998      	cbnz	r0, 800c0fe <E131Params::callbackFunction(char const*)+0x236>
 800c0d6:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c0da:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800c0de:	40aa      	lsls	r2, r5
 800c0e0:	1e48      	subs	r0, r1, #1
 800c0e2:	b2c0      	uxtb	r0, r0
 800c0e4:	28c7      	cmp	r0, #199	; 0xc7
 800c0e6:	6863      	ldr	r3, [r4, #4]
 800c0e8:	4425      	add	r5, r4
 800c0ea:	d803      	bhi.n	800c0f4 <E131Params::callbackFunction(char const*)+0x22c>
 800c0ec:	2964      	cmp	r1, #100	; 0x64
 800c0ee:	d001      	beq.n	800c0f4 <E131Params::callbackFunction(char const*)+0x22c>
 800c0f0:	77e9      	strb	r1, [r5, #31]
 800c0f2:	e777      	b.n	800bfe4 <E131Params::callbackFunction(char const*)+0x11c>
 800c0f4:	2164      	movs	r1, #100	; 0x64
 800c0f6:	ea23 0302 	bic.w	r3, r3, r2
 800c0fa:	77e9      	strb	r1, [r5, #31]
 800c0fc:	e74b      	b.n	800bf96 <E131Params::callbackFunction(char const*)+0xce>
 800c0fe:	3501      	adds	r5, #1
 800c100:	2d04      	cmp	r5, #4
 800c102:	f109 0910 	add.w	r9, r9, #16
 800c106:	f108 0812 	add.w	r8, r8, #18
 800c10a:	f47f af23 	bne.w	800bf54 <E131Params::callbackFunction(char const*)+0x8c>
 800c10e:	4630      	mov	r0, r6
 800c110:	4911      	ldr	r1, [pc, #68]	; (800c158 <E131Params::callbackFunction(char const*)+0x290>)
 800c112:	f10d 0201 	add.w	r2, sp, #1
 800c116:	f007 f8e9 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c11a:	2800      	cmp	r0, #0
 800c11c:	f47f af06 	bne.w	800bf2c <E131Params::callbackFunction(char const*)+0x64>
 800c120:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800c124:	6863      	ldr	r3, [r4, #4]
 800c126:	b112      	cbz	r2, 800c12e <E131Params::callbackFunction(char const*)+0x266>
 800c128:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800c12c:	e733      	b.n	800bf96 <E131Params::callbackFunction(char const*)+0xce>
 800c12e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800c132:	e730      	b.n	800bf96 <E131Params::callbackFunction(char const*)+0xce>
 800c134:	08018d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp, pc}
 800c138:	0801754d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, ip, sp, lr}
 800c13c:	08017552 	stmdaeq	r1, {r1, r4, r6, r8, sl, ip, sp, lr}
 800c140:	0801682a 	stmdaeq	r1, {r1, r3, r5, fp, sp, lr}
 800c144:	08017556 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, ip, sp, lr}
 800c148:	08018bf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 800c14c:	080175a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, ip, sp, lr}
 800c150:	08018cd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, fp, pc}
 800c154:	08018d5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, fp, pc}
 800c158:	08018d33 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, fp, pc}

0800c15c <E131Params::staticCallbackFunction(void*, char const*)>:
 800c15c:	f7ff beb4 	b.w	800bec8 <E131Params::callbackFunction(char const*)>

0800c160 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800c160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c164:	4604      	mov	r4, r0
 800c166:	4615      	mov	r5, r2
 800c168:	461e      	mov	r6, r3
 800c16a:	b087      	sub	sp, #28
 800c16c:	3004      	adds	r0, #4
 800c16e:	2900      	cmp	r1, #0
 800c170:	d05f      	beq.n	800c232 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800c172:	221f      	movs	r2, #31
 800c174:	f007 fdeb 	bl	8013d4e <memmove>
 800c178:	4633      	mov	r3, r6
 800c17a:	462a      	mov	r2, r5
 800c17c:	4990      	ldr	r1, [pc, #576]	; (800c3c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800c17e:	a803      	add	r0, sp, #12
 800c180:	f006 fed8 	bl	8012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c184:	2500      	movs	r5, #0
 800c186:	4f8f      	ldr	r7, [pc, #572]	; (800c3c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800c188:	4e8f      	ldr	r6, [pc, #572]	; (800c3c8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800c18a:	f8df 8240 	ldr.w	r8, [pc, #576]	; 800c3cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800c18e:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800c3d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>
 800c192:	f8d8 2000 	ldr.w	r2, [r8]
 800c196:	6863      	ldr	r3, [r4, #4]
 800c198:	42aa      	cmp	r2, r5
 800c19a:	d851      	bhi.n	800c240 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800c19c:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800c1a0:	4a8c      	ldr	r2, [pc, #560]	; (800c3d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800c1a2:	f003 0301 	and.w	r3, r3, #1
 800c1a6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800c1aa:	a803      	add	r0, sp, #12
 800c1ac:	498a      	ldr	r1, [pc, #552]	; (800c3d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800c1ae:	f7ff fe13 	bl	800bdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c1b2:	498a      	ldr	r1, [pc, #552]	; (800c3dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800c1b4:	a803      	add	r0, sp, #12
 800c1b6:	f006 ff43 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800c1ba:	2500      	movs	r5, #0
 800c1bc:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800c1c0:	4e87      	ldr	r6, [pc, #540]	; (800c3e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800c1c2:	f8df 9220 	ldr.w	r9, [pc, #544]	; 800c3e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800c1c6:	f8df a220 	ldr.w	sl, [pc, #544]	; 800c3e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>
 800c1ca:	f104 0713 	add.w	r7, r4, #19
 800c1ce:	f8d8 3000 	ldr.w	r3, [r8]
 800c1d2:	42ab      	cmp	r3, r5
 800c1d4:	d87f      	bhi.n	800c2d6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800c1d6:	4985      	ldr	r1, [pc, #532]	; (800c3ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800c1d8:	a803      	add	r0, sp, #12
 800c1da:	f006 ff31 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800c1de:	2700      	movs	r7, #0
 800c1e0:	4e83      	ldr	r6, [pc, #524]	; (800c3f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800c1e2:	f8df a210 	ldr.w	sl, [pc, #528]	; 800c3f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800c1e6:	f8df b210 	ldr.w	fp, [pc, #528]	; 800c3f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800c1ea:	f104 091e 	add.w	r9, r4, #30
 800c1ee:	f8d8 3000 	ldr.w	r3, [r8]
 800c1f2:	42bb      	cmp	r3, r7
 800c1f4:	f200 8083 	bhi.w	800c2fe <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800c1f8:	4980      	ldr	r1, [pc, #512]	; (800c3fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800c1fa:	a803      	add	r0, sp, #12
 800c1fc:	f006 ff20 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800c200:	6863      	ldr	r3, [r4, #4]
 800c202:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c206:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800c20a:	42a2      	cmp	r2, r4
 800c20c:	f080 80b8 	bcs.w	800c380 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800c210:	9803      	ldr	r0, [sp, #12]
 800c212:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800c216:	4410      	add	r0, r2
 800c218:	eba4 0402 	sub.w	r4, r4, r2
 800c21c:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c220:	f040 809d 	bne.w	800c35e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800c224:	2a00      	cmp	r2, #0
 800c226:	f040 809b 	bne.w	800c360 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800c22a:	9200      	str	r2, [sp, #0]
 800c22c:	4b74      	ldr	r3, [pc, #464]	; (800c400 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c22e:	4a72      	ldr	r2, [pc, #456]	; (800c3f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800c230:	e09c      	b.n	800c36c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800c232:	6823      	ldr	r3, [r4, #0]
 800c234:	4601      	mov	r1, r0
 800c236:	681a      	ldr	r2, [r3, #0]
 800c238:	4618      	mov	r0, r3
 800c23a:	68d2      	ldr	r2, [r2, #12]
 800c23c:	4790      	blx	r2
 800c23e:	e79b      	b.n	800c178 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800c240:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800c244:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800c248:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800c24c:	45dc      	cmp	ip, fp
 800c24e:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800c252:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800c256:	d221      	bcs.n	800c29c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800c258:	2110      	movs	r1, #16
 800c25a:	9803      	ldr	r0, [sp, #12]
 800c25c:	40a9      	lsls	r1, r5
 800c25e:	ea31 0303 	bics.w	r3, r1, r3
 800c262:	4460      	add	r0, ip
 800c264:	ebab 0b0c 	sub.w	fp, fp, ip
 800c268:	f89d c014 	ldrb.w	ip, [sp, #20]
 800c26c:	d006      	beq.n	800c27c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800c26e:	f1bc 0f00 	cmp.w	ip, #0
 800c272:	d106      	bne.n	800c282 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800c274:	9200      	str	r2, [sp, #0]
 800c276:	4633      	mov	r3, r6
 800c278:	4a5f      	ldr	r2, [pc, #380]	; (800c3f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800c27a:	e005      	b.n	800c288 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800c27c:	f1bc 0f00 	cmp.w	ip, #0
 800c280:	d023      	beq.n	800c2ca <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800c282:	9200      	str	r2, [sp, #0]
 800c284:	4633      	mov	r3, r6
 800c286:	464a      	mov	r2, r9
 800c288:	4659      	mov	r1, fp
 800c28a:	f7fd f9e9 	bl	8009660 <snprintf>
 800c28e:	4583      	cmp	fp, r0
 800c290:	bfa2      	ittt	ge
 800c292:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c296:	18c0      	addge	r0, r0, r3
 800c298:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c29c:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800c2a0:	fa23 f30a 	lsr.w	r3, r3, sl
 800c2a4:	f013 0303 	ands.w	r3, r3, #3
 800c2a8:	d013      	beq.n	800c2d2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800c2aa:	4a56      	ldr	r2, [pc, #344]	; (800c404 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800c2ac:	4956      	ldr	r1, [pc, #344]	; (800c408 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800c2ae:	2b02      	cmp	r3, #2
 800c2b0:	bf08      	it	eq
 800c2b2:	460a      	moveq	r2, r1
 800c2b4:	3b01      	subs	r3, #1
 800c2b6:	4639      	mov	r1, r7
 800c2b8:	bf18      	it	ne
 800c2ba:	2301      	movne	r3, #1
 800c2bc:	a803      	add	r0, sp, #12
 800c2be:	f7ff fd8b 	bl	800bdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c2c2:	3501      	adds	r5, #1
 800c2c4:	3712      	adds	r7, #18
 800c2c6:	3610      	adds	r6, #16
 800c2c8:	e763      	b.n	800c192 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800c2ca:	9200      	str	r2, [sp, #0]
 800c2cc:	4633      	mov	r3, r6
 800c2ce:	4a49      	ldr	r2, [pc, #292]	; (800c3f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c2d0:	e7da      	b.n	800c288 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800c2d2:	4a4e      	ldr	r2, [pc, #312]	; (800c40c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800c2d4:	e7ee      	b.n	800c2b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800c2d6:	6861      	ldr	r1, [r4, #4]
 800c2d8:	fa0b f305 	lsl.w	r3, fp, r5
 800c2dc:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800c2e0:	438b      	bics	r3, r1
 800c2e2:	bf0c      	ite	eq
 800c2e4:	2301      	moveq	r3, #1
 800c2e6:	2300      	movne	r3, #0
 800c2e8:	4631      	mov	r1, r6
 800c2ea:	2a00      	cmp	r2, #0
 800c2ec:	bf0c      	ite	eq
 800c2ee:	464a      	moveq	r2, r9
 800c2f0:	4652      	movne	r2, sl
 800c2f2:	a803      	add	r0, sp, #12
 800c2f4:	f7ff fd70 	bl	800bdd8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c2f8:	3501      	adds	r5, #1
 800c2fa:	3612      	adds	r6, #18
 800c2fc:	e767      	b.n	800c1ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800c2fe:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800c302:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c306:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800c30a:	42a9      	cmp	r1, r5
 800c30c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800c310:	d21e      	bcs.n	800c350 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800c312:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c316:	9803      	ldr	r0, [sp, #12]
 800c318:	40ba      	lsls	r2, r7
 800c31a:	ea32 0c0c 	bics.w	ip, r2, ip
 800c31e:	4408      	add	r0, r1
 800c320:	eba5 0501 	sub.w	r5, r5, r1
 800c324:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800c328:	d004      	beq.n	800c334 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800c32a:	b921      	cbnz	r1, 800c336 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800c32c:	9300      	str	r3, [sp, #0]
 800c32e:	465a      	mov	r2, fp
 800c330:	4633      	mov	r3, r6
 800c332:	e003      	b.n	800c33c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800c334:	b179      	cbz	r1, 800c356 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800c336:	9300      	str	r3, [sp, #0]
 800c338:	4633      	mov	r3, r6
 800c33a:	4a25      	ldr	r2, [pc, #148]	; (800c3d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800c33c:	4629      	mov	r1, r5
 800c33e:	f7fd f98f 	bl	8009660 <snprintf>
 800c342:	4285      	cmp	r5, r0
 800c344:	bfa2      	ittt	ge
 800c346:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c34a:	18c0      	addge	r0, r0, r3
 800c34c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c350:	3701      	adds	r7, #1
 800c352:	3612      	adds	r6, #18
 800c354:	e74b      	b.n	800c1ee <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800c356:	9300      	str	r3, [sp, #0]
 800c358:	4652      	mov	r2, sl
 800c35a:	4633      	mov	r3, r6
 800c35c:	e7ee      	b.n	800c33c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800c35e:	b34a      	cbz	r2, 800c3b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800c360:	3b00      	subs	r3, #0
 800c362:	bf18      	it	ne
 800c364:	2301      	movne	r3, #1
 800c366:	4a1a      	ldr	r2, [pc, #104]	; (800c3d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800c368:	9300      	str	r3, [sp, #0]
 800c36a:	4b25      	ldr	r3, [pc, #148]	; (800c400 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c36c:	4621      	mov	r1, r4
 800c36e:	f7fd f977 	bl	8009660 <snprintf>
 800c372:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c376:	4284      	cmp	r4, r0
 800c378:	bfa4      	itt	ge
 800c37a:	181b      	addge	r3, r3, r0
 800c37c:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800c380:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c384:	b17b      	cbz	r3, 800c3a6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800c386:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c38a:	9b03      	ldr	r3, [sp, #12]
 800c38c:	4413      	add	r3, r2
 800c38e:	227d      	movs	r2, #125	; 0x7d
 800c390:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c394:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c398:	9903      	ldr	r1, [sp, #12]
 800c39a:	54ca      	strb	r2, [r1, r3]
 800c39c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c3a0:	3301      	adds	r3, #1
 800c3a2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c3a6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c3aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c3ac:	601a      	str	r2, [r3, #0]
 800c3ae:	b007      	add	sp, #28
 800c3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c3b4:	2301      	movs	r3, #1
 800c3b6:	4a0f      	ldr	r2, [pc, #60]	; (800c3f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800c3b8:	9300      	str	r3, [sp, #0]
 800c3ba:	4b11      	ldr	r3, [pc, #68]	; (800c400 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800c3bc:	e7d6      	b.n	800c36c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800c3be:	bf00      	nop
 800c3c0:	080175ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, ip, sp, lr}
 800c3c4:	08018d5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, fp, pc}
 800c3c8:	08018bf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 800c3cc:	2000c744 	andcs	ip, r0, r4, asr #14
 800c3d0:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800c3d4:	08017594 	stmdaeq	r1, {r2, r4, r7, r8, sl, ip, sp, lr}
 800c3d8:	08018d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp, pc}
 800c3dc:	0801757c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, sp, lr}
 800c3e0:	08018cd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, fp, pc}
 800c3e4:	08017578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, sp, lr}
 800c3e8:	08017574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, ip, sp, lr}
 800c3ec:	08017587 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, ip, sp, lr}
 800c3f0:	080175a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, ip, sp, lr}
 800c3f4:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}
 800c3f8:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 800c3fc:	08016471 	stmdaeq	r1, {r0, r4, r5, r6, sl, sp, lr}
 800c400:	08018d33 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, fp, pc}
 800c404:	08017565 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, ip, sp, lr}
 800c408:	0801756c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, ip, sp, lr}
 800c40c:	0801755f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}

0800c410 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800c410:	b513      	push	{r0, r1, r4, lr}
 800c412:	6804      	ldr	r4, [r0, #0]
 800c414:	b914      	cbnz	r4, 800c41c <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800c416:	601c      	str	r4, [r3, #0]
 800c418:	b002      	add	sp, #8
 800c41a:	bd10      	pop	{r4, pc}
 800c41c:	9300      	str	r3, [sp, #0]
 800c41e:	4613      	mov	r3, r2
 800c420:	460a      	mov	r2, r1
 800c422:	2100      	movs	r1, #0
 800c424:	f7ff fe9c 	bl	800c160 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800c428:	e7f6      	b.n	800c418 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800c42c <E131Params::Set(unsigned int)>:
 800c42c:	1e4b      	subs	r3, r1, #1
 800c42e:	2b1e      	cmp	r3, #30
 800c430:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c434:	d807      	bhi.n	800c446 <E131Params::Set(unsigned int)+0x1a>
 800c436:	4a26      	ldr	r2, [pc, #152]	; (800c4d0 <E131Params::Set(unsigned int)+0xa4>)
 800c438:	f1c1 0320 	rsb	r3, r1, #32
 800c43c:	6814      	ldr	r4, [r2, #0]
 800c43e:	42a3      	cmp	r3, r4
 800c440:	bf94      	ite	ls
 800c442:	6013      	strls	r3, [r2, #0]
 800c444:	6014      	strhi	r4, [r2, #0]
 800c446:	6843      	ldr	r3, [r0, #4]
 800c448:	b1eb      	cbz	r3, 800c486 <E131Params::Set(unsigned int)+0x5a>
 800c44a:	4b22      	ldr	r3, [pc, #136]	; (800c4d4 <E131Params::Set(unsigned int)+0xa8>)
 800c44c:	2244      	movs	r2, #68	; 0x44
 800c44e:	681c      	ldr	r4, [r3, #0]
 800c450:	4b1f      	ldr	r3, [pc, #124]	; (800c4d0 <E131Params::Set(unsigned int)+0xa4>)
 800c452:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800c456:	681f      	ldr	r7, [r3, #0]
 800c458:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800c45c:	2300      	movs	r3, #0
 800c45e:	f04f 090c 	mov.w	r9, #12
 800c462:	fb02 4201 	mla	r2, r2, r1, r4
 800c466:	f100 0514 	add.w	r5, r0, #20
 800c46a:	f604 589d 	addw	r8, r4, #3485	; 0xd9d
 800c46e:	429f      	cmp	r7, r3
 800c470:	6846      	ldr	r6, [r0, #4]
 800c472:	d10a      	bne.n	800c48a <E131Params::Set(unsigned int)+0x5e>
 800c474:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800c478:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800c47c:	04b3      	lsls	r3, r6, #18
 800c47e:	bf44      	itt	mi
 800c480:	2301      	movmi	r3, #1
 800c482:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800c486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c48a:	eb03 0a01 	add.w	sl, r3, r1
 800c48e:	f1ba 0f1f 	cmp.w	sl, #31
 800c492:	d8ef      	bhi.n	800c474 <E131Params::Set(unsigned int)+0x48>
 800c494:	fa0c fa03 	lsl.w	sl, ip, r3
 800c498:	ea3a 0a06 	bics.w	sl, sl, r6
 800c49c:	bf04      	itt	eq
 800c49e:	f895 a000 	ldrbeq.w	sl, [r5]
 800c4a2:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800c4a6:	fa0e fa03 	lsl.w	sl, lr, r3
 800c4aa:	ea3a 0a06 	bics.w	sl, sl, r6
 800c4ae:	d10a      	bne.n	800c4c6 <E131Params::Set(unsigned int)+0x9a>
 800c4b0:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800c4b4:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800c4b8:	b2f6      	uxtb	r6, r6
 800c4ba:	2ec7      	cmp	r6, #199	; 0xc7
 800c4bc:	bf9c      	itt	ls
 800c4be:	fb09 f603 	mulls.w	r6, r9, r3
 800c4c2:	f808 a006 	strbls.w	sl, [r8, r6]
 800c4c6:	3301      	adds	r3, #1
 800c4c8:	3501      	adds	r5, #1
 800c4ca:	3244      	adds	r2, #68	; 0x44
 800c4cc:	e7cf      	b.n	800c46e <E131Params::Set(unsigned int)+0x42>
 800c4ce:	bf00      	nop
 800c4d0:	2000c744 	andcs	ip, r0, r4, asr #14
 800c4d4:	2000c73c 	andcs	ip, r0, ip, lsr r7

0800c4d8 <E131Params::Dump()>:
 800c4d8:	4770      	bx	lr

0800c4da <LLRPDevice::~LLRPDevice()>:
 800c4da:	4770      	bx	lr

0800c4dc <LLRPDevice::CopyUID(unsigned char*)>:
 800c4dc:	4770      	bx	lr

0800c4de <LLRPDevice::CopyCID(unsigned char*)>:
 800c4de:	4770      	bx	lr

0800c4e0 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800c4e0:	2000      	movs	r0, #0
 800c4e2:	4770      	bx	lr

0800c4e4 <LLRPDevice::~LLRPDevice()>:
 800c4e4:	b510      	push	{r4, lr}
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	f007 fb6e 	bl	8013bc8 <operator delete(void*)>
 800c4ec:	4620      	mov	r0, r4
 800c4ee:	bd10      	pop	{r4, pc}

0800c4f0 <memcpy.isra.0>:
 800c4f0:	3801      	subs	r0, #1
 800c4f2:	440a      	add	r2, r1
 800c4f4:	4291      	cmp	r1, r2
 800c4f6:	d100      	bne.n	800c4fa <memcpy.isra.0+0xa>
 800c4f8:	4770      	bx	lr
 800c4fa:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c4fe:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c502:	e7f7      	b.n	800c4f4 <memcpy.isra.0+0x4>

0800c504 <LLRPDevice::LLRPDevice()>:
 800c504:	b513      	push	{r0, r1, r4, lr}
 800c506:	4604      	mov	r4, r0
 800c508:	4b09      	ldr	r3, [pc, #36]	; (800c530 <LLRPDevice::LLRPDevice()+0x2c>)
 800c50a:	a901      	add	r1, sp, #4
 800c50c:	6003      	str	r3, [r0, #0]
 800c50e:	4809      	ldr	r0, [pc, #36]	; (800c534 <LLRPDevice::LLRPDevice()+0x30>)
 800c510:	f007 fb62 	bl	8013bd8 <inet_aton>
 800c514:	9a01      	ldr	r2, [sp, #4]
 800c516:	4b08      	ldr	r3, [pc, #32]	; (800c538 <LLRPDevice::LLRPDevice()+0x34>)
 800c518:	a901      	add	r1, sp, #4
 800c51a:	4808      	ldr	r0, [pc, #32]	; (800c53c <LLRPDevice::LLRPDevice()+0x38>)
 800c51c:	601a      	str	r2, [r3, #0]
 800c51e:	f007 fb5b 	bl	8013bd8 <inet_aton>
 800c522:	4620      	mov	r0, r4
 800c524:	4b06      	ldr	r3, [pc, #24]	; (800c540 <LLRPDevice::LLRPDevice()+0x3c>)
 800c526:	9a01      	ldr	r2, [sp, #4]
 800c528:	601a      	str	r2, [r3, #0]
 800c52a:	b002      	add	sp, #8
 800c52c:	bd10      	pop	{r4, pc}
 800c52e:	bf00      	nop
 800c530:	080176b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sl, ip, sp, lr}
 800c534:	08017603 	stmdaeq	r1, {r0, r1, r9, sl, ip, sp, lr}
 800c538:	2000c74c 	andcs	ip, r0, ip, asr #14
 800c53c:	08017613 	stmdaeq	r1, {r0, r1, r4, r9, sl, ip, sp, lr}
 800c540:	2000c750 	andcs	ip, r0, r0, asr r7

0800c544 <LLRPDevice::HandleRequestMessage()>:
 800c544:	b570      	push	{r4, r5, r6, lr}
 800c546:	4b23      	ldr	r3, [pc, #140]	; (800c5d4 <LLRPDevice::HandleRequestMessage()+0x90>)
 800c548:	b086      	sub	sp, #24
 800c54a:	681c      	ldr	r4, [r3, #0]
 800c54c:	4605      	mov	r5, r0
 800c54e:	f104 0617 	add.w	r6, r4, #23
 800c552:	2210      	movs	r2, #16
 800c554:	4631      	mov	r1, r6
 800c556:	a802      	add	r0, sp, #8
 800c558:	f7ff ffca 	bl	800c4f0 <memcpy.isra.0>
 800c55c:	2343      	movs	r3, #67	; 0x43
 800c55e:	74a3      	strb	r3, [r4, #18]
 800c560:	682b      	ldr	r3, [r5, #0]
 800c562:	4631      	mov	r1, r6
 800c564:	4628      	mov	r0, r5
 800c566:	68db      	ldr	r3, [r3, #12]
 800c568:	4798      	blx	r3
 800c56a:	232c      	movs	r3, #44	; 0x2c
 800c56c:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c570:	2300      	movs	r3, #0
 800c572:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800c576:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800c57a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c57e:	2302      	movs	r3, #2
 800c580:	2210      	movs	r2, #16
 800c582:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800c586:	a902      	add	r1, sp, #8
 800c588:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c58c:	f7ff ffb0 	bl	800c4f0 <memcpy.isra.0>
 800c590:	2311      	movs	r3, #17
 800c592:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c596:	2301      	movs	r3, #1
 800c598:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800c59c:	682b      	ldr	r3, [r5, #0]
 800c59e:	4628      	mov	r0, r5
 800c5a0:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800c5a4:	689b      	ldr	r3, [r3, #8]
 800c5a6:	4798      	blx	r3
 800c5a8:	4b0b      	ldr	r3, [pc, #44]	; (800c5d8 <LLRPDevice::HandleRequestMessage()+0x94>)
 800c5aa:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800c5ae:	6818      	ldr	r0, [r3, #0]
 800c5b0:	f004 ff86 	bl	80114c0 <Network::MacAddressCopyTo(unsigned char*)>
 800c5b4:	23ff      	movs	r3, #255	; 0xff
 800c5b6:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800c5ba:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c5be:	4807      	ldr	r0, [pc, #28]	; (800c5dc <LLRPDevice::HandleRequestMessage()+0x98>)
 800c5c0:	9300      	str	r3, [sp, #0]
 800c5c2:	4b07      	ldr	r3, [pc, #28]	; (800c5e0 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800c5c4:	2253      	movs	r2, #83	; 0x53
 800c5c6:	4621      	mov	r1, r4
 800c5c8:	681b      	ldr	r3, [r3, #0]
 800c5ca:	7800      	ldrb	r0, [r0, #0]
 800c5cc:	f004 faaa 	bl	8010b24 <udp_send>
 800c5d0:	b006      	add	sp, #24
 800c5d2:	bd70      	pop	{r4, r5, r6, pc}
 800c5d4:	2000c754 	andcs	ip, r0, r4, asr r7
 800c5d8:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800c5dc:	20000000 	andcs	r0, r0, r0
 800c5e0:	2000c750 	andcs	ip, r0, r0, asr r7

0800c5e4 <LLRPDevice::HandleRdmCommand()>:
 800c5e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c5e8:	4b22      	ldr	r3, [pc, #136]	; (800c674 <LLRPDevice::HandleRdmCommand()+0x90>)
 800c5ea:	b086      	sub	sp, #24
 800c5ec:	681c      	ldr	r4, [r3, #0]
 800c5ee:	6803      	ldr	r3, [r0, #0]
 800c5f0:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800c5f4:	4649      	mov	r1, r9
 800c5f6:	691b      	ldr	r3, [r3, #16]
 800c5f8:	4607      	mov	r7, r0
 800c5fa:	4798      	blx	r3
 800c5fc:	4605      	mov	r5, r0
 800c5fe:	2800      	cmp	r0, #0
 800c600:	d034      	beq.n	800c66c <LLRPDevice::HandleRdmCommand()+0x88>
 800c602:	7803      	ldrb	r3, [r0, #0]
 800c604:	2bcc      	cmp	r3, #204	; 0xcc
 800c606:	d131      	bne.n	800c66c <LLRPDevice::HandleRdmCommand()+0x88>
 800c608:	f104 0a17 	add.w	sl, r4, #23
 800c60c:	2210      	movs	r2, #16
 800c60e:	4651      	mov	r1, sl
 800c610:	a802      	add	r0, sp, #8
 800c612:	f7ff ff6d 	bl	800c4f0 <memcpy.isra.0>
 800c616:	78ae      	ldrb	r6, [r5, #2]
 800c618:	4651      	mov	r1, sl
 800c61a:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800c61e:	fa5f f888 	uxtb.w	r8, r8
 800c622:	f884 8012 	strb.w	r8, [r4, #18]
 800c626:	683b      	ldr	r3, [r7, #0]
 800c628:	4638      	mov	r0, r7
 800c62a:	68db      	ldr	r3, [r3, #12]
 800c62c:	4798      	blx	r3
 800c62e:	f106 0320 	add.w	r3, r6, #32
 800c632:	2210      	movs	r2, #16
 800c634:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c638:	a902      	add	r1, sp, #8
 800c63a:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c63e:	f7ff ff57 	bl	800c4f0 <memcpy.isra.0>
 800c642:	1d73      	adds	r3, r6, #5
 800c644:	1c72      	adds	r2, r6, #1
 800c646:	4648      	mov	r0, r9
 800c648:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c64c:	b2d2      	uxtb	r2, r2
 800c64e:	1c69      	adds	r1, r5, #1
 800c650:	f7ff ff4e 	bl	800c4f0 <memcpy.isra.0>
 800c654:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c658:	4807      	ldr	r0, [pc, #28]	; (800c678 <LLRPDevice::HandleRdmCommand()+0x94>)
 800c65a:	9300      	str	r3, [sp, #0]
 800c65c:	4b07      	ldr	r3, [pc, #28]	; (800c67c <LLRPDevice::HandleRdmCommand()+0x98>)
 800c65e:	4621      	mov	r1, r4
 800c660:	681b      	ldr	r3, [r3, #0]
 800c662:	7800      	ldrb	r0, [r0, #0]
 800c664:	f108 0210 	add.w	r2, r8, #16
 800c668:	f004 fa5c 	bl	8010b24 <udp_send>
 800c66c:	b006      	add	sp, #24
 800c66e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c672:	bf00      	nop
 800c674:	2000c754 	andcs	ip, r0, r4, asr r7
 800c678:	20000000 	andcs	r0, r0, r0
 800c67c:	2000c750 	andcs	ip, r0, r0, asr r7

0800c680 <LLRPDevice::Run()>:
 800c680:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c682:	4604      	mov	r4, r0
 800c684:	4d0e      	ldr	r5, [pc, #56]	; (800c6c0 <LLRPDevice::Run()+0x40>)
 800c686:	480f      	ldr	r0, [pc, #60]	; (800c6c4 <LLRPDevice::Run()+0x44>)
 800c688:	4629      	mov	r1, r5
 800c68a:	4a0f      	ldr	r2, [pc, #60]	; (800c6c8 <LLRPDevice::Run()+0x48>)
 800c68c:	7800      	ldrb	r0, [r0, #0]
 800c68e:	f10d 0306 	add.w	r3, sp, #6
 800c692:	f004 fa21 	bl	8010ad8 <udp_recv2>
 800c696:	2841      	cmp	r0, #65	; 0x41
 800c698:	d908      	bls.n	800c6ac <LLRPDevice::Run()+0x2c>
 800c69a:	682b      	ldr	r3, [r5, #0]
 800c69c:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800c6a0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c6a4:	ba1a      	rev	r2, r3
 800c6a6:	d003      	beq.n	800c6b0 <LLRPDevice::Run()+0x30>
 800c6a8:	2a03      	cmp	r2, #3
 800c6aa:	d005      	beq.n	800c6b8 <LLRPDevice::Run()+0x38>
 800c6ac:	b003      	add	sp, #12
 800c6ae:	bd30      	pop	{r4, r5, pc}
 800c6b0:	4620      	mov	r0, r4
 800c6b2:	f7ff ff47 	bl	800c544 <LLRPDevice::HandleRequestMessage()>
 800c6b6:	e7f9      	b.n	800c6ac <LLRPDevice::Run()+0x2c>
 800c6b8:	4620      	mov	r0, r4
 800c6ba:	f7ff ff93 	bl	800c5e4 <LLRPDevice::HandleRdmCommand()>
 800c6be:	e7f5      	b.n	800c6ac <LLRPDevice::Run()+0x2c>
 800c6c0:	2000c754 	andcs	ip, r0, r4, asr r7
 800c6c4:	20000000 	andcs	r0, r0, r0
 800c6c8:	2000c748 	andcs	ip, r0, r8, asr #14

0800c6cc <LLRPDevice::Print()>:
 800c6cc:	b507      	push	{r0, r1, r2, lr}
 800c6ce:	4811      	ldr	r0, [pc, #68]	; (800c714 <LLRPDevice::Print()+0x48>)
 800c6d0:	f7fc ff9e 	bl	8009610 <printf>
 800c6d4:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800c6d8:	480f      	ldr	r0, [pc, #60]	; (800c718 <LLRPDevice::Print()+0x4c>)
 800c6da:	f7fc ff99 	bl	8009610 <printf>
 800c6de:	4b0f      	ldr	r3, [pc, #60]	; (800c71c <LLRPDevice::Print()+0x50>)
 800c6e0:	480f      	ldr	r0, [pc, #60]	; (800c720 <LLRPDevice::Print()+0x54>)
 800c6e2:	6819      	ldr	r1, [r3, #0]
 800c6e4:	0e0b      	lsrs	r3, r1, #24
 800c6e6:	9300      	str	r3, [sp, #0]
 800c6e8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c6ec:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c6f0:	b2c9      	uxtb	r1, r1
 800c6f2:	f7fc ff8d 	bl	8009610 <printf>
 800c6f6:	4b0b      	ldr	r3, [pc, #44]	; (800c724 <LLRPDevice::Print()+0x58>)
 800c6f8:	480b      	ldr	r0, [pc, #44]	; (800c728 <LLRPDevice::Print()+0x5c>)
 800c6fa:	6819      	ldr	r1, [r3, #0]
 800c6fc:	0e0b      	lsrs	r3, r1, #24
 800c6fe:	9300      	str	r3, [sp, #0]
 800c700:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c704:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c708:	b2c9      	uxtb	r1, r1
 800c70a:	f7fc ff81 	bl	8009610 <printf>
 800c70e:	b003      	add	sp, #12
 800c710:	f85d fb04 	ldr.w	pc, [sp], #4
 800c714:	08017623 	stmdaeq	r1, {r0, r1, r5, r9, sl, ip, sp, lr}
 800c718:	0801763e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, sl, ip, sp, lr}
 800c71c:	2000c74c 	andcs	ip, r0, ip, asr #14
 800c720:	0801765c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, ip, sp, lr}
 800c724:	2000c750 	andcs	ip, r0, r0, asr r7
 800c728:	08017683 	stmdaeq	r1, {r0, r1, r7, r9, sl, ip, sp, lr}

0800c72c <RDMNetDevice::Print()>:
 800c72c:	2300      	movs	r3, #0
 800c72e:	b510      	push	{r4, lr}
 800c730:	4604      	mov	r4, r0
 800c732:	b08a      	sub	sp, #40	; 0x28
 800c734:	4669      	mov	r1, sp
 800c736:	480a      	ldr	r0, [pc, #40]	; (800c760 <RDMNetDevice::Print()+0x34>)
 800c738:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c73c:	f001 f94a 	bl	800d9d4 <uuid_unparse>
 800c740:	4808      	ldr	r0, [pc, #32]	; (800c764 <RDMNetDevice::Print()+0x38>)
 800c742:	f7fc ff65 	bl	8009610 <printf>
 800c746:	4669      	mov	r1, sp
 800c748:	4807      	ldr	r0, [pc, #28]	; (800c768 <RDMNetDevice::Print()+0x3c>)
 800c74a:	f7fc ff61 	bl	8009610 <printf>
 800c74e:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800c752:	f7ff ffbb 	bl	800c6cc <LLRPDevice::Print()>
 800c756:	4620      	mov	r0, r4
 800c758:	f000 fa38 	bl	800cbcc <RDMDeviceResponder::Print()>
 800c75c:	b00a      	add	sp, #40	; 0x28
 800c75e:	bd10      	pop	{r4, pc}
 800c760:	2000c857 	andcs	ip, r0, r7, asr r8
 800c764:	080176fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800c768:	08017702 	stmdaeq	r1, {r1, r8, r9, sl, ip, sp, lr}

0800c76c <RDMSensors::RDMSensors()>:
 800c76c:	2200      	movs	r2, #0
 800c76e:	6002      	str	r2, [r0, #0]
 800c770:	7102      	strb	r2, [r0, #4]
 800c772:	4a01      	ldr	r2, [pc, #4]	; (800c778 <RDMSensors::RDMSensors()+0xc>)
 800c774:	6010      	str	r0, [r2, #0]
 800c776:	4770      	bx	lr
 800c778:	2000c868 	andcs	ip, r0, r8, ror #16

0800c77c <RDMSensors::~RDMSensors()>:
 800c77c:	b570      	push	{r4, r5, r6, lr}
 800c77e:	2500      	movs	r5, #0
 800c780:	4604      	mov	r4, r0
 800c782:	462e      	mov	r6, r5
 800c784:	7923      	ldrb	r3, [r4, #4]
 800c786:	6820      	ldr	r0, [r4, #0]
 800c788:	42ab      	cmp	r3, r5
 800c78a:	d804      	bhi.n	800c796 <RDMSensors::~RDMSensors()+0x1a>
 800c78c:	b108      	cbz	r0, 800c792 <RDMSensors::~RDMSensors()+0x16>
 800c78e:	f007 fa1d 	bl	8013bcc <operator delete[](void*)>
 800c792:	4620      	mov	r0, r4
 800c794:	bd70      	pop	{r4, r5, r6, pc}
 800c796:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c79a:	b128      	cbz	r0, 800c7a8 <RDMSensors::~RDMSensors()+0x2c>
 800c79c:	6803      	ldr	r3, [r0, #0]
 800c79e:	685b      	ldr	r3, [r3, #4]
 800c7a0:	4798      	blx	r3
 800c7a2:	6823      	ldr	r3, [r4, #0]
 800c7a4:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800c7a8:	3501      	adds	r5, #1
 800c7aa:	e7eb      	b.n	800c784 <RDMSensors::~RDMSensors()+0x8>

0800c7ac <RDMSubDevices::RDMSubDevices()>:
 800c7ac:	2200      	movs	r2, #0
 800c7ae:	6002      	str	r2, [r0, #0]
 800c7b0:	8082      	strh	r2, [r0, #4]
 800c7b2:	4a01      	ldr	r2, [pc, #4]	; (800c7b8 <RDMSubDevices::RDMSubDevices()+0xc>)
 800c7b4:	6010      	str	r0, [r2, #0]
 800c7b6:	4770      	bx	lr
 800c7b8:	2000c86c 	andcs	ip, r0, ip, ror #16

0800c7bc <RDMSubDevices::~RDMSubDevices()>:
 800c7bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c7be:	2500      	movs	r5, #0
 800c7c0:	4604      	mov	r4, r0
 800c7c2:	462e      	mov	r6, r5
 800c7c4:	88a3      	ldrh	r3, [r4, #4]
 800c7c6:	6820      	ldr	r0, [r4, #0]
 800c7c8:	42ab      	cmp	r3, r5
 800c7ca:	d804      	bhi.n	800c7d6 <RDMSubDevices::~RDMSubDevices()+0x1a>
 800c7cc:	b108      	cbz	r0, 800c7d2 <RDMSubDevices::~RDMSubDevices()+0x16>
 800c7ce:	f007 f9fd 	bl	8013bcc <operator delete[](void*)>
 800c7d2:	4620      	mov	r0, r4
 800c7d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c7d6:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c7da:	00af      	lsls	r7, r5, #2
 800c7dc:	b110      	cbz	r0, 800c7e4 <RDMSubDevices::~RDMSubDevices()+0x28>
 800c7de:	6803      	ldr	r3, [r0, #0]
 800c7e0:	685b      	ldr	r3, [r3, #4]
 800c7e2:	4798      	blx	r3
 800c7e4:	6823      	ldr	r3, [r4, #0]
 800c7e6:	3501      	adds	r5, #1
 800c7e8:	51de      	str	r6, [r3, r7]
 800c7ea:	e7eb      	b.n	800c7c4 <RDMSubDevices::~RDMSubDevices()+0x8>

0800c7ec <RDMSubDevices::GetInfo(unsigned short)>:
 800c7ec:	6803      	ldr	r3, [r0, #0]
 800c7ee:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800c7f2:	3901      	subs	r1, #1
 800c7f4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800c7f8:	3010      	adds	r0, #16
 800c7fa:	4770      	bx	lr

0800c7fc <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800c7fc:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800c800:	6800      	ldr	r0, [r0, #0]
 800c802:	3b01      	subs	r3, #1
 800c804:	4611      	mov	r1, r2
 800c806:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800c80a:	f000 b82f 	b.w	800c86c <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800c80e <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800c80e:	b410      	push	{r4}
 800c810:	460c      	mov	r4, r1
 800c812:	6800      	ldr	r0, [r0, #0]
 800c814:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800c818:	3c01      	subs	r4, #1
 800c81a:	4611      	mov	r1, r2
 800c81c:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c820:	461a      	mov	r2, r3
 800c822:	bc10      	pop	{r4}
 800c824:	f000 b837 	b.w	800c896 <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800c828 <RDMSubDevices::GetFactoryDefaults()>:
 800c828:	b538      	push	{r3, r4, r5, lr}
 800c82a:	4605      	mov	r5, r0
 800c82c:	2400      	movs	r4, #0
 800c82e:	88ab      	ldrh	r3, [r5, #4]
 800c830:	42a3      	cmp	r3, r4
 800c832:	d801      	bhi.n	800c838 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800c834:	2001      	movs	r0, #1
 800c836:	e009      	b.n	800c84c <RDMSubDevices::GetFactoryDefaults()+0x24>
 800c838:	682b      	ldr	r3, [r5, #0]
 800c83a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c83e:	b908      	cbnz	r0, 800c844 <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800c840:	3401      	adds	r4, #1
 800c842:	e7f4      	b.n	800c82e <RDMSubDevices::GetFactoryDefaults()+0x6>
 800c844:	f000 f85c 	bl	800c900 <RDMSubDevice::GetFactoryDefaults()>
 800c848:	2800      	cmp	r0, #0
 800c84a:	d1f9      	bne.n	800c840 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800c84c:	bd38      	pop	{r3, r4, r5, pc}

0800c84e <RDMSubDevices::SetFactoryDefaults()>:
 800c84e:	b538      	push	{r3, r4, r5, lr}
 800c850:	4605      	mov	r5, r0
 800c852:	2400      	movs	r4, #0
 800c854:	88ab      	ldrh	r3, [r5, #4]
 800c856:	42a3      	cmp	r3, r4
 800c858:	d800      	bhi.n	800c85c <RDMSubDevices::SetFactoryDefaults()+0xe>
 800c85a:	bd38      	pop	{r3, r4, r5, pc}
 800c85c:	682b      	ldr	r3, [r5, #0]
 800c85e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c862:	b108      	cbz	r0, 800c868 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800c864:	f000 f826 	bl	800c8b4 <RDMSubDevice::SetFactoryDefaults()>
 800c868:	3401      	adds	r4, #1
 800c86a:	e7f3      	b.n	800c854 <RDMSubDevices::SetFactoryDefaults()+0x6>

0800c86c <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800c86c:	f100 0316 	add.w	r3, r0, #22
 800c870:	600b      	str	r3, [r1, #0]
 800c872:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c876:	710b      	strb	r3, [r1, #4]
 800c878:	4770      	bx	lr

0800c87a <RDMSubDevice::SetLabel(char const*)>:
 800c87a:	2300      	movs	r3, #0
 800c87c:	b510      	push	{r4, lr}
 800c87e:	f100 0415 	add.w	r4, r0, #21
 800c882:	5cca      	ldrb	r2, [r1, r3]
 800c884:	b122      	cbz	r2, 800c890 <RDMSubDevice::SetLabel(char const*)+0x16>
 800c886:	3301      	adds	r3, #1
 800c888:	2b20      	cmp	r3, #32
 800c88a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c88e:	d1f8      	bne.n	800c882 <RDMSubDevice::SetLabel(char const*)+0x8>
 800c890:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c894:	bd10      	pop	{r4, pc}

0800c896 <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800c896:	2300      	movs	r3, #0
 800c898:	b530      	push	{r4, r5, lr}
 800c89a:	f100 0415 	add.w	r4, r0, #21
 800c89e:	429a      	cmp	r2, r3
 800c8a0:	d905      	bls.n	800c8ae <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800c8a2:	5ccd      	ldrb	r5, [r1, r3]
 800c8a4:	3301      	adds	r3, #1
 800c8a6:	2b20      	cmp	r3, #32
 800c8a8:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c8ac:	d1f7      	bne.n	800c89e <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800c8ae:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c8b2:	bd30      	pop	{r4, r5, pc}

0800c8b4 <RDMSubDevice::SetFactoryDefaults()>:
 800c8b4:	7a03      	ldrb	r3, [r0, #8]
 800c8b6:	b510      	push	{r4, lr}
 800c8b8:	b94b      	cbnz	r3, 800c8ce <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800c8ba:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800c8be:	f7ff ffdc 	bl	800c87a <RDMSubDevice::SetLabel(char const*)>
 800c8c2:	8983      	ldrh	r3, [r0, #12]
 800c8c4:	8243      	strh	r3, [r0, #18]
 800c8c6:	7b83      	ldrb	r3, [r0, #14]
 800c8c8:	7503      	strb	r3, [r0, #20]
 800c8ca:	2301      	movs	r3, #1
 800c8cc:	7203      	strb	r3, [r0, #8]
 800c8ce:	bd10      	pop	{r4, pc}

0800c8d0 <RDMSubDevice::CalculateChecksum()>:
 800c8d0:	4602      	mov	r2, r0
 800c8d2:	b510      	push	{r4, lr}
 800c8d4:	8a43      	ldrh	r3, [r0, #18]
 800c8d6:	7d01      	ldrb	r1, [r0, #20]
 800c8d8:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800c8dc:	440b      	add	r3, r1
 800c8de:	b298      	uxth	r0, r3
 800c8e0:	f102 0315 	add.w	r3, r2, #21
 800c8e4:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800c8e8:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800c8ec:	32eb      	adds	r2, #235	; 0xeb
 800c8ee:	18d1      	adds	r1, r2, r3
 800c8f0:	428c      	cmp	r4, r1
 800c8f2:	d800      	bhi.n	800c8f6 <RDMSubDevice::CalculateChecksum()+0x26>
 800c8f4:	bd10      	pop	{r4, pc}
 800c8f6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c8fa:	4408      	add	r0, r1
 800c8fc:	b280      	uxth	r0, r0
 800c8fe:	e7f6      	b.n	800c8ee <RDMSubDevice::CalculateChecksum()+0x1e>

0800c900 <RDMSubDevice::GetFactoryDefaults()>:
 800c900:	7a03      	ldrb	r3, [r0, #8]
 800c902:	b510      	push	{r4, lr}
 800c904:	4604      	mov	r4, r0
 800c906:	b133      	cbz	r3, 800c916 <RDMSubDevice::GetFactoryDefaults()+0x16>
 800c908:	f7ff ffe2 	bl	800c8d0 <RDMSubDevice::CalculateChecksum()>
 800c90c:	8963      	ldrh	r3, [r4, #10]
 800c90e:	4283      	cmp	r3, r0
 800c910:	bf1c      	itt	ne
 800c912:	2300      	movne	r3, #0
 800c914:	7223      	strbne	r3, [r4, #8]
 800c916:	7a20      	ldrb	r0, [r4, #8]
 800c918:	bd10      	pop	{r4, pc}

0800c91a <memcpy.isra.0>:
 800c91a:	f007 ba0d 	b.w	8013d38 <memcpy>
	...

0800c920 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800c920:	b510      	push	{r4, lr}
 800c922:	6001      	str	r1, [r0, #0]
 800c924:	2100      	movs	r1, #0
 800c926:	4604      	mov	r4, r0
 800c928:	6041      	str	r1, [r0, #4]
 800c92a:	2220      	movs	r2, #32
 800c92c:	3008      	adds	r0, #8
 800c92e:	f007 fa25 	bl	8013d7c <memset>
 800c932:	4b03      	ldr	r3, [pc, #12]	; (800c940 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800c934:	4620      	mov	r0, r4
 800c936:	62a3      	str	r3, [r4, #40]	; 0x28
 800c938:	237f      	movs	r3, #127	; 0x7f
 800c93a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c93e:	bd10      	pop	{r4, pc}
 800c940:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800c944 <RDMDeviceParams::Load()>:
 800c944:	4601      	mov	r1, r0
 800c946:	6800      	ldr	r0, [r0, #0]
 800c948:	b130      	cbz	r0, 800c958 <RDMDeviceParams::Load()+0x14>
 800c94a:	b508      	push	{r3, lr}
 800c94c:	6803      	ldr	r3, [r0, #0]
 800c94e:	3104      	adds	r1, #4
 800c950:	68db      	ldr	r3, [r3, #12]
 800c952:	4798      	blx	r3
 800c954:	2001      	movs	r0, #1
 800c956:	bd08      	pop	{r3, pc}
 800c958:	4770      	bx	lr

0800c95a <RDMDeviceParams::Set(RDMDevice*)>:
 800c95a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c95c:	6843      	ldr	r3, [r0, #4]
 800c95e:	460c      	mov	r4, r1
 800c960:	07d9      	lsls	r1, r3, #31
 800c962:	4605      	mov	r5, r0
 800c964:	d518      	bpl.n	800c998 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800c966:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800c96a:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c96e:	2e20      	cmp	r6, #32
 800c970:	bf28      	it	cs
 800c972:	2620      	movcs	r6, #32
 800c974:	f100 0108 	add.w	r1, r0, #8
 800c978:	b1e3      	cbz	r3, 800c9b4 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800c97a:	f104 070a 	add.w	r7, r4, #10
 800c97e:	4638      	mov	r0, r7
 800c980:	4632      	mov	r2, r6
 800c982:	f7ff ffca 	bl	800c91a <memcpy.isra.0>
 800c986:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800c988:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800c98c:	b120      	cbz	r0, 800c998 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800c98e:	6803      	ldr	r3, [r0, #0]
 800c990:	4632      	mov	r2, r6
 800c992:	4639      	mov	r1, r7
 800c994:	689b      	ldr	r3, [r3, #8]
 800c996:	4798      	blx	r3
 800c998:	686b      	ldr	r3, [r5, #4]
 800c99a:	079a      	lsls	r2, r3, #30
 800c99c:	bf44      	itt	mi
 800c99e:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800c9a2:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800c9a6:	075b      	lsls	r3, r3, #29
 800c9a8:	bf44      	itt	mi
 800c9aa:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800c9ae:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800c9b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c9b4:	4632      	mov	r2, r6
 800c9b6:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800c9ba:	f7ff ffae 	bl	800c91a <memcpy.isra.0>
 800c9be:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800c9c2:	e7e9      	b.n	800c998 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800c9c4 <RDMDeviceParams::Dump()>:
 800c9c4:	4770      	bx	lr

0800c9c6 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800c9c6:	4770      	bx	lr

0800c9c8 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800c9c8:	4770      	bx	lr
	...

0800c9cc <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c9cc:	b510      	push	{r4, lr}
 800c9ce:	4604      	mov	r4, r0
 800c9d0:	4b05      	ldr	r3, [pc, #20]	; (800c9e8 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800c9d2:	f840 3b88 	str.w	r3, [r0], #136
 800c9d6:	f7ff fef1 	bl	800c7bc <RDMSubDevices::~RDMSubDevices()>
 800c9da:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c9de:	f7ff fecd 	bl	800c77c <RDMSensors::~RDMSensors()>
 800c9e2:	4620      	mov	r0, r4
 800c9e4:	bd10      	pop	{r4, pc}
 800c9e6:	bf00      	nop
 800c9e8:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}

0800c9ec <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c9ec:	b510      	push	{r4, lr}
 800c9ee:	4604      	mov	r4, r0
 800c9f0:	f7ff ffec 	bl	800c9cc <RDMDeviceResponder::~RDMDeviceResponder()>
 800c9f4:	4620      	mov	r0, r4
 800c9f6:	f007 f8e7 	bl	8013bc8 <operator delete(void*)>
 800c9fa:	4620      	mov	r0, r4
 800c9fc:	bd10      	pop	{r4, pc}
	...

0800ca00 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800ca00:	b570      	push	{r4, r5, r6, lr}
 800ca02:	4604      	mov	r4, r0
 800ca04:	3004      	adds	r0, #4
 800ca06:	460e      	mov	r6, r1
 800ca08:	4615      	mov	r5, r2
 800ca0a:	f000 feeb 	bl	800d7e4 <RDMDevice::RDMDevice()>
 800ca0e:	4620      	mov	r0, r4
 800ca10:	4b21      	ldr	r3, [pc, #132]	; (800ca98 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800ca12:	f840 3b7c 	str.w	r3, [r0], #124
 800ca16:	f000 fcf5 	bl	800d404 <RDMIdentify::RDMIdentify()>
 800ca1a:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800ca1e:	f7ff fea5 	bl	800c76c <RDMSensors::RDMSensors()>
 800ca22:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ca26:	f7ff fec1 	bl	800c7ac <RDMSubDevices::RDMSubDevices()>
 800ca2a:	4b1c      	ldr	r3, [pc, #112]	; (800ca9c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800ca2c:	2200      	movs	r2, #0
 800ca2e:	601c      	str	r4, [r3, #0]
 800ca30:	2365      	movs	r3, #101	; 0x65
 800ca32:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800ca36:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800ca3a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800ca3e:	2301      	movs	r3, #1
 800ca40:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800ca44:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800ca48:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800ca4c:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800ca50:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800ca54:	428b      	cmp	r3, r1
 800ca56:	d119      	bne.n	800ca8c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800ca58:	2100      	movs	r1, #0
 800ca5a:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800ca5e:	4293      	cmp	r3, r2
 800ca60:	d117      	bne.n	800ca92 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800ca62:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800ca66:	f7fc facd 	bl	8009004 <RDMSoftwareVersion::GetVersion()>
 800ca6a:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800ca6e:	f7fc facd 	bl	800900c <RDMSoftwareVersion::GetVersionLength()>
 800ca72:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800ca76:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800ca7a:	681b      	ldr	r3, [r3, #0]
 800ca7c:	685b      	ldr	r3, [r3, #4]
 800ca7e:	b91b      	cbnz	r3, 800ca88 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800ca80:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ca84:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800ca88:	4620      	mov	r0, r4
 800ca8a:	bd70      	pop	{r4, r5, r6, pc}
 800ca8c:	f803 2b01 	strb.w	r2, [r3], #1
 800ca90:	e7e0      	b.n	800ca54 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800ca92:	f803 1b01 	strb.w	r1, [r3], #1
 800ca96:	e7e2      	b.n	800ca5e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800ca98:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 800ca9c:	2000c870 	andcs	ip, r0, r0, ror r8

0800caa0 <RDMDeviceResponder::Init()>:
 800caa0:	2301      	movs	r3, #1
 800caa2:	b570      	push	{r4, r5, r6, lr}
 800caa4:	4604      	mov	r4, r0
 800caa6:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800caaa:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800caae:	3055      	adds	r0, #85	; 0x55
 800cab0:	2a20      	cmp	r2, #32
 800cab2:	bf28      	it	cs
 800cab4:	2220      	movcs	r2, #32
 800cab6:	4613      	mov	r3, r2
 800cab8:	f104 010e 	add.w	r1, r4, #14
 800cabc:	3b01      	subs	r3, #1
 800cabe:	d25d      	bcs.n	800cb7c <RDMDeviceResponder::Init()+0xdc>
 800cac0:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800cac2:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800cac6:	b110      	cbz	r0, 800cace <RDMDeviceResponder::Init()+0x2e>
 800cac8:	6803      	ldr	r3, [r0, #0]
 800caca:	689b      	ldr	r3, [r3, #8]
 800cacc:	4798      	blx	r3
 800cace:	f06f 050c 	mvn.w	r5, #12
 800cad2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800cad6:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800cada:	f104 020d 	add.w	r2, r4, #13
 800cade:	1b2d      	subs	r5, r5, r4
 800cae0:	18a9      	adds	r1, r5, r2
 800cae2:	4288      	cmp	r0, r1
 800cae4:	d84f      	bhi.n	800cb86 <RDMDeviceResponder::Init()+0xe6>
 800cae6:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800caea:	f7fc fa91 	bl	8009010 <RDMSoftwareVersion::GetVersionId()>
 800caee:	2201      	movs	r2, #1
 800caf0:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800caf4:	2200      	movs	r2, #0
 800caf6:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800cafa:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800cafe:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800cb02:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800cb06:	0a1a      	lsrs	r2, r3, #8
 800cb08:	0e03      	lsrs	r3, r0, #24
 800cb0a:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800cb0e:	0c03      	lsrs	r3, r0, #16
 800cb10:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800cb14:	0a03      	lsrs	r3, r0, #8
 800cb16:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800cb1a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800cb1e:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800cb22:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800cb26:	681b      	ldr	r3, [r3, #0]
 800cb28:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800cb2c:	685d      	ldr	r5, [r3, #4]
 800cb2e:	bb7d      	cbnz	r5, 800cb90 <RDMDeviceResponder::Init()+0xf0>
 800cb30:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800cb34:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800cb38:	0a03      	lsrs	r3, r0, #8
 800cb3a:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800cb3e:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800cb42:	2301      	movs	r3, #1
 800cb44:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800cb48:	0a33      	lsrs	r3, r6, #8
 800cb4a:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800cb4e:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800cb52:	b2c0      	uxtb	r0, r0
 800cb54:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800cb58:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800cb5c:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800cb60:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800cb64:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800cb68:	4293      	cmp	r3, r2
 800cb6a:	d12a      	bne.n	800cbc2 <RDMDeviceResponder::Init()+0x122>
 800cb6c:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800cb70:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800cb74:	4413      	add	r3, r2
 800cb76:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800cb7a:	bd70      	pop	{r4, r5, r6, pc}
 800cb7c:	f810 5b01 	ldrb.w	r5, [r0], #1
 800cb80:	f800 5c48 	strb.w	r5, [r0, #-72]
 800cb84:	e79a      	b.n	800cabc <RDMDeviceResponder::Init()+0x1c>
 800cb86:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800cb8a:	440b      	add	r3, r1
 800cb8c:	b29b      	uxth	r3, r3
 800cb8e:	e7a7      	b.n	800cae0 <RDMDeviceResponder::Init()+0x40>
 800cb90:	682b      	ldr	r3, [r5, #0]
 800cb92:	4628      	mov	r0, r5
 800cb94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb96:	4798      	blx	r3
 800cb98:	0a00      	lsrs	r0, r0, #8
 800cb9a:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800cb9e:	682b      	ldr	r3, [r5, #0]
 800cba0:	4628      	mov	r0, r5
 800cba2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cba4:	4798      	blx	r3
 800cba6:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800cbaa:	682b      	ldr	r3, [r5, #0]
 800cbac:	4628      	mov	r0, r5
 800cbae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbb0:	4798      	blx	r3
 800cbb2:	0a00      	lsrs	r0, r0, #8
 800cbb4:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800cbb8:	682b      	ldr	r3, [r5, #0]
 800cbba:	4628      	mov	r0, r5
 800cbbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbbe:	4798      	blx	r3
 800cbc0:	e7bf      	b.n	800cb42 <RDMDeviceResponder::Init()+0xa2>
 800cbc2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800cbc6:	7499      	strb	r1, [r3, #18]
 800cbc8:	e7ce      	b.n	800cb68 <RDMDeviceResponder::Init()+0xc8>
	...

0800cbcc <RDMDeviceResponder::Print()>:
 800cbcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cbce:	4604      	mov	r4, r0
 800cbd0:	3004      	adds	r0, #4
 800cbd2:	f000 fe79 	bl	800d8c8 <RDMDevice::Print()>
 800cbd6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800cbda:	481c      	ldr	r0, [pc, #112]	; (800cc4c <RDMDeviceResponder::Print()+0x80>)
 800cbdc:	681d      	ldr	r5, [r3, #0]
 800cbde:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800cbe0:	f7fc fd16 	bl	8009610 <printf>
 800cbe4:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800cbe8:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800cbec:	4818      	ldr	r0, [pc, #96]	; (800cc50 <RDMDeviceResponder::Print()+0x84>)
 800cbee:	f7fc fd0f 	bl	8009610 <printf>
 800cbf2:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800cbf6:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800cbfa:	4816      	ldr	r0, [pc, #88]	; (800cc54 <RDMDeviceResponder::Print()+0x88>)
 800cbfc:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800cc00:	f7fc fd06 	bl	8009610 <printf>
 800cc04:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800cc08:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800cc0c:	3508      	adds	r5, #8
 800cc0e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800cc12:	4811      	ldr	r0, [pc, #68]	; (800cc58 <RDMDeviceResponder::Print()+0x8c>)
 800cc14:	f7fc fcfc 	bl	8009610 <printf>
 800cc18:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800cc1c:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800cc20:	b2f3      	uxtb	r3, r6
 800cc22:	9500      	str	r5, [sp, #0]
 800cc24:	480d      	ldr	r0, [pc, #52]	; (800cc5c <RDMDeviceResponder::Print()+0x90>)
 800cc26:	f7fc fcf3 	bl	8009610 <printf>
 800cc2a:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800cc2e:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800cc32:	480b      	ldr	r0, [pc, #44]	; (800cc60 <RDMDeviceResponder::Print()+0x94>)
 800cc34:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800cc38:	f7fc fcea 	bl	8009610 <printf>
 800cc3c:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800cc40:	4808      	ldr	r0, [pc, #32]	; (800cc64 <RDMDeviceResponder::Print()+0x98>)
 800cc42:	b002      	add	sp, #8
 800cc44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc48:	f7fc bce2 	b.w	8009610 <printf>
 800cc4c:	0801770d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sl, ip, sp, lr}
 800cc50:	0801772a 	stmdaeq	r1, {r1, r3, r5, r8, r9, sl, ip, sp, lr}
 800cc54:	08017743 	stmdaeq	r1, {r0, r1, r6, r8, r9, sl, ip, sp, lr}
 800cc58:	0801775b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800cc5c:	08017773 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 800cc60:	08017791 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, ip, sp, lr}
 800cc64:	080177a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, sl, ip, sp, lr}

0800cc68 <memcmp>:
 800cc68:	b510      	push	{r4, lr}
 800cc6a:	3901      	subs	r1, #1
 800cc6c:	4402      	add	r2, r0
 800cc6e:	4290      	cmp	r0, r2
 800cc70:	d101      	bne.n	800cc76 <memcmp+0xe>
 800cc72:	2000      	movs	r0, #0
 800cc74:	e005      	b.n	800cc82 <memcmp+0x1a>
 800cc76:	7803      	ldrb	r3, [r0, #0]
 800cc78:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800cc7c:	42a3      	cmp	r3, r4
 800cc7e:	d001      	beq.n	800cc84 <memcmp+0x1c>
 800cc80:	1b18      	subs	r0, r3, r4
 800cc82:	bd10      	pop	{r4, pc}
 800cc84:	3001      	adds	r0, #1
 800cc86:	e7f2      	b.n	800cc6e <memcmp+0x6>

0800cc88 <memcpy.isra.0>:
 800cc88:	3801      	subs	r0, #1
 800cc8a:	440a      	add	r2, r1
 800cc8c:	4291      	cmp	r1, r2
 800cc8e:	d100      	bne.n	800cc92 <memcpy.isra.0+0xa>
 800cc90:	4770      	bx	lr
 800cc92:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cc96:	f800 3f01 	strb.w	r3, [r0, #1]!
 800cc9a:	e7f7      	b.n	800cc8c <memcpy.isra.0+0x4>

0800cc9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800cc9c:	b570      	push	{r4, r5, r6, lr}
 800cc9e:	790d      	ldrb	r5, [r1, #4]
 800cca0:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800cca4:	2d20      	cmp	r5, #32
 800cca6:	4604      	mov	r4, r0
 800cca8:	bf28      	it	cs
 800ccaa:	2520      	movcs	r5, #32
 800ccac:	6809      	ldr	r1, [r1, #0]
 800ccae:	b183      	cbz	r3, 800ccd2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800ccb0:	f100 060a 	add.w	r6, r0, #10
 800ccb4:	4630      	mov	r0, r6
 800ccb6:	462a      	mov	r2, r5
 800ccb8:	f7ff ffe6 	bl	800cc88 <memcpy.isra.0>
 800ccbc:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800ccbe:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800ccc2:	b160      	cbz	r0, 800ccde <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800ccc4:	6803      	ldr	r3, [r0, #0]
 800ccc6:	462a      	mov	r2, r5
 800ccc8:	4631      	mov	r1, r6
 800ccca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccce:	689b      	ldr	r3, [r3, #8]
 800ccd0:	4718      	bx	r3
 800ccd2:	462a      	mov	r2, r5
 800ccd4:	3051      	adds	r0, #81	; 0x51
 800ccd6:	f7ff ffd7 	bl	800cc88 <memcpy.isra.0>
 800ccda:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800ccde:	bd70      	pop	{r4, r5, r6, pc}

0800cce0 <RDMDeviceResponder::SetFactoryDefaults()>:
 800cce0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cce2:	4604      	mov	r4, r0
 800cce4:	f06f 050c 	mvn.w	r5, #12
 800cce8:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800ccec:	9300      	str	r3, [sp, #0]
 800ccee:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800ccf2:	4669      	mov	r1, sp
 800ccf4:	3004      	adds	r0, #4
 800ccf6:	f88d 3004 	strb.w	r3, [sp, #4]
 800ccfa:	f7ff ffcf 	bl	800cc9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800ccfe:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800cd02:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800cd06:	f104 020d 	add.w	r2, r4, #13
 800cd0a:	1b2d      	subs	r5, r5, r4
 800cd0c:	18a9      	adds	r1, r5, r2
 800cd0e:	4288      	cmp	r0, r1
 800cd10:	d865      	bhi.n	800cdde <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800cd12:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800cd16:	2301      	movs	r3, #1
 800cd18:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800cd1c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800cd20:	681b      	ldr	r3, [r3, #0]
 800cd22:	685d      	ldr	r5, [r3, #4]
 800cd24:	b1f5      	cbz	r5, 800cd64 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800cd26:	682b      	ldr	r3, [r5, #0]
 800cd28:	4628      	mov	r0, r5
 800cd2a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd2c:	4798      	blx	r3
 800cd2e:	0a00      	lsrs	r0, r0, #8
 800cd30:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800cd34:	682b      	ldr	r3, [r5, #0]
 800cd36:	4628      	mov	r0, r5
 800cd38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd3a:	4798      	blx	r3
 800cd3c:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800cd40:	682b      	ldr	r3, [r5, #0]
 800cd42:	4628      	mov	r0, r5
 800cd44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd46:	4798      	blx	r3
 800cd48:	0a00      	lsrs	r0, r0, #8
 800cd4a:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800cd4e:	682b      	ldr	r3, [r5, #0]
 800cd50:	4628      	mov	r0, r5
 800cd52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd54:	4798      	blx	r3
 800cd56:	6823      	ldr	r3, [r4, #0]
 800cd58:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800cd5c:	4629      	mov	r1, r5
 800cd5e:	4620      	mov	r0, r4
 800cd60:	689b      	ldr	r3, [r3, #8]
 800cd62:	4798      	blx	r3
 800cd64:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800cd68:	1e6b      	subs	r3, r5, #1
 800cd6a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cd6e:	d218      	bcs.n	800cda2 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800cd70:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800cd74:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800cd78:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800cd7c:	3b01      	subs	r3, #1
 800cd7e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800cd82:	6858      	ldr	r0, [r3, #4]
 800cd84:	b168      	cbz	r0, 800cda2 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800cd86:	6803      	ldr	r3, [r0, #0]
 800cd88:	4629      	mov	r1, r5
 800cd8a:	6a1b      	ldr	r3, [r3, #32]
 800cd8c:	4798      	blx	r3
 800cd8e:	b120      	cbz	r0, 800cd9a <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800cd90:	0a2b      	lsrs	r3, r5, #8
 800cd92:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800cd96:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800cd9a:	6823      	ldr	r3, [r4, #0]
 800cd9c:	4620      	mov	r0, r4
 800cd9e:	68db      	ldr	r3, [r3, #12]
 800cda0:	4798      	blx	r3
 800cda2:	2213      	movs	r2, #19
 800cda4:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800cda8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800cdac:	f7ff ff6c 	bl	800cc88 <memcpy.isra.0>
 800cdb0:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800cdb4:	f7ff fd4b 	bl	800c84e <RDMSubDevices::SetFactoryDefaults()>
 800cdb8:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800cdbc:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800cdc0:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800cdc4:	4413      	add	r3, r2
 800cdc6:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800cdca:	2301      	movs	r3, #1
 800cdcc:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800cdd0:	b150      	cbz	r0, 800cde8 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800cdd2:	6803      	ldr	r3, [r0, #0]
 800cdd4:	689b      	ldr	r3, [r3, #8]
 800cdd6:	b003      	add	sp, #12
 800cdd8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cddc:	4718      	bx	r3
 800cdde:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800cde2:	440b      	add	r3, r1
 800cde4:	b29b      	uxth	r3, r3
 800cde6:	e791      	b.n	800cd0c <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800cde8:	b003      	add	sp, #12
 800cdea:	bd30      	pop	{r4, r5, pc}

0800cdec <RDMHandler::RDMHandler(bool)>:
 800cdec:	2200      	movs	r2, #0
 800cdee:	7001      	strb	r1, [r0, #0]
 800cdf0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800cdf4:	7042      	strb	r2, [r0, #1]
 800cdf6:	4770      	bx	lr

0800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>:
 800cdf8:	6883      	ldr	r3, [r0, #8]
 800cdfa:	f803 2f17 	strb.w	r2, [r3, #23]!
 800cdfe:	440a      	add	r2, r1
 800ce00:	4291      	cmp	r1, r2
 800ce02:	d100      	bne.n	800ce06 <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800ce04:	4770      	bx	lr
 800ce06:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ce0a:	f803 0f01 	strb.w	r0, [r3, #1]!
 800ce0e:	e7f7      	b.n	800ce00 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800ce10 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800ce10:	b570      	push	{r4, r5, r6, lr}
 800ce12:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800ce16:	25cc      	movs	r5, #204	; 0xcc
 800ce18:	701d      	strb	r5, [r3, #0]
 800ce1a:	7825      	ldrb	r5, [r4, #0]
 800ce1c:	705d      	strb	r5, [r3, #1]
 800ce1e:	7ba5      	ldrb	r5, [r4, #14]
 800ce20:	73dd      	strb	r5, [r3, #15]
 800ce22:	2500      	movs	r5, #0
 800ce24:	745d      	strb	r5, [r3, #17]
 800ce26:	7c65      	ldrb	r5, [r4, #17]
 800ce28:	749d      	strb	r5, [r3, #18]
 800ce2a:	7ca5      	ldrb	r5, [r4, #18]
 800ce2c:	74dd      	strb	r5, [r3, #19]
 800ce2e:	7ce5      	ldrb	r5, [r4, #19]
 800ce30:	3501      	adds	r5, #1
 800ce32:	751d      	strb	r5, [r3, #20]
 800ce34:	7d25      	ldrb	r5, [r4, #20]
 800ce36:	755d      	strb	r5, [r3, #21]
 800ce38:	7d65      	ldrb	r5, [r4, #21]
 800ce3a:	759d      	strb	r5, [r3, #22]
 800ce3c:	b119      	cbz	r1, 800ce46 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800ce3e:	1e4d      	subs	r5, r1, #1
 800ce40:	2d01      	cmp	r5, #1
 800ce42:	d921      	bls.n	800ce88 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800ce44:	bd70      	pop	{r4, r5, r6, pc}
 800ce46:	7dda      	ldrb	r2, [r3, #23]
 800ce48:	7419      	strb	r1, [r3, #16]
 800ce4a:	3218      	adds	r2, #24
 800ce4c:	709a      	strb	r2, [r3, #2]
 800ce4e:	4a15      	ldr	r2, [pc, #84]	; (800cea4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800ce50:	1de1      	adds	r1, r4, #7
 800ce52:	6812      	ldr	r2, [r2, #0]
 800ce54:	1c9d      	adds	r5, r3, #2
 800ce56:	3203      	adds	r2, #3
 800ce58:	340d      	adds	r4, #13
 800ce5a:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800ce5e:	f805 6f01 	strb.w	r6, [r5, #1]!
 800ce62:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800ce66:	42a1      	cmp	r1, r4
 800ce68:	71ae      	strb	r6, [r5, #6]
 800ce6a:	d1f6      	bne.n	800ce5a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800ce6c:	2200      	movs	r2, #0
 800ce6e:	7899      	ldrb	r1, [r3, #2]
 800ce70:	4613      	mov	r3, r2
 800ce72:	6884      	ldr	r4, [r0, #8]
 800ce74:	428a      	cmp	r2, r1
 800ce76:	eb04 0502 	add.w	r5, r4, r2
 800ce7a:	d30e      	bcc.n	800ce9a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800ce7c:	0a1a      	lsrs	r2, r3, #8
 800ce7e:	702a      	strb	r2, [r5, #0]
 800ce80:	6882      	ldr	r2, [r0, #8]
 800ce82:	440a      	add	r2, r1
 800ce84:	7053      	strb	r3, [r2, #1]
 800ce86:	e7dd      	b.n	800ce44 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800ce88:	7419      	strb	r1, [r3, #16]
 800ce8a:	2102      	movs	r1, #2
 800ce8c:	251a      	movs	r5, #26
 800ce8e:	75d9      	strb	r1, [r3, #23]
 800ce90:	0a11      	lsrs	r1, r2, #8
 800ce92:	709d      	strb	r5, [r3, #2]
 800ce94:	7619      	strb	r1, [r3, #24]
 800ce96:	765a      	strb	r2, [r3, #25]
 800ce98:	e7d9      	b.n	800ce4e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800ce9a:	5ca5      	ldrb	r5, [r4, r2]
 800ce9c:	3201      	adds	r2, #1
 800ce9e:	442b      	add	r3, r5
 800cea0:	b29b      	uxth	r3, r3
 800cea2:	e7e7      	b.n	800ce74 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800cea4:	2000c870 	andcs	ip, r0, r0, ror r8

0800cea8 <RDMHandler::RespondMessageAck()>:
 800cea8:	6843      	ldr	r3, [r0, #4]
 800ceaa:	7d9a      	ldrb	r2, [r3, #22]
 800ceac:	b90a      	cbnz	r2, 800ceb2 <RDMHandler::RespondMessageAck()+0xa>
 800ceae:	2218      	movs	r2, #24
 800ceb0:	705a      	strb	r2, [r3, #1]
 800ceb2:	2200      	movs	r2, #0
 800ceb4:	4611      	mov	r1, r2
 800ceb6:	f7ff bfab 	b.w	800ce10 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800cebc <RDMHandler::GetDeviceInfo(unsigned short)>:
 800cebc:	b538      	push	{r3, r4, r5, lr}
 800cebe:	4b18      	ldr	r3, [pc, #96]	; (800cf20 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800cec0:	4605      	mov	r5, r0
 800cec2:	681c      	ldr	r4, [r3, #0]
 800cec4:	b349      	cbz	r1, 800cf1a <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800cec6:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ceca:	f7ff fc8f 	bl	800c7ec <RDMSubDevices::GetInfo(unsigned short)>
 800cece:	b1b8      	cbz	r0, 800cf00 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800ced0:	8803      	ldrh	r3, [r0, #0]
 800ced2:	0a1b      	lsrs	r3, r3, #8
 800ced4:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800ced8:	8803      	ldrh	r3, [r0, #0]
 800ceda:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800cede:	7903      	ldrb	r3, [r0, #4]
 800cee0:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800cee4:	7943      	ldrb	r3, [r0, #5]
 800cee6:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800ceea:	8843      	ldrh	r3, [r0, #2]
 800ceec:	0a1b      	lsrs	r3, r3, #8
 800ceee:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800cef2:	8843      	ldrh	r3, [r0, #2]
 800cef4:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800cef8:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800cefc:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800cf00:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800cf04:	2213      	movs	r2, #19
 800cf06:	68a8      	ldr	r0, [r5, #8]
 800cf08:	75c2      	strb	r2, [r0, #23]
 800cf0a:	3018      	adds	r0, #24
 800cf0c:	f7ff febc 	bl	800cc88 <memcpy.isra.0>
 800cf10:	4628      	mov	r0, r5
 800cf12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf16:	f7ff bfc7 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800cf1a:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800cf1e:	e7f1      	b.n	800cf04 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800cf20:	2000c870 	andcs	ip, r0, r0, ror r8

0800cf24 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800cf24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cf26:	2301      	movs	r3, #1
 800cf28:	6886      	ldr	r6, [r0, #8]
 800cf2a:	4605      	mov	r5, r0
 800cf2c:	75f3      	strb	r3, [r6, #23]
 800cf2e:	4b1c      	ldr	r3, [pc, #112]	; (800cfa0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800cf30:	681c      	ldr	r4, [r3, #0]
 800cf32:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800cf36:	b37b      	cbz	r3, 800cf98 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800cf38:	f06f 0c0c 	mvn.w	ip, #12
 800cf3c:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800cf40:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800cf44:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800cf48:	f104 020d 	add.w	r2, r4, #13
 800cf4c:	ebac 0c04 	sub.w	ip, ip, r4
 800cf50:	eb0c 0702 	add.w	r7, ip, r2
 800cf54:	4287      	cmp	r7, r0
 800cf56:	d30a      	bcc.n	800cf6e <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800cf58:	4299      	cmp	r1, r3
 800cf5a:	d00d      	beq.n	800cf78 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800cf5c:	2300      	movs	r3, #0
 800cf5e:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800cf62:	7633      	strb	r3, [r6, #24]
 800cf64:	4628      	mov	r0, r5
 800cf66:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cf6a:	f7ff bf9d 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800cf6e:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800cf72:	443b      	add	r3, r7
 800cf74:	b29b      	uxth	r3, r3
 800cf76:	e7eb      	b.n	800cf50 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800cf78:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800cf7c:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800cf80:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800cf84:	440b      	add	r3, r1
 800cf86:	429a      	cmp	r2, r3
 800cf88:	d1e8      	bne.n	800cf5c <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800cf8a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800cf8e:	f7ff fc4b 	bl	800c828 <RDMSubDevices::GetFactoryDefaults()>
 800cf92:	4603      	mov	r3, r0
 800cf94:	2800      	cmp	r0, #0
 800cf96:	d0e2      	beq.n	800cf5e <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800cf98:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800cf9c:	e7e1      	b.n	800cf62 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800cf9e:	bf00      	nop
 800cfa0:	2000c870 	andcs	ip, r0, r0, ror r8

0800cfa4 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800cfa4:	b510      	push	{r4, lr}
 800cfa6:	4604      	mov	r4, r0
 800cfa8:	220a      	movs	r2, #10
 800cfaa:	4904      	ldr	r1, [pc, #16]	; (800cfbc <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800cfac:	f7ff ff24 	bl	800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cfb6:	f7ff bf77 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800cfba:	bf00      	nop
 800cfbc:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}

0800cfc0 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800cfc0:	b510      	push	{r4, lr}
 800cfc2:	4604      	mov	r4, r0
 800cfc4:	4b05      	ldr	r3, [pc, #20]	; (800cfdc <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800cfc6:	6819      	ldr	r1, [r3, #0]
 800cfc8:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800cfcc:	312f      	adds	r1, #47	; 0x2f
 800cfce:	f7ff ff13 	bl	800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>
 800cfd2:	4620      	mov	r0, r4
 800cfd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cfd8:	f7ff bf66 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800cfdc:	2000c870 	andcs	ip, r0, r0, ror r8

0800cfe0 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800cfe0:	4b0d      	ldr	r3, [pc, #52]	; (800d018 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800cfe2:	b513      	push	{r0, r1, r4, lr}
 800cfe4:	4604      	mov	r4, r0
 800cfe6:	6818      	ldr	r0, [r3, #0]
 800cfe8:	b171      	cbz	r1, 800d008 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800cfea:	466a      	mov	r2, sp
 800cfec:	3088      	adds	r0, #136	; 0x88
 800cfee:	f7ff fc05 	bl	800c7fc <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800cff2:	4620      	mov	r0, r4
 800cff4:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800cff8:	9900      	ldr	r1, [sp, #0]
 800cffa:	f7ff fefd 	bl	800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>
 800cffe:	4620      	mov	r0, r4
 800d000:	f7ff ff52 	bl	800cea8 <RDMHandler::RespondMessageAck()>
 800d004:	b002      	add	sp, #8
 800d006:	bd10      	pop	{r4, pc}
 800d008:	f100 030e 	add.w	r3, r0, #14
 800d00c:	9300      	str	r3, [sp, #0]
 800d00e:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800d012:	f88d 3004 	strb.w	r3, [sp, #4]
 800d016:	e7ec      	b.n	800cff2 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800d018:	2000c870 	andcs	ip, r0, r0, ror r8

0800d01c <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800d01c:	2201      	movs	r2, #1
 800d01e:	6883      	ldr	r3, [r0, #8]
 800d020:	75da      	strb	r2, [r3, #23]
 800d022:	4a02      	ldr	r2, [pc, #8]	; (800d02c <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800d024:	7812      	ldrb	r2, [r2, #0]
 800d026:	761a      	strb	r2, [r3, #24]
 800d028:	f7ff bf3e 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d02c:	2000c874 	andcs	ip, r0, r4, ror r8

0800d030 <RDMHandler::RespondMessageNack(unsigned short)>:
 800d030:	460a      	mov	r2, r1
 800d032:	2102      	movs	r1, #2
 800d034:	f7ff beec 	b.w	800ce10 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800d038 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800d038:	b510      	push	{r4, lr}
 800d03a:	6843      	ldr	r3, [r0, #4]
 800d03c:	4604      	mov	r4, r0
 800d03e:	7d9a      	ldrb	r2, [r3, #22]
 800d040:	2a01      	cmp	r2, #1
 800d042:	d004      	beq.n	800d04e <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800d044:	2101      	movs	r1, #1
 800d046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d04a:	f7ff bff1 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d04e:	7ddb      	ldrb	r3, [r3, #23]
 800d050:	2b01      	cmp	r3, #1
 800d052:	d003      	beq.n	800d05c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800d054:	2bff      	cmp	r3, #255	; 0xff
 800d056:	d001      	beq.n	800d05c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800d058:	2106      	movs	r1, #6
 800d05a:	e7f4      	b.n	800d046 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800d05c:	2100      	movs	r1, #0
 800d05e:	68a2      	ldr	r2, [r4, #8]
 800d060:	2bff      	cmp	r3, #255	; 0xff
 800d062:	75d1      	strb	r1, [r2, #23]
 800d064:	d102      	bne.n	800d06c <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800d066:	2104      	movs	r1, #4
 800d068:	4620      	mov	r0, r4
 800d06a:	e7ec      	b.n	800d046 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800d06c:	4b03      	ldr	r3, [pc, #12]	; (800d07c <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800d06e:	6818      	ldr	r0, [r3, #0]
 800d070:	f006 fd6e 	bl	8013b50 <Hardware::Reboot()>
 800d074:	2800      	cmp	r0, #0
 800d076:	d0f6      	beq.n	800d066 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800d078:	bd10      	pop	{r4, pc}
 800d07a:	bf00      	nop
 800d07c:	2001d97c 	andcs	sp, r1, ip, ror r9

0800d080 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800d080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d082:	6843      	ldr	r3, [r0, #4]
 800d084:	460d      	mov	r5, r1
 800d086:	7d99      	ldrb	r1, [r3, #22]
 800d088:	4604      	mov	r4, r0
 800d08a:	2901      	cmp	r1, #1
 800d08c:	d004      	beq.n	800d098 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800d08e:	2101      	movs	r1, #1
 800d090:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d094:	f7ff bfcc 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d098:	7ddb      	ldrb	r3, [r3, #23]
 800d09a:	2b01      	cmp	r3, #1
 800d09c:	d901      	bls.n	800d0a2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800d09e:	2106      	movs	r1, #6
 800d0a0:	e7f6      	b.n	800d090 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800d0a2:	4a12      	ldr	r2, [pc, #72]	; (800d0ec <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800d0a4:	4f12      	ldr	r7, [pc, #72]	; (800d0f0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800d0a6:	6816      	ldr	r6, [r2, #0]
 800d0a8:	4a12      	ldr	r2, [pc, #72]	; (800d0f4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800d0aa:	6810      	ldr	r0, [r2, #0]
 800d0ac:	4a12      	ldr	r2, [pc, #72]	; (800d0f8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800d0ae:	b983      	cbnz	r3, 800d0d2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800d0b0:	2102      	movs	r1, #2
 800d0b2:	7013      	strb	r3, [r2, #0]
 800d0b4:	f006 fcac 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800d0b8:	7839      	ldrb	r1, [r7, #0]
 800d0ba:	b111      	cbz	r1, 800d0c2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800d0bc:	4630      	mov	r0, r6
 800d0be:	f000 f9a8 	bl	800d412 <RDMIdentify::Off(rdm::identify::Mode)>
 800d0c2:	b98d      	cbnz	r5, 800d0e8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800d0c4:	68a3      	ldr	r3, [r4, #8]
 800d0c6:	4620      	mov	r0, r4
 800d0c8:	75dd      	strb	r5, [r3, #23]
 800d0ca:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800d0ce:	f7ff beeb 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d0d2:	7011      	strb	r1, [r2, #0]
 800d0d4:	2104      	movs	r1, #4
 800d0d6:	f006 fc9b 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 800d0da:	7839      	ldrb	r1, [r7, #0]
 800d0dc:	2900      	cmp	r1, #0
 800d0de:	d0f0      	beq.n	800d0c2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800d0e0:	4630      	mov	r0, r6
 800d0e2:	f000 f995 	bl	800d410 <RDMIdentify::On(rdm::identify::Mode)>
 800d0e6:	e7ec      	b.n	800d0c2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800d0e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d0ea:	bf00      	nop
 800d0ec:	2000c878 	andcs	ip, r0, r8, ror r8
 800d0f0:	2000c875 	andcs	ip, r0, r5, ror r8
 800d0f4:	2001d978 	andcs	sp, r1, r8, ror r9
 800d0f8:	2000c874 	andcs	ip, r0, r4, ror r8

0800d0fc <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800d0fc:	b538      	push	{r3, r4, r5, lr}
 800d0fe:	6843      	ldr	r3, [r0, #4]
 800d100:	4604      	mov	r4, r0
 800d102:	7d9b      	ldrb	r3, [r3, #22]
 800d104:	460d      	mov	r5, r1
 800d106:	b123      	cbz	r3, 800d112 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800d108:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d10c:	2101      	movs	r1, #1
 800d10e:	f7ff bf8f 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d112:	4b06      	ldr	r3, [pc, #24]	; (800d12c <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800d114:	6818      	ldr	r0, [r3, #0]
 800d116:	f7ff fde3 	bl	800cce0 <RDMDeviceResponder::SetFactoryDefaults()>
 800d11a:	b935      	cbnz	r5, 800d12a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800d11c:	68a3      	ldr	r3, [r4, #8]
 800d11e:	4620      	mov	r0, r4
 800d120:	75dd      	strb	r5, [r3, #23]
 800d122:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d126:	f7ff bebf 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d12a:	bd38      	pop	{r3, r4, r5, pc}
 800d12c:	2000c870 	andcs	ip, r0, r0, ror r8

0800d130 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800d130:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d132:	6845      	ldr	r5, [r0, #4]
 800d134:	460e      	mov	r6, r1
 800d136:	7dab      	ldrb	r3, [r5, #22]
 800d138:	4604      	mov	r4, r0
 800d13a:	2b20      	cmp	r3, #32
 800d13c:	4611      	mov	r1, r2
 800d13e:	d905      	bls.n	800d14c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800d140:	2101      	movs	r1, #1
 800d142:	b002      	add	sp, #8
 800d144:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d148:	f7ff bf72 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d14c:	4a0d      	ldr	r2, [pc, #52]	; (800d184 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800d14e:	6810      	ldr	r0, [r2, #0]
 800d150:	f105 0217 	add.w	r2, r5, #23
 800d154:	b159      	cbz	r1, 800d16e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800d156:	3088      	adds	r0, #136	; 0x88
 800d158:	f7ff fb59 	bl	800c80e <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800d15c:	b97e      	cbnz	r6, 800d17e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800d15e:	4620      	mov	r0, r4
 800d160:	68a3      	ldr	r3, [r4, #8]
 800d162:	75de      	strb	r6, [r3, #23]
 800d164:	b002      	add	sp, #8
 800d166:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d16a:	f7ff be9d 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d16e:	4669      	mov	r1, sp
 800d170:	3004      	adds	r0, #4
 800d172:	9200      	str	r2, [sp, #0]
 800d174:	f88d 3004 	strb.w	r3, [sp, #4]
 800d178:	f7ff fd90 	bl	800cc9c <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800d17c:	e7ee      	b.n	800d15c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800d17e:	b002      	add	sp, #8
 800d180:	bd70      	pop	{r4, r5, r6, pc}
 800d182:	bf00      	nop
 800d184:	2000c870 	andcs	ip, r0, r0, ror r8

0800d188 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800d188:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d18c:	4616      	mov	r6, r2
 800d18e:	2700      	movs	r7, #0
 800d190:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800d194:	2c20      	cmp	r4, #32
 800d196:	46be      	mov	lr, r7
 800d198:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800d19c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800d1a0:	d004      	beq.n	800d1ac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800d1a2:	2105      	movs	r1, #5
 800d1a4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d1a8:	f7ff bf42 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d1ac:	4c2d      	ldr	r4, [pc, #180]	; (800d264 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800d1ae:	6824      	ldr	r4, [r4, #0]
 800d1b0:	88a4      	ldrh	r4, [r4, #4]
 800d1b2:	4294      	cmp	r4, r2
 800d1b4:	d205      	bcs.n	800d1c2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800d1b6:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800d1ba:	42a2      	cmp	r2, r4
 800d1bc:	d001      	beq.n	800d1c2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800d1be:	2109      	movs	r1, #9
 800d1c0:	e7f0      	b.n	800d1a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800d1c2:	f04f 0c14 	mov.w	ip, #20
 800d1c6:	2400      	movs	r4, #0
 800d1c8:	4d27      	ldr	r5, [pc, #156]	; (800d268 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800d1ca:	f8b5 9000 	ldrh.w	r9, [r5]
 800d1ce:	4599      	cmp	r9, r3
 800d1d0:	bf02      	ittt	eq
 800d1d2:	462c      	moveq	r4, r5
 800d1d4:	7daf      	ldrbeq	r7, [r5, #22]
 800d1d6:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800d1da:	f1bc 0c01 	subs.w	ip, ip, #1
 800d1de:	f105 0518 	add.w	r5, r5, #24
 800d1e2:	d1f2      	bne.n	800d1ca <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800d1e4:	b90c      	cbnz	r4, 800d1ea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800d1e6:	2100      	movs	r1, #0
 800d1e8:	e7dc      	b.n	800d1a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800d1ea:	7803      	ldrb	r3, [r0, #0]
 800d1ec:	b19b      	cbz	r3, 800d216 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800d1ee:	2f00      	cmp	r7, #0
 800d1f0:	d0f9      	beq.n	800d1e6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800d1f2:	2e20      	cmp	r6, #32
 800d1f4:	d121      	bne.n	800d23a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800d1f6:	2900      	cmp	r1, #0
 800d1f8:	d131      	bne.n	800d25e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800d1fa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d1fe:	429a      	cmp	r2, r3
 800d200:	d0dd      	beq.n	800d1be <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800d202:	6863      	ldr	r3, [r4, #4]
 800d204:	b913      	cbnz	r3, 800d20c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800d206:	68a1      	ldr	r1, [r4, #8]
 800d208:	07cd      	lsls	r5, r1, #31
 800d20a:	d5ca      	bpl.n	800d1a2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800d20c:	7d21      	ldrb	r1, [r4, #20]
 800d20e:	4541      	cmp	r1, r8
 800d210:	d005      	beq.n	800d21e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800d212:	2101      	movs	r1, #1
 800d214:	e7c6      	b.n	800d1a4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800d216:	f1be 0f00 	cmp.w	lr, #0
 800d21a:	d1ea      	bne.n	800d1f2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800d21c:	e7e3      	b.n	800d1e6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800d21e:	68a1      	ldr	r1, [r4, #8]
 800d220:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800d224:	104d      	asrs	r5, r1, #1
 800d226:	07c9      	lsls	r1, r1, #31
 800d228:	bf48      	it	mi
 800d22a:	5941      	ldrmi	r1, [r0, r5]
 800d22c:	4620      	mov	r0, r4
 800d22e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d232:	bf48      	it	mi
 800d234:	58cb      	ldrmi	r3, [r1, r3]
 800d236:	4611      	mov	r1, r2
 800d238:	4718      	bx	r3
 800d23a:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800d23e:	f003 0401 	and.w	r4, r3, #1
 800d242:	b90d      	cbnz	r5, 800d248 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800d244:	2c00      	cmp	r4, #0
 800d246:	d0ac      	beq.n	800d1a2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800d248:	105e      	asrs	r6, r3, #1
 800d24a:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800d24e:	b10c      	cbz	r4, 800d254 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800d250:	5980      	ldr	r0, [r0, r6]
 800d252:	5945      	ldr	r5, [r0, r5]
 800d254:	4618      	mov	r0, r3
 800d256:	462b      	mov	r3, r5
 800d258:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d25c:	4718      	bx	r3
 800d25e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d262:	bf00      	nop
 800d264:	2000c86c 	andcs	ip, r0, ip, ror #16
 800d268:	080177e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, ip, sp, lr}

0800d26c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800d26c:	23ff      	movs	r3, #255	; 0xff
 800d26e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d272:	7013      	strb	r3, [r2, #0]
 800d274:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800d278:	7ccb      	ldrb	r3, [r1, #19]
 800d27a:	b085      	sub	sp, #20
 800d27c:	7d4f      	ldrb	r7, [r1, #21]
 800d27e:	9303      	str	r3, [sp, #12]
 800d280:	7d0b      	ldrb	r3, [r1, #20]
 800d282:	f101 0a02 	add.w	sl, r1, #2
 800d286:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800d28a:	4b5b      	ldr	r3, [pc, #364]	; (800d3f8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x18c>)
 800d28c:	4606      	mov	r6, r0
 800d28e:	460d      	mov	r5, r1
 800d290:	4614      	mov	r4, r2
 800d292:	495a      	ldr	r1, [pc, #360]	; (800d3fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800d294:	2206      	movs	r2, #6
 800d296:	4650      	mov	r0, sl
 800d298:	f8d3 8000 	ldr.w	r8, [r3]
 800d29c:	f7ff fce4 	bl	800cc68 <memcmp>
 800d2a0:	f108 0904 	add.w	r9, r8, #4
 800d2a4:	4683      	mov	fp, r0
 800d2a6:	2202      	movs	r2, #2
 800d2a8:	4649      	mov	r1, r9
 800d2aa:	4650      	mov	r0, sl
 800d2ac:	b2bf      	uxth	r7, r7
 800d2ae:	f7ff fcdb 	bl	800cc68 <memcmp>
 800d2b2:	b928      	cbnz	r0, 800d2c0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800d2b4:	2204      	movs	r2, #4
 800d2b6:	4951      	ldr	r1, [pc, #324]	; (800d3fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800d2b8:	18a8      	adds	r0, r5, r2
 800d2ba:	f7ff fcd5 	bl	800cc68 <memcmp>
 800d2be:	b160      	cbz	r0, 800d2da <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800d2c0:	4649      	mov	r1, r9
 800d2c2:	2206      	movs	r2, #6
 800d2c4:	4650      	mov	r0, sl
 800d2c6:	f7ff fccf 	bl	800cc68 <memcmp>
 800d2ca:	4601      	mov	r1, r0
 800d2cc:	b130      	cbz	r0, 800d2dc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800d2ce:	f1bb 0f00 	cmp.w	fp, #0
 800d2d2:	d04a      	beq.n	800d36a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800d2d4:	b005      	add	sp, #20
 800d2d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2da:	2101      	movs	r1, #1
 800d2dc:	2301      	movs	r3, #1
 800d2de:	9a03      	ldr	r2, [sp, #12]
 800d2e0:	2a10      	cmp	r2, #16
 800d2e2:	d176      	bne.n	800d3d2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800d2e4:	2f01      	cmp	r7, #1
 800d2e6:	d143      	bne.n	800d370 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800d2e8:	7873      	ldrb	r3, [r6, #1]
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	d1f2      	bne.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d2ee:	2206      	movs	r2, #6
 800d2f0:	4649      	mov	r1, r9
 800d2f2:	f105 0017 	add.w	r0, r5, #23
 800d2f6:	f7ff fcb7 	bl	800cc68 <memcmp>
 800d2fa:	2800      	cmp	r0, #0
 800d2fc:	dcea      	bgt.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d2fe:	2206      	movs	r2, #6
 800d300:	4648      	mov	r0, r9
 800d302:	f105 011d 	add.w	r1, r5, #29
 800d306:	f7ff fcaf 	bl	800cc68 <memcmp>
 800d30a:	2800      	cmp	r0, #0
 800d30c:	dce2      	bgt.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d30e:	23fe      	movs	r3, #254	; 0xfe
 800d310:	7023      	strb	r3, [r4, #0]
 800d312:	7063      	strb	r3, [r4, #1]
 800d314:	70a3      	strb	r3, [r4, #2]
 800d316:	70e3      	strb	r3, [r4, #3]
 800d318:	7123      	strb	r3, [r4, #4]
 800d31a:	7163      	strb	r3, [r4, #5]
 800d31c:	71a3      	strb	r3, [r4, #6]
 800d31e:	23aa      	movs	r3, #170	; 0xaa
 800d320:	4621      	mov	r1, r4
 800d322:	71e3      	strb	r3, [r4, #7]
 800d324:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800d328:	f108 0203 	add.w	r2, r8, #3
 800d32c:	f108 0809 	add.w	r8, r8, #9
 800d330:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d334:	3102      	adds	r1, #2
 800d336:	f060 0055 	orn	r0, r0, #85	; 0x55
 800d33a:	7188      	strb	r0, [r1, #6]
 800d33c:	7810      	ldrb	r0, [r2, #0]
 800d33e:	4542      	cmp	r2, r8
 800d340:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800d344:	71c8      	strb	r0, [r1, #7]
 800d346:	7810      	ldrb	r0, [r2, #0]
 800d348:	4403      	add	r3, r0
 800d34a:	b29b      	uxth	r3, r3
 800d34c:	d1f0      	bne.n	800d330 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc4>
 800d34e:	0a1a      	lsrs	r2, r3, #8
 800d350:	f062 0155 	orn	r1, r2, #85	; 0x55
 800d354:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800d358:	7562      	strb	r2, [r4, #21]
 800d35a:	f063 0255 	orn	r2, r3, #85	; 0x55
 800d35e:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800d362:	7521      	strb	r1, [r4, #20]
 800d364:	75a2      	strb	r2, [r4, #22]
 800d366:	75e3      	strb	r3, [r4, #23]
 800d368:	e7b4      	b.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d36a:	4659      	mov	r1, fp
 800d36c:	465b      	mov	r3, fp
 800d36e:	e7b6      	b.n	800d2de <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800d370:	2f03      	cmp	r7, #3
 800d372:	d11a      	bne.n	800d3aa <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800d374:	7daa      	ldrb	r2, [r5, #22]
 800d376:	2a00      	cmp	r2, #0
 800d378:	d1ac      	bne.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d37a:	7072      	strb	r2, [r6, #1]
 800d37c:	f1bb 0f00 	cmp.w	fp, #0
 800d380:	d0a8      	beq.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d382:	2b00      	cmp	r3, #0
 800d384:	d0a6      	beq.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d386:	2302      	movs	r3, #2
 800d388:	75e3      	strb	r3, [r4, #23]
 800d38a:	4b1d      	ldr	r3, [pc, #116]	; (800d400 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800d38c:	7622      	strb	r2, [r4, #24]
 800d38e:	681b      	ldr	r3, [r3, #0]
 800d390:	7662      	strb	r2, [r4, #25]
 800d392:	889b      	ldrh	r3, [r3, #4]
 800d394:	3b00      	subs	r3, #0
 800d396:	bf18      	it	ne
 800d398:	2301      	movne	r3, #1
 800d39a:	005b      	lsls	r3, r3, #1
 800d39c:	4630      	mov	r0, r6
 800d39e:	7663      	strb	r3, [r4, #25]
 800d3a0:	b005      	add	sp, #20
 800d3a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3a6:	f7ff bd7f 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d3aa:	2f02      	cmp	r7, #2
 800d3ac:	d192      	bne.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d3ae:	7daa      	ldrb	r2, [r5, #22]
 800d3b0:	2a00      	cmp	r2, #0
 800d3b2:	d18f      	bne.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d3b4:	2101      	movs	r1, #1
 800d3b6:	7071      	strb	r1, [r6, #1]
 800d3b8:	2b00      	cmp	r3, #0
 800d3ba:	d08b      	beq.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d3bc:	4b10      	ldr	r3, [pc, #64]	; (800d400 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800d3be:	75e7      	strb	r7, [r4, #23]
 800d3c0:	681b      	ldr	r3, [r3, #0]
 800d3c2:	7622      	strb	r2, [r4, #24]
 800d3c4:	7662      	strb	r2, [r4, #25]
 800d3c6:	889b      	ldrh	r3, [r3, #4]
 800d3c8:	3b00      	subs	r3, #0
 800d3ca:	bf18      	it	ne
 800d3cc:	2301      	movne	r3, #1
 800d3ce:	408b      	lsls	r3, r1
 800d3d0:	e7e4      	b.n	800d39c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800d3d2:	7c6a      	ldrb	r2, [r5, #17]
 800d3d4:	7cab      	ldrb	r3, [r5, #18]
 800d3d6:	f1bb 0f00 	cmp.w	fp, #0
 800d3da:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800d3de:	b29b      	uxth	r3, r3
 800d3e0:	9301      	str	r3, [sp, #4]
 800d3e2:	7dab      	ldrb	r3, [r5, #22]
 800d3e4:	bf08      	it	eq
 800d3e6:	2101      	moveq	r1, #1
 800d3e8:	9300      	str	r3, [sp, #0]
 800d3ea:	4630      	mov	r0, r6
 800d3ec:	463b      	mov	r3, r7
 800d3ee:	9a03      	ldr	r2, [sp, #12]
 800d3f0:	f7ff feca 	bl	800d188 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800d3f4:	e76e      	b.n	800d2d4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800d3f6:	bf00      	nop
 800d3f8:	2000c870 	andcs	ip, r0, r0, ror r8
 800d3fc:	080177dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800d400:	2000c86c 	andcs	ip, r0, ip, ror #16

0800d404 <RDMIdentify::RDMIdentify()>:
 800d404:	4b01      	ldr	r3, [pc, #4]	; (800d40c <RDMIdentify::RDMIdentify()+0x8>)
 800d406:	6018      	str	r0, [r3, #0]
 800d408:	4770      	bx	lr
 800d40a:	bf00      	nop
 800d40c:	2000c878 	andcs	ip, r0, r8, ror r8

0800d410 <RDMIdentify::On(rdm::identify::Mode)>:
 800d410:	4770      	bx	lr

0800d412 <RDMIdentify::Off(rdm::identify::Mode)>:
 800d412:	4770      	bx	lr

0800d414 <memcpy.constprop.0.isra.0>:
 800d414:	3801      	subs	r0, #1
 800d416:	1d0b      	adds	r3, r1, #4
 800d418:	4299      	cmp	r1, r3
 800d41a:	d100      	bne.n	800d41e <memcpy.constprop.0.isra.0+0xa>
 800d41c:	4770      	bx	lr
 800d41e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d422:	f800 2f01 	strb.w	r2, [r0, #1]!
 800d426:	e7f7      	b.n	800d418 <memcpy.constprop.0.isra.0+0x4>

0800d428 <RDMHandler::GetInterfaceList(unsigned short)>:
 800d428:	4a08      	ldr	r2, [pc, #32]	; (800d44c <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800d42a:	6883      	ldr	r3, [r0, #8]
 800d42c:	6812      	ldr	r2, [r2, #0]
 800d42e:	6892      	ldr	r2, [r2, #8]
 800d430:	0e11      	lsrs	r1, r2, #24
 800d432:	7619      	strb	r1, [r3, #24]
 800d434:	0c11      	lsrs	r1, r2, #16
 800d436:	7659      	strb	r1, [r3, #25]
 800d438:	76da      	strb	r2, [r3, #27]
 800d43a:	0a11      	lsrs	r1, r2, #8
 800d43c:	2200      	movs	r2, #0
 800d43e:	771a      	strb	r2, [r3, #28]
 800d440:	2206      	movs	r2, #6
 800d442:	7699      	strb	r1, [r3, #26]
 800d444:	775a      	strb	r2, [r3, #29]
 800d446:	75da      	strb	r2, [r3, #23]
 800d448:	f7ff bd2e 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d44c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d450 <RDMHandler::GetInterfaceName(unsigned short)>:
 800d450:	b538      	push	{r3, r4, r5, lr}
 800d452:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d456:	4604      	mov	r4, r0
 800d458:	3117      	adds	r1, #23
 800d45a:	f105 0018 	add.w	r0, r5, #24
 800d45e:	f7ff ffd9 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d462:	4a0d      	ldr	r2, [pc, #52]	; (800d498 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800d464:	f105 001b 	add.w	r0, r5, #27
 800d468:	6813      	ldr	r3, [r2, #0]
 800d46a:	33a6      	adds	r3, #166	; 0xa6
 800d46c:	f813 1b01 	ldrb.w	r1, [r3], #1
 800d470:	f800 1f01 	strb.w	r1, [r0, #1]!
 800d474:	2900      	cmp	r1, #0
 800d476:	d1f9      	bne.n	800d46c <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800d478:	6812      	ldr	r2, [r2, #0]
 800d47a:	32a6      	adds	r2, #166	; 0xa6
 800d47c:	4611      	mov	r1, r2
 800d47e:	460b      	mov	r3, r1
 800d480:	7818      	ldrb	r0, [r3, #0]
 800d482:	3101      	adds	r1, #1
 800d484:	2800      	cmp	r0, #0
 800d486:	d1fa      	bne.n	800d47e <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800d488:	1a9b      	subs	r3, r3, r2
 800d48a:	3304      	adds	r3, #4
 800d48c:	75eb      	strb	r3, [r5, #23]
 800d48e:	4620      	mov	r0, r4
 800d490:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d494:	f7ff bd08 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d498:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d49c <RDMHandler::GetHardwareAddress(unsigned short)>:
 800d49c:	b538      	push	{r3, r4, r5, lr}
 800d49e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d4a2:	4604      	mov	r4, r0
 800d4a4:	3117      	adds	r1, #23
 800d4a6:	f105 0018 	add.w	r0, r5, #24
 800d4aa:	f7ff ffb3 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d4ae:	4b06      	ldr	r3, [pc, #24]	; (800d4c8 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800d4b0:	f105 011c 	add.w	r1, r5, #28
 800d4b4:	6818      	ldr	r0, [r3, #0]
 800d4b6:	f004 f803 	bl	80114c0 <Network::MacAddressCopyTo(unsigned char*)>
 800d4ba:	230a      	movs	r3, #10
 800d4bc:	75eb      	strb	r3, [r5, #23]
 800d4be:	4620      	mov	r0, r4
 800d4c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d4c4:	f7ff bcf0 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d4c8:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d4cc <RDMHandler::GetDHCPMode(unsigned short)>:
 800d4cc:	b538      	push	{r3, r4, r5, lr}
 800d4ce:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d4d2:	4604      	mov	r4, r0
 800d4d4:	3117      	adds	r1, #23
 800d4d6:	f105 0018 	add.w	r0, r5, #24
 800d4da:	f7ff ff9b 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d4de:	4b05      	ldr	r3, [pc, #20]	; (800d4f4 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800d4e0:	4620      	mov	r0, r4
 800d4e2:	681b      	ldr	r3, [r3, #0]
 800d4e4:	795b      	ldrb	r3, [r3, #5]
 800d4e6:	772b      	strb	r3, [r5, #28]
 800d4e8:	2305      	movs	r3, #5
 800d4ea:	75eb      	strb	r3, [r5, #23]
 800d4ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d4f0:	f7ff bcda 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d4f4:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d4f8 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800d4f8:	4b10      	ldr	r3, [pc, #64]	; (800d53c <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800d4fa:	b510      	push	{r4, lr}
 800d4fc:	681b      	ldr	r3, [r3, #0]
 800d4fe:	4604      	mov	r4, r0
 800d500:	7919      	ldrb	r1, [r3, #4]
 800d502:	6842      	ldr	r2, [r0, #4]
 800d504:	b921      	cbnz	r1, 800d510 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800d506:	210b      	movs	r1, #11
 800d508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d50c:	f7ff bd90 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d510:	7ed2      	ldrb	r2, [r2, #27]
 800d512:	2a01      	cmp	r2, #1
 800d514:	d109      	bne.n	800d52a <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800d516:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800d51a:	f042 0204 	orr.w	r2, r2, #4
 800d51e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d522:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d526:	f7ff bcbf 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d52a:	b92a      	cbnz	r2, 800d538 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800d52c:	4618      	mov	r0, r3
 800d52e:	4611      	mov	r1, r2
 800d530:	f004 fa02 	bl	8011938 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d534:	4620      	mov	r0, r4
 800d536:	e7f4      	b.n	800d522 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800d538:	2106      	movs	r1, #6
 800d53a:	e7e5      	b.n	800d508 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800d53c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d540 <RDMHandler::GetNameServers(unsigned short)>:
 800d540:	6842      	ldr	r2, [r0, #4]
 800d542:	7dd2      	ldrb	r2, [r2, #23]
 800d544:	2a02      	cmp	r2, #2
 800d546:	d902      	bls.n	800d54e <RDMHandler::GetNameServers(unsigned short)+0xe>
 800d548:	2106      	movs	r1, #6
 800d54a:	f7ff bd71 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d54e:	2200      	movs	r2, #0
 800d550:	6883      	ldr	r3, [r0, #8]
 800d552:	765a      	strb	r2, [r3, #25]
 800d554:	769a      	strb	r2, [r3, #26]
 800d556:	76da      	strb	r2, [r3, #27]
 800d558:	771a      	strb	r2, [r3, #28]
 800d55a:	2205      	movs	r2, #5
 800d55c:	75da      	strb	r2, [r3, #23]
 800d55e:	f7ff bca3 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
	...

0800d564 <RDMHandler::GetZeroconf(unsigned short)>:
 800d564:	b538      	push	{r3, r4, r5, lr}
 800d566:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d56a:	4604      	mov	r4, r0
 800d56c:	3117      	adds	r1, #23
 800d56e:	f105 0018 	add.w	r0, r5, #24
 800d572:	f7ff ff4f 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d576:	4b06      	ldr	r3, [pc, #24]	; (800d590 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800d578:	681a      	ldr	r2, [r3, #0]
 800d57a:	7993      	ldrb	r3, [r2, #6]
 800d57c:	b103      	cbz	r3, 800d580 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800d57e:	79d3      	ldrb	r3, [r2, #7]
 800d580:	772b      	strb	r3, [r5, #28]
 800d582:	2305      	movs	r3, #5
 800d584:	75eb      	strb	r3, [r5, #23]
 800d586:	4620      	mov	r0, r4
 800d588:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d58c:	f7ff bc8c 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d590:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d594 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800d594:	4b10      	ldr	r3, [pc, #64]	; (800d5d8 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800d596:	b510      	push	{r4, lr}
 800d598:	681b      	ldr	r3, [r3, #0]
 800d59a:	4604      	mov	r4, r0
 800d59c:	7999      	ldrb	r1, [r3, #6]
 800d59e:	6842      	ldr	r2, [r0, #4]
 800d5a0:	b921      	cbnz	r1, 800d5ac <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800d5a2:	210b      	movs	r1, #11
 800d5a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d5a8:	f7ff bd42 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d5ac:	7ed2      	ldrb	r2, [r2, #27]
 800d5ae:	2a01      	cmp	r2, #1
 800d5b0:	d109      	bne.n	800d5c6 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800d5b2:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800d5b6:	f042 0208 	orr.w	r2, r2, #8
 800d5ba:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d5be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d5c2:	f7ff bc71 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d5c6:	b92a      	cbnz	r2, 800d5d4 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	4611      	mov	r1, r2
 800d5cc:	f004 f9b4 	bl	8011938 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d5d0:	4620      	mov	r0, r4
 800d5d2:	e7f4      	b.n	800d5be <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800d5d4:	2106      	movs	r1, #6
 800d5d6:	e7e5      	b.n	800d5a4 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800d5d8:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d5dc <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800d5dc:	4b09      	ldr	r3, [pc, #36]	; (800d604 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800d5de:	b510      	push	{r4, lr}
 800d5e0:	681b      	ldr	r3, [r3, #0]
 800d5e2:	4604      	mov	r4, r0
 800d5e4:	795a      	ldrb	r2, [r3, #5]
 800d5e6:	b922      	cbnz	r2, 800d5f2 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800d5e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d5ec:	210b      	movs	r1, #11
 800d5ee:	f7ff bd1f 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d5f2:	4618      	mov	r0, r3
 800d5f4:	f004 f952 	bl	801189c <Network::EnableDhcp()>
 800d5f8:	4620      	mov	r0, r4
 800d5fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d5fe:	f7ff bc53 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d602:	bf00      	nop
 800d604:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d608 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800d608:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d60a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d60e:	4e0f      	ldr	r6, [pc, #60]	; (800d64c <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800d610:	4604      	mov	r4, r0
 800d612:	6833      	ldr	r3, [r6, #0]
 800d614:	f105 0018 	add.w	r0, r5, #24
 800d618:	695b      	ldr	r3, [r3, #20]
 800d61a:	3117      	adds	r1, #23
 800d61c:	9301      	str	r3, [sp, #4]
 800d61e:	f7ff fef9 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d622:	a901      	add	r1, sp, #4
 800d624:	f105 001c 	add.w	r0, r5, #28
 800d628:	f7ff fef4 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d62c:	6836      	ldr	r6, [r6, #0]
 800d62e:	69f0      	ldr	r0, [r6, #28]
 800d630:	f008 fd7a 	bl	8016128 <__popcountsi2>
 800d634:	f885 0020 	strb.w	r0, [r5, #32]
 800d638:	7973      	ldrb	r3, [r6, #5]
 800d63a:	4620      	mov	r0, r4
 800d63c:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800d640:	230a      	movs	r3, #10
 800d642:	75eb      	strb	r3, [r5, #23]
 800d644:	f7ff fc30 	bl	800cea8 <RDMHandler::RespondMessageAck()>
 800d648:	b002      	add	sp, #8
 800d64a:	bd70      	pop	{r4, r5, r6, pc}
 800d64c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d650 <RDMHandler::GetStaticAddress(unsigned short)>:
 800d650:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d652:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d656:	4e0e      	ldr	r6, [pc, #56]	; (800d690 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800d658:	4604      	mov	r4, r0
 800d65a:	6833      	ldr	r3, [r6, #0]
 800d65c:	f105 0018 	add.w	r0, r5, #24
 800d660:	695b      	ldr	r3, [r3, #20]
 800d662:	3117      	adds	r1, #23
 800d664:	9301      	str	r3, [sp, #4]
 800d666:	f7ff fed5 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d66a:	a901      	add	r1, sp, #4
 800d66c:	f105 001c 	add.w	r0, r5, #28
 800d670:	f7ff fed0 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d674:	6833      	ldr	r3, [r6, #0]
 800d676:	69d8      	ldr	r0, [r3, #28]
 800d678:	f008 fd56 	bl	8016128 <__popcountsi2>
 800d67c:	2309      	movs	r3, #9
 800d67e:	f885 0020 	strb.w	r0, [r5, #32]
 800d682:	75eb      	strb	r3, [r5, #23]
 800d684:	4620      	mov	r0, r4
 800d686:	f7ff fc0f 	bl	800cea8 <RDMHandler::RespondMessageAck()>
 800d68a:	b002      	add	sp, #8
 800d68c:	bd70      	pop	{r4, r5, r6, pc}
 800d68e:	bf00      	nop
 800d690:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d694 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800d694:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d696:	6845      	ldr	r5, [r0, #4]
 800d698:	4604      	mov	r4, r0
 800d69a:	7dab      	ldrb	r3, [r5, #22]
 800d69c:	2b09      	cmp	r3, #9
 800d69e:	d005      	beq.n	800d6ac <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800d6a0:	2101      	movs	r1, #1
 800d6a2:	b003      	add	sp, #12
 800d6a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d6a8:	f7ff bcc2 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d6ac:	f105 011b 	add.w	r1, r5, #27
 800d6b0:	a801      	add	r0, sp, #4
 800d6b2:	f7ff feaf 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d6b6:	4b09      	ldr	r3, [pc, #36]	; (800d6dc <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800d6b8:	7fea      	ldrb	r2, [r5, #31]
 800d6ba:	6818      	ldr	r0, [r3, #0]
 800d6bc:	9901      	ldr	r1, [sp, #4]
 800d6be:	b12a      	cbz	r2, 800d6cc <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800d6c0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d6c4:	f1c2 0220 	rsb	r2, r2, #32
 800d6c8:	4093      	lsls	r3, r2
 800d6ca:	ba1a      	rev	r2, r3
 800d6cc:	f004 f934 	bl	8011938 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d6d0:	4620      	mov	r0, r4
 800d6d2:	f7ff fbe9 	bl	800cea8 <RDMHandler::RespondMessageAck()>
 800d6d6:	b003      	add	sp, #12
 800d6d8:	bd30      	pop	{r4, r5, pc}
 800d6da:	bf00      	nop
 800d6dc:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d6e0 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800d6e0:	4b08      	ldr	r3, [pc, #32]	; (800d704 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800d6e2:	b510      	push	{r4, lr}
 800d6e4:	4604      	mov	r4, r0
 800d6e6:	6818      	ldr	r0, [r3, #0]
 800d6e8:	f004 f933 	bl	8011952 <Network::ApplyQueuedConfig()>
 800d6ec:	b120      	cbz	r0, 800d6f8 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800d6ee:	4620      	mov	r0, r4
 800d6f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6f4:	f7ff bbd8 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d6f8:	4620      	mov	r0, r4
 800d6fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d6fe:	2101      	movs	r1, #1
 800d700:	f7ff bc96 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d704:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d708 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800d708:	4b0c      	ldr	r3, [pc, #48]	; (800d73c <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800d70a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d70c:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d710:	681b      	ldr	r3, [r3, #0]
 800d712:	4604      	mov	r4, r0
 800d714:	699b      	ldr	r3, [r3, #24]
 800d716:	f105 0018 	add.w	r0, r5, #24
 800d71a:	3117      	adds	r1, #23
 800d71c:	9301      	str	r3, [sp, #4]
 800d71e:	f7ff fe79 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d722:	a901      	add	r1, sp, #4
 800d724:	f105 001c 	add.w	r0, r5, #28
 800d728:	f7ff fe74 	bl	800d414 <memcpy.constprop.0.isra.0>
 800d72c:	2308      	movs	r3, #8
 800d72e:	4620      	mov	r0, r4
 800d730:	75eb      	strb	r3, [r5, #23]
 800d732:	f7ff fbb9 	bl	800cea8 <RDMHandler::RespondMessageAck()>
 800d736:	b003      	add	sp, #12
 800d738:	bd30      	pop	{r4, r5, pc}
 800d73a:	bf00      	nop
 800d73c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d740 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800d740:	210b      	movs	r1, #11
 800d742:	f7ff bc75 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d748 <RDMHandler::GetHostName(unsigned short)>:
 800d748:	4b0a      	ldr	r3, [pc, #40]	; (800d774 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800d74a:	b510      	push	{r4, lr}
 800d74c:	6819      	ldr	r1, [r3, #0]
 800d74e:	4604      	mov	r4, r0
 800d750:	3120      	adds	r1, #32
 800d752:	460b      	mov	r3, r1
 800d754:	461a      	mov	r2, r3
 800d756:	7810      	ldrb	r0, [r2, #0]
 800d758:	3301      	adds	r3, #1
 800d75a:	2800      	cmp	r0, #0
 800d75c:	d1fa      	bne.n	800d754 <RDMHandler::GetHostName(unsigned short)+0xc>
 800d75e:	1a52      	subs	r2, r2, r1
 800d760:	4620      	mov	r0, r4
 800d762:	b292      	uxth	r2, r2
 800d764:	f7ff fb48 	bl	800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>
 800d768:	4620      	mov	r0, r4
 800d76a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d76e:	f7ff bb9b 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d772:	bf00      	nop
 800d774:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d778 <RDMHandler::SetHostName(bool, unsigned short)>:
 800d778:	b510      	push	{r4, lr}
 800d77a:	6841      	ldr	r1, [r0, #4]
 800d77c:	4604      	mov	r4, r0
 800d77e:	7d8b      	ldrb	r3, [r1, #22]
 800d780:	2b3f      	cmp	r3, #63	; 0x3f
 800d782:	d904      	bls.n	800d78e <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800d784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d788:	2102      	movs	r1, #2
 800d78a:	f7ff bc51 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
 800d78e:	2200      	movs	r2, #0
 800d790:	440b      	add	r3, r1
 800d792:	75da      	strb	r2, [r3, #23]
 800d794:	4b04      	ldr	r3, [pc, #16]	; (800d7a8 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800d796:	3117      	adds	r1, #23
 800d798:	6818      	ldr	r0, [r3, #0]
 800d79a:	f004 f83d 	bl	8011818 <Network::SetHostName(char const*)>
 800d79e:	4620      	mov	r0, r4
 800d7a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d7a4:	f7ff bb80 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d7a8:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d7ac <RDMHandler::GetDomainName(unsigned short)>:
 800d7ac:	4b0a      	ldr	r3, [pc, #40]	; (800d7d8 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800d7ae:	b510      	push	{r4, lr}
 800d7b0:	6819      	ldr	r1, [r3, #0]
 800d7b2:	4604      	mov	r4, r0
 800d7b4:	3160      	adds	r1, #96	; 0x60
 800d7b6:	460b      	mov	r3, r1
 800d7b8:	461a      	mov	r2, r3
 800d7ba:	7810      	ldrb	r0, [r2, #0]
 800d7bc:	3301      	adds	r3, #1
 800d7be:	2800      	cmp	r0, #0
 800d7c0:	d1fa      	bne.n	800d7b8 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800d7c2:	1a52      	subs	r2, r2, r1
 800d7c4:	4620      	mov	r0, r4
 800d7c6:	b292      	uxth	r2, r2
 800d7c8:	f7ff fb16 	bl	800cdf8 <RDMHandler::HandleString(char const*, unsigned int)>
 800d7cc:	4620      	mov	r0, r4
 800d7ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d7d2:	f7ff bb69 	b.w	800cea8 <RDMHandler::RespondMessageAck()>
 800d7d6:	bf00      	nop
 800d7d8:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

0800d7dc <RDMHandler::SetDomainName(bool, unsigned short)>:
 800d7dc:	210b      	movs	r1, #11
 800d7de:	f7ff bc27 	b.w	800d030 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d7e4 <RDMDevice::RDMDevice()>:
 800d7e4:	4a33      	ldr	r2, [pc, #204]	; (800d8b4 <RDMDevice::RDMDevice()+0xd0>)
 800d7e6:	2300      	movs	r3, #0
 800d7e8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d7ea:	4604      	mov	r4, r0
 800d7ec:	4611      	mov	r1, r2
 800d7ee:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800d7f2:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800d7f6:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800d7fa:	6743      	str	r3, [r0, #116]	; 0x74
 800d7fc:	4613      	mov	r3, r2
 800d7fe:	7818      	ldrb	r0, [r3, #0]
 800d800:	3201      	adds	r2, #1
 800d802:	2800      	cmp	r0, #0
 800d804:	d1fa      	bne.n	800d7fc <RDMDevice::RDMDevice()+0x18>
 800d806:	1a5b      	subs	r3, r3, r1
 800d808:	2b20      	cmp	r3, #32
 800d80a:	bf28      	it	cs
 800d80c:	2320      	movcs	r3, #32
 800d80e:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800d812:	4629      	mov	r1, r5
 800d814:	461a      	mov	r2, r3
 800d816:	4827      	ldr	r0, [pc, #156]	; (800d8b4 <RDMDevice::RDMDevice()+0xd0>)
 800d818:	3a01      	subs	r2, #1
 800d81a:	d23b      	bcs.n	800d894 <RDMDevice::RDMDevice()+0xb0>
 800d81c:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d820:	4b25      	ldr	r3, [pc, #148]	; (800d8b8 <RDMDevice::RDMDevice()+0xd4>)
 800d822:	4669      	mov	r1, sp
 800d824:	781a      	ldrb	r2, [r3, #0]
 800d826:	7022      	strb	r2, [r4, #0]
 800d828:	785b      	ldrb	r3, [r3, #1]
 800d82a:	7063      	strb	r3, [r4, #1]
 800d82c:	4b23      	ldr	r3, [pc, #140]	; (800d8bc <RDMDevice::RDMDevice()+0xd8>)
 800d82e:	6818      	ldr	r0, [r3, #0]
 800d830:	f003 fe46 	bl	80114c0 <Network::MacAddressCopyTo(unsigned char*)>
 800d834:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800d838:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800d83c:	70a3      	strb	r3, [r4, #2]
 800d83e:	7263      	strb	r3, [r4, #9]
 800d840:	4b1f      	ldr	r3, [pc, #124]	; (800d8c0 <RDMDevice::RDMDevice()+0xdc>)
 800d842:	70e2      	strb	r2, [r4, #3]
 800d844:	7222      	strb	r2, [r4, #8]
 800d846:	461a      	mov	r2, r3
 800d848:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800d84c:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800d850:	7121      	strb	r1, [r4, #4]
 800d852:	7160      	strb	r0, [r4, #5]
 800d854:	71a0      	strb	r0, [r4, #6]
 800d856:	71e1      	strb	r1, [r4, #7]
 800d858:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d85c:	2900      	cmp	r1, #0
 800d85e:	d1fb      	bne.n	800d858 <RDMDevice::RDMDevice()+0x74>
 800d860:	1a9b      	subs	r3, r3, r2
 800d862:	2b20      	cmp	r3, #32
 800d864:	bf28      	it	cs
 800d866:	2320      	movcs	r3, #32
 800d868:	461a      	mov	r2, r3
 800d86a:	4915      	ldr	r1, [pc, #84]	; (800d8c0 <RDMDevice::RDMDevice()+0xdc>)
 800d86c:	3a01      	subs	r2, #1
 800d86e:	d216      	bcs.n	800d89e <RDMDevice::RDMDevice()+0xba>
 800d870:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d874:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800d878:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d87a:	2315      	movs	r3, #21
 800d87c:	4a11      	ldr	r2, [pc, #68]	; (800d8c4 <RDMDevice::RDMDevice()+0xe0>)
 800d87e:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800d882:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800d886:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800d88a:	4299      	cmp	r1, r3
 800d88c:	d10c      	bne.n	800d8a8 <RDMDevice::RDMDevice()+0xc4>
 800d88e:	4620      	mov	r0, r4
 800d890:	b002      	add	sp, #8
 800d892:	bd70      	pop	{r4, r5, r6, pc}
 800d894:	f810 6b01 	ldrb.w	r6, [r0], #1
 800d898:	f801 6f01 	strb.w	r6, [r1, #1]!
 800d89c:	e7bc      	b.n	800d818 <RDMDevice::RDMDevice()+0x34>
 800d89e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800d8a2:	f805 0f01 	strb.w	r0, [r5, #1]!
 800d8a6:	e7e1      	b.n	800d86c <RDMDevice::RDMDevice()+0x88>
 800d8a8:	f812 0b01 	ldrb.w	r0, [r2], #1
 800d8ac:	f803 0f01 	strb.w	r0, [r3, #1]!
 800d8b0:	e7eb      	b.n	800d88a <RDMDevice::RDMDevice()+0xa6>
 800d8b2:	bf00      	nop
 800d8b4:	08017ac5 	stmdaeq	r1, {r0, r2, r6, r7, r9, fp, ip, sp, lr}
 800d8b8:	08017ac3 	stmdaeq	r1, {r0, r1, r6, r7, r9, fp, ip, sp, lr}
 800d8bc:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 800d8c0:	080179c4 	stmdaeq	r1, {r2, r6, r7, r8, fp, ip, sp, lr}
 800d8c4:	08017aad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, fp, ip, sp, lr}

0800d8c8 <RDMDevice::Print()>:
 800d8c8:	b513      	push	{r0, r1, r4, lr}
 800d8ca:	4604      	mov	r4, r0
 800d8cc:	4818      	ldr	r0, [pc, #96]	; (800d930 <RDMDevice::Print()+0x68>)
 800d8ce:	f7fb fe9f 	bl	8009610 <printf>
 800d8d2:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800d8d6:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800d8da:	4816      	ldr	r0, [pc, #88]	; (800d934 <RDMDevice::Print()+0x6c>)
 800d8dc:	f7fb fe98 	bl	8009610 <printf>
 800d8e0:	7862      	ldrb	r2, [r4, #1]
 800d8e2:	7821      	ldrb	r1, [r4, #0]
 800d8e4:	4814      	ldr	r0, [pc, #80]	; (800d938 <RDMDevice::Print()+0x70>)
 800d8e6:	f7fb fe93 	bl	8009610 <printf>
 800d8ea:	79a3      	ldrb	r3, [r4, #6]
 800d8ec:	7a22      	ldrb	r2, [r4, #8]
 800d8ee:	7a61      	ldrb	r1, [r4, #9]
 800d8f0:	9300      	str	r3, [sp, #0]
 800d8f2:	4812      	ldr	r0, [pc, #72]	; (800d93c <RDMDevice::Print()+0x74>)
 800d8f4:	79e3      	ldrb	r3, [r4, #7]
 800d8f6:	f7fb fe8b 	bl	8009610 <printf>
 800d8fa:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800d8fe:	f104 020a 	add.w	r2, r4, #10
 800d902:	480f      	ldr	r0, [pc, #60]	; (800d940 <RDMDevice::Print()+0x78>)
 800d904:	f7fb fe84 	bl	8009610 <printf>
 800d908:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800d90c:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800d910:	0a09      	lsrs	r1, r1, #8
 800d912:	480c      	ldr	r0, [pc, #48]	; (800d944 <RDMDevice::Print()+0x7c>)
 800d914:	f7fb fe7c 	bl	8009610 <printf>
 800d918:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800d91c:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800d920:	4809      	ldr	r0, [pc, #36]	; (800d948 <RDMDevice::Print()+0x80>)
 800d922:	0a09      	lsrs	r1, r1, #8
 800d924:	b002      	add	sp, #8
 800d926:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d92a:	f7fb be71 	b.w	8009610 <printf>
 800d92e:	bf00      	nop
 800d930:	080179d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, fp, ip, sp, lr}
 800d934:	080179f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, fp, ip, sp, lr}
 800d938:	08017a0e 	stmdaeq	r1, {r1, r2, r3, r9, fp, ip, sp, lr}
 800d93c:	08017a2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, fp, ip, sp, lr}
 800d940:	08017a54 	stmdaeq	r1, {r2, r4, r6, r9, fp, ip, sp, lr}
 800d944:	08017a6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, fp, ip, sp, lr}
 800d948:	08017a8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, fp, ip, sp, lr}

0800d94c <uuid_unparse_x>:
 800d94c:	4603      	mov	r3, r0
 800d94e:	b530      	push	{r4, r5, lr}
 800d950:	4608      	mov	r0, r1
 800d952:	4611      	mov	r1, r2
 800d954:	681a      	ldr	r2, [r3, #0]
 800d956:	b08f      	sub	sp, #60	; 0x3c
 800d958:	ba12      	rev	r2, r2
 800d95a:	920a      	str	r2, [sp, #40]	; 0x28
 800d95c:	889a      	ldrh	r2, [r3, #4]
 800d95e:	891c      	ldrh	r4, [r3, #8]
 800d960:	ba52      	rev16	r2, r2
 800d962:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d966:	88da      	ldrh	r2, [r3, #6]
 800d968:	ba64      	rev16	r4, r4
 800d96a:	ba52      	rev16	r2, r2
 800d96c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d970:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800d974:	f103 020a 	add.w	r2, r3, #10
 800d978:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800d97c:	3310      	adds	r3, #16
 800d97e:	4293      	cmp	r3, r2
 800d980:	d122      	bne.n	800d9c8 <uuid_unparse_x+0x7c>
 800d982:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800d986:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800d98a:	9208      	str	r2, [sp, #32]
 800d98c:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800d990:	0a1b      	lsrs	r3, r3, #8
 800d992:	9207      	str	r2, [sp, #28]
 800d994:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800d998:	9301      	str	r3, [sp, #4]
 800d99a:	9206      	str	r2, [sp, #24]
 800d99c:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800d9a0:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d9a4:	9205      	str	r2, [sp, #20]
 800d9a6:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800d9aa:	9300      	str	r3, [sp, #0]
 800d9ac:	9204      	str	r2, [sp, #16]
 800d9ae:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800d9b2:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800d9b6:	9203      	str	r2, [sp, #12]
 800d9b8:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800d9bc:	9202      	str	r2, [sp, #8]
 800d9be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d9c0:	f7fb fe36 	bl	8009630 <sprintf>
 800d9c4:	b00f      	add	sp, #60	; 0x3c
 800d9c6:	bd30      	pop	{r4, r5, pc}
 800d9c8:	f812 5b01 	ldrb.w	r5, [r2], #1
 800d9cc:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d9d0:	e7d5      	b.n	800d97e <uuid_unparse_x+0x32>
	...

0800d9d4 <uuid_unparse>:
 800d9d4:	4a01      	ldr	r2, [pc, #4]	; (800d9dc <uuid_unparse+0x8>)
 800d9d6:	f7ff bfb9 	b.w	800d94c <uuid_unparse_x>
 800d9da:	bf00      	nop
 800d9dc:	08017ae1 	stmdaeq	r1, {r0, r5, r6, r7, r9, fp, ip, sp, lr}

0800d9e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800d9e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d9e2:	4604      	mov	r4, r0
 800d9e4:	460e      	mov	r6, r1
 800d9e6:	4611      	mov	r1, r2
 800d9e8:	4617      	mov	r7, r2
 800d9ea:	461d      	mov	r5, r3
 800d9ec:	f000 fdae 	bl	800e54c <PixelConfiguration::Validate(unsigned int&)>
 800d9f0:	7d62      	ldrb	r2, [r4, #21]
 800d9f2:	b94a      	cbnz	r2, 800da08 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800d9f4:	6823      	ldr	r3, [r4, #0]
 800d9f6:	b11b      	cbz	r3, 800da00 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800d9f8:	3b0b      	subs	r3, #11
 800d9fa:	2b01      	cmp	r3, #1
 800d9fc:	bf88      	it	hi
 800d9fe:	6022      	strhi	r2, [r4, #0]
 800da00:	4639      	mov	r1, r7
 800da02:	4620      	mov	r0, r4
 800da04:	f000 fda2 	bl	800e54c <PixelConfiguration::Validate(unsigned int&)>
 800da08:	6823      	ldr	r3, [r4, #0]
 800da0a:	2b07      	cmp	r3, #7
 800da0c:	bf15      	itete	ne
 800da0e:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800da12:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800da16:	23aa      	movne	r3, #170	; 0xaa
 800da18:	2380      	moveq	r3, #128	; 0x80
 800da1a:	bf14      	ite	ne
 800da1c:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800da20:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800da24:	e9c5 3100 	strd	r3, r1, [r5]
 800da28:	6a21      	ldr	r1, [r4, #32]
 800da2a:	60aa      	str	r2, [r5, #8]
 800da2c:	6862      	ldr	r2, [r4, #4]
 800da2e:	b109      	cbz	r1, 800da34 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800da30:	4291      	cmp	r1, r2
 800da32:	d900      	bls.n	800da36 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800da34:	6222      	str	r2, [r4, #32]
 800da36:	6a21      	ldr	r1, [r4, #32]
 800da38:	69e0      	ldr	r0, [r4, #28]
 800da3a:	fbb2 f2f1 	udiv	r2, r2, r1
 800da3e:	3301      	adds	r3, #1
 800da40:	6262      	str	r2, [r4, #36]	; 0x24
 800da42:	42b0      	cmp	r0, r6
 800da44:	fbb2 f2f3 	udiv	r2, r2, r3
 800da48:	bf28      	it	cs
 800da4a:	4630      	movcs	r0, r6
 800da4c:	1c53      	adds	r3, r2, #1
 800da4e:	2e01      	cmp	r6, #1
 800da50:	62a3      	str	r3, [r4, #40]	; 0x28
 800da52:	bf1c      	itt	ne
 800da54:	4343      	mulne	r3, r0
 800da56:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800da5a:	61e0      	str	r0, [r4, #28]
 800da5c:	60ea      	str	r2, [r5, #12]
 800da5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800da60 <PixelDmxConfiguration::Print()>:
 800da60:	b510      	push	{r4, lr}
 800da62:	4604      	mov	r4, r0
 800da64:	f000 fe08 	bl	800e678 <PixelConfiguration::Print()>
 800da68:	4806      	ldr	r0, [pc, #24]	; (800da84 <PixelDmxConfiguration::Print()+0x24>)
 800da6a:	f7fb fdd1 	bl	8009610 <printf>
 800da6e:	69e1      	ldr	r1, [r4, #28]
 800da70:	4805      	ldr	r0, [pc, #20]	; (800da88 <PixelDmxConfiguration::Print()+0x28>)
 800da72:	f7fb fdcd 	bl	8009610 <printf>
 800da76:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800da7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da7e:	4803      	ldr	r0, [pc, #12]	; (800da8c <PixelDmxConfiguration::Print()+0x2c>)
 800da80:	f7fb bdc6 	b.w	8009610 <printf>
 800da84:	08017b12 	stmdaeq	r1, {r1, r4, r8, r9, fp, ip, sp, lr}
 800da88:	08017b2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, fp, ip, sp, lr}
 800da8c:	08017b3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, fp, ip, sp, lr}

0800da90 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800da90:	2000      	movs	r0, #0
 800da92:	4770      	bx	lr

0800da94 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800da94:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800da98:	4770      	bx	lr

0800da9a <WS28xxDmxMulti::GetDmxFootprint()>:
 800da9a:	2000      	movs	r0, #0
 800da9c:	4770      	bx	lr

0800da9e <WS28xxDmxMulti::Start(unsigned int)>:
 800da9e:	b538      	push	{r3, r4, r5, lr}
 800daa0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800daa2:	4604      	mov	r4, r0
 800daa4:	460d      	mov	r5, r1
 800daa6:	b923      	cbnz	r3, 800dab2 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800daa8:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800daaa:	b110      	cbz	r0, 800dab2 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800daac:	6803      	ldr	r3, [r0, #0]
 800daae:	689b      	ldr	r3, [r3, #8]
 800dab0:	4798      	blx	r3
 800dab2:	2301      	movs	r3, #1
 800dab4:	fa03 f105 	lsl.w	r1, r3, r5
 800dab8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800daba:	430b      	orrs	r3, r1
 800dabc:	6523      	str	r3, [r4, #80]	; 0x50
 800dabe:	bd38      	pop	{r3, r4, r5, pc}

0800dac0 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800dac0:	b538      	push	{r3, r4, r5, lr}
 800dac2:	4b06      	ldr	r3, [pc, #24]	; (800dadc <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800dac4:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800dac6:	4604      	mov	r4, r0
 800dac8:	6003      	str	r3, [r0, #0]
 800daca:	b12d      	cbz	r5, 800dad8 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800dacc:	4628      	mov	r0, r5
 800dace:	f001 fa47 	bl	800ef60 <WS28xxMulti::~WS28xxMulti()>
 800dad2:	4628      	mov	r0, r5
 800dad4:	f006 f878 	bl	8013bc8 <operator delete(void*)>
 800dad8:	4620      	mov	r0, r4
 800dada:	bd38      	pop	{r3, r4, r5, pc}
 800dadc:	08017b68 	stmdaeq	r1, {r3, r5, r6, r8, r9, fp, ip, sp, lr}

0800dae0 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800dae0:	b510      	push	{r4, lr}
 800dae2:	4604      	mov	r4, r0
 800dae4:	f7ff ffec 	bl	800dac0 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800dae8:	4620      	mov	r0, r4
 800daea:	f006 f86d 	bl	8013bc8 <operator delete(void*)>
 800daee:	4620      	mov	r0, r4
 800daf0:	bd10      	pop	{r4, pc}

0800daf2 <WS28xxDmxMulti::Blackout(bool)>:
 800daf2:	b538      	push	{r3, r4, r5, lr}
 800daf4:	4604      	mov	r4, r0
 800daf6:	460d      	mov	r5, r1
 800daf8:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800dafc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800dafe:	f001 fdef 	bl	800f6e0 <WS28xxMulti::IsUpdating()>
 800db02:	2800      	cmp	r0, #0
 800db04:	d1fa      	bne.n	800dafc <WS28xxDmxMulti::Blackout(bool)+0xa>
 800db06:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800db08:	b11d      	cbz	r5, 800db12 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800db0a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db0e:	f001 bd23 	b.w	800f558 <WS28xxMulti::Blackout()>
 800db12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800db16:	f001 bca3 	b.w	800f460 <WS28xxMulti::Update()>

0800db1a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800db1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db1e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800db20:	b089      	sub	sp, #36	; 0x24
 800db22:	4698      	mov	r8, r3
 800db24:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800db28:	460b      	mov	r3, r1
 800db2a:	fbb1 f1f4 	udiv	r1, r1, r4
 800db2e:	fb04 3411 	mls	r4, r4, r1, r3
 800db32:	4605      	mov	r5, r0
 800db34:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800db36:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800db38:	2c03      	cmp	r4, #3
 800db3a:	d835      	bhi.n	800dba8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800db3c:	e8df f004 	tbb	[pc, r4]
 800db40:	34322d02 	ldrtcc	r2, [r2], #-3330	; 0xfffff2fe
 800db44:	fbb8 f3f3 	udiv	r3, r8, r3
 800db48:	429e      	cmp	r6, r3
 800db4a:	bf28      	it	cs
 800db4c:	461e      	movcs	r6, r3
 800db4e:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800db50:	9107      	str	r1, [sp, #28]
 800db52:	f001 fdc5 	bl	800f6e0 <WS28xxMulti::IsUpdating()>
 800db56:	9907      	ldr	r1, [sp, #28]
 800db58:	2800      	cmp	r0, #0
 800db5a:	d1f8      	bne.n	800db4e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x34>
 800db5c:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800db5e:	f8d5 a024 	ldr.w	sl, [r5, #36]	; 0x24
 800db62:	2b03      	cmp	r3, #3
 800db64:	fb0a f704 	mul.w	r7, sl, r4
 800db68:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800db6c:	d040      	beq.n	800dbf0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd6>
 800db6e:	42b4      	cmp	r4, r6
 800db70:	d240      	bcs.n	800dbf4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800db72:	9b05      	ldr	r3, [sp, #20]
 800db74:	eba9 0303 	sub.w	r3, r9, r3
 800db78:	4598      	cmp	r8, r3
 800db7a:	d93b      	bls.n	800dbf4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800db7c:	f04f 0b00 	mov.w	fp, #0
 800db80:	f899 f000 	pld	[r9]
 800db84:	fa1f f28b 	uxth.w	r2, fp
 800db88:	4552      	cmp	r2, sl
 800db8a:	f10b 0b01 	add.w	fp, fp, #1
 800db8e:	d33b      	bcc.n	800dc08 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xee>
 800db90:	3401      	adds	r4, #1
 800db92:	f109 0904 	add.w	r9, r9, #4
 800db96:	4457      	add	r7, sl
 800db98:	e7e9      	b.n	800db6e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x54>
 800db9a:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800db9c:	fbb8 f3f3 	udiv	r3, r8, r3
 800dba0:	4423      	add	r3, r4
 800dba2:	e7d1      	b.n	800db48 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2e>
 800dba4:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800dba6:	e7f9      	b.n	800db9c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800dba8:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800dbaa:	e7f7      	b.n	800db9c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800dbac:	f899 3002 	ldrb.w	r3, [r9, #2]
 800dbb0:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800dbb2:	9301      	str	r3, [sp, #4]
 800dbb4:	f899 3001 	ldrb.w	r3, [r9, #1]
 800dbb8:	443a      	add	r2, r7
 800dbba:	9300      	str	r3, [sp, #0]
 800dbbc:	f899 3000 	ldrb.w	r3, [r9]
 800dbc0:	9107      	str	r1, [sp, #28]
 800dbc2:	f001 fe0f 	bl	800f7e4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800dbc6:	9907      	ldr	r1, [sp, #28]
 800dbc8:	e008      	b.n	800dbdc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800dbca:	9b05      	ldr	r3, [sp, #20]
 800dbcc:	eba9 0303 	sub.w	r3, r9, r3
 800dbd0:	4598      	cmp	r8, r3
 800dbd2:	d90f      	bls.n	800dbf4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800dbd4:	f04f 0b00 	mov.w	fp, #0
 800dbd8:	f899 f000 	pld	[r9]
 800dbdc:	fa1f f28b 	uxth.w	r2, fp
 800dbe0:	4552      	cmp	r2, sl
 800dbe2:	f10b 0b01 	add.w	fp, fp, #1
 800dbe6:	d3e1      	bcc.n	800dbac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800dbe8:	3401      	adds	r4, #1
 800dbea:	f109 0903 	add.w	r9, r9, #3
 800dbee:	4457      	add	r7, sl
 800dbf0:	42b4      	cmp	r4, r6
 800dbf2:	d3ea      	bcc.n	800dbca <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xb0>
 800dbf4:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800dbf6:	9a06      	ldr	r2, [sp, #24]
 800dbf8:	4293      	cmp	r3, r2
 800dbfa:	d117      	bne.n	800dc2c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x112>
 800dbfc:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800dbfe:	b009      	add	sp, #36	; 0x24
 800dc00:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc04:	f001 bc2c 	b.w	800f460 <WS28xxMulti::Update()>
 800dc08:	f899 3003 	ldrb.w	r3, [r9, #3]
 800dc0c:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800dc0e:	9302      	str	r3, [sp, #8]
 800dc10:	f899 3002 	ldrb.w	r3, [r9, #2]
 800dc14:	443a      	add	r2, r7
 800dc16:	9301      	str	r3, [sp, #4]
 800dc18:	f899 3001 	ldrb.w	r3, [r9, #1]
 800dc1c:	9107      	str	r1, [sp, #28]
 800dc1e:	9300      	str	r3, [sp, #0]
 800dc20:	f899 3000 	ldrb.w	r3, [r9]
 800dc24:	f001 fe66 	bl	800f8f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800dc28:	9907      	ldr	r1, [sp, #28]
 800dc2a:	e7ab      	b.n	800db84 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800dc2c:	b009      	add	sp, #36	; 0x24
 800dc2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dc32 <WS28xxDmxMulti::FullOn()>:
 800dc32:	b510      	push	{r4, lr}
 800dc34:	4604      	mov	r4, r0
 800dc36:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800dc38:	f001 fd52 	bl	800f6e0 <WS28xxMulti::IsUpdating()>
 800dc3c:	2800      	cmp	r0, #0
 800dc3e:	d1fa      	bne.n	800dc36 <WS28xxDmxMulti::FullOn()+0x4>
 800dc40:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800dc42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dc46:	f001 bceb 	b.w	800f620 <WS28xxMulti::FullOn()>

0800dc4a <WS28xxDmxMulti::Print()>:
 800dc4a:	3004      	adds	r0, #4
 800dc4c:	f7ff bf08 	b.w	800da60 <PixelDmxConfiguration::Print()>

0800dc50 <WS28xxDmxMulti::Stop(unsigned int)>:
 800dc50:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800dc52:	fa23 f201 	lsr.w	r2, r3, r1
 800dc56:	07d2      	lsls	r2, r2, #31
 800dc58:	bf41      	itttt	mi
 800dc5a:	2201      	movmi	r2, #1
 800dc5c:	408a      	lslmi	r2, r1
 800dc5e:	4393      	bicmi	r3, r2
 800dc60:	6503      	strmi	r3, [r0, #80]	; 0x50
 800dc62:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800dc64:	b923      	cbnz	r3, 800dc70 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800dc66:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800dc68:	b110      	cbz	r0, 800dc70 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800dc6a:	6803      	ldr	r3, [r0, #0]
 800dc6c:	68db      	ldr	r3, [r3, #12]
 800dc6e:	4718      	bx	r3
 800dc70:	4770      	bx	lr
	...

0800dc74 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800dc74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dc76:	4604      	mov	r4, r0
 800dc78:	460d      	mov	r5, r1
 800dc7a:	4b14      	ldr	r3, [pc, #80]	; (800dccc <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800dc7c:	4606      	mov	r6, r0
 800dc7e:	f844 3b04 	str.w	r3, [r4], #4
 800dc82:	460f      	mov	r7, r1
 800dc84:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dc86:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dc88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dc8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800dc8c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800dc90:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800dc94:	2300      	movs	r3, #0
 800dc96:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800dc9a:	2108      	movs	r1, #8
 800dc9c:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800dca0:	6533      	str	r3, [r6, #80]	; 0x50
 800dca2:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800dca6:	1d30      	adds	r0, r6, #4
 800dca8:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800dcac:	f7ff fe98 	bl	800d9e0 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800dcb0:	2020      	movs	r0, #32
 800dcb2:	f005 ff8d 	bl	8013bd0 <operator new(unsigned int)>
 800dcb6:	4604      	mov	r4, r0
 800dcb8:	4639      	mov	r1, r7
 800dcba:	f001 fb7f 	bl	800f3bc <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800dcbe:	4620      	mov	r0, r4
 800dcc0:	64b4      	str	r4, [r6, #72]	; 0x48
 800dcc2:	f001 fc49 	bl	800f558 <WS28xxMulti::Blackout()>
 800dcc6:	4630      	mov	r0, r6
 800dcc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dcca:	bf00      	nop
 800dccc:	08017b68 	stmdaeq	r1, {r3, r5, r6, r8, r9, fp, ip, sp, lr}

0800dcd0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800dcd0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dcd2:	88c6      	ldrh	r6, [r0, #6]
 800dcd4:	8885      	ldrh	r5, [r0, #4]
 800dcd6:	42ae      	cmp	r6, r5
 800dcd8:	d216      	bcs.n	800dd08 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800dcda:	4604      	mov	r4, r0
 800dcdc:	6800      	ldr	r0, [r0, #0]
 800dcde:	1bad      	subs	r5, r5, r6
 800dce0:	4430      	add	r0, r6
 800dce2:	7a26      	ldrb	r6, [r4, #8]
 800dce4:	b923      	cbnz	r3, 800dcf0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800dce6:	b926      	cbnz	r6, 800dcf2 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800dce8:	9200      	str	r2, [sp, #0]
 800dcea:	460b      	mov	r3, r1
 800dcec:	4a09      	ldr	r2, [pc, #36]	; (800dd14 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800dcee:	e003      	b.n	800dcf8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800dcf0:	b166      	cbz	r6, 800dd0c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800dcf2:	460b      	mov	r3, r1
 800dcf4:	9200      	str	r2, [sp, #0]
 800dcf6:	4a08      	ldr	r2, [pc, #32]	; (800dd18 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800dcf8:	4629      	mov	r1, r5
 800dcfa:	f7fb fcb1 	bl	8009660 <snprintf>
 800dcfe:	4285      	cmp	r5, r0
 800dd00:	bfa2      	ittt	ge
 800dd02:	88e3      	ldrhge	r3, [r4, #6]
 800dd04:	181b      	addge	r3, r3, r0
 800dd06:	80e3      	strhge	r3, [r4, #6]
 800dd08:	b002      	add	sp, #8
 800dd0a:	bd70      	pop	{r4, r5, r6, pc}
 800dd0c:	9200      	str	r2, [sp, #0]
 800dd0e:	460b      	mov	r3, r1
 800dd10:	4a02      	ldr	r2, [pc, #8]	; (800dd1c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800dd12:	e7f1      	b.n	800dcf8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800dd14:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 800dd18:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800dd1c:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}

0800dd20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800dd20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dd22:	88c6      	ldrh	r6, [r0, #6]
 800dd24:	8885      	ldrh	r5, [r0, #4]
 800dd26:	42ae      	cmp	r6, r5
 800dd28:	d216      	bcs.n	800dd58 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800dd2a:	4604      	mov	r4, r0
 800dd2c:	6800      	ldr	r0, [r0, #0]
 800dd2e:	1bad      	subs	r5, r5, r6
 800dd30:	4430      	add	r0, r6
 800dd32:	7a26      	ldrb	r6, [r4, #8]
 800dd34:	b923      	cbnz	r3, 800dd40 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800dd36:	b926      	cbnz	r6, 800dd42 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800dd38:	9200      	str	r2, [sp, #0]
 800dd3a:	460b      	mov	r3, r1
 800dd3c:	4a09      	ldr	r2, [pc, #36]	; (800dd64 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800dd3e:	e003      	b.n	800dd48 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800dd40:	b166      	cbz	r6, 800dd5c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800dd42:	460b      	mov	r3, r1
 800dd44:	9200      	str	r2, [sp, #0]
 800dd46:	4a08      	ldr	r2, [pc, #32]	; (800dd68 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800dd48:	4629      	mov	r1, r5
 800dd4a:	f7fb fc89 	bl	8009660 <snprintf>
 800dd4e:	4285      	cmp	r5, r0
 800dd50:	bfa2      	ittt	ge
 800dd52:	88e3      	ldrhge	r3, [r4, #6]
 800dd54:	181b      	addge	r3, r3, r0
 800dd56:	80e3      	strhge	r3, [r4, #6]
 800dd58:	b002      	add	sp, #8
 800dd5a:	bd70      	pop	{r4, r5, r6, pc}
 800dd5c:	9200      	str	r2, [sp, #0]
 800dd5e:	460b      	mov	r3, r1
 800dd60:	4a02      	ldr	r2, [pc, #8]	; (800dd6c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800dd62:	e7f1      	b.n	800dd48 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800dd64:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 800dd68:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800dd6c:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}

0800dd70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800dd70:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dd72:	88c6      	ldrh	r6, [r0, #6]
 800dd74:	8885      	ldrh	r5, [r0, #4]
 800dd76:	42ae      	cmp	r6, r5
 800dd78:	d216      	bcs.n	800dda8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800dd7a:	4604      	mov	r4, r0
 800dd7c:	6800      	ldr	r0, [r0, #0]
 800dd7e:	1bad      	subs	r5, r5, r6
 800dd80:	4430      	add	r0, r6
 800dd82:	7a26      	ldrb	r6, [r4, #8]
 800dd84:	b923      	cbnz	r3, 800dd90 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800dd86:	b926      	cbnz	r6, 800dd92 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800dd88:	9200      	str	r2, [sp, #0]
 800dd8a:	460b      	mov	r3, r1
 800dd8c:	4a09      	ldr	r2, [pc, #36]	; (800ddb4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800dd8e:	e003      	b.n	800dd98 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800dd90:	b166      	cbz	r6, 800ddac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800dd92:	460b      	mov	r3, r1
 800dd94:	9200      	str	r2, [sp, #0]
 800dd96:	4a08      	ldr	r2, [pc, #32]	; (800ddb8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800dd98:	4629      	mov	r1, r5
 800dd9a:	f7fb fc61 	bl	8009660 <snprintf>
 800dd9e:	4285      	cmp	r5, r0
 800dda0:	bfa2      	ittt	ge
 800dda2:	88e3      	ldrhge	r3, [r4, #6]
 800dda4:	181b      	addge	r3, r3, r0
 800dda6:	80e3      	strhge	r3, [r4, #6]
 800dda8:	b002      	add	sp, #8
 800ddaa:	bd70      	pop	{r4, r5, r6, pc}
 800ddac:	9200      	str	r2, [sp, #0]
 800ddae:	460b      	mov	r3, r1
 800ddb0:	4a02      	ldr	r2, [pc, #8]	; (800ddbc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800ddb2:	e7f1      	b.n	800dd98 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800ddb4:	080166c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, sp, lr}
 800ddb8:	080166b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr}
 800ddbc:	080166c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, lr}

0800ddc0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800ddc0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ddc4:	4699      	mov	r9, r3
 800ddc6:	8885      	ldrh	r5, [r0, #4]
 800ddc8:	88c3      	ldrh	r3, [r0, #6]
 800ddca:	4604      	mov	r4, r0
 800ddcc:	42ab      	cmp	r3, r5
 800ddce:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800ddd2:	d227      	bcs.n	800de24 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800ddd4:	6826      	ldr	r6, [r4, #0]
 800ddd6:	4610      	mov	r0, r2
 800ddd8:	460f      	mov	r7, r1
 800ddda:	f894 a008 	ldrb.w	sl, [r4, #8]
 800ddde:	441e      	add	r6, r3
 800dde0:	1aed      	subs	r5, r5, r3
 800dde2:	f7fa fa23 	bl	800822c <__aeabi_f2d>
 800dde6:	f1b9 0f00 	cmp.w	r9, #0
 800ddea:	d109      	bne.n	800de00 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800ddec:	f1ba 0f00 	cmp.w	sl, #0
 800ddf0:	d109      	bne.n	800de06 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800ddf2:	463b      	mov	r3, r7
 800ddf4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ddf8:	4a0f      	ldr	r2, [pc, #60]	; (800de38 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800ddfa:	f8cd 8000 	str.w	r8, [sp]
 800ddfe:	e008      	b.n	800de12 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800de00:	f1ba 0f00 	cmp.w	sl, #0
 800de04:	d011      	beq.n	800de2a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800de06:	463b      	mov	r3, r7
 800de08:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800de0c:	4a0b      	ldr	r2, [pc, #44]	; (800de3c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800de0e:	f8cd 8000 	str.w	r8, [sp]
 800de12:	4629      	mov	r1, r5
 800de14:	4630      	mov	r0, r6
 800de16:	f7fb fc23 	bl	8009660 <snprintf>
 800de1a:	4285      	cmp	r5, r0
 800de1c:	bfa2      	ittt	ge
 800de1e:	88e3      	ldrhge	r3, [r4, #6]
 800de20:	181b      	addge	r3, r3, r0
 800de22:	80e3      	strhge	r3, [r4, #6]
 800de24:	b004      	add	sp, #16
 800de26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800de2a:	463b      	mov	r3, r7
 800de2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800de30:	4a03      	ldr	r2, [pc, #12]	; (800de40 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800de32:	f8cd 8000 	str.w	r8, [sp]
 800de36:	e7ec      	b.n	800de12 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800de38:	08017ba3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, fp, ip, sp, lr}
 800de3c:	08017b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp, lr}
 800de40:	08017ba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, sp, lr}

0800de44 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800de44:	6001      	str	r1, [r0, #0]
 800de46:	2100      	movs	r1, #0
 800de48:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800de4c:	4a0a      	ldr	r2, [pc, #40]	; (800de78 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x34>)
 800de4e:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800de52:	4a0a      	ldr	r2, [pc, #40]	; (800de7c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800de54:	490a      	ldr	r1, [pc, #40]	; (800de80 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800de56:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800de5a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800de5e:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800de62:	4a08      	ldr	r2, [pc, #32]	; (800de84 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x40>)
 800de64:	61c2      	str	r2, [r0, #28]
 800de66:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800de6a:	6202      	str	r2, [r0, #32]
 800de6c:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800de70:	6242      	str	r2, [r0, #36]	; 0x24
 800de72:	221d      	movs	r2, #29
 800de74:	8502      	strh	r2, [r0, #40]	; 0x28
 800de76:	4770      	bx	lr
 800de78:	0100aa03 	tsteq	r0, r3, lsl #20
 800de7c:	01ff003d 	mvnseq	r0, sp, lsr r0
 800de80:	06000100 	streq	r0, [r0], -r0, lsl #2
 800de84:	00090005 	andeq	r0, r9, r5

0800de88 <PixelDmxParams::Load()>:
 800de88:	b508      	push	{r3, lr}
 800de8a:	2300      	movs	r3, #0
 800de8c:	4601      	mov	r1, r0
 800de8e:	6043      	str	r3, [r0, #4]
 800de90:	6800      	ldr	r0, [r0, #0]
 800de92:	b120      	cbz	r0, 800de9e <PixelDmxParams::Load()+0x16>
 800de94:	6803      	ldr	r3, [r0, #0]
 800de96:	3104      	adds	r1, #4
 800de98:	68db      	ldr	r3, [r3, #12]
 800de9a:	4798      	blx	r3
 800de9c:	2001      	movs	r0, #1
 800de9e:	bd08      	pop	{r3, pc}

0800dea0 <PixelDmxParams::Load(char const*, unsigned int)>:
 800dea0:	6803      	ldr	r3, [r0, #0]
 800dea2:	b1d3      	cbz	r3, 800deda <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800dea4:	2300      	movs	r3, #0
 800dea6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dea8:	460d      	mov	r5, r1
 800deaa:	4616      	mov	r6, r2
 800deac:	4604      	mov	r4, r0
 800deae:	6043      	str	r3, [r0, #4]
 800deb0:	4602      	mov	r2, r0
 800deb2:	490a      	ldr	r1, [pc, #40]	; (800dedc <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800deb4:	4668      	mov	r0, sp
 800deb6:	f005 f8dd 	bl	8013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800deba:	4632      	mov	r2, r6
 800debc:	4629      	mov	r1, r5
 800debe:	4668      	mov	r0, sp
 800dec0:	f005 f8dc 	bl	801307c <ReadConfigFile::Read(char const*, unsigned int)>
 800dec4:	4621      	mov	r1, r4
 800dec6:	f851 0b04 	ldr.w	r0, [r1], #4
 800deca:	6803      	ldr	r3, [r0, #0]
 800decc:	689b      	ldr	r3, [r3, #8]
 800dece:	4798      	blx	r3
 800ded0:	4668      	mov	r0, sp
 800ded2:	f005 f8d2 	bl	801307a <ReadConfigFile::~ReadConfigFile()>
 800ded6:	b002      	add	sp, #8
 800ded8:	bd70      	pop	{r4, r5, r6, pc}
 800deda:	4770      	bx	lr
 800dedc:	0800e199 	stmdaeq	r0, {r0, r3, r4, r7, r8, sp, lr, pc}

0800dee0 <PixelDmxParams::callbackFunction(char const*)>:
 800dee0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dee4:	2308      	movs	r3, #8
 800dee6:	460d      	mov	r5, r1
 800dee8:	b088      	sub	sp, #32
 800deea:	4604      	mov	r4, r0
 800deec:	9302      	str	r3, [sp, #8]
 800deee:	4628      	mov	r0, r5
 800def0:	499a      	ldr	r1, [pc, #616]	; (800e15c <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800def2:	446b      	add	r3, sp
 800def4:	aa04      	add	r2, sp, #16
 800def6:	f005 f8f5 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800defa:	b9a0      	cbnz	r0, 800df26 <PixelDmxParams::callbackFunction(char const*)+0x46>
 800defc:	9b02      	ldr	r3, [sp, #8]
 800defe:	3320      	adds	r3, #32
 800df00:	446b      	add	r3, sp
 800df02:	f803 0c10 	strb.w	r0, [r3, #-16]
 800df06:	a804      	add	r0, sp, #16
 800df08:	f000 fc26 	bl	800e758 <PixelType::GetType(char const*)>
 800df0c:	280e      	cmp	r0, #14
 800df0e:	bf08      	it	eq
 800df10:	2203      	moveq	r2, #3
 800df12:	6863      	ldr	r3, [r4, #4]
 800df14:	bf19      	ittee	ne
 800df16:	7220      	strbne	r0, [r4, #8]
 800df18:	f043 0301 	orrne.w	r3, r3, #1
 800df1c:	7222      	strbeq	r2, [r4, #8]
 800df1e:	f023 0301 	biceq.w	r3, r3, #1
 800df22:	6063      	str	r3, [r4, #4]
 800df24:	e033      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800df26:	4628      	mov	r0, r5
 800df28:	498d      	ldr	r1, [pc, #564]	; (800e160 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800df2a:	f10d 0202 	add.w	r2, sp, #2
 800df2e:	f005 f996 	bl	801325e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800df32:	b990      	cbnz	r0, 800df5a <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800df34:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800df38:	6863      	ldr	r3, [r4, #4]
 800df3a:	1e51      	subs	r1, r2, #1
 800df3c:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800df40:	bf2d      	iteet	cs
 800df42:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800df46:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800df4a:	f043 0302 	orrcc.w	r3, r3, #2
 800df4e:	7262      	strbcs	r2, [r4, #9]
 800df50:	bf24      	itt	cs
 800df52:	72a0      	strbcs	r0, [r4, #10]
 800df54:	f023 0302 	biccs.w	r3, r3, #2
 800df58:	e7e3      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800df5a:	2303      	movs	r3, #3
 800df5c:	4628      	mov	r0, r5
 800df5e:	9302      	str	r3, [sp, #8]
 800df60:	4980      	ldr	r1, [pc, #512]	; (800e164 <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800df62:	ab02      	add	r3, sp, #8
 800df64:	aa04      	add	r2, sp, #16
 800df66:	f005 f8bd 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800df6a:	b998      	cbnz	r0, 800df94 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800df6c:	9b02      	ldr	r3, [sp, #8]
 800df6e:	3320      	adds	r3, #32
 800df70:	446b      	add	r3, sp
 800df72:	f803 0c10 	strb.w	r0, [r3, #-16]
 800df76:	a804      	add	r0, sp, #16
 800df78:	f000 fc12 	bl	800e7a0 <PixelType::GetMap(char const*)>
 800df7c:	6863      	ldr	r3, [r4, #4]
 800df7e:	2806      	cmp	r0, #6
 800df80:	bf14      	ite	ne
 800df82:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800df86:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800df8a:	6063      	str	r3, [r4, #4]
 800df8c:	75e0      	strb	r0, [r4, #23]
 800df8e:	b008      	add	sp, #32
 800df90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800df94:	4628      	mov	r0, r5
 800df96:	4974      	ldr	r1, [pc, #464]	; (800e168 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800df98:	aa01      	add	r2, sp, #4
 800df9a:	f005 f8bc 	bl	8013116 <Sscan::Float(char const*, char const*, float&)>
 800df9e:	b960      	cbnz	r0, 800dfba <PixelDmxParams::callbackFunction(char const*)+0xda>
 800dfa0:	9801      	ldr	r0, [sp, #4]
 800dfa2:	f000 fc69 	bl	800e878 <PixelType::ConvertTxH(float)>
 800dfa6:	6863      	ldr	r3, [r4, #4]
 800dfa8:	b120      	cbz	r0, 800dfb4 <PixelDmxParams::callbackFunction(char const*)+0xd4>
 800dfaa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800dfae:	6063      	str	r3, [r4, #4]
 800dfb0:	7620      	strb	r0, [r4, #24]
 800dfb2:	e7ec      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800dfb4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800dfb8:	e7f9      	b.n	800dfae <PixelDmxParams::callbackFunction(char const*)+0xce>
 800dfba:	4628      	mov	r0, r5
 800dfbc:	496b      	ldr	r1, [pc, #428]	; (800e16c <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800dfbe:	aa01      	add	r2, sp, #4
 800dfc0:	f005 f8a9 	bl	8013116 <Sscan::Float(char const*, char const*, float&)>
 800dfc4:	b960      	cbnz	r0, 800dfe0 <PixelDmxParams::callbackFunction(char const*)+0x100>
 800dfc6:	9801      	ldr	r0, [sp, #4]
 800dfc8:	f000 fc56 	bl	800e878 <PixelType::ConvertTxH(float)>
 800dfcc:	6863      	ldr	r3, [r4, #4]
 800dfce:	b120      	cbz	r0, 800dfda <PixelDmxParams::callbackFunction(char const*)+0xfa>
 800dfd0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800dfd4:	6063      	str	r3, [r4, #4]
 800dfd6:	7660      	strb	r0, [r4, #25]
 800dfd8:	e7d9      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800dfda:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800dfde:	e7f9      	b.n	800dfd4 <PixelDmxParams::callbackFunction(char const*)+0xf4>
 800dfe0:	4628      	mov	r0, r5
 800dfe2:	4963      	ldr	r1, [pc, #396]	; (800e170 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800dfe4:	f10d 0202 	add.w	r2, sp, #2
 800dfe8:	f005 f939 	bl	801325e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800dfec:	b998      	cbnz	r0, 800e016 <PixelDmxParams::callbackFunction(char const*)+0x136>
 800dfee:	f240 25a6 	movw	r5, #678	; 0x2a6
 800dff2:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800dff6:	6863      	ldr	r3, [r4, #4]
 800dff8:	1e8a      	subs	r2, r1, #2
 800dffa:	b292      	uxth	r2, r2
 800dffc:	42aa      	cmp	r2, r5
 800dffe:	bf81      	itttt	hi
 800e000:	2201      	movhi	r2, #1
 800e002:	75a0      	strbhi	r0, [r4, #22]
 800e004:	7562      	strbhi	r2, [r4, #21]
 800e006:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800e00a:	bf9c      	itt	ls
 800e00c:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800e010:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800e014:	e785      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e016:	4628      	mov	r0, r5
 800e018:	4956      	ldr	r1, [pc, #344]	; (800e174 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800e01a:	aa03      	add	r2, sp, #12
 800e01c:	f005 f93d 	bl	801329a <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800e020:	b960      	cbnz	r0, 800e03c <PixelDmxParams::callbackFunction(char const*)+0x15c>
 800e022:	9a03      	ldr	r2, [sp, #12]
 800e024:	4954      	ldr	r1, [pc, #336]	; (800e178 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800e026:	6863      	ldr	r3, [r4, #4]
 800e028:	428a      	cmp	r2, r1
 800e02a:	bf14      	ite	ne
 800e02c:	f043 0310 	orrne.w	r3, r3, #16
 800e030:	f023 0310 	biceq.w	r3, r3, #16
 800e034:	6063      	str	r3, [r4, #4]
 800e036:	f8c4 200e 	str.w	r2, [r4, #14]
 800e03a:	e7a8      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e03c:	4628      	mov	r0, r5
 800e03e:	494f      	ldr	r1, [pc, #316]	; (800e17c <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800e040:	f10d 0201 	add.w	r2, sp, #1
 800e044:	f005 f952 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e048:	b988      	cbnz	r0, 800e06e <PixelDmxParams::callbackFunction(char const*)+0x18e>
 800e04a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800e04e:	6863      	ldr	r3, [r4, #4]
 800e050:	1e4a      	subs	r2, r1, #1
 800e052:	b2d2      	uxtb	r2, r2
 800e054:	2afd      	cmp	r2, #253	; 0xfd
 800e056:	bf83      	ittte	hi
 800e058:	f023 0320 	bichi.w	r3, r3, #32
 800e05c:	6063      	strhi	r3, [r4, #4]
 800e05e:	23ff      	movhi	r3, #255	; 0xff
 800e060:	f043 0320 	orrls.w	r3, r3, #32
 800e064:	bf9a      	itte	ls
 800e066:	6063      	strls	r3, [r4, #4]
 800e068:	74a1      	strbls	r1, [r4, #18]
 800e06a:	74a3      	strbhi	r3, [r4, #18]
 800e06c:	e78f      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e06e:	2600      	movs	r6, #0
 800e070:	f04f 0814 	mov.w	r8, #20
 800e074:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800e078:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800e180 <PixelDmxParams::callbackFunction(char const*)+0x2a0>
 800e07c:	f104 071a 	add.w	r7, r4, #26
 800e080:	4628      	mov	r0, r5
 800e082:	fb08 9106 	mla	r1, r8, r6, r9
 800e086:	f10d 0202 	add.w	r2, sp, #2
 800e08a:	f005 f8e8 	bl	801325e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e08e:	b940      	cbnz	r0, 800e0a2 <PixelDmxParams::callbackFunction(char const*)+0x1c2>
 800e090:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800e094:	6863      	ldr	r3, [r4, #4]
 800e096:	fa0a f106 	lsl.w	r1, sl, r6
 800e09a:	b1ea      	cbz	r2, 800e0d8 <PixelDmxParams::callbackFunction(char const*)+0x1f8>
 800e09c:	803a      	strh	r2, [r7, #0]
 800e09e:	430b      	orrs	r3, r1
 800e0a0:	6063      	str	r3, [r4, #4]
 800e0a2:	3601      	adds	r6, #1
 800e0a4:	2e08      	cmp	r6, #8
 800e0a6:	f107 0702 	add.w	r7, r7, #2
 800e0aa:	d1e9      	bne.n	800e080 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800e0ac:	4628      	mov	r0, r5
 800e0ae:	4935      	ldr	r1, [pc, #212]	; (800e184 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800e0b0:	f10d 0201 	add.w	r2, sp, #1
 800e0b4:	f005 f91a 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e0b8:	b9a0      	cbnz	r0, 800e0e4 <PixelDmxParams::callbackFunction(char const*)+0x204>
 800e0ba:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800e0be:	6863      	ldr	r3, [r4, #4]
 800e0c0:	1e91      	subs	r1, r2, #2
 800e0c2:	2906      	cmp	r1, #6
 800e0c4:	bf8d      	iteet	hi
 800e0c6:	2201      	movhi	r2, #1
 800e0c8:	74e2      	strbls	r2, [r4, #19]
 800e0ca:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800e0ce:	74e2      	strbhi	r2, [r4, #19]
 800e0d0:	bf88      	it	hi
 800e0d2:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800e0d6:	e724      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e0d8:	00b2      	lsls	r2, r6, #2
 800e0da:	3201      	adds	r2, #1
 800e0dc:	803a      	strh	r2, [r7, #0]
 800e0de:	ea23 0301 	bic.w	r3, r3, r1
 800e0e2:	e7dd      	b.n	800e0a0 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800e0e4:	4628      	mov	r0, r5
 800e0e6:	4928      	ldr	r1, [pc, #160]	; (800e188 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800e0e8:	f10d 0201 	add.w	r2, sp, #1
 800e0ec:	f005 f8fe 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e0f0:	b960      	cbnz	r0, 800e10c <PixelDmxParams::callbackFunction(char const*)+0x22c>
 800e0f2:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800e0f6:	6863      	ldr	r3, [r4, #4]
 800e0f8:	1e51      	subs	r1, r2, #1
 800e0fa:	2904      	cmp	r1, #4
 800e0fc:	bf99      	ittee	ls
 800e0fe:	7522      	strbls	r2, [r4, #20]
 800e100:	f043 0308 	orrls.w	r3, r3, #8
 800e104:	7520      	strbhi	r0, [r4, #20]
 800e106:	f023 0308 	bichi.w	r3, r3, #8
 800e10a:	e70a      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e10c:	4628      	mov	r0, r5
 800e10e:	491f      	ldr	r1, [pc, #124]	; (800e18c <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800e110:	f10d 0201 	add.w	r2, sp, #1
 800e114:	f005 f8ea 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e118:	b948      	cbnz	r0, 800e12e <PixelDmxParams::callbackFunction(char const*)+0x24e>
 800e11a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800e11e:	6863      	ldr	r3, [r4, #4]
 800e120:	b112      	cbz	r2, 800e128 <PixelDmxParams::callbackFunction(char const*)+0x248>
 800e122:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e126:	e6fc      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e128:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800e12c:	e6f9      	b.n	800df22 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800e12e:	4628      	mov	r0, r5
 800e130:	4917      	ldr	r1, [pc, #92]	; (800e190 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800e132:	aa01      	add	r2, sp, #4
 800e134:	f004 ffef 	bl	8013116 <Sscan::Float(char const*, char const*, float&)>
 800e138:	4605      	mov	r5, r0
 800e13a:	2800      	cmp	r0, #0
 800e13c:	f47f af27 	bne.w	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e140:	4914      	ldr	r1, [pc, #80]	; (800e194 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800e142:	9801      	ldr	r0, [sp, #4]
 800e144:	f7fa f8ca 	bl	80082dc <__aeabi_fmul>
 800e148:	f7fa fa18 	bl	800857c <__aeabi_f2uiz>
 800e14c:	b2c3      	uxtb	r3, r0
 800e14e:	f1a3 0214 	sub.w	r2, r3, #20
 800e152:	2a05      	cmp	r2, #5
 800e154:	bf8c      	ite	hi
 800e156:	7365      	strbhi	r5, [r4, #13]
 800e158:	7363      	strbls	r3, [r4, #13]
 800e15a:	e718      	b.n	800df8e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800e15c:	08018b9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, fp, pc}
 800e160:	08018ba6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, fp, pc}
 800e164:	08018b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, pc}
 800e168:	08018bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, pc}
 800e16c:	08018bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, pc}
 800e170:	08018b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, pc}
 800e174:	08018b3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, fp, pc}
 800e178:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800e17c:	08018b7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, fp, pc}
 800e180:	08018c39 	stmdaeq	r1, {r0, r3, r4, r5, sl, fp, pc}
 800e184:	08018b27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, fp, pc}
 800e188:	08018b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, pc}
 800e18c:	08018b6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, fp, pc}
 800e190:	08018b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, pc}
 800e194:	41200000 			; <UNDEFINED> instruction: 0x41200000

0800e198 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800e198:	f7ff bea2 	b.w	800dee0 <PixelDmxParams::callbackFunction(char const*)>

0800e19c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800e19c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1a0:	4604      	mov	r4, r0
 800e1a2:	4615      	mov	r5, r2
 800e1a4:	461e      	mov	r6, r3
 800e1a6:	b086      	sub	sp, #24
 800e1a8:	3004      	adds	r0, #4
 800e1aa:	b389      	cbz	r1, 800e210 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800e1ac:	2226      	movs	r2, #38	; 0x26
 800e1ae:	f005 fdce 	bl	8013d4e <memmove>
 800e1b2:	462a      	mov	r2, r5
 800e1b4:	4633      	mov	r3, r6
 800e1b6:	499c      	ldr	r1, [pc, #624]	; (800e428 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800e1b8:	a803      	add	r0, sp, #12
 800e1ba:	f004 febb 	bl	8012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e1be:	7a20      	ldrb	r0, [r4, #8]
 800e1c0:	f000 fabe 	bl	800e740 <PixelType::GetType(pixel::Type)>
 800e1c4:	6863      	ldr	r3, [r4, #4]
 800e1c6:	4602      	mov	r2, r0
 800e1c8:	4998      	ldr	r1, [pc, #608]	; (800e42c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800e1ca:	f003 0301 	and.w	r3, r3, #1
 800e1ce:	a803      	add	r0, sp, #12
 800e1d0:	f7ff fdce 	bl	800dd70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e1d4:	6863      	ldr	r3, [r4, #4]
 800e1d6:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800e1da:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800e1de:	4994      	ldr	r1, [pc, #592]	; (800e430 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800e1e0:	a803      	add	r0, sp, #12
 800e1e2:	f7ff fd9d 	bl	800dd20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e1e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e1ea:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e1ee:	6863      	ldr	r3, [r4, #4]
 800e1f0:	42aa      	cmp	r2, r5
 800e1f2:	d227      	bcs.n	800e244 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800e1f4:	9803      	ldr	r0, [sp, #12]
 800e1f6:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800e1fa:	4410      	add	r0, r2
 800e1fc:	eba5 0502 	sub.w	r5, r5, r2
 800e200:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e204:	d10b      	bne.n	800e21e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800e206:	b96a      	cbnz	r2, 800e224 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800e208:	9200      	str	r2, [sp, #0]
 800e20a:	4b8a      	ldr	r3, [pc, #552]	; (800e434 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800e20c:	4a8a      	ldr	r2, [pc, #552]	; (800e438 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800e20e:	e00f      	b.n	800e230 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800e210:	6823      	ldr	r3, [r4, #0]
 800e212:	4601      	mov	r1, r0
 800e214:	681a      	ldr	r2, [r3, #0]
 800e216:	4618      	mov	r0, r3
 800e218:	68d2      	ldr	r2, [r2, #12]
 800e21a:	4790      	blx	r2
 800e21c:	e7c9      	b.n	800e1b2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800e21e:	2a00      	cmp	r2, #0
 800e220:	f000 808a 	beq.w	800e338 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19c>
 800e224:	3b00      	subs	r3, #0
 800e226:	bf18      	it	ne
 800e228:	2301      	movne	r3, #1
 800e22a:	4a84      	ldr	r2, [pc, #528]	; (800e43c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800e22c:	9300      	str	r3, [sp, #0]
 800e22e:	4b81      	ldr	r3, [pc, #516]	; (800e434 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800e230:	4629      	mov	r1, r5
 800e232:	f7fb fa15 	bl	8009660 <snprintf>
 800e236:	4285      	cmp	r5, r0
 800e238:	bfa2      	ittt	ge
 800e23a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e23e:	18c0      	addge	r0, r0, r3
 800e240:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e244:	7b63      	ldrb	r3, [r4, #13]
 800e246:	2b00      	cmp	r3, #0
 800e248:	d17b      	bne.n	800e342 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a6>
 800e24a:	4a7d      	ldr	r2, [pc, #500]	; (800e440 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800e24c:	497d      	ldr	r1, [pc, #500]	; (800e444 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800e24e:	a803      	add	r0, sp, #12
 800e250:	f7ff fd8e 	bl	800dd70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e254:	497c      	ldr	r1, [pc, #496]	; (800e448 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800e256:	a803      	add	r0, sp, #12
 800e258:	f004 fef2 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e25c:	6863      	ldr	r3, [r4, #4]
 800e25e:	059e      	lsls	r6, r3, #22
 800e260:	d403      	bmi.n	800e26a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800e262:	7a20      	ldrb	r0, [r4, #8]
 800e264:	f000 fad0 	bl	800e808 <PixelType::GetMap(pixel::Type)>
 800e268:	75e0      	strb	r0, [r4, #23]
 800e26a:	7de0      	ldrb	r0, [r4, #23]
 800e26c:	f000 fac0 	bl	800e7f0 <PixelType::GetMap(pixel::Map)>
 800e270:	6863      	ldr	r3, [r4, #4]
 800e272:	4602      	mov	r2, r0
 800e274:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800e278:	4974      	ldr	r1, [pc, #464]	; (800e44c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800e27a:	a803      	add	r0, sp, #12
 800e27c:	f7ff fd78 	bl	800dd70 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800e280:	6863      	ldr	r3, [r4, #4]
 800e282:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800e286:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800e28a:	d011      	beq.n	800e2b0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800e28c:	f10d 020b 	add.w	r2, sp, #11
 800e290:	7a20      	ldrb	r0, [r4, #8]
 800e292:	f10d 010a 	add.w	r1, sp, #10
 800e296:	f000 f94c 	bl	800e532 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800e29a:	6863      	ldr	r3, [r4, #4]
 800e29c:	055d      	lsls	r5, r3, #21
 800e29e:	bf5c      	itt	pl
 800e2a0:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800e2a4:	7622      	strbpl	r2, [r4, #24]
 800e2a6:	0518      	lsls	r0, r3, #20
 800e2a8:	bf5c      	itt	pl
 800e2aa:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800e2ae:	7663      	strbpl	r3, [r4, #25]
 800e2b0:	4967      	ldr	r1, [pc, #412]	; (800e450 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800e2b2:	a803      	add	r0, sp, #12
 800e2b4:	f004 fec4 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e2b8:	7e20      	ldrb	r0, [r4, #24]
 800e2ba:	f000 faaf 	bl	800e81c <PixelType::ConvertTxH(unsigned char)>
 800e2be:	2502      	movs	r5, #2
 800e2c0:	6863      	ldr	r3, [r4, #4]
 800e2c2:	4602      	mov	r2, r0
 800e2c4:	4963      	ldr	r1, [pc, #396]	; (800e454 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800e2c6:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800e2ca:	9500      	str	r5, [sp, #0]
 800e2cc:	a803      	add	r0, sp, #12
 800e2ce:	f7ff fd77 	bl	800ddc0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800e2d2:	7e60      	ldrb	r0, [r4, #25]
 800e2d4:	f000 faa2 	bl	800e81c <PixelType::ConvertTxH(unsigned char)>
 800e2d8:	6863      	ldr	r3, [r4, #4]
 800e2da:	4602      	mov	r2, r0
 800e2dc:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800e2e0:	495d      	ldr	r1, [pc, #372]	; (800e458 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800e2e2:	9500      	str	r5, [sp, #0]
 800e2e4:	a803      	add	r0, sp, #12
 800e2e6:	f7ff fd6b 	bl	800ddc0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800e2ea:	495c      	ldr	r1, [pc, #368]	; (800e45c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800e2ec:	a803      	add	r0, sp, #12
 800e2ee:	f004 fea7 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e2f2:	6863      	ldr	r3, [r4, #4]
 800e2f4:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800e2f8:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800e2fc:	4958      	ldr	r1, [pc, #352]	; (800e460 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800e2fe:	a803      	add	r0, sp, #12
 800e300:	f7ff fd0e 	bl	800dd20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e304:	4957      	ldr	r1, [pc, #348]	; (800e464 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800e306:	a803      	add	r0, sp, #12
 800e308:	f004 fe9a 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e30c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e310:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e314:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800e318:	42aa      	cmp	r2, r5
 800e31a:	6861      	ldr	r1, [r4, #4]
 800e31c:	d22e      	bcs.n	800e37c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>
 800e31e:	9803      	ldr	r0, [sp, #12]
 800e320:	06c9      	lsls	r1, r1, #27
 800e322:	4410      	add	r0, r2
 800e324:	eba5 0502 	sub.w	r5, r5, r2
 800e328:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e32c:	d417      	bmi.n	800e35e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800e32e:	b9c2      	cbnz	r2, 800e362 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800e330:	9300      	str	r3, [sp, #0]
 800e332:	4a41      	ldr	r2, [pc, #260]	; (800e438 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800e334:	4b4c      	ldr	r3, [pc, #304]	; (800e468 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800e336:	e017      	b.n	800e368 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800e338:	2301      	movs	r3, #1
 800e33a:	4a4c      	ldr	r2, [pc, #304]	; (800e46c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800e33c:	9300      	str	r3, [sp, #0]
 800e33e:	4b3d      	ldr	r3, [pc, #244]	; (800e434 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800e340:	e776      	b.n	800e230 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800e342:	4618      	mov	r0, r3
 800e344:	f7f9 fd00 	bl	8007d48 <__aeabi_ui2f>
 800e348:	4949      	ldr	r1, [pc, #292]	; (800e470 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800e34a:	f7fa f87b 	bl	8008444 <__aeabi_fdiv>
 800e34e:	2301      	movs	r3, #1
 800e350:	4602      	mov	r2, r0
 800e352:	493c      	ldr	r1, [pc, #240]	; (800e444 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800e354:	9300      	str	r3, [sp, #0]
 800e356:	a803      	add	r0, sp, #12
 800e358:	f7ff fd32 	bl	800ddc0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800e35c:	e77a      	b.n	800e254 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800e35e:	2a00      	cmp	r2, #0
 800e360:	d05e      	beq.n	800e420 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800e362:	9300      	str	r3, [sp, #0]
 800e364:	4a35      	ldr	r2, [pc, #212]	; (800e43c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800e366:	4b40      	ldr	r3, [pc, #256]	; (800e468 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800e368:	4629      	mov	r1, r5
 800e36a:	f7fb f979 	bl	8009660 <snprintf>
 800e36e:	4285      	cmp	r5, r0
 800e370:	bfa2      	ittt	ge
 800e372:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e376:	18c0      	addge	r0, r0, r3
 800e378:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e37c:	493d      	ldr	r1, [pc, #244]	; (800e474 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800e37e:	a803      	add	r0, sp, #12
 800e380:	f004 fe5e 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e384:	6863      	ldr	r3, [r4, #4]
 800e386:	7ca2      	ldrb	r2, [r4, #18]
 800e388:	493b      	ldr	r1, [pc, #236]	; (800e478 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800e38a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800e38e:	a803      	add	r0, sp, #12
 800e390:	f7ff fc9e 	bl	800dcd0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e394:	2500      	movs	r5, #0
 800e396:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800e39a:	4e38      	ldr	r6, [pc, #224]	; (800e47c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800e39c:	f104 0718 	add.w	r7, r4, #24
 800e3a0:	6862      	ldr	r2, [r4, #4]
 800e3a2:	fa08 f305 	lsl.w	r3, r8, r5
 800e3a6:	4393      	bics	r3, r2
 800e3a8:	bf0c      	ite	eq
 800e3aa:	2301      	moveq	r3, #1
 800e3ac:	2300      	movne	r3, #0
 800e3ae:	4631      	mov	r1, r6
 800e3b0:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800e3b4:	a803      	add	r0, sp, #12
 800e3b6:	3501      	adds	r5, #1
 800e3b8:	f7ff fcb2 	bl	800dd20 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e3bc:	2d08      	cmp	r5, #8
 800e3be:	f106 0614 	add.w	r6, r6, #20
 800e3c2:	d1ed      	bne.n	800e3a0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x204>
 800e3c4:	6863      	ldr	r3, [r4, #4]
 800e3c6:	7ce2      	ldrb	r2, [r4, #19]
 800e3c8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800e3cc:	492c      	ldr	r1, [pc, #176]	; (800e480 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800e3ce:	a803      	add	r0, sp, #12
 800e3d0:	f7ff fc7e 	bl	800dcd0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e3d4:	492b      	ldr	r1, [pc, #172]	; (800e484 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 800e3d6:	a803      	add	r0, sp, #12
 800e3d8:	f004 fe32 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 800e3dc:	6863      	ldr	r3, [r4, #4]
 800e3de:	7d22      	ldrb	r2, [r4, #20]
 800e3e0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800e3e4:	4928      	ldr	r1, [pc, #160]	; (800e488 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 800e3e6:	a803      	add	r0, sp, #12
 800e3e8:	f7ff fc72 	bl	800dcd0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800e3ec:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e3f0:	b17b      	cbz	r3, 800e412 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x276>
 800e3f2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e3f6:	9b03      	ldr	r3, [sp, #12]
 800e3f8:	4413      	add	r3, r2
 800e3fa:	227d      	movs	r2, #125	; 0x7d
 800e3fc:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e400:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e404:	9903      	ldr	r1, [sp, #12]
 800e406:	54ca      	strb	r2, [r1, r3]
 800e408:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e40c:	3301      	adds	r3, #1
 800e40e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e412:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e416:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e418:	601a      	str	r2, [r3, #0]
 800e41a:	b006      	add	sp, #24
 800e41c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e420:	9300      	str	r3, [sp, #0]
 800e422:	4a12      	ldr	r2, [pc, #72]	; (800e46c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800e424:	4b10      	ldr	r3, [pc, #64]	; (800e468 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800e426:	e79f      	b.n	800e368 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800e428:	08018bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, pc}
 800e42c:	08018b9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, fp, pc}
 800e430:	08018ba6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, fp, pc}
 800e434:	08018b6a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, fp, pc}
 800e438:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 800e43c:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800e440:	08017bad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, fp, ip, sp, lr}
 800e444:	08018b32 	stmdaeq	r1, {r1, r4, r5, r8, r9, fp, pc}
 800e448:	08017bb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, fp, ip, sp, lr}
 800e44c:	08018b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, pc}
 800e450:	08017bcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, fp, ip, sp, lr}
 800e454:	08018bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, pc}
 800e458:	08018bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, pc}
 800e45c:	08017be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e460:	08018b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, pc}
 800e464:	08017bea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e468:	08018b3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, fp, pc}
 800e46c:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}
 800e470:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800e474:	08017bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e478:	08018b7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, fp, pc}
 800e47c:	08018c39 	stmdaeq	r1, {r0, r3, r4, r5, sl, fp, pc}
 800e480:	08018b27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, fp, pc}
 800e484:	08017c0a 	stmdaeq	r1, {r1, r3, sl, fp, ip, sp, lr}
 800e488:	08018b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, pc}

0800e48c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800e48c:	b513      	push	{r0, r1, r4, lr}
 800e48e:	6804      	ldr	r4, [r0, #0]
 800e490:	b914      	cbnz	r4, 800e498 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e492:	601c      	str	r4, [r3, #0]
 800e494:	b002      	add	sp, #8
 800e496:	bd10      	pop	{r4, pc}
 800e498:	9300      	str	r3, [sp, #0]
 800e49a:	4613      	mov	r3, r2
 800e49c:	460a      	mov	r2, r1
 800e49e:	2100      	movs	r1, #0
 800e4a0:	f7ff fe7c 	bl	800e19c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800e4a4:	e7f6      	b.n	800e494 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e4a6 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800e4a6:	6843      	ldr	r3, [r0, #4]
 800e4a8:	07da      	lsls	r2, r3, #31
 800e4aa:	bf44      	itt	mi
 800e4ac:	7a02      	ldrbmi	r2, [r0, #8]
 800e4ae:	600a      	strmi	r2, [r1, #0]
 800e4b0:	079a      	lsls	r2, r3, #30
 800e4b2:	d505      	bpl.n	800e4c0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800e4b4:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800e4b8:	2a00      	cmp	r2, #0
 800e4ba:	bf08      	it	eq
 800e4bc:	22aa      	moveq	r2, #170	; 0xaa
 800e4be:	604a      	str	r2, [r1, #4]
 800e4c0:	059a      	lsls	r2, r3, #22
 800e4c2:	bf44      	itt	mi
 800e4c4:	7dc2      	ldrbmi	r2, [r0, #23]
 800e4c6:	608a      	strmi	r2, [r1, #8]
 800e4c8:	055a      	lsls	r2, r3, #21
 800e4ca:	bf44      	itt	mi
 800e4cc:	7e02      	ldrbmi	r2, [r0, #24]
 800e4ce:	740a      	strbmi	r2, [r1, #16]
 800e4d0:	051a      	lsls	r2, r3, #20
 800e4d2:	bf44      	itt	mi
 800e4d4:	7e42      	ldrbmi	r2, [r0, #25]
 800e4d6:	744a      	strbmi	r2, [r1, #17]
 800e4d8:	06da      	lsls	r2, r3, #27
 800e4da:	bf44      	itt	mi
 800e4dc:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800e4e0:	60ca      	strmi	r2, [r1, #12]
 800e4e2:	069a      	lsls	r2, r3, #26
 800e4e4:	bf44      	itt	mi
 800e4e6:	7c82      	ldrbmi	r2, [r0, #18]
 800e4e8:	748a      	strbmi	r2, [r1, #18]
 800e4ea:	061a      	lsls	r2, r3, #24
 800e4ec:	d504      	bpl.n	800e4f8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800e4ee:	2201      	movs	r2, #1
 800e4f0:	750a      	strb	r2, [r1, #20]
 800e4f2:	7b42      	ldrb	r2, [r0, #13]
 800e4f4:	b102      	cbz	r2, 800e4f8 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800e4f6:	74ca      	strb	r2, [r1, #19]
 800e4f8:	075a      	lsls	r2, r3, #29
 800e4fa:	d50f      	bpl.n	800e51c <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800e4fc:	7ac2      	ldrb	r2, [r0, #11]
 800e4fe:	b510      	push	{r4, lr}
 800e500:	7b04      	ldrb	r4, [r0, #12]
 800e502:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800e506:	858a      	strh	r2, [r1, #44]	; 0x2c
 800e508:	05da      	lsls	r2, r3, #23
 800e50a:	bf44      	itt	mi
 800e50c:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800e510:	620a      	strmi	r2, [r1, #32]
 800e512:	065c      	lsls	r4, r3, #25
 800e514:	bf44      	itt	mi
 800e516:	7cc3      	ldrbmi	r3, [r0, #19]
 800e518:	61cb      	strmi	r3, [r1, #28]
 800e51a:	bd10      	pop	{r4, pc}
 800e51c:	05da      	lsls	r2, r3, #23
 800e51e:	bf44      	itt	mi
 800e520:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800e524:	620a      	strmi	r2, [r1, #32]
 800e526:	065b      	lsls	r3, r3, #25
 800e528:	bf44      	itt	mi
 800e52a:	7cc3      	ldrbmi	r3, [r0, #19]
 800e52c:	61cb      	strmi	r3, [r1, #28]
 800e52e:	4770      	bx	lr

0800e530 <PixelDmxParams::Dump()>:
 800e530:	4770      	bx	lr

0800e532 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800e532:	23c0      	movs	r3, #192	; 0xc0
 800e534:	2803      	cmp	r0, #3
 800e536:	700b      	strb	r3, [r1, #0]
 800e538:	d006      	beq.n	800e548 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800e53a:	3808      	subs	r0, #8
 800e53c:	2803      	cmp	r0, #3
 800e53e:	bf34      	ite	cc
 800e540:	23fc      	movcc	r3, #252	; 0xfc
 800e542:	23f0      	movcs	r3, #240	; 0xf0
 800e544:	7013      	strb	r3, [r2, #0]
 800e546:	4770      	bx	lr
 800e548:	23f8      	movs	r3, #248	; 0xf8
 800e54a:	e7fb      	b.n	800e544 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800e54c <PixelConfiguration::Validate(unsigned int&)>:
 800e54c:	b513      	push	{r0, r1, r4, lr}
 800e54e:	4604      	mov	r4, r0
 800e550:	6800      	ldr	r0, [r0, #0]
 800e552:	6863      	ldr	r3, [r4, #4]
 800e554:	2807      	cmp	r0, #7
 800e556:	68a2      	ldr	r2, [r4, #8]
 800e558:	d128      	bne.n	800e5ac <PixelConfiguration::Validate(unsigned int&)+0x60>
 800e55a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e55e:	bf28      	it	cs
 800e560:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800e564:	6063      	str	r3, [r4, #4]
 800e566:	2304      	movs	r3, #4
 800e568:	600b      	str	r3, [r1, #0]
 800e56a:	2301      	movs	r3, #1
 800e56c:	2a06      	cmp	r2, #6
 800e56e:	7563      	strb	r3, [r4, #21]
 800e570:	d102      	bne.n	800e578 <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800e572:	f000 f949 	bl	800e808 <PixelType::GetMap(pixel::Type)>
 800e576:	60a0      	str	r0, [r4, #8]
 800e578:	7c63      	ldrb	r3, [r4, #17]
 800e57a:	7c22      	ldrb	r2, [r4, #16]
 800e57c:	6820      	ldr	r0, [r4, #0]
 800e57e:	429a      	cmp	r2, r3
 800e580:	bf28      	it	cs
 800e582:	2300      	movcs	r3, #0
 800e584:	f10d 0207 	add.w	r2, sp, #7
 800e588:	bf28      	it	cs
 800e58a:	8223      	strhcs	r3, [r4, #16]
 800e58c:	f10d 0106 	add.w	r1, sp, #6
 800e590:	f7ff ffcf 	bl	800e532 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800e594:	7c23      	ldrb	r3, [r4, #16]
 800e596:	b913      	cbnz	r3, 800e59e <PixelConfiguration::Validate(unsigned int&)+0x52>
 800e598:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800e59c:	7423      	strb	r3, [r4, #16]
 800e59e:	7c63      	ldrb	r3, [r4, #17]
 800e5a0:	b913      	cbnz	r3, 800e5a8 <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800e5a2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e5a6:	7463      	strb	r3, [r4, #17]
 800e5a8:	4b29      	ldr	r3, [pc, #164]	; (800e650 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800e5aa:	e01e      	b.n	800e5ea <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800e5ac:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800e5b0:	bf28      	it	cs
 800e5b2:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800e5b6:	6063      	str	r3, [r4, #4]
 800e5b8:	2303      	movs	r3, #3
 800e5ba:	600b      	str	r3, [r1, #0]
 800e5bc:	f1a0 030b 	sub.w	r3, r0, #11
 800e5c0:	2b01      	cmp	r3, #1
 800e5c2:	d806      	bhi.n	800e5d2 <PixelConfiguration::Validate(unsigned int&)+0x86>
 800e5c4:	7ca3      	ldrb	r3, [r4, #18]
 800e5c6:	2b1f      	cmp	r3, #31
 800e5c8:	d83d      	bhi.n	800e646 <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800e5ca:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800e5ce:	74a3      	strb	r3, [r4, #18]
 800e5d0:	e001      	b.n	800e5d6 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800e5d2:	2800      	cmp	r0, #0
 800e5d4:	d139      	bne.n	800e64a <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800e5d6:	2300      	movs	r3, #0
 800e5d8:	2a06      	cmp	r2, #6
 800e5da:	bf08      	it	eq
 800e5dc:	60a3      	streq	r3, [r4, #8]
 800e5de:	280d      	cmp	r0, #13
 800e5e0:	7563      	strb	r3, [r4, #21]
 800e5e2:	68e3      	ldr	r3, [r4, #12]
 800e5e4:	d119      	bne.n	800e61a <PixelConfiguration::Validate(unsigned int&)+0xce>
 800e5e6:	b913      	cbnz	r3, 800e5ee <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800e5e8:	4b1a      	ldr	r3, [pc, #104]	; (800e654 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800e5ea:	60e3      	str	r3, [r4, #12]
 800e5ec:	e003      	b.n	800e5f6 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800e5ee:	4a1a      	ldr	r2, [pc, #104]	; (800e658 <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800e5f0:	4293      	cmp	r3, r2
 800e5f2:	d900      	bls.n	800e5f6 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800e5f4:	60e2      	str	r2, [r4, #12]
 800e5f6:	7d23      	ldrb	r3, [r4, #20]
 800e5f8:	b31b      	cbz	r3, 800e642 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800e5fa:	7ce3      	ldrb	r3, [r4, #19]
 800e5fc:	b9ab      	cbnz	r3, 800e62a <PixelConfiguration::Validate(unsigned int&)+0xde>
 800e5fe:	6822      	ldr	r2, [r4, #0]
 800e600:	b17a      	cbz	r2, 800e622 <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800e602:	f1a2 030b 	sub.w	r3, r2, #11
 800e606:	2b01      	cmp	r3, #1
 800e608:	d90d      	bls.n	800e626 <PixelConfiguration::Validate(unsigned int&)+0xda>
 800e60a:	4b14      	ldr	r3, [pc, #80]	; (800e65c <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800e60c:	4914      	ldr	r1, [pc, #80]	; (800e660 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800e60e:	2a0d      	cmp	r2, #13
 800e610:	bf08      	it	eq
 800e612:	460b      	moveq	r3, r1
 800e614:	61a3      	str	r3, [r4, #24]
 800e616:	b002      	add	sp, #8
 800e618:	bd10      	pop	{r4, pc}
 800e61a:	2b00      	cmp	r3, #0
 800e61c:	d0e4      	beq.n	800e5e8 <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800e61e:	4a11      	ldr	r2, [pc, #68]	; (800e664 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800e620:	e7e6      	b.n	800e5f0 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800e622:	4b11      	ldr	r3, [pc, #68]	; (800e668 <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800e624:	e7f6      	b.n	800e614 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800e626:	4b11      	ldr	r3, [pc, #68]	; (800e66c <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800e628:	e7f4      	b.n	800e614 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800e62a:	f1a3 0214 	sub.w	r2, r3, #20
 800e62e:	2a05      	cmp	r2, #5
 800e630:	d807      	bhi.n	800e642 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800e632:	3b15      	subs	r3, #21
 800e634:	2b04      	cmp	r3, #4
 800e636:	bf96      	itet	ls
 800e638:	4a0d      	ldrls	r2, [pc, #52]	; (800e670 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800e63a:	4b0e      	ldrhi	r3, [pc, #56]	; (800e674 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800e63c:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800e640:	e7e8      	b.n	800e614 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800e642:	4b07      	ldr	r3, [pc, #28]	; (800e660 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800e644:	e7e6      	b.n	800e614 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800e646:	23ff      	movs	r3, #255	; 0xff
 800e648:	e7c1      	b.n	800e5ce <PixelConfiguration::Validate(unsigned int&)+0x82>
 800e64a:	280d      	cmp	r0, #13
 800e64c:	d18d      	bne.n	800e56a <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800e64e:	e7c2      	b.n	800e5d6 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800e650:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800e654:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800e658:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800e65c:	08017fec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 800e660:	08017cec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, ip, sp, lr}
 800e664:	017d7840 	cmneq	sp, r0, asr #16
 800e668:	080182ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, pc}
 800e66c:	080183ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, pc}
 800e670:	08017cd8 	stmdaeq	r1, {r3, r4, r6, r7, sl, fp, ip, sp, lr}
 800e674:	08017dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, ip, sp, lr}

0800e678 <PixelConfiguration::Print()>:
 800e678:	b513      	push	{r0, r1, r4, lr}
 800e67a:	4604      	mov	r4, r0
 800e67c:	4825      	ldr	r0, [pc, #148]	; (800e714 <PixelConfiguration::Print()+0x9c>)
 800e67e:	f7fa ffc7 	bl	8009610 <printf>
 800e682:	6820      	ldr	r0, [r4, #0]
 800e684:	f000 f85c 	bl	800e740 <PixelType::GetType(pixel::Type)>
 800e688:	6822      	ldr	r2, [r4, #0]
 800e68a:	4601      	mov	r1, r0
 800e68c:	4822      	ldr	r0, [pc, #136]	; (800e718 <PixelConfiguration::Print()+0xa0>)
 800e68e:	f7fa ffbf 	bl	8009610 <printf>
 800e692:	6861      	ldr	r1, [r4, #4]
 800e694:	4821      	ldr	r0, [pc, #132]	; (800e71c <PixelConfiguration::Print()+0xa4>)
 800e696:	f7fa ffbb 	bl	8009610 <printf>
 800e69a:	7d63      	ldrb	r3, [r4, #21]
 800e69c:	2b00      	cmp	r3, #0
 800e69e:	d030      	beq.n	800e702 <PixelConfiguration::Print()+0x8a>
 800e6a0:	68a0      	ldr	r0, [r4, #8]
 800e6a2:	f000 f8a5 	bl	800e7f0 <PixelType::GetMap(pixel::Map)>
 800e6a6:	68a2      	ldr	r2, [r4, #8]
 800e6a8:	4601      	mov	r1, r0
 800e6aa:	481d      	ldr	r0, [pc, #116]	; (800e720 <PixelConfiguration::Print()+0xa8>)
 800e6ac:	f7fa ffb0 	bl	8009610 <printf>
 800e6b0:	7c20      	ldrb	r0, [r4, #16]
 800e6b2:	f000 f8b3 	bl	800e81c <PixelType::ConvertTxH(unsigned char)>
 800e6b6:	f7f9 fdb9 	bl	800822c <__aeabi_f2d>
 800e6ba:	460b      	mov	r3, r1
 800e6bc:	7c21      	ldrb	r1, [r4, #16]
 800e6be:	4602      	mov	r2, r0
 800e6c0:	9100      	str	r1, [sp, #0]
 800e6c2:	4818      	ldr	r0, [pc, #96]	; (800e724 <PixelConfiguration::Print()+0xac>)
 800e6c4:	f7fa ffa4 	bl	8009610 <printf>
 800e6c8:	7c60      	ldrb	r0, [r4, #17]
 800e6ca:	f000 f8a7 	bl	800e81c <PixelType::ConvertTxH(unsigned char)>
 800e6ce:	f7f9 fdad 	bl	800822c <__aeabi_f2d>
 800e6d2:	460b      	mov	r3, r1
 800e6d4:	7c61      	ldrb	r1, [r4, #17]
 800e6d6:	4602      	mov	r2, r0
 800e6d8:	9100      	str	r1, [sp, #0]
 800e6da:	4813      	ldr	r0, [pc, #76]	; (800e728 <PixelConfiguration::Print()+0xb0>)
 800e6dc:	f7fa ff98 	bl	8009610 <printf>
 800e6e0:	7d21      	ldrb	r1, [r4, #20]
 800e6e2:	4a12      	ldr	r2, [pc, #72]	; (800e72c <PixelConfiguration::Print()+0xb4>)
 800e6e4:	4b12      	ldr	r3, [pc, #72]	; (800e730 <PixelConfiguration::Print()+0xb8>)
 800e6e6:	4813      	ldr	r0, [pc, #76]	; (800e734 <PixelConfiguration::Print()+0xbc>)
 800e6e8:	2900      	cmp	r1, #0
 800e6ea:	bf14      	ite	ne
 800e6ec:	4611      	movne	r1, r2
 800e6ee:	4619      	moveq	r1, r3
 800e6f0:	f7fa ff8e 	bl	8009610 <printf>
 800e6f4:	68e1      	ldr	r1, [r4, #12]
 800e6f6:	4810      	ldr	r0, [pc, #64]	; (800e738 <PixelConfiguration::Print()+0xc0>)
 800e6f8:	b002      	add	sp, #8
 800e6fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e6fe:	f7fa bf87 	b.w	8009610 <printf>
 800e702:	6823      	ldr	r3, [r4, #0]
 800e704:	3b0b      	subs	r3, #11
 800e706:	2b01      	cmp	r3, #1
 800e708:	d8ea      	bhi.n	800e6e0 <PixelConfiguration::Print()+0x68>
 800e70a:	7ca1      	ldrb	r1, [r4, #18]
 800e70c:	480b      	ldr	r0, [pc, #44]	; (800e73c <PixelConfiguration::Print()+0xc4>)
 800e70e:	f7fa ff7f 	bl	8009610 <printf>
 800e712:	e7e5      	b.n	800e6e0 <PixelConfiguration::Print()+0x68>
 800e714:	08017c1e 	stmdaeq	r1, {r1, r2, r3, r4, sl, fp, ip, sp, lr}
 800e718:	08017c33 	stmdaeq	r1, {r0, r1, r4, r5, sl, fp, ip, sp, lr}
 800e71c:	08017c47 	stmdaeq	r1, {r0, r1, r2, r6, sl, fp, ip, sp, lr}
 800e720:	08017c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, sp, lr}
 800e724:	08017c6a 	stmdaeq	r1, {r1, r3, r5, r6, sl, fp, ip, sp, lr}
 800e728:	08017c82 	stmdaeq	r1, {r1, r7, sl, fp, ip, sp, lr}
 800e72c:	08017c17 	stmdaeq	r1, {r0, r1, r2, r4, sl, fp, ip, sp, lr}
 800e730:	08017c1b 	stmdaeq	r1, {r0, r1, r3, r4, sl, fp, ip, sp, lr}
 800e734:	08017cb1 	stmdaeq	r1, {r0, r4, r5, r7, sl, fp, ip, sp, lr}
 800e738:	08017cc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, sl, fp, ip, sp, lr}
 800e73c:	08017c9a 	stmdaeq	r1, {r1, r3, r4, r7, sl, fp, ip, sp, lr}

0800e740 <PixelType::GetType(pixel::Type)>:
 800e740:	280d      	cmp	r0, #13
 800e742:	bfda      	itte	le
 800e744:	4b02      	ldrle	r3, [pc, #8]	; (800e750 <PixelType::GetType(pixel::Type)+0x10>)
 800e746:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800e74a:	4802      	ldrgt	r0, [pc, #8]	; (800e754 <PixelType::GetType(pixel::Type)+0x14>)
 800e74c:	4770      	bx	lr
 800e74e:	bf00      	nop
 800e750:	08018520 	stmdaeq	r1, {r5, r8, sl, pc}
 800e754:	080184ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, pc}

0800e758 <PixelType::GetType(char const*)>:
 800e758:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e75a:	4604      	mov	r4, r0
 800e75c:	2000      	movs	r0, #0
 800e75e:	490f      	ldr	r1, [pc, #60]	; (800e79c <PixelType::GetType(char const*)+0x44>)
 800e760:	1e67      	subs	r7, r4, #1
 800e762:	1e4e      	subs	r6, r1, #1
 800e764:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800e768:	4615      	mov	r5, r2
 800e76a:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800e76e:	2b19      	cmp	r3, #25
 800e770:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800e774:	bf98      	it	ls
 800e776:	f102 0520 	addls.w	r5, r2, #32
 800e77a:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800e77e:	f1bc 0f19 	cmp.w	ip, #25
 800e782:	bf98      	it	ls
 800e784:	3320      	addls	r3, #32
 800e786:	42ab      	cmp	r3, r5
 800e788:	d005      	beq.n	800e796 <PixelType::GetType(char const*)+0x3e>
 800e78a:	3001      	adds	r0, #1
 800e78c:	280e      	cmp	r0, #14
 800e78e:	f101 0108 	add.w	r1, r1, #8
 800e792:	d1e5      	bne.n	800e760 <PixelType::GetType(char const*)+0x8>
 800e794:	e001      	b.n	800e79a <PixelType::GetType(char const*)+0x42>
 800e796:	2a00      	cmp	r2, #0
 800e798:	d1e4      	bne.n	800e764 <PixelType::GetType(char const*)+0xc>
 800e79a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e79c:	08018520 	stmdaeq	r1, {r5, r8, sl, pc}

0800e7a0 <PixelType::GetMap(char const*)>:
 800e7a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7a2:	4605      	mov	r5, r0
 800e7a4:	2000      	movs	r0, #0
 800e7a6:	4b11      	ldr	r3, [pc, #68]	; (800e7ec <PixelType::GetMap(char const*)+0x4c>)
 800e7a8:	1e5c      	subs	r4, r3, #1
 800e7aa:	1e6e      	subs	r6, r5, #1
 800e7ac:	f103 0c02 	add.w	ip, r3, #2
 800e7b0:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800e7b4:	4617      	mov	r7, r2
 800e7b6:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800e7ba:	2919      	cmp	r1, #25
 800e7bc:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800e7c0:	bf98      	it	ls
 800e7c2:	f102 0720 	addls.w	r7, r2, #32
 800e7c6:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800e7ca:	f1be 0f19 	cmp.w	lr, #25
 800e7ce:	bf98      	it	ls
 800e7d0:	3120      	addls	r1, #32
 800e7d2:	42b9      	cmp	r1, r7
 800e7d4:	d005      	beq.n	800e7e2 <PixelType::GetMap(char const*)+0x42>
 800e7d6:	3001      	adds	r0, #1
 800e7d8:	2806      	cmp	r0, #6
 800e7da:	f103 0304 	add.w	r3, r3, #4
 800e7de:	d1e3      	bne.n	800e7a8 <PixelType::GetMap(char const*)+0x8>
 800e7e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e7e2:	2a00      	cmp	r2, #0
 800e7e4:	d0fc      	beq.n	800e7e0 <PixelType::GetMap(char const*)+0x40>
 800e7e6:	4564      	cmp	r4, ip
 800e7e8:	d1e2      	bne.n	800e7b0 <PixelType::GetMap(char const*)+0x10>
 800e7ea:	e7f9      	b.n	800e7e0 <PixelType::GetMap(char const*)+0x40>
 800e7ec:	08018508 	stmdaeq	r1, {r3, r8, sl, pc}

0800e7f0 <PixelType::GetMap(pixel::Map)>:
 800e7f0:	2805      	cmp	r0, #5
 800e7f2:	bfda      	itte	le
 800e7f4:	4b02      	ldrle	r3, [pc, #8]	; (800e800 <PixelType::GetMap(pixel::Map)+0x10>)
 800e7f6:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800e7fa:	4802      	ldrgt	r0, [pc, #8]	; (800e804 <PixelType::GetMap(pixel::Map)+0x14>)
 800e7fc:	4770      	bx	lr
 800e7fe:	bf00      	nop
 800e800:	08018508 	stmdaeq	r1, {r3, r8, sl, pc}
 800e804:	080184f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, pc}

0800e808 <PixelType::GetMap(pixel::Type)>:
 800e808:	3801      	subs	r0, #1
 800e80a:	2809      	cmp	r0, #9
 800e80c:	bf9a      	itte	ls
 800e80e:	4b02      	ldrls	r3, [pc, #8]	; (800e818 <PixelType::GetMap(pixel::Type)+0x10>)
 800e810:	5618      	ldrsbls	r0, [r3, r0]
 800e812:	2002      	movhi	r0, #2
 800e814:	4770      	bx	lr
 800e816:	bf00      	nop
 800e818:	080184fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, pc}

0800e81c <PixelType::ConvertTxH(unsigned char)>:
 800e81c:	28f0      	cmp	r0, #240	; 0xf0
 800e81e:	d010      	beq.n	800e842 <PixelType::ConvertTxH(unsigned char)+0x26>
 800e820:	d807      	bhi.n	800e832 <PixelType::ConvertTxH(unsigned char)+0x16>
 800e822:	28c0      	cmp	r0, #192	; 0xc0
 800e824:	d00f      	beq.n	800e846 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800e826:	28e0      	cmp	r0, #224	; 0xe0
 800e828:	d00f      	beq.n	800e84a <PixelType::ConvertTxH(unsigned char)+0x2e>
 800e82a:	2880      	cmp	r0, #128	; 0x80
 800e82c:	d113      	bne.n	800e856 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800e82e:	480b      	ldr	r0, [pc, #44]	; (800e85c <PixelType::ConvertTxH(unsigned char)+0x40>)
 800e830:	4770      	bx	lr
 800e832:	28fc      	cmp	r0, #252	; 0xfc
 800e834:	d00b      	beq.n	800e84e <PixelType::ConvertTxH(unsigned char)+0x32>
 800e836:	28fe      	cmp	r0, #254	; 0xfe
 800e838:	d00b      	beq.n	800e852 <PixelType::ConvertTxH(unsigned char)+0x36>
 800e83a:	28f8      	cmp	r0, #248	; 0xf8
 800e83c:	d10b      	bne.n	800e856 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800e83e:	4808      	ldr	r0, [pc, #32]	; (800e860 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800e840:	4770      	bx	lr
 800e842:	4808      	ldr	r0, [pc, #32]	; (800e864 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800e844:	4770      	bx	lr
 800e846:	4808      	ldr	r0, [pc, #32]	; (800e868 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800e848:	4770      	bx	lr
 800e84a:	4808      	ldr	r0, [pc, #32]	; (800e86c <PixelType::ConvertTxH(unsigned char)+0x50>)
 800e84c:	4770      	bx	lr
 800e84e:	4808      	ldr	r0, [pc, #32]	; (800e870 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800e850:	4770      	bx	lr
 800e852:	4808      	ldr	r0, [pc, #32]	; (800e874 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800e854:	4770      	bx	lr
 800e856:	2000      	movs	r0, #0
 800e858:	4770      	bx	lr
 800e85a:	bf00      	nop
 800e85c:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800e860:	3f480000 	svccc	0x00480000
 800e864:	3f200000 	svccc	0x00200000
 800e868:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800e86c:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800e870:	3f700000 	svccc	0x00700000
 800e874:	3f8c0000 	svccc	0x008c0000

0800e878 <PixelType::ConvertTxH(float)>:
 800e878:	b510      	push	{r4, lr}
 800e87a:	491d      	ldr	r1, [pc, #116]	; (800e8f0 <PixelType::ConvertTxH(float)+0x78>)
 800e87c:	4604      	mov	r4, r0
 800e87e:	f7f9 fb09 	bl	8007e94 <__aeabi_fcmplt>
 800e882:	bb30      	cbnz	r0, 800e8d2 <PixelType::ConvertTxH(float)+0x5a>
 800e884:	4620      	mov	r0, r4
 800e886:	491b      	ldr	r1, [pc, #108]	; (800e8f4 <PixelType::ConvertTxH(float)+0x7c>)
 800e888:	f7f9 fb04 	bl	8007e94 <__aeabi_fcmplt>
 800e88c:	bb18      	cbnz	r0, 800e8d6 <PixelType::ConvertTxH(float)+0x5e>
 800e88e:	4620      	mov	r0, r4
 800e890:	4919      	ldr	r1, [pc, #100]	; (800e8f8 <PixelType::ConvertTxH(float)+0x80>)
 800e892:	f7f9 faff 	bl	8007e94 <__aeabi_fcmplt>
 800e896:	bb00      	cbnz	r0, 800e8da <PixelType::ConvertTxH(float)+0x62>
 800e898:	4620      	mov	r0, r4
 800e89a:	4918      	ldr	r1, [pc, #96]	; (800e8fc <PixelType::ConvertTxH(float)+0x84>)
 800e89c:	f7f9 fafa 	bl	8007e94 <__aeabi_fcmplt>
 800e8a0:	b9e8      	cbnz	r0, 800e8de <PixelType::ConvertTxH(float)+0x66>
 800e8a2:	4620      	mov	r0, r4
 800e8a4:	4916      	ldr	r1, [pc, #88]	; (800e900 <PixelType::ConvertTxH(float)+0x88>)
 800e8a6:	f7f9 faf5 	bl	8007e94 <__aeabi_fcmplt>
 800e8aa:	b9d0      	cbnz	r0, 800e8e2 <PixelType::ConvertTxH(float)+0x6a>
 800e8ac:	4620      	mov	r0, r4
 800e8ae:	4915      	ldr	r1, [pc, #84]	; (800e904 <PixelType::ConvertTxH(float)+0x8c>)
 800e8b0:	f7f9 faf0 	bl	8007e94 <__aeabi_fcmplt>
 800e8b4:	b9b8      	cbnz	r0, 800e8e6 <PixelType::ConvertTxH(float)+0x6e>
 800e8b6:	4620      	mov	r0, r4
 800e8b8:	4913      	ldr	r1, [pc, #76]	; (800e908 <PixelType::ConvertTxH(float)+0x90>)
 800e8ba:	f7f9 faeb 	bl	8007e94 <__aeabi_fcmplt>
 800e8be:	b9a0      	cbnz	r0, 800e8ea <PixelType::ConvertTxH(float)+0x72>
 800e8c0:	4620      	mov	r0, r4
 800e8c2:	4912      	ldr	r1, [pc, #72]	; (800e90c <PixelType::ConvertTxH(float)+0x94>)
 800e8c4:	f7f9 fae6 	bl	8007e94 <__aeabi_fcmplt>
 800e8c8:	2800      	cmp	r0, #0
 800e8ca:	bf14      	ite	ne
 800e8cc:	20fe      	movne	r0, #254	; 0xfe
 800e8ce:	2000      	moveq	r0, #0
 800e8d0:	bd10      	pop	{r4, pc}
 800e8d2:	2000      	movs	r0, #0
 800e8d4:	e7fc      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8d6:	2080      	movs	r0, #128	; 0x80
 800e8d8:	e7fa      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8da:	20c0      	movs	r0, #192	; 0xc0
 800e8dc:	e7f8      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8de:	20e0      	movs	r0, #224	; 0xe0
 800e8e0:	e7f6      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8e2:	20f0      	movs	r0, #240	; 0xf0
 800e8e4:	e7f4      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8e6:	20f8      	movs	r0, #248	; 0xf8
 800e8e8:	e7f2      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8ea:	20fc      	movs	r0, #252	; 0xfc
 800e8ec:	e7f0      	b.n	800e8d0 <PixelType::ConvertTxH(float)+0x58>
 800e8ee:	bf00      	nop
 800e8f0:	3da00000 	stccc	0, cr0, [r0]
 800e8f4:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800e8f8:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800e8fc:	3f0c0000 	svccc	0x000c0000
 800e900:	3f340000 	svccc	0x00340000
 800e904:	3f5c0000 	svccc	0x005c0000
 800e908:	3f820000 	svccc	0x00820000
 800e90c:	3f960000 	svccc	0x00960000

0800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800e910:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e912:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800e916:	f3c2 2607 	ubfx	r6, r2, #8, #8
 800e91a:	b2d4      	uxtb	r4, r2
 800e91c:	4a10      	ldr	r2, [pc, #64]	; (800e960 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 800e91e:	4605      	mov	r5, r0
 800e920:	6810      	ldr	r0, [r2, #0]
 800e922:	6802      	ldr	r2, [r0, #0]
 800e924:	2a07      	cmp	r2, #7
 800e926:	d007      	beq.n	800e938 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 800e928:	460a      	mov	r2, r1
 800e92a:	e9cd 6400 	strd	r6, r4, [sp]
 800e92e:	4629      	mov	r1, r5
 800e930:	f000 ff58 	bl	800f7e4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e934:	b004      	add	sp, #16
 800e936:	bd70      	pop	{r4, r5, r6, pc}
 800e938:	42b3      	cmp	r3, r6
 800e93a:	f04f 0200 	mov.w	r2, #0
 800e93e:	d10a      	bne.n	800e956 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800e940:	42a3      	cmp	r3, r4
 800e942:	d108      	bne.n	800e956 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800e944:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800e948:	4613      	mov	r3, r2
 800e94a:	9200      	str	r2, [sp, #0]
 800e94c:	460a      	mov	r2, r1
 800e94e:	4629      	mov	r1, r5
 800e950:	f000 ffd0 	bl	800f8f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e954:	e7ee      	b.n	800e934 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800e956:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800e95a:	9600      	str	r6, [sp, #0]
 800e95c:	e7f6      	b.n	800e94c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 800e95e:	bf00      	nop
 800e960:	2000c988 	andcs	ip, r0, r8, lsl #19

0800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800e964:	b570      	push	{r4, r5, r6, lr}
 800e966:	4605      	mov	r5, r0
 800e968:	2400      	movs	r4, #0
 800e96a:	4e06      	ldr	r6, [pc, #24]	; (800e984 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800e96c:	6833      	ldr	r3, [r6, #0]
 800e96e:	429c      	cmp	r4, r3
 800e970:	d300      	bcc.n	800e974 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800e972:	bd70      	pop	{r4, r5, r6, pc}
 800e974:	4621      	mov	r1, r4
 800e976:	2200      	movs	r2, #0
 800e978:	4628      	mov	r0, r5
 800e97a:	f7ff ffc9 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800e97e:	3401      	adds	r4, #1
 800e980:	e7f4      	b.n	800e96c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800e982:	bf00      	nop
 800e984:	2000c984 	andcs	ip, r0, r4, lsl #19

0800e988 <PixelPatterns::PixelPatterns(unsigned int)>:
 800e988:	2908      	cmp	r1, #8
 800e98a:	bf28      	it	cs
 800e98c:	2108      	movcs	r1, #8
 800e98e:	4b0b      	ldr	r3, [pc, #44]	; (800e9bc <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800e990:	4a0b      	ldr	r2, [pc, #44]	; (800e9c0 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800e992:	681b      	ldr	r3, [r3, #0]
 800e994:	b510      	push	{r4, lr}
 800e996:	6013      	str	r3, [r2, #0]
 800e998:	4a0a      	ldr	r2, [pc, #40]	; (800e9c4 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800e99a:	6011      	str	r1, [r2, #0]
 800e99c:	685a      	ldr	r2, [r3, #4]
 800e99e:	4b0a      	ldr	r3, [pc, #40]	; (800e9c8 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800e9a0:	2100      	movs	r1, #0
 800e9a2:	601a      	str	r2, [r3, #0]
 800e9a4:	2208      	movs	r2, #8
 800e9a6:	4b09      	ldr	r3, [pc, #36]	; (800e9cc <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800e9a8:	681c      	ldr	r4, [r3, #0]
 800e9aa:	4b09      	ldr	r3, [pc, #36]	; (800e9d0 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800e9ac:	3a01      	subs	r2, #1
 800e9ae:	61d9      	str	r1, [r3, #28]
 800e9b0:	601c      	str	r4, [r3, #0]
 800e9b2:	6199      	str	r1, [r3, #24]
 800e9b4:	f103 0320 	add.w	r3, r3, #32
 800e9b8:	d1f8      	bne.n	800e9ac <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800e9ba:	bd10      	pop	{r4, pc}
 800e9bc:	2000c994 	mulcs	r0, r4, r9
 800e9c0:	2000c988 	andcs	ip, r0, r8, lsl #19
 800e9c4:	2000c97c 	andcs	ip, r0, ip, ror r9
 800e9c8:	2000c984 	andcs	ip, r0, r4, lsl #19
 800e9cc:	2001d994 	mulcs	r1, r4, r9
 800e9d0:	2000c87c 	andcs	ip, r0, ip, ror r8

0800e9d4 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800e9d4:	2805      	cmp	r0, #5
 800e9d6:	bfdd      	ittte	le
 800e9d8:	220e      	movle	r2, #14
 800e9da:	4b02      	ldrle	r3, [pc, #8]	; (800e9e4 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800e9dc:	fb02 3000 	mlale	r0, r2, r0, r3
 800e9e0:	4801      	ldrgt	r0, [pc, #4]	; (800e9e8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800e9e2:	4770      	bx	lr
 800e9e4:	08018590 	stmdaeq	r1, {r4, r7, r8, sl, pc}
 800e9e8:	080184ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, pc}

0800e9ec <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800e9ec:	b5e0      	push	{r5, r6, r7, lr}
 800e9ee:	4608      	mov	r0, r1
 800e9f0:	460d      	mov	r5, r1
 800e9f2:	4617      	mov	r7, r2
 800e9f4:	461e      	mov	r6, r3
 800e9f6:	f7ff ffb5 	bl	800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800e9fa:	2301      	movs	r3, #1
 800e9fc:	4905      	ldr	r1, [pc, #20]	; (800ea14 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800e9fe:	22ff      	movs	r2, #255	; 0xff
 800ea00:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ea04:	61cb      	str	r3, [r1, #28]
 800ea06:	2300      	movs	r3, #0
 800ea08:	604f      	str	r7, [r1, #4]
 800ea0a:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800ea0e:	618e      	str	r6, [r1, #24]
 800ea10:	bde0      	pop	{r5, r6, r7, pc}
 800ea12:	bf00      	nop
 800ea14:	2000c87c 	andcs	ip, r0, ip, ror r8

0800ea18 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800ea18:	b5e0      	push	{r5, r6, r7, lr}
 800ea1a:	4608      	mov	r0, r1
 800ea1c:	460d      	mov	r5, r1
 800ea1e:	461e      	mov	r6, r3
 800ea20:	4617      	mov	r7, r2
 800ea22:	f7ff ff9f 	bl	800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800ea26:	2302      	movs	r3, #2
 800ea28:	4907      	ldr	r1, [pc, #28]	; (800ea48 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800ea2a:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ea2e:	61cb      	str	r3, [r1, #28]
 800ea30:	9b04      	ldr	r3, [sp, #16]
 800ea32:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800ea36:	604b      	str	r3, [r1, #4]
 800ea38:	4b04      	ldr	r3, [pc, #16]	; (800ea4c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800ea3a:	681b      	ldr	r3, [r3, #0]
 800ea3c:	610b      	str	r3, [r1, #16]
 800ea3e:	2300      	movs	r3, #0
 800ea40:	614b      	str	r3, [r1, #20]
 800ea42:	9b05      	ldr	r3, [sp, #20]
 800ea44:	618b      	str	r3, [r1, #24]
 800ea46:	bde0      	pop	{r5, r6, r7, pc}
 800ea48:	2000c87c 	andcs	ip, r0, ip, ror r8
 800ea4c:	2000c984 	andcs	ip, r0, r4, lsl #19

0800ea50 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800ea50:	b5e0      	push	{r5, r6, r7, lr}
 800ea52:	4608      	mov	r0, r1
 800ea54:	460d      	mov	r5, r1
 800ea56:	461f      	mov	r7, r3
 800ea58:	4616      	mov	r6, r2
 800ea5a:	f7ff ff83 	bl	800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800ea5e:	2303      	movs	r3, #3
 800ea60:	4906      	ldr	r1, [pc, #24]	; (800ea7c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800ea62:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ea66:	61cb      	str	r3, [r1, #28]
 800ea68:	4b05      	ldr	r3, [pc, #20]	; (800ea80 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800ea6a:	604f      	str	r7, [r1, #4]
 800ea6c:	681b      	ldr	r3, [r3, #0]
 800ea6e:	608e      	str	r6, [r1, #8]
 800ea70:	610b      	str	r3, [r1, #16]
 800ea72:	2300      	movs	r3, #0
 800ea74:	614b      	str	r3, [r1, #20]
 800ea76:	9b04      	ldr	r3, [sp, #16]
 800ea78:	618b      	str	r3, [r1, #24]
 800ea7a:	bde0      	pop	{r5, r6, r7, pc}
 800ea7c:	2000c87c 	andcs	ip, r0, ip, ror r8
 800ea80:	2000c984 	andcs	ip, r0, r4, lsl #19

0800ea84 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800ea84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea86:	4608      	mov	r0, r1
 800ea88:	460d      	mov	r5, r1
 800ea8a:	461f      	mov	r7, r3
 800ea8c:	4616      	mov	r6, r2
 800ea8e:	f7ff ff69 	bl	800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800ea92:	2304      	movs	r3, #4
 800ea94:	4c12      	ldr	r4, [pc, #72]	; (800eae0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800ea96:	4913      	ldr	r1, [pc, #76]	; (800eae4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800ea98:	6820      	ldr	r0, [r4, #0]
 800ea9a:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800ea9e:	61cb      	str	r3, [r1, #28]
 800eaa0:	1e43      	subs	r3, r0, #1
 800eaa2:	005b      	lsls	r3, r3, #1
 800eaa4:	b29b      	uxth	r3, r3
 800eaa6:	610b      	str	r3, [r1, #16]
 800eaa8:	2300      	movs	r3, #0
 800eaaa:	4d0f      	ldr	r5, [pc, #60]	; (800eae8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800eaac:	614b      	str	r3, [r1, #20]
 800eaae:	682b      	ldr	r3, [r5, #0]
 800eab0:	604f      	str	r7, [r1, #4]
 800eab2:	608e      	str	r6, [r1, #8]
 800eab4:	b97b      	cbnz	r3, 800ead6 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800eab6:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800eaba:	4298      	cmp	r0, r3
 800eabc:	bf2c      	ite	cs
 800eabe:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800eac2:	0080      	lslcc	r0, r0, #2
 800eac4:	f005 f886 	bl	8013bd4 <operator new[](unsigned int)>
 800eac8:	2200      	movs	r2, #0
 800eaca:	6823      	ldr	r3, [r4, #0]
 800eacc:	6028      	str	r0, [r5, #0]
 800eace:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800ead2:	4298      	cmp	r0, r3
 800ead4:	d100      	bne.n	800ead8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800ead6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ead8:	f840 2b04 	str.w	r2, [r0], #4
 800eadc:	e7f9      	b.n	800ead2 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800eade:	bf00      	nop
 800eae0:	2000c984 	andcs	ip, r0, r4, lsl #19
 800eae4:	2000c87c 	andcs	ip, r0, ip, ror r8
 800eae8:	2000c980 	andcs	ip, r0, r0, lsl #19

0800eaec <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800eaec:	b5e0      	push	{r5, r6, r7, lr}
 800eaee:	4608      	mov	r0, r1
 800eaf0:	460d      	mov	r5, r1
 800eaf2:	461e      	mov	r6, r3
 800eaf4:	4617      	mov	r7, r2
 800eaf6:	f7ff ff35 	bl	800e964 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800eafa:	2305      	movs	r3, #5
 800eafc:	4907      	ldr	r1, [pc, #28]	; (800eb1c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800eafe:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800eb02:	61cb      	str	r3, [r1, #28]
 800eb04:	9b05      	ldr	r3, [sp, #20]
 800eb06:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800eb0a:	604b      	str	r3, [r1, #4]
 800eb0c:	9b04      	ldr	r3, [sp, #16]
 800eb0e:	610b      	str	r3, [r1, #16]
 800eb10:	2300      	movs	r3, #0
 800eb12:	614b      	str	r3, [r1, #20]
 800eb14:	9b06      	ldr	r3, [sp, #24]
 800eb16:	618b      	str	r3, [r1, #24]
 800eb18:	bde0      	pop	{r5, r6, r7, pc}
 800eb1a:	bf00      	nop
 800eb1c:	2000c87c 	andcs	ip, r0, ip, ror r8

0800eb20 <PixelPatterns::Wheel(unsigned char)>:
 800eb20:	43cb      	mvns	r3, r1
 800eb22:	b2db      	uxtb	r3, r3
 800eb24:	2b54      	cmp	r3, #84	; 0x54
 800eb26:	d809      	bhi.n	800eb3c <PixelPatterns::Wheel(unsigned char)+0x1c>
 800eb28:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800eb2c:	b2db      	uxtb	r3, r3
 800eb2e:	1e5a      	subs	r2, r3, #1
 800eb30:	4258      	negs	r0, r3
 800eb32:	b2d2      	uxtb	r2, r2
 800eb34:	b2c0      	uxtb	r0, r0
 800eb36:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800eb3a:	4770      	bx	lr
 800eb3c:	2ba9      	cmp	r3, #169	; 0xa9
 800eb3e:	d809      	bhi.n	800eb54 <PixelPatterns::Wheel(unsigned char)+0x34>
 800eb40:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800eb44:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800eb48:	b2c9      	uxtb	r1, r1
 800eb4a:	43c8      	mvns	r0, r1
 800eb4c:	b2c0      	uxtb	r0, r0
 800eb4e:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800eb52:	4770      	bx	lr
 800eb54:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800eb58:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800eb5c:	b2c9      	uxtb	r1, r1
 800eb5e:	0208      	lsls	r0, r1, #8
 800eb60:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800eb64:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800eb68:	4770      	bx	lr
	...

0800eb6c <PixelPatterns::Increment(unsigned int)>:
 800eb6c:	4a0d      	ldr	r2, [pc, #52]	; (800eba4 <PixelPatterns::Increment(unsigned int)+0x38>)
 800eb6e:	b510      	push	{r4, lr}
 800eb70:	014c      	lsls	r4, r1, #5
 800eb72:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800eb76:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800eb7a:	b930      	cbnz	r0, 800eb8a <PixelPatterns::Increment(unsigned int)+0x1e>
 800eb7c:	690a      	ldr	r2, [r1, #16]
 800eb7e:	3301      	adds	r3, #1
 800eb80:	4293      	cmp	r3, r2
 800eb82:	bf18      	it	ne
 800eb84:	4618      	movne	r0, r3
 800eb86:	6148      	str	r0, [r1, #20]
 800eb88:	bd10      	pop	{r4, pc}
 800eb8a:	b92b      	cbnz	r3, 800eb98 <PixelPatterns::Increment(unsigned int)+0x2c>
 800eb8c:	4422      	add	r2, r4
 800eb8e:	6913      	ldr	r3, [r2, #16]
 800eb90:	3b01      	subs	r3, #1
 800eb92:	b29b      	uxth	r3, r3
 800eb94:	6153      	str	r3, [r2, #20]
 800eb96:	e7f7      	b.n	800eb88 <PixelPatterns::Increment(unsigned int)+0x1c>
 800eb98:	3b01      	subs	r3, #1
 800eb9a:	614b      	str	r3, [r1, #20]
 800eb9c:	2b00      	cmp	r3, #0
 800eb9e:	d1f3      	bne.n	800eb88 <PixelPatterns::Increment(unsigned int)+0x1c>
 800eba0:	e7f4      	b.n	800eb8c <PixelPatterns::Increment(unsigned int)+0x20>
 800eba2:	bf00      	nop
 800eba4:	2000c87c 	andcs	ip, r0, ip, ror r8

0800eba8 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800eba8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ebac:	4605      	mov	r5, r0
 800ebae:	460c      	mov	r4, r1
 800ebb0:	2700      	movs	r7, #0
 800ebb2:	4b11      	ldr	r3, [pc, #68]	; (800ebf8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800ebb4:	f8df 8044 	ldr.w	r8, [pc, #68]	; 800ebfc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800ebb8:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ebbc:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800ebc0:	f8d8 3000 	ldr.w	r3, [r8]
 800ebc4:	b2be      	uxth	r6, r7
 800ebc6:	42b3      	cmp	r3, r6
 800ebc8:	f107 0701 	add.w	r7, r7, #1
 800ebcc:	d805      	bhi.n	800ebda <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800ebce:	4621      	mov	r1, r4
 800ebd0:	4628      	mov	r0, r5
 800ebd2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ebd6:	f7ff bfc9 	b.w	800eb6c <PixelPatterns::Increment(unsigned int)>
 800ebda:	0231      	lsls	r1, r6, #8
 800ebdc:	fbb1 f1f3 	udiv	r1, r1, r3
 800ebe0:	4449      	add	r1, r9
 800ebe2:	4628      	mov	r0, r5
 800ebe4:	b2c9      	uxtb	r1, r1
 800ebe6:	f7ff ff9b 	bl	800eb20 <PixelPatterns::Wheel(unsigned char)>
 800ebea:	4631      	mov	r1, r6
 800ebec:	4602      	mov	r2, r0
 800ebee:	4620      	mov	r0, r4
 800ebf0:	f7ff fe8e 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ebf4:	e7e4      	b.n	800ebc0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800ebf6:	bf00      	nop
 800ebf8:	2000c87c 	andcs	ip, r0, ip, ror r8
 800ebfc:	2000c984 	andcs	ip, r0, r4, lsl #19

0800ec00 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800ec00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec04:	4605      	mov	r5, r0
 800ec06:	460c      	mov	r4, r1
 800ec08:	f04f 0b00 	mov.w	fp, #0
 800ec0c:	4b11      	ldr	r3, [pc, #68]	; (800ec54 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800ec0e:	4e12      	ldr	r6, [pc, #72]	; (800ec58 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800ec10:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ec14:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800ec18:	f8df a040 	ldr.w	sl, [pc, #64]	; 800ec5c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800ec1c:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800ec20:	6833      	ldr	r3, [r6, #0]
 800ec22:	fa1f f18b 	uxth.w	r1, fp
 800ec26:	428b      	cmp	r3, r1
 800ec28:	d805      	bhi.n	800ec36 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800ec2a:	4621      	mov	r1, r4
 800ec2c:	4628      	mov	r0, r5
 800ec2e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec32:	f7ff bf9b 	b.w	800eb6c <PixelPatterns::Increment(unsigned int)>
 800ec36:	eb09 0301 	add.w	r3, r9, r1
 800ec3a:	fb0a f303 	mul.w	r3, sl, r3
 800ec3e:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800ec42:	bf94      	ite	ls
 800ec44:	463a      	movls	r2, r7
 800ec46:	4642      	movhi	r2, r8
 800ec48:	4620      	mov	r0, r4
 800ec4a:	f7ff fe61 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ec4e:	f10b 0b01 	add.w	fp, fp, #1
 800ec52:	e7e5      	b.n	800ec20 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800ec54:	2000c87c 	andcs	ip, r0, ip, ror r8
 800ec58:	2000c984 	andcs	ip, r0, r4, lsl #19
 800ec5c:	aaaaaaab 	bge	6ab9710 <__stack_size+0x6ab6f10>

0800ec60 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800ec60:	b538      	push	{r3, r4, r5, lr}
 800ec62:	460c      	mov	r4, r1
 800ec64:	4605      	mov	r5, r0
 800ec66:	4b07      	ldr	r3, [pc, #28]	; (800ec84 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800ec68:	4620      	mov	r0, r4
 800ec6a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ec6e:	6959      	ldr	r1, [r3, #20]
 800ec70:	689a      	ldr	r2, [r3, #8]
 800ec72:	f7ff fe4d 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ec76:	4621      	mov	r1, r4
 800ec78:	4628      	mov	r0, r5
 800ec7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ec7e:	f7ff bf75 	b.w	800eb6c <PixelPatterns::Increment(unsigned int)>
 800ec82:	bf00      	nop
 800ec84:	2000c87c 	andcs	ip, r0, ip, ror r8

0800ec88 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800ec88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec8c:	468b      	mov	fp, r1
 800ec8e:	f04f 0900 	mov.w	r9, #0
 800ec92:	4b27      	ldr	r3, [pc, #156]	; (800ed30 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800ec94:	b085      	sub	sp, #20
 800ec96:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ec9a:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800ec9e:	689d      	ldr	r5, [r3, #8]
 800eca0:	f8df a090 	ldr.w	sl, [pc, #144]	; 800ed34 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800eca4:	00b3      	lsls	r3, r6, #2
 800eca6:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ed38 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800ecaa:	9002      	str	r0, [sp, #8]
 800ecac:	9301      	str	r3, [sp, #4]
 800ecae:	1bbf      	subs	r7, r7, r6
 800ecb0:	f8da 2000 	ldr.w	r2, [sl]
 800ecb4:	fa1f f489 	uxth.w	r4, r9
 800ecb8:	42a2      	cmp	r2, r4
 800ecba:	d806      	bhi.n	800ecca <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800ecbc:	4659      	mov	r1, fp
 800ecbe:	9802      	ldr	r0, [sp, #8]
 800ecc0:	b005      	add	sp, #20
 800ecc2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecc6:	f7ff bf51 	b.w	800eb6c <PixelPatterns::Increment(unsigned int)>
 800ecca:	42a6      	cmp	r6, r4
 800eccc:	d10b      	bne.n	800ece6 <PixelPatterns::ScannerUpdate(unsigned int)+0x5e>
 800ecce:	462a      	mov	r2, r5
 800ecd0:	4631      	mov	r1, r6
 800ecd2:	4658      	mov	r0, fp
 800ecd4:	f7ff fe1c 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ecd8:	f8d8 2000 	ldr.w	r2, [r8]
 800ecdc:	9b01      	ldr	r3, [sp, #4]
 800ecde:	50d5      	str	r5, [r2, r3]
 800ece0:	f109 0901 	add.w	r9, r9, #1
 800ece4:	e7e4      	b.n	800ecb0 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800ece6:	42a7      	cmp	r7, r4
 800ece8:	d109      	bne.n	800ecfe <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800ecea:	462a      	mov	r2, r5
 800ecec:	4639      	mov	r1, r7
 800ecee:	4658      	mov	r0, fp
 800ecf0:	f7ff fe0e 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ecf4:	f8d8 2000 	ldr.w	r2, [r8]
 800ecf8:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800ecfc:	e7f0      	b.n	800ece0 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800ecfe:	f8d8 2000 	ldr.w	r2, [r8]
 800ed02:	4658      	mov	r0, fp
 800ed04:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800ed08:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800ed0c:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800ed10:	0212      	lsls	r2, r2, #8
 800ed12:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800ed16:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800ed1a:	430a      	orrs	r2, r1
 800ed1c:	4621      	mov	r1, r4
 800ed1e:	9203      	str	r2, [sp, #12]
 800ed20:	f7ff fdf6 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ed24:	f8d8 1000 	ldr.w	r1, [r8]
 800ed28:	9a03      	ldr	r2, [sp, #12]
 800ed2a:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800ed2e:	e7d7      	b.n	800ece0 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800ed30:	2000c87c 	andcs	ip, r0, ip, ror r8
 800ed34:	2000c984 	andcs	ip, r0, r4, lsl #19
 800ed38:	2000c980 	andcs	ip, r0, r0, lsl #19

0800ed3c <PixelPatterns::FadeUpdate(unsigned int)>:
 800ed3c:	4a20      	ldr	r2, [pc, #128]	; (800edc0 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800ed3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ed42:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800ed46:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800ed4a:	460e      	mov	r6, r1
 800ed4c:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800ed50:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800ed54:	437a      	muls	r2, r7
 800ed56:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800ed5a:	4605      	mov	r5, r0
 800ed5c:	1bc8      	subs	r0, r1, r7
 800ed5e:	fb00 2204 	mla	r2, r0, r4, r2
 800ed62:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800ed66:	437c      	muls	r4, r7
 800ed68:	b2db      	uxtb	r3, r3
 800ed6a:	437b      	muls	r3, r7
 800ed6c:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800ed70:	fb00 440e 	mla	r4, r0, lr, r4
 800ed74:	fa5f fc8c 	uxtb.w	ip, ip
 800ed78:	fb00 330c 	mla	r3, r0, ip, r3
 800ed7c:	fbb2 f2f1 	udiv	r2, r2, r1
 800ed80:	fbb4 f4f1 	udiv	r4, r4, r1
 800ed84:	fbb3 f3f1 	udiv	r3, r3, r1
 800ed88:	2700      	movs	r7, #0
 800ed8a:	0212      	lsls	r2, r2, #8
 800ed8c:	0424      	lsls	r4, r4, #16
 800ed8e:	b292      	uxth	r2, r2
 800ed90:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800ed94:	4314      	orrs	r4, r2
 800ed96:	b2db      	uxtb	r3, r3
 800ed98:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800edc4 <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800ed9c:	431c      	orrs	r4, r3
 800ed9e:	f8d8 3000 	ldr.w	r3, [r8]
 800eda2:	429f      	cmp	r7, r3
 800eda4:	d305      	bcc.n	800edb2 <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800eda6:	4631      	mov	r1, r6
 800eda8:	4628      	mov	r0, r5
 800edaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800edae:	f7ff bedd 	b.w	800eb6c <PixelPatterns::Increment(unsigned int)>
 800edb2:	4639      	mov	r1, r7
 800edb4:	4622      	mov	r2, r4
 800edb6:	4630      	mov	r0, r6
 800edb8:	f7ff fdaa 	bl	800e910 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800edbc:	3701      	adds	r7, #1
 800edbe:	e7ee      	b.n	800ed9e <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800edc0:	2000c87c 	andcs	ip, r0, ip, ror r8
 800edc4:	2000c984 	andcs	ip, r0, r4, lsl #19

0800edc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800edc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800edca:	4b12      	ldr	r3, [pc, #72]	; (800ee14 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800edcc:	014e      	lsls	r6, r1, #5
 800edce:	599c      	ldr	r4, [r3, r6]
 800edd0:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800edd4:	686f      	ldr	r7, [r5, #4]
 800edd6:	1b14      	subs	r4, r2, r4
 800edd8:	42bc      	cmp	r4, r7
 800edda:	d319      	bcc.n	800ee10 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800eddc:	519a      	str	r2, [r3, r6]
 800edde:	69eb      	ldr	r3, [r5, #28]
 800ede0:	3b01      	subs	r3, #1
 800ede2:	2b04      	cmp	r3, #4
 800ede4:	d814      	bhi.n	800ee10 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800ede6:	e8df f003 	tbb	[pc, r3]
 800edea:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800edee:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800edf2:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800edf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800edf8:	f7ff ff02 	bl	800ec00 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800edfc:	e7fa      	b.n	800edf4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800edfe:	f7ff ff2f 	bl	800ec60 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800ee02:	e7f7      	b.n	800edf4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800ee04:	f7ff ff40 	bl	800ec88 <PixelPatterns::ScannerUpdate(unsigned int)>
 800ee08:	e7f4      	b.n	800edf4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800ee0a:	f7ff ff97 	bl	800ed3c <PixelPatterns::FadeUpdate(unsigned int)>
 800ee0e:	e7f1      	b.n	800edf4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800ee10:	2000      	movs	r0, #0
 800ee12:	e7f0      	b.n	800edf6 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800ee14:	2000c87c 	andcs	ip, r0, ip, ror r8

0800ee18 <PixelPatterns::Run()>:
 800ee18:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ee1c:	4f11      	ldr	r7, [pc, #68]	; (800ee64 <PixelPatterns::Run()+0x4c>)
 800ee1e:	4606      	mov	r6, r0
 800ee20:	6838      	ldr	r0, [r7, #0]
 800ee22:	f000 fc5d 	bl	800f6e0 <WS28xxMulti::IsUpdating()>
 800ee26:	4604      	mov	r4, r0
 800ee28:	b9c8      	cbnz	r0, 800ee5e <PixelPatterns::Run()+0x46>
 800ee2a:	4605      	mov	r5, r0
 800ee2c:	4b0e      	ldr	r3, [pc, #56]	; (800ee68 <PixelPatterns::Run()+0x50>)
 800ee2e:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800ee6c <PixelPatterns::Run()+0x54>
 800ee32:	f8d3 9000 	ldr.w	r9, [r3]
 800ee36:	f8d8 3000 	ldr.w	r3, [r8]
 800ee3a:	b2e9      	uxtb	r1, r5
 800ee3c:	428b      	cmp	r3, r1
 800ee3e:	f105 0501 	add.w	r5, r5, #1
 800ee42:	d805      	bhi.n	800ee50 <PixelPatterns::Run()+0x38>
 800ee44:	b15c      	cbz	r4, 800ee5e <PixelPatterns::Run()+0x46>
 800ee46:	6838      	ldr	r0, [r7, #0]
 800ee48:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ee4c:	f000 bb08 	b.w	800f460 <WS28xxMulti::Update()>
 800ee50:	464a      	mov	r2, r9
 800ee52:	4630      	mov	r0, r6
 800ee54:	f7ff ffb8 	bl	800edc8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800ee58:	4320      	orrs	r0, r4
 800ee5a:	b2c4      	uxtb	r4, r0
 800ee5c:	e7eb      	b.n	800ee36 <PixelPatterns::Run()+0x1e>
 800ee5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ee62:	bf00      	nop
 800ee64:	2000c988 	andcs	ip, r0, r8, lsl #19
 800ee68:	2001d994 	mulcs	r1, r4, r9
 800ee6c:	2000c97c 	andcs	ip, r0, ip, ror r9

0800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800ee70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee72:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800ee76:	2501      	movs	r5, #1
 800ee78:	4c1d      	ldr	r4, [pc, #116]	; (800eef0 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x80>)
 800ee7a:	f89d e014 	ldrb.w	lr, [sp, #20]
 800ee7e:	eb04 1481 	add.w	r4, r4, r1, lsl #6
 800ee82:	1d81      	adds	r1, r0, #6
 800ee84:	481b      	ldr	r0, [pc, #108]	; (800eef4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 800ee86:	b2c9      	uxtb	r1, r1
 800ee88:	4420      	add	r0, r4
 800ee8a:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800ee8e:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800ee92:	f501 7100 	add.w	r1, r1, #512	; 0x200
 800ee96:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 800ee9a:	f89d 4018 	ldrb.w	r4, [sp, #24]
 800ee9e:	0080      	lsls	r0, r0, #2
 800eea0:	0089      	lsls	r1, r1, #2
 800eea2:	ea12 060c 	ands.w	r6, r2, ip
 800eea6:	bf0b      	itete	eq
 800eea8:	f5a0 67c0 	subeq.w	r7, r0, #1536	; 0x600
 800eeac:	f5a0 66c0 	subne.w	r6, r0, #1536	; 0x600
 800eeb0:	603e      	streq	r6, [r7, #0]
 800eeb2:	6035      	strne	r5, [r6, #0]
 800eeb4:	ea13 060c 	ands.w	r6, r3, ip
 800eeb8:	bf0b      	itete	eq
 800eeba:	f5a0 6780 	subeq.w	r7, r0, #1024	; 0x400
 800eebe:	f5a0 6680 	subne.w	r6, r0, #1024	; 0x400
 800eec2:	603e      	streq	r6, [r7, #0]
 800eec4:	6035      	strne	r5, [r6, #0]
 800eec6:	ea1e 060c 	ands.w	r6, lr, ip
 800eeca:	bf15      	itete	ne
 800eecc:	f5a0 7600 	subne.w	r6, r0, #512	; 0x200
 800eed0:	f5a0 7700 	subeq.w	r7, r0, #512	; 0x200
 800eed4:	6035      	strne	r5, [r6, #0]
 800eed6:	603e      	streq	r6, [r7, #0]
 800eed8:	ea14 060c 	ands.w	r6, r4, ip
 800eedc:	bf14      	ite	ne
 800eede:	6005      	strne	r5, [r0, #0]
 800eee0:	6006      	streq	r6, [r0, #0]
 800eee2:	3040      	adds	r0, #64	; 0x40
 800eee4:	4281      	cmp	r1, r0
 800eee6:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800eeea:	d1da      	bne.n	800eea2 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x32>
 800eeec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eeee:	bf00      	nop
 800eef0:	2000c998 	mulcs	r0, r8, r9
 800eef4:	e1100030 	tst	r0, r0, lsr r0

0800eef8 <TIMER3_IRQHandler>:
 800eef8:	f3bf 8f5f 	dmb	sy
 800eefc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ef00:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 800ef04:	0791      	lsls	r1, r2, #30
 800ef06:	d51e      	bpl.n	800ef46 <TIMER3_IRQHandler+0x4e>
 800ef08:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800ef0c:	f021 0101 	bic.w	r1, r1, #1
 800ef10:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800ef14:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800ef18:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800ef1c:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800ef20:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800ef24:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800ef28:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800ef2c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800ef30:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 800ef34:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800ef38:	2100      	movs	r1, #0
 800ef3a:	4b07      	ldr	r3, [pc, #28]	; (800ef58 <TIMER3_IRQHandler+0x60>)
 800ef3c:	7019      	strb	r1, [r3, #0]
 800ef3e:	f44f 517f 	mov.w	r1, #16320	; 0x3fc0
 800ef42:	4b06      	ldr	r3, [pc, #24]	; (800ef5c <TIMER3_IRQHandler+0x64>)
 800ef44:	6159      	str	r1, [r3, #20]
 800ef46:	43d2      	mvns	r2, r2
 800ef48:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ef4c:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 800ef50:	f3bf 8f5f 	dmb	sy
 800ef54:	4770      	bx	lr
 800ef56:	bf00      	nop
 800ef58:	2000c990 	mulcs	r0, r0, r9
 800ef5c:	40011000 	andmi	r1, r1, r0

0800ef60 <WS28xxMulti::~WS28xxMulti()>:
 800ef60:	2200      	movs	r2, #0
 800ef62:	4b01      	ldr	r3, [pc, #4]	; (800ef68 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800ef64:	601a      	str	r2, [r3, #0]
 800ef66:	4770      	bx	lr
 800ef68:	2000c994 	mulcs	r0, r4, r9

0800ef6c <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800ef6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef70:	4680      	mov	r8, r0
 800ef72:	b08d      	sub	sp, #52	; 0x34
 800ef74:	4608      	mov	r0, r1
 800ef76:	4614      	mov	r4, r2
 800ef78:	f007 f8d6 	bl	8016128 <__popcountsi2>
 800ef7c:	4607      	mov	r7, r0
 800ef7e:	4620      	mov	r0, r4
 800ef80:	f007 f8d2 	bl	8016128 <__popcountsi2>
 800ef84:	4d76      	ldr	r5, [pc, #472]	; (800f160 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f4>)
 800ef86:	4606      	mov	r6, r0
 800ef88:	f240 7001 	movw	r0, #1793	; 0x701
 800ef8c:	f005 faa8 	bl	80144e0 <rcu_periph_clock_enable>
 800ef90:	4628      	mov	r0, r5
 800ef92:	2400      	movs	r4, #0
 800ef94:	f005 fc08 	bl	80147a8 <timer_deinit>
 800ef98:	2395      	movs	r3, #149	; 0x95
 800ef9a:	f04f 0996 	mov.w	r9, #150	; 0x96
 800ef9e:	4628      	mov	r0, r5
 800efa0:	a901      	add	r1, sp, #4
 800efa2:	9303      	str	r3, [sp, #12]
 800efa4:	9401      	str	r4, [sp, #4]
 800efa6:	f8ad 4008 	strh.w	r4, [sp, #8]
 800efaa:	f8ad 4010 	strh.w	r4, [sp, #16]
 800efae:	f005 fca1 	bl	80148f4 <timer_init>
 800efb2:	4621      	mov	r1, r4
 800efb4:	4628      	mov	r0, r5
 800efb6:	f005 fe61 	bl	8014c7c <timer_master_slave_mode_config>
 800efba:	4628      	mov	r0, r5
 800efbc:	2130      	movs	r1, #48	; 0x30
 800efbe:	f005 fe4d 	bl	8014c5c <timer_master_output_trigger_source_select>
 800efc2:	4621      	mov	r1, r4
 800efc4:	4628      	mov	r0, r5
 800efc6:	2210      	movs	r2, #16
 800efc8:	f005 fde6 	bl	8014b98 <timer_channel_output_mode_config>
 800efcc:	4628      	mov	r0, r5
 800efce:	2210      	movs	r2, #16
 800efd0:	2102      	movs	r1, #2
 800efd2:	f005 fde1 	bl	8014b98 <timer_channel_output_mode_config>
 800efd6:	4628      	mov	r0, r5
 800efd8:	2210      	movs	r2, #16
 800efda:	2103      	movs	r1, #3
 800efdc:	f005 fddc 	bl	8014b98 <timer_channel_output_mode_config>
 800efe0:	4621      	mov	r1, r4
 800efe2:	4628      	mov	r0, r5
 800efe4:	2201      	movs	r2, #1
 800efe6:	f005 fdfd 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800efea:	fb09 f207 	mul.w	r2, r9, r7
 800efee:	4628      	mov	r0, r5
 800eff0:	2102      	movs	r1, #2
 800eff2:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800eff6:	f005 fdf5 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800effa:	fb09 f206 	mul.w	r2, r9, r6
 800effe:	2103      	movs	r1, #3
 800f000:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800f004:	4628      	mov	r0, r5
 800f006:	f005 fded 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f00a:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800f00e:	f240 7002 	movw	r0, #1794	; 0x702
 800f012:	f005 fa65 	bl	80144e0 <rcu_periph_clock_enable>
 800f016:	4628      	mov	r0, r5
 800f018:	f005 fbc6 	bl	80147a8 <timer_deinit>
 800f01c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f020:	4628      	mov	r0, r5
 800f022:	a901      	add	r1, sp, #4
 800f024:	9303      	str	r3, [sp, #12]
 800f026:	9401      	str	r4, [sp, #4]
 800f028:	f8ad 4008 	strh.w	r4, [sp, #8]
 800f02c:	f8ad 4010 	strh.w	r4, [sp, #16]
 800f030:	f005 fc60 	bl	80148f4 <timer_init>
 800f034:	4621      	mov	r1, r4
 800f036:	4628      	mov	r0, r5
 800f038:	f005 fe20 	bl	8014c7c <timer_master_slave_mode_config>
 800f03c:	4628      	mov	r0, r5
 800f03e:	2107      	movs	r1, #7
 800f040:	f005 fe14 	bl	8014c6c <timer_slave_mode_select>
 800f044:	4628      	mov	r0, r5
 800f046:	2120      	movs	r1, #32
 800f048:	f005 fe00 	bl	8014c4c <timer_input_trigger_source_select>
 800f04c:	4621      	mov	r1, r4
 800f04e:	4628      	mov	r0, r5
 800f050:	2210      	movs	r2, #16
 800f052:	f005 fda1 	bl	8014b98 <timer_channel_output_mode_config>
 800f056:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800f05a:	4621      	mov	r1, r4
 800f05c:	3201      	adds	r2, #1
 800f05e:	4628      	mov	r0, r5
 800f060:	b292      	uxth	r2, r2
 800f062:	f005 fdbf 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f066:	2102      	movs	r1, #2
 800f068:	4628      	mov	r0, r5
 800f06a:	f005 fe14 	bl	8014c96 <timer_interrupt_enable>
 800f06e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800f072:	2601      	movs	r6, #1
 800f074:	f44f 7780 	mov.w	r7, #256	; 0x100
 800f078:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800f07c:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800f080:	4b38      	ldr	r3, [pc, #224]	; (800f164 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f8>)
 800f082:	f505 35fc 	add.w	r5, r5, #129024	; 0x1f800
 800f086:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800f08a:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800f08e:	601a      	str	r2, [r3, #0]
 800f090:	f005 fa26 	bl	80144e0 <rcu_periph_clock_enable>
 800f094:	2105      	movs	r1, #5
 800f096:	4628      	mov	r0, r5
 800f098:	f005 f896 	bl	80141c8 <dma_deinit>
 800f09c:	a805      	add	r0, sp, #20
 800f09e:	f005 f8b1 	bl	8014204 <dma_struct_para_init>
 800f0a2:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800f168 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1fc>
 800f0a6:	4b31      	ldr	r3, [pc, #196]	; (800f16c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x200>)
 800f0a8:	aa05      	add	r2, sp, #20
 800f0aa:	4628      	mov	r0, r5
 800f0ac:	2105      	movs	r1, #5
 800f0ae:	e9cd 3705 	strd	r3, r7, [sp, #20]
 800f0b2:	f8cd b01c 	str.w	fp, [sp, #28]
 800f0b6:	f8cd 9020 	str.w	r9, [sp, #32]
 800f0ba:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800f0be:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800f0c2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f0c6:	f005 f8a7 	bl	8014218 <dma_init>
 800f0ca:	4628      	mov	r0, r5
 800f0cc:	2105      	movs	r1, #5
 800f0ce:	f005 f8d4 	bl	801427a <dma_circulation_disable>
 800f0d2:	4628      	mov	r0, r5
 800f0d4:	2105      	movs	r1, #5
 800f0d6:	f005 f8d8 	bl	801428a <dma_memory_to_memory_disable>
 800f0da:	4631      	mov	r1, r6
 800f0dc:	4628      	mov	r0, r5
 800f0de:	f005 f873 	bl	80141c8 <dma_deinit>
 800f0e2:	a805      	add	r0, sp, #20
 800f0e4:	f005 f88e 	bl	8014204 <dma_struct_para_init>
 800f0e8:	f8df a084 	ldr.w	sl, [pc, #132]	; 800f170 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x204>
 800f0ec:	4b21      	ldr	r3, [pc, #132]	; (800f174 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x208>)
 800f0ee:	aa05      	add	r2, sp, #20
 800f0f0:	4631      	mov	r1, r6
 800f0f2:	4628      	mov	r0, r5
 800f0f4:	e9cd 3907 	strd	r3, r9, [sp, #28]
 800f0f8:	e9cd a705 	strd	sl, r7, [sp, #20]
 800f0fc:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800f100:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 800f104:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f108:	f005 f886 	bl	8014218 <dma_init>
 800f10c:	4631      	mov	r1, r6
 800f10e:	4628      	mov	r0, r5
 800f110:	f005 f8b3 	bl	801427a <dma_circulation_disable>
 800f114:	4631      	mov	r1, r6
 800f116:	4628      	mov	r0, r5
 800f118:	f005 f8b7 	bl	801428a <dma_memory_to_memory_disable>
 800f11c:	2102      	movs	r1, #2
 800f11e:	4628      	mov	r0, r5
 800f120:	f005 f852 	bl	80141c8 <dma_deinit>
 800f124:	a805      	add	r0, sp, #20
 800f126:	f005 f86d 	bl	8014204 <dma_struct_para_init>
 800f12a:	aa05      	add	r2, sp, #20
 800f12c:	4628      	mov	r0, r5
 800f12e:	2102      	movs	r1, #2
 800f130:	e9cd b907 	strd	fp, r9, [sp, #28]
 800f134:	e9cd a705 	strd	sl, r7, [sp, #20]
 800f138:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800f13c:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800f140:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f144:	f005 f868 	bl	8014218 <dma_init>
 800f148:	4628      	mov	r0, r5
 800f14a:	2102      	movs	r1, #2
 800f14c:	f005 f895 	bl	801427a <dma_circulation_disable>
 800f150:	2102      	movs	r1, #2
 800f152:	4628      	mov	r0, r5
 800f154:	f005 f899 	bl	801428a <dma_memory_to_memory_disable>
 800f158:	b00d      	add	sp, #52	; 0x34
 800f15a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f15e:	bf00      	nop
 800f160:	40000400 	andmi	r0, r0, r0, lsl #8
 800f164:	e000e100 	and	lr, r0, r0, lsl #2
 800f168:	080185e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, pc}
 800f16c:	40011010 	andmi	r1, r1, r0, lsl r0
 800f170:	40011014 	andmi	r1, r1, r4, lsl r0
 800f174:	2000c998 	mulcs	r0, r8, r9

0800f178 <WS28xxMulti::Setup(unsigned int)>:
 800f178:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f17c:	460c      	mov	r4, r1
 800f17e:	b090      	sub	sp, #64	; 0x40
 800f180:	4680      	mov	r8, r0
 800f182:	f240 6002 	movw	r0, #1538	; 0x602
 800f186:	f005 f9ab 	bl	80144e0 <rcu_periph_clock_enable>
 800f18a:	4d82      	ldr	r5, [pc, #520]	; (800f394 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800f18c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800f190:	f005 f9a6 	bl	80144e0 <rcu_periph_clock_enable>
 800f194:	2203      	movs	r2, #3
 800f196:	2340      	movs	r3, #64	; 0x40
 800f198:	2118      	movs	r1, #24
 800f19a:	487f      	ldr	r0, [pc, #508]	; (800f398 <WS28xxMulti::Setup(unsigned int)+0x220>)
 800f19c:	f005 f908 	bl	80143b0 <gpio_init>
 800f1a0:	fbb5 f5f4 	udiv	r5, r5, r4
 800f1a4:	2d0c      	cmp	r5, #12
 800f1a6:	bf38      	it	cc
 800f1a8:	250c      	movcc	r5, #12
 800f1aa:	2400      	movs	r4, #0
 800f1ac:	2602      	movs	r6, #2
 800f1ae:	2701      	movs	r7, #1
 800f1b0:	f44f 7980 	mov.w	r9, #256	; 0x100
 800f1b4:	f240 7001 	movw	r0, #1793	; 0x701
 800f1b8:	f005 f992 	bl	80144e0 <rcu_periph_clock_enable>
 800f1bc:	4877      	ldr	r0, [pc, #476]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f1be:	f005 faf3 	bl	80147a8 <timer_deinit>
 800f1c2:	1e6b      	subs	r3, r5, #1
 800f1c4:	4875      	ldr	r0, [pc, #468]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f1c6:	a905      	add	r1, sp, #20
 800f1c8:	9307      	str	r3, [sp, #28]
 800f1ca:	9405      	str	r4, [sp, #20]
 800f1cc:	f8ad 4018 	strh.w	r4, [sp, #24]
 800f1d0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f1d4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800f1d8:	f005 fb8c 	bl	80148f4 <timer_init>
 800f1dc:	4621      	mov	r1, r4
 800f1de:	486f      	ldr	r0, [pc, #444]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f1e0:	aa02      	add	r2, sp, #8
 800f1e2:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800f1e6:	f8cd 9010 	str.w	r9, [sp, #16]
 800f1ea:	f005 fbe5 	bl	80149b8 <timer_channel_output_config>
 800f1ee:	fa25 f207 	lsr.w	r2, r5, r7
 800f1f2:	3a01      	subs	r2, #1
 800f1f4:	4621      	mov	r1, r4
 800f1f6:	4869      	ldr	r0, [pc, #420]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f1f8:	b292      	uxth	r2, r2
 800f1fa:	f005 fcf3 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f1fe:	2260      	movs	r2, #96	; 0x60
 800f200:	4621      	mov	r1, r4
 800f202:	4866      	ldr	r0, [pc, #408]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f204:	f005 fcc8 	bl	8014b98 <timer_channel_output_mode_config>
 800f208:	4622      	mov	r2, r4
 800f20a:	4621      	mov	r1, r4
 800f20c:	4863      	ldr	r0, [pc, #396]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f20e:	f005 fcf7 	bl	8014c00 <timer_channel_output_shadow_config>
 800f212:	2210      	movs	r2, #16
 800f214:	4631      	mov	r1, r6
 800f216:	4861      	ldr	r0, [pc, #388]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f218:	f005 fcbe 	bl	8014b98 <timer_channel_output_mode_config>
 800f21c:	2210      	movs	r2, #16
 800f21e:	2103      	movs	r1, #3
 800f220:	485e      	ldr	r0, [pc, #376]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f222:	f005 fcb9 	bl	8014b98 <timer_channel_output_mode_config>
 800f226:	463a      	mov	r2, r7
 800f228:	4631      	mov	r1, r6
 800f22a:	485c      	ldr	r0, [pc, #368]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f22c:	f005 fcda 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f230:	fa25 f206 	lsr.w	r2, r5, r6
 800f234:	3a01      	subs	r2, #1
 800f236:	b292      	uxth	r2, r2
 800f238:	2103      	movs	r1, #3
 800f23a:	4858      	ldr	r0, [pc, #352]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f23c:	f005 fcd2 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f240:	4621      	mov	r1, r4
 800f242:	4856      	ldr	r0, [pc, #344]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f244:	f005 fd1a 	bl	8014c7c <timer_master_slave_mode_config>
 800f248:	2130      	movs	r1, #48	; 0x30
 800f24a:	4854      	ldr	r0, [pc, #336]	; (800f39c <WS28xxMulti::Setup(unsigned int)+0x224>)
 800f24c:	f005 fd06 	bl	8014c5c <timer_master_output_trigger_source_select>
 800f250:	f240 7002 	movw	r0, #1794	; 0x702
 800f254:	f005 f944 	bl	80144e0 <rcu_periph_clock_enable>
 800f258:	4851      	ldr	r0, [pc, #324]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f25a:	f005 faa5 	bl	80147a8 <timer_deinit>
 800f25e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f262:	484f      	ldr	r0, [pc, #316]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f264:	a905      	add	r1, sp, #20
 800f266:	9307      	str	r3, [sp, #28]
 800f268:	9405      	str	r4, [sp, #20]
 800f26a:	f8ad 4018 	strh.w	r4, [sp, #24]
 800f26e:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f272:	f005 fb3f 	bl	80148f4 <timer_init>
 800f276:	4621      	mov	r1, r4
 800f278:	4849      	ldr	r0, [pc, #292]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f27a:	f005 fcff 	bl	8014c7c <timer_master_slave_mode_config>
 800f27e:	2107      	movs	r1, #7
 800f280:	4847      	ldr	r0, [pc, #284]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f282:	f005 fcf3 	bl	8014c6c <timer_slave_mode_select>
 800f286:	2120      	movs	r1, #32
 800f288:	4845      	ldr	r0, [pc, #276]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f28a:	f005 fcdf 	bl	8014c4c <timer_input_trigger_source_select>
 800f28e:	2210      	movs	r2, #16
 800f290:	4621      	mov	r1, r4
 800f292:	4843      	ldr	r0, [pc, #268]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f294:	f005 fc80 	bl	8014b98 <timer_channel_output_mode_config>
 800f298:	f8b8 201c 	ldrh.w	r2, [r8, #28]
 800f29c:	4621      	mov	r1, r4
 800f29e:	4840      	ldr	r0, [pc, #256]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f2a0:	f005 fca0 	bl	8014be4 <timer_channel_output_pulse_value_config>
 800f2a4:	4631      	mov	r1, r6
 800f2a6:	483e      	ldr	r0, [pc, #248]	; (800f3a0 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800f2a8:	f005 fcf5 	bl	8014c96 <timer_interrupt_enable>
 800f2ac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800f2b0:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 800f2b4:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800f2b8:	4b3a      	ldr	r3, [pc, #232]	; (800f3a4 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 800f2ba:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800f2be:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800f2c2:	601a      	str	r2, [r3, #0]
 800f2c4:	f005 f90c 	bl	80144e0 <rcu_periph_clock_enable>
 800f2c8:	4639      	mov	r1, r7
 800f2ca:	4837      	ldr	r0, [pc, #220]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f2cc:	f004 ff7c 	bl	80141c8 <dma_deinit>
 800f2d0:	a809      	add	r0, sp, #36	; 0x24
 800f2d2:	f004 ff97 	bl	8014204 <dma_struct_para_init>
 800f2d6:	4b35      	ldr	r3, [pc, #212]	; (800f3ac <WS28xxMulti::Setup(unsigned int)+0x234>)
 800f2d8:	aa09      	add	r2, sp, #36	; 0x24
 800f2da:	930b      	str	r3, [sp, #44]	; 0x2c
 800f2dc:	4b34      	ldr	r3, [pc, #208]	; (800f3b0 <WS28xxMulti::Setup(unsigned int)+0x238>)
 800f2de:	4639      	mov	r1, r7
 800f2e0:	4831      	ldr	r0, [pc, #196]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f2e2:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800f2e6:	950e      	str	r5, [sp, #56]	; 0x38
 800f2e8:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800f2ec:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 800f2f0:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800f2f4:	f004 ff90 	bl	8014218 <dma_init>
 800f2f8:	4639      	mov	r1, r7
 800f2fa:	482b      	ldr	r0, [pc, #172]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f2fc:	f004 ffbd 	bl	801427a <dma_circulation_disable>
 800f300:	4639      	mov	r1, r7
 800f302:	4829      	ldr	r0, [pc, #164]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f304:	f004 ffc1 	bl	801428a <dma_memory_to_memory_disable>
 800f308:	4631      	mov	r1, r6
 800f30a:	4827      	ldr	r0, [pc, #156]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f30c:	f004 ff5c 	bl	80141c8 <dma_deinit>
 800f310:	a809      	add	r0, sp, #36	; 0x24
 800f312:	f004 ff77 	bl	8014204 <dma_struct_para_init>
 800f316:	4b27      	ldr	r3, [pc, #156]	; (800f3b4 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 800f318:	aa09      	add	r2, sp, #36	; 0x24
 800f31a:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	; 0x2c
 800f31e:	4b26      	ldr	r3, [pc, #152]	; (800f3b8 <WS28xxMulti::Setup(unsigned int)+0x240>)
 800f320:	4631      	mov	r1, r6
 800f322:	4821      	ldr	r0, [pc, #132]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f324:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800f328:	950e      	str	r5, [sp, #56]	; 0x38
 800f32a:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 800f32e:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800f332:	f004 ff71 	bl	8014218 <dma_init>
 800f336:	4631      	mov	r1, r6
 800f338:	481b      	ldr	r0, [pc, #108]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f33a:	f004 ff9e 	bl	801427a <dma_circulation_disable>
 800f33e:	4631      	mov	r1, r6
 800f340:	4819      	ldr	r0, [pc, #100]	; (800f3a8 <WS28xxMulti::Setup(unsigned int)+0x230>)
 800f342:	f004 ffa2 	bl	801428a <dma_memory_to_memory_disable>
 800f346:	f8d8 5000 	ldr.w	r5, [r8]
 800f34a:	3d0b      	subs	r5, #11
 800f34c:	42b5      	cmp	r5, r6
 800f34e:	d81d      	bhi.n	800f38c <WS28xxMulti::Setup(unsigned int)+0x214>
 800f350:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800f354:	4627      	mov	r7, r4
 800f356:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800f35a:	3601      	adds	r6, #1
 800f35c:	2300      	movs	r3, #0
 800f35e:	4620      	mov	r0, r4
 800f360:	461a      	mov	r2, r3
 800f362:	4619      	mov	r1, r3
 800f364:	e9cd 7700 	strd	r7, r7, [sp]
 800f368:	f7ff fd82 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f36c:	2d02      	cmp	r5, #2
 800f36e:	bf18      	it	ne
 800f370:	23ff      	movne	r3, #255	; 0xff
 800f372:	4620      	mov	r0, r4
 800f374:	bf1a      	itte	ne
 800f376:	461a      	movne	r2, r3
 800f378:	e9cd 8800 	strdne	r8, r8, [sp]
 800f37c:	e9cd 7700 	strdeq	r7, r7, [sp]
 800f380:	4631      	mov	r1, r6
 800f382:	3401      	adds	r4, #1
 800f384:	f7ff fd74 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f388:	2c08      	cmp	r4, #8
 800f38a:	d1e7      	bne.n	800f35c <WS28xxMulti::Setup(unsigned int)+0x1e4>
 800f38c:	b010      	add	sp, #64	; 0x40
 800f38e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f392:	bf00      	nop
 800f394:	07270e00 	streq	r0, [r7, -r0, lsl #28]!
 800f398:	40010800 	andmi	r0, r1, r0, lsl #16
 800f39c:	40000400 	andmi	r0, r0, r0, lsl #8
 800f3a0:	40000800 	andmi	r0, r0, r0, lsl #16
 800f3a4:	e000e100 	and	lr, r0, r0, lsl #2
 800f3a8:	40020000 	andmi	r0, r2, r0
 800f3ac:	080185e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, pc}
 800f3b0:	40011014 	andmi	r1, r1, r4, lsl r0
 800f3b4:	2000c998 	mulcs	r0, r8, r9
 800f3b8:	40011010 	andmi	r1, r1, r0, lsl r0

0800f3bc <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800f3bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f3be:	4606      	mov	r6, r0
 800f3c0:	460f      	mov	r7, r1
 800f3c2:	4604      	mov	r4, r0
 800f3c4:	460d      	mov	r5, r1
 800f3c6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f3c8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800f3ca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800f3ce:	2300      	movs	r3, #0
 800f3d0:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800f3d4:	61e3      	str	r3, [r4, #28]
 800f3d6:	4b20      	ldr	r3, [pc, #128]	; (800f458 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x9c>)
 800f3d8:	4628      	mov	r0, r5
 800f3da:	a901      	add	r1, sp, #4
 800f3dc:	601c      	str	r4, [r3, #0]
 800f3de:	f7ff f8b5 	bl	800e54c <PixelConfiguration::Validate(unsigned int&)>
 800f3e2:	6826      	ldr	r6, [r4, #0]
 800f3e4:	3e0b      	subs	r6, #11
 800f3e6:	2e02      	cmp	r6, #2
 800f3e8:	d80a      	bhi.n	800f400 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800f3ea:	686b      	ldr	r3, [r5, #4]
 800f3ec:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800f3f0:	d906      	bls.n	800f400 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800f3f2:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 800f3f6:	4628      	mov	r0, r5
 800f3f8:	606b      	str	r3, [r5, #4]
 800f3fa:	a901      	add	r1, sp, #4
 800f3fc:	f7ff f8a6 	bl	800e54c <PixelConfiguration::Validate(unsigned int&)>
 800f400:	6863      	ldr	r3, [r4, #4]
 800f402:	9a01      	ldr	r2, [sp, #4]
 800f404:	2e02      	cmp	r6, #2
 800f406:	fb03 f202 	mul.w	r2, r3, r2
 800f40a:	bf9b      	ittet	ls
 800f40c:	3308      	addls	r3, #8
 800f40e:	189b      	addls	r3, r3, r2
 800f410:	61e2      	strhi	r2, [r4, #28]
 800f412:	61e3      	strls	r3, [r4, #28]
 800f414:	69e3      	ldr	r3, [r4, #28]
 800f416:	4e11      	ldr	r6, [pc, #68]	; (800f45c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa0>)
 800f418:	00db      	lsls	r3, r3, #3
 800f41a:	f240 6004 	movw	r0, #1540	; 0x604
 800f41e:	61e3      	str	r3, [r4, #28]
 800f420:	f005 f85e 	bl	80144e0 <rcu_periph_clock_enable>
 800f424:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800f428:	2203      	movs	r2, #3
 800f42a:	2110      	movs	r1, #16
 800f42c:	4630      	mov	r0, r6
 800f42e:	f004 ffbf 	bl	80143b0 <gpio_init>
 800f432:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800f436:	6173      	str	r3, [r6, #20]
 800f438:	7d6b      	ldrb	r3, [r5, #21]
 800f43a:	b13b      	cbz	r3, 800f44c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x90>
 800f43c:	4620      	mov	r0, r4
 800f43e:	7c6a      	ldrb	r2, [r5, #17]
 800f440:	7c29      	ldrb	r1, [r5, #16]
 800f442:	f7ff fd93 	bl	800ef6c <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800f446:	4620      	mov	r0, r4
 800f448:	b003      	add	sp, #12
 800f44a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f44c:	4620      	mov	r0, r4
 800f44e:	68e9      	ldr	r1, [r5, #12]
 800f450:	f7ff fe92 	bl	800f178 <WS28xxMulti::Setup(unsigned int)>
 800f454:	e7f7      	b.n	800f446 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x8a>
 800f456:	bf00      	nop
 800f458:	2000c994 	mulcs	r0, r4, r9
 800f45c:	40011000 	andmi	r1, r1, r0

0800f460 <WS28xxMulti::Update()>:
 800f460:	2201      	movs	r2, #1
 800f462:	4b39      	ldr	r3, [pc, #228]	; (800f548 <WS28xxMulti::Update()+0xe8>)
 800f464:	b510      	push	{r4, lr}
 800f466:	701a      	strb	r2, [r3, #0]
 800f468:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f46c:	2100      	movs	r1, #0
 800f46e:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800f472:	4c36      	ldr	r4, [pc, #216]	; (800f54c <WS28xxMulti::Update()+0xec>)
 800f474:	f022 0201 	bic.w	r2, r2, #1
 800f478:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800f47c:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 800f480:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800f484:	f022 0201 	bic.w	r2, r2, #1
 800f488:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800f48c:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 800f490:	7d41      	ldrb	r1, [r0, #21]
 800f492:	4a2f      	ldr	r2, [pc, #188]	; (800f550 <WS28xxMulti::Update()+0xf0>)
 800f494:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 800f498:	2900      	cmp	r1, #0
 800f49a:	d03e      	beq.n	800f51a <WS28xxMulti::Update()+0xba>
 800f49c:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800f49e:	f021 0101 	bic.w	r1, r1, #1
 800f4a2:	66d9      	str	r1, [r3, #108]	; 0x6c
 800f4a4:	679a      	str	r2, [r3, #120]	; 0x78
 800f4a6:	8b81      	ldrh	r1, [r0, #28]
 800f4a8:	6719      	str	r1, [r3, #112]	; 0x70
 800f4aa:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800f4ac:	f041 0101 	orr.w	r1, r1, #1
 800f4b0:	66d9      	str	r1, [r3, #108]	; 0x6c
 800f4b2:	69d9      	ldr	r1, [r3, #28]
 800f4b4:	f021 0101 	bic.w	r1, r1, #1
 800f4b8:	61d9      	str	r1, [r3, #28]
 800f4ba:	629c      	str	r4, [r3, #40]	; 0x28
 800f4bc:	8b81      	ldrh	r1, [r0, #28]
 800f4be:	6219      	str	r1, [r3, #32]
 800f4c0:	69d9      	ldr	r1, [r3, #28]
 800f4c2:	f041 0101 	orr.w	r1, r1, #1
 800f4c6:	61d9      	str	r1, [r3, #28]
 800f4c8:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800f4ca:	f021 0101 	bic.w	r1, r1, #1
 800f4ce:	6319      	str	r1, [r3, #48]	; 0x30
 800f4d0:	63da      	str	r2, [r3, #60]	; 0x3c
 800f4d2:	8b82      	ldrh	r2, [r0, #28]
 800f4d4:	f44f 7100 	mov.w	r1, #512	; 0x200
 800f4d8:	635a      	str	r2, [r3, #52]	; 0x34
 800f4da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f4dc:	481d      	ldr	r0, [pc, #116]	; (800f554 <WS28xxMulti::Update()+0xf4>)
 800f4de:	f042 0201 	orr.w	r2, r2, #1
 800f4e2:	631a      	str	r2, [r3, #48]	; 0x30
 800f4e4:	f005 fa63 	bl	80149ae <timer_dma_enable>
 800f4e8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800f4ec:	4819      	ldr	r0, [pc, #100]	; (800f554 <WS28xxMulti::Update()+0xf4>)
 800f4ee:	f005 fa5e 	bl	80149ae <timer_dma_enable>
 800f4f2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800f4f6:	4817      	ldr	r0, [pc, #92]	; (800f554 <WS28xxMulti::Update()+0xf4>)
 800f4f8:	f005 fa59 	bl	80149ae <timer_dma_enable>
 800f4fc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800f500:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800f504:	f042 0201 	orr.w	r2, r2, #1
 800f508:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800f50c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800f510:	f042 0201 	orr.w	r2, r2, #1
 800f514:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800f518:	bd10      	pop	{r4, pc}
 800f51a:	69d9      	ldr	r1, [r3, #28]
 800f51c:	f021 0101 	bic.w	r1, r1, #1
 800f520:	61d9      	str	r1, [r3, #28]
 800f522:	629a      	str	r2, [r3, #40]	; 0x28
 800f524:	8b82      	ldrh	r2, [r0, #28]
 800f526:	621a      	str	r2, [r3, #32]
 800f528:	69da      	ldr	r2, [r3, #28]
 800f52a:	f042 0201 	orr.w	r2, r2, #1
 800f52e:	61da      	str	r2, [r3, #28]
 800f530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f532:	f022 0201 	bic.w	r2, r2, #1
 800f536:	631a      	str	r2, [r3, #48]	; 0x30
 800f538:	63dc      	str	r4, [r3, #60]	; 0x3c
 800f53a:	8b82      	ldrh	r2, [r0, #28]
 800f53c:	635a      	str	r2, [r3, #52]	; 0x34
 800f53e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f540:	f042 0201 	orr.w	r2, r2, #1
 800f544:	631a      	str	r2, [r3, #48]	; 0x30
 800f546:	e7cf      	b.n	800f4e8 <WS28xxMulti::Update()+0x88>
 800f548:	2000c990 	mulcs	r0, r0, r9
 800f54c:	2000c998 	mulcs	r0, r8, r9
 800f550:	080185e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, pc}
 800f554:	40000400 	andmi	r0, r0, r0, lsl #8

0800f558 <WS28xxMulti::Blackout()>:
 800f558:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f55c:	4605      	mov	r5, r0
 800f55e:	4f2d      	ldr	r7, [pc, #180]	; (800f614 <WS28xxMulti::Blackout()+0xbc>)
 800f560:	f3bf 8f5f 	dmb	sy
 800f564:	783a      	ldrb	r2, [r7, #0]
 800f566:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800f56a:	2a00      	cmp	r2, #0
 800f56c:	d1f8      	bne.n	800f560 <WS28xxMulti::Blackout()+0x8>
 800f56e:	7d6c      	ldrb	r4, [r5, #21]
 800f570:	b194      	cbz	r4, 800f598 <WS28xxMulti::Blackout()+0x40>
 800f572:	4a29      	ldr	r2, [pc, #164]	; (800f618 <WS28xxMulti::Blackout()+0xc0>)
 800f574:	4929      	ldr	r1, [pc, #164]	; (800f61c <WS28xxMulti::Blackout()+0xc4>)
 800f576:	3301      	adds	r3, #1
 800f578:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f57c:	f842 1b04 	str.w	r1, [r2], #4
 800f580:	d1f9      	bne.n	800f576 <WS28xxMulti::Blackout()+0x1e>
 800f582:	4628      	mov	r0, r5
 800f584:	f7ff ff6c 	bl	800f460 <WS28xxMulti::Update()>
 800f588:	f3bf 8f5f 	dmb	sy
 800f58c:	783b      	ldrb	r3, [r7, #0]
 800f58e:	2b00      	cmp	r3, #0
 800f590:	d1fa      	bne.n	800f588 <WS28xxMulti::Blackout()+0x30>
 800f592:	b003      	add	sp, #12
 800f594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f598:	682b      	ldr	r3, [r5, #0]
 800f59a:	f1a3 080b 	sub.w	r8, r3, #11
 800f59e:	f1b8 0f02 	cmp.w	r8, #2
 800f5a2:	d908      	bls.n	800f5b6 <WS28xxMulti::Blackout()+0x5e>
 800f5a4:	4622      	mov	r2, r4
 800f5a6:	4b1c      	ldr	r3, [pc, #112]	; (800f618 <WS28xxMulti::Blackout()+0xc0>)
 800f5a8:	3401      	adds	r4, #1
 800f5aa:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800f5ae:	f843 2b04 	str.w	r2, [r3], #4
 800f5b2:	d1f9      	bne.n	800f5a8 <WS28xxMulti::Blackout()+0x50>
 800f5b4:	e7e5      	b.n	800f582 <WS28xxMulti::Blackout()+0x2a>
 800f5b6:	4626      	mov	r6, r4
 800f5b8:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800f5bc:	f10a 0b01 	add.w	fp, sl, #1
 800f5c0:	2300      	movs	r3, #0
 800f5c2:	4620      	mov	r0, r4
 800f5c4:	461a      	mov	r2, r3
 800f5c6:	4619      	mov	r1, r3
 800f5c8:	e9cd 6600 	strd	r6, r6, [sp]
 800f5cc:	f7ff fc50 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f5d0:	f04f 0901 	mov.w	r9, #1
 800f5d4:	45ca      	cmp	sl, r9
 800f5d6:	d212      	bcs.n	800f5fe <WS28xxMulti::Blackout()+0xa6>
 800f5d8:	f1b8 0f02 	cmp.w	r8, #2
 800f5dc:	bf14      	ite	ne
 800f5de:	23ff      	movne	r3, #255	; 0xff
 800f5e0:	2300      	moveq	r3, #0
 800f5e2:	4620      	mov	r0, r4
 800f5e4:	bf14      	ite	ne
 800f5e6:	e9cd 3300 	strdne	r3, r3, [sp]
 800f5ea:	e9cd 6600 	strdeq	r6, r6, [sp]
 800f5ee:	461a      	mov	r2, r3
 800f5f0:	4659      	mov	r1, fp
 800f5f2:	3401      	adds	r4, #1
 800f5f4:	f7ff fc3c 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f5f8:	2c08      	cmp	r4, #8
 800f5fa:	d1e1      	bne.n	800f5c0 <WS28xxMulti::Blackout()+0x68>
 800f5fc:	e7c1      	b.n	800f582 <WS28xxMulti::Blackout()+0x2a>
 800f5fe:	4649      	mov	r1, r9
 800f600:	2300      	movs	r3, #0
 800f602:	22e0      	movs	r2, #224	; 0xe0
 800f604:	4620      	mov	r0, r4
 800f606:	e9cd 6600 	strd	r6, r6, [sp]
 800f60a:	f7ff fc31 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f60e:	f109 0901 	add.w	r9, r9, #1
 800f612:	e7df      	b.n	800f5d4 <WS28xxMulti::Blackout()+0x7c>
 800f614:	2000c990 	mulcs	r0, r0, r9
 800f618:	2000c998 	mulcs	r0, r8, r9
 800f61c:	3fc03fc0 	svccc	0x00c03fc0

0800f620 <WS28xxMulti::FullOn()>:
 800f620:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f624:	4605      	mov	r5, r0
 800f626:	4f2c      	ldr	r7, [pc, #176]	; (800f6d8 <WS28xxMulti::FullOn()+0xb8>)
 800f628:	f3bf 8f5f 	dmb	sy
 800f62c:	783a      	ldrb	r2, [r7, #0]
 800f62e:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800f632:	2a00      	cmp	r2, #0
 800f634:	d1f8      	bne.n	800f628 <WS28xxMulti::FullOn()+0x8>
 800f636:	7d6c      	ldrb	r4, [r5, #21]
 800f638:	b194      	cbz	r4, 800f660 <WS28xxMulti::FullOn()+0x40>
 800f63a:	4619      	mov	r1, r3
 800f63c:	4a27      	ldr	r2, [pc, #156]	; (800f6dc <WS28xxMulti::FullOn()+0xbc>)
 800f63e:	3301      	adds	r3, #1
 800f640:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800f644:	f842 1b04 	str.w	r1, [r2], #4
 800f648:	d1f9      	bne.n	800f63e <WS28xxMulti::FullOn()+0x1e>
 800f64a:	4628      	mov	r0, r5
 800f64c:	f7ff ff08 	bl	800f460 <WS28xxMulti::Update()>
 800f650:	f3bf 8f5f 	dmb	sy
 800f654:	783b      	ldrb	r3, [r7, #0]
 800f656:	2b00      	cmp	r3, #0
 800f658:	d1fa      	bne.n	800f650 <WS28xxMulti::FullOn()+0x30>
 800f65a:	b003      	add	sp, #12
 800f65c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f660:	682e      	ldr	r6, [r5, #0]
 800f662:	3e0b      	subs	r6, #11
 800f664:	2e02      	cmp	r6, #2
 800f666:	d908      	bls.n	800f67a <WS28xxMulti::FullOn()+0x5a>
 800f668:	22ff      	movs	r2, #255	; 0xff
 800f66a:	4b1c      	ldr	r3, [pc, #112]	; (800f6dc <WS28xxMulti::FullOn()+0xbc>)
 800f66c:	3401      	adds	r4, #1
 800f66e:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800f672:	f843 2b04 	str.w	r2, [r3], #4
 800f676:	d1f9      	bne.n	800f66c <WS28xxMulti::FullOn()+0x4c>
 800f678:	e7e7      	b.n	800f64a <WS28xxMulti::FullOn()+0x2a>
 800f67a:	46a0      	mov	r8, r4
 800f67c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f680:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800f684:	2300      	movs	r3, #0
 800f686:	4620      	mov	r0, r4
 800f688:	461a      	mov	r2, r3
 800f68a:	4619      	mov	r1, r3
 800f68c:	e9cd 8800 	strd	r8, r8, [sp]
 800f690:	f7ff fbee 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f694:	f04f 0b01 	mov.w	fp, #1
 800f698:	45da      	cmp	sl, fp
 800f69a:	d212      	bcs.n	800f6c2 <WS28xxMulti::FullOn()+0xa2>
 800f69c:	2e02      	cmp	r6, #2
 800f69e:	bf14      	ite	ne
 800f6a0:	23ff      	movne	r3, #255	; 0xff
 800f6a2:	2300      	moveq	r3, #0
 800f6a4:	4620      	mov	r0, r4
 800f6a6:	bf14      	ite	ne
 800f6a8:	e9cd 9900 	strdne	r9, r9, [sp]
 800f6ac:	e9cd 8800 	strdeq	r8, r8, [sp]
 800f6b0:	461a      	mov	r2, r3
 800f6b2:	f10a 0101 	add.w	r1, sl, #1
 800f6b6:	3401      	adds	r4, #1
 800f6b8:	f7ff fbda 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f6bc:	2c08      	cmp	r4, #8
 800f6be:	d1e1      	bne.n	800f684 <WS28xxMulti::FullOn()+0x64>
 800f6c0:	e7c3      	b.n	800f64a <WS28xxMulti::FullOn()+0x2a>
 800f6c2:	4659      	mov	r1, fp
 800f6c4:	23ff      	movs	r3, #255	; 0xff
 800f6c6:	22e0      	movs	r2, #224	; 0xe0
 800f6c8:	4620      	mov	r0, r4
 800f6ca:	e9cd 9900 	strd	r9, r9, [sp]
 800f6ce:	f7ff fbcf 	bl	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f6d2:	f10b 0b01 	add.w	fp, fp, #1
 800f6d6:	e7df      	b.n	800f698 <WS28xxMulti::FullOn()+0x78>
 800f6d8:	2000c990 	mulcs	r0, r0, r9
 800f6dc:	2000c998 	mulcs	r0, r8, r9

0800f6e0 <WS28xxMulti::IsUpdating()>:
 800f6e0:	f3bf 8f5f 	dmb	sy
 800f6e4:	4b01      	ldr	r3, [pc, #4]	; (800f6ec <WS28xxMulti::IsUpdating()+0xc>)
 800f6e6:	7818      	ldrb	r0, [r3, #0]
 800f6e8:	4770      	bx	lr
 800f6ea:	bf00      	nop
 800f6ec:	2000c990 	mulcs	r0, r0, r9

0800f6f0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800f6f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6f2:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f6f6:	2400      	movs	r4, #0
 800f6f8:	2501      	movs	r5, #1
 800f6fa:	4f1a      	ldr	r7, [pc, #104]	; (800f764 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800f6fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f700:	4819      	ldr	r0, [pc, #100]	; (800f768 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800f702:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800f706:	3106      	adds	r1, #6
 800f708:	b2c9      	uxtb	r1, r1
 800f70a:	4438      	add	r0, r7
 800f70c:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800f710:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800f714:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800f718:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800f71c:	f89d e014 	ldrb.w	lr, [sp, #20]
 800f720:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800f724:	0092      	lsls	r2, r2, #2
 800f726:	0089      	lsls	r1, r1, #2
 800f728:	ea13 0f0c 	tst.w	r3, ip
 800f72c:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800f730:	bf16      	itet	ne
 800f732:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800f736:	6005      	streq	r5, [r0, #0]
 800f738:	6004      	strne	r4, [r0, #0]
 800f73a:	ea1e 0f0c 	tst.w	lr, ip
 800f73e:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800f742:	bf16      	itet	ne
 800f744:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800f748:	6005      	streq	r5, [r0, #0]
 800f74a:	6004      	strne	r4, [r0, #0]
 800f74c:	ea16 0f0c 	tst.w	r6, ip
 800f750:	bf0c      	ite	eq
 800f752:	6015      	streq	r5, [r2, #0]
 800f754:	6014      	strne	r4, [r2, #0]
 800f756:	3240      	adds	r2, #64	; 0x40
 800f758:	4291      	cmp	r1, r2
 800f75a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800f75e:	d1e3      	bne.n	800f728 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 800f760:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f762:	bf00      	nop
 800f764:	2000c998 	mulcs	r0, r8, r9
 800f768:	e1100020 	tst	r0, r0, lsr #32

0800f76c <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800f76c:	b570      	push	{r4, r5, r6, lr}
 800f76e:	2080      	movs	r0, #128	; 0x80
 800f770:	2401      	movs	r4, #1
 800f772:	4e1a      	ldr	r6, [pc, #104]	; (800f7dc <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 800f774:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f778:	4d19      	ldr	r5, [pc, #100]	; (800f7e0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800f77a:	eb06 1602 	add.w	r6, r6, r2, lsl #4
 800f77e:	3106      	adds	r1, #6
 800f780:	b2c9      	uxtb	r1, r1
 800f782:	4435      	add	r5, r6
 800f784:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 800f788:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800f78c:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800f790:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800f794:	f89d c010 	ldrb.w	ip, [sp, #16]
 800f798:	f89d e014 	ldrb.w	lr, [sp, #20]
 800f79c:	0092      	lsls	r2, r2, #2
 800f79e:	0089      	lsls	r1, r1, #2
 800f7a0:	ea13 0500 	ands.w	r5, r3, r0
 800f7a4:	f5a2 6680 	sub.w	r6, r2, #1024	; 0x400
 800f7a8:	bf0a      	itet	eq
 800f7aa:	f5a2 6680 	subeq.w	r6, r2, #1024	; 0x400
 800f7ae:	6034      	strne	r4, [r6, #0]
 800f7b0:	6035      	streq	r5, [r6, #0]
 800f7b2:	ea1c 0500 	ands.w	r5, ip, r0
 800f7b6:	f5a2 7600 	sub.w	r6, r2, #512	; 0x200
 800f7ba:	bf0a      	itet	eq
 800f7bc:	f5a2 7600 	subeq.w	r6, r2, #512	; 0x200
 800f7c0:	6034      	strne	r4, [r6, #0]
 800f7c2:	6035      	streq	r5, [r6, #0]
 800f7c4:	ea1e 0500 	ands.w	r5, lr, r0
 800f7c8:	bf14      	ite	ne
 800f7ca:	6014      	strne	r4, [r2, #0]
 800f7cc:	6015      	streq	r5, [r2, #0]
 800f7ce:	3240      	adds	r2, #64	; 0x40
 800f7d0:	4291      	cmp	r1, r2
 800f7d2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800f7d6:	d1e3      	bne.n	800f7a0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 800f7d8:	bd70      	pop	{r4, r5, r6, pc}
 800f7da:	bf00      	nop
 800f7dc:	2000c998 	mulcs	r0, r8, r9
 800f7e0:	e1100020 	tst	r0, r0, lsr #32

0800f7e4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800f7e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7e6:	6984      	ldr	r4, [r0, #24]
 800f7e8:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800f7ec:	5ce6      	ldrb	r6, [r4, r3]
 800f7ee:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800f7f2:	7d43      	ldrb	r3, [r0, #21]
 800f7f4:	5d65      	ldrb	r5, [r4, r5]
 800f7f6:	4684      	mov	ip, r0
 800f7f8:	4696      	mov	lr, r2
 800f7fa:	5de4      	ldrb	r4, [r4, r7]
 800f7fc:	bb23      	cbnz	r3, 800f848 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x64>
 800f7fe:	6803      	ldr	r3, [r0, #0]
 800f800:	b1d3      	cbz	r3, 800f838 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x54>
 800f802:	3b0b      	subs	r3, #11
 800f804:	2b01      	cmp	r3, #1
 800f806:	d94b      	bls.n	800f8a0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 800f808:	4608      	mov	r0, r1
 800f80a:	1c51      	adds	r1, r2, #1
 800f80c:	ea6f 0294 	mvn.w	r2, r4, lsr #2
 800f810:	9505      	str	r5, [sp, #20]
 800f812:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 800f816:	9606      	str	r6, [sp, #24]
 800f818:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800f81c:	f086 06c0 	eor.w	r6, r6, #192	; 0xc0
 800f820:	f005 050c 	and.w	r5, r5, #12
 800f824:	ea42 1296 	orr.w	r2, r2, r6, lsr #6
 800f828:	432a      	orrs	r2, r5
 800f82a:	4623      	mov	r3, r4
 800f82c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f830:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 800f834:	f7ff bb1c 	b.w	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f838:	6883      	ldr	r3, [r0, #8]
 800f83a:	2b05      	cmp	r3, #5
 800f83c:	d85a      	bhi.n	800f8f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f83e:	e8df f003 	tbb	[pc, r3]
 800f842:	534d4744 	movtpl	r4, #55108	; 0xd744
 800f846:	68833b56 	stmvs	r3, {r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800f84a:	2b05      	cmp	r3, #5
 800f84c:	d825      	bhi.n	800f89a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 800f84e:	e8df f003 	tbb	[pc, r3]
 800f852:	0c15181b 	ldceq	8, cr1, [r5], {27}
 800f856:	46232403 	strtmi	r2, [r3], -r3, lsl #8
 800f85a:	9506      	str	r5, [sp, #24]
 800f85c:	4672      	mov	r2, lr
 800f85e:	9605      	str	r6, [sp, #20]
 800f860:	4660      	mov	r0, ip
 800f862:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f866:	f7ff bf43 	b.w	800f6f0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f86a:	462b      	mov	r3, r5
 800f86c:	9606      	str	r6, [sp, #24]
 800f86e:	4672      	mov	r2, lr
 800f870:	9405      	str	r4, [sp, #20]
 800f872:	4660      	mov	r0, ip
 800f874:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f878:	f7ff bf3a 	b.w	800f6f0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f87c:	462b      	mov	r3, r5
 800f87e:	9406      	str	r4, [sp, #24]
 800f880:	e7ec      	b.n	800f85c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>
 800f882:	4633      	mov	r3, r6
 800f884:	9506      	str	r5, [sp, #24]
 800f886:	e7f2      	b.n	800f86e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x8a>
 800f888:	4633      	mov	r3, r6
 800f88a:	9406      	str	r4, [sp, #24]
 800f88c:	4672      	mov	r2, lr
 800f88e:	9505      	str	r5, [sp, #20]
 800f890:	4660      	mov	r0, ip
 800f892:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f896:	f7ff bf2b 	b.w	800f6f0 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f89a:	4623      	mov	r3, r4
 800f89c:	9606      	str	r6, [sp, #24]
 800f89e:	e7f5      	b.n	800f88c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa8>
 800f8a0:	9606      	str	r6, [sp, #24]
 800f8a2:	4623      	mov	r3, r4
 800f8a4:	4608      	mov	r0, r1
 800f8a6:	f89c 2012 	ldrb.w	r2, [ip, #18]
 800f8aa:	f10e 0101 	add.w	r1, lr, #1
 800f8ae:	9505      	str	r5, [sp, #20]
 800f8b0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f8b4:	f7ff badc 	b.w	800ee70 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800f8b8:	4623      	mov	r3, r4
 800f8ba:	9606      	str	r6, [sp, #24]
 800f8bc:	4672      	mov	r2, lr
 800f8be:	4660      	mov	r0, ip
 800f8c0:	9505      	str	r5, [sp, #20]
 800f8c2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800f8c6:	f7ff bf51 	b.w	800f76c <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f8ca:	4633      	mov	r3, r6
 800f8cc:	9406      	str	r4, [sp, #24]
 800f8ce:	e7f5      	b.n	800f8bc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd8>
 800f8d0:	4633      	mov	r3, r6
 800f8d2:	9506      	str	r5, [sp, #24]
 800f8d4:	4672      	mov	r2, lr
 800f8d6:	4660      	mov	r0, ip
 800f8d8:	9405      	str	r4, [sp, #20]
 800f8da:	e7f2      	b.n	800f8c2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800f8dc:	462b      	mov	r3, r5
 800f8de:	9406      	str	r4, [sp, #24]
 800f8e0:	4672      	mov	r2, lr
 800f8e2:	4660      	mov	r0, ip
 800f8e4:	9605      	str	r6, [sp, #20]
 800f8e6:	e7ec      	b.n	800f8c2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800f8e8:	462b      	mov	r3, r5
 800f8ea:	9606      	str	r6, [sp, #24]
 800f8ec:	e7f2      	b.n	800f8d4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xf0>
 800f8ee:	4623      	mov	r3, r4
 800f8f0:	9506      	str	r5, [sp, #24]
 800f8f2:	e7f5      	b.n	800f8e0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xfc>

0800f8f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800f8f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f8f6:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800f8fa:	2400      	movs	r4, #0
 800f8fc:	2501      	movs	r5, #1
 800f8fe:	6986      	ldr	r6, [r0, #24]
 800f900:	4f1e      	ldr	r7, [pc, #120]	; (800f97c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x88>)
 800f902:	f89d e014 	ldrb.w	lr, [sp, #20]
 800f906:	eb07 1782 	add.w	r7, r7, r2, lsl #6
 800f90a:	1d8a      	adds	r2, r1, #6
 800f90c:	5cf1      	ldrb	r1, [r6, r3]
 800f90e:	4b1c      	ldr	r3, [pc, #112]	; (800f980 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x8c>)
 800f910:	b2d2      	uxtb	r2, r2
 800f912:	443b      	add	r3, r7
 800f914:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800f918:	f102 6208 	add.w	r2, r2, #142606336	; 0x8800000
 800f91c:	f502 7200 	add.w	r2, r2, #512	; 0x200
 800f920:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 800f924:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800f928:	f816 000e 	ldrb.w	r0, [r6, lr]
 800f92c:	f816 e007 	ldrb.w	lr, [r6, r7]
 800f930:	f89d 701c 	ldrb.w	r7, [sp, #28]
 800f934:	009b      	lsls	r3, r3, #2
 800f936:	5df6      	ldrb	r6, [r6, r7]
 800f938:	0092      	lsls	r2, r2, #2
 800f93a:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 800f93e:	ea10 0f0c 	tst.w	r0, ip
 800f942:	bf0c      	ite	eq
 800f944:	603d      	streq	r5, [r7, #0]
 800f946:	603c      	strne	r4, [r7, #0]
 800f948:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 800f94c:	ea11 0f0c 	tst.w	r1, ip
 800f950:	bf0c      	ite	eq
 800f952:	603d      	streq	r5, [r7, #0]
 800f954:	603c      	strne	r4, [r7, #0]
 800f956:	ea1e 0f0c 	tst.w	lr, ip
 800f95a:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 800f95e:	bf0c      	ite	eq
 800f960:	603d      	streq	r5, [r7, #0]
 800f962:	603c      	strne	r4, [r7, #0]
 800f964:	ea16 0f0c 	tst.w	r6, ip
 800f968:	bf0c      	ite	eq
 800f96a:	601d      	streq	r5, [r3, #0]
 800f96c:	601c      	strne	r4, [r3, #0]
 800f96e:	3340      	adds	r3, #64	; 0x40
 800f970:	429a      	cmp	r2, r3
 800f972:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800f976:	d1e0      	bne.n	800f93a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x46>
 800f978:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f97a:	bf00      	nop
 800f97c:	2000c998 	mulcs	r0, r8, r9
 800f980:	e1100030 	tst	r0, r0, lsr r0

0800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800f984:	2300      	movs	r3, #0
 800f986:	2020      	movs	r0, #32
 800f988:	b510      	push	{r4, lr}
 800f98a:	4a04      	ldr	r2, [pc, #16]	; (800f99c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800f98c:	428b      	cmp	r3, r1
 800f98e:	d100      	bne.n	800f992 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800f990:	bd10      	pop	{r4, pc}
 800f992:	f852 4b04 	ldr.w	r4, [r2], #4
 800f996:	3301      	adds	r3, #1
 800f998:	4420      	add	r0, r4
 800f99a:	e7f7      	b.n	800f98c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800f99c:	080185e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, pc}

0800f9a0 <SpiFlashStore::Init()>:
 800f9a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9a4:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800fabc <SpiFlashStore::Init()+0x11c>
 800f9a8:	4607      	mov	r7, r0
 800f9aa:	b085      	sub	sp, #20
 800f9ac:	f8d8 0000 	ldr.w	r0, [r8]
 800f9b0:	f000 fc2c 	bl	801020c <FlashRom::GetSectorSize() const>
 800f9b4:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800f9b8:	4605      	mov	r5, r0
 800f9ba:	d17d      	bne.n	800fab8 <SpiFlashStore::Init()+0x118>
 800f9bc:	f8d8 0000 	ldr.w	r0, [r8]
 800f9c0:	f000 fc1c 	bl	80101fc <FlashRom::GetSize() const>
 800f9c4:	4b3e      	ldr	r3, [pc, #248]	; (800fac0 <SpiFlashStore::Init()+0x120>)
 800f9c6:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800f9ca:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800f9ce:	6019      	str	r1, [r3, #0]
 800f9d0:	2e00      	cmp	r6, #0
 800f9d2:	d171      	bne.n	800fab8 <SpiFlashStore::Init()+0x118>
 800f9d4:	4c3b      	ldr	r4, [pc, #236]	; (800fac4 <SpiFlashStore::Init()+0x124>)
 800f9d6:	ab03      	add	r3, sp, #12
 800f9d8:	9300      	str	r3, [sp, #0]
 800f9da:	462a      	mov	r2, r5
 800f9dc:	4623      	mov	r3, r4
 800f9de:	f8d8 0000 	ldr.w	r0, [r8]
 800f9e2:	f000 fc16 	bl	8010212 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800f9e6:	7823      	ldrb	r3, [r4, #0]
 800f9e8:	2b41      	cmp	r3, #65	; 0x41
 800f9ea:	bf1c      	itt	ne
 800f9ec:	2341      	movne	r3, #65	; 0x41
 800f9ee:	7023      	strbne	r3, [r4, #0]
 800f9f0:	7863      	ldrb	r3, [r4, #1]
 800f9f2:	bf14      	ite	ne
 800f9f4:	4635      	movne	r5, r6
 800f9f6:	2501      	moveq	r5, #1
 800f9f8:	2b76      	cmp	r3, #118	; 0x76
 800f9fa:	bf1c      	itt	ne
 800f9fc:	2376      	movne	r3, #118	; 0x76
 800f9fe:	7063      	strbne	r3, [r4, #1]
 800fa00:	78a3      	ldrb	r3, [r4, #2]
 800fa02:	bf18      	it	ne
 800fa04:	2500      	movne	r5, #0
 800fa06:	2b56      	cmp	r3, #86	; 0x56
 800fa08:	bf1c      	itt	ne
 800fa0a:	2356      	movne	r3, #86	; 0x56
 800fa0c:	70a3      	strbne	r3, [r4, #2]
 800fa0e:	78e3      	ldrb	r3, [r4, #3]
 800fa10:	bf18      	it	ne
 800fa12:	2500      	movne	r5, #0
 800fa14:	2b10      	cmp	r3, #16
 800fa16:	d022      	beq.n	800fa5e <SpiFlashStore::Init()+0xbe>
 800fa18:	2310      	movs	r3, #16
 800fa1a:	70e3      	strb	r3, [r4, #3]
 800fa1c:	2201      	movs	r2, #1
 800fa1e:	2500      	movs	r5, #0
 800fa20:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800fa24:	4b28      	ldr	r3, [pc, #160]	; (800fac8 <SpiFlashStore::Init()+0x128>)
 800fa26:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800facc <SpiFlashStore::Init()+0x12c>
 800fa2a:	701a      	strb	r2, [r3, #0]
 800fa2c:	4631      	mov	r1, r6
 800fa2e:	4638      	mov	r0, r7
 800fa30:	f7ff ffa8 	bl	800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800fa34:	1823      	adds	r3, r4, r0
 800fa36:	5425      	strb	r5, [r4, r0]
 800fa38:	705d      	strb	r5, [r3, #1]
 800fa3a:	709d      	strb	r5, [r3, #2]
 800fa3c:	70dd      	strb	r5, [r3, #3]
 800fa3e:	f858 3b04 	ldr.w	r3, [r8], #4
 800fa42:	1d02      	adds	r2, r0, #4
 800fa44:	4403      	add	r3, r0
 800fa46:	429a      	cmp	r2, r3
 800fa48:	d332      	bcc.n	800fab0 <SpiFlashStore::Init()+0x110>
 800fa4a:	3601      	adds	r6, #1
 800fa4c:	2e1c      	cmp	r6, #28
 800fa4e:	d1ed      	bne.n	800fa2c <SpiFlashStore::Init()+0x8c>
 800fa50:	2501      	movs	r5, #1
 800fa52:	4b1f      	ldr	r3, [pc, #124]	; (800fad0 <SpiFlashStore::Init()+0x130>)
 800fa54:	601d      	str	r5, [r3, #0]
 800fa56:	4628      	mov	r0, r5
 800fa58:	b005      	add	sp, #20
 800fa5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa5e:	2d00      	cmp	r5, #0
 800fa60:	d0dc      	beq.n	800fa1c <SpiFlashStore::Init()+0x7c>
 800fa62:	f04f 0900 	mov.w	r9, #0
 800fa66:	46c8      	mov	r8, r9
 800fa68:	4631      	mov	r1, r6
 800fa6a:	4638      	mov	r0, r7
 800fa6c:	f7ff ff8a 	bl	800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800fa70:	5c23      	ldrb	r3, [r4, r0]
 800fa72:	2bff      	cmp	r3, #255	; 0xff
 800fa74:	d112      	bne.n	800fa9c <SpiFlashStore::Init()+0xfc>
 800fa76:	1823      	adds	r3, r4, r0
 800fa78:	785a      	ldrb	r2, [r3, #1]
 800fa7a:	2aff      	cmp	r2, #255	; 0xff
 800fa7c:	d10e      	bne.n	800fa9c <SpiFlashStore::Init()+0xfc>
 800fa7e:	789a      	ldrb	r2, [r3, #2]
 800fa80:	2aff      	cmp	r2, #255	; 0xff
 800fa82:	d10b      	bne.n	800fa9c <SpiFlashStore::Init()+0xfc>
 800fa84:	78da      	ldrb	r2, [r3, #3]
 800fa86:	2aff      	cmp	r2, #255	; 0xff
 800fa88:	d108      	bne.n	800fa9c <SpiFlashStore::Init()+0xfc>
 800fa8a:	46a9      	mov	r9, r5
 800fa8c:	f804 8000 	strb.w	r8, [r4, r0]
 800fa90:	f883 8001 	strb.w	r8, [r3, #1]
 800fa94:	f883 8002 	strb.w	r8, [r3, #2]
 800fa98:	f883 8003 	strb.w	r8, [r3, #3]
 800fa9c:	3601      	adds	r6, #1
 800fa9e:	2e1c      	cmp	r6, #28
 800faa0:	d1e2      	bne.n	800fa68 <SpiFlashStore::Init()+0xc8>
 800faa2:	f1b9 0f00 	cmp.w	r9, #0
 800faa6:	d0d6      	beq.n	800fa56 <SpiFlashStore::Init()+0xb6>
 800faa8:	2201      	movs	r2, #1
 800faaa:	4b09      	ldr	r3, [pc, #36]	; (800fad0 <SpiFlashStore::Init()+0x130>)
 800faac:	601a      	str	r2, [r3, #0]
 800faae:	e7d2      	b.n	800fa56 <SpiFlashStore::Init()+0xb6>
 800fab0:	f804 9002 	strb.w	r9, [r4, r2]
 800fab4:	3201      	adds	r2, #1
 800fab6:	e7c6      	b.n	800fa46 <SpiFlashStore::Init()+0xa6>
 800fab8:	2500      	movs	r5, #0
 800faba:	e7cc      	b.n	800fa56 <SpiFlashStore::Init()+0xb6>
 800fabc:	200159cc 	andcs	r5, r1, ip, asr #19
 800fac0:	2001599c 	mulcs	r1, ip, r9
 800fac4:	2001499c 	mulcs	r1, ip, r9
 800fac8:	200159b0 			; <UNDEFINED> instruction: 0x200159b0
 800facc:	080185e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, pc}
 800fad0:	200159a8 	andcs	r5, r1, r8, lsr #19

0800fad4 <SpiFlashStore::SpiFlashStore()>:
 800fad4:	b538      	push	{r3, r4, r5, lr}
 800fad6:	4b0d      	ldr	r3, [pc, #52]	; (800fb0c <SpiFlashStore::SpiFlashStore()+0x38>)
 800fad8:	4604      	mov	r4, r0
 800fada:	6018      	str	r0, [r3, #0]
 800fadc:	4b0c      	ldr	r3, [pc, #48]	; (800fb10 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800fade:	4d0d      	ldr	r5, [pc, #52]	; (800fb14 <SpiFlashStore::SpiFlashStore()+0x40>)
 800fae0:	681b      	ldr	r3, [r3, #0]
 800fae2:	781b      	ldrb	r3, [r3, #0]
 800fae4:	b113      	cbz	r3, 800faec <SpiFlashStore::SpiFlashStore()+0x18>
 800fae6:	f7ff ff5b 	bl	800f9a0 <SpiFlashStore::Init()>
 800faea:	7028      	strb	r0, [r5, #0]
 800faec:	782b      	ldrb	r3, [r5, #0]
 800faee:	b153      	cbz	r3, 800fb06 <SpiFlashStore::SpiFlashStore()+0x32>
 800faf0:	2320      	movs	r3, #32
 800faf2:	2200      	movs	r2, #0
 800faf4:	4908      	ldr	r1, [pc, #32]	; (800fb18 <SpiFlashStore::SpiFlashStore()+0x44>)
 800faf6:	f851 0b04 	ldr.w	r0, [r1], #4
 800fafa:	3201      	adds	r2, #1
 800fafc:	2a1c      	cmp	r2, #28
 800fafe:	4403      	add	r3, r0
 800fb00:	d1f9      	bne.n	800faf6 <SpiFlashStore::SpiFlashStore()+0x22>
 800fb02:	4a06      	ldr	r2, [pc, #24]	; (800fb1c <SpiFlashStore::SpiFlashStore()+0x48>)
 800fb04:	6013      	str	r3, [r2, #0]
 800fb06:	4620      	mov	r0, r4
 800fb08:	bd38      	pop	{r3, r4, r5, pc}
 800fb0a:	bf00      	nop
 800fb0c:	200159ac 	andcs	r5, r1, ip, lsr #19
 800fb10:	200159cc 	andcs	r5, r1, ip, asr #19
 800fb14:	200159a0 	andcs	r5, r1, r0, lsr #19
 800fb18:	080185e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, pc}
 800fb1c:	200159a4 	andcs	r5, r1, r4, lsr #19

0800fb20 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800fb20:	b508      	push	{r3, lr}
 800fb22:	f7ff ff2f 	bl	800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800fb26:	2300      	movs	r3, #0
 800fb28:	4904      	ldr	r1, [pc, #16]	; (800fb3c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800fb2a:	1842      	adds	r2, r0, r1
 800fb2c:	540b      	strb	r3, [r1, r0]
 800fb2e:	7053      	strb	r3, [r2, #1]
 800fb30:	7093      	strb	r3, [r2, #2]
 800fb32:	70d3      	strb	r3, [r2, #3]
 800fb34:	2201      	movs	r2, #1
 800fb36:	4b02      	ldr	r3, [pc, #8]	; (800fb40 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800fb38:	601a      	str	r2, [r3, #0]
 800fb3a:	bd08      	pop	{r3, pc}
 800fb3c:	2001499c 	mulcs	r1, ip, r9
 800fb40:	200159a8 	andcs	r5, r1, r8, lsr #19

0800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800fb44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb48:	461c      	mov	r4, r3
 800fb4a:	4b19      	ldr	r3, [pc, #100]	; (800fbb0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800fb4c:	4616      	mov	r6, r2
 800fb4e:	781f      	ldrb	r7, [r3, #0]
 800fb50:	9d07      	ldr	r5, [sp, #28]
 800fb52:	b307      	cbz	r7, 800fb96 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800fb54:	f7ff ff16 	bl	800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800fb58:	f04f 0c00 	mov.w	ip, #0
 800fb5c:	4a15      	ldr	r2, [pc, #84]	; (800fbb4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800fb5e:	1831      	adds	r1, r6, r0
 800fb60:	1e63      	subs	r3, r4, #1
 800fb62:	9c06      	ldr	r4, [sp, #24]
 800fb64:	4411      	add	r1, r2
 800fb66:	440c      	add	r4, r1
 800fb68:	42a1      	cmp	r1, r4
 800fb6a:	d116      	bne.n	800fb9a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800fb6c:	f1bc 0f00 	cmp.w	ip, #0
 800fb70:	d011      	beq.n	800fb96 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800fb72:	4b11      	ldr	r3, [pc, #68]	; (800fbb8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800fb74:	6819      	ldr	r1, [r3, #0]
 800fb76:	b109      	cbz	r1, 800fb7c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800fb78:	2906      	cmp	r1, #6
 800fb7a:	d101      	bne.n	800fb80 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800fb7c:	2101      	movs	r1, #1
 800fb7e:	6019      	str	r1, [r3, #0]
 800fb80:	4b0e      	ldr	r3, [pc, #56]	; (800fbbc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800fb82:	6819      	ldr	r1, [r3, #0]
 800fb84:	4b0e      	ldr	r3, [pc, #56]	; (800fbc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800fb86:	6019      	str	r1, [r3, #0]
 800fb88:	b12e      	cbz	r6, 800fb96 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800fb8a:	b125      	cbz	r5, 800fb96 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800fb8c:	9b08      	ldr	r3, [sp, #32]
 800fb8e:	4418      	add	r0, r3
 800fb90:	5813      	ldr	r3, [r2, r0]
 800fb92:	432b      	orrs	r3, r5
 800fb94:	5013      	str	r3, [r2, r0]
 800fb96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb9a:	f891 8000 	ldrb.w	r8, [r1]
 800fb9e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800fba2:	3101      	adds	r1, #1
 800fba4:	45f0      	cmp	r8, lr
 800fba6:	bf1c      	itt	ne
 800fba8:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800fbac:	46bc      	movne	ip, r7
 800fbae:	e7db      	b.n	800fb68 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800fbb0:	200159a0 	andcs	r5, r1, r0, lsr #19
 800fbb4:	2001499c 	mulcs	r1, ip, r9
 800fbb8:	200159a8 	andcs	r5, r1, r8, lsr #19
 800fbbc:	2001d994 	mulcs	r1, r4, r9
 800fbc0:	20014998 	mulcs	r1, r8, r9

0800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800fbc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fbc8:	461d      	mov	r5, r3
 800fbca:	4b15      	ldr	r3, [pc, #84]	; (800fc20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800fbcc:	b085      	sub	sp, #20
 800fbce:	781b      	ldrb	r3, [r3, #0]
 800fbd0:	4607      	mov	r7, r0
 800fbd2:	4614      	mov	r4, r2
 800fbd4:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800fbd8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800fbdc:	b193      	cbz	r3, 800fc04 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800fbde:	f7ff fed1 	bl	800f984 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800fbe2:	4a10      	ldr	r2, [pc, #64]	; (800fc24 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800fbe4:	eb08 0600 	add.w	r6, r8, r0
 800fbe8:	18b3      	adds	r3, r6, r2
 800fbea:	f1b9 0f00 	cmp.w	r9, #0
 800fbee:	d013      	beq.n	800fc18 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800fbf0:	5990      	ldr	r0, [r2, r6]
 800fbf2:	b988      	cbnz	r0, 800fc18 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800fbf4:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800fbf8:	4623      	mov	r3, r4
 800fbfa:	4642      	mov	r2, r8
 800fbfc:	4638      	mov	r0, r7
 800fbfe:	9500      	str	r5, [sp, #0]
 800fc00:	f7ff ffa0 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc04:	b005      	add	sp, #20
 800fc06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc0a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fc0e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800fc12:	429d      	cmp	r5, r3
 800fc14:	d1f9      	bne.n	800fc0a <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800fc16:	e7f5      	b.n	800fc04 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800fc18:	3c01      	subs	r4, #1
 800fc1a:	441d      	add	r5, r3
 800fc1c:	e7f9      	b.n	800fc12 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800fc1e:	bf00      	nop
 800fc20:	200159a0 	andcs	r5, r1, r0, lsr #19
 800fc24:	2001499c 	mulcs	r1, ip, r9

0800fc28 <SpiFlashStore::Flash()>:
 800fc28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fc2a:	4c25      	ldr	r4, [pc, #148]	; (800fcc0 <SpiFlashStore::Flash()+0x98>)
 800fc2c:	6820      	ldr	r0, [r4, #0]
 800fc2e:	2800      	cmp	r0, #0
 800fc30:	d043      	beq.n	800fcba <SpiFlashStore::Flash()+0x92>
 800fc32:	3801      	subs	r0, #1
 800fc34:	2805      	cmp	r0, #5
 800fc36:	d831      	bhi.n	800fc9c <SpiFlashStore::Flash()+0x74>
 800fc38:	e8df f000 	tbb	[pc, r0]
 800fc3c:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800fc40:	4b203025 	blmi	881bcdc <__exidx_end+0x802af8>
 800fc44:	681a      	ldr	r2, [r3, #0]
 800fc46:	4b20      	ldr	r3, [pc, #128]	; (800fcc8 <SpiFlashStore::Flash()+0xa0>)
 800fc48:	601a      	str	r2, [r3, #0]
 800fc4a:	2302      	movs	r3, #2
 800fc4c:	6023      	str	r3, [r4, #0]
 800fc4e:	2001      	movs	r0, #1
 800fc50:	e033      	b.n	800fcba <SpiFlashStore::Flash()+0x92>
 800fc52:	4b1c      	ldr	r3, [pc, #112]	; (800fcc4 <SpiFlashStore::Flash()+0x9c>)
 800fc54:	4a1c      	ldr	r2, [pc, #112]	; (800fcc8 <SpiFlashStore::Flash()+0xa0>)
 800fc56:	681b      	ldr	r3, [r3, #0]
 800fc58:	6812      	ldr	r2, [r2, #0]
 800fc5a:	1a9b      	subs	r3, r3, r2
 800fc5c:	2b63      	cmp	r3, #99	; 0x63
 800fc5e:	d9f6      	bls.n	800fc4e <SpiFlashStore::Flash()+0x26>
 800fc60:	2303      	movs	r3, #3
 800fc62:	e7f3      	b.n	800fc4c <SpiFlashStore::Flash()+0x24>
 800fc64:	4919      	ldr	r1, [pc, #100]	; (800fccc <SpiFlashStore::Flash()+0xa4>)
 800fc66:	481a      	ldr	r0, [pc, #104]	; (800fcd0 <SpiFlashStore::Flash()+0xa8>)
 800fc68:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800fc6c:	6809      	ldr	r1, [r1, #0]
 800fc6e:	6800      	ldr	r0, [r0, #0]
 800fc70:	ab03      	add	r3, sp, #12
 800fc72:	f000 fadd 	bl	8010230 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800fc76:	2800      	cmp	r0, #0
 800fc78:	d0e9      	beq.n	800fc4e <SpiFlashStore::Flash()+0x26>
 800fc7a:	4b12      	ldr	r3, [pc, #72]	; (800fcc4 <SpiFlashStore::Flash()+0x9c>)
 800fc7c:	681a      	ldr	r2, [r3, #0]
 800fc7e:	4b12      	ldr	r3, [pc, #72]	; (800fcc8 <SpiFlashStore::Flash()+0xa0>)
 800fc80:	601a      	str	r2, [r3, #0]
 800fc82:	2305      	movs	r3, #5
 800fc84:	e7e2      	b.n	800fc4c <SpiFlashStore::Flash()+0x24>
 800fc86:	4b0f      	ldr	r3, [pc, #60]	; (800fcc4 <SpiFlashStore::Flash()+0x9c>)
 800fc88:	4a0f      	ldr	r2, [pc, #60]	; (800fcc8 <SpiFlashStore::Flash()+0xa0>)
 800fc8a:	681b      	ldr	r3, [r3, #0]
 800fc8c:	6812      	ldr	r2, [r2, #0]
 800fc8e:	1a9b      	subs	r3, r3, r2
 800fc90:	2b63      	cmp	r3, #99	; 0x63
 800fc92:	d9dc      	bls.n	800fc4e <SpiFlashStore::Flash()+0x26>
 800fc94:	2304      	movs	r3, #4
 800fc96:	e7d9      	b.n	800fc4c <SpiFlashStore::Flash()+0x24>
 800fc98:	2306      	movs	r3, #6
 800fc9a:	e7d7      	b.n	800fc4c <SpiFlashStore::Flash()+0x24>
 800fc9c:	ab03      	add	r3, sp, #12
 800fc9e:	4a0d      	ldr	r2, [pc, #52]	; (800fcd4 <SpiFlashStore::Flash()+0xac>)
 800fca0:	490a      	ldr	r1, [pc, #40]	; (800fccc <SpiFlashStore::Flash()+0xa4>)
 800fca2:	480b      	ldr	r0, [pc, #44]	; (800fcd0 <SpiFlashStore::Flash()+0xa8>)
 800fca4:	9300      	str	r3, [sp, #0]
 800fca6:	6812      	ldr	r2, [r2, #0]
 800fca8:	4b0b      	ldr	r3, [pc, #44]	; (800fcd8 <SpiFlashStore::Flash()+0xb0>)
 800fcaa:	6809      	ldr	r1, [r1, #0]
 800fcac:	6800      	ldr	r0, [r0, #0]
 800fcae:	f000 fb5f 	bl	8010370 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800fcb2:	2800      	cmp	r0, #0
 800fcb4:	d0cb      	beq.n	800fc4e <SpiFlashStore::Flash()+0x26>
 800fcb6:	2000      	movs	r0, #0
 800fcb8:	6020      	str	r0, [r4, #0]
 800fcba:	b004      	add	sp, #16
 800fcbc:	bd10      	pop	{r4, pc}
 800fcbe:	bf00      	nop
 800fcc0:	200159a8 	andcs	r5, r1, r8, lsr #19
 800fcc4:	2001d994 	mulcs	r1, r4, r9
 800fcc8:	20014998 	mulcs	r1, r8, r9
 800fccc:	2001599c 	mulcs	r1, ip, r9
 800fcd0:	200159cc 	andcs	r5, r1, ip, asr #19
 800fcd4:	200159a4 	andcs	r5, r1, r4, lsr #19
 800fcd8:	2001499c 	mulcs	r1, ip, r9

0800fcdc <StoreDisplayUdf::~StoreDisplayUdf()>:
 800fcdc:	4770      	bx	lr
	...

0800fce0 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800fce0:	b507      	push	{r0, r1, r2, lr}
 800fce2:	2300      	movs	r3, #0
 800fce4:	460a      	mov	r2, r1
 800fce6:	2101      	movs	r1, #1
 800fce8:	e9cd 3100 	strd	r3, r1, [sp]
 800fcec:	4804      	ldr	r0, [pc, #16]	; (800fd00 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800fcee:	2322      	movs	r3, #34	; 0x22
 800fcf0:	210f      	movs	r1, #15
 800fcf2:	6800      	ldr	r0, [r0, #0]
 800fcf4:	f7ff ff66 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800fcf8:	b003      	add	sp, #12
 800fcfa:	f85d fb04 	ldr.w	pc, [sp], #4
 800fcfe:	bf00      	nop
 800fd00:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fd04 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800fd04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd06:	2200      	movs	r2, #0
 800fd08:	460b      	mov	r3, r1
 800fd0a:	2122      	movs	r1, #34	; 0x22
 800fd0c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fd10:	4804      	ldr	r0, [pc, #16]	; (800fd24 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800fd12:	9100      	str	r1, [sp, #0]
 800fd14:	6800      	ldr	r0, [r0, #0]
 800fd16:	210f      	movs	r1, #15
 800fd18:	f7ff ff14 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd1c:	b005      	add	sp, #20
 800fd1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd22:	bf00      	nop
 800fd24:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fd28 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800fd28:	b510      	push	{r4, lr}
 800fd2a:	4604      	mov	r4, r0
 800fd2c:	f003 ff4c 	bl	8013bc8 <operator delete(void*)>
 800fd30:	4620      	mov	r0, r4
 800fd32:	bd10      	pop	{r4, pc}

0800fd34 <StoreDisplayUdf::StoreDisplayUdf()>:
 800fd34:	4a02      	ldr	r2, [pc, #8]	; (800fd40 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800fd36:	6002      	str	r2, [r0, #0]
 800fd38:	4a02      	ldr	r2, [pc, #8]	; (800fd44 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800fd3a:	6010      	str	r0, [r2, #0]
 800fd3c:	4770      	bx	lr
 800fd3e:	bf00      	nop
 800fd40:	08018660 	stmdaeq	r1, {r5, r6, r9, sl, pc}
 800fd44:	200159b4 			; <UNDEFINED> instruction: 0x200159b4

0800fd48 <StoreNetwork::~StoreNetwork()>:
 800fd48:	4770      	bx	lr

0800fd4a <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fd4a:	3804      	subs	r0, #4
 800fd4c:	4770      	bx	lr
	...

0800fd50 <StoreNetwork::Update(networkparams::Params const*)>:
 800fd50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd52:	2200      	movs	r2, #0
 800fd54:	460b      	mov	r3, r1
 800fd56:	215e      	movs	r1, #94	; 0x5e
 800fd58:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fd5c:	4804      	ldr	r0, [pc, #16]	; (800fd70 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800fd5e:	9100      	str	r1, [sp, #0]
 800fd60:	6800      	ldr	r0, [r0, #0]
 800fd62:	4611      	mov	r1, r2
 800fd64:	f7ff feee 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd68:	b005      	add	sp, #20
 800fd6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd6e:	bf00      	nop
 800fd70:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fd74 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800fd74:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd76:	2308      	movs	r3, #8
 800fd78:	9105      	str	r1, [sp, #20]
 800fd7a:	2100      	movs	r1, #0
 800fd7c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fd80:	2304      	movs	r3, #4
 800fd82:	4805      	ldr	r0, [pc, #20]	; (800fd98 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800fd84:	9300      	str	r3, [sp, #0]
 800fd86:	220c      	movs	r2, #12
 800fd88:	6800      	ldr	r0, [r0, #0]
 800fd8a:	ab05      	add	r3, sp, #20
 800fd8c:	f7ff feda 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd90:	b007      	add	sp, #28
 800fd92:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd96:	bf00      	nop
 800fd98:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fd9c <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800fd9c:	f1a0 0004 	sub.w	r0, r0, #4
 800fda0:	e7e8      	b.n	800fd74 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800fda2:	bf00      	nop

0800fda4 <StoreNetwork::SaveNetMask(unsigned int)>:
 800fda4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fda6:	2304      	movs	r3, #4
 800fda8:	9105      	str	r1, [sp, #20]
 800fdaa:	2100      	movs	r1, #0
 800fdac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fdb0:	4804      	ldr	r0, [pc, #16]	; (800fdc4 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800fdb2:	9300      	str	r3, [sp, #0]
 800fdb4:	2208      	movs	r2, #8
 800fdb6:	6800      	ldr	r0, [r0, #0]
 800fdb8:	ab05      	add	r3, sp, #20
 800fdba:	f7ff fec3 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fdbe:	b007      	add	sp, #28
 800fdc0:	f85d fb04 	ldr.w	pc, [sp], #4
 800fdc4:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fdc8 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800fdc8:	f1a0 0004 	sub.w	r0, r0, #4
 800fdcc:	e7ea      	b.n	800fda4 <StoreNetwork::SaveNetMask(unsigned int)>
 800fdce:	bf00      	nop

0800fdd0 <StoreNetwork::SaveIp(unsigned int)>:
 800fdd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fdd2:	2302      	movs	r3, #2
 800fdd4:	9105      	str	r1, [sp, #20]
 800fdd6:	2100      	movs	r1, #0
 800fdd8:	2204      	movs	r2, #4
 800fdda:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fdde:	4804      	ldr	r0, [pc, #16]	; (800fdf0 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800fde0:	9200      	str	r2, [sp, #0]
 800fde2:	6800      	ldr	r0, [r0, #0]
 800fde4:	ab05      	add	r3, sp, #20
 800fde6:	f7ff fead 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fdea:	b007      	add	sp, #28
 800fdec:	f85d fb04 	ldr.w	pc, [sp], #4
 800fdf0:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fdf4 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800fdf4:	f1a0 0004 	sub.w	r0, r0, #4
 800fdf8:	e7ea      	b.n	800fdd0 <StoreNetwork::SaveIp(unsigned int)>
 800fdfa:	bf00      	nop

0800fdfc <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fdfc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fdfe:	460b      	mov	r3, r1
 800fe00:	2020      	movs	r0, #32
 800fe02:	2100      	movs	r1, #0
 800fe04:	2a40      	cmp	r2, #64	; 0x40
 800fe06:	bf28      	it	cs
 800fe08:	2240      	movcs	r2, #64	; 0x40
 800fe0a:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800fe0e:	4804      	ldr	r0, [pc, #16]	; (800fe20 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800fe10:	9200      	str	r2, [sp, #0]
 800fe12:	6800      	ldr	r0, [r0, #0]
 800fe14:	2215      	movs	r2, #21
 800fe16:	f7ff fe95 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe1a:	b005      	add	sp, #20
 800fe1c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe20:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fe24 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fe24:	f1a0 0004 	sub.w	r0, r0, #4
 800fe28:	e7e8      	b.n	800fdfc <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800fe2a:	bf00      	nop

0800fe2c <StoreNetwork::~StoreNetwork()>:
 800fe2c:	b510      	push	{r4, lr}
 800fe2e:	4604      	mov	r4, r0
 800fe30:	f003 feca 	bl	8013bc8 <operator delete(void*)>
 800fe34:	4620      	mov	r0, r4
 800fe36:	bd10      	pop	{r4, pc}

0800fe38 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fe38:	f1a0 0004 	sub.w	r0, r0, #4
 800fe3c:	e7f6      	b.n	800fe2c <StoreNetwork::~StoreNetwork()>
	...

0800fe40 <StoreNetwork::Copy(networkparams::Params*)>:
 800fe40:	b507      	push	{r0, r1, r2, lr}
 800fe42:	2301      	movs	r3, #1
 800fe44:	460a      	mov	r2, r1
 800fe46:	2100      	movs	r1, #0
 800fe48:	e9cd 1300 	strd	r1, r3, [sp]
 800fe4c:	4803      	ldr	r0, [pc, #12]	; (800fe5c <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800fe4e:	235e      	movs	r3, #94	; 0x5e
 800fe50:	6800      	ldr	r0, [r0, #0]
 800fe52:	f7ff feb7 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800fe56:	b003      	add	sp, #12
 800fe58:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe5c:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fe60 <StoreNetwork::StoreNetwork()>:
 800fe60:	4a03      	ldr	r2, [pc, #12]	; (800fe70 <StoreNetwork::StoreNetwork()+0x10>)
 800fe62:	6002      	str	r2, [r0, #0]
 800fe64:	322c      	adds	r2, #44	; 0x2c
 800fe66:	6042      	str	r2, [r0, #4]
 800fe68:	4a02      	ldr	r2, [pc, #8]	; (800fe74 <StoreNetwork::StoreNetwork()+0x14>)
 800fe6a:	6010      	str	r0, [r2, #0]
 800fe6c:	4770      	bx	lr
 800fe6e:	bf00      	nop
 800fe70:	08018678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, pc}
 800fe74:	200159b8 			; <UNDEFINED> instruction: 0x200159b8

0800fe78 <StoreRDMDevice::~StoreRDMDevice()>:
 800fe78:	4770      	bx	lr

0800fe7a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800fe7a:	3804      	subs	r0, #4
 800fe7c:	4770      	bx	lr
	...

0800fe80 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800fe80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fe82:	2200      	movs	r2, #0
 800fe84:	460b      	mov	r3, r1
 800fe86:	2129      	movs	r1, #41	; 0x29
 800fe88:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fe8c:	4804      	ldr	r0, [pc, #16]	; (800fea0 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800fe8e:	9100      	str	r1, [sp, #0]
 800fe90:	6800      	ldr	r0, [r0, #0]
 800fe92:	210b      	movs	r1, #11
 800fe94:	f7ff fe56 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe98:	b005      	add	sp, #20
 800fe9a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe9e:	bf00      	nop
 800fea0:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fea4 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800fea4:	b570      	push	{r4, r5, r6, lr}
 800fea6:	2401      	movs	r4, #1
 800fea8:	2600      	movs	r6, #0
 800feaa:	4d0c      	ldr	r5, [pc, #48]	; (800fedc <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800feac:	b086      	sub	sp, #24
 800feae:	460b      	mov	r3, r1
 800feb0:	6828      	ldr	r0, [r5, #0]
 800feb2:	f88d 2017 	strb.w	r2, [sp, #23]
 800feb6:	9200      	str	r2, [sp, #0]
 800feb8:	210b      	movs	r1, #11
 800feba:	2204      	movs	r2, #4
 800febc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800fec0:	f7ff fe40 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fec4:	2224      	movs	r2, #36	; 0x24
 800fec6:	210b      	movs	r1, #11
 800fec8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800fecc:	6828      	ldr	r0, [r5, #0]
 800fece:	9400      	str	r4, [sp, #0]
 800fed0:	f10d 0317 	add.w	r3, sp, #23
 800fed4:	f7ff fe36 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fed8:	b006      	add	sp, #24
 800feda:	bd70      	pop	{r4, r5, r6, pc}
 800fedc:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fee0 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800fee0:	f1a0 0004 	sub.w	r0, r0, #4
 800fee4:	e7de      	b.n	800fea4 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800fee6:	bf00      	nop

0800fee8 <StoreRDMDevice::~StoreRDMDevice()>:
 800fee8:	b510      	push	{r4, lr}
 800feea:	4604      	mov	r4, r0
 800feec:	f003 fe6c 	bl	8013bc8 <operator delete(void*)>
 800fef0:	4620      	mov	r0, r4
 800fef2:	bd10      	pop	{r4, pc}

0800fef4 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800fef4:	f1a0 0004 	sub.w	r0, r0, #4
 800fef8:	e7f6      	b.n	800fee8 <StoreRDMDevice::~StoreRDMDevice()>
	...

0800fefc <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800fefc:	b507      	push	{r0, r1, r2, lr}
 800fefe:	2300      	movs	r3, #0
 800ff00:	460a      	mov	r2, r1
 800ff02:	2101      	movs	r1, #1
 800ff04:	e9cd 3100 	strd	r3, r1, [sp]
 800ff08:	4804      	ldr	r0, [pc, #16]	; (800ff1c <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 800ff0a:	2329      	movs	r3, #41	; 0x29
 800ff0c:	210b      	movs	r1, #11
 800ff0e:	6800      	ldr	r0, [r0, #0]
 800ff10:	f7ff fe58 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ff14:	b003      	add	sp, #12
 800ff16:	f85d fb04 	ldr.w	pc, [sp], #4
 800ff1a:	bf00      	nop
 800ff1c:	200159ac 	andcs	r5, r1, ip, lsr #19

0800ff20 <StoreRDMDevice::StoreRDMDevice()>:
 800ff20:	4a03      	ldr	r2, [pc, #12]	; (800ff30 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800ff22:	6002      	str	r2, [r0, #0]
 800ff24:	321c      	adds	r2, #28
 800ff26:	6042      	str	r2, [r0, #4]
 800ff28:	4a02      	ldr	r2, [pc, #8]	; (800ff34 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800ff2a:	6010      	str	r0, [r2, #0]
 800ff2c:	4770      	bx	lr
 800ff2e:	bf00      	nop
 800ff30:	080186c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, pc}
 800ff34:	200159bc 			; <UNDEFINED> instruction: 0x200159bc

0800ff38 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ff38:	4770      	bx	lr
	...

0800ff3c <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800ff3c:	b507      	push	{r0, r1, r2, lr}
 800ff3e:	2300      	movs	r3, #0
 800ff40:	460a      	mov	r2, r1
 800ff42:	2101      	movs	r1, #1
 800ff44:	e9cd 3100 	strd	r3, r1, [sp]
 800ff48:	4804      	ldr	r0, [pc, #16]	; (800ff5c <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800ff4a:	2320      	movs	r3, #32
 800ff4c:	210c      	movs	r1, #12
 800ff4e:	6800      	ldr	r0, [r0, #0]
 800ff50:	f7ff fe38 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ff54:	b003      	add	sp, #12
 800ff56:	f85d fb04 	ldr.w	pc, [sp], #4
 800ff5a:	bf00      	nop
 800ff5c:	200159ac 	andcs	r5, r1, ip, lsr #19

0800ff60 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800ff60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ff62:	2200      	movs	r2, #0
 800ff64:	460b      	mov	r3, r1
 800ff66:	2120      	movs	r1, #32
 800ff68:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ff6c:	4804      	ldr	r0, [pc, #16]	; (800ff80 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800ff6e:	9100      	str	r1, [sp, #0]
 800ff70:	6800      	ldr	r0, [r0, #0]
 800ff72:	210c      	movs	r1, #12
 800ff74:	f7ff fde6 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ff78:	b005      	add	sp, #20
 800ff7a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ff7e:	bf00      	nop
 800ff80:	200159ac 	andcs	r5, r1, ip, lsr #19

0800ff84 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ff84:	b510      	push	{r4, lr}
 800ff86:	4604      	mov	r4, r0
 800ff88:	f003 fe1e 	bl	8013bc8 <operator delete(void*)>
 800ff8c:	4620      	mov	r0, r4
 800ff8e:	bd10      	pop	{r4, pc}

0800ff90 <StoreRemoteConfig::StoreRemoteConfig()>:
 800ff90:	4a02      	ldr	r2, [pc, #8]	; (800ff9c <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800ff92:	6002      	str	r2, [r0, #0]
 800ff94:	4a02      	ldr	r2, [pc, #8]	; (800ffa0 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800ff96:	6010      	str	r0, [r2, #0]
 800ff98:	4770      	bx	lr
 800ff9a:	bf00      	nop
 800ff9c:	080186f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, pc}
 800ffa0:	200159c0 	andcs	r5, r1, r0, asr #19

0800ffa4 <StoreE131::~StoreE131()>:
 800ffa4:	4770      	bx	lr
	...

0800ffa8 <StoreE131::Copy(e131params::Params*)>:
 800ffa8:	b507      	push	{r0, r1, r2, lr}
 800ffaa:	2300      	movs	r3, #0
 800ffac:	460a      	mov	r2, r1
 800ffae:	2101      	movs	r1, #1
 800ffb0:	e9cd 3100 	strd	r3, r1, [sp]
 800ffb4:	4804      	ldr	r0, [pc, #16]	; (800ffc8 <StoreE131::Copy(e131params::Params*)+0x20>)
 800ffb6:	231f      	movs	r3, #31
 800ffb8:	2104      	movs	r1, #4
 800ffba:	6800      	ldr	r0, [r0, #0]
 800ffbc:	f7ff fe02 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ffc0:	b003      	add	sp, #12
 800ffc2:	f85d fb04 	ldr.w	pc, [sp], #4
 800ffc6:	bf00      	nop
 800ffc8:	200159ac 	andcs	r5, r1, ip, lsr #19

0800ffcc <StoreE131::Update(e131params::Params const*)>:
 800ffcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ffce:	2200      	movs	r2, #0
 800ffd0:	460b      	mov	r3, r1
 800ffd2:	211f      	movs	r1, #31
 800ffd4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ffd8:	4804      	ldr	r0, [pc, #16]	; (800ffec <StoreE131::Update(e131params::Params const*)+0x20>)
 800ffda:	9100      	str	r1, [sp, #0]
 800ffdc:	6800      	ldr	r0, [r0, #0]
 800ffde:	2104      	movs	r1, #4
 800ffe0:	f7ff fdb0 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ffe4:	b005      	add	sp, #20
 800ffe6:	f85d fb04 	ldr.w	pc, [sp], #4
 800ffea:	bf00      	nop
 800ffec:	200159ac 	andcs	r5, r1, ip, lsr #19

0800fff0 <StoreE131::~StoreE131()>:
 800fff0:	b510      	push	{r4, lr}
 800fff2:	4604      	mov	r4, r0
 800fff4:	f003 fde8 	bl	8013bc8 <operator delete(void*)>
 800fff8:	4620      	mov	r0, r4
 800fffa:	bd10      	pop	{r4, pc}

0800fffc <StoreE131::StoreE131()>:
 800fffc:	4a02      	ldr	r2, [pc, #8]	; (8010008 <StoreE131::StoreE131()+0xc>)
 800fffe:	6002      	str	r2, [r0, #0]
 8010000:	4a02      	ldr	r2, [pc, #8]	; (801000c <StoreE131::StoreE131()+0x10>)
 8010002:	6010      	str	r0, [r2, #0]
 8010004:	4770      	bx	lr
 8010006:	bf00      	nop
 8010008:	08018710 	stmdaeq	r1, {r4, r8, r9, sl, pc}
 801000c:	200159c4 	andcs	r5, r1, r4, asr #19

08010010 <StorePixelDmx::~StorePixelDmx()>:
 8010010:	4770      	bx	lr

08010012 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8010012:	3804      	subs	r0, #4
 8010014:	4770      	bx	lr
	...

08010018 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 8010018:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801001a:	2200      	movs	r2, #0
 801001c:	460b      	mov	r3, r1
 801001e:	2126      	movs	r1, #38	; 0x26
 8010020:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010024:	4804      	ldr	r0, [pc, #16]	; (8010038 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 8010026:	9100      	str	r1, [sp, #0]
 8010028:	6800      	ldr	r0, [r0, #0]
 801002a:	2103      	movs	r1, #3
 801002c:	f7ff fd8a 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010030:	b005      	add	sp, #20
 8010032:	f85d fb04 	ldr.w	pc, [sp], #4
 8010036:	bf00      	nop
 8010038:	200159ac 	andcs	r5, r1, ip, lsr #19

0801003c <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 801003c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801003e:	2304      	movs	r3, #4
 8010040:	2200      	movs	r2, #0
 8010042:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010046:	2302      	movs	r3, #2
 8010048:	4806      	ldr	r0, [pc, #24]	; (8010064 <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 801004a:	9300      	str	r3, [sp, #0]
 801004c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010050:	2207      	movs	r2, #7
 8010052:	2103      	movs	r1, #3
 8010054:	6800      	ldr	r0, [r0, #0]
 8010056:	f10d 0316 	add.w	r3, sp, #22
 801005a:	f7ff fd73 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 801005e:	b007      	add	sp, #28
 8010060:	f85d fb04 	ldr.w	pc, [sp], #4
 8010064:	200159ac 	andcs	r5, r1, ip, lsr #19

08010068 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 8010068:	f1a0 0004 	sub.w	r0, r0, #4
 801006c:	e7e6      	b.n	801003c <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 801006e:	bf00      	nop

08010070 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 8010070:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010072:	2308      	movs	r3, #8
 8010074:	2200      	movs	r2, #0
 8010076:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801007a:	2301      	movs	r3, #1
 801007c:	4806      	ldr	r0, [pc, #24]	; (8010098 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 801007e:	9300      	str	r3, [sp, #0]
 8010080:	f88d 1017 	strb.w	r1, [sp, #23]
 8010084:	2210      	movs	r2, #16
 8010086:	2103      	movs	r1, #3
 8010088:	6800      	ldr	r0, [r0, #0]
 801008a:	f10d 0317 	add.w	r3, sp, #23
 801008e:	f7ff fd59 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010092:	b007      	add	sp, #28
 8010094:	f85d fb04 	ldr.w	pc, [sp], #4
 8010098:	200159ac 	andcs	r5, r1, ip, lsr #19

0801009c <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 801009c:	f1a0 0004 	sub.w	r0, r0, #4
 80100a0:	e7e6      	b.n	8010070 <StorePixelDmx::SaveTestPattern(unsigned char)>
 80100a2:	bf00      	nop

080100a4 <StorePixelDmx::SaveMap(unsigned char)>:
 80100a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80100a6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80100aa:	2200      	movs	r2, #0
 80100ac:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80100b0:	2301      	movs	r3, #1
 80100b2:	4807      	ldr	r0, [pc, #28]	; (80100d0 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 80100b4:	9300      	str	r3, [sp, #0]
 80100b6:	f88d 1017 	strb.w	r1, [sp, #23]
 80100ba:	2213      	movs	r2, #19
 80100bc:	2103      	movs	r1, #3
 80100be:	6800      	ldr	r0, [r0, #0]
 80100c0:	f10d 0317 	add.w	r3, sp, #23
 80100c4:	f7ff fd3e 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80100c8:	b007      	add	sp, #28
 80100ca:	f85d fb04 	ldr.w	pc, [sp], #4
 80100ce:	bf00      	nop
 80100d0:	200159ac 	andcs	r5, r1, ip, lsr #19

080100d4 <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 80100d4:	f1a0 0004 	sub.w	r0, r0, #4
 80100d8:	e7e4      	b.n	80100a4 <StorePixelDmx::SaveMap(unsigned char)>
 80100da:	bf00      	nop

080100dc <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 80100dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80100de:	f44f 7380 	mov.w	r3, #256	; 0x100
 80100e2:	2200      	movs	r2, #0
 80100e4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80100e8:	2302      	movs	r3, #2
 80100ea:	4807      	ldr	r0, [pc, #28]	; (8010108 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 80100ec:	9300      	str	r3, [sp, #0]
 80100ee:	f8ad 1016 	strh.w	r1, [sp, #22]
 80100f2:	2211      	movs	r2, #17
 80100f4:	2103      	movs	r1, #3
 80100f6:	6800      	ldr	r0, [r0, #0]
 80100f8:	f10d 0316 	add.w	r3, sp, #22
 80100fc:	f7ff fd22 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010100:	b007      	add	sp, #28
 8010102:	f85d fb04 	ldr.w	pc, [sp], #4
 8010106:	bf00      	nop
 8010108:	200159ac 	andcs	r5, r1, ip, lsr #19

0801010c <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 801010c:	f1a0 0004 	sub.w	r0, r0, #4
 8010110:	e7e4      	b.n	80100dc <StorePixelDmx::SaveGroupingCount(unsigned short)>
 8010112:	bf00      	nop

08010114 <StorePixelDmx::SaveCount(unsigned short)>:
 8010114:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010116:	2302      	movs	r3, #2
 8010118:	2200      	movs	r2, #0
 801011a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801011e:	4807      	ldr	r0, [pc, #28]	; (801013c <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 8010120:	9300      	str	r3, [sp, #0]
 8010122:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010126:	2205      	movs	r2, #5
 8010128:	2103      	movs	r1, #3
 801012a:	6800      	ldr	r0, [r0, #0]
 801012c:	f10d 0316 	add.w	r3, sp, #22
 8010130:	f7ff fd08 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010134:	b007      	add	sp, #28
 8010136:	f85d fb04 	ldr.w	pc, [sp], #4
 801013a:	bf00      	nop
 801013c:	200159ac 	andcs	r5, r1, ip, lsr #19

08010140 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 8010140:	f1a0 0004 	sub.w	r0, r0, #4
 8010144:	e7e6      	b.n	8010114 <StorePixelDmx::SaveCount(unsigned short)>
 8010146:	bf00      	nop

08010148 <StorePixelDmx::SaveType(unsigned char)>:
 8010148:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801014a:	2301      	movs	r3, #1
 801014c:	2200      	movs	r2, #0
 801014e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010152:	4807      	ldr	r0, [pc, #28]	; (8010170 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 8010154:	9300      	str	r3, [sp, #0]
 8010156:	f88d 1017 	strb.w	r1, [sp, #23]
 801015a:	2204      	movs	r2, #4
 801015c:	2103      	movs	r1, #3
 801015e:	6800      	ldr	r0, [r0, #0]
 8010160:	f10d 0317 	add.w	r3, sp, #23
 8010164:	f7ff fcee 	bl	800fb44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010168:	b007      	add	sp, #28
 801016a:	f85d fb04 	ldr.w	pc, [sp], #4
 801016e:	bf00      	nop
 8010170:	200159ac 	andcs	r5, r1, ip, lsr #19

08010174 <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 8010174:	f1a0 0004 	sub.w	r0, r0, #4
 8010178:	e7e6      	b.n	8010148 <StorePixelDmx::SaveType(unsigned char)>
 801017a:	bf00      	nop

0801017c <StorePixelDmx::~StorePixelDmx()>:
 801017c:	b510      	push	{r4, lr}
 801017e:	4604      	mov	r4, r0
 8010180:	f003 fd22 	bl	8013bc8 <operator delete(void*)>
 8010184:	4620      	mov	r0, r4
 8010186:	bd10      	pop	{r4, pc}

08010188 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 8010188:	f1a0 0004 	sub.w	r0, r0, #4
 801018c:	e7f6      	b.n	801017c <StorePixelDmx::~StorePixelDmx()>
	...

08010190 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 8010190:	b507      	push	{r0, r1, r2, lr}
 8010192:	2300      	movs	r3, #0
 8010194:	460a      	mov	r2, r1
 8010196:	2101      	movs	r1, #1
 8010198:	e9cd 3100 	strd	r3, r1, [sp]
 801019c:	4804      	ldr	r0, [pc, #16]	; (80101b0 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 801019e:	2326      	movs	r3, #38	; 0x26
 80101a0:	2103      	movs	r1, #3
 80101a2:	6800      	ldr	r0, [r0, #0]
 80101a4:	f7ff fd0e 	bl	800fbc4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 80101a8:	b003      	add	sp, #12
 80101aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80101ae:	bf00      	nop
 80101b0:	200159ac 	andcs	r5, r1, ip, lsr #19

080101b4 <StorePixelDmx::StorePixelDmx()>:
 80101b4:	4a03      	ldr	r2, [pc, #12]	; (80101c4 <StorePixelDmx::StorePixelDmx()+0x10>)
 80101b6:	6002      	str	r2, [r0, #0]
 80101b8:	3230      	adds	r2, #48	; 0x30
 80101ba:	6042      	str	r2, [r0, #4]
 80101bc:	4a02      	ldr	r2, [pc, #8]	; (80101c8 <StorePixelDmx::StorePixelDmx()+0x14>)
 80101be:	6010      	str	r0, [r2, #0]
 80101c0:	4770      	bx	lr
 80101c2:	bf00      	nop
 80101c4:	08018728 	stmdaeq	r1, {r3, r5, r8, r9, sl, pc}
 80101c8:	200159c8 	andcs	r5, r1, r8, asr #19

080101cc <FlashRom::FlashRom()>:
 80101cc:	4b07      	ldr	r3, [pc, #28]	; (80101ec <FlashRom::FlashRom()+0x20>)
 80101ce:	b510      	push	{r4, lr}
 80101d0:	6018      	str	r0, [r3, #0]
 80101d2:	2301      	movs	r3, #1
 80101d4:	4604      	mov	r4, r0
 80101d6:	7003      	strb	r3, [r0, #0]
 80101d8:	4b05      	ldr	r3, [pc, #20]	; (80101f0 <FlashRom::FlashRom()+0x24>)
 80101da:	4906      	ldr	r1, [pc, #24]	; (80101f4 <FlashRom::FlashRom()+0x28>)
 80101dc:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80101e0:	4805      	ldr	r0, [pc, #20]	; (80101f8 <FlashRom::FlashRom()+0x2c>)
 80101e2:	029a      	lsls	r2, r3, #10
 80101e4:	f7f9 fa14 	bl	8009610 <printf>
 80101e8:	4620      	mov	r0, r4
 80101ea:	bd10      	pop	{r4, pc}
 80101ec:	200159cc 	andcs	r5, r1, ip, asr #19
 80101f0:	1ffff700 	svcne	0x00fff700
 80101f4:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 80101f8:	08018778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, pc}

080101fc <FlashRom::GetSize() const>:
 80101fc:	4b02      	ldr	r3, [pc, #8]	; (8010208 <FlashRom::GetSize() const+0xc>)
 80101fe:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 8010202:	0280      	lsls	r0, r0, #10
 8010204:	4770      	bx	lr
 8010206:	bf00      	nop
 8010208:	1ffff700 	svcne	0x00fff700

0801020c <FlashRom::GetSectorSize() const>:
 801020c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8010210:	4770      	bx	lr

08010212 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 8010212:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8010216:	441a      	add	r2, r3
 8010218:	4293      	cmp	r3, r2
 801021a:	d104      	bne.n	8010226 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 801021c:	2200      	movs	r2, #0
 801021e:	9b00      	ldr	r3, [sp, #0]
 8010220:	2001      	movs	r0, #1
 8010222:	601a      	str	r2, [r3, #0]
 8010224:	4770      	bx	lr
 8010226:	f851 0b04 	ldr.w	r0, [r1], #4
 801022a:	f843 0b04 	str.w	r0, [r3], #4
 801022e:	e7f3      	b.n	8010218 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

08010230 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 8010230:	2000      	movs	r0, #0
 8010232:	b538      	push	{r3, r4, r5, lr}
 8010234:	4c47      	ldr	r4, [pc, #284]	; (8010354 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 8010236:	6018      	str	r0, [r3, #0]
 8010238:	6823      	ldr	r3, [r4, #0]
 801023a:	2b04      	cmp	r3, #4
 801023c:	f200 8082 	bhi.w	8010344 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8010240:	e8df f003 	tbb	[pc, r3]
 8010244:	78452003 	stmdavc	r5, {r0, r1, sp}^
 8010248:	4b430080 	blmi	90d0450 <__exidx_end+0x10b726c>
 801024c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8010250:	6019      	str	r1, [r3, #0]
 8010252:	4b42      	ldr	r3, [pc, #264]	; (801035c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 8010254:	601a      	str	r2, [r3, #0]
 8010256:	4b42      	ldr	r3, [pc, #264]	; (8010360 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 8010258:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 801025c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010260:	4b40      	ldr	r3, [pc, #256]	; (8010364 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8010262:	d807      	bhi.n	8010274 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 8010264:	2201      	movs	r2, #1
 8010266:	701a      	strb	r2, [r3, #0]
 8010268:	f004 f818 	bl	801429c <fmc_bank0_unlock>
 801026c:	2301      	movs	r3, #1
 801026e:	6023      	str	r3, [r4, #0]
 8010270:	2000      	movs	r0, #0
 8010272:	e026      	b.n	80102c2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 8010274:	4a3c      	ldr	r2, [pc, #240]	; (8010368 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 8010276:	4291      	cmp	r1, r2
 8010278:	d3f4      	bcc.n	8010264 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 801027a:	2200      	movs	r2, #0
 801027c:	701a      	strb	r2, [r3, #0]
 801027e:	f004 f81b 	bl	80142b8 <fmc_bank1_unlock>
 8010282:	e7f3      	b.n	801026c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8010284:	4d37      	ldr	r5, [pc, #220]	; (8010364 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8010286:	782b      	ldrb	r3, [r5, #0]
 8010288:	b15b      	cbz	r3, 80102a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 801028a:	f004 f833 	bl	80142f4 <fmc_bank0_state_get>
 801028e:	2801      	cmp	r0, #1
 8010290:	d0ee      	beq.n	8010270 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 8010292:	7829      	ldrb	r1, [r5, #0]
 8010294:	4b35      	ldr	r3, [pc, #212]	; (801036c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8010296:	b939      	cbnz	r1, 80102a8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 8010298:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801029a:	f022 0202 	bic.w	r2, r2, #2
 801029e:	651a      	str	r2, [r3, #80]	; 0x50
 80102a0:	e006      	b.n	80102b0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 80102a2:	f004 f839 	bl	8014318 <fmc_bank1_state_get>
 80102a6:	e7f2      	b.n	801028e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 80102a8:	691a      	ldr	r2, [r3, #16]
 80102aa:	f022 0202 	bic.w	r2, r2, #2
 80102ae:	611a      	str	r2, [r3, #16]
 80102b0:	4b2a      	ldr	r3, [pc, #168]	; (801035c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80102b2:	681b      	ldr	r3, [r3, #0]
 80102b4:	b94b      	cbnz	r3, 80102ca <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 80102b6:	b129      	cbz	r1, 80102c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 80102b8:	f004 f80c 	bl	80142d4 <fmc_bank0_lock>
 80102bc:	2300      	movs	r3, #0
 80102be:	2001      	movs	r0, #1
 80102c0:	6023      	str	r3, [r4, #0]
 80102c2:	bd38      	pop	{r3, r4, r5, pc}
 80102c4:	f004 f80e 	bl	80142e4 <fmc_bank1_lock>
 80102c8:	e7f8      	b.n	80102bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 80102ca:	2302      	movs	r3, #2
 80102cc:	e7cf      	b.n	801026e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 80102ce:	4923      	ldr	r1, [pc, #140]	; (801035c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80102d0:	680b      	ldr	r3, [r1, #0]
 80102d2:	2b00      	cmp	r3, #0
 80102d4:	d0ca      	beq.n	801026c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 80102d6:	4b23      	ldr	r3, [pc, #140]	; (8010364 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80102d8:	4a1f      	ldr	r2, [pc, #124]	; (8010358 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 80102da:	7818      	ldrb	r0, [r3, #0]
 80102dc:	4b23      	ldr	r3, [pc, #140]	; (801036c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80102de:	b190      	cbz	r0, 8010306 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 80102e0:	6918      	ldr	r0, [r3, #16]
 80102e2:	f040 0002 	orr.w	r0, r0, #2
 80102e6:	6118      	str	r0, [r3, #16]
 80102e8:	6810      	ldr	r0, [r2, #0]
 80102ea:	6158      	str	r0, [r3, #20]
 80102ec:	6918      	ldr	r0, [r3, #16]
 80102ee:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 80102f2:	6118      	str	r0, [r3, #16]
 80102f4:	680b      	ldr	r3, [r1, #0]
 80102f6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80102fa:	600b      	str	r3, [r1, #0]
 80102fc:	6813      	ldr	r3, [r2, #0]
 80102fe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8010302:	6013      	str	r3, [r2, #0]
 8010304:	e7b2      	b.n	801026c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8010306:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8010308:	f040 0002 	orr.w	r0, r0, #2
 801030c:	6518      	str	r0, [r3, #80]	; 0x50
 801030e:	6810      	ldr	r0, [r2, #0]
 8010310:	6558      	str	r0, [r3, #84]	; 0x54
 8010312:	69dd      	ldr	r5, [r3, #28]
 8010314:	07ad      	lsls	r5, r5, #30
 8010316:	bf48      	it	mi
 8010318:	6158      	strmi	r0, [r3, #20]
 801031a:	4814      	ldr	r0, [pc, #80]	; (801036c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 801031c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801031e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010322:	6503      	str	r3, [r0, #80]	; 0x50
 8010324:	680b      	ldr	r3, [r1, #0]
 8010326:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 801032a:	600b      	str	r3, [r1, #0]
 801032c:	6813      	ldr	r3, [r2, #0]
 801032e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8010332:	e7e6      	b.n	8010302 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 8010334:	4b0b      	ldr	r3, [pc, #44]	; (8010364 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8010336:	781a      	ldrb	r2, [r3, #0]
 8010338:	4b0c      	ldr	r3, [pc, #48]	; (801036c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 801033a:	b132      	cbz	r2, 801034a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 801033c:	691a      	ldr	r2, [r3, #16]
 801033e:	f022 0201 	bic.w	r2, r2, #1
 8010342:	611a      	str	r2, [r3, #16]
 8010344:	2000      	movs	r0, #0
 8010346:	6020      	str	r0, [r4, #0]
 8010348:	e7bb      	b.n	80102c2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 801034a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801034c:	f022 0201 	bic.w	r2, r2, #1
 8010350:	651a      	str	r2, [r3, #80]	; 0x50
 8010352:	e7f7      	b.n	8010344 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8010354:	200159d4 	ldrdcs	r5, [r1], -r4
 8010358:	200159d8 	ldrdcs	r5, [r1], -r8
 801035c:	200159e4 	andcs	r5, r1, r4, ror #19
 8010360:	1ffff700 	svcne	0x00fff700
 8010364:	200159e0 	andcs	r5, r1, r0, ror #19
 8010368:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 801036c:	40022000 	andmi	r2, r2, r0

08010370 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8010370:	b570      	push	{r4, r5, r6, lr}
 8010372:	2400      	movs	r4, #0
 8010374:	9804      	ldr	r0, [sp, #16]
 8010376:	6004      	str	r4, [r0, #0]
 8010378:	4c48      	ldr	r4, [pc, #288]	; (801049c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 801037a:	6820      	ldr	r0, [r4, #0]
 801037c:	2804      	cmp	r0, #4
 801037e:	d848      	bhi.n	8010412 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 8010380:	e8df f000 	tbb	[pc, r0]
 8010384:	22847c03 	addcs	r7, r4, #768	; 0x300
 8010388:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 801038c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8010390:	6001      	str	r1, [r0, #0]
 8010392:	4844      	ldr	r0, [pc, #272]	; (80104a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8010394:	6003      	str	r3, [r0, #0]
 8010396:	4b44      	ldr	r3, [pc, #272]	; (80104a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8010398:	601a      	str	r2, [r3, #0]
 801039a:	4b44      	ldr	r3, [pc, #272]	; (80104ac <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 801039c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80103a0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80103a4:	4b42      	ldr	r3, [pc, #264]	; (80104b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80103a6:	d807      	bhi.n	80103b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 80103a8:	2201      	movs	r2, #1
 80103aa:	701a      	strb	r2, [r3, #0]
 80103ac:	f003 ff76 	bl	801429c <fmc_bank0_unlock>
 80103b0:	2303      	movs	r3, #3
 80103b2:	6023      	str	r3, [r4, #0]
 80103b4:	2000      	movs	r0, #0
 80103b6:	e026      	b.n	8010406 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 80103b8:	4a3e      	ldr	r2, [pc, #248]	; (80104b4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 80103ba:	4291      	cmp	r1, r2
 80103bc:	d3f4      	bcc.n	80103a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 80103be:	2200      	movs	r2, #0
 80103c0:	701a      	strb	r2, [r3, #0]
 80103c2:	f003 ff79 	bl	80142b8 <fmc_bank1_unlock>
 80103c6:	e7f3      	b.n	80103b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80103c8:	4d39      	ldr	r5, [pc, #228]	; (80104b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80103ca:	782b      	ldrb	r3, [r5, #0]
 80103cc:	b15b      	cbz	r3, 80103e6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 80103ce:	f003 ff91 	bl	80142f4 <fmc_bank0_state_get>
 80103d2:	2801      	cmp	r0, #1
 80103d4:	d0ee      	beq.n	80103b4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 80103d6:	7829      	ldrb	r1, [r5, #0]
 80103d8:	4b37      	ldr	r3, [pc, #220]	; (80104b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80103da:	b939      	cbnz	r1, 80103ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 80103dc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80103de:	f022 0201 	bic.w	r2, r2, #1
 80103e2:	651a      	str	r2, [r3, #80]	; 0x50
 80103e4:	e006      	b.n	80103f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 80103e6:	f003 ff97 	bl	8014318 <fmc_bank1_state_get>
 80103ea:	e7f2      	b.n	80103d2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 80103ec:	691a      	ldr	r2, [r3, #16]
 80103ee:	f022 0201 	bic.w	r2, r2, #1
 80103f2:	611a      	str	r2, [r3, #16]
 80103f4:	4b2c      	ldr	r3, [pc, #176]	; (80104a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80103f6:	681b      	ldr	r3, [r3, #0]
 80103f8:	b94b      	cbnz	r3, 801040e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 80103fa:	b129      	cbz	r1, 8010408 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 80103fc:	f003 ff6a 	bl	80142d4 <fmc_bank0_lock>
 8010400:	2300      	movs	r3, #0
 8010402:	2001      	movs	r0, #1
 8010404:	6023      	str	r3, [r4, #0]
 8010406:	bd70      	pop	{r4, r5, r6, pc}
 8010408:	f003 ff6c 	bl	80142e4 <fmc_bank1_lock>
 801040c:	e7f8      	b.n	8010400 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 801040e:	2304      	movs	r3, #4
 8010410:	e7cf      	b.n	80103b2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 8010412:	4a25      	ldr	r2, [pc, #148]	; (80104a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8010414:	6813      	ldr	r3, [r2, #0]
 8010416:	2b03      	cmp	r3, #3
 8010418:	d91a      	bls.n	8010450 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 801041a:	4b25      	ldr	r3, [pc, #148]	; (80104b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 801041c:	7819      	ldrb	r1, [r3, #0]
 801041e:	4b26      	ldr	r3, [pc, #152]	; (80104b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8010420:	b189      	cbz	r1, 8010446 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 8010422:	6919      	ldr	r1, [r3, #16]
 8010424:	f041 0101 	orr.w	r1, r1, #1
 8010428:	6119      	str	r1, [r3, #16]
 801042a:	4d1e      	ldr	r5, [pc, #120]	; (80104a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 801042c:	481c      	ldr	r0, [pc, #112]	; (80104a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 801042e:	6829      	ldr	r1, [r5, #0]
 8010430:	6803      	ldr	r3, [r0, #0]
 8010432:	f851 6b04 	ldr.w	r6, [r1], #4
 8010436:	f843 6b04 	str.w	r6, [r3], #4
 801043a:	6003      	str	r3, [r0, #0]
 801043c:	6813      	ldr	r3, [r2, #0]
 801043e:	6029      	str	r1, [r5, #0]
 8010440:	3b04      	subs	r3, #4
 8010442:	6013      	str	r3, [r2, #0]
 8010444:	e7b4      	b.n	80103b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010446:	6d19      	ldr	r1, [r3, #80]	; 0x50
 8010448:	f041 0101 	orr.w	r1, r1, #1
 801044c:	6519      	str	r1, [r3, #80]	; 0x50
 801044e:	e7ec      	b.n	801042a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 8010450:	2b00      	cmp	r3, #0
 8010452:	d0ad      	beq.n	80103b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010454:	4b16      	ldr	r3, [pc, #88]	; (80104b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8010456:	781a      	ldrb	r2, [r3, #0]
 8010458:	4b17      	ldr	r3, [pc, #92]	; (80104b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 801045a:	b152      	cbz	r2, 8010472 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 801045c:	691a      	ldr	r2, [r3, #16]
 801045e:	f042 0201 	orr.w	r2, r2, #1
 8010462:	611a      	str	r2, [r3, #16]
 8010464:	4a0f      	ldr	r2, [pc, #60]	; (80104a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8010466:	4b0e      	ldr	r3, [pc, #56]	; (80104a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8010468:	6812      	ldr	r2, [r2, #0]
 801046a:	681b      	ldr	r3, [r3, #0]
 801046c:	6812      	ldr	r2, [r2, #0]
 801046e:	601a      	str	r2, [r3, #0]
 8010470:	e79e      	b.n	80103b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010472:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010474:	f042 0201 	orr.w	r2, r2, #1
 8010478:	651a      	str	r2, [r3, #80]	; 0x50
 801047a:	e7f3      	b.n	8010464 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 801047c:	4b0c      	ldr	r3, [pc, #48]	; (80104b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 801047e:	781a      	ldrb	r2, [r3, #0]
 8010480:	4b0d      	ldr	r3, [pc, #52]	; (80104b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8010482:	b132      	cbz	r2, 8010492 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8010484:	691a      	ldr	r2, [r3, #16]
 8010486:	f022 0202 	bic.w	r2, r2, #2
 801048a:	611a      	str	r2, [r3, #16]
 801048c:	2000      	movs	r0, #0
 801048e:	6020      	str	r0, [r4, #0]
 8010490:	e7b9      	b.n	8010406 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8010492:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010494:	f022 0202 	bic.w	r2, r2, #2
 8010498:	651a      	str	r2, [r3, #80]	; 0x50
 801049a:	e7f7      	b.n	801048c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 801049c:	200159d4 	ldrdcs	r5, [r1], -r4
 80104a0:	200159d0 	ldrdcs	r5, [r1], -r0
 80104a4:	200159dc 	ldrdcs	r5, [r1], -ip
 80104a8:	200159e4 	andcs	r5, r1, r4, ror #19
 80104ac:	1ffff700 	svcne	0x00fff700
 80104b0:	200159e0 	andcs	r5, r1, r0, ror #19
 80104b4:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 80104b8:	40022000 	andmi	r2, r2, r0

080104bc <net_set_ip>:
 80104bc:	b510      	push	{r4, lr}
 80104be:	4c05      	ldr	r4, [pc, #20]	; (80104d4 <net_set_ip+0x18>)
 80104c0:	6020      	str	r0, [r4, #0]
 80104c2:	4621      	mov	r1, r4
 80104c4:	4804      	ldr	r0, [pc, #16]	; (80104d8 <net_set_ip+0x1c>)
 80104c6:	f7f6 ff29 	bl	800731c <arp_init>
 80104ca:	4620      	mov	r0, r4
 80104cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104d0:	f002 b88a 	b.w	80125e8 <ip_set_ip>
 80104d4:	200159e8 	andcs	r5, r1, r8, ror #19
 80104d8:	200159f4 	strdcs	r5, [r1], -r4

080104dc <net_set_dhcp>:
 80104dc:	b570      	push	{r4, r5, r6, lr}
 80104de:	2400      	movs	r4, #0
 80104e0:	4605      	mov	r5, r0
 80104e2:	7014      	strb	r4, [r2, #0]
 80104e4:	4616      	mov	r6, r2
 80104e6:	4810      	ldr	r0, [pc, #64]	; (8010528 <net_set_dhcp+0x4c>)
 80104e8:	460a      	mov	r2, r1
 80104ea:	4910      	ldr	r1, [pc, #64]	; (801052c <net_set_dhcp+0x50>)
 80104ec:	f001 fe5c 	bl	80121a8 <dhcp_client>
 80104f0:	42a0      	cmp	r0, r4
 80104f2:	da17      	bge.n	8010524 <net_set_dhcp+0x48>
 80104f4:	480d      	ldr	r0, [pc, #52]	; (801052c <net_set_dhcp+0x50>)
 80104f6:	f000 f859 	bl	80105ac <rfc3927>
 80104fa:	7030      	strb	r0, [r6, #0]
 80104fc:	490b      	ldr	r1, [pc, #44]	; (801052c <net_set_dhcp+0x50>)
 80104fe:	480a      	ldr	r0, [pc, #40]	; (8010528 <net_set_dhcp+0x4c>)
 8010500:	f7f6 ff0c 	bl	800731c <arp_init>
 8010504:	4809      	ldr	r0, [pc, #36]	; (801052c <net_set_dhcp+0x50>)
 8010506:	f002 f86f 	bl	80125e8 <ip_set_ip>
 801050a:	4a08      	ldr	r2, [pc, #32]	; (801052c <net_set_dhcp+0x50>)
 801050c:	1e6b      	subs	r3, r5, #1
 801050e:	350b      	adds	r5, #11
 8010510:	f812 1b01 	ldrb.w	r1, [r2], #1
 8010514:	f803 1f01 	strb.w	r1, [r3, #1]!
 8010518:	42ab      	cmp	r3, r5
 801051a:	d1f9      	bne.n	8010510 <net_set_dhcp+0x34>
 801051c:	4b04      	ldr	r3, [pc, #16]	; (8010530 <net_set_dhcp+0x54>)
 801051e:	4620      	mov	r0, r4
 8010520:	701c      	strb	r4, [r3, #0]
 8010522:	bd70      	pop	{r4, r5, r6, pc}
 8010524:	2401      	movs	r4, #1
 8010526:	e7e9      	b.n	80104fc <net_set_dhcp+0x20>
 8010528:	200159f4 	strdcs	r5, [r1], -r4
 801052c:	200159e8 	andcs	r5, r1, r8, ror #19
 8010530:	200159fa 	strdcs	r5, [r1], -sl

08010534 <net_dhcp_release>:
 8010534:	b508      	push	{r3, lr}
 8010536:	f001 ff3f 	bl	80123b8 <dhcp_client_release>
 801053a:	2200      	movs	r2, #0
 801053c:	4b01      	ldr	r3, [pc, #4]	; (8010544 <net_dhcp_release+0x10>)
 801053e:	701a      	strb	r2, [r3, #0]
 8010540:	bd08      	pop	{r3, pc}
 8010542:	bf00      	nop
 8010544:	200159fa 	strdcs	r5, [r1], -sl

08010548 <net_set_zeroconf>:
 8010548:	b538      	push	{r3, r4, r5, lr}
 801054a:	4604      	mov	r4, r0
 801054c:	480c      	ldr	r0, [pc, #48]	; (8010580 <net_set_zeroconf+0x38>)
 801054e:	f000 f82d 	bl	80105ac <rfc3927>
 8010552:	4605      	mov	r5, r0
 8010554:	b190      	cbz	r0, 801057c <net_set_zeroconf+0x34>
 8010556:	490a      	ldr	r1, [pc, #40]	; (8010580 <net_set_zeroconf+0x38>)
 8010558:	480a      	ldr	r0, [pc, #40]	; (8010584 <net_set_zeroconf+0x3c>)
 801055a:	f7f6 fedf 	bl	800731c <arp_init>
 801055e:	4808      	ldr	r0, [pc, #32]	; (8010580 <net_set_zeroconf+0x38>)
 8010560:	f002 f842 	bl	80125e8 <ip_set_ip>
 8010564:	4a06      	ldr	r2, [pc, #24]	; (8010580 <net_set_zeroconf+0x38>)
 8010566:	1e63      	subs	r3, r4, #1
 8010568:	340b      	adds	r4, #11
 801056a:	f812 1b01 	ldrb.w	r1, [r2], #1
 801056e:	f803 1f01 	strb.w	r1, [r3, #1]!
 8010572:	42a3      	cmp	r3, r4
 8010574:	d1f9      	bne.n	801056a <net_set_zeroconf+0x22>
 8010576:	2200      	movs	r2, #0
 8010578:	4b03      	ldr	r3, [pc, #12]	; (8010588 <net_set_zeroconf+0x40>)
 801057a:	701a      	strb	r2, [r3, #0]
 801057c:	4628      	mov	r0, r5
 801057e:	bd38      	pop	{r3, r4, r5, pc}
 8010580:	200159e8 	andcs	r5, r1, r8, ror #19
 8010584:	200159f4 	strdcs	r5, [r1], -r4
 8010588:	200159fa 	strdcs	r5, [r1], -sl

0801058c <net_timers_run>:
 801058c:	4b05      	ldr	r3, [pc, #20]	; (80105a4 <net_timers_run+0x18>)
 801058e:	4a06      	ldr	r2, [pc, #24]	; (80105a8 <net_timers_run+0x1c>)
 8010590:	681b      	ldr	r3, [r3, #0]
 8010592:	6811      	ldr	r1, [r2, #0]
 8010594:	4299      	cmp	r1, r3
 8010596:	d803      	bhi.n	80105a0 <net_timers_run+0x14>
 8010598:	3364      	adds	r3, #100	; 0x64
 801059a:	6013      	str	r3, [r2, #0]
 801059c:	f001 bf9a 	b.w	80124d4 <igmp_timer>
 80105a0:	4770      	bx	lr
 80105a2:	bf00      	nop
 80105a4:	2001d994 	mulcs	r1, r4, r9
 80105a8:	20015a00 	andcs	r5, r1, r0, lsl #20

080105ac <rfc3927>:
 80105ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105b0:	4606      	mov	r6, r0
 80105b2:	25ff      	movs	r5, #255	; 0xff
 80105b4:	4b18      	ldr	r3, [pc, #96]	; (8010618 <rfc3927+0x6c>)
 80105b6:	4f19      	ldr	r7, [pc, #100]	; (801061c <rfc3927+0x70>)
 80105b8:	791a      	ldrb	r2, [r3, #4]
 80105ba:	78dc      	ldrb	r4, [r3, #3]
 80105bc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8010620 <rfc3927+0x74>
 80105c0:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 80105c4:	f8d7 9000 	ldr.w	r9, [r7]
 80105c8:	f8df b058 	ldr.w	fp, [pc, #88]	; 8010624 <rfc3927+0x78>
 80105cc:	f8df a058 	ldr.w	sl, [pc, #88]	; 8010628 <rfc3927+0x7c>
 80105d0:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 80105d4:	4659      	mov	r1, fp
 80105d6:	4620      	mov	r0, r4
 80105d8:	f001 fcda 	bl	8011f90 <arp_cache_lookup>
 80105dc:	b190      	cbz	r0, 8010604 <rfc3927+0x58>
 80105de:	ba24      	rev	r4, r4
 80105e0:	3401      	adds	r4, #1
 80105e2:	3d01      	subs	r5, #1
 80105e4:	ba24      	rev	r4, r4
 80105e6:	b2ad      	uxth	r5, r5
 80105e8:	4554      	cmp	r4, sl
 80105ea:	bf08      	it	eq
 80105ec:	4644      	moveq	r4, r8
 80105ee:	b18d      	cbz	r5, 8010614 <rfc3927+0x68>
 80105f0:	683b      	ldr	r3, [r7, #0]
 80105f2:	eba3 0309 	sub.w	r3, r3, r9
 80105f6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80105fa:	d3eb      	bcc.n	80105d4 <rfc3927+0x28>
 80105fc:	2400      	movs	r4, #0
 80105fe:	4623      	mov	r3, r4
 8010600:	4620      	mov	r0, r4
 8010602:	e002      	b.n	801060a <rfc3927+0x5e>
 8010604:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010608:	2001      	movs	r0, #1
 801060a:	e9c6 3401 	strd	r3, r4, [r6, #4]
 801060e:	6034      	str	r4, [r6, #0]
 8010610:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010614:	462c      	mov	r4, r5
 8010616:	e7f2      	b.n	80105fe <rfc3927+0x52>
 8010618:	20015a04 	andcs	r5, r1, r4, lsl #20
 801061c:	2001d994 	mulcs	r1, r4, r9
 8010620:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 8010624:	20015a0c 	andcs	r5, r1, ip, lsl #20
 8010628:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0801062c <_init_tcb>:
 801062c:	b510      	push	{r4, lr}
 801062e:	4603      	mov	r3, r0
 8010630:	2400      	movs	r4, #0
 8010632:	f100 0244 	add.w	r2, r0, #68	; 0x44
 8010636:	4293      	cmp	r3, r2
 8010638:	d10d      	bne.n	8010656 <_init_tcb+0x2a>
 801063a:	4b08      	ldr	r3, [pc, #32]	; (801065c <_init_tcb+0x30>)
 801063c:	f640 3268 	movw	r2, #2920	; 0xb68
 8010640:	681b      	ldr	r3, [r3, #0]
 8010642:	8702      	strh	r2, [r0, #56]	; 0x38
 8010644:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8010648:	6283      	str	r3, [r0, #40]	; 0x28
 801064a:	6243      	str	r3, [r0, #36]	; 0x24
 801064c:	2301      	movs	r3, #1
 801064e:	8001      	strh	r1, [r0, #0]
 8010650:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 8010654:	bd10      	pop	{r4, pc}
 8010656:	f803 4b01 	strb.w	r4, [r3], #1
 801065a:	e7ec      	b.n	8010636 <_init_tcb+0xa>
 801065c:	2001d994 	mulcs	r1, r4, r9

08010660 <memcpy.isra.0>:
 8010660:	3801      	subs	r0, #1
 8010662:	440a      	add	r2, r1
 8010664:	4291      	cmp	r1, r2
 8010666:	d100      	bne.n	801066a <memcpy.isra.0+0xa>
 8010668:	4770      	bx	lr
 801066a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801066e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010672:	e7f7      	b.n	8010664 <memcpy.isra.0+0x4>

08010674 <_bswap32>:
 8010674:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010676:	2204      	movs	r2, #4
 8010678:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 801067c:	4629      	mov	r1, r5
 801067e:	4604      	mov	r4, r0
 8010680:	eb0d 0002 	add.w	r0, sp, r2
 8010684:	f7ff ffec 	bl	8010660 <memcpy.isra.0>
 8010688:	2204      	movs	r2, #4
 801068a:	9b01      	ldr	r3, [sp, #4]
 801068c:	eb0d 0102 	add.w	r1, sp, r2
 8010690:	ba1b      	rev	r3, r3
 8010692:	4628      	mov	r0, r5
 8010694:	9301      	str	r3, [sp, #4]
 8010696:	f7ff ffe3 	bl	8010660 <memcpy.isra.0>
 801069a:	2204      	movs	r2, #4
 801069c:	3426      	adds	r4, #38	; 0x26
 801069e:	eb0d 0002 	add.w	r0, sp, r2
 80106a2:	4621      	mov	r1, r4
 80106a4:	f7ff ffdc 	bl	8010660 <memcpy.isra.0>
 80106a8:	2204      	movs	r2, #4
 80106aa:	9b01      	ldr	r3, [sp, #4]
 80106ac:	4620      	mov	r0, r4
 80106ae:	ba1b      	rev	r3, r3
 80106b0:	eb0d 0102 	add.w	r1, sp, r2
 80106b4:	9301      	str	r3, [sp, #4]
 80106b6:	f7ff ffd3 	bl	8010660 <memcpy.isra.0>
 80106ba:	b003      	add	sp, #12
 80106bc:	bd30      	pop	{r4, r5, pc}
	...

080106c0 <_tcp_send_package>:
 80106c0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80106c4:	7a0b      	ldrb	r3, [r1, #8]
 80106c6:	4605      	mov	r5, r0
 80106c8:	f013 0f02 	tst.w	r3, #2
 80106cc:	bf0c      	ite	eq
 80106ce:	f04f 0805 	moveq.w	r8, #5
 80106d2:	f04f 0806 	movne.w	r8, #6
 80106d6:	f04f 0a00 	mov.w	sl, #0
 80106da:	4c47      	ldr	r4, [pc, #284]	; (80107f8 <_tcp_send_package+0x138>)
 80106dc:	460f      	mov	r7, r1
 80106de:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 80106e0:	f100 0108 	add.w	r1, r0, #8
 80106e4:	2206      	movs	r2, #6
 80106e6:	4620      	mov	r0, r4
 80106e8:	f7ff ffba 	bl	8010660 <memcpy.isra.0>
 80106ec:	4a43      	ldr	r2, [pc, #268]	; (80107fc <_tcp_send_package+0x13c>)
 80106ee:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 80106f2:	8813      	ldrh	r3, [r2, #0]
 80106f4:	b2b6      	uxth	r6, r6
 80106f6:	1c59      	adds	r1, r3, #1
 80106f8:	8263      	strh	r3, [r4, #18]
 80106fa:	f105 0904 	add.w	r9, r5, #4
 80106fe:	f106 0314 	add.w	r3, r6, #20
 8010702:	ba5b      	rev16	r3, r3
 8010704:	8011      	strh	r1, [r2, #0]
 8010706:	f104 001e 	add.w	r0, r4, #30
 801070a:	2204      	movs	r2, #4
 801070c:	4649      	mov	r1, r9
 801070e:	8223      	strh	r3, [r4, #16]
 8010710:	f7ff ffa6 	bl	8010660 <memcpy.isra.0>
 8010714:	2114      	movs	r1, #20
 8010716:	f104 000e 	add.w	r0, r4, #14
 801071a:	f8a4 a018 	strh.w	sl, [r4, #24]
 801071e:	f001 ff6c 	bl	80125fa <net_chksum>
 8010722:	882b      	ldrh	r3, [r5, #0]
 8010724:	ea4f 1808 	mov.w	r8, r8, lsl #4
 8010728:	8463      	strh	r3, [r4, #34]	; 0x22
 801072a:	886b      	ldrh	r3, [r5, #2]
 801072c:	8320      	strh	r0, [r4, #24]
 801072e:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010730:	683b      	ldr	r3, [r7, #0]
 8010732:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 8010734:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 8010738:	687b      	ldr	r3, [r7, #4]
 801073a:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 801073e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 8010742:	7a3b      	ldrb	r3, [r7, #8]
 8010744:	8622      	strh	r2, [r4, #48]	; 0x30
 8010746:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 801074a:	079b      	lsls	r3, r3, #30
 801074c:	bf48      	it	mi
 801074e:	f240 4302 	movwmi	r3, #1026	; 0x402
 8010752:	8baa      	ldrh	r2, [r5, #28]
 8010754:	bf48      	it	mi
 8010756:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 8010758:	86a2      	strh	r2, [r4, #52]	; 0x34
 801075a:	bf42      	ittt	mi
 801075c:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8010760:	4622      	movmi	r2, r4
 8010762:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 8010766:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8010768:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 801076c:	bf58      	it	pl
 801076e:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 8010772:	2b00      	cmp	r3, #0
 8010774:	d13e      	bne.n	80107f4 <_tcp_send_package+0x134>
 8010776:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8010778:	481f      	ldr	r0, [pc, #124]	; (80107f8 <_tcp_send_package+0x138>)
 801077a:	ba5b      	rev16	r3, r3
 801077c:	8463      	strh	r3, [r4, #34]	; 0x22
 801077e:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8010780:	ba5b      	rev16	r3, r3
 8010782:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010784:	f7ff ff76 	bl	8010674 <_bswap32>
 8010788:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801078a:	a801      	add	r0, sp, #4
 801078c:	ba5b      	rev16	r3, r3
 801078e:	8623      	strh	r3, [r4, #48]	; 0x30
 8010790:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8010792:	220c      	movs	r2, #12
 8010794:	ba5b      	rev16	r3, r3
 8010796:	491a      	ldr	r1, [pc, #104]	; (8010800 <_tcp_send_package+0x140>)
 8010798:	86a3      	strh	r3, [r4, #52]	; 0x34
 801079a:	f7ff ff61 	bl	8010660 <memcpy.isra.0>
 801079e:	2204      	movs	r2, #4
 80107a0:	4918      	ldr	r1, [pc, #96]	; (8010804 <_tcp_send_package+0x144>)
 80107a2:	4817      	ldr	r0, [pc, #92]	; (8010800 <_tcp_send_package+0x140>)
 80107a4:	f7ff ff5c 	bl	8010660 <memcpy.isra.0>
 80107a8:	2204      	movs	r2, #4
 80107aa:	4649      	mov	r1, r9
 80107ac:	4816      	ldr	r0, [pc, #88]	; (8010808 <_tcp_send_package+0x148>)
 80107ae:	f7ff ff57 	bl	8010660 <memcpy.isra.0>
 80107b2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80107b6:	f106 010c 	add.w	r1, r6, #12
 80107ba:	83e3      	strh	r3, [r4, #30]
 80107bc:	4810      	ldr	r0, [pc, #64]	; (8010800 <_tcp_send_package+0x140>)
 80107be:	ba73      	rev16	r3, r6
 80107c0:	8423      	strh	r3, [r4, #32]
 80107c2:	f001 ff1a 	bl	80125fa <net_chksum>
 80107c6:	a901      	add	r1, sp, #4
 80107c8:	4605      	mov	r5, r0
 80107ca:	220c      	movs	r2, #12
 80107cc:	480c      	ldr	r0, [pc, #48]	; (8010800 <_tcp_send_package+0x140>)
 80107ce:	f7ff ff47 	bl	8010660 <memcpy.isra.0>
 80107d2:	4809      	ldr	r0, [pc, #36]	; (80107f8 <_tcp_send_package+0x138>)
 80107d4:	f106 0122 	add.w	r1, r6, #34	; 0x22
 80107d8:	8665      	strh	r5, [r4, #50]	; 0x32
 80107da:	b004      	add	sp, #16
 80107dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80107e0:	f004 bb48 	b.w	8014e74 <emac_eth_send>
 80107e4:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 80107e6:	5cc9      	ldrb	r1, [r1, r3]
 80107e8:	54d1      	strb	r1, [r2, r3]
 80107ea:	3301      	adds	r3, #1
 80107ec:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 80107ee:	4299      	cmp	r1, r3
 80107f0:	d8f8      	bhi.n	80107e4 <_tcp_send_package+0x124>
 80107f2:	e7c0      	b.n	8010776 <_tcp_send_package+0xb6>
 80107f4:	2300      	movs	r3, #0
 80107f6:	e7f9      	b.n	80107ec <_tcp_send_package+0x12c>
 80107f8:	200165cc 	andcs	r6, r1, ip, asr #11
 80107fc:	20015a14 	andcs	r5, r1, r4, lsl sl
 8010800:	200165e2 	andcs	r6, r1, r2, ror #11
 8010804:	200159e8 	andcs	r5, r1, r8, ror #19
 8010808:	200165e6 	andcs	r6, r1, r6, ror #11

0801080c <_send_reset>:
 801080c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801080e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 8010812:	4604      	mov	r4, r0
 8010814:	075a      	lsls	r2, r3, #29
 8010816:	460e      	mov	r6, r1
 8010818:	d421      	bmi.n	801085e <_send_reset+0x52>
 801081a:	2204      	movs	r2, #4
 801081c:	f013 0310 	ands.w	r3, r3, #16
 8010820:	f88d 200c 	strb.w	r2, [sp, #12]
 8010824:	d01d      	beq.n	8010862 <_send_reset+0x56>
 8010826:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 801082a:	4668      	mov	r0, sp
 801082c:	f7ff ff18 	bl	8010660 <memcpy.isra.0>
 8010830:	9b00      	ldr	r3, [sp, #0]
 8010832:	9301      	str	r3, [sp, #4]
 8010834:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 8010838:	4668      	mov	r0, sp
 801083a:	f3c3 0540 	ubfx	r5, r3, #1, #1
 801083e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 8010842:	07db      	lsls	r3, r3, #31
 8010844:	f04f 0204 	mov.w	r2, #4
 8010848:	bf48      	it	mi
 801084a:	3501      	addmi	r5, #1
 801084c:	f7ff ff08 	bl	8010660 <memcpy.isra.0>
 8010850:	9b00      	ldr	r3, [sp, #0]
 8010852:	4630      	mov	r0, r6
 8010854:	441d      	add	r5, r3
 8010856:	a901      	add	r1, sp, #4
 8010858:	9502      	str	r5, [sp, #8]
 801085a:	f7ff ff31 	bl	80106c0 <_tcp_send_package>
 801085e:	b004      	add	sp, #16
 8010860:	bd70      	pop	{r4, r5, r6, pc}
 8010862:	9301      	str	r3, [sp, #4]
 8010864:	2314      	movs	r3, #20
 8010866:	f88d 300c 	strb.w	r3, [sp, #12]
 801086a:	e7e3      	b.n	8010834 <_send_reset+0x28>

0801086c <tcp_begin>:
 801086c:	b508      	push	{r3, lr}
 801086e:	4b0a      	ldr	r3, [pc, #40]	; (8010898 <tcp_begin+0x2c>)
 8010870:	4601      	mov	r1, r0
 8010872:	881a      	ldrh	r2, [r3, #0]
 8010874:	4282      	cmp	r2, r0
 8010876:	d102      	bne.n	801087e <tcp_begin+0x12>
 8010878:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 801087c:	b130      	cbz	r0, 801088c <tcp_begin+0x20>
 801087e:	b12a      	cbz	r2, 801088c <tcp_begin+0x20>
 8010880:	4806      	ldr	r0, [pc, #24]	; (801089c <tcp_begin+0x30>)
 8010882:	f003 f833 	bl	80138ec <console_error>
 8010886:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801088a:	bd08      	pop	{r3, pc}
 801088c:	4802      	ldr	r0, [pc, #8]	; (8010898 <tcp_begin+0x2c>)
 801088e:	8019      	strh	r1, [r3, #0]
 8010890:	f7ff fecc 	bl	801062c <_init_tcb>
 8010894:	2000      	movs	r0, #0
 8010896:	e7f8      	b.n	801088a <tcp_begin+0x1e>
 8010898:	20016588 	andcs	r6, r1, r8, lsl #11
 801089c:	080187a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, pc}

080108a0 <tcp_write>:
 80108a0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 80108a4:	429a      	cmp	r2, r3
 80108a6:	bf28      	it	cs
 80108a8:	461a      	movcs	r2, r3
 80108aa:	2344      	movs	r3, #68	; 0x44
 80108ac:	b530      	push	{r4, r5, lr}
 80108ae:	4c0d      	ldr	r4, [pc, #52]	; (80108e4 <tcp_write+0x44>)
 80108b0:	b085      	sub	sp, #20
 80108b2:	fb03 4400 	mla	r4, r3, r0, r4
 80108b6:	6963      	ldr	r3, [r4, #20]
 80108b8:	62e1      	str	r1, [r4, #44]	; 0x2c
 80108ba:	9301      	str	r3, [sp, #4]
 80108bc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80108be:	4620      	mov	r0, r4
 80108c0:	9302      	str	r3, [sp, #8]
 80108c2:	2318      	movs	r3, #24
 80108c4:	8622      	strh	r2, [r4, #48]	; 0x30
 80108c6:	a901      	add	r1, sp, #4
 80108c8:	4615      	mov	r5, r2
 80108ca:	f88d 300c 	strb.w	r3, [sp, #12]
 80108ce:	f7ff fef7 	bl	80106c0 <_tcp_send_package>
 80108d2:	2300      	movs	r3, #0
 80108d4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80108d6:	8623      	strh	r3, [r4, #48]	; 0x30
 80108d8:	6963      	ldr	r3, [r4, #20]
 80108da:	442b      	add	r3, r5
 80108dc:	6163      	str	r3, [r4, #20]
 80108de:	b005      	add	sp, #20
 80108e0:	bd30      	pop	{r4, r5, pc}
 80108e2:	bf00      	nop
 80108e4:	20016588 	andcs	r6, r1, r8, lsl #11

080108e8 <tcp_read>:
 80108e8:	2344      	movs	r3, #68	; 0x44
 80108ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 80108ec:	4c1c      	ldr	r4, [pc, #112]	; (8010960 <tcp_read+0x78>)
 80108ee:	b085      	sub	sp, #20
 80108f0:	fb03 4400 	mla	r4, r3, r0, r4
 80108f4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80108f8:	2b07      	cmp	r3, #7
 80108fa:	d112      	bne.n	8010922 <tcp_read+0x3a>
 80108fc:	6963      	ldr	r3, [r4, #20]
 80108fe:	4620      	mov	r0, r4
 8010900:	9301      	str	r3, [sp, #4]
 8010902:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8010904:	a901      	add	r1, sp, #4
 8010906:	9302      	str	r3, [sp, #8]
 8010908:	2311      	movs	r3, #17
 801090a:	f88d 300c 	strb.w	r3, [sp, #12]
 801090e:	f7ff fed7 	bl	80106c0 <_tcp_send_package>
 8010912:	2309      	movs	r3, #9
 8010914:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010918:	6963      	ldr	r3, [r4, #20]
 801091a:	3301      	adds	r3, #1
 801091c:	6163      	str	r3, [r4, #20]
 801091e:	2000      	movs	r0, #0
 8010920:	e01b      	b.n	801095a <tcp_read+0x72>
 8010922:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 8010926:	4358      	muls	r0, r3
 8010928:	4a0e      	ldr	r2, [pc, #56]	; (8010964 <tcp_read+0x7c>)
 801092a:	1817      	adds	r7, r2, r0
 801092c:	887b      	ldrh	r3, [r7, #2]
 801092e:	5a15      	ldrh	r5, [r2, r0]
 8010930:	429d      	cmp	r5, r3
 8010932:	d0f4      	beq.n	801091e <tcp_read+0x36>
 8010934:	f240 55b6 	movw	r5, #1462	; 0x5b6
 8010938:	435d      	muls	r5, r3
 801093a:	1d06      	adds	r6, r0, #4
 801093c:	442e      	add	r6, r5
 801093e:	4416      	add	r6, r2
 8010940:	4405      	add	r5, r0
 8010942:	600e      	str	r6, [r1, #0]
 8010944:	442a      	add	r2, r5
 8010946:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 801094a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801094c:	3301      	adds	r3, #1
 801094e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 8010952:	f003 0301 	and.w	r3, r3, #1
 8010956:	8722      	strh	r2, [r4, #56]	; 0x38
 8010958:	807b      	strh	r3, [r7, #2]
 801095a:	b005      	add	sp, #20
 801095c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801095e:	bf00      	nop
 8010960:	20016588 	andcs	r6, r1, r8, lsl #11
 8010964:	20015a18 	andcs	r5, r1, r8, lsl sl

08010968 <memcpy.isra.0>:
 8010968:	3801      	subs	r0, #1
 801096a:	440a      	add	r2, r1
 801096c:	4291      	cmp	r1, r2
 801096e:	d100      	bne.n	8010972 <memcpy.isra.0+0xa>
 8010970:	4770      	bx	lr
 8010972:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010976:	f800 3f01 	strb.w	r3, [r0, #1]!
 801097a:	e7f7      	b.n	801096c <memcpy.isra.0+0x4>

0801097c <net_memcpy>:
 801097c:	ea40 0301 	orr.w	r3, r0, r1
 8010980:	079b      	lsls	r3, r3, #30
 8010982:	b570      	push	{r4, r5, r6, lr}
 8010984:	d108      	bne.n	8010998 <net_memcpy+0x1c>
 8010986:	f022 0303 	bic.w	r3, r2, #3
 801098a:	1f04      	subs	r4, r0, #4
 801098c:	18cd      	adds	r5, r1, r3
 801098e:	42a9      	cmp	r1, r5
 8010990:	d108      	bne.n	80109a4 <net_memcpy+0x28>
 8010992:	1ad2      	subs	r2, r2, r3
 8010994:	4403      	add	r3, r0
 8010996:	e000      	b.n	801099a <net_memcpy+0x1e>
 8010998:	4603      	mov	r3, r0
 801099a:	3b01      	subs	r3, #1
 801099c:	440a      	add	r2, r1
 801099e:	4291      	cmp	r1, r2
 80109a0:	d105      	bne.n	80109ae <net_memcpy+0x32>
 80109a2:	bd70      	pop	{r4, r5, r6, pc}
 80109a4:	f851 6b04 	ldr.w	r6, [r1], #4
 80109a8:	f844 6f04 	str.w	r6, [r4, #4]!
 80109ac:	e7ef      	b.n	801098e <net_memcpy+0x12>
 80109ae:	f811 4b01 	ldrb.w	r4, [r1], #1
 80109b2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80109b6:	e7f2      	b.n	801099e <net_memcpy+0x22>

080109b8 <udp_set_ip>:
 80109b8:	2204      	movs	r2, #4
 80109ba:	b513      	push	{r0, r1, r4, lr}
 80109bc:	4604      	mov	r4, r0
 80109be:	6803      	ldr	r3, [r0, #0]
 80109c0:	eb0d 0102 	add.w	r1, sp, r2
 80109c4:	4808      	ldr	r0, [pc, #32]	; (80109e8 <udp_set_ip+0x30>)
 80109c6:	9301      	str	r3, [sp, #4]
 80109c8:	f7ff ffce 	bl	8010968 <memcpy.isra.0>
 80109cc:	6862      	ldr	r2, [r4, #4]
 80109ce:	4b07      	ldr	r3, [pc, #28]	; (80109ec <udp_set_ip+0x34>)
 80109d0:	43d1      	mvns	r1, r2
 80109d2:	6019      	str	r1, [r3, #0]
 80109d4:	6823      	ldr	r3, [r4, #0]
 80109d6:	4013      	ands	r3, r2
 80109d8:	4a05      	ldr	r2, [pc, #20]	; (80109f0 <udp_set_ip+0x38>)
 80109da:	6013      	str	r3, [r2, #0]
 80109dc:	68a2      	ldr	r2, [r4, #8]
 80109de:	4b05      	ldr	r3, [pc, #20]	; (80109f4 <udp_set_ip+0x3c>)
 80109e0:	601a      	str	r2, [r3, #0]
 80109e2:	b002      	add	sp, #8
 80109e4:	bd10      	pop	{r4, pc}
 80109e6:	bf00      	nop
 80109e8:	2001c8a2 	andcs	ip, r1, r2, lsr #17
 80109ec:	20016bb8 			; <UNDEFINED> instruction: 0x20016bb8
 80109f0:	20016bc0 	andcs	r6, r1, r0, asr #23
 80109f4:	20016bbc 			; <UNDEFINED> instruction: 0x20016bbc

080109f8 <udp_bind>:
 80109f8:	4a0a      	ldr	r2, [pc, #40]	; (8010a24 <udp_bind+0x2c>)
 80109fa:	4603      	mov	r3, r0
 80109fc:	b510      	push	{r4, lr}
 80109fe:	2000      	movs	r0, #0
 8010a00:	4614      	mov	r4, r2
 8010a02:	f852 1b04 	ldr.w	r1, [r2], #4
 8010a06:	4299      	cmp	r1, r3
 8010a08:	d008      	beq.n	8010a1c <udp_bind+0x24>
 8010a0a:	b141      	cbz	r1, 8010a1e <udp_bind+0x26>
 8010a0c:	3001      	adds	r0, #1
 8010a0e:	2808      	cmp	r0, #8
 8010a10:	d1f7      	bne.n	8010a02 <udp_bind+0xa>
 8010a12:	4805      	ldr	r0, [pc, #20]	; (8010a28 <udp_bind+0x30>)
 8010a14:	f002 ff6a 	bl	80138ec <console_error>
 8010a18:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010a1c:	bd10      	pop	{r4, pc}
 8010a1e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 8010a22:	e7fb      	b.n	8010a1c <udp_bind+0x24>
 8010a24:	20016bc8 	andcs	r6, r1, r8, asr #23
 8010a28:	080187c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, r9, sl, pc}

08010a2c <udp_unbind>:
 8010a2c:	4a0c      	ldr	r2, [pc, #48]	; (8010a60 <udp_unbind+0x34>)
 8010a2e:	2300      	movs	r3, #0
 8010a30:	4611      	mov	r1, r2
 8010a32:	b510      	push	{r4, lr}
 8010a34:	f852 4b04 	ldr.w	r4, [r2], #4
 8010a38:	4284      	cmp	r4, r0
 8010a3a:	d108      	bne.n	8010a4e <udp_unbind+0x22>
 8010a3c:	2000      	movs	r0, #0
 8010a3e:	f640 3294 	movw	r2, #2964	; 0xb94
 8010a42:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8010a46:	4353      	muls	r3, r2
 8010a48:	4a06      	ldr	r2, [pc, #24]	; (8010a64 <udp_unbind+0x38>)
 8010a4a:	50d0      	str	r0, [r2, r3]
 8010a4c:	bd10      	pop	{r4, pc}
 8010a4e:	3301      	adds	r3, #1
 8010a50:	2b08      	cmp	r3, #8
 8010a52:	d1ef      	bne.n	8010a34 <udp_unbind+0x8>
 8010a54:	4804      	ldr	r0, [pc, #16]	; (8010a68 <udp_unbind+0x3c>)
 8010a56:	f002 ff49 	bl	80138ec <console_error>
 8010a5a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010a5e:	e7f5      	b.n	8010a4c <udp_unbind+0x20>
 8010a60:	20016bc8 	andcs	r6, r1, r8, asr #23
 8010a64:	20016be8 	andcs	r6, r1, r8, ror #23
 8010a68:	080187cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, pc}

08010a6c <udp_recv>:
 8010a6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a70:	4604      	mov	r4, r0
 8010a72:	4698      	mov	r8, r3
 8010a74:	f640 3394 	movw	r3, #2964	; 0xb94
 8010a78:	435c      	muls	r4, r3
 8010a7a:	4608      	mov	r0, r1
 8010a7c:	4915      	ldr	r1, [pc, #84]	; (8010ad4 <udp_recv+0x68>)
 8010a7e:	190f      	adds	r7, r1, r4
 8010a80:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 8010a84:	5b0b      	ldrh	r3, [r1, r4]
 8010a86:	4563      	cmp	r3, ip
 8010a88:	d021      	beq.n	8010ace <udp_recv+0x62>
 8010a8a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8010a8e:	fb03 fc0c 	mul.w	ip, r3, ip
 8010a92:	eb0c 0604 	add.w	r6, ip, r4
 8010a96:	440e      	add	r6, r1
 8010a98:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8010a9c:	3404      	adds	r4, #4
 8010a9e:	4295      	cmp	r5, r2
 8010aa0:	bf28      	it	cs
 8010aa2:	4615      	movcs	r5, r2
 8010aa4:	4464      	add	r4, ip
 8010aa6:	462a      	mov	r2, r5
 8010aa8:	4421      	add	r1, r4
 8010aaa:	f7ff ff67 	bl	801097c <net_memcpy>
 8010aae:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8010ab2:	f8c8 3000 	str.w	r3, [r8]
 8010ab6:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 8010aba:	9b06      	ldr	r3, [sp, #24]
 8010abc:	801a      	strh	r2, [r3, #0]
 8010abe:	887b      	ldrh	r3, [r7, #2]
 8010ac0:	3301      	adds	r3, #1
 8010ac2:	f003 0301 	and.w	r3, r3, #1
 8010ac6:	807b      	strh	r3, [r7, #2]
 8010ac8:	4628      	mov	r0, r5
 8010aca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010ace:	2500      	movs	r5, #0
 8010ad0:	e7fa      	b.n	8010ac8 <udp_recv+0x5c>
 8010ad2:	bf00      	nop
 8010ad4:	20016be8 	andcs	r6, r1, r8, ror #23

08010ad8 <udp_recv2>:
 8010ad8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010ada:	f640 3594 	movw	r5, #2964	; 0xb94
 8010ade:	4368      	muls	r0, r5
 8010ae0:	4c0f      	ldr	r4, [pc, #60]	; (8010b20 <udp_recv2+0x48>)
 8010ae2:	1827      	adds	r7, r4, r0
 8010ae4:	887d      	ldrh	r5, [r7, #2]
 8010ae6:	5a26      	ldrh	r6, [r4, r0]
 8010ae8:	42ae      	cmp	r6, r5
 8010aea:	d017      	beq.n	8010b1c <udp_recv2+0x44>
 8010aec:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8010af0:	fb0c f505 	mul.w	r5, ip, r5
 8010af4:	1d06      	adds	r6, r0, #4
 8010af6:	442e      	add	r6, r5
 8010af8:	4405      	add	r5, r0
 8010afa:	4426      	add	r6, r4
 8010afc:	442c      	add	r4, r5
 8010afe:	600e      	str	r6, [r1, #0]
 8010b00:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8010b04:	6011      	str	r1, [r2, #0]
 8010b06:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 8010b0a:	801a      	strh	r2, [r3, #0]
 8010b0c:	887b      	ldrh	r3, [r7, #2]
 8010b0e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8010b12:	3301      	adds	r3, #1
 8010b14:	f003 0301 	and.w	r3, r3, #1
 8010b18:	807b      	strh	r3, [r7, #2]
 8010b1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b1c:	2000      	movs	r0, #0
 8010b1e:	e7fc      	b.n	8010b1a <udp_recv2+0x42>
 8010b20:	20016be8 	andcs	r6, r1, r8, ror #23

08010b24 <udp_send>:
 8010b24:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010b28:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8010c5c <udp_send+0x138>
 8010b2c:	461c      	mov	r4, r3
 8010b2e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8010b32:	4607      	mov	r7, r0
 8010b34:	4688      	mov	r8, r1
 8010b36:	4616      	mov	r6, r2
 8010b38:	2b00      	cmp	r3, #0
 8010b3a:	f000 808b 	beq.w	8010c54 <udp_send+0x130>
 8010b3e:	1c63      	adds	r3, r4, #1
 8010b40:	d141      	bne.n	8010bc6 <udp_send+0xa2>
 8010b42:	4a47      	ldr	r2, [pc, #284]	; (8010c60 <udp_send+0x13c>)
 8010b44:	2307      	movs	r3, #7
 8010b46:	4611      	mov	r1, r2
 8010b48:	20ff      	movs	r0, #255	; 0xff
 8010b4a:	e001      	b.n	8010b50 <udp_send+0x2c>
 8010b4c:	f802 0b01 	strb.w	r0, [r2], #1
 8010b50:	3b01      	subs	r3, #1
 8010b52:	d1fb      	bne.n	8010b4c <udp_send+0x28>
 8010b54:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010b58:	83cb      	strh	r3, [r1, #30]
 8010b5a:	840b      	strh	r3, [r1, #32]
 8010b5c:	2500      	movs	r5, #0
 8010b5e:	f8df a104 	ldr.w	sl, [pc, #260]	; 8010c64 <udp_send+0x140>
 8010b62:	4c3f      	ldr	r4, [pc, #252]	; (8010c60 <udp_send+0x13c>)
 8010b64:	f8ba 3000 	ldrh.w	r3, [sl]
 8010b68:	2114      	movs	r1, #20
 8010b6a:	8263      	strh	r3, [r4, #18]
 8010b6c:	f106 031c 	add.w	r3, r6, #28
 8010b70:	ba5b      	rev16	r3, r3
 8010b72:	f104 000e 	add.w	r0, r4, #14
 8010b76:	8223      	strh	r3, [r4, #16]
 8010b78:	8325      	strh	r5, [r4, #24]
 8010b7a:	f001 fd3e 	bl	80125fa <net_chksum>
 8010b7e:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8010b82:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8010b86:	ba5b      	rev16	r3, r3
 8010b88:	8463      	strh	r3, [r4, #34]	; 0x22
 8010b8a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8010b8e:	4632      	mov	r2, r6
 8010b90:	ba5b      	rev16	r3, r3
 8010b92:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010b94:	f106 0308 	add.w	r3, r6, #8
 8010b98:	ba5b      	rev16	r3, r3
 8010b9a:	bf28      	it	cs
 8010b9c:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8010ba0:	4641      	mov	r1, r8
 8010ba2:	8320      	strh	r0, [r4, #24]
 8010ba4:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8010ba8:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010baa:	f7ff fee7 	bl	801097c <net_memcpy>
 8010bae:	4620      	mov	r0, r4
 8010bb0:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8010bb4:	f004 f95e 	bl	8014e74 <emac_eth_send>
 8010bb8:	f8ba 3000 	ldrh.w	r3, [sl]
 8010bbc:	4628      	mov	r0, r5
 8010bbe:	3301      	adds	r3, #1
 8010bc0:	f8aa 3000 	strh.w	r3, [sl]
 8010bc4:	e037      	b.n	8010c36 <udp_send+0x112>
 8010bc6:	4b28      	ldr	r3, [pc, #160]	; (8010c68 <udp_send+0x144>)
 8010bc8:	681b      	ldr	r3, [r3, #0]
 8010bca:	43a3      	bics	r3, r4
 8010bcc:	d10f      	bne.n	8010bee <udp_send+0xca>
 8010bce:	2307      	movs	r3, #7
 8010bd0:	21ff      	movs	r1, #255	; 0xff
 8010bd2:	4a23      	ldr	r2, [pc, #140]	; (8010c60 <udp_send+0x13c>)
 8010bd4:	e001      	b.n	8010bda <udp_send+0xb6>
 8010bd6:	f802 1b01 	strb.w	r1, [r2], #1
 8010bda:	3b01      	subs	r3, #1
 8010bdc:	d1fb      	bne.n	8010bd6 <udp_send+0xb2>
 8010bde:	2204      	movs	r2, #4
 8010be0:	4822      	ldr	r0, [pc, #136]	; (8010c6c <udp_send+0x148>)
 8010be2:	eb0d 0102 	add.w	r1, sp, r2
 8010be6:	9401      	str	r4, [sp, #4]
 8010be8:	f7ff febe 	bl	8010968 <memcpy.isra.0>
 8010bec:	e7b6      	b.n	8010b5c <udp_send+0x38>
 8010bee:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8010bf2:	2be0      	cmp	r3, #224	; 0xe0
 8010bf4:	d10e      	bne.n	8010c14 <udp_send+0xf0>
 8010bf6:	491e      	ldr	r1, [pc, #120]	; (8010c70 <udp_send+0x14c>)
 8010bf8:	f3c4 2306 	ubfx	r3, r4, #8, #7
 8010bfc:	70cb      	strb	r3, [r1, #3]
 8010bfe:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8010c02:	710b      	strb	r3, [r1, #4]
 8010c04:	f3c4 6307 	ubfx	r3, r4, #24, #8
 8010c08:	2206      	movs	r2, #6
 8010c0a:	4815      	ldr	r0, [pc, #84]	; (8010c60 <udp_send+0x13c>)
 8010c0c:	714b      	strb	r3, [r1, #5]
 8010c0e:	f7ff feab 	bl	8010968 <memcpy.isra.0>
 8010c12:	e7e4      	b.n	8010bde <udp_send+0xba>
 8010c14:	4b17      	ldr	r3, [pc, #92]	; (8010c74 <udp_send+0x150>)
 8010c16:	681b      	ldr	r3, [r3, #0]
 8010c18:	43a3      	bics	r3, r4
 8010c1a:	d00f      	beq.n	8010c3c <udp_send+0x118>
 8010c1c:	4d16      	ldr	r5, [pc, #88]	; (8010c78 <udp_send+0x154>)
 8010c1e:	4910      	ldr	r1, [pc, #64]	; (8010c60 <udp_send+0x13c>)
 8010c20:	6828      	ldr	r0, [r5, #0]
 8010c22:	f001 f9b5 	bl	8011f90 <arp_cache_lookup>
 8010c26:	682b      	ldr	r3, [r5, #0]
 8010c28:	4298      	cmp	r0, r3
 8010c2a:	d0d8      	beq.n	8010bde <udp_send+0xba>
 8010c2c:	4813      	ldr	r0, [pc, #76]	; (8010c7c <udp_send+0x158>)
 8010c2e:	f002 fe5d 	bl	80138ec <console_error>
 8010c32:	f06f 0002 	mvn.w	r0, #2
 8010c36:	b002      	add	sp, #8
 8010c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010c3c:	4620      	mov	r0, r4
 8010c3e:	4908      	ldr	r1, [pc, #32]	; (8010c60 <udp_send+0x13c>)
 8010c40:	f001 f9a6 	bl	8011f90 <arp_cache_lookup>
 8010c44:	42a0      	cmp	r0, r4
 8010c46:	d0ca      	beq.n	8010bde <udp_send+0xba>
 8010c48:	480d      	ldr	r0, [pc, #52]	; (8010c80 <udp_send+0x15c>)
 8010c4a:	f002 fe4f 	bl	80138ec <console_error>
 8010c4e:	f06f 0001 	mvn.w	r0, #1
 8010c52:	e7f0      	b.n	8010c36 <udp_send+0x112>
 8010c54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010c58:	e7ed      	b.n	8010c36 <udp_send+0x112>
 8010c5a:	bf00      	nop
 8010c5c:	20016bc8 	andcs	r6, r1, r8, asr #23
 8010c60:	2001c888 	andcs	ip, r1, r8, lsl #17
 8010c64:	20016bc4 	andcs	r6, r1, r4, asr #23
 8010c68:	20016bb8 			; <UNDEFINED> instruction: 0x20016bb8
 8010c6c:	2001c8a6 	andcs	ip, r1, r6, lsr #17
 8010c70:	20000004 	andcs	r0, r0, r4
 8010c74:	20016bc0 	andcs	r6, r1, r0, asr #23
 8010c78:	20016bbc 			; <UNDEFINED> instruction: 0x20016bbc
 8010c7c:	080187d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sl, pc}
 8010c80:	080187f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, pc}

08010c84 <strlen>:
 8010c84:	4603      	mov	r3, r0
 8010c86:	461a      	mov	r2, r3
 8010c88:	7811      	ldrb	r1, [r2, #0]
 8010c8a:	3301      	adds	r3, #1
 8010c8c:	2900      	cmp	r1, #0
 8010c8e:	d1fa      	bne.n	8010c86 <strlen+0x2>
 8010c90:	1a10      	subs	r0, r2, r0
 8010c92:	4770      	bx	lr

08010c94 <strcmp>:
 8010c94:	1e43      	subs	r3, r0, #1
 8010c96:	3901      	subs	r1, #1
 8010c98:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010c9c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010ca0:	4290      	cmp	r0, r2
 8010ca2:	d001      	beq.n	8010ca8 <strcmp+0x14>
 8010ca4:	1a80      	subs	r0, r0, r2
 8010ca6:	e001      	b.n	8010cac <strcmp+0x18>
 8010ca8:	2800      	cmp	r0, #0
 8010caa:	d1f5      	bne.n	8010c98 <strcmp+0x4>
 8010cac:	4770      	bx	lr

08010cae <strcpy.isra.0>:
 8010cae:	3801      	subs	r0, #1
 8010cb0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010cb4:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010cb8:	2b00      	cmp	r3, #0
 8010cba:	d1f9      	bne.n	8010cb0 <strcpy.isra.0+0x2>
 8010cbc:	4770      	bx	lr

08010cbe <strcat.isra.0>:
 8010cbe:	b538      	push	{r3, r4, r5, lr}
 8010cc0:	4604      	mov	r4, r0
 8010cc2:	460d      	mov	r5, r1
 8010cc4:	f7ff ffde 	bl	8010c84 <strlen>
 8010cc8:	4629      	mov	r1, r5
 8010cca:	4420      	add	r0, r4
 8010ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010cd0:	f7ff bfed 	b.w	8010cae <strcpy.isra.0>

08010cd4 <MDNS::MDNS()>:
 8010cd4:	b513      	push	{r0, r1, r4, lr}
 8010cd6:	4604      	mov	r4, r0
 8010cd8:	a901      	add	r1, sp, #4
 8010cda:	4804      	ldr	r0, [pc, #16]	; (8010cec <MDNS::MDNS()+0x18>)
 8010cdc:	f002 ff7c 	bl	8013bd8 <inet_aton>
 8010ce0:	4620      	mov	r0, r4
 8010ce2:	4b03      	ldr	r3, [pc, #12]	; (8010cf0 <MDNS::MDNS()+0x1c>)
 8010ce4:	9a01      	ldr	r2, [sp, #4]
 8010ce6:	601a      	str	r2, [r3, #0]
 8010ce8:	b002      	add	sp, #8
 8010cea:	bd10      	pop	{r4, pc}
 8010cec:	0801882a 	stmdaeq	r1, {r1, r3, r5, fp, pc}
 8010cf0:	2001ce7c 	andcs	ip, r1, ip, ror lr

08010cf4 <MDNS::SetName(char const*)>:
 8010cf4:	b538      	push	{r3, r4, r5, lr}
 8010cf6:	4d0b      	ldr	r5, [pc, #44]	; (8010d24 <MDNS::SetName(char const*)+0x30>)
 8010cf8:	460c      	mov	r4, r1
 8010cfa:	6828      	ldr	r0, [r5, #0]
 8010cfc:	b108      	cbz	r0, 8010d02 <MDNS::SetName(char const*)+0xe>
 8010cfe:	f002 ff65 	bl	8013bcc <operator delete[](void*)>
 8010d02:	4620      	mov	r0, r4
 8010d04:	f7ff ffbe 	bl	8010c84 <strlen>
 8010d08:	3007      	adds	r0, #7
 8010d0a:	f002 ff63 	bl	8013bd4 <operator new[](unsigned int)>
 8010d0e:	4621      	mov	r1, r4
 8010d10:	6028      	str	r0, [r5, #0]
 8010d12:	f7ff ffcc 	bl	8010cae <strcpy.isra.0>
 8010d16:	6828      	ldr	r0, [r5, #0]
 8010d18:	4903      	ldr	r1, [pc, #12]	; (8010d28 <MDNS::SetName(char const*)+0x34>)
 8010d1a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010d1e:	f7ff bfce 	b.w	8010cbe <strcat.isra.0>
 8010d22:	bf00      	nop
 8010d24:	2001d2ac 	andcs	sp, r1, ip, lsr #5
 8010d28:	0801883a 	stmdaeq	r1, {r1, r3, r4, r5, fp, pc}

08010d2c <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8010d2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010d30:	f04f 0e00 	mov.w	lr, #0
 8010d34:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8010d38:	4675      	mov	r5, lr
 8010d3a:	4e1b      	ldr	r6, [pc, #108]	; (8010da8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 8010d3c:	4f1b      	ldr	r7, [pc, #108]	; (8010dac <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 8010d3e:	780b      	ldrb	r3, [r1, #0]
 8010d40:	1c68      	adds	r0, r5, #1
 8010d42:	b913      	cbnz	r3, 8010d4a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 8010d44:	7013      	strb	r3, [r2, #0]
 8010d46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d4a:	2b3f      	cmp	r3, #63	; 0x3f
 8010d4c:	d91c      	bls.n	8010d88 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 8010d4e:	7849      	ldrb	r1, [r1, #1]
 8010d50:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8010d54:	430b      	orrs	r3, r1
 8010d56:	6839      	ldr	r1, [r7, #0]
 8010d58:	f1be 0f00 	cmp.w	lr, #0
 8010d5c:	bf08      	it	eq
 8010d5e:	4605      	moveq	r5, r0
 8010d60:	5ccc      	ldrb	r4, [r1, r3]
 8010d62:	3301      	adds	r3, #1
 8010d64:	4419      	add	r1, r3
 8010d66:	2300      	movs	r3, #0
 8010d68:	42a3      	cmp	r3, r4
 8010d6a:	5cc8      	ldrb	r0, [r1, r3]
 8010d6c:	d309      	bcc.n	8010d82 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 8010d6e:	f04f 0e01 	mov.w	lr, #1
 8010d72:	4421      	add	r1, r4
 8010d74:	4414      	add	r4, r2
 8010d76:	780b      	ldrb	r3, [r1, #0]
 8010d78:	b10b      	cbz	r3, 8010d7e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 8010d7a:	f804 cb01 	strb.w	ip, [r4], #1
 8010d7e:	4622      	mov	r2, r4
 8010d80:	e7dd      	b.n	8010d3e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8010d82:	54d0      	strb	r0, [r2, r3]
 8010d84:	3301      	adds	r3, #1
 8010d86:	e7ef      	b.n	8010d68 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 8010d88:	4688      	mov	r8, r1
 8010d8a:	18d4      	adds	r4, r2, r3
 8010d8c:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8010d90:	f802 9b01 	strb.w	r9, [r2], #1
 8010d94:	4294      	cmp	r4, r2
 8010d96:	d1f9      	bne.n	8010d8c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 8010d98:	1c5a      	adds	r2, r3, #1
 8010d9a:	4411      	add	r1, r2
 8010d9c:	f1be 0f00 	cmp.w	lr, #0
 8010da0:	d1e9      	bne.n	8010d76 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8010da2:	181d      	adds	r5, r3, r0
 8010da4:	e7e7      	b.n	8010d76 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 8010da6:	bf00      	nop
 8010da8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8010dac:	2001d2b0 			; <UNDEFINED> instruction: 0x2001d2b0

08010db0 <MDNS::FindFirstDotFromRight(char const*) const>:
 8010db0:	b510      	push	{r4, lr}
 8010db2:	4608      	mov	r0, r1
 8010db4:	460c      	mov	r4, r1
 8010db6:	f7ff ff65 	bl	8010c84 <strlen>
 8010dba:	4420      	add	r0, r4
 8010dbc:	42a0      	cmp	r0, r4
 8010dbe:	d903      	bls.n	8010dc8 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8010dc0:	f810 3901 	ldrb.w	r3, [r0], #-1
 8010dc4:	2b2e      	cmp	r3, #46	; 0x2e
 8010dc6:	d1f9      	bne.n	8010dbc <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8010dc8:	3001      	adds	r0, #1
 8010dca:	bd10      	pop	{r4, pc}

08010dcc <MDNS::WriteDnsName(char const*, char*, bool)>:
 8010dcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dce:	4614      	mov	r4, r2
 8010dd0:	460f      	mov	r7, r1
 8010dd2:	1c60      	adds	r0, r4, #1
 8010dd4:	463d      	mov	r5, r7
 8010dd6:	f817 6b01 	ldrb.w	r6, [r7], #1
 8010dda:	b946      	cbnz	r6, 8010dee <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 8010ddc:	1a69      	subs	r1, r5, r1
 8010dde:	7021      	strb	r1, [r4, #0]
 8010de0:	7829      	ldrb	r1, [r5, #0]
 8010de2:	b949      	cbnz	r1, 8010df8 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8010de4:	b10b      	cbz	r3, 8010dea <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8010de6:	f800 1b01 	strb.w	r1, [r0], #1
 8010dea:	1a80      	subs	r0, r0, r2
 8010dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010dee:	2e2e      	cmp	r6, #46	; 0x2e
 8010df0:	d0f4      	beq.n	8010ddc <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8010df2:	f800 6b01 	strb.w	r6, [r0], #1
 8010df6:	e7ed      	b.n	8010dd4 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8010df8:	4604      	mov	r4, r0
 8010dfa:	1c69      	adds	r1, r5, #1
 8010dfc:	e7e8      	b.n	8010dd0 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08010e00 <MDNS::CreateAnswerLocalIpAddress()>:
 8010e00:	2384      	movs	r3, #132	; 0x84
 8010e02:	b510      	push	{r4, lr}
 8010e04:	4c0f      	ldr	r4, [pc, #60]	; (8010e44 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8010e06:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8010e0a:	80e3      	strh	r3, [r4, #6]
 8010e0c:	2300      	movs	r3, #0
 8010e0e:	490e      	ldr	r1, [pc, #56]	; (8010e48 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8010e10:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8010e14:	6809      	ldr	r1, [r1, #0]
 8010e16:	f104 0210 	add.w	r2, r4, #16
 8010e1a:	2301      	movs	r3, #1
 8010e1c:	f7ff ffd6 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010e20:	490a      	ldr	r1, [pc, #40]	; (8010e4c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8010e22:	1813      	adds	r3, r2, r0
 8010e24:	5011      	str	r1, [r2, r0]
 8010e26:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8010e2a:	605a      	str	r2, [r3, #4]
 8010e2c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010e30:	811a      	strh	r2, [r3, #8]
 8010e32:	4a07      	ldr	r2, [pc, #28]	; (8010e50 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8010e34:	6812      	ldr	r2, [r2, #0]
 8010e36:	6952      	ldr	r2, [r2, #20]
 8010e38:	f8c3 200a 	str.w	r2, [r3, #10]
 8010e3c:	1b1b      	subs	r3, r3, r4
 8010e3e:	330a      	adds	r3, #10
 8010e40:	6023      	str	r3, [r4, #0]
 8010e42:	bd10      	pop	{r4, pc}
 8010e44:	2001ce80 	andcs	ip, r1, r0, lsl #29
 8010e48:	2001d2ac 	andcs	sp, r1, ip, lsr #5
 8010e4c:	01800100 	orreq	r0, r0, r0, lsl #2
 8010e50:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

08010e54 <MDNS::Start()>:
 8010e54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e56:	4c1d      	ldr	r4, [pc, #116]	; (8010ecc <MDNS::Start()+0x78>)
 8010e58:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8010e5c:	4605      	mov	r5, r0
 8010e5e:	6820      	ldr	r0, [r4, #0]
 8010e60:	f000 fb28 	bl	80114b4 <Network::Begin(unsigned short)>
 8010e64:	4e1a      	ldr	r6, [pc, #104]	; (8010ed0 <MDNS::Start()+0x7c>)
 8010e66:	4f1b      	ldr	r7, [pc, #108]	; (8010ed4 <MDNS::Start()+0x80>)
 8010e68:	4601      	mov	r1, r0
 8010e6a:	6030      	str	r0, [r6, #0]
 8010e6c:	683a      	ldr	r2, [r7, #0]
 8010e6e:	6820      	ldr	r0, [r4, #0]
 8010e70:	f000 fb31 	bl	80114d6 <Network::JoinGroup(int, unsigned int)>
 8010e74:	4b18      	ldr	r3, [pc, #96]	; (8010ed8 <MDNS::Start()+0x84>)
 8010e76:	681b      	ldr	r3, [r3, #0]
 8010e78:	b923      	cbnz	r3, 8010e84 <MDNS::Start()+0x30>
 8010e7a:	6821      	ldr	r1, [r4, #0]
 8010e7c:	4628      	mov	r0, r5
 8010e7e:	3120      	adds	r1, #32
 8010e80:	f7ff ff38 	bl	8010cf4 <MDNS::SetName(char const*)>
 8010e84:	4628      	mov	r0, r5
 8010e86:	f7ff ffbb 	bl	8010e00 <MDNS::CreateAnswerLocalIpAddress()>
 8010e8a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010e8e:	4913      	ldr	r1, [pc, #76]	; (8010edc <MDNS::Start()+0x88>)
 8010e90:	7830      	ldrb	r0, [r6, #0]
 8010e92:	f831 2b04 	ldrh.w	r2, [r1], #4
 8010e96:	9300      	str	r3, [sp, #0]
 8010e98:	683b      	ldr	r3, [r7, #0]
 8010e9a:	f7ff fe43 	bl	8010b24 <udp_send>
 8010e9e:	233f      	movs	r3, #63	; 0x3f
 8010ea0:	6820      	ldr	r0, [r4, #0]
 8010ea2:	4c0f      	ldr	r4, [pc, #60]	; (8010ee0 <MDNS::Start()+0x8c>)
 8010ea4:	f100 0260 	add.w	r2, r0, #96	; 0x60
 8010ea8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8010eac:	b929      	cbnz	r1, 8010eba <MDNS::Start()+0x66>
 8010eae:	4413      	add	r3, r2
 8010eb0:	429a      	cmp	r2, r3
 8010eb2:	d006      	beq.n	8010ec2 <MDNS::Start()+0x6e>
 8010eb4:	f802 1b01 	strb.w	r1, [r2], #1
 8010eb8:	e7fa      	b.n	8010eb0 <MDNS::Start()+0x5c>
 8010eba:	3b01      	subs	r3, #1
 8010ebc:	f802 1b01 	strb.w	r1, [r2], #1
 8010ec0:	d1f2      	bne.n	8010ea8 <MDNS::Start()+0x54>
 8010ec2:	2300      	movs	r3, #0
 8010ec4:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 8010ec8:	b003      	add	sp, #12
 8010eca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ecc:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8010ed0:	2000000c 	andcs	r0, r0, ip
 8010ed4:	2001ce7c 	andcs	ip, r1, ip, ror lr
 8010ed8:	2001d2ac 	andcs	sp, r1, ip, lsr #5
 8010edc:	2001ce80 	andcs	ip, r1, r0, lsl #29
 8010ee0:	0801883a 	stmdaeq	r1, {r1, r3, r4, r5, fp, pc}

08010ee4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8010ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010ee8:	4c1b      	ldr	r4, [pc, #108]	; (8010f58 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 8010eea:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8010eee:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8010ef2:	2300      	movs	r3, #0
 8010ef4:	f854 100c 	ldr.w	r1, [r4, ip]
 8010ef8:	4607      	mov	r7, r0
 8010efa:	f7ff ff67 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010efe:	2301      	movs	r3, #1
 8010f00:	7bac      	ldrb	r4, [r5, #14]
 8010f02:	4616      	mov	r6, r2
 8010f04:	4915      	ldr	r1, [pc, #84]	; (8010f5c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8010f06:	4402      	add	r2, r0
 8010f08:	4815      	ldr	r0, [pc, #84]	; (8010f60 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8010f0a:	429c      	cmp	r4, r3
 8010f0c:	bf18      	it	ne
 8010f0e:	4601      	movne	r1, r0
 8010f10:	4638      	mov	r0, r7
 8010f12:	f7ff ff5b 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010f16:	4b13      	ldr	r3, [pc, #76]	; (8010f64 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8010f18:	1814      	adds	r4, r2, r0
 8010f1a:	5013      	str	r3, [r2, r0]
 8010f1c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010f20:	6063      	str	r3, [r4, #4]
 8010f22:	4b11      	ldr	r3, [pc, #68]	; (8010f68 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8010f24:	f8d3 8000 	ldr.w	r8, [r3]
 8010f28:	4640      	mov	r0, r8
 8010f2a:	f7ff feab 	bl	8010c84 <strlen>
 8010f2e:	f100 0308 	add.w	r3, r0, #8
 8010f32:	ba5b      	rev16	r3, r3
 8010f34:	8123      	strh	r3, [r4, #8]
 8010f36:	2300      	movs	r3, #0
 8010f38:	f8c4 300a 	str.w	r3, [r4, #10]
 8010f3c:	89ab      	ldrh	r3, [r5, #12]
 8010f3e:	f104 0210 	add.w	r2, r4, #16
 8010f42:	ba5b      	rev16	r3, r3
 8010f44:	81e3      	strh	r3, [r4, #14]
 8010f46:	4641      	mov	r1, r8
 8010f48:	2301      	movs	r3, #1
 8010f4a:	4638      	mov	r0, r7
 8010f4c:	f7ff ff3e 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010f50:	4410      	add	r0, r2
 8010f52:	1b80      	subs	r0, r0, r6
 8010f54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f58:	2001d084 	andcs	sp, r1, r4, lsl #1
 8010f5c:	08018836 	stmdaeq	r1, {r1, r2, r4, r5, fp, pc}
 8010f60:	08018853 	stmdaeq	r1, {r0, r1, r4, r6, fp, pc}
 8010f64:	01802100 	orreq	r2, r0, r0, lsl #2
 8010f68:	2001d2ac 	andcs	sp, r1, ip, lsr #5

08010f6c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8010f6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010f70:	4e19      	ldr	r6, [pc, #100]	; (8010fd8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8010f72:	010f      	lsls	r7, r1, #4
 8010f74:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8010f78:	2300      	movs	r3, #0
 8010f7a:	59f1      	ldr	r1, [r6, r7]
 8010f7c:	4604      	mov	r4, r0
 8010f7e:	f7ff ff25 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010f82:	2301      	movs	r3, #1
 8010f84:	7bae      	ldrb	r6, [r5, #14]
 8010f86:	4690      	mov	r8, r2
 8010f88:	4914      	ldr	r1, [pc, #80]	; (8010fdc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8010f8a:	4402      	add	r2, r0
 8010f8c:	4814      	ldr	r0, [pc, #80]	; (8010fe0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8010f8e:	429e      	cmp	r6, r3
 8010f90:	bf18      	it	ne
 8010f92:	4601      	movne	r1, r0
 8010f94:	4620      	mov	r0, r4
 8010f96:	f7ff ff19 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010f9a:	4b12      	ldr	r3, [pc, #72]	; (8010fe4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8010f9c:	1816      	adds	r6, r2, r0
 8010f9e:	5013      	str	r3, [r2, r0]
 8010fa0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010fa4:	68a8      	ldr	r0, [r5, #8]
 8010fa6:	6073      	str	r3, [r6, #4]
 8010fa8:	f106 040b 	add.w	r4, r6, #11
 8010fac:	b938      	cbnz	r0, 8010fbe <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8010fae:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010fb2:	72b0      	strb	r0, [r6, #10]
 8010fb4:	8133      	strh	r3, [r6, #8]
 8010fb6:	eba4 0008 	sub.w	r0, r4, r8
 8010fba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fbe:	f7ff fe61 	bl	8010c84 <strlen>
 8010fc2:	4607      	mov	r7, r0
 8010fc4:	1c43      	adds	r3, r0, #1
 8010fc6:	72b0      	strb	r0, [r6, #10]
 8010fc8:	ba5b      	rev16	r3, r3
 8010fca:	4620      	mov	r0, r4
 8010fcc:	68a9      	ldr	r1, [r5, #8]
 8010fce:	8133      	strh	r3, [r6, #8]
 8010fd0:	f7ff fe6d 	bl	8010cae <strcpy.isra.0>
 8010fd4:	443c      	add	r4, r7
 8010fd6:	e7ee      	b.n	8010fb6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8010fd8:	2001d084 	andcs	sp, r1, r4, lsl #1
 8010fdc:	08018836 	stmdaeq	r1, {r1, r2, r4, r5, fp, pc}
 8010fe0:	08018853 	stmdaeq	r1, {r0, r1, r4, r6, fp, pc}
 8010fe4:	01801000 	orreq	r1, r0, r0

08010fe8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8010fe8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010fec:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011050 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 8010ff0:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8010ff4:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8010ff8:	6869      	ldr	r1, [r5, #4]
 8010ffa:	2301      	movs	r3, #1
 8010ffc:	4607      	mov	r7, r0
 8010ffe:	f7ff fee5 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8011002:	4b14      	ldr	r3, [pc, #80]	; (8011054 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8011004:	f858 8009 	ldr.w	r8, [r8, r9]
 8011008:	5013      	str	r3, [r2, r0]
 801100a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801100e:	1816      	adds	r6, r2, r0
 8011010:	6073      	str	r3, [r6, #4]
 8011012:	4640      	mov	r0, r8
 8011014:	4614      	mov	r4, r2
 8011016:	f7ff fe35 	bl	8010c84 <strlen>
 801101a:	f100 030d 	add.w	r3, r0, #13
 801101e:	ba5b      	rev16	r3, r3
 8011020:	4641      	mov	r1, r8
 8011022:	8133      	strh	r3, [r6, #8]
 8011024:	f106 020a 	add.w	r2, r6, #10
 8011028:	2300      	movs	r3, #0
 801102a:	4638      	mov	r0, r7
 801102c:	f7ff fece 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8011030:	2301      	movs	r3, #1
 8011032:	4402      	add	r2, r0
 8011034:	7bad      	ldrb	r5, [r5, #14]
 8011036:	4808      	ldr	r0, [pc, #32]	; (8011058 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8011038:	4908      	ldr	r1, [pc, #32]	; (801105c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 801103a:	429d      	cmp	r5, r3
 801103c:	bf18      	it	ne
 801103e:	4601      	movne	r1, r0
 8011040:	4638      	mov	r0, r7
 8011042:	f7ff fec3 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 8011046:	4410      	add	r0, r2
 8011048:	1b00      	subs	r0, r0, r4
 801104a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801104e:	bf00      	nop
 8011050:	2001d084 	andcs	sp, r1, r4, lsl #1
 8011054:	01000c00 	tsteq	r0, r0, lsl #24
 8011058:	08018853 	stmdaeq	r1, {r0, r1, r4, r6, fp, pc}
 801105c:	08018836 	stmdaeq	r1, {r1, r2, r4, r5, fp, pc}

08011060 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8011060:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011062:	460f      	mov	r7, r1
 8011064:	2301      	movs	r3, #1
 8011066:	490f      	ldr	r1, [pc, #60]	; (80110a4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 8011068:	4606      	mov	r6, r0
 801106a:	f7ff feaf 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 801106e:	4b0e      	ldr	r3, [pc, #56]	; (80110a8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8011070:	490e      	ldr	r1, [pc, #56]	; (80110ac <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8011072:	5013      	str	r3, [r2, r0]
 8011074:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8011078:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 801107c:	684f      	ldr	r7, [r1, #4]
 801107e:	1815      	adds	r5, r2, r0
 8011080:	606b      	str	r3, [r5, #4]
 8011082:	4638      	mov	r0, r7
 8011084:	4614      	mov	r4, r2
 8011086:	f7ff fdfd 	bl	8010c84 <strlen>
 801108a:	1c83      	adds	r3, r0, #2
 801108c:	ba5b      	rev16	r3, r3
 801108e:	812b      	strh	r3, [r5, #8]
 8011090:	f105 020a 	add.w	r2, r5, #10
 8011094:	2301      	movs	r3, #1
 8011096:	4639      	mov	r1, r7
 8011098:	4630      	mov	r0, r6
 801109a:	f7ff fe97 	bl	8010dcc <MDNS::WriteDnsName(char const*, char*, bool)>
 801109e:	4410      	add	r0, r2
 80110a0:	1b00      	subs	r0, r0, r4
 80110a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80110a4:	08018841 	stmdaeq	r1, {r0, r6, fp, pc}
 80110a8:	01000c00 	tsteq	r0, r0, lsl #24
 80110ac:	2001d084 	andcs	sp, r1, r4, lsl #1

080110b0 <MDNS::CreateMDNSMessage(unsigned int)>:
 80110b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80110b2:	2384      	movs	r3, #132	; 0x84
 80110b4:	4d19      	ldr	r5, [pc, #100]	; (801111c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 80110b6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80110ba:	80eb      	strh	r3, [r5, #6]
 80110bc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80110c0:	f105 0410 	add.w	r4, r5, #16
 80110c4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 80110c8:	4622      	mov	r2, r4
 80110ca:	4606      	mov	r6, r0
 80110cc:	460f      	mov	r7, r1
 80110ce:	f7ff ff09 	bl	8010ee4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 80110d2:	4404      	add	r4, r0
 80110d4:	4622      	mov	r2, r4
 80110d6:	4639      	mov	r1, r7
 80110d8:	4630      	mov	r0, r6
 80110da:	f7ff ff47 	bl	8010f6c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 80110de:	4404      	add	r4, r0
 80110e0:	4622      	mov	r2, r4
 80110e2:	4639      	mov	r1, r7
 80110e4:	4630      	mov	r0, r6
 80110e6:	f7ff ffbb 	bl	8011060 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 80110ea:	4404      	add	r4, r0
 80110ec:	4622      	mov	r2, r4
 80110ee:	4639      	mov	r1, r7
 80110f0:	4630      	mov	r0, r6
 80110f2:	f7ff ff79 	bl	8010fe8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 80110f6:	4a0a      	ldr	r2, [pc, #40]	; (8011120 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 80110f8:	4404      	add	r4, r0
 80110fa:	f852 3b10 	ldr.w	r3, [r2], #16
 80110fe:	1e60      	subs	r0, r4, #1
 8011100:	3b0c      	subs	r3, #12
 8011102:	4619      	mov	r1, r3
 8011104:	3901      	subs	r1, #1
 8011106:	d204      	bcs.n	8011112 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8011108:	441c      	add	r4, r3
 801110a:	4b06      	ldr	r3, [pc, #24]	; (8011124 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 801110c:	1ae4      	subs	r4, r4, r3
 801110e:	602c      	str	r4, [r5, #0]
 8011110:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011112:	f812 6b01 	ldrb.w	r6, [r2], #1
 8011116:	f800 6f01 	strb.w	r6, [r0, #1]!
 801111a:	e7f3      	b.n	8011104 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 801111c:	2001d0a8 	andcs	sp, r1, r8, lsr #1
 8011120:	2001ce80 	andcs	ip, r1, r0, lsl #29
 8011124:	2001d0ac 	andcs	sp, r1, ip, lsr #1

08011128 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8011128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801112c:	4d40      	ldr	r5, [pc, #256]	; (8011230 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 801112e:	b085      	sub	sp, #20
 8011130:	682c      	ldr	r4, [r5, #0]
 8011132:	4680      	mov	r8, r0
 8011134:	460f      	mov	r7, r1
 8011136:	4616      	mov	r6, r2
 8011138:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 801113c:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 8011140:	b11c      	cbz	r4, 801114a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 8011142:	692a      	ldr	r2, [r5, #16]
 8011144:	2a00      	cmp	r2, #0
 8011146:	d16e      	bne.n	8011226 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 8011148:	2401      	movs	r4, #1
 801114a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 801114e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 8011152:	8193      	strh	r3, [r2, #12]
 8011154:	f882 b00e 	strb.w	fp, [r2, #14]
 8011158:	2f00      	cmp	r7, #0
 801115a:	d154      	bne.n	8011206 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 801115c:	4b35      	ldr	r3, [pc, #212]	; (8011234 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 801115e:	6818      	ldr	r0, [r3, #0]
 8011160:	3020      	adds	r0, #32
 8011162:	f7ff fd8f 	bl	8010c84 <strlen>
 8011166:	4607      	mov	r7, r0
 8011168:	4630      	mov	r0, r6
 801116a:	f7ff fd8b 	bl	8010c84 <strlen>
 801116e:	4438      	add	r0, r7
 8011170:	3001      	adds	r0, #1
 8011172:	f002 fd2f 	bl	8013bd4 <operator new[](unsigned int)>
 8011176:	4b2f      	ldr	r3, [pc, #188]	; (8011234 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8011178:	f845 0009 	str.w	r0, [r5, r9]
 801117c:	6819      	ldr	r1, [r3, #0]
 801117e:	3120      	adds	r1, #32
 8011180:	f7ff fd95 	bl	8010cae <strcpy.isra.0>
 8011184:	f855 0009 	ldr.w	r0, [r5, r9]
 8011188:	4631      	mov	r1, r6
 801118a:	f7ff fd98 	bl	8010cbe <strcat.isra.0>
 801118e:	4631      	mov	r1, r6
 8011190:	4640      	mov	r0, r8
 8011192:	f7ff fe0d 	bl	8010db0 <MDNS::FindFirstDotFromRight(char const*) const>
 8011196:	eb05 0709 	add.w	r7, r5, r9
 801119a:	4605      	mov	r5, r0
 801119c:	f7ff fd72 	bl	8010c84 <strlen>
 80111a0:	300d      	adds	r0, #13
 80111a2:	f002 fd17 	bl	8013bd4 <operator new[](unsigned int)>
 80111a6:	4629      	mov	r1, r5
 80111a8:	6078      	str	r0, [r7, #4]
 80111aa:	f7ff fd80 	bl	8010cae <strcpy.isra.0>
 80111ae:	4922      	ldr	r1, [pc, #136]	; (8011238 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 80111b0:	6878      	ldr	r0, [r7, #4]
 80111b2:	f7ff fd84 	bl	8010cbe <strcat.isra.0>
 80111b6:	4921      	ldr	r1, [pc, #132]	; (801123c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 80111b8:	4b21      	ldr	r3, [pc, #132]	; (8011240 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 80111ba:	6878      	ldr	r0, [r7, #4]
 80111bc:	f1bb 0f01 	cmp.w	fp, #1
 80111c0:	bf18      	it	ne
 80111c2:	4619      	movne	r1, r3
 80111c4:	f7ff fd7b 	bl	8010cbe <strcat.isra.0>
 80111c8:	f1ba 0f00 	cmp.w	sl, #0
 80111cc:	d009      	beq.n	80111e2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 80111ce:	4650      	mov	r0, sl
 80111d0:	f7ff fd58 	bl	8010c84 <strlen>
 80111d4:	3001      	adds	r0, #1
 80111d6:	f002 fcfd 	bl	8013bd4 <operator new[](unsigned int)>
 80111da:	4651      	mov	r1, sl
 80111dc:	60b8      	str	r0, [r7, #8]
 80111de:	f7ff fd66 	bl	8010cae <strcpy.isra.0>
 80111e2:	4621      	mov	r1, r4
 80111e4:	4640      	mov	r0, r8
 80111e6:	f7ff ff63 	bl	80110b0 <MDNS::CreateMDNSMessage(unsigned int)>
 80111ea:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80111ee:	4915      	ldr	r1, [pc, #84]	; (8011244 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 80111f0:	4815      	ldr	r0, [pc, #84]	; (8011248 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 80111f2:	f831 2b04 	ldrh.w	r2, [r1], #4
 80111f6:	9300      	str	r3, [sp, #0]
 80111f8:	4b14      	ldr	r3, [pc, #80]	; (801124c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 80111fa:	7800      	ldrb	r0, [r0, #0]
 80111fc:	681b      	ldr	r3, [r3, #0]
 80111fe:	f7ff fc91 	bl	8010b24 <udp_send>
 8011202:	2001      	movs	r0, #1
 8011204:	e010      	b.n	8011228 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 8011206:	4638      	mov	r0, r7
 8011208:	f7ff fd3c 	bl	8010c84 <strlen>
 801120c:	9003      	str	r0, [sp, #12]
 801120e:	4630      	mov	r0, r6
 8011210:	f7ff fd38 	bl	8010c84 <strlen>
 8011214:	9b03      	ldr	r3, [sp, #12]
 8011216:	4418      	add	r0, r3
 8011218:	3001      	adds	r0, #1
 801121a:	f002 fcdb 	bl	8013bd4 <operator new[](unsigned int)>
 801121e:	4639      	mov	r1, r7
 8011220:	f845 0009 	str.w	r0, [r5, r9]
 8011224:	e7ac      	b.n	8011180 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 8011226:	2000      	movs	r0, #0
 8011228:	b005      	add	sp, #20
 801122a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801122e:	bf00      	nop
 8011230:	2001d084 	andcs	sp, r1, r4, lsl #1
 8011234:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8011238:	080166e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, sp, lr}
 801123c:	08018836 	stmdaeq	r1, {r1, r2, r4, r5, fp, pc}
 8011240:	08018853 	stmdaeq	r1, {r0, r1, r4, r6, fp, pc}
 8011244:	2001d0a8 	andcs	sp, r1, r8, lsr #1
 8011248:	2000000c 	andcs	r0, r0, ip
 801124c:	2001ce7c 	andcs	ip, r1, ip, ror lr

08011250 <MDNS::HandleRequest(unsigned short)>:
 8011250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011254:	4605      	mov	r5, r0
 8011256:	2700      	movs	r7, #0
 8011258:	f04f 080c 	mov.w	r8, #12
 801125c:	b0c5      	sub	sp, #276	; 0x114
 801125e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8011320 <MDNS::HandleRequest(unsigned short)+0xd0>
 8011262:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8011324 <MDNS::HandleRequest(unsigned short)+0xd4>
 8011266:	9103      	str	r1, [sp, #12]
 8011268:	9b03      	ldr	r3, [sp, #12]
 801126a:	42bb      	cmp	r3, r7
 801126c:	d802      	bhi.n	8011274 <MDNS::HandleRequest(unsigned short)+0x24>
 801126e:	b045      	add	sp, #276	; 0x114
 8011270:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011274:	f8da 1000 	ldr.w	r1, [sl]
 8011278:	aa04      	add	r2, sp, #16
 801127a:	4441      	add	r1, r8
 801127c:	4628      	mov	r0, r5
 801127e:	f7ff fd55 	bl	8010d2c <MDNS::DecodeDNSNameNotation(char const*, char*)>
 8011282:	f8da 2000 	ldr.w	r2, [sl]
 8011286:	4440      	add	r0, r8
 8011288:	1813      	adds	r3, r2, r0
 801128a:	885b      	ldrh	r3, [r3, #2]
 801128c:	f100 0804 	add.w	r8, r0, #4
 8011290:	ba5b      	rev16	r3, r3
 8011292:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8011296:	2b01      	cmp	r3, #1
 8011298:	d13d      	bne.n	8011316 <MDNS::HandleRequest(unsigned short)+0xc6>
 801129a:	5a14      	ldrh	r4, [r2, r0]
 801129c:	4b22      	ldr	r3, [pc, #136]	; (8011328 <MDNS::HandleRequest(unsigned short)+0xd8>)
 801129e:	ba64      	rev16	r4, r4
 80112a0:	6818      	ldr	r0, [r3, #0]
 80112a2:	a904      	add	r1, sp, #16
 80112a4:	b2a4      	uxth	r4, r4
 80112a6:	f7ff fcf5 	bl	8010c94 <strcmp>
 80112aa:	b968      	cbnz	r0, 80112c8 <MDNS::HandleRequest(unsigned short)+0x78>
 80112ac:	2c01      	cmp	r4, #1
 80112ae:	d10b      	bne.n	80112c8 <MDNS::HandleRequest(unsigned short)+0x78>
 80112b0:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80112b4:	491d      	ldr	r1, [pc, #116]	; (801132c <MDNS::HandleRequest(unsigned short)+0xdc>)
 80112b6:	481e      	ldr	r0, [pc, #120]	; (8011330 <MDNS::HandleRequest(unsigned short)+0xe0>)
 80112b8:	f831 2b04 	ldrh.w	r2, [r1], #4
 80112bc:	9300      	str	r3, [sp, #0]
 80112be:	4b1d      	ldr	r3, [pc, #116]	; (8011334 <MDNS::HandleRequest(unsigned short)+0xe4>)
 80112c0:	7800      	ldrb	r0, [r0, #0]
 80112c2:	681b      	ldr	r3, [r3, #0]
 80112c4:	f7ff fc2e 	bl	8010b24 <udp_send>
 80112c8:	481b      	ldr	r0, [pc, #108]	; (8011338 <MDNS::HandleRequest(unsigned short)+0xe8>)
 80112ca:	a904      	add	r1, sp, #16
 80112cc:	f7ff fce2 	bl	8010c94 <strcmp>
 80112d0:	f04f 0900 	mov.w	r9, #0
 80112d4:	4e19      	ldr	r6, [pc, #100]	; (801133c <MDNS::HandleRequest(unsigned short)+0xec>)
 80112d6:	9002      	str	r0, [sp, #8]
 80112d8:	6833      	ldr	r3, [r6, #0]
 80112da:	b1c3      	cbz	r3, 801130e <MDNS::HandleRequest(unsigned short)+0xbe>
 80112dc:	9b02      	ldr	r3, [sp, #8]
 80112de:	b123      	cbz	r3, 80112ea <MDNS::HandleRequest(unsigned short)+0x9a>
 80112e0:	6870      	ldr	r0, [r6, #4]
 80112e2:	a904      	add	r1, sp, #16
 80112e4:	f7ff fcd6 	bl	8010c94 <strcmp>
 80112e8:	b988      	cbnz	r0, 801130e <MDNS::HandleRequest(unsigned short)+0xbe>
 80112ea:	2c0c      	cmp	r4, #12
 80112ec:	d10f      	bne.n	801130e <MDNS::HandleRequest(unsigned short)+0xbe>
 80112ee:	4649      	mov	r1, r9
 80112f0:	4628      	mov	r0, r5
 80112f2:	f7ff fedd 	bl	80110b0 <MDNS::CreateMDNSMessage(unsigned int)>
 80112f6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80112fa:	480d      	ldr	r0, [pc, #52]	; (8011330 <MDNS::HandleRequest(unsigned short)+0xe0>)
 80112fc:	9300      	str	r3, [sp, #0]
 80112fe:	4b0d      	ldr	r3, [pc, #52]	; (8011334 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8011300:	f8bb 2000 	ldrh.w	r2, [fp]
 8011304:	681b      	ldr	r3, [r3, #0]
 8011306:	490e      	ldr	r1, [pc, #56]	; (8011340 <MDNS::HandleRequest(unsigned short)+0xf0>)
 8011308:	7800      	ldrb	r0, [r0, #0]
 801130a:	f7ff fc0b 	bl	8010b24 <udp_send>
 801130e:	3610      	adds	r6, #16
 8011310:	f1b9 0f00 	cmp.w	r9, #0
 8011314:	d001      	beq.n	801131a <MDNS::HandleRequest(unsigned short)+0xca>
 8011316:	3701      	adds	r7, #1
 8011318:	e7a6      	b.n	8011268 <MDNS::HandleRequest(unsigned short)+0x18>
 801131a:	f04f 0901 	mov.w	r9, #1
 801131e:	e7db      	b.n	80112d8 <MDNS::HandleRequest(unsigned short)+0x88>
 8011320:	2001d2b0 			; <UNDEFINED> instruction: 0x2001d2b0
 8011324:	2001d0a8 	andcs	sp, r1, r8, lsr #1
 8011328:	2001d2ac 	andcs	sp, r1, ip, lsr #5
 801132c:	2001ce80 	andcs	ip, r1, r0, lsl #29
 8011330:	2000000c 	andcs	r0, r0, ip
 8011334:	2001ce7c 	andcs	ip, r1, ip, ror lr
 8011338:	08018841 	stmdaeq	r1, {r0, r6, fp, pc}
 801133c:	2001d084 	andcs	sp, r1, r4, lsl #1
 8011340:	2001d0ac 	andcs	sp, r1, ip, lsr #1

08011344 <MDNS::Parse()>:
 8011344:	4b08      	ldr	r3, [pc, #32]	; (8011368 <MDNS::Parse()+0x24>)
 8011346:	681a      	ldr	r2, [r3, #0]
 8011348:	8853      	ldrh	r3, [r2, #2]
 801134a:	ba5b      	rev16	r3, r3
 801134c:	b299      	uxth	r1, r3
 801134e:	041b      	lsls	r3, r3, #16
 8011350:	d408      	bmi.n	8011364 <MDNS::Parse()+0x20>
 8011352:	0b89      	lsrs	r1, r1, #14
 8011354:	d106      	bne.n	8011364 <MDNS::Parse()+0x20>
 8011356:	8891      	ldrh	r1, [r2, #4]
 8011358:	b28b      	uxth	r3, r1
 801135a:	b11b      	cbz	r3, 8011364 <MDNS::Parse()+0x20>
 801135c:	ba49      	rev16	r1, r1
 801135e:	b289      	uxth	r1, r1
 8011360:	f7ff bf76 	b.w	8011250 <MDNS::HandleRequest(unsigned short)>
 8011364:	4770      	bx	lr
 8011366:	bf00      	nop
 8011368:	2001d2b0 			; <UNDEFINED> instruction: 0x2001d2b0

0801136c <MDNS::Run()>:
 801136c:	b538      	push	{r3, r4, r5, lr}
 801136e:	4d0c      	ldr	r5, [pc, #48]	; (80113a0 <MDNS::Run()+0x34>)
 8011370:	4604      	mov	r4, r0
 8011372:	480c      	ldr	r0, [pc, #48]	; (80113a4 <MDNS::Run()+0x38>)
 8011374:	462b      	mov	r3, r5
 8011376:	4a0c      	ldr	r2, [pc, #48]	; (80113a8 <MDNS::Run()+0x3c>)
 8011378:	490c      	ldr	r1, [pc, #48]	; (80113ac <MDNS::Run()+0x40>)
 801137a:	7800      	ldrb	r0, [r0, #0]
 801137c:	f7ff fbac 	bl	8010ad8 <udp_recv2>
 8011380:	4b0b      	ldr	r3, [pc, #44]	; (80113b0 <MDNS::Run()+0x44>)
 8011382:	882a      	ldrh	r2, [r5, #0]
 8011384:	8018      	strh	r0, [r3, #0]
 8011386:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801138a:	429a      	cmp	r2, r3
 801138c:	d106      	bne.n	801139c <MDNS::Run()+0x30>
 801138e:	280c      	cmp	r0, #12
 8011390:	d904      	bls.n	801139c <MDNS::Run()+0x30>
 8011392:	4620      	mov	r0, r4
 8011394:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011398:	f7ff bfd4 	b.w	8011344 <MDNS::Parse()>
 801139c:	bd38      	pop	{r3, r4, r5, pc}
 801139e:	bf00      	nop
 80113a0:	2001ce78 	andcs	ip, r1, r8, ror lr
 80113a4:	2000000c 	andcs	r0, r0, ip
 80113a8:	2001ce74 	andcs	ip, r1, r4, ror lr
 80113ac:	2001d2b0 			; <UNDEFINED> instruction: 0x2001d2b0
 80113b0:	2001d0a4 	andcs	sp, r1, r4, lsr #1

080113b4 <MDNS::Print()>:
 80113b4:	b510      	push	{r4, lr}
 80113b6:	4816      	ldr	r0, [pc, #88]	; (8011410 <MDNS::Print()+0x5c>)
 80113b8:	f7f8 f92a 	bl	8009610 <printf>
 80113bc:	4b15      	ldr	r3, [pc, #84]	; (8011414 <MDNS::Print()+0x60>)
 80113be:	681b      	ldr	r3, [r3, #0]
 80113c0:	3301      	adds	r3, #1
 80113c2:	d104      	bne.n	80113ce <MDNS::Print()+0x1a>
 80113c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113c8:	4813      	ldr	r0, [pc, #76]	; (8011418 <MDNS::Print()+0x64>)
 80113ca:	f7f8 b921 	b.w	8009610 <printf>
 80113ce:	4b13      	ldr	r3, [pc, #76]	; (801141c <MDNS::Print()+0x68>)
 80113d0:	4c13      	ldr	r4, [pc, #76]	; (8011420 <MDNS::Print()+0x6c>)
 80113d2:	6819      	ldr	r1, [r3, #0]
 80113d4:	4813      	ldr	r0, [pc, #76]	; (8011424 <MDNS::Print()+0x70>)
 80113d6:	f7f8 f91b 	bl	8009610 <printf>
 80113da:	6823      	ldr	r3, [r4, #0]
 80113dc:	b14b      	cbz	r3, 80113f2 <MDNS::Print()+0x3e>
 80113de:	4a12      	ldr	r2, [pc, #72]	; (8011428 <MDNS::Print()+0x74>)
 80113e0:	68a3      	ldr	r3, [r4, #8]
 80113e2:	6861      	ldr	r1, [r4, #4]
 80113e4:	2b00      	cmp	r3, #0
 80113e6:	bf08      	it	eq
 80113e8:	4613      	moveq	r3, r2
 80113ea:	4810      	ldr	r0, [pc, #64]	; (801142c <MDNS::Print()+0x78>)
 80113ec:	89a2      	ldrh	r2, [r4, #12]
 80113ee:	f7f8 f90f 	bl	8009610 <printf>
 80113f2:	6923      	ldr	r3, [r4, #16]
 80113f4:	b15b      	cbz	r3, 801140e <MDNS::Print()+0x5a>
 80113f6:	69a3      	ldr	r3, [r4, #24]
 80113f8:	4a0b      	ldr	r2, [pc, #44]	; (8011428 <MDNS::Print()+0x74>)
 80113fa:	6961      	ldr	r1, [r4, #20]
 80113fc:	2b00      	cmp	r3, #0
 80113fe:	bf08      	it	eq
 8011400:	4613      	moveq	r3, r2
 8011402:	480a      	ldr	r0, [pc, #40]	; (801142c <MDNS::Print()+0x78>)
 8011404:	8ba2      	ldrh	r2, [r4, #28]
 8011406:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801140a:	f7f8 b901 	b.w	8009610 <printf>
 801140e:	bd10      	pop	{r4, pc}
 8011410:	0801885e 	stmdaeq	r1, {r1, r2, r3, r4, r6, fp, pc}
 8011414:	2000000c 	andcs	r0, r0, ip
 8011418:	08018864 	stmdaeq	r1, {r2, r5, r6, fp, pc}
 801141c:	2001d2ac 	andcs	sp, r1, ip, lsr #5
 8011420:	2001d084 	andcs	sp, r1, r4, lsl #1
 8011424:	08018872 	stmdaeq	r1, {r1, r4, r5, r6, fp, pc}
 8011428:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 801142c:	0801887e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, fp, pc}

08011430 <strncpy.constprop.0.isra.0>:
 8011430:	233f      	movs	r3, #63	; 0x3f
 8011432:	3901      	subs	r1, #1
 8011434:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8011438:	b92a      	cbnz	r2, 8011446 <strncpy.constprop.0.isra.0+0x16>
 801143a:	4403      	add	r3, r0
 801143c:	4298      	cmp	r0, r3
 801143e:	d006      	beq.n	801144e <strncpy.constprop.0.isra.0+0x1e>
 8011440:	f800 2b01 	strb.w	r2, [r0], #1
 8011444:	e7fa      	b.n	801143c <strncpy.constprop.0.isra.0+0xc>
 8011446:	3b01      	subs	r3, #1
 8011448:	f800 2b01 	strb.w	r2, [r0], #1
 801144c:	d1f2      	bne.n	8011434 <strncpy.constprop.0.isra.0+0x4>
 801144e:	4770      	bx	lr

08011450 <Network::Network()>:
 8011450:	4a12      	ldr	r2, [pc, #72]	; (801149c <Network::Network()+0x4c>)
 8011452:	2300      	movs	r3, #0
 8011454:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8011458:	6010      	str	r0, [r2, #0]
 801145a:	2201      	movs	r2, #1
 801145c:	e9c0 2100 	strd	r2, r1, [r0]
 8011460:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8011464:	2200      	movs	r2, #0
 8011466:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 801146a:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801146e:	490c      	ldr	r1, [pc, #48]	; (80114a0 <Network::Network()+0x50>)
 8011470:	6102      	str	r2, [r0, #16]
 8011472:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 8011476:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 801147a:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 801147e:	61c3      	str	r3, [r0, #28]
 8011480:	f880 3020 	strb.w	r3, [r0, #32]
 8011484:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8011488:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 801148c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011490:	f802 3f01 	strb.w	r3, [r2, #1]!
 8011494:	2b00      	cmp	r3, #0
 8011496:	d1f9      	bne.n	801148c <Network::Network()+0x3c>
 8011498:	4770      	bx	lr
 801149a:	bf00      	nop
 801149c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 80114a0:	08018889 	stmdaeq	r1, {r0, r3, r7, fp, pc}

080114a4 <Network::Shutdown()>:
 80114a4:	b508      	push	{r3, lr}
 80114a6:	30bc      	adds	r0, #188	; 0xbc
 80114a8:	f001 fc86 	bl	8012db8 <NetworkDisplay::ShowShutdown()>
 80114ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80114b0:	f7f5 beca 	b.w	8007248 <net_shutdown>

080114b4 <Network::Begin(unsigned short)>:
 80114b4:	4608      	mov	r0, r1
 80114b6:	f7ff ba9f 	b.w	80109f8 <udp_bind>

080114ba <Network::End(unsigned short)>:
 80114ba:	4608      	mov	r0, r1
 80114bc:	f7ff bab6 	b.w	8010a2c <udp_unbind>

080114c0 <Network::MacAddressCopyTo(unsigned char*)>:
 80114c0:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 80114c4:	3901      	subs	r1, #1
 80114c6:	30a5      	adds	r0, #165	; 0xa5
 80114c8:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80114cc:	4283      	cmp	r3, r0
 80114ce:	f801 2f01 	strb.w	r2, [r1, #1]!
 80114d2:	d1f9      	bne.n	80114c8 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 80114d4:	4770      	bx	lr

080114d6 <Network::JoinGroup(int, unsigned int)>:
 80114d6:	4610      	mov	r0, r2
 80114d8:	f001 b816 	b.w	8012508 <igmp_join>

080114dc <Network::LeaveGroup(int, unsigned int)>:
 80114dc:	4610      	mov	r0, r2
 80114de:	f001 b83f 	b.w	8012560 <igmp_leave>

080114e2 <Network::SetDefaultIp()>:
 80114e2:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80114e6:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 80114ea:	041b      	lsls	r3, r3, #16
 80114ec:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80114f0:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 80114f4:	3302      	adds	r3, #2
 80114f6:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 80114fa:	22ff      	movs	r2, #255	; 0xff
 80114fc:	6143      	str	r3, [r0, #20]
 80114fe:	e9c0 3206 	strd	r3, r2, [r0, #24]
 8011502:	4770      	bx	lr

08011504 <Network::Init(NetworkParamsStore*)>:
 8011504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011508:	b0a5      	sub	sp, #148	; 0x94
 801150a:	4604      	mov	r4, r0
 801150c:	a80b      	add	r0, sp, #44	; 0x2c
 801150e:	f000 fae9 	bl	8011ae4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8011512:	a80b      	add	r0, sp, #44	; 0x2c
 8011514:	f000 faf2 	bl	8011afc <NetworkParams::Load()>
 8011518:	b110      	cbz	r0, 8011520 <Network::Init(NetworkParamsStore*)+0x1c>
 801151a:	a80b      	add	r0, sp, #44	; 0x2c
 801151c:	f000 fcc5 	bl	8011eaa <NetworkParams::Dump()>
 8011520:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8011524:	4628      	mov	r0, r5
 8011526:	f001 fc29 	bl	8012d7c <NetworkDisplay::ShowEmacStart()>
 801152a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801152c:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8011530:	9308      	str	r3, [sp, #32]
 8011532:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011534:	4630      	mov	r0, r6
 8011536:	9309      	str	r3, [sp, #36]	; 0x24
 8011538:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801153a:	f104 0720 	add.w	r7, r4, #32
 801153e:	930a      	str	r3, [sp, #40]	; 0x28
 8011540:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011544:	7163      	strb	r3, [r4, #5]
 8011546:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011548:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 801154c:	bf18      	it	ne
 801154e:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8011552:	061b      	lsls	r3, r3, #24
 8011554:	bf54      	ite	pl
 8011556:	2300      	movpl	r3, #0
 8011558:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 801155c:	60e2      	str	r2, [r4, #12]
 801155e:	6123      	str	r3, [r4, #16]
 8011560:	f003 ffc2 	bl	80154e8 <emac_start(unsigned char*)>
 8011564:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 8011568:	2b00      	cmp	r3, #0
 801156a:	f040 80c7 	bne.w	80116fc <Network::Init(NetworkParamsStore*)+0x1f8>
 801156e:	4984      	ldr	r1, [pc, #528]	; (8011780 <Network::Init(NetworkParamsStore*)+0x27c>)
 8011570:	f104 001f 	add.w	r0, r4, #31
 8011574:	f811 2b01 	ldrb.w	r2, [r1], #1
 8011578:	f103 0c01 	add.w	ip, r3, #1
 801157c:	2a00      	cmp	r2, #0
 801157e:	f040 80b9 	bne.w	80116f4 <Network::Init(NetworkParamsStore*)+0x1f0>
 8011582:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 8011586:	18e1      	adds	r1, r4, r3
 8011588:	0910      	lsrs	r0, r2, #4
 801158a:	2a9f      	cmp	r2, #159	; 0x9f
 801158c:	f002 020f 	and.w	r2, r2, #15
 8011590:	bf94      	ite	ls
 8011592:	3030      	addls	r0, #48	; 0x30
 8011594:	3037      	addhi	r0, #55	; 0x37
 8011596:	2a09      	cmp	r2, #9
 8011598:	bf94      	ite	ls
 801159a:	3230      	addls	r2, #48	; 0x30
 801159c:	3237      	addhi	r2, #55	; 0x37
 801159e:	44a4      	add	ip, r4
 80115a0:	f881 0020 	strb.w	r0, [r1, #32]
 80115a4:	f88c 2020 	strb.w	r2, [ip, #32]
 80115a8:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 80115ac:	f103 0802 	add.w	r8, r3, #2
 80115b0:	0910      	lsrs	r0, r2, #4
 80115b2:	2a9f      	cmp	r2, #159	; 0x9f
 80115b4:	f002 020f 	and.w	r2, r2, #15
 80115b8:	bf94      	ite	ls
 80115ba:	3030      	addls	r0, #48	; 0x30
 80115bc:	3037      	addhi	r0, #55	; 0x37
 80115be:	f103 0e03 	add.w	lr, r3, #3
 80115c2:	2a09      	cmp	r2, #9
 80115c4:	eb04 0c08 	add.w	ip, r4, r8
 80115c8:	f88c 0020 	strb.w	r0, [ip, #32]
 80115cc:	bf94      	ite	ls
 80115ce:	3230      	addls	r2, #48	; 0x30
 80115d0:	3237      	addhi	r2, #55	; 0x37
 80115d2:	eb04 000e 	add.w	r0, r4, lr
 80115d6:	f880 2020 	strb.w	r2, [r0, #32]
 80115da:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 80115de:	f103 0c04 	add.w	ip, r3, #4
 80115e2:	0910      	lsrs	r0, r2, #4
 80115e4:	2a9f      	cmp	r2, #159	; 0x9f
 80115e6:	f002 020f 	and.w	r2, r2, #15
 80115ea:	bf94      	ite	ls
 80115ec:	3030      	addls	r0, #48	; 0x30
 80115ee:	3037      	addhi	r0, #55	; 0x37
 80115f0:	3305      	adds	r3, #5
 80115f2:	2a09      	cmp	r2, #9
 80115f4:	4423      	add	r3, r4
 80115f6:	44a4      	add	ip, r4
 80115f8:	bf94      	ite	ls
 80115fa:	3230      	addls	r2, #48	; 0x30
 80115fc:	3237      	addhi	r2, #55	; 0x37
 80115fe:	f88c 0020 	strb.w	r0, [ip, #32]
 8011602:	f883 2020 	strb.w	r2, [r3, #32]
 8011606:	2300      	movs	r3, #0
 8011608:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 801160c:	f004 f816 	bl	801563c <net::link_register_read()>
 8011610:	7963      	ldrb	r3, [r4, #5]
 8011612:	6020      	str	r0, [r4, #0]
 8011614:	2800      	cmp	r0, #0
 8011616:	f040 809c 	bne.w	8011752 <Network::Init(NetworkParamsStore*)+0x24e>
 801161a:	2b00      	cmp	r3, #0
 801161c:	f040 80aa 	bne.w	8011774 <Network::Init(NetworkParamsStore*)+0x270>
 8011620:	9b08      	ldr	r3, [sp, #32]
 8011622:	2b00      	cmp	r3, #0
 8011624:	d173      	bne.n	801170e <Network::Init(NetworkParamsStore*)+0x20a>
 8011626:	4620      	mov	r0, r4
 8011628:	f7ff ff5b 	bl	80114e2 <Network::SetDefaultIp()>
 801162c:	6963      	ldr	r3, [r4, #20]
 801162e:	69e2      	ldr	r2, [r4, #28]
 8011630:	9308      	str	r3, [sp, #32]
 8011632:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8011636:	1de3      	adds	r3, r4, #7
 8011638:	f104 0905 	add.w	r9, r4, #5
 801163c:	9302      	str	r3, [sp, #8]
 801163e:	9300      	str	r3, [sp, #0]
 8011640:	463a      	mov	r2, r7
 8011642:	464b      	mov	r3, r9
 8011644:	4630      	mov	r0, r6
 8011646:	a908      	add	r1, sp, #32
 8011648:	f7f5 fdae 	bl	80071a8 <net_init>
 801164c:	79e3      	ldrb	r3, [r4, #7]
 801164e:	b11b      	cbz	r3, 8011658 <Network::Init(NetworkParamsStore*)+0x154>
 8011650:	2104      	movs	r1, #4
 8011652:	4628      	mov	r0, r5
 8011654:	f001 fbb6 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011658:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801165c:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 8011660:	9304      	str	r3, [sp, #16]
 8011662:	233c      	movs	r3, #60	; 0x3c
 8011664:	fb03 f30a 	mul.w	r3, r3, sl
 8011668:	f8df 8118 	ldr.w	r8, [pc, #280]	; 8011784 <Network::Init(NetworkParamsStore*)+0x280>
 801166c:	f8df b118 	ldr.w	fp, [pc, #280]	; 8011788 <Network::Init(NetworkParamsStore*)+0x284>
 8011670:	9303      	str	r3, [sp, #12]
 8011672:	79e3      	ldrb	r3, [r4, #7]
 8011674:	b393      	cbz	r3, 80116dc <Network::Init(NetworkParamsStore*)+0x1d8>
 8011676:	f1ba 0f00 	cmp.w	sl, #0
 801167a:	d02f      	beq.n	80116dc <Network::Init(NetworkParamsStore*)+0x1d8>
 801167c:	9b04      	ldr	r3, [sp, #16]
 801167e:	b36b      	cbz	r3, 80116dc <Network::Init(NetworkParamsStore*)+0x1d8>
 8011680:	2104      	movs	r1, #4
 8011682:	f8d8 0000 	ldr.w	r0, [r8]
 8011686:	f002 f9c3 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 801168a:	2103      	movs	r1, #3
 801168c:	4628      	mov	r0, r5
 801168e:	f001 fb99 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011692:	2000      	movs	r0, #0
 8011694:	f002 fc7a 	bl	8013f8c <time>
 8011698:	9005      	str	r0, [sp, #20]
 801169a:	2000      	movs	r0, #0
 801169c:	f002 fc76 	bl	8013f8c <time>
 80116a0:	9b05      	ldr	r3, [sp, #20]
 80116a2:	493a      	ldr	r1, [pc, #232]	; (801178c <Network::Init(NetworkParamsStore*)+0x288>)
 80116a4:	1ac0      	subs	r0, r0, r3
 80116a6:	9b03      	ldr	r3, [sp, #12]
 80116a8:	4298      	cmp	r0, r3
 80116aa:	db38      	blt.n	801171e <Network::Init(NetworkParamsStore*)+0x21a>
 80116ac:	2101      	movs	r1, #1
 80116ae:	4628      	mov	r0, r5
 80116b0:	f001 fb88 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80116b4:	2101      	movs	r1, #1
 80116b6:	f8d8 0000 	ldr.w	r0, [r8]
 80116ba:	f002 f9a9 	bl	8013a10 <LedBlink::SetMode(ledblink::Mode)>
 80116be:	2301      	movs	r3, #1
 80116c0:	7163      	strb	r3, [r4, #5]
 80116c2:	2300      	movs	r3, #0
 80116c4:	71e3      	strb	r3, [r4, #7]
 80116c6:	9b02      	ldr	r3, [sp, #8]
 80116c8:	463a      	mov	r2, r7
 80116ca:	9300      	str	r3, [sp, #0]
 80116cc:	4630      	mov	r0, r6
 80116ce:	464b      	mov	r3, r9
 80116d0:	a908      	add	r1, sp, #32
 80116d2:	f7f5 fd69 	bl	80071a8 <net_init>
 80116d6:	7963      	ldrb	r3, [r4, #5]
 80116d8:	2b00      	cmp	r3, #0
 80116da:	d0ca      	beq.n	8011672 <Network::Init(NetworkParamsStore*)+0x16e>
 80116dc:	9b08      	ldr	r3, [sp, #32]
 80116de:	4628      	mov	r0, r5
 80116e0:	6163      	str	r3, [r4, #20]
 80116e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80116e4:	61e3      	str	r3, [r4, #28]
 80116e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80116e8:	61a3      	str	r3, [r4, #24]
 80116ea:	f001 fb4d 	bl	8012d88 <NetworkDisplay::ShowIp()>
 80116ee:	b025      	add	sp, #148	; 0x94
 80116f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116f4:	4663      	mov	r3, ip
 80116f6:	f800 2f01 	strb.w	r2, [r0, #1]!
 80116fa:	e73b      	b.n	8011574 <Network::Init(NetworkParamsStore*)+0x70>
 80116fc:	4638      	mov	r0, r7
 80116fe:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 8011702:	f7ff fe95 	bl	8011430 <strncpy.constprop.0.isra.0>
 8011706:	2300      	movs	r3, #0
 8011708:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 801170c:	e77e      	b.n	801160c <Network::Init(NetworkParamsStore*)+0x108>
 801170e:	69e1      	ldr	r1, [r4, #28]
 8011710:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8011714:	4053      	eors	r3, r2
 8011716:	420b      	tst	r3, r1
 8011718:	bf18      	it	ne
 801171a:	920a      	strne	r2, [sp, #40]	; 0x28
 801171c:	e78b      	b.n	8011636 <Network::Init(NetworkParamsStore*)+0x132>
 801171e:	f8d8 3000 	ldr.w	r3, [r8]
 8011722:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8011726:	f1bc 0f00 	cmp.w	ip, #0
 801172a:	d0b6      	beq.n	801169a <Network::Init(NetworkParamsStore*)+0x196>
 801172c:	6808      	ldr	r0, [r1, #0]
 801172e:	695a      	ldr	r2, [r3, #20]
 8011730:	1a80      	subs	r0, r0, r2
 8011732:	4584      	cmp	ip, r0
 8011734:	d8b1      	bhi.n	801169a <Network::Init(NetworkParamsStore*)+0x196>
 8011736:	6808      	ldr	r0, [r1, #0]
 8011738:	6158      	str	r0, [r3, #20]
 801173a:	6918      	ldr	r0, [r3, #16]
 801173c:	2801      	cmp	r0, #1
 801173e:	f080 0201 	eor.w	r2, r0, #1
 8011742:	611a      	str	r2, [r3, #16]
 8011744:	bf16      	itet	ne
 8011746:	2301      	movne	r3, #1
 8011748:	f8cb 0014 	streq.w	r0, [fp, #20]
 801174c:	f8cb 3010 	strne.w	r3, [fp, #16]
 8011750:	e7a3      	b.n	801169a <Network::Init(NetworkParamsStore*)+0x196>
 8011752:	b11b      	cbz	r3, 801175c <Network::Init(NetworkParamsStore*)+0x258>
 8011754:	2300      	movs	r3, #0
 8011756:	e9c4 3306 	strd	r3, r3, [r4, #24]
 801175a:	9308      	str	r3, [sp, #32]
 801175c:	2300      	movs	r3, #0
 801175e:	f88d 301f 	strb.w	r3, [sp, #31]
 8011762:	f10d 031f 	add.w	r3, sp, #31
 8011766:	463a      	mov	r2, r7
 8011768:	4630      	mov	r0, r6
 801176a:	9300      	str	r3, [sp, #0]
 801176c:	a908      	add	r1, sp, #32
 801176e:	f7f5 fd1b 	bl	80071a8 <net_init>
 8011772:	e7b3      	b.n	80116dc <Network::Init(NetworkParamsStore*)+0x1d8>
 8011774:	2101      	movs	r1, #1
 8011776:	4628      	mov	r0, r5
 8011778:	f001 fb24 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801177c:	e75b      	b.n	8011636 <Network::Init(NetworkParamsStore*)+0x132>
 801177e:	bf00      	nop
 8011780:	0801888e 	stmdaeq	r1, {r1, r2, r3, r7, fp, pc}
 8011784:	2001d978 	andcs	sp, r1, r8, ror r9
 8011788:	40011000 	andmi	r1, r1, r0
 801178c:	2001d994 	mulcs	r1, r4, r9

08011790 <Network::SetIp(unsigned int)>:
 8011790:	7943      	ldrb	r3, [r0, #5]
 8011792:	b570      	push	{r4, r5, r6, lr}
 8011794:	4604      	mov	r4, r0
 8011796:	460d      	mov	r5, r1
 8011798:	2600      	movs	r6, #0
 801179a:	b113      	cbz	r3, 80117a2 <Network::SetIp(unsigned int)+0x12>
 801179c:	7146      	strb	r6, [r0, #5]
 801179e:	f7fe fec9 	bl	8010534 <net_dhcp_release>
 80117a2:	71e6      	strb	r6, [r4, #7]
 80117a4:	b975      	cbnz	r5, 80117c4 <Network::SetIp(unsigned int)+0x34>
 80117a6:	4620      	mov	r0, r4
 80117a8:	f7ff fe9b 	bl	80114e2 <Network::SetDefaultIp()>
 80117ac:	6960      	ldr	r0, [r4, #20]
 80117ae:	f7fe fe85 	bl	80104bc <net_set_ip>
 80117b2:	34bc      	adds	r4, #188	; 0xbc
 80117b4:	4620      	mov	r0, r4
 80117b6:	f001 fae7 	bl	8012d88 <NetworkDisplay::ShowIp()>
 80117ba:	4620      	mov	r0, r4
 80117bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80117c0:	f001 bae8 	b.w	8012d94 <NetworkDisplay::ShowNetMask()>
 80117c4:	4628      	mov	r0, r5
 80117c6:	f7fe fe79 	bl	80104bc <net_set_ip>
 80117ca:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80117ce:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80117d2:	2800      	cmp	r0, #0
 80117d4:	d0ed      	beq.n	80117b2 <Network::SetIp(unsigned int)+0x22>
 80117d6:	6803      	ldr	r3, [r0, #0]
 80117d8:	4629      	mov	r1, r5
 80117da:	689b      	ldr	r3, [r3, #8]
 80117dc:	4798      	blx	r3
 80117de:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80117e2:	2100      	movs	r1, #0
 80117e4:	6803      	ldr	r3, [r0, #0]
 80117e6:	699b      	ldr	r3, [r3, #24]
 80117e8:	4798      	blx	r3
 80117ea:	e7e2      	b.n	80117b2 <Network::SetIp(unsigned int)+0x22>

080117ec <Network::SetNetmask(unsigned int)>:
 80117ec:	69c2      	ldr	r2, [r0, #28]
 80117ee:	b510      	push	{r4, lr}
 80117f0:	428a      	cmp	r2, r1
 80117f2:	4604      	mov	r4, r0
 80117f4:	d00f      	beq.n	8011816 <Network::SetNetmask(unsigned int)+0x2a>
 80117f6:	61c1      	str	r1, [r0, #28]
 80117f8:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80117fc:	b110      	cbz	r0, 8011804 <Network::SetNetmask(unsigned int)+0x18>
 80117fe:	6803      	ldr	r3, [r0, #0]
 8011800:	68db      	ldr	r3, [r3, #12]
 8011802:	4798      	blx	r3
 8011804:	34bc      	adds	r4, #188	; 0xbc
 8011806:	4620      	mov	r0, r4
 8011808:	f001 fabe 	bl	8012d88 <NetworkDisplay::ShowIp()>
 801180c:	4620      	mov	r0, r4
 801180e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011812:	f001 babf 	b.w	8012d94 <NetworkDisplay::ShowNetMask()>
 8011816:	bd10      	pop	{r4, pc}

08011818 <Network::SetHostName(char const*)>:
 8011818:	b570      	push	{r4, r5, r6, lr}
 801181a:	4604      	mov	r4, r0
 801181c:	f100 0520 	add.w	r5, r0, #32
 8011820:	4628      	mov	r0, r5
 8011822:	f7ff fe05 	bl	8011430 <strncpy.constprop.0.isra.0>
 8011826:	2300      	movs	r3, #0
 8011828:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 801182c:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8011830:	b158      	cbz	r0, 801184a <Network::SetHostName(char const*)+0x32>
 8011832:	6803      	ldr	r3, [r0, #0]
 8011834:	695e      	ldr	r6, [r3, #20]
 8011836:	462b      	mov	r3, r5
 8011838:	461a      	mov	r2, r3
 801183a:	7811      	ldrb	r1, [r2, #0]
 801183c:	3301      	adds	r3, #1
 801183e:	2900      	cmp	r1, #0
 8011840:	d1fa      	bne.n	8011838 <Network::SetHostName(char const*)+0x20>
 8011842:	1b52      	subs	r2, r2, r5
 8011844:	4629      	mov	r1, r5
 8011846:	b292      	uxth	r2, r2
 8011848:	47b0      	blx	r6
 801184a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801184e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011852:	f001 baab 	b.w	8012dac <NetworkDisplay::ShowHostName()>

08011856 <Network::SetZeroconf()>:
 8011856:	b530      	push	{r4, r5, lr}
 8011858:	b085      	sub	sp, #20
 801185a:	4604      	mov	r4, r0
 801185c:	a801      	add	r0, sp, #4
 801185e:	f7fe fe73 	bl	8010548 <net_set_zeroconf>
 8011862:	71e0      	strb	r0, [r4, #7]
 8011864:	b170      	cbz	r0, 8011884 <Network::SetZeroconf()+0x2e>
 8011866:	9b01      	ldr	r3, [sp, #4]
 8011868:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 801186c:	6163      	str	r3, [r4, #20]
 801186e:	9b02      	ldr	r3, [sp, #8]
 8011870:	61e3      	str	r3, [r4, #28]
 8011872:	9b03      	ldr	r3, [sp, #12]
 8011874:	61a3      	str	r3, [r4, #24]
 8011876:	2300      	movs	r3, #0
 8011878:	7163      	strb	r3, [r4, #5]
 801187a:	b118      	cbz	r0, 8011884 <Network::SetZeroconf()+0x2e>
 801187c:	6803      	ldr	r3, [r0, #0]
 801187e:	2101      	movs	r1, #1
 8011880:	699b      	ldr	r3, [r3, #24]
 8011882:	4798      	blx	r3
 8011884:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8011888:	4628      	mov	r0, r5
 801188a:	f001 fa7d 	bl	8012d88 <NetworkDisplay::ShowIp()>
 801188e:	4628      	mov	r0, r5
 8011890:	f001 fa80 	bl	8012d94 <NetworkDisplay::ShowNetMask()>
 8011894:	79e0      	ldrb	r0, [r4, #7]
 8011896:	b005      	add	sp, #20
 8011898:	bd30      	pop	{r4, r5, pc}
	...

0801189c <Network::EnableDhcp()>:
 801189c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801189e:	4e25      	ldr	r6, [pc, #148]	; (8011934 <Network::EnableDhcp()+0x98>)
 80118a0:	4604      	mov	r4, r0
 80118a2:	6833      	ldr	r3, [r6, #0]
 80118a4:	b085      	sub	sp, #20
 80118a6:	781f      	ldrb	r7, [r3, #0]
 80118a8:	b137      	cbz	r7, 80118b8 <Network::EnableDhcp()+0x1c>
 80118aa:	2200      	movs	r2, #0
 80118ac:	2104      	movs	r1, #4
 80118ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80118b2:	701a      	strb	r2, [r3, #0]
 80118b4:	f002 fd52 	bl	801435c <fwdgt_config>
 80118b8:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80118bc:	2101      	movs	r1, #1
 80118be:	4628      	mov	r0, r5
 80118c0:	f001 fa80 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80118c4:	1de2      	adds	r2, r4, #7
 80118c6:	f104 0120 	add.w	r1, r4, #32
 80118ca:	a801      	add	r0, sp, #4
 80118cc:	f7fe fe06 	bl	80104dc <net_set_dhcp>
 80118d0:	79e3      	ldrb	r3, [r4, #7]
 80118d2:	7160      	strb	r0, [r4, #5]
 80118d4:	b35b      	cbz	r3, 801192e <Network::EnableDhcp()+0x92>
 80118d6:	2104      	movs	r1, #4
 80118d8:	4628      	mov	r0, r5
 80118da:	f001 fa73 	bl	8012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80118de:	b16f      	cbz	r7, 80118fc <Network::EnableDhcp()+0x60>
 80118e0:	2102      	movs	r1, #2
 80118e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80118e6:	6836      	ldr	r6, [r6, #0]
 80118e8:	f002 fd38 	bl	801435c <fwdgt_config>
 80118ec:	2801      	cmp	r0, #1
 80118ee:	bf0c      	ite	eq
 80118f0:	2301      	moveq	r3, #1
 80118f2:	2300      	movne	r3, #0
 80118f4:	7033      	strb	r3, [r6, #0]
 80118f6:	d101      	bne.n	80118fc <Network::EnableDhcp()+0x60>
 80118f8:	f002 fd20 	bl	801433c <fwdgt_enable>
 80118fc:	9b01      	ldr	r3, [sp, #4]
 80118fe:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8011902:	6163      	str	r3, [r4, #20]
 8011904:	9b02      	ldr	r3, [sp, #8]
 8011906:	61e3      	str	r3, [r4, #28]
 8011908:	9b03      	ldr	r3, [sp, #12]
 801190a:	61a3      	str	r3, [r4, #24]
 801190c:	b118      	cbz	r0, 8011916 <Network::EnableDhcp()+0x7a>
 801190e:	6803      	ldr	r3, [r0, #0]
 8011910:	7961      	ldrb	r1, [r4, #5]
 8011912:	699b      	ldr	r3, [r3, #24]
 8011914:	4798      	blx	r3
 8011916:	4628      	mov	r0, r5
 8011918:	f001 fa36 	bl	8012d88 <NetworkDisplay::ShowIp()>
 801191c:	4628      	mov	r0, r5
 801191e:	f001 fa39 	bl	8012d94 <NetworkDisplay::ShowNetMask()>
 8011922:	4628      	mov	r0, r5
 8011924:	f001 fa3c 	bl	8012da0 <NetworkDisplay::ShowGatewayIp()>
 8011928:	7960      	ldrb	r0, [r4, #5]
 801192a:	b005      	add	sp, #20
 801192c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801192e:	2102      	movs	r1, #2
 8011930:	e7d2      	b.n	80118d8 <Network::EnableDhcp()+0x3c>
 8011932:	bf00      	nop
 8011934:	2001d97c 	andcs	sp, r1, ip, ror r9

08011938 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8011938:	b109      	cbz	r1, 801193e <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801193a:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 801193e:	b10a      	cbz	r2, 8011944 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8011940:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8011944:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8011948:	f043 0303 	orr.w	r3, r3, #3
 801194c:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 8011950:	4770      	bx	lr

08011952 <Network::ApplyQueuedConfig()>:
 8011952:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8011956:	b510      	push	{r4, lr}
 8011958:	4604      	mov	r4, r0
 801195a:	b3c3      	cbz	r3, 80119ce <Network::ApplyQueuedConfig()+0x7c>
 801195c:	079a      	lsls	r2, r3, #30
 801195e:	d01a      	beq.n	8011996 <Network::ApplyQueuedConfig()+0x44>
 8011960:	079b      	lsls	r3, r3, #30
 8011962:	d509      	bpl.n	8011978 <Network::ApplyQueuedConfig()+0x26>
 8011964:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 8011968:	f7ff ff40 	bl	80117ec <Network::SetNetmask(unsigned int)>
 801196c:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8011970:	f023 0302 	bic.w	r3, r3, #2
 8011974:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8011978:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801197c:	07d9      	lsls	r1, r3, #31
 801197e:	d50a      	bpl.n	8011996 <Network::ApplyQueuedConfig()+0x44>
 8011980:	4620      	mov	r0, r4
 8011982:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 8011986:	f7ff ff03 	bl	8011790 <Network::SetIp(unsigned int)>
 801198a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801198e:	f023 0301 	bic.w	r3, r3, #1
 8011992:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8011996:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801199a:	075a      	lsls	r2, r3, #29
 801199c:	d508      	bpl.n	80119b0 <Network::ApplyQueuedConfig()+0x5e>
 801199e:	4620      	mov	r0, r4
 80119a0:	f7ff ff7c 	bl	801189c <Network::EnableDhcp()>
 80119a4:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80119a8:	f023 0304 	bic.w	r3, r3, #4
 80119ac:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80119b0:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80119b4:	071b      	lsls	r3, r3, #28
 80119b6:	d508      	bpl.n	80119ca <Network::ApplyQueuedConfig()+0x78>
 80119b8:	4620      	mov	r0, r4
 80119ba:	f7ff ff4c 	bl	8011856 <Network::SetZeroconf()>
 80119be:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80119c2:	f023 0308 	bic.w	r3, r3, #8
 80119c6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80119ca:	2001      	movs	r0, #1
 80119cc:	e000      	b.n	80119d0 <Network::ApplyQueuedConfig()+0x7e>
 80119ce:	4618      	mov	r0, r3
 80119d0:	bd10      	pop	{r4, pc}
	...

080119d4 <Network::Print()>:
 80119d4:	b530      	push	{r4, r5, lr}
 80119d6:	4604      	mov	r4, r0
 80119d8:	b085      	sub	sp, #20
 80119da:	4832      	ldr	r0, [pc, #200]	; (8011aa4 <Network::Print()+0xd0>)
 80119dc:	f7f7 fe18 	bl	8009610 <printf>
 80119e0:	f104 0120 	add.w	r1, r4, #32
 80119e4:	4830      	ldr	r0, [pc, #192]	; (8011aa8 <Network::Print()+0xd4>)
 80119e6:	f7f7 fe13 	bl	8009610 <printf>
 80119ea:	68a1      	ldr	r1, [r4, #8]
 80119ec:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 80119f0:	482e      	ldr	r0, [pc, #184]	; (8011aac <Network::Print()+0xd8>)
 80119f2:	f7f7 fe0d 	bl	8009610 <printf>
 80119f6:	69e0      	ldr	r0, [r4, #28]
 80119f8:	f004 fb96 	bl	8016128 <__popcountsi2>
 80119fc:	6965      	ldr	r5, [r4, #20]
 80119fe:	9001      	str	r0, [sp, #4]
 8011a00:	0e2b      	lsrs	r3, r5, #24
 8011a02:	9300      	str	r3, [sp, #0]
 8011a04:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8011a08:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8011a0c:	b2e9      	uxtb	r1, r5
 8011a0e:	4828      	ldr	r0, [pc, #160]	; (8011ab0 <Network::Print()+0xdc>)
 8011a10:	f7f7 fdfe 	bl	8009610 <printf>
 8011a14:	69e1      	ldr	r1, [r4, #28]
 8011a16:	4827      	ldr	r0, [pc, #156]	; (8011ab4 <Network::Print()+0xe0>)
 8011a18:	0e0b      	lsrs	r3, r1, #24
 8011a1a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011a1e:	9300      	str	r3, [sp, #0]
 8011a20:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011a24:	b2c9      	uxtb	r1, r1
 8011a26:	f7f7 fdf3 	bl	8009610 <printf>
 8011a2a:	69a1      	ldr	r1, [r4, #24]
 8011a2c:	4822      	ldr	r0, [pc, #136]	; (8011ab8 <Network::Print()+0xe4>)
 8011a2e:	0e0b      	lsrs	r3, r1, #24
 8011a30:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011a34:	9300      	str	r3, [sp, #0]
 8011a36:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011a3a:	b2c9      	uxtb	r1, r1
 8011a3c:	f7f7 fde8 	bl	8009610 <printf>
 8011a40:	69e3      	ldr	r3, [r4, #28]
 8011a42:	6961      	ldr	r1, [r4, #20]
 8011a44:	481d      	ldr	r0, [pc, #116]	; (8011abc <Network::Print()+0xe8>)
 8011a46:	ea61 0103 	orn	r1, r1, r3
 8011a4a:	0e0b      	lsrs	r3, r1, #24
 8011a4c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011a50:	9300      	str	r3, [sp, #0]
 8011a52:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011a56:	b2c9      	uxtb	r1, r1
 8011a58:	f7f7 fdda 	bl	8009610 <printf>
 8011a5c:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8011a60:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8011a64:	9302      	str	r3, [sp, #8]
 8011a66:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8011a6a:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8011a6e:	9301      	str	r3, [sp, #4]
 8011a70:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8011a74:	4812      	ldr	r0, [pc, #72]	; (8011ac0 <Network::Print()+0xec>)
 8011a76:	9300      	str	r3, [sp, #0]
 8011a78:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8011a7c:	f7f7 fdc8 	bl	8009610 <printf>
 8011a80:	4b10      	ldr	r3, [pc, #64]	; (8011ac4 <Network::Print()+0xf0>)
 8011a82:	681b      	ldr	r3, [r3, #0]
 8011a84:	79da      	ldrb	r2, [r3, #7]
 8011a86:	b952      	cbnz	r2, 8011a9e <Network::Print()+0xca>
 8011a88:	795b      	ldrb	r3, [r3, #5]
 8011a8a:	2b00      	cmp	r3, #0
 8011a8c:	bf14      	ite	ne
 8011a8e:	2144      	movne	r1, #68	; 0x44
 8011a90:	2153      	moveq	r1, #83	; 0x53
 8011a92:	480d      	ldr	r0, [pc, #52]	; (8011ac8 <Network::Print()+0xf4>)
 8011a94:	b005      	add	sp, #20
 8011a96:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011a9a:	f7f7 bdb9 	b.w	8009610 <printf>
 8011a9e:	215a      	movs	r1, #90	; 0x5a
 8011aa0:	e7f7      	b.n	8011a92 <Network::Print()+0xbe>
 8011aa2:	bf00      	nop
 8011aa4:	0801889a 	stmdaeq	r1, {r1, r3, r4, r7, fp, pc}
 8011aa8:	080188a3 	stmdaeq	r1, {r0, r1, r5, r7, fp, pc}
 8011aac:	080188b4 	stmdaeq	r1, {r2, r4, r5, r7, fp, pc}
 8011ab0:	080188c9 	stmdaeq	r1, {r0, r3, r6, r7, fp, pc}
 8011ab4:	080188e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, fp, pc}
 8011ab8:	08018900 	stmdaeq	r1, {r8, fp, pc}
 8011abc:	0801891a 	stmdaeq	r1, {r1, r3, r4, r8, fp, pc}
 8011ac0:	08018934 	stmdaeq	r1, {r2, r4, r5, r8, fp, pc}
 8011ac4:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8011ac8:	08018960 	stmdaeq	r1, {r5, r6, r8, fp, pc}

08011acc <Network::TcpBegin(unsigned short)>:
 8011acc:	4608      	mov	r0, r1
 8011ace:	f7fe becd 	b.w	801086c <tcp_begin>

08011ad2 <Network::TcpRead(int, unsigned char const**)>:
 8011ad2:	4608      	mov	r0, r1
 8011ad4:	4611      	mov	r1, r2
 8011ad6:	f7fe bf07 	b.w	80108e8 <tcp_read>

08011ada <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8011ada:	4608      	mov	r0, r1
 8011adc:	4611      	mov	r1, r2
 8011ade:	461a      	mov	r2, r3
 8011ae0:	f7fe bede 	b.w	80108a0 <tcp_write>

08011ae4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8011ae4:	b510      	push	{r4, lr}
 8011ae6:	225e      	movs	r2, #94	; 0x5e
 8011ae8:	4604      	mov	r4, r0
 8011aea:	f840 1b04 	str.w	r1, [r0], #4
 8011aee:	2100      	movs	r1, #0
 8011af0:	f002 f944 	bl	8013d7c <memset>
 8011af4:	2301      	movs	r3, #1
 8011af6:	4620      	mov	r0, r4
 8011af8:	7623      	strb	r3, [r4, #24]
 8011afa:	bd10      	pop	{r4, pc}

08011afc <NetworkParams::Load()>:
 8011afc:	b508      	push	{r3, lr}
 8011afe:	2300      	movs	r3, #0
 8011b00:	4601      	mov	r1, r0
 8011b02:	6043      	str	r3, [r0, #4]
 8011b04:	6800      	ldr	r0, [r0, #0]
 8011b06:	b120      	cbz	r0, 8011b12 <NetworkParams::Load()+0x16>
 8011b08:	6803      	ldr	r3, [r0, #0]
 8011b0a:	3104      	adds	r1, #4
 8011b0c:	68db      	ldr	r3, [r3, #12]
 8011b0e:	4798      	blx	r3
 8011b10:	2001      	movs	r0, #1
 8011b12:	bd08      	pop	{r3, pc}

08011b14 <NetworkParams::Load(char const*, unsigned int)>:
 8011b14:	6803      	ldr	r3, [r0, #0]
 8011b16:	b1d3      	cbz	r3, 8011b4e <NetworkParams::Load(char const*, unsigned int)+0x3a>
 8011b18:	2300      	movs	r3, #0
 8011b1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011b1c:	460d      	mov	r5, r1
 8011b1e:	4616      	mov	r6, r2
 8011b20:	4604      	mov	r4, r0
 8011b22:	6043      	str	r3, [r0, #4]
 8011b24:	4602      	mov	r2, r0
 8011b26:	490a      	ldr	r1, [pc, #40]	; (8011b50 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8011b28:	4668      	mov	r0, sp
 8011b2a:	f001 faa3 	bl	8013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011b2e:	4632      	mov	r2, r6
 8011b30:	4629      	mov	r1, r5
 8011b32:	4668      	mov	r0, sp
 8011b34:	f001 faa2 	bl	801307c <ReadConfigFile::Read(char const*, unsigned int)>
 8011b38:	4621      	mov	r1, r4
 8011b3a:	f851 0b04 	ldr.w	r0, [r1], #4
 8011b3e:	6803      	ldr	r3, [r0, #0]
 8011b40:	689b      	ldr	r3, [r3, #8]
 8011b42:	4798      	blx	r3
 8011b44:	4668      	mov	r0, sp
 8011b46:	f001 fa98 	bl	801307a <ReadConfigFile::~ReadConfigFile()>
 8011b4a:	b002      	add	sp, #8
 8011b4c:	bd70      	pop	{r4, r5, r6, pc}
 8011b4e:	4770      	bx	lr
 8011b50:	08011c75 	stmdaeq	r1, {r0, r2, r4, r5, r6, sl, fp, ip}

08011b54 <NetworkParams::callbackFunction(char const*)>:
 8011b54:	b530      	push	{r4, r5, lr}
 8011b56:	460d      	mov	r5, r1
 8011b58:	b085      	sub	sp, #20
 8011b5a:	4604      	mov	r4, r0
 8011b5c:	493f      	ldr	r1, [pc, #252]	; (8011c5c <NetworkParams::callbackFunction(char const*)+0x108>)
 8011b5e:	4628      	mov	r0, r5
 8011b60:	f10d 0207 	add.w	r2, sp, #7
 8011b64:	f001 fbc2 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b68:	b978      	cbnz	r0, 8011b8a <NetworkParams::callbackFunction(char const*)+0x36>
 8011b6a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011b6e:	6863      	ldr	r3, [r4, #4]
 8011b70:	b142      	cbz	r2, 8011b84 <NetworkParams::callbackFunction(char const*)+0x30>
 8011b72:	f023 0301 	bic.w	r3, r3, #1
 8011b76:	3a00      	subs	r2, #0
 8011b78:	bf18      	it	ne
 8011b7a:	2201      	movne	r2, #1
 8011b7c:	6063      	str	r3, [r4, #4]
 8011b7e:	7622      	strb	r2, [r4, #24]
 8011b80:	b005      	add	sp, #20
 8011b82:	bd30      	pop	{r4, r5, pc}
 8011b84:	f043 0301 	orr.w	r3, r3, #1
 8011b88:	e7f5      	b.n	8011b76 <NetworkParams::callbackFunction(char const*)+0x22>
 8011b8a:	4628      	mov	r0, r5
 8011b8c:	4934      	ldr	r1, [pc, #208]	; (8011c60 <NetworkParams::callbackFunction(char const*)+0x10c>)
 8011b8e:	f10d 0207 	add.w	r2, sp, #7
 8011b92:	f001 fbab 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b96:	b980      	cbnz	r0, 8011bba <NetworkParams::callbackFunction(char const*)+0x66>
 8011b98:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011b9c:	6863      	ldr	r3, [r4, #4]
 8011b9e:	1e51      	subs	r1, r2, #1
 8011ba0:	2904      	cmp	r1, #4
 8011ba2:	bf97      	itett	ls
 8011ba4:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8011ba8:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8011bac:	6063      	strls	r3, [r4, #4]
 8011bae:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8011bb2:	bf84      	itt	hi
 8011bb4:	6063      	strhi	r3, [r4, #4]
 8011bb6:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 8011bba:	4628      	mov	r0, r5
 8011bbc:	4929      	ldr	r1, [pc, #164]	; (8011c64 <NetworkParams::callbackFunction(char const*)+0x110>)
 8011bbe:	aa02      	add	r2, sp, #8
 8011bc0:	f001 fb0c 	bl	80131dc <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011bc4:	b9c8      	cbnz	r0, 8011bfa <NetworkParams::callbackFunction(char const*)+0xa6>
 8011bc6:	9b02      	ldr	r3, [sp, #8]
 8011bc8:	b2d9      	uxtb	r1, r3
 8011bca:	29ac      	cmp	r1, #172	; 0xac
 8011bcc:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011bd0:	d009      	beq.n	8011be6 <NetworkParams::callbackFunction(char const*)+0x92>
 8011bd2:	29c0      	cmp	r1, #192	; 0xc0
 8011bd4:	d00b      	beq.n	8011bee <NetworkParams::callbackFunction(char const*)+0x9a>
 8011bd6:	290a      	cmp	r1, #10
 8011bd8:	d10c      	bne.n	8011bf4 <NetworkParams::callbackFunction(char const*)+0xa0>
 8011bda:	60a3      	str	r3, [r4, #8]
 8011bdc:	6863      	ldr	r3, [r4, #4]
 8011bde:	f043 0302 	orr.w	r3, r3, #2
 8011be2:	6063      	str	r3, [r4, #4]
 8011be4:	e7cc      	b.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011be6:	3a10      	subs	r2, #16
 8011be8:	2a0f      	cmp	r2, #15
 8011bea:	d8c9      	bhi.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011bec:	e7f5      	b.n	8011bda <NetworkParams::callbackFunction(char const*)+0x86>
 8011bee:	2aa8      	cmp	r2, #168	; 0xa8
 8011bf0:	d1c6      	bne.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011bf2:	e7f2      	b.n	8011bda <NetworkParams::callbackFunction(char const*)+0x86>
 8011bf4:	2b00      	cmp	r3, #0
 8011bf6:	d0f0      	beq.n	8011bda <NetworkParams::callbackFunction(char const*)+0x86>
 8011bf8:	e7c2      	b.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011bfa:	4628      	mov	r0, r5
 8011bfc:	491a      	ldr	r1, [pc, #104]	; (8011c68 <NetworkParams::callbackFunction(char const*)+0x114>)
 8011bfe:	aa02      	add	r2, sp, #8
 8011c00:	f001 faec 	bl	80131dc <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011c04:	b960      	cbnz	r0, 8011c20 <NetworkParams::callbackFunction(char const*)+0xcc>
 8011c06:	9b02      	ldr	r3, [sp, #8]
 8011c08:	2b00      	cmp	r3, #0
 8011c0a:	d0b9      	beq.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011c0c:	ba1a      	rev	r2, r3
 8011c0e:	43d1      	mvns	r1, r2
 8011c10:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8011c14:	d1b4      	bne.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011c16:	60e3      	str	r3, [r4, #12]
 8011c18:	6863      	ldr	r3, [r4, #4]
 8011c1a:	f043 0304 	orr.w	r3, r3, #4
 8011c1e:	e7e0      	b.n	8011be2 <NetworkParams::callbackFunction(char const*)+0x8e>
 8011c20:	4628      	mov	r0, r5
 8011c22:	4912      	ldr	r1, [pc, #72]	; (8011c6c <NetworkParams::callbackFunction(char const*)+0x118>)
 8011c24:	aa02      	add	r2, sp, #8
 8011c26:	f001 fad9 	bl	80131dc <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011c2a:	b928      	cbnz	r0, 8011c38 <NetworkParams::callbackFunction(char const*)+0xe4>
 8011c2c:	9b02      	ldr	r3, [sp, #8]
 8011c2e:	6123      	str	r3, [r4, #16]
 8011c30:	6863      	ldr	r3, [r4, #4]
 8011c32:	f043 0308 	orr.w	r3, r3, #8
 8011c36:	e7d4      	b.n	8011be2 <NetworkParams::callbackFunction(char const*)+0x8e>
 8011c38:	233f      	movs	r3, #63	; 0x3f
 8011c3a:	4628      	mov	r0, r5
 8011c3c:	9303      	str	r3, [sp, #12]
 8011c3e:	490c      	ldr	r1, [pc, #48]	; (8011c70 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8011c40:	ab03      	add	r3, sp, #12
 8011c42:	f104 0219 	add.w	r2, r4, #25
 8011c46:	f001 fa4d 	bl	80130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8011c4a:	2800      	cmp	r0, #0
 8011c4c:	d198      	bne.n	8011b80 <NetworkParams::callbackFunction(char const*)+0x2c>
 8011c4e:	9b03      	ldr	r3, [sp, #12]
 8011c50:	4423      	add	r3, r4
 8011c52:	7658      	strb	r0, [r3, #25]
 8011c54:	6863      	ldr	r3, [r4, #4]
 8011c56:	f043 0320 	orr.w	r3, r3, #32
 8011c5a:	e7c2      	b.n	8011be2 <NetworkParams::callbackFunction(char const*)+0x8e>
 8011c5c:	080189b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, fp, pc}
 8011c60:	08018996 	stmdaeq	r1, {r1, r2, r4, r7, r8, fp, pc}
 8011c64:	0801897b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, fp, pc}
 8011c68:	080189af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, fp, pc}
 8011c6c:	08018986 	stmdaeq	r1, {r1, r2, r7, r8, fp, pc}
 8011c70:	080189a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, fp, pc}

08011c74 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8011c74:	f7ff bf6e 	b.w	8011b54 <NetworkParams::callbackFunction(char const*)>

08011c78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8011c78:	b570      	push	{r4, r5, r6, lr}
 8011c7a:	4604      	mov	r4, r0
 8011c7c:	4615      	mov	r5, r2
 8011c7e:	461e      	mov	r6, r3
 8011c80:	b086      	sub	sp, #24
 8011c82:	3004      	adds	r0, #4
 8011c84:	2900      	cmp	r1, #0
 8011c86:	d02b      	beq.n	8011ce0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 8011c88:	225e      	movs	r2, #94	; 0x5e
 8011c8a:	f002 f860 	bl	8013d4e <memmove>
 8011c8e:	462a      	mov	r2, r5
 8011c90:	4633      	mov	r3, r6
 8011c92:	4970      	ldr	r1, [pc, #448]	; (8011e54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8011c94:	a803      	add	r0, sp, #12
 8011c96:	f001 f94d 	bl	8012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011c9a:	6863      	ldr	r3, [r4, #4]
 8011c9c:	079a      	lsls	r2, r3, #30
 8011c9e:	bf5f      	itttt	pl
 8011ca0:	4a6d      	ldrpl	r2, [pc, #436]	; (8011e58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011ca2:	6812      	ldrpl	r2, [r2, #0]
 8011ca4:	6952      	ldrpl	r2, [r2, #20]
 8011ca6:	60a2      	strpl	r2, [r4, #8]
 8011ca8:	075e      	lsls	r6, r3, #29
 8011caa:	bf5f      	itttt	pl
 8011cac:	4a6a      	ldrpl	r2, [pc, #424]	; (8011e58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011cae:	6812      	ldrpl	r2, [r2, #0]
 8011cb0:	69d2      	ldrpl	r2, [r2, #28]
 8011cb2:	60e2      	strpl	r2, [r4, #12]
 8011cb4:	071d      	lsls	r5, r3, #28
 8011cb6:	bf58      	it	pl
 8011cb8:	4a67      	ldrpl	r2, [pc, #412]	; (8011e58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011cba:	f104 0519 	add.w	r5, r4, #25
 8011cbe:	bf5e      	ittt	pl
 8011cc0:	6812      	ldrpl	r2, [r2, #0]
 8011cc2:	6992      	ldrpl	r2, [r2, #24]
 8011cc4:	6122      	strpl	r2, [r4, #16]
 8011cc6:	0698      	lsls	r0, r3, #26
 8011cc8:	d418      	bmi.n	8011cfc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 8011cca:	4628      	mov	r0, r5
 8011ccc:	223f      	movs	r2, #63	; 0x3f
 8011cce:	4b62      	ldr	r3, [pc, #392]	; (8011e58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8011cd0:	681b      	ldr	r3, [r3, #0]
 8011cd2:	331f      	adds	r3, #31
 8011cd4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011cd8:	b949      	cbnz	r1, 8011cee <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 8011cda:	f002 f84f 	bl	8013d7c <memset>
 8011cde:	e00a      	b.n	8011cf6 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8011ce0:	6823      	ldr	r3, [r4, #0]
 8011ce2:	4601      	mov	r1, r0
 8011ce4:	681a      	ldr	r2, [r3, #0]
 8011ce6:	4618      	mov	r0, r3
 8011ce8:	68d2      	ldr	r2, [r2, #12]
 8011cea:	4790      	blx	r2
 8011cec:	e7cf      	b.n	8011c8e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8011cee:	3a01      	subs	r2, #1
 8011cf0:	f800 1b01 	strb.w	r1, [r0], #1
 8011cf4:	d1ee      	bne.n	8011cd4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 8011cf6:	2300      	movs	r3, #0
 8011cf8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8011cfc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011d00:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8011d04:	7e23      	ldrb	r3, [r4, #24]
 8011d06:	42b2      	cmp	r2, r6
 8011d08:	6861      	ldr	r1, [r4, #4]
 8011d0a:	d21a      	bcs.n	8011d42 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 8011d0c:	9803      	ldr	r0, [sp, #12]
 8011d0e:	07c9      	lsls	r1, r1, #31
 8011d10:	4410      	add	r0, r2
 8011d12:	eba6 0602 	sub.w	r6, r6, r2
 8011d16:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011d1a:	d404      	bmi.n	8011d26 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8011d1c:	b922      	cbnz	r2, 8011d28 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 8011d1e:	9300      	str	r3, [sp, #0]
 8011d20:	4a4e      	ldr	r2, [pc, #312]	; (8011e5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8011d22:	4b4f      	ldr	r3, [pc, #316]	; (8011e60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8011d24:	e003      	b.n	8011d2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 8011d26:	b312      	cbz	r2, 8011d6e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 8011d28:	9300      	str	r3, [sp, #0]
 8011d2a:	4a4e      	ldr	r2, [pc, #312]	; (8011e64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8011d2c:	4b4c      	ldr	r3, [pc, #304]	; (8011e60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8011d2e:	4631      	mov	r1, r6
 8011d30:	f7f7 fc96 	bl	8009660 <snprintf>
 8011d34:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011d38:	4286      	cmp	r6, r0
 8011d3a:	bfa4      	itt	ge
 8011d3c:	181b      	addge	r3, r3, r0
 8011d3e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011d42:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011d46:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8011d4a:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8011d4e:	42b2      	cmp	r2, r6
 8011d50:	6861      	ldr	r1, [r4, #4]
 8011d52:	d21f      	bcs.n	8011d94 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 8011d54:	9803      	ldr	r0, [sp, #12]
 8011d56:	05c9      	lsls	r1, r1, #23
 8011d58:	4410      	add	r0, r2
 8011d5a:	eba6 0602 	sub.w	r6, r6, r2
 8011d5e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011d62:	d408      	bmi.n	8011d76 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 8011d64:	b94a      	cbnz	r2, 8011d7a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 8011d66:	9300      	str	r3, [sp, #0]
 8011d68:	4a3c      	ldr	r2, [pc, #240]	; (8011e5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8011d6a:	4b3f      	ldr	r3, [pc, #252]	; (8011e68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8011d6c:	e008      	b.n	8011d80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8011d6e:	9300      	str	r3, [sp, #0]
 8011d70:	4a3e      	ldr	r2, [pc, #248]	; (8011e6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8011d72:	4b3b      	ldr	r3, [pc, #236]	; (8011e60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8011d74:	e7db      	b.n	8011d2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 8011d76:	2a00      	cmp	r2, #0
 8011d78:	d03c      	beq.n	8011df4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 8011d7a:	9300      	str	r3, [sp, #0]
 8011d7c:	4a39      	ldr	r2, [pc, #228]	; (8011e64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8011d7e:	4b3a      	ldr	r3, [pc, #232]	; (8011e68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8011d80:	4631      	mov	r1, r6
 8011d82:	f7f7 fc6d 	bl	8009660 <snprintf>
 8011d86:	4286      	cmp	r6, r0
 8011d88:	bfa2      	ittt	ge
 8011d8a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011d8e:	18c0      	addge	r0, r0, r3
 8011d90:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8011d94:	4936      	ldr	r1, [pc, #216]	; (8011e70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8011d96:	a803      	add	r0, sp, #12
 8011d98:	f001 f952 	bl	8013040 <PropertiesBuilder::AddComment(char const*)>
 8011d9c:	6863      	ldr	r3, [r4, #4]
 8011d9e:	68a2      	ldr	r2, [r4, #8]
 8011da0:	4934      	ldr	r1, [pc, #208]	; (8011e74 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8011da2:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8011da6:	a803      	add	r0, sp, #12
 8011da8:	f001 f906 	bl	8012fb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011dac:	6863      	ldr	r3, [r4, #4]
 8011dae:	68e2      	ldr	r2, [r4, #12]
 8011db0:	4931      	ldr	r1, [pc, #196]	; (8011e78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8011db2:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8011db6:	a803      	add	r0, sp, #12
 8011db8:	f001 f8fe 	bl	8012fb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011dbc:	6863      	ldr	r3, [r4, #4]
 8011dbe:	6922      	ldr	r2, [r4, #16]
 8011dc0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8011dc4:	492d      	ldr	r1, [pc, #180]	; (8011e7c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 8011dc6:	a803      	add	r0, sp, #12
 8011dc8:	f001 f8f6 	bl	8012fb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011dcc:	6862      	ldr	r2, [r4, #4]
 8011dce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011dd2:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 8011dd6:	42a3      	cmp	r3, r4
 8011dd8:	d21e      	bcs.n	8011e18 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 8011dda:	9803      	ldr	r0, [sp, #12]
 8011ddc:	0692      	lsls	r2, r2, #26
 8011dde:	4418      	add	r0, r3
 8011de0:	eba4 0403 	sub.w	r4, r4, r3
 8011de4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011de8:	d408      	bmi.n	8011dfc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 8011dea:	b943      	cbnz	r3, 8011dfe <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 8011dec:	4b24      	ldr	r3, [pc, #144]	; (8011e80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8011dee:	4a25      	ldr	r2, [pc, #148]	; (8011e84 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 8011df0:	9500      	str	r5, [sp, #0]
 8011df2:	e007      	b.n	8011e04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 8011df4:	9300      	str	r3, [sp, #0]
 8011df6:	4a1d      	ldr	r2, [pc, #116]	; (8011e6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8011df8:	4b1b      	ldr	r3, [pc, #108]	; (8011e68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8011dfa:	e7c1      	b.n	8011d80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8011dfc:	b32b      	cbz	r3, 8011e4a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 8011dfe:	4b20      	ldr	r3, [pc, #128]	; (8011e80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8011e00:	4a21      	ldr	r2, [pc, #132]	; (8011e88 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8011e02:	9500      	str	r5, [sp, #0]
 8011e04:	4621      	mov	r1, r4
 8011e06:	f7f7 fc2b 	bl	8009660 <snprintf>
 8011e0a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011e0e:	4284      	cmp	r4, r0
 8011e10:	bfa4      	itt	ge
 8011e12:	181b      	addge	r3, r3, r0
 8011e14:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011e18:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011e1c:	b17b      	cbz	r3, 8011e3e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 8011e1e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011e22:	9b03      	ldr	r3, [sp, #12]
 8011e24:	4413      	add	r3, r2
 8011e26:	227d      	movs	r2, #125	; 0x7d
 8011e28:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011e2c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011e30:	9903      	ldr	r1, [sp, #12]
 8011e32:	54ca      	strb	r2, [r1, r3]
 8011e34:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011e38:	3301      	adds	r3, #1
 8011e3a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011e3e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011e42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011e44:	601a      	str	r2, [r3, #0]
 8011e46:	b006      	add	sp, #24
 8011e48:	bd70      	pop	{r4, r5, r6, pc}
 8011e4a:	4b0d      	ldr	r3, [pc, #52]	; (8011e80 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8011e4c:	4a0f      	ldr	r2, [pc, #60]	; (8011e8c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 8011e4e:	9500      	str	r5, [sp, #0]
 8011e50:	e7d8      	b.n	8011e04 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 8011e52:	bf00      	nop
 8011e54:	080189c1 	stmdaeq	r1, {r0, r6, r7, r8, fp, pc}
 8011e58:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8011e5c:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 8011e60:	080189b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, fp, pc}
 8011e64:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 8011e68:	08018996 	stmdaeq	r1, {r1, r2, r4, r7, r8, fp, pc}
 8011e6c:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}
 8011e70:	08018971 	stmdaeq	r1, {r0, r4, r5, r6, r8, fp, pc}
 8011e74:	0801897b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, fp, pc}
 8011e78:	080189af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, fp, pc}
 8011e7c:	08018986 	stmdaeq	r1, {r1, r2, r7, r8, fp, pc}
 8011e80:	080189a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, fp, pc}
 8011e84:	080166c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, sp, lr}
 8011e88:	080166b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp, lr}
 8011e8c:	080166c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, lr}

08011e90 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8011e90:	b513      	push	{r0, r1, r4, lr}
 8011e92:	6804      	ldr	r4, [r0, #0]
 8011e94:	b914      	cbnz	r4, 8011e9c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011e96:	601c      	str	r4, [r3, #0]
 8011e98:	b002      	add	sp, #8
 8011e9a:	bd10      	pop	{r4, pc}
 8011e9c:	9300      	str	r3, [sp, #0]
 8011e9e:	4613      	mov	r3, r2
 8011ea0:	460a      	mov	r2, r1
 8011ea2:	2100      	movs	r1, #0
 8011ea4:	f7ff fee8 	bl	8011c78 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8011ea8:	e7f6      	b.n	8011e98 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011eaa <NetworkParams::Dump()>:
 8011eaa:	4770      	bx	lr

08011eac <memcpy.isra.0>:
 8011eac:	3801      	subs	r0, #1
 8011eae:	440a      	add	r2, r1
 8011eb0:	4291      	cmp	r1, r2
 8011eb2:	d100      	bne.n	8011eb6 <memcpy.isra.0+0xa>
 8011eb4:	4770      	bx	lr
 8011eb6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011eba:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011ebe:	e7f7      	b.n	8011eb0 <memcpy.isra.0+0x4>

08011ec0 <arp_announce>:
 8011ec0:	4803      	ldr	r0, [pc, #12]	; (8011ed0 <arp_announce+0x10>)
 8011ec2:	69c3      	ldr	r3, [r0, #28]
 8011ec4:	b113      	cbz	r3, 8011ecc <arp_announce+0xc>
 8011ec6:	212a      	movs	r1, #42	; 0x2a
 8011ec8:	f002 bfd4 	b.w	8014e74 <emac_eth_send>
 8011ecc:	4770      	bx	lr
 8011ece:	bf00      	nop
 8011ed0:	2001d2b8 			; <UNDEFINED> instruction: 0x2001d2b8

08011ed4 <arp_handle_request>:
 8011ed4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ed6:	2204      	movs	r2, #4
 8011ed8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8011edc:	4604      	mov	r4, r0
 8011ede:	eb0d 0002 	add.w	r0, sp, r2
 8011ee2:	f7ff ffe3 	bl	8011eac <memcpy.isra.0>
 8011ee6:	4b0d      	ldr	r3, [pc, #52]	; (8011f1c <arp_handle_request+0x48>)
 8011ee8:	9a01      	ldr	r2, [sp, #4]
 8011eea:	69db      	ldr	r3, [r3, #28]
 8011eec:	429a      	cmp	r2, r3
 8011eee:	d113      	bne.n	8011f18 <arp_handle_request+0x44>
 8011ef0:	2206      	movs	r2, #6
 8011ef2:	4d0b      	ldr	r5, [pc, #44]	; (8011f20 <arp_handle_request+0x4c>)
 8011ef4:	18a1      	adds	r1, r4, r2
 8011ef6:	4628      	mov	r0, r5
 8011ef8:	f7ff ffd8 	bl	8011eac <memcpy.isra.0>
 8011efc:	f104 0116 	add.w	r1, r4, #22
 8011f00:	f105 0020 	add.w	r0, r5, #32
 8011f04:	2206      	movs	r2, #6
 8011f06:	f7ff ffd1 	bl	8011eac <memcpy.isra.0>
 8011f0a:	69e3      	ldr	r3, [r4, #28]
 8011f0c:	212a      	movs	r1, #42	; 0x2a
 8011f0e:	4628      	mov	r0, r5
 8011f10:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8011f14:	f002 ffae 	bl	8014e74 <emac_eth_send>
 8011f18:	b003      	add	sp, #12
 8011f1a:	bd30      	pop	{r4, r5, pc}
 8011f1c:	2001d2b8 			; <UNDEFINED> instruction: 0x2001d2b8
 8011f20:	2001d2e4 	andcs	sp, r1, r4, ror #5

08011f24 <arp_handle_reply>:
 8011f24:	69c1      	ldr	r1, [r0, #28]
 8011f26:	3016      	adds	r0, #22
 8011f28:	f000 b80a 	b.w	8011f40 <arp_cache_update>

08011f2c <arp_send_request>:
 8011f2c:	4b03      	ldr	r3, [pc, #12]	; (8011f3c <arp_send_request+0x10>)
 8011f2e:	212a      	movs	r1, #42	; 0x2a
 8011f30:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8011f34:	4618      	mov	r0, r3
 8011f36:	f002 bf9d 	b.w	8014e74 <emac_eth_send>
 8011f3a:	bf00      	nop
 8011f3c:	2001d310 	andcs	sp, r1, r0, lsl r3

08011f40 <arp_cache_update>:
 8011f40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f42:	4e11      	ldr	r6, [pc, #68]	; (8011f88 <arp_cache_update+0x48>)
 8011f44:	8833      	ldrh	r3, [r6, #0]
 8011f46:	2b20      	cmp	r3, #32
 8011f48:	d018      	beq.n	8011f7c <arp_cache_update+0x3c>
 8011f4a:	2400      	movs	r4, #0
 8011f4c:	220c      	movs	r2, #12
 8011f4e:	4d0f      	ldr	r5, [pc, #60]	; (8011f8c <arp_cache_update+0x4c>)
 8011f50:	b2a7      	uxth	r7, r4
 8011f52:	42bb      	cmp	r3, r7
 8011f54:	d80b      	bhi.n	8011f6e <arp_cache_update+0x2e>
 8011f56:	fb02 5203 	mla	r2, r2, r3, r5
 8011f5a:	1d84      	adds	r4, r0, #6
 8011f5c:	3203      	adds	r2, #3
 8011f5e:	42a0      	cmp	r0, r4
 8011f60:	d10d      	bne.n	8011f7e <arp_cache_update+0x3e>
 8011f62:	220c      	movs	r2, #12
 8011f64:	435a      	muls	r2, r3
 8011f66:	3301      	adds	r3, #1
 8011f68:	50a9      	str	r1, [r5, r2]
 8011f6a:	8033      	strh	r3, [r6, #0]
 8011f6c:	e006      	b.n	8011f7c <arp_cache_update+0x3c>
 8011f6e:	3401      	adds	r4, #1
 8011f70:	fb02 5704 	mla	r7, r2, r4, r5
 8011f74:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8011f78:	428f      	cmp	r7, r1
 8011f7a:	d1e9      	bne.n	8011f50 <arp_cache_update+0x10>
 8011f7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f7e:	f810 7b01 	ldrb.w	r7, [r0], #1
 8011f82:	f802 7f01 	strb.w	r7, [r2, #1]!
 8011f86:	e7ea      	b.n	8011f5e <arp_cache_update+0x1e>
 8011f88:	2001d4bc 			; <UNDEFINED> instruction: 0x2001d4bc
 8011f8c:	2001d33c 	andcs	sp, r1, ip, lsr r3

08011f90 <arp_cache_lookup>:
 8011f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011f94:	2200      	movs	r2, #0
 8011f96:	4606      	mov	r6, r0
 8011f98:	460c      	mov	r4, r1
 8011f9a:	200c      	movs	r0, #12
 8011f9c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8012024 <arp_cache_lookup+0x94>
 8011fa0:	fb00 f302 	mul.w	r3, r0, r2
 8011fa4:	f853 1008 	ldr.w	r1, [r3, r8]
 8011fa8:	42b1      	cmp	r1, r6
 8011faa:	d10d      	bne.n	8011fc8 <arp_cache_lookup+0x38>
 8011fac:	3304      	adds	r3, #4
 8011fae:	4443      	add	r3, r8
 8011fb0:	3c01      	subs	r4, #1
 8011fb2:	1d9a      	adds	r2, r3, #6
 8011fb4:	4293      	cmp	r3, r2
 8011fb6:	d102      	bne.n	8011fbe <arp_cache_lookup+0x2e>
 8011fb8:	4630      	mov	r0, r6
 8011fba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011fbe:	f813 1b01 	ldrb.w	r1, [r3], #1
 8011fc2:	f804 1f01 	strb.w	r1, [r4, #1]!
 8011fc6:	e7f5      	b.n	8011fb4 <arp_cache_lookup+0x24>
 8011fc8:	b111      	cbz	r1, 8011fd0 <arp_cache_lookup+0x40>
 8011fca:	3201      	adds	r2, #1
 8011fcc:	2a20      	cmp	r2, #32
 8011fce:	d1e7      	bne.n	8011fa0 <arp_cache_lookup+0x10>
 8011fd0:	2704      	movs	r7, #4
 8011fd2:	f8df a054 	ldr.w	sl, [pc, #84]	; 8012028 <arp_cache_lookup+0x98>
 8011fd6:	f8ba 5000 	ldrh.w	r5, [sl]
 8011fda:	3f01      	subs	r7, #1
 8011fdc:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8011fe0:	d101      	bne.n	8011fe6 <arp_cache_lookup+0x56>
 8011fe2:	463e      	mov	r6, r7
 8011fe4:	e7e8      	b.n	8011fb8 <arp_cache_lookup+0x28>
 8011fe6:	4630      	mov	r0, r6
 8011fe8:	f7ff ffa0 	bl	8011f2c <arp_send_request>
 8011fec:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8011ff0:	f1b9 0901 	subs.w	r9, r9, #1
 8011ff4:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ff8:	d011      	beq.n	801201e <arp_cache_lookup+0x8e>
 8011ffa:	429d      	cmp	r5, r3
 8011ffc:	d00c      	beq.n	8012018 <arp_cache_lookup+0x88>
 8011ffe:	230c      	movs	r3, #12
 8012000:	fb03 8505 	mla	r5, r3, r5, r8
 8012004:	3c01      	subs	r4, #1
 8012006:	1d2b      	adds	r3, r5, #4
 8012008:	350a      	adds	r5, #10
 801200a:	42ab      	cmp	r3, r5
 801200c:	d0d4      	beq.n	8011fb8 <arp_cache_lookup+0x28>
 801200e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012012:	f804 2f01 	strb.w	r2, [r4, #1]!
 8012016:	e7f8      	b.n	801200a <arp_cache_lookup+0x7a>
 8012018:	f7f5 faae 	bl	8007578 <net_handle>
 801201c:	e7e8      	b.n	8011ff0 <arp_cache_lookup+0x60>
 801201e:	429d      	cmp	r5, r3
 8012020:	d0db      	beq.n	8011fda <arp_cache_lookup+0x4a>
 8012022:	e7ec      	b.n	8011ffe <arp_cache_lookup+0x6e>
 8012024:	2001d33c 	andcs	sp, r1, ip, lsr r3
 8012028:	2001d4bc 			; <UNDEFINED> instruction: 0x2001d4bc

0801202c <_parse_response>:
 801202c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012030:	2400      	movs	r4, #0
 8012032:	460d      	mov	r5, r1
 8012034:	46a3      	mov	fp, r4
 8012036:	4627      	mov	r7, r4
 8012038:	46a2      	mov	sl, r4
 801203a:	46a1      	mov	r9, r4
 801203c:	46a0      	mov	r8, r4
 801203e:	4e50      	ldr	r6, [pc, #320]	; (8012180 <_parse_response+0x154>)
 8012040:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8012044:	6833      	ldr	r3, [r6, #0]
 8012046:	e9cd 4403 	strd	r4, r4, [sp, #12]
 801204a:	e9cd 4405 	strd	r4, r4, [sp, #20]
 801204e:	9009      	str	r0, [sp, #36]	; 0x24
 8012050:	9402      	str	r4, [sp, #8]
 8012052:	9407      	str	r4, [sp, #28]
 8012054:	9308      	str	r3, [sp, #32]
 8012056:	f7f5 fa8f 	bl	8007578 <net_handle>
 801205a:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801205e:	9300      	str	r3, [sp, #0]
 8012060:	f44f 7209 	mov.w	r2, #548	; 0x224
 8012064:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8012068:	ab0c      	add	r3, sp, #48	; 0x30
 801206a:	a90d      	add	r1, sp, #52	; 0x34
 801206c:	f7fe fcfe 	bl	8010a6c <udp_recv>
 8012070:	2800      	cmp	r0, #0
 8012072:	d03f      	beq.n	80120f4 <_parse_response+0xc8>
 8012074:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8012078:	2b43      	cmp	r3, #67	; 0x43
 801207a:	d13b      	bne.n	80120f4 <_parse_response+0xc8>
 801207c:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8012080:	1e6b      	subs	r3, r5, #1
 8012082:	1d69      	adds	r1, r5, #5
 8012084:	4299      	cmp	r1, r3
 8012086:	d12f      	bne.n	80120e8 <_parse_response+0xbc>
 8012088:	2100      	movs	r1, #0
 801208a:	ab0d      	add	r3, sp, #52	; 0x34
 801208c:	181d      	adds	r5, r3, r0
 801208e:	468c      	mov	ip, r1
 8012090:	460e      	mov	r6, r1
 8012092:	4608      	mov	r0, r1
 8012094:	ab49      	add	r3, sp, #292	; 0x124
 8012096:	42ab      	cmp	r3, r5
 8012098:	d337      	bcc.n	801210a <_parse_response+0xde>
 801209a:	b141      	cbz	r1, 80120ae <_parse_response+0x82>
 801209c:	4b39      	ldr	r3, [pc, #228]	; (8012184 <_parse_response+0x158>)
 801209e:	9a07      	ldr	r2, [sp, #28]
 80120a0:	f883 8003 	strb.w	r8, [r3, #3]
 80120a4:	709a      	strb	r2, [r3, #2]
 80120a6:	9a06      	ldr	r2, [sp, #24]
 80120a8:	705a      	strb	r2, [r3, #1]
 80120aa:	9a05      	ldr	r2, [sp, #20]
 80120ac:	701a      	strb	r2, [r3, #0]
 80120ae:	f1bc 0f00 	cmp.w	ip, #0
 80120b2:	d007      	beq.n	80120c4 <_parse_response+0x98>
 80120b4:	4b34      	ldr	r3, [pc, #208]	; (8012188 <_parse_response+0x15c>)
 80120b6:	9a04      	ldr	r2, [sp, #16]
 80120b8:	705c      	strb	r4, [r3, #1]
 80120ba:	70da      	strb	r2, [r3, #3]
 80120bc:	9a03      	ldr	r2, [sp, #12]
 80120be:	709a      	strb	r2, [r3, #2]
 80120c0:	9a02      	ldr	r2, [sp, #8]
 80120c2:	701a      	strb	r2, [r3, #0]
 80120c4:	b13e      	cbz	r6, 80120d6 <_parse_response+0xaa>
 80120c6:	4b31      	ldr	r3, [pc, #196]	; (801218c <_parse_response+0x160>)
 80120c8:	70df      	strb	r7, [r3, #3]
 80120ca:	f883 a002 	strb.w	sl, [r3, #2]
 80120ce:	f883 9001 	strb.w	r9, [r3, #1]
 80120d2:	f883 b000 	strb.w	fp, [r3]
 80120d6:	2802      	cmp	r0, #2
 80120d8:	d102      	bne.n	80120e0 <_parse_response+0xb4>
 80120da:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80120dc:	4b2c      	ldr	r3, [pc, #176]	; (8012190 <_parse_response+0x164>)
 80120de:	601a      	str	r2, [r3, #0]
 80120e0:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 80120e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80120e8:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 80120ec:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 80120f0:	45e6      	cmp	lr, ip
 80120f2:	d0c7      	beq.n	8012084 <_parse_response+0x58>
 80120f4:	6833      	ldr	r3, [r6, #0]
 80120f6:	9a08      	ldr	r2, [sp, #32]
 80120f8:	1a9b      	subs	r3, r3, r2
 80120fa:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80120fe:	d3aa      	bcc.n	8012056 <_parse_response+0x2a>
 8012100:	2800      	cmp	r0, #0
 8012102:	d1c1      	bne.n	8012088 <_parse_response+0x5c>
 8012104:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012108:	e7ea      	b.n	80120e0 <_parse_response+0xb4>
 801210a:	781a      	ldrb	r2, [r3, #0]
 801210c:	2a35      	cmp	r2, #53	; 0x35
 801210e:	d011      	beq.n	8012134 <_parse_response+0x108>
 8012110:	d808      	bhi.n	8012124 <_parse_response+0xf8>
 8012112:	2a01      	cmp	r2, #1
 8012114:	d011      	beq.n	801213a <_parse_response+0x10e>
 8012116:	2a03      	cmp	r2, #3
 8012118:	d019      	beq.n	801214e <_parse_response+0x122>
 801211a:	b14a      	cbz	r2, 8012130 <_parse_response+0x104>
 801211c:	1c9a      	adds	r2, r3, #2
 801211e:	785b      	ldrb	r3, [r3, #1]
 8012120:	4413      	add	r3, r2
 8012122:	e7b8      	b.n	8012096 <_parse_response+0x6a>
 8012124:	2a36      	cmp	r2, #54	; 0x36
 8012126:	d01f      	beq.n	8012168 <_parse_response+0x13c>
 8012128:	2aff      	cmp	r2, #255	; 0xff
 801212a:	d1f7      	bne.n	801211c <_parse_response+0xf0>
 801212c:	462b      	mov	r3, r5
 801212e:	e7b2      	b.n	8012096 <_parse_response+0x6a>
 8012130:	3301      	adds	r3, #1
 8012132:	e7b0      	b.n	8012096 <_parse_response+0x6a>
 8012134:	7898      	ldrb	r0, [r3, #2]
 8012136:	3303      	adds	r3, #3
 8012138:	e7ad      	b.n	8012096 <_parse_response+0x6a>
 801213a:	f893 b002 	ldrb.w	fp, [r3, #2]
 801213e:	f893 9003 	ldrb.w	r9, [r3, #3]
 8012142:	f893 a004 	ldrb.w	sl, [r3, #4]
 8012146:	795f      	ldrb	r7, [r3, #5]
 8012148:	4616      	mov	r6, r2
 801214a:	3306      	adds	r3, #6
 801214c:	e7a3      	b.n	8012096 <_parse_response+0x6a>
 801214e:	789a      	ldrb	r2, [r3, #2]
 8012150:	78dc      	ldrb	r4, [r3, #3]
 8012152:	9202      	str	r2, [sp, #8]
 8012154:	791a      	ldrb	r2, [r3, #4]
 8012156:	f04f 0c01 	mov.w	ip, #1
 801215a:	9203      	str	r2, [sp, #12]
 801215c:	795a      	ldrb	r2, [r3, #5]
 801215e:	9204      	str	r2, [sp, #16]
 8012160:	785a      	ldrb	r2, [r3, #1]
 8012162:	4413      	add	r3, r2
 8012164:	3302      	adds	r3, #2
 8012166:	e796      	b.n	8012096 <_parse_response+0x6a>
 8012168:	789a      	ldrb	r2, [r3, #2]
 801216a:	f893 8005 	ldrb.w	r8, [r3, #5]
 801216e:	9205      	str	r2, [sp, #20]
 8012170:	78da      	ldrb	r2, [r3, #3]
 8012172:	2101      	movs	r1, #1
 8012174:	9206      	str	r2, [sp, #24]
 8012176:	791a      	ldrb	r2, [r3, #4]
 8012178:	3306      	adds	r3, #6
 801217a:	9207      	str	r2, [sp, #28]
 801217c:	e78b      	b.n	8012096 <_parse_response+0x6a>
 801217e:	bf00      	nop
 8012180:	2001d994 	mulcs	r1, r4, r9
 8012184:	2001d6f0 	strdcs	sp, [r1], -r0
 8012188:	2001d4c0 	andcs	sp, r1, r0, asr #9
 801218c:	2001d4c8 	andcs	sp, r1, r8, asr #9
 8012190:	2001d4c4 	andcs	sp, r1, r4, asr #9

08012194 <memcpy.isra.0>:
 8012194:	3801      	subs	r0, #1
 8012196:	440a      	add	r2, r1
 8012198:	4291      	cmp	r1, r2
 801219a:	d100      	bne.n	801219e <memcpy.isra.0+0xa>
 801219c:	4770      	bx	lr
 801219e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80121a2:	f800 3f01 	strb.w	r3, [r0, #1]!
 80121a6:	e7f7      	b.n	8012198 <memcpy.isra.0+0x4>

080121a8 <dhcp_client>:
 80121a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121ac:	b087      	sub	sp, #28
 80121ae:	9203      	str	r2, [sp, #12]
 80121b0:	4a77      	ldr	r2, [pc, #476]	; (8012390 <dhcp_client+0x1e8>)
 80121b2:	460f      	mov	r7, r1
 80121b4:	4605      	mov	r5, r0
 80121b6:	f44f 7309 	mov.w	r3, #548	; 0x224
 80121ba:	4614      	mov	r4, r2
 80121bc:	2100      	movs	r1, #0
 80121be:	3b01      	subs	r3, #1
 80121c0:	f802 1b01 	strb.w	r1, [r2], #1
 80121c4:	d1fb      	bne.n	80121be <dhcp_client+0x16>
 80121c6:	f240 1301 	movw	r3, #257	; 0x101
 80121ca:	2206      	movs	r2, #6
 80121cc:	4629      	mov	r1, r5
 80121ce:	4871      	ldr	r0, [pc, #452]	; (8012394 <dhcp_client+0x1ec>)
 80121d0:	8023      	strh	r3, [r4, #0]
 80121d2:	70a2      	strb	r2, [r4, #2]
 80121d4:	f7ff ffde 	bl	8012194 <memcpy.isra.0>
 80121d8:	4b6f      	ldr	r3, [pc, #444]	; (8012398 <dhcp_client+0x1f0>)
 80121da:	2044      	movs	r0, #68	; 0x44
 80121dc:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 80121e0:	f240 1335 	movw	r3, #309	; 0x135
 80121e4:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 80121e8:	f7fe fc06 	bl	80109f8 <udp_bind>
 80121ec:	1e06      	subs	r6, r0, #0
 80121ee:	f2c0 80c9 	blt.w	8012384 <dhcp_client+0x1dc>
 80121f2:	f04f 0915 	mov.w	r9, #21
 80121f6:	f8df a198 	ldr.w	sl, [pc, #408]	; 8012390 <dhcp_client+0x1e8>
 80121fa:	f1b9 0901 	subs.w	r9, r9, #1
 80121fe:	d11f      	bne.n	8012240 <dhcp_client+0x98>
 8012200:	464c      	mov	r4, r9
 8012202:	2044      	movs	r0, #68	; 0x44
 8012204:	f7fe fc12 	bl	8010a2c <udp_unbind>
 8012208:	2c00      	cmp	r4, #0
 801220a:	f000 80be 	beq.w	801238a <dhcp_client+0x1e2>
 801220e:	2204      	movs	r2, #4
 8012210:	4962      	ldr	r1, [pc, #392]	; (801239c <dhcp_client+0x1f4>)
 8012212:	a805      	add	r0, sp, #20
 8012214:	f7ff ffbe 	bl	8012194 <memcpy.isra.0>
 8012218:	9b05      	ldr	r3, [sp, #20]
 801221a:	2204      	movs	r2, #4
 801221c:	4960      	ldr	r1, [pc, #384]	; (80123a0 <dhcp_client+0x1f8>)
 801221e:	603b      	str	r3, [r7, #0]
 8012220:	a805      	add	r0, sp, #20
 8012222:	f7ff ffb7 	bl	8012194 <memcpy.isra.0>
 8012226:	9b05      	ldr	r3, [sp, #20]
 8012228:	a805      	add	r0, sp, #20
 801222a:	60bb      	str	r3, [r7, #8]
 801222c:	2204      	movs	r2, #4
 801222e:	495d      	ldr	r1, [pc, #372]	; (80123a4 <dhcp_client+0x1fc>)
 8012230:	f7ff ffb0 	bl	8012194 <memcpy.isra.0>
 8012234:	2000      	movs	r0, #0
 8012236:	9b05      	ldr	r3, [sp, #20]
 8012238:	607b      	str	r3, [r7, #4]
 801223a:	b007      	add	sp, #28
 801223c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012240:	f643 5301 	movw	r3, #15617	; 0x3d01
 8012244:	f240 1807 	movw	r8, #263	; 0x107
 8012248:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 801224c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8012250:	782b      	ldrb	r3, [r5, #0]
 8012252:	4a55      	ldr	r2, [pc, #340]	; (80123a8 <dhcp_client+0x200>)
 8012254:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8012258:	786b      	ldrb	r3, [r5, #1]
 801225a:	fa5f fb86 	uxtb.w	fp, r6
 801225e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8012262:	78ab      	ldrb	r3, [r5, #2]
 8012264:	4651      	mov	r1, sl
 8012266:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801226a:	78eb      	ldrb	r3, [r5, #3]
 801226c:	4658      	mov	r0, fp
 801226e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8012272:	792b      	ldrb	r3, [r5, #4]
 8012274:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8012278:	796b      	ldrb	r3, [r5, #5]
 801227a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801227e:	4b4b      	ldr	r3, [pc, #300]	; (80123ac <dhcp_client+0x204>)
 8012280:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8012284:	23ff      	movs	r3, #255	; 0xff
 8012286:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 801228a:	2343      	movs	r3, #67	; 0x43
 801228c:	f240 1205 	movw	r2, #261	; 0x105
 8012290:	9300      	str	r3, [sp, #0]
 8012292:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012296:	f7fe fc45 	bl	8010b24 <udp_send>
 801229a:	4629      	mov	r1, r5
 801229c:	4630      	mov	r0, r6
 801229e:	f7ff fec5 	bl	801202c <_parse_response>
 80122a2:	2802      	cmp	r0, #2
 80122a4:	d1a9      	bne.n	80121fa <dhcp_client+0x52>
 80122a6:	f643 5303 	movw	r3, #15619	; 0x3d03
 80122aa:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80122ae:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80122b2:	782b      	ldrb	r3, [r5, #0]
 80122b4:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 80123b0 <dhcp_client+0x208>
 80122b8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80122bc:	786b      	ldrb	r3, [r5, #1]
 80122be:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80122c2:	78ab      	ldrb	r3, [r5, #2]
 80122c4:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80122c8:	78eb      	ldrb	r3, [r5, #3]
 80122ca:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80122ce:	792b      	ldrb	r3, [r5, #4]
 80122d0:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 80122d4:	796b      	ldrb	r3, [r5, #5]
 80122d6:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 80122da:	f240 4332 	movw	r3, #1074	; 0x432
 80122de:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 80122e2:	4b2e      	ldr	r3, [pc, #184]	; (801239c <dhcp_client+0x1f4>)
 80122e4:	881a      	ldrh	r2, [r3, #0]
 80122e6:	885b      	ldrh	r3, [r3, #2]
 80122e8:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 80122ec:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 80122f0:	f240 4336 	movw	r3, #1078	; 0x436
 80122f4:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 80122f8:	4b2e      	ldr	r3, [pc, #184]	; (80123b4 <dhcp_client+0x20c>)
 80122fa:	221e      	movs	r2, #30
 80122fc:	681b      	ldr	r3, [r3, #0]
 80122fe:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8012302:	230c      	movs	r3, #12
 8012304:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8012308:	9b03      	ldr	r3, [sp, #12]
 801230a:	1e58      	subs	r0, r3, #1
 801230c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8012310:	f1a2 0e1e 	sub.w	lr, r2, #30
 8012314:	1c51      	adds	r1, r2, #1
 8012316:	bb8b      	cbnz	r3, 801237c <dhcp_client+0x1d4>
 8012318:	2037      	movs	r0, #55	; 0x37
 801231a:	18a3      	adds	r3, r4, r2
 801231c:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8012320:	2006      	movs	r0, #6
 8012322:	4421      	add	r1, r4
 8012324:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8012328:	2103      	movs	r1, #3
 801232a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 801232e:	210f      	movs	r1, #15
 8012330:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8012334:	213a      	movs	r1, #58	; 0x3a
 8012336:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 801233a:	213b      	movs	r1, #59	; 0x3b
 801233c:	f04f 0801 	mov.w	r8, #1
 8012340:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8012344:	21ff      	movs	r1, #255	; 0xff
 8012346:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 801234a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 801234e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8012352:	2343      	movs	r3, #67	; 0x43
 8012354:	32f5      	adds	r2, #245	; 0xf5
 8012356:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801235a:	4651      	mov	r1, sl
 801235c:	9300      	str	r3, [sp, #0]
 801235e:	b292      	uxth	r2, r2
 8012360:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012364:	4658      	mov	r0, fp
 8012366:	f7fe fbdd 	bl	8010b24 <udp_send>
 801236a:	4629      	mov	r1, r5
 801236c:	4630      	mov	r0, r6
 801236e:	f7ff fe5d 	bl	801202c <_parse_response>
 8012372:	2805      	cmp	r0, #5
 8012374:	f47f af41 	bne.w	80121fa <dhcp_client+0x52>
 8012378:	4644      	mov	r4, r8
 801237a:	e742      	b.n	8012202 <dhcp_client+0x5a>
 801237c:	460a      	mov	r2, r1
 801237e:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8012382:	e7c3      	b.n	801230c <dhcp_client+0x164>
 8012384:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012388:	e757      	b.n	801223a <dhcp_client+0x92>
 801238a:	f06f 0001 	mvn.w	r0, #1
 801238e:	e754      	b.n	801223a <dhcp_client+0x92>
 8012390:	2001d4cc 	andcs	sp, r1, ip, asr #9
 8012394:	2001d4e8 	andcs	sp, r1, r8, ror #9
 8012398:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 801239c:	2001d4c4 	andcs	sp, r1, r4, asr #9
 80123a0:	2001d4c0 	andcs	sp, r1, r0, asr #9
 80123a4:	2001d4c8 	andcs	sp, r1, r8, asr #9
 80123a8:	03010637 	movweq	r0, #5687	; 0x1637
 80123ac:	3b3a0f06 	blcc	8e95fcc <__exidx_end+0xe7cde8>
 80123b0:	2001d5d5 	ldrdcs	sp, [r1], -r5
 80123b4:	2001d6f0 	strdcs	sp, [r1], -r0

080123b8 <dhcp_client_release>:
 80123b8:	b507      	push	{r0, r1, r2, lr}
 80123ba:	2044      	movs	r0, #68	; 0x44
 80123bc:	f7fe fb1c 	bl	80109f8 <udp_bind>
 80123c0:	f243 6307 	movw	r3, #13831	; 0x3607
 80123c4:	4911      	ldr	r1, [pc, #68]	; (801240c <dhcp_client_release+0x54>)
 80123c6:	b2c0      	uxtb	r0, r0
 80123c8:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 80123cc:	2304      	movs	r3, #4
 80123ce:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 80123d2:	4b0f      	ldr	r3, [pc, #60]	; (8012410 <dhcp_client_release+0x58>)
 80123d4:	781a      	ldrb	r2, [r3, #0]
 80123d6:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 80123da:	785a      	ldrb	r2, [r3, #1]
 80123dc:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 80123e0:	789a      	ldrb	r2, [r3, #2]
 80123e2:	78db      	ldrb	r3, [r3, #3]
 80123e4:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 80123e8:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80123ec:	23ff      	movs	r3, #255	; 0xff
 80123ee:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80123f2:	2343      	movs	r3, #67	; 0x43
 80123f4:	22fa      	movs	r2, #250	; 0xfa
 80123f6:	9300      	str	r3, [sp, #0]
 80123f8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80123fc:	f7fe fb92 	bl	8010b24 <udp_send>
 8012400:	2044      	movs	r0, #68	; 0x44
 8012402:	b003      	add	sp, #12
 8012404:	f85d eb04 	ldr.w	lr, [sp], #4
 8012408:	f7fe bb10 	b.w	8010a2c <udp_unbind>
 801240c:	2001d4cc 	andcs	sp, r1, ip, asr #9
 8012410:	2001d6f0 	strdcs	sp, [r1], -r0

08012414 <memcpy.isra.0>:
 8012414:	3801      	subs	r0, #1
 8012416:	440a      	add	r2, r1
 8012418:	4291      	cmp	r1, r2
 801241a:	d100      	bne.n	801241e <memcpy.isra.0+0xa>
 801241c:	4770      	bx	lr
 801241e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012422:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012426:	e7f7      	b.n	8012418 <memcpy.isra.0+0x4>

08012428 <_send_report>:
 8012428:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801242a:	491c      	ldr	r1, [pc, #112]	; (801249c <_send_report+0x74>)
 801242c:	4c1c      	ldr	r4, [pc, #112]	; (80124a0 <_send_report+0x78>)
 801242e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8012432:	9001      	str	r0, [sp, #4]
 8012434:	70cb      	strb	r3, [r1, #3]
 8012436:	f3c0 4307 	ubfx	r3, r0, #16, #8
 801243a:	f3c0 6007 	ubfx	r0, r0, #24, #8
 801243e:	710b      	strb	r3, [r1, #4]
 8012440:	7148      	strb	r0, [r1, #5]
 8012442:	2206      	movs	r2, #6
 8012444:	4620      	mov	r0, r4
 8012446:	f7ff ffe5 	bl	8012414 <memcpy.isra.0>
 801244a:	2204      	movs	r2, #4
 801244c:	2700      	movs	r7, #0
 801244e:	4d15      	ldr	r5, [pc, #84]	; (80124a4 <_send_report+0x7c>)
 8012450:	eb0d 0102 	add.w	r1, sp, r2
 8012454:	882b      	ldrh	r3, [r5, #0]
 8012456:	f104 001e 	add.w	r0, r4, #30
 801245a:	f104 060e 	add.w	r6, r4, #14
 801245e:	8263      	strh	r3, [r4, #18]
 8012460:	f7ff ffd8 	bl	8012414 <memcpy.isra.0>
 8012464:	2118      	movs	r1, #24
 8012466:	4630      	mov	r0, r6
 8012468:	8327      	strh	r7, [r4, #24]
 801246a:	f000 f8c6 	bl	80125fa <net_chksum>
 801246e:	2204      	movs	r2, #4
 8012470:	8320      	strh	r0, [r4, #24]
 8012472:	eb0d 0102 	add.w	r1, sp, r2
 8012476:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801247a:	f7ff ffcb 	bl	8012414 <memcpy.isra.0>
 801247e:	2120      	movs	r1, #32
 8012480:	4630      	mov	r0, r6
 8012482:	8527      	strh	r7, [r4, #40]	; 0x28
 8012484:	f000 f8b9 	bl	80125fa <net_chksum>
 8012488:	212e      	movs	r1, #46	; 0x2e
 801248a:	8520      	strh	r0, [r4, #40]	; 0x28
 801248c:	4620      	mov	r0, r4
 801248e:	f002 fcf1 	bl	8014e74 <emac_eth_send>
 8012492:	882b      	ldrh	r3, [r5, #0]
 8012494:	3301      	adds	r3, #1
 8012496:	802b      	strh	r3, [r5, #0]
 8012498:	b003      	add	sp, #12
 801249a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801249c:	2001d84c 	andcs	sp, r1, ip, asr #16
 80124a0:	2001d854 	andcs	sp, r1, r4, asr r8
 80124a4:	2001d814 	andcs	sp, r1, r4, lsl r8

080124a8 <igmp_set_ip>:
 80124a8:	b507      	push	{r0, r1, r2, lr}
 80124aa:	2204      	movs	r2, #4
 80124ac:	6803      	ldr	r3, [r0, #0]
 80124ae:	eb0d 0102 	add.w	r1, sp, r2
 80124b2:	4806      	ldr	r0, [pc, #24]	; (80124cc <igmp_set_ip+0x24>)
 80124b4:	9301      	str	r3, [sp, #4]
 80124b6:	f7ff ffad 	bl	8012414 <memcpy.isra.0>
 80124ba:	2204      	movs	r2, #4
 80124bc:	4804      	ldr	r0, [pc, #16]	; (80124d0 <igmp_set_ip+0x28>)
 80124be:	eb0d 0102 	add.w	r1, sp, r2
 80124c2:	f7ff ffa7 	bl	8012414 <memcpy.isra.0>
 80124c6:	b003      	add	sp, #12
 80124c8:	f85d fb04 	ldr.w	pc, [sp], #4
 80124cc:	2001d86e 	andcs	sp, r1, lr, ror #16
 80124d0:	2001d836 	andcs	sp, r1, r6, lsr r8

080124d4 <igmp_timer>:
 80124d4:	b570      	push	{r4, r5, r6, lr}
 80124d6:	2500      	movs	r5, #0
 80124d8:	2602      	movs	r6, #2
 80124da:	4c0a      	ldr	r4, [pc, #40]	; (8012504 <igmp_timer+0x30>)
 80124dc:	7963      	ldrb	r3, [r4, #5]
 80124de:	2b01      	cmp	r3, #1
 80124e0:	d109      	bne.n	80124f6 <igmp_timer+0x22>
 80124e2:	7923      	ldrb	r3, [r4, #4]
 80124e4:	b13b      	cbz	r3, 80124f6 <igmp_timer+0x22>
 80124e6:	3b01      	subs	r3, #1
 80124e8:	b2db      	uxtb	r3, r3
 80124ea:	7123      	strb	r3, [r4, #4]
 80124ec:	b91b      	cbnz	r3, 80124f6 <igmp_timer+0x22>
 80124ee:	6820      	ldr	r0, [r4, #0]
 80124f0:	f7ff ff9a 	bl	8012428 <_send_report>
 80124f4:	7166      	strb	r6, [r4, #5]
 80124f6:	3501      	adds	r5, #1
 80124f8:	2d24      	cmp	r5, #36	; 0x24
 80124fa:	f104 0408 	add.w	r4, r4, #8
 80124fe:	d1ed      	bne.n	80124dc <igmp_timer+0x8>
 8012500:	bd70      	pop	{r4, r5, r6, pc}
 8012502:	bf00      	nop
 8012504:	2001d6f4 	strdcs	sp, [r1], -r4

08012508 <igmp_join>:
 8012508:	b538      	push	{r3, r4, r5, lr}
 801250a:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 801250e:	2be0      	cmp	r3, #224	; 0xe0
 8012510:	d11b      	bne.n	801254a <igmp_join+0x42>
 8012512:	4911      	ldr	r1, [pc, #68]	; (8012558 <igmp_join+0x50>)
 8012514:	680c      	ldr	r4, [r1, #0]
 8012516:	2c24      	cmp	r4, #36	; 0x24
 8012518:	d01a      	beq.n	8012550 <igmp_join+0x48>
 801251a:	2300      	movs	r3, #0
 801251c:	4a0f      	ldr	r2, [pc, #60]	; (801255c <igmp_join+0x54>)
 801251e:	429c      	cmp	r4, r3
 8012520:	dc0d      	bgt.n	801253e <igmp_join+0x36>
 8012522:	f44f 7381 	mov.w	r3, #258	; 0x102
 8012526:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 801252a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 801252e:	8093      	strh	r3, [r2, #4]
 8012530:	1c63      	adds	r3, r4, #1
 8012532:	600b      	str	r3, [r1, #0]
 8012534:	f7ff ff78 	bl	8012428 <_send_report>
 8012538:	4623      	mov	r3, r4
 801253a:	4618      	mov	r0, r3
 801253c:	bd38      	pop	{r3, r4, r5, pc}
 801253e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8012542:	4285      	cmp	r5, r0
 8012544:	d0f9      	beq.n	801253a <igmp_join+0x32>
 8012546:	3301      	adds	r3, #1
 8012548:	e7e9      	b.n	801251e <igmp_join+0x16>
 801254a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801254e:	e7f4      	b.n	801253a <igmp_join+0x32>
 8012550:	f06f 0301 	mvn.w	r3, #1
 8012554:	e7f1      	b.n	801253a <igmp_join+0x32>
 8012556:	bf00      	nop
 8012558:	2001d818 	andcs	sp, r1, r8, lsl r8
 801255c:	2001d6f4 	strdcs	sp, [r1], -r4

08012560 <igmp_leave>:
 8012560:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012564:	2600      	movs	r6, #0
 8012566:	4f1c      	ldr	r7, [pc, #112]	; (80125d8 <igmp_leave+0x78>)
 8012568:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 801256c:	4283      	cmp	r3, r0
 801256e:	d007      	beq.n	8012580 <igmp_leave+0x20>
 8012570:	3601      	adds	r6, #1
 8012572:	2e24      	cmp	r6, #36	; 0x24
 8012574:	d1f8      	bne.n	8012568 <igmp_leave+0x8>
 8012576:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801257a:	b002      	add	sp, #8
 801257c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012580:	2400      	movs	r4, #0
 8012582:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80125dc <igmp_leave+0x7c>
 8012586:	4d16      	ldr	r5, [pc, #88]	; (80125e0 <igmp_leave+0x80>)
 8012588:	f8b8 3000 	ldrh.w	r3, [r8]
 801258c:	2118      	movs	r1, #24
 801258e:	9001      	str	r0, [sp, #4]
 8012590:	4814      	ldr	r0, [pc, #80]	; (80125e4 <igmp_leave+0x84>)
 8012592:	826b      	strh	r3, [r5, #18]
 8012594:	832c      	strh	r4, [r5, #24]
 8012596:	f000 f830 	bl	80125fa <net_chksum>
 801259a:	2204      	movs	r2, #4
 801259c:	8328      	strh	r0, [r5, #24]
 801259e:	eb0d 0102 	add.w	r1, sp, r2
 80125a2:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80125a6:	f7ff ff35 	bl	8012414 <memcpy.isra.0>
 80125aa:	2120      	movs	r1, #32
 80125ac:	f105 000e 	add.w	r0, r5, #14
 80125b0:	852c      	strh	r4, [r5, #40]	; 0x28
 80125b2:	f000 f822 	bl	80125fa <net_chksum>
 80125b6:	212e      	movs	r1, #46	; 0x2e
 80125b8:	8528      	strh	r0, [r5, #40]	; 0x28
 80125ba:	4628      	mov	r0, r5
 80125bc:	f002 fc5a 	bl	8014e74 <emac_eth_send>
 80125c0:	f8b8 3000 	ldrh.w	r3, [r8]
 80125c4:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 80125c8:	3301      	adds	r3, #1
 80125ca:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 80125ce:	4620      	mov	r0, r4
 80125d0:	f8a8 3000 	strh.w	r3, [r8]
 80125d4:	80bc      	strh	r4, [r7, #4]
 80125d6:	e7d0      	b.n	801257a <igmp_leave+0x1a>
 80125d8:	2001d6f4 	strdcs	sp, [r1], -r4
 80125dc:	2001d814 	andcs	sp, r1, r4, lsl r8
 80125e0:	2001d81c 	andcs	sp, r1, ip, lsl r8
 80125e4:	2001d862 	andcs	sp, r1, r2, ror #16

080125e8 <ip_set_ip>:
 80125e8:	b510      	push	{r4, lr}
 80125ea:	4604      	mov	r4, r0
 80125ec:	f7fe f9e4 	bl	80109b8 <udp_set_ip>
 80125f0:	4620      	mov	r0, r4
 80125f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80125f6:	f7ff bf57 	b.w	80124a8 <igmp_set_ip>

080125fa <net_chksum>:
 80125fa:	2300      	movs	r3, #0
 80125fc:	f021 0201 	bic.w	r2, r1, #1
 8012600:	b530      	push	{r4, r5, lr}
 8012602:	1884      	adds	r4, r0, r2
 8012604:	42a0      	cmp	r0, r4
 8012606:	d10b      	bne.n	8012620 <net_chksum+0x26>
 8012608:	4291      	cmp	r1, r2
 801260a:	d004      	beq.n	8012616 <net_chksum+0x1c>
 801260c:	7802      	ldrb	r2, [r0, #0]
 801260e:	0212      	lsls	r2, r2, #8
 8012610:	ba52      	rev16	r2, r2
 8012612:	b292      	uxth	r2, r2
 8012614:	4413      	add	r3, r2
 8012616:	0c1a      	lsrs	r2, r3, #16
 8012618:	d106      	bne.n	8012628 <net_chksum+0x2e>
 801261a:	43d8      	mvns	r0, r3
 801261c:	b280      	uxth	r0, r0
 801261e:	bd30      	pop	{r4, r5, pc}
 8012620:	f830 5b02 	ldrh.w	r5, [r0], #2
 8012624:	442b      	add	r3, r5
 8012626:	e7ed      	b.n	8012604 <net_chksum+0xa>
 8012628:	b29b      	uxth	r3, r3
 801262a:	e7f3      	b.n	8012614 <net_chksum+0x1a>

0801262c <memcpy.isra.0>:
 801262c:	3801      	subs	r0, #1
 801262e:	440a      	add	r2, r1
 8012630:	4291      	cmp	r1, r2
 8012632:	d100      	bne.n	8012636 <memcpy.isra.0+0xa>
 8012634:	4770      	bx	lr
 8012636:	f811 3b01 	ldrb.w	r3, [r1], #1
 801263a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801263e:	e7f7      	b.n	8012630 <memcpy.isra.0+0x4>

08012640 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8012640:	b430      	push	{r4, r5}
 8012642:	b168      	cbz	r0, 8012660 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8012644:	2300      	movs	r3, #0
 8012646:	7905      	ldrb	r5, [r0, #4]
 8012648:	5cd4      	ldrb	r4, [r2, r3]
 801264a:	b11c      	cbz	r4, 8012654 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 801264c:	1c5c      	adds	r4, r3, #1
 801264e:	429d      	cmp	r5, r3
 8012650:	4623      	mov	r3, r4
 8012652:	dcf9      	bgt.n	8012648 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8012654:	6804      	ldr	r4, [r0, #0]
 8012656:	b2db      	uxtb	r3, r3
 8012658:	69e4      	ldr	r4, [r4, #28]
 801265a:	46a4      	mov	ip, r4
 801265c:	bc30      	pop	{r4, r5}
 801265e:	4760      	bx	ip
 8012660:	bc30      	pop	{r4, r5}
 8012662:	4770      	bx	lr

08012664 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8012664:	b110      	cbz	r0, 801266c <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8012666:	6803      	ldr	r3, [r0, #0]
 8012668:	691b      	ldr	r3, [r3, #16]
 801266a:	4718      	bx	r3
 801266c:	4770      	bx	lr
	...

08012670 <DisplayUdf::DisplayUdf()>:
 8012670:	b510      	push	{r4, lr}
 8012672:	4604      	mov	r4, r0
 8012674:	f000 fef2 	bl	801345c <Display::Display()>
 8012678:	2202      	movs	r2, #2
 801267a:	2300      	movs	r3, #0
 801267c:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8012680:	4b05      	ldr	r3, [pc, #20]	; (8012698 <DisplayUdf::DisplayUdf()+0x28>)
 8012682:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8012686:	601c      	str	r4, [r3, #0]
 8012688:	2301      	movs	r3, #1
 801268a:	f802 3f01 	strb.w	r3, [r2, #1]!
 801268e:	3301      	adds	r3, #1
 8012690:	2b15      	cmp	r3, #21
 8012692:	d1fa      	bne.n	801268a <DisplayUdf::DisplayUdf()+0x1a>
 8012694:	4620      	mov	r0, r4
 8012696:	bd10      	pop	{r4, pc}
 8012698:	2001d884 	andcs	sp, r1, r4, lsl #17

0801269c <DisplayUdf::SetTitle(char const*, ...)>:
 801269c:	b40e      	push	{r1, r2, r3}
 801269e:	b517      	push	{r0, r1, r2, r4, lr}
 80126a0:	ab05      	add	r3, sp, #20
 80126a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80126a6:	4604      	mov	r4, r0
 80126a8:	211f      	movs	r1, #31
 80126aa:	301c      	adds	r0, #28
 80126ac:	9301      	str	r3, [sp, #4]
 80126ae:	f7f6 ffef 	bl	8009690 <vsnprintf>
 80126b2:	2300      	movs	r3, #0
 80126b4:	4404      	add	r4, r0
 80126b6:	7723      	strb	r3, [r4, #28]
 80126b8:	b003      	add	sp, #12
 80126ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126be:	b003      	add	sp, #12
 80126c0:	4770      	bx	lr

080126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80126c2:	1e4b      	subs	r3, r1, #1
 80126c4:	2b05      	cmp	r3, #5
 80126c6:	b530      	push	{r4, r5, lr}
 80126c8:	d80f      	bhi.n	80126ea <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80126ca:	2300      	movs	r3, #0
 80126cc:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80126d0:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80126d4:	428d      	cmp	r5, r1
 80126d6:	d109      	bne.n	80126ec <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80126d8:	1884      	adds	r4, r0, r2
 80126da:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80126de:	4403      	add	r3, r0
 80126e0:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80126e4:	4410      	add	r0, r2
 80126e6:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 80126ea:	bd30      	pop	{r4, r5, pc}
 80126ec:	3301      	adds	r3, #1
 80126ee:	2b14      	cmp	r3, #20
 80126f0:	d1ee      	bne.n	80126d0 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80126f2:	e7f7      	b.n	80126e4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080126f4 <DisplayUdf::ShowEmacStart()>:
 80126f4:	b510      	push	{r4, lr}
 80126f6:	4604      	mov	r4, r0
 80126f8:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80126fc:	6980      	ldr	r0, [r0, #24]
 80126fe:	f7ff ffb1 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012702:	4620      	mov	r0, r4
 8012704:	4a02      	ldr	r2, [pc, #8]	; (8012710 <DisplayUdf::ShowEmacStart()+0x1c>)
 8012706:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801270a:	f7f6 f81d 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 801270e:	bd10      	pop	{r4, pc}
 8012710:	080189cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, pc}

08012714 <DisplayUdf::ShowIpAddress()>:
 8012714:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012718:	4604      	mov	r4, r0
 801271a:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 801271e:	b086      	sub	sp, #24
 8012720:	6980      	ldr	r0, [r0, #24]
 8012722:	f7ff ff9f 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012726:	4b13      	ldr	r3, [pc, #76]	; (8012774 <DisplayUdf::ShowIpAddress()+0x60>)
 8012728:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 801272c:	681d      	ldr	r5, [r3, #0]
 801272e:	69e8      	ldr	r0, [r5, #28]
 8012730:	696e      	ldr	r6, [r5, #20]
 8012732:	f003 fcf9 	bl	8016128 <__popcountsi2>
 8012736:	79eb      	ldrb	r3, [r5, #7]
 8012738:	fa5f f886 	uxtb.w	r8, r6
 801273c:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8012740:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8012744:	0e36      	lsrs	r6, r6, #24
 8012746:	b99b      	cbnz	r3, 8012770 <DisplayUdf::ShowIpAddress()+0x5c>
 8012748:	796b      	ldrb	r3, [r5, #5]
 801274a:	2b00      	cmp	r3, #0
 801274c:	bf14      	ite	ne
 801274e:	2244      	movne	r2, #68	; 0x44
 8012750:	2253      	moveq	r2, #83	; 0x53
 8012752:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8012756:	4643      	mov	r3, r8
 8012758:	4639      	mov	r1, r7
 801275a:	4620      	mov	r0, r4
 801275c:	e9cd a601 	strd	sl, r6, [sp, #4]
 8012760:	4a05      	ldr	r2, [pc, #20]	; (8012778 <DisplayUdf::ShowIpAddress()+0x64>)
 8012762:	f8cd 9000 	str.w	r9, [sp]
 8012766:	f7f5 ffef 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 801276a:	b006      	add	sp, #24
 801276c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012770:	225a      	movs	r2, #90	; 0x5a
 8012772:	e7ee      	b.n	8012752 <DisplayUdf::ShowIpAddress()+0x3e>
 8012774:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 8012778:	080189dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, pc}

0801277c <DisplayUdf::ShowNetmask()>:
 801277c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801277e:	4604      	mov	r4, r0
 8012780:	4b0b      	ldr	r3, [pc, #44]	; (80127b0 <DisplayUdf::ShowNetmask()+0x34>)
 8012782:	681b      	ldr	r3, [r3, #0]
 8012784:	69db      	ldr	r3, [r3, #28]
 8012786:	0e1a      	lsrs	r2, r3, #24
 8012788:	9202      	str	r2, [sp, #8]
 801278a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801278e:	9201      	str	r2, [sp, #4]
 8012790:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012794:	9200      	str	r2, [sp, #0]
 8012796:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 801279a:	4a06      	ldr	r2, [pc, #24]	; (80127b4 <DisplayUdf::ShowNetmask()+0x38>)
 801279c:	b2db      	uxtb	r3, r3
 801279e:	f7f5 ffd3 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 80127a2:	4620      	mov	r0, r4
 80127a4:	b004      	add	sp, #16
 80127a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80127aa:	f7ff bfb3 	b.w	8012714 <DisplayUdf::ShowIpAddress()>
 80127ae:	bf00      	nop
 80127b0:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 80127b4:	080189ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, fp, pc}

080127b8 <DisplayUdf::ShowGatewayIp()>:
 80127b8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80127ba:	4604      	mov	r4, r0
 80127bc:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80127c0:	6980      	ldr	r0, [r0, #24]
 80127c2:	f7ff ff4f 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80127c6:	4b0a      	ldr	r3, [pc, #40]	; (80127f0 <DisplayUdf::ShowGatewayIp()+0x38>)
 80127c8:	4620      	mov	r0, r4
 80127ca:	681b      	ldr	r3, [r3, #0]
 80127cc:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80127d0:	699b      	ldr	r3, [r3, #24]
 80127d2:	0e1a      	lsrs	r2, r3, #24
 80127d4:	9202      	str	r2, [sp, #8]
 80127d6:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80127da:	9201      	str	r2, [sp, #4]
 80127dc:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80127e0:	9200      	str	r2, [sp, #0]
 80127e2:	b2db      	uxtb	r3, r3
 80127e4:	4a03      	ldr	r2, [pc, #12]	; (80127f4 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80127e6:	f7f5 ffaf 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 80127ea:	b004      	add	sp, #16
 80127ec:	bd10      	pop	{r4, pc}
 80127ee:	bf00      	nop
 80127f0:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4
 80127f4:	080189fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, fp, pc}

080127f8 <DisplayUdf::ShowHostName()>:
 80127f8:	b510      	push	{r4, lr}
 80127fa:	4604      	mov	r4, r0
 80127fc:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8012800:	6980      	ldr	r0, [r0, #24]
 8012802:	f7ff ff2f 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012806:	4b05      	ldr	r3, [pc, #20]	; (801281c <DisplayUdf::ShowHostName()+0x24>)
 8012808:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 801280c:	681a      	ldr	r2, [r3, #0]
 801280e:	69a0      	ldr	r0, [r4, #24]
 8012810:	3220      	adds	r2, #32
 8012812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012816:	f7ff bf13 	b.w	8012640 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801281a:	bf00      	nop
 801281c:	2001d2b4 			; <UNDEFINED> instruction: 0x2001d2b4

08012820 <DisplayUdf::Show()>:
 8012820:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012822:	4604      	mov	r4, r0
 8012824:	21ff      	movs	r1, #255	; 0xff
 8012826:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 801282a:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 801282e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012832:	2806      	cmp	r0, #6
 8012834:	bf88      	it	hi
 8012836:	7019      	strbhi	r1, [r3, #0]
 8012838:	429a      	cmp	r2, r3
 801283a:	d1f8      	bne.n	801282e <DisplayUdf::Show()+0xe>
 801283c:	2501      	movs	r5, #1
 801283e:	4629      	mov	r1, r5
 8012840:	3501      	adds	r5, #1
 8012842:	69a0      	ldr	r0, [r4, #24]
 8012844:	b2ed      	uxtb	r5, r5
 8012846:	f7ff ff0d 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801284a:	2d06      	cmp	r5, #6
 801284c:	d1f7      	bne.n	801283e <DisplayUdf::Show()+0x1e>
 801284e:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8012852:	69a0      	ldr	r0, [r4, #24]
 8012854:	f104 021c 	add.w	r2, r4, #28
 8012858:	f7ff fef2 	bl	8012640 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801285c:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8012860:	69a0      	ldr	r0, [r4, #24]
 8012862:	4a0d      	ldr	r2, [pc, #52]	; (8012898 <DisplayUdf::Show()+0x78>)
 8012864:	f7ff feec 	bl	8012640 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012868:	4b0c      	ldr	r3, [pc, #48]	; (801289c <DisplayUdf::Show()+0x7c>)
 801286a:	4a0d      	ldr	r2, [pc, #52]	; (80128a0 <DisplayUdf::Show()+0x80>)
 801286c:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8012870:	9300      	str	r3, [sp, #0]
 8012872:	4620      	mov	r0, r4
 8012874:	2303      	movs	r3, #3
 8012876:	f7f5 ff67 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 801287a:	4620      	mov	r0, r4
 801287c:	f7ff ff4a 	bl	8012714 <DisplayUdf::ShowIpAddress()>
 8012880:	4620      	mov	r0, r4
 8012882:	f7ff ff99 	bl	80127b8 <DisplayUdf::ShowGatewayIp()>
 8012886:	4620      	mov	r0, r4
 8012888:	f7ff ff78 	bl	801277c <DisplayUdf::ShowNetmask()>
 801288c:	4620      	mov	r0, r4
 801288e:	b003      	add	sp, #12
 8012890:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012894:	f7ff bfb0 	b.w	80127f8 <DisplayUdf::ShowHostName()>
 8012898:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 801289c:	2001d91c 	andcs	sp, r1, ip, lsl r9
 80128a0:	08018a0c 	stmdaeq	r1, {r2, r3, r9, fp, pc}

080128a4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80128a4:	3901      	subs	r1, #1
 80128a6:	b510      	push	{r4, lr}
 80128a8:	4604      	mov	r4, r0
 80128aa:	2903      	cmp	r1, #3
 80128ac:	d814      	bhi.n	80128d8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80128ae:	e8df f001 	tbb	[pc, r1]
 80128b2:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80128b6:	4b14      	ldr	r3, [pc, #80]	; (8012908 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80128b8:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80128bc:	6818      	ldr	r0, [r3, #0]
 80128be:	f7f7 f95d 	bl	8009b7c <Display::Status(Display7SegmentMessage)>
 80128c2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80128c6:	69a0      	ldr	r0, [r4, #24]
 80128c8:	f7ff fecc 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80128cc:	4a0f      	ldr	r2, [pc, #60]	; (801290c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80128ce:	4620      	mov	r0, r4
 80128d0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80128d4:	f7f5 ff38 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 80128d8:	bd10      	pop	{r4, pc}
 80128da:	f248 0180 	movw	r1, #32896	; 0x8080
 80128de:	4b0a      	ldr	r3, [pc, #40]	; (8012908 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80128e0:	6818      	ldr	r0, [r3, #0]
 80128e2:	f7f7 f94b 	bl	8009b7c <Display::Status(Display7SegmentMessage)>
 80128e6:	e7f7      	b.n	80128d8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80128e8:	4b07      	ldr	r3, [pc, #28]	; (8012908 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80128ea:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80128ee:	6818      	ldr	r0, [r3, #0]
 80128f0:	f7f7 f944 	bl	8009b7c <Display::Status(Display7SegmentMessage)>
 80128f4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80128f8:	69a0      	ldr	r0, [r4, #24]
 80128fa:	f7ff feb3 	bl	8012664 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80128fe:	4a04      	ldr	r2, [pc, #16]	; (8012910 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8012900:	e7e5      	b.n	80128ce <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8012902:	f645 3179 	movw	r1, #23417	; 0x5b79
 8012906:	e7ea      	b.n	80128de <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8012908:	2001d88c 	andcs	sp, r1, ip, lsl #17
 801290c:	08018a1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, fp, pc}
 8012910:	08018a29 	stmdaeq	r1, {r0, r3, r5, r9, fp, pc}

08012914 <DisplayUdf::ShowShutdown()>:
 8012914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012918:	4604      	mov	r4, r0
 801291a:	6980      	ldr	r0, [r0, #24]
 801291c:	b1d0      	cbz	r0, 8012954 <DisplayUdf::ShowShutdown()+0x40>
 801291e:	f890 8005 	ldrb.w	r8, [r0, #5]
 8012922:	6803      	ldr	r3, [r0, #0]
 8012924:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8012928:	b2ed      	uxtb	r5, r5
 801292a:	462a      	mov	r2, r5
 801292c:	2100      	movs	r1, #0
 801292e:	6a1b      	ldr	r3, [r3, #32]
 8012930:	7906      	ldrb	r6, [r0, #4]
 8012932:	2700      	movs	r7, #0
 8012934:	4798      	blx	r3
 8012936:	3e01      	subs	r6, #1
 8012938:	42b7      	cmp	r7, r6
 801293a:	69a0      	ldr	r0, [r4, #24]
 801293c:	d311      	bcc.n	8012962 <DisplayUdf::ShowShutdown()+0x4e>
 801293e:	b120      	cbz	r0, 801294a <DisplayUdf::ShowShutdown()+0x36>
 8012940:	6803      	ldr	r3, [r0, #0]
 8012942:	462a      	mov	r2, r5
 8012944:	2100      	movs	r1, #0
 8012946:	6a1b      	ldr	r3, [r3, #32]
 8012948:	4798      	blx	r3
 801294a:	4641      	mov	r1, r8
 801294c:	4a08      	ldr	r2, [pc, #32]	; (8012970 <DisplayUdf::ShowShutdown()+0x5c>)
 801294e:	69a0      	ldr	r0, [r4, #24]
 8012950:	f7ff fe76 	bl	8012640 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012954:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8012958:	4620      	mov	r0, r4
 801295a:	f7f7 f90f 	bl	8009b7c <Display::Status(Display7SegmentMessage)>
 801295e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012962:	b118      	cbz	r0, 801296c <DisplayUdf::ShowShutdown()+0x58>
 8012964:	6803      	ldr	r3, [r0, #0]
 8012966:	2120      	movs	r1, #32
 8012968:	695b      	ldr	r3, [r3, #20]
 801296a:	4798      	blx	r3
 801296c:	3701      	adds	r7, #1
 801296e:	e7e3      	b.n	8012938 <DisplayUdf::ShowShutdown()+0x24>
 8012970:	08018a37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, fp, pc}

08012974 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8012974:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012976:	88c6      	ldrh	r6, [r0, #6]
 8012978:	8885      	ldrh	r5, [r0, #4]
 801297a:	42ae      	cmp	r6, r5
 801297c:	d216      	bcs.n	80129ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 801297e:	4604      	mov	r4, r0
 8012980:	6800      	ldr	r0, [r0, #0]
 8012982:	1bad      	subs	r5, r5, r6
 8012984:	4430      	add	r0, r6
 8012986:	7a26      	ldrb	r6, [r4, #8]
 8012988:	b923      	cbnz	r3, 8012994 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 801298a:	b926      	cbnz	r6, 8012996 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 801298c:	9200      	str	r2, [sp, #0]
 801298e:	460b      	mov	r3, r1
 8012990:	4a09      	ldr	r2, [pc, #36]	; (80129b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8012992:	e003      	b.n	801299c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8012994:	b166      	cbz	r6, 80129b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8012996:	460b      	mov	r3, r1
 8012998:	9200      	str	r2, [sp, #0]
 801299a:	4a08      	ldr	r2, [pc, #32]	; (80129bc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 801299c:	4629      	mov	r1, r5
 801299e:	f7f6 fe5f 	bl	8009660 <snprintf>
 80129a2:	4285      	cmp	r5, r0
 80129a4:	bfa2      	ittt	ge
 80129a6:	88e3      	ldrhge	r3, [r4, #6]
 80129a8:	181b      	addge	r3, r3, r0
 80129aa:	80e3      	strhge	r3, [r4, #6]
 80129ac:	b002      	add	sp, #8
 80129ae:	bd70      	pop	{r4, r5, r6, pc}
 80129b0:	9200      	str	r2, [sp, #0]
 80129b2:	460b      	mov	r3, r1
 80129b4:	4a02      	ldr	r2, [pc, #8]	; (80129c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 80129b6:	e7f1      	b.n	801299c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80129b8:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 80129bc:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 80129c0:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}

080129c4 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80129c4:	b510      	push	{r4, lr}
 80129c6:	2220      	movs	r2, #32
 80129c8:	4604      	mov	r4, r0
 80129ca:	f840 1b04 	str.w	r1, [r0], #4
 80129ce:	2100      	movs	r1, #0
 80129d0:	f001 f9d4 	bl	8013d7c <memset>
 80129d4:	f647 7305 	movw	r3, #32517	; 0x7f05
 80129d8:	4620      	mov	r0, r4
 80129da:	84a3      	strh	r3, [r4, #36]	; 0x24
 80129dc:	bd10      	pop	{r4, pc}

080129de <DisplayUdfParams::Load()>:
 80129de:	b508      	push	{r3, lr}
 80129e0:	2300      	movs	r3, #0
 80129e2:	4601      	mov	r1, r0
 80129e4:	6043      	str	r3, [r0, #4]
 80129e6:	6800      	ldr	r0, [r0, #0]
 80129e8:	b120      	cbz	r0, 80129f4 <DisplayUdfParams::Load()+0x16>
 80129ea:	6803      	ldr	r3, [r0, #0]
 80129ec:	3104      	adds	r1, #4
 80129ee:	68db      	ldr	r3, [r3, #12]
 80129f0:	4798      	blx	r3
 80129f2:	2001      	movs	r0, #1
 80129f4:	bd08      	pop	{r3, pc}
	...

080129f8 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80129f8:	6803      	ldr	r3, [r0, #0]
 80129fa:	b1d3      	cbz	r3, 8012a32 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80129fc:	2300      	movs	r3, #0
 80129fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012a00:	460d      	mov	r5, r1
 8012a02:	4616      	mov	r6, r2
 8012a04:	4604      	mov	r4, r0
 8012a06:	6043      	str	r3, [r0, #4]
 8012a08:	4602      	mov	r2, r0
 8012a0a:	490a      	ldr	r1, [pc, #40]	; (8012a34 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8012a0c:	4668      	mov	r0, sp
 8012a0e:	f000 fb31 	bl	8013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012a12:	4632      	mov	r2, r6
 8012a14:	4629      	mov	r1, r5
 8012a16:	4668      	mov	r0, sp
 8012a18:	f000 fb30 	bl	801307c <ReadConfigFile::Read(char const*, unsigned int)>
 8012a1c:	4621      	mov	r1, r4
 8012a1e:	f851 0b04 	ldr.w	r0, [r1], #4
 8012a22:	6803      	ldr	r3, [r0, #0]
 8012a24:	689b      	ldr	r3, [r3, #8]
 8012a26:	4798      	blx	r3
 8012a28:	4668      	mov	r0, sp
 8012a2a:	f000 fb26 	bl	801307a <ReadConfigFile::~ReadConfigFile()>
 8012a2e:	b002      	add	sp, #8
 8012a30:	bd70      	pop	{r4, r5, r6, pc}
 8012a32:	4770      	bx	lr
 8012a34:	08012b01 	stmdaeq	r1, {r0, r8, r9, fp, sp}

08012a38 <DisplayUdfParams::callbackFunction(char const*)>:
 8012a38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a3a:	460e      	mov	r6, r1
 8012a3c:	4604      	mov	r4, r0
 8012a3e:	492c      	ldr	r1, [pc, #176]	; (8012af0 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8012a40:	4630      	mov	r0, r6
 8012a42:	f10d 0207 	add.w	r2, sp, #7
 8012a46:	f000 fc51 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012a4a:	b968      	cbnz	r0, 8012a68 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012a4c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012a50:	6863      	ldr	r3, [r4, #4]
 8012a52:	2a7f      	cmp	r2, #127	; 0x7f
 8012a54:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8012a58:	bf14      	ite	ne
 8012a5a:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8012a5e:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8012a62:	6063      	str	r3, [r4, #4]
 8012a64:	b003      	add	sp, #12
 8012a66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012a68:	4630      	mov	r0, r6
 8012a6a:	4922      	ldr	r1, [pc, #136]	; (8012af4 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8012a6c:	f10d 0207 	add.w	r2, sp, #7
 8012a70:	f000 fc3c 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012a74:	b958      	cbnz	r0, 8012a8e <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8012a76:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012a7a:	6863      	ldr	r3, [r4, #4]
 8012a7c:	2a05      	cmp	r2, #5
 8012a7e:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8012a82:	bf14      	ite	ne
 8012a84:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8012a88:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8012a8c:	e7e9      	b.n	8012a62 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012a8e:	4630      	mov	r0, r6
 8012a90:	4919      	ldr	r1, [pc, #100]	; (8012af8 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8012a92:	f10d 0207 	add.w	r2, sp, #7
 8012a96:	f000 fc29 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012a9a:	b948      	cbnz	r0, 8012ab0 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012a9c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012aa0:	6863      	ldr	r3, [r4, #4]
 8012aa2:	b112      	cbz	r2, 8012aaa <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8012aa4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8012aa8:	e7db      	b.n	8012a62 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012aaa:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8012aae:	e7d8      	b.n	8012a62 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012ab0:	2500      	movs	r5, #0
 8012ab2:	4f12      	ldr	r7, [pc, #72]	; (8012afc <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8012ab4:	4630      	mov	r0, r6
 8012ab6:	f857 1b04 	ldr.w	r1, [r7], #4
 8012aba:	f10d 0207 	add.w	r2, sp, #7
 8012abe:	f000 fc15 	bl	80132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012ac2:	b980      	cbnz	r0, 8012ae6 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 8012ac4:	2301      	movs	r3, #1
 8012ac6:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012aca:	40ab      	lsls	r3, r5
 8012acc:	1e4e      	subs	r6, r1, #1
 8012ace:	2e05      	cmp	r6, #5
 8012ad0:	6862      	ldr	r2, [r4, #4]
 8012ad2:	4425      	add	r5, r4
 8012ad4:	d802      	bhi.n	8012adc <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 8012ad6:	7229      	strb	r1, [r5, #8]
 8012ad8:	4313      	orrs	r3, r2
 8012ada:	e7c2      	b.n	8012a62 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012adc:	ea22 0203 	bic.w	r2, r2, r3
 8012ae0:	7228      	strb	r0, [r5, #8]
 8012ae2:	6062      	str	r2, [r4, #4]
 8012ae4:	e7be      	b.n	8012a64 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012ae6:	3501      	adds	r5, #1
 8012ae8:	2d14      	cmp	r5, #20
 8012aea:	d1e3      	bne.n	8012ab4 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8012aec:	e7ba      	b.n	8012a64 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012aee:	bf00      	nop
 8012af0:	08018af6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, fp, pc}
 8012af4:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 8012af8:	08018acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, pc}
 8012afc:	08018a48 	stmdaeq	r1, {r3, r6, r9, fp, pc}

08012b00 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8012b00:	f7ff bf9a 	b.w	8012a38 <DisplayUdfParams::callbackFunction(char const*)>

08012b04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8012b04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b08:	4604      	mov	r4, r0
 8012b0a:	4615      	mov	r5, r2
 8012b0c:	461e      	mov	r6, r3
 8012b0e:	b086      	sub	sp, #24
 8012b10:	3004      	adds	r0, #4
 8012b12:	b379      	cbz	r1, 8012b74 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8012b14:	2222      	movs	r2, #34	; 0x22
 8012b16:	f001 f91a 	bl	8013d4e <memmove>
 8012b1a:	462a      	mov	r2, r5
 8012b1c:	4633      	mov	r3, r6
 8012b1e:	493d      	ldr	r1, [pc, #244]	; (8012c14 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8012b20:	a803      	add	r0, sp, #12
 8012b22:	f000 fa07 	bl	8012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8012b26:	6863      	ldr	r3, [r4, #4]
 8012b28:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8012b2c:	493a      	ldr	r1, [pc, #232]	; (8012c18 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8012b2e:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8012b32:	a803      	add	r0, sp, #12
 8012b34:	f7ff ff1e 	bl	8012974 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012b38:	6863      	ldr	r3, [r4, #4]
 8012b3a:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8012b3e:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8012b42:	4936      	ldr	r1, [pc, #216]	; (8012c1c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8012b44:	a803      	add	r0, sp, #12
 8012b46:	f7ff ff15 	bl	8012974 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012b4a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012b4e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012b52:	6863      	ldr	r3, [r4, #4]
 8012b54:	42aa      	cmp	r2, r5
 8012b56:	d226      	bcs.n	8012ba6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8012b58:	9803      	ldr	r0, [sp, #12]
 8012b5a:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8012b5e:	4410      	add	r0, r2
 8012b60:	eba5 0502 	sub.w	r5, r5, r2
 8012b64:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012b68:	d10b      	bne.n	8012b82 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8012b6a:	b962      	cbnz	r2, 8012b86 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8012b6c:	9200      	str	r2, [sp, #0]
 8012b6e:	4b2c      	ldr	r3, [pc, #176]	; (8012c20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012b70:	4a2c      	ldr	r2, [pc, #176]	; (8012c24 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8012b72:	e00e      	b.n	8012b92 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8012b74:	6823      	ldr	r3, [r4, #0]
 8012b76:	4601      	mov	r1, r0
 8012b78:	681a      	ldr	r2, [r3, #0]
 8012b7a:	4618      	mov	r0, r3
 8012b7c:	68d2      	ldr	r2, [r2, #12]
 8012b7e:	4790      	blx	r2
 8012b80:	e7cb      	b.n	8012b1a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8012b82:	2a00      	cmp	r2, #0
 8012b84:	d041      	beq.n	8012c0a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8012b86:	3b00      	subs	r3, #0
 8012b88:	bf18      	it	ne
 8012b8a:	2301      	movne	r3, #1
 8012b8c:	4a26      	ldr	r2, [pc, #152]	; (8012c28 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 8012b8e:	9300      	str	r3, [sp, #0]
 8012b90:	4b23      	ldr	r3, [pc, #140]	; (8012c20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012b92:	4629      	mov	r1, r5
 8012b94:	f7f6 fd64 	bl	8009660 <snprintf>
 8012b98:	4285      	cmp	r5, r0
 8012b9a:	bfa2      	ittt	ge
 8012b9c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012ba0:	181b      	addge	r3, r3, r0
 8012ba2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012ba6:	2500      	movs	r5, #0
 8012ba8:	2701      	movs	r7, #1
 8012baa:	4e20      	ldr	r6, [pc, #128]	; (8012c2c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8012bac:	f104 0808 	add.w	r8, r4, #8
 8012bb0:	f856 1b04 	ldr.w	r1, [r6], #4
 8012bb4:	780b      	ldrb	r3, [r1, #0]
 8012bb6:	b15b      	cbz	r3, 8012bd0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8012bb8:	6862      	ldr	r2, [r4, #4]
 8012bba:	fa07 f305 	lsl.w	r3, r7, r5
 8012bbe:	4393      	bics	r3, r2
 8012bc0:	bf0c      	ite	eq
 8012bc2:	2301      	moveq	r3, #1
 8012bc4:	2300      	movne	r3, #0
 8012bc6:	f818 2005 	ldrb.w	r2, [r8, r5]
 8012bca:	a803      	add	r0, sp, #12
 8012bcc:	f7ff fed2 	bl	8012974 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012bd0:	3501      	adds	r5, #1
 8012bd2:	2d14      	cmp	r5, #20
 8012bd4:	d1ec      	bne.n	8012bb0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8012bd6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012bda:	b17b      	cbz	r3, 8012bfc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8012bdc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012be0:	9b03      	ldr	r3, [sp, #12]
 8012be2:	4413      	add	r3, r2
 8012be4:	227d      	movs	r2, #125	; 0x7d
 8012be6:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012bea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012bee:	9903      	ldr	r1, [sp, #12]
 8012bf0:	54ca      	strb	r2, [r1, r3]
 8012bf2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012bf6:	3301      	adds	r3, #1
 8012bf8:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012bfc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c02:	601a      	str	r2, [r3, #0]
 8012c04:	b006      	add	sp, #24
 8012c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c0a:	2301      	movs	r3, #1
 8012c0c:	4a08      	ldr	r2, [pc, #32]	; (8012c30 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8012c0e:	9300      	str	r3, [sp, #0]
 8012c10:	4b03      	ldr	r3, [pc, #12]	; (8012c20 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012c12:	e7be      	b.n	8012b92 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8012c14:	08018aea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, fp, pc}
 8012c18:	08018af6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, fp, pc}
 8012c1c:	08018abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, pc}
 8012c20:	08018acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, pc}
 8012c24:	080166b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, sp, lr}
 8012c28:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 8012c2c:	08018a48 	stmdaeq	r1, {r3, r6, r9, fp, pc}
 8012c30:	080166b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, sp, lr}

08012c34 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8012c34:	b513      	push	{r0, r1, r4, lr}
 8012c36:	6804      	ldr	r4, [r0, #0]
 8012c38:	b914      	cbnz	r4, 8012c40 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8012c3a:	601c      	str	r4, [r3, #0]
 8012c3c:	b002      	add	sp, #8
 8012c3e:	bd10      	pop	{r4, pc}
 8012c40:	9300      	str	r3, [sp, #0]
 8012c42:	4613      	mov	r3, r2
 8012c44:	460a      	mov	r2, r1
 8012c46:	2100      	movs	r1, #0
 8012c48:	f7ff ff5c 	bl	8012b04 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8012c4c:	e7f6      	b.n	8012c3c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08012c4e <DisplayUdfParams::Set(DisplayUdf*)>:
 8012c4e:	6843      	ldr	r3, [r0, #4]
 8012c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c54:	009a      	lsls	r2, r3, #2
 8012c56:	4604      	mov	r4, r0
 8012c58:	460e      	mov	r6, r1
 8012c5a:	d506      	bpl.n	8012c6a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8012c5c:	6988      	ldr	r0, [r1, #24]
 8012c5e:	b120      	cbz	r0, 8012c6a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8012c60:	6803      	ldr	r3, [r0, #0]
 8012c62:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8012c66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012c68:	4798      	blx	r3
 8012c6a:	6863      	ldr	r3, [r4, #4]
 8012c6c:	69b0      	ldr	r0, [r6, #24]
 8012c6e:	00db      	lsls	r3, r3, #3
 8012c70:	bf41      	itttt	mi
 8012c72:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8012c76:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8012c7a:	4353      	mulmi	r3, r2
 8012c7c:	6173      	strmi	r3, [r6, #20]
 8012c7e:	6861      	ldr	r1, [r4, #4]
 8012c80:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8012c84:	b110      	cbz	r0, 8012c8c <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8012c86:	6803      	ldr	r3, [r0, #0]
 8012c88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012c8a:	4798      	blx	r3
 8012c8c:	2500      	movs	r5, #0
 8012c8e:	2701      	movs	r7, #1
 8012c90:	f104 0808 	add.w	r8, r4, #8
 8012c94:	6862      	ldr	r2, [r4, #4]
 8012c96:	fa07 f305 	lsl.w	r3, r7, r5
 8012c9a:	4393      	bics	r3, r2
 8012c9c:	d105      	bne.n	8012caa <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8012c9e:	462a      	mov	r2, r5
 8012ca0:	4630      	mov	r0, r6
 8012ca2:	f818 1005 	ldrb.w	r1, [r8, r5]
 8012ca6:	f7ff fd0c 	bl	80126c2 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8012caa:	3501      	adds	r5, #1
 8012cac:	2d14      	cmp	r5, #20
 8012cae:	d1f1      	bne.n	8012c94 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8012cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012cb4 <DisplayUdfParams::Dump()>:
 8012cb4:	4770      	bx	lr
	...

08012cb8 <DisplayUdf::Show(E131Bridge*)>:
 8012cb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cbc:	460e      	mov	r6, r1
 8012cbe:	4604      	mov	r4, r0
 8012cc0:	b085      	sub	sp, #20
 8012cc2:	f7ff fdad 	bl	8012820 <DisplayUdf::Show()>
 8012cc6:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8012cca:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8012cce:	4620      	mov	r0, r4
 8012cd0:	4413      	add	r3, r2
 8012cd2:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8012cd6:	4a21      	ldr	r2, [pc, #132]	; (8012d5c <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8012cd8:	f7f5 fd36 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8012cdc:	2500      	movs	r5, #0
 8012cde:	4f20      	ldr	r7, [pc, #128]	; (8012d60 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8012ce0:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8012d64 <DisplayUdf::Show(E131Bridge*)+0xac>
 8012ce4:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8012d68 <DisplayUdf::Show(E131Bridge*)+0xb0>
 8012ce8:	2301      	movs	r3, #1
 8012cea:	4629      	mov	r1, r5
 8012cec:	4630      	mov	r0, r6
 8012cee:	f10d 020e 	add.w	r2, sp, #14
 8012cf2:	f7f8 faa7 	bl	800b244 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8012cf6:	b1a8      	cbz	r0, 8012d24 <DisplayUdf::Show(E131Bridge*)+0x6c>
 8012cf8:	2344      	movs	r3, #68	; 0x44
 8012cfa:	436b      	muls	r3, r5
 8012cfc:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8012d00:	58d2      	ldr	r2, [r2, r3]
 8012d02:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8012d06:	2a00      	cmp	r2, #0
 8012d08:	bf0c      	ite	eq
 8012d0a:	463b      	moveq	r3, r7
 8012d0c:	4643      	movne	r3, r8
 8012d0e:	e9cd 0300 	strd	r0, r3, [sp]
 8012d12:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8012d16:	464a      	mov	r2, r9
 8012d18:	4620      	mov	r0, r4
 8012d1a:	5d49      	ldrb	r1, [r1, r5]
 8012d1c:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8012d20:	f7f5 fd12 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8012d24:	3501      	adds	r5, #1
 8012d26:	2d04      	cmp	r5, #4
 8012d28:	d1de      	bne.n	8012ce8 <DisplayUdf::Show(E131Bridge*)+0x30>
 8012d2a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8012d2c:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8012d30:	2a02      	cmp	r2, #2
 8012d32:	d001      	beq.n	8012d38 <DisplayUdf::Show(E131Bridge*)+0x80>
 8012d34:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012d36:	b933      	cbnz	r3, 8012d46 <DisplayUdf::Show(E131Bridge*)+0x8e>
 8012d38:	4620      	mov	r0, r4
 8012d3a:	4a0c      	ldr	r2, [pc, #48]	; (8012d6c <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8012d3c:	f7f5 fd04 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8012d40:	b005      	add	sp, #20
 8012d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012d46:	480a      	ldr	r0, [pc, #40]	; (8012d70 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8012d48:	9300      	str	r3, [sp, #0]
 8012d4a:	4b0a      	ldr	r3, [pc, #40]	; (8012d74 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8012d4c:	2a00      	cmp	r2, #0
 8012d4e:	bf08      	it	eq
 8012d50:	4603      	moveq	r3, r0
 8012d52:	4620      	mov	r0, r4
 8012d54:	4a08      	ldr	r2, [pc, #32]	; (8012d78 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 8012d56:	f7f5 fcf7 	bl	8008748 <Display::Printf(unsigned char, char const*, ...)>
 8012d5a:	e7f1      	b.n	8012d40 <DisplayUdf::Show(E131Bridge*)+0x88>
 8012d5c:	08018b00 	stmdaeq	r1, {r8, r9, fp, pc}
 8012d60:	08017473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8012d64:	08017477 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, ip, sp, lr}
 8012d68:	08018b07 	stmdaeq	r1, {r0, r1, r2, r8, r9, fp, pc}
 8012d6c:	08018b16 	stmdaeq	r1, {r1, r2, r4, r8, r9, fp, pc}
 8012d70:	0801758b 	stmdaeq	r1, {r0, r1, r3, r7, r8, sl, ip, sp, lr}
 8012d74:	08017580 	stmdaeq	r1, {r7, r8, sl, ip, sp, lr}
 8012d78:	08018b1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, fp, pc}

08012d7c <NetworkDisplay::ShowEmacStart()>:
 8012d7c:	4b01      	ldr	r3, [pc, #4]	; (8012d84 <NetworkDisplay::ShowEmacStart()+0x8>)
 8012d7e:	6818      	ldr	r0, [r3, #0]
 8012d80:	f7ff bcb8 	b.w	80126f4 <DisplayUdf::ShowEmacStart()>
 8012d84:	2001d884 	andcs	sp, r1, r4, lsl #17

08012d88 <NetworkDisplay::ShowIp()>:
 8012d88:	4b01      	ldr	r3, [pc, #4]	; (8012d90 <NetworkDisplay::ShowIp()+0x8>)
 8012d8a:	6818      	ldr	r0, [r3, #0]
 8012d8c:	f7ff bcc2 	b.w	8012714 <DisplayUdf::ShowIpAddress()>
 8012d90:	2001d884 	andcs	sp, r1, r4, lsl #17

08012d94 <NetworkDisplay::ShowNetMask()>:
 8012d94:	4b01      	ldr	r3, [pc, #4]	; (8012d9c <NetworkDisplay::ShowNetMask()+0x8>)
 8012d96:	6818      	ldr	r0, [r3, #0]
 8012d98:	f7ff bcf0 	b.w	801277c <DisplayUdf::ShowNetmask()>
 8012d9c:	2001d884 	andcs	sp, r1, r4, lsl #17

08012da0 <NetworkDisplay::ShowGatewayIp()>:
 8012da0:	4b01      	ldr	r3, [pc, #4]	; (8012da8 <NetworkDisplay::ShowGatewayIp()+0x8>)
 8012da2:	6818      	ldr	r0, [r3, #0]
 8012da4:	f7ff bd08 	b.w	80127b8 <DisplayUdf::ShowGatewayIp()>
 8012da8:	2001d884 	andcs	sp, r1, r4, lsl #17

08012dac <NetworkDisplay::ShowHostName()>:
 8012dac:	4b01      	ldr	r3, [pc, #4]	; (8012db4 <NetworkDisplay::ShowHostName()+0x8>)
 8012dae:	6818      	ldr	r0, [r3, #0]
 8012db0:	f7ff bd22 	b.w	80127f8 <DisplayUdf::ShowHostName()>
 8012db4:	2001d884 	andcs	sp, r1, r4, lsl #17

08012db8 <NetworkDisplay::ShowShutdown()>:
 8012db8:	4b01      	ldr	r3, [pc, #4]	; (8012dc0 <NetworkDisplay::ShowShutdown()+0x8>)
 8012dba:	6818      	ldr	r0, [r3, #0]
 8012dbc:	f7ff bdaa 	b.w	8012914 <DisplayUdf::ShowShutdown()>
 8012dc0:	2001d884 	andcs	sp, r1, r4, lsl #17

08012dc4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8012dc4:	4b01      	ldr	r3, [pc, #4]	; (8012dcc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8012dc6:	6818      	ldr	r0, [r3, #0]
 8012dc8:	f7ff bd6c 	b.w	80128a4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012dcc:	2001d884 	andcs	sp, r1, r4, lsl #17

08012dd0 <properties::convert_json_file(char*, unsigned short, bool)>:
 8012dd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012dd4:	4603      	mov	r3, r0
 8012dd6:	7800      	ldrb	r0, [r0, #0]
 8012dd8:	287b      	cmp	r0, #123	; 0x7b
 8012dda:	f040 80a2 	bne.w	8012f22 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 8012dde:	b17a      	cbz	r2, 8012e00 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8012de0:	2401      	movs	r4, #1
 8012de2:	461e      	mov	r6, r3
 8012de4:	4620      	mov	r0, r4
 8012de6:	2a00      	cmp	r2, #0
 8012de8:	bf0c      	ite	eq
 8012dea:	f04f 0c0a 	moveq.w	ip, #10
 8012dee:	f04f 0c00 	movne.w	ip, #0
 8012df2:	273d      	movs	r7, #61	; 0x3d
 8012df4:	42a1      	cmp	r1, r4
 8012df6:	d850      	bhi.n	8012e9a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8012df8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dfc:	463c      	mov	r4, r7
 8012dfe:	e7f2      	b.n	8012de6 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8012e00:	2023      	movs	r0, #35	; 0x23
 8012e02:	f803 0b01 	strb.w	r0, [r3], #1
 8012e06:	461c      	mov	r4, r3
 8012e08:	2701      	movs	r7, #1
 8012e0a:	42b9      	cmp	r1, r7
 8012e0c:	d811      	bhi.n	8012e32 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8012e0e:	2001      	movs	r0, #1
 8012e10:	461e      	mov	r6, r3
 8012e12:	230a      	movs	r3, #10
 8012e14:	4625      	mov	r5, r4
 8012e16:	f806 3b01 	strb.w	r3, [r6], #1
 8012e1a:	3001      	adds	r0, #1
 8012e1c:	462b      	mov	r3, r5
 8012e1e:	781c      	ldrb	r4, [r3, #0]
 8012e20:	3501      	adds	r5, #1
 8012e22:	2c7b      	cmp	r4, #123	; 0x7b
 8012e24:	d0ea      	beq.n	8012dfc <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8012e26:	42b9      	cmp	r1, r7
 8012e28:	f107 0401 	add.w	r4, r7, #1
 8012e2c:	d9db      	bls.n	8012de6 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8012e2e:	4627      	mov	r7, r4
 8012e30:	e7f4      	b.n	8012e1c <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8012e32:	f814 0b01 	ldrb.w	r0, [r4], #1
 8012e36:	2822      	cmp	r0, #34	; 0x22
 8012e38:	d119      	bne.n	8012e6e <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8012e3a:	46a4      	mov	ip, r4
 8012e3c:	461d      	mov	r5, r3
 8012e3e:	2601      	movs	r6, #1
 8012e40:	f89c e000 	ldrb.w	lr, [ip]
 8012e44:	4664      	mov	r4, ip
 8012e46:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012e4a:	462b      	mov	r3, r5
 8012e4c:	4630      	mov	r0, r6
 8012e4e:	f10c 0c01 	add.w	ip, ip, #1
 8012e52:	f105 0501 	add.w	r5, r5, #1
 8012e56:	f106 0601 	add.w	r6, r6, #1
 8012e5a:	d0d9      	beq.n	8012e10 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8012e5c:	3701      	adds	r7, #1
 8012e5e:	42b9      	cmp	r1, r7
 8012e60:	4664      	mov	r4, ip
 8012e62:	f805 ec01 	strb.w	lr, [r5, #-1]
 8012e66:	d8eb      	bhi.n	8012e40 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8012e68:	4630      	mov	r0, r6
 8012e6a:	462b      	mov	r3, r5
 8012e6c:	e7d0      	b.n	8012e10 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8012e6e:	3701      	adds	r7, #1
 8012e70:	e7cb      	b.n	8012e0a <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8012e72:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012e76:	d110      	bne.n	8012e9a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8012e78:	eba0 0803 	sub.w	r8, r0, r3
 8012e7c:	461a      	mov	r2, r3
 8012e7e:	eb08 0003 	add.w	r0, r8, r3
 8012e82:	f813 eb01 	ldrb.w	lr, [r3], #1
 8012e86:	1c65      	adds	r5, r4, #1
 8012e88:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012e8c:	d04c      	beq.n	8012f28 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 8012e8e:	42a1      	cmp	r1, r4
 8012e90:	d911      	bls.n	8012eb6 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8012e92:	462c      	mov	r4, r5
 8012e94:	f806 eb01 	strb.w	lr, [r6], #1
 8012e98:	e7f0      	b.n	8012e7c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8012e9a:	42a1      	cmp	r1, r4
 8012e9c:	461d      	mov	r5, r3
 8012e9e:	f893 e000 	ldrb.w	lr, [r3]
 8012ea2:	f104 0401 	add.w	r4, r4, #1
 8012ea6:	f103 0301 	add.w	r3, r3, #1
 8012eaa:	d8e2      	bhi.n	8012e72 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8012eac:	462b      	mov	r3, r5
 8012eae:	e7e3      	b.n	8012e78 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8012eb0:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8012eb4:	d009      	beq.n	8012eca <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8012eb6:	42a9      	cmp	r1, r5
 8012eb8:	4614      	mov	r4, r2
 8012eba:	f892 e000 	ldrb.w	lr, [r2]
 8012ebe:	f105 0501 	add.w	r5, r5, #1
 8012ec2:	f102 0201 	add.w	r2, r2, #1
 8012ec6:	d8f3      	bhi.n	8012eb0 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8012ec8:	4622      	mov	r2, r4
 8012eca:	7814      	ldrb	r4, [r2, #0]
 8012ecc:	4696      	mov	lr, r2
 8012ece:	2c2f      	cmp	r4, #47	; 0x2f
 8012ed0:	462b      	mov	r3, r5
 8012ed2:	f102 0201 	add.w	r2, r2, #1
 8012ed6:	f105 0501 	add.w	r5, r5, #1
 8012eda:	d81a      	bhi.n	8012f12 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 8012edc:	4299      	cmp	r1, r3
 8012ede:	d8f4      	bhi.n	8012eca <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8012ee0:	2c22      	cmp	r4, #34	; 0x22
 8012ee2:	bf08      	it	eq
 8012ee4:	4696      	moveq	lr, r2
 8012ee6:	4673      	mov	r3, lr
 8012ee8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012eec:	1c6c      	adds	r4, r5, #1
 8012eee:	2a22      	cmp	r2, #34	; 0x22
 8012ef0:	d011      	beq.n	8012f16 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8012ef2:	2a2c      	cmp	r2, #44	; 0x2c
 8012ef4:	d00f      	beq.n	8012f16 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8012ef6:	2a7d      	cmp	r2, #125	; 0x7d
 8012ef8:	d00d      	beq.n	8012f16 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8012efa:	42a9      	cmp	r1, r5
 8012efc:	d90f      	bls.n	8012f1e <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 8012efe:	f1a2 0520 	sub.w	r5, r2, #32
 8012f02:	2d5a      	cmp	r5, #90	; 0x5a
 8012f04:	d803      	bhi.n	8012f0e <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 8012f06:	469e      	mov	lr, r3
 8012f08:	f806 2b01 	strb.w	r2, [r6], #1
 8012f0c:	3001      	adds	r0, #1
 8012f0e:	4625      	mov	r5, r4
 8012f10:	e7e9      	b.n	8012ee6 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8012f12:	461d      	mov	r5, r3
 8012f14:	e7e7      	b.n	8012ee6 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8012f16:	462c      	mov	r4, r5
 8012f18:	f806 cb01 	strb.w	ip, [r6], #1
 8012f1c:	3001      	adds	r0, #1
 8012f1e:	3401      	adds	r4, #1
 8012f20:	e768      	b.n	8012df4 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8012f22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012f26:	e767      	b.n	8012df8 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8012f28:	4625      	mov	r5, r4
 8012f2a:	f806 7b01 	strb.w	r7, [r6], #1
 8012f2e:	3001      	adds	r0, #1
 8012f30:	e7c1      	b.n	8012eb6 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08012f34 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8012f34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012f38:	6002      	str	r2, [r0, #0]
 8012f3a:	4614      	mov	r4, r2
 8012f3c:	2200      	movs	r2, #0
 8012f3e:	80c2      	strh	r2, [r0, #6]
 8012f40:	4a1c      	ldr	r2, [pc, #112]	; (8012fb4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8012f42:	4606      	mov	r6, r0
 8012f44:	7812      	ldrb	r2, [r2, #0]
 8012f46:	8083      	strh	r3, [r0, #4]
 8012f48:	f002 0201 	and.w	r2, r2, #1
 8012f4c:	7202      	strb	r2, [r0, #8]
 8012f4e:	4608      	mov	r0, r1
 8012f50:	4605      	mov	r5, r0
 8012f52:	782f      	ldrb	r7, [r5, #0]
 8012f54:	3001      	adds	r0, #1
 8012f56:	2f00      	cmp	r7, #0
 8012f58:	d1fa      	bne.n	8012f50 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8012f5a:	1a6d      	subs	r5, r5, r1
 8012f5c:	b29b      	uxth	r3, r3
 8012f5e:	b1d2      	cbz	r2, 8012f96 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8012f60:	1d2f      	adds	r7, r5, #4
 8012f62:	429f      	cmp	r7, r3
 8012f64:	d814      	bhi.n	8012f90 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012f66:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8012f6a:	f04f 0922 	mov.w	r9, #34	; 0x22
 8012f6e:	462a      	mov	r2, r5
 8012f70:	f884 8000 	strb.w	r8, [r4]
 8012f74:	f884 9001 	strb.w	r9, [r4, #1]
 8012f78:	1ca0      	adds	r0, r4, #2
 8012f7a:	f000 fee8 	bl	8013d4e <memmove>
 8012f7e:	223a      	movs	r2, #58	; 0x3a
 8012f80:	1963      	adds	r3, r4, r5
 8012f82:	3505      	adds	r5, #5
 8012f84:	f883 9002 	strb.w	r9, [r3, #2]
 8012f88:	70da      	strb	r2, [r3, #3]
 8012f8a:	80f5      	strh	r5, [r6, #6]
 8012f8c:	f804 8007 	strb.w	r8, [r4, r7]
 8012f90:	4630      	mov	r0, r6
 8012f92:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012f96:	1caf      	adds	r7, r5, #2
 8012f98:	429f      	cmp	r7, r3
 8012f9a:	d8f9      	bhi.n	8012f90 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012f9c:	4620      	mov	r0, r4
 8012f9e:	2323      	movs	r3, #35	; 0x23
 8012fa0:	462a      	mov	r2, r5
 8012fa2:	f800 3b01 	strb.w	r3, [r0], #1
 8012fa6:	f000 fed2 	bl	8013d4e <memmove>
 8012faa:	230a      	movs	r3, #10
 8012fac:	442c      	add	r4, r5
 8012fae:	7063      	strb	r3, [r4, #1]
 8012fb0:	80f7      	strh	r7, [r6, #6]
 8012fb2:	e7ed      	b.n	8012f90 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012fb4:	2001d888 	andcs	sp, r1, r8, lsl #17

08012fb8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8012fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fba:	469c      	mov	ip, r3
 8012fbc:	8885      	ldrh	r5, [r0, #4]
 8012fbe:	88c3      	ldrh	r3, [r0, #6]
 8012fc0:	b085      	sub	sp, #20
 8012fc2:	42ab      	cmp	r3, r5
 8012fc4:	d302      	bcc.n	8012fcc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8012fc6:	2000      	movs	r0, #0
 8012fc8:	b005      	add	sp, #20
 8012fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fcc:	4604      	mov	r4, r0
 8012fce:	6800      	ldr	r0, [r0, #0]
 8012fd0:	1aed      	subs	r5, r5, r3
 8012fd2:	4418      	add	r0, r3
 8012fd4:	b2d6      	uxtb	r6, r2
 8012fd6:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8012fda:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8012fde:	f894 e008 	ldrb.w	lr, [r4, #8]
 8012fe2:	0e12      	lsrs	r2, r2, #24
 8012fe4:	f1bc 0f00 	cmp.w	ip, #0
 8012fe8:	d109      	bne.n	8012ffe <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8012fea:	f1be 0f00 	cmp.w	lr, #0
 8012fee:	d109      	bne.n	8013004 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8012ff0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012ff4:	e9cd 6700 	strd	r6, r7, [sp]
 8012ff8:	460b      	mov	r3, r1
 8012ffa:	4a0e      	ldr	r2, [pc, #56]	; (8013034 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8012ffc:	e008      	b.n	8013010 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8012ffe:	f1be 0f00 	cmp.w	lr, #0
 8013002:	d00f      	beq.n	8013024 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8013004:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013008:	460b      	mov	r3, r1
 801300a:	e9cd 6700 	strd	r6, r7, [sp]
 801300e:	4a0a      	ldr	r2, [pc, #40]	; (8013038 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8013010:	4629      	mov	r1, r5
 8013012:	f7f6 fb25 	bl	8009660 <snprintf>
 8013016:	4285      	cmp	r5, r0
 8013018:	dbd5      	blt.n	8012fc6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 801301a:	88e3      	ldrh	r3, [r4, #6]
 801301c:	4403      	add	r3, r0
 801301e:	80e3      	strh	r3, [r4, #6]
 8013020:	2001      	movs	r0, #1
 8013022:	e7d1      	b.n	8012fc8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8013024:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8013028:	e9cd 6700 	strd	r6, r7, [sp]
 801302c:	460b      	mov	r3, r1
 801302e:	4a03      	ldr	r2, [pc, #12]	; (801303c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8013030:	e7ee      	b.n	8013010 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8013032:	bf00      	nop
 8013034:	08018be0 	stmdaeq	r1, {r5, r6, r7, r8, r9, fp, pc}
 8013038:	08018bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, pc}
 801303c:	08018be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, pc}

08013040 <PropertiesBuilder::AddComment(char const*)>:
 8013040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013042:	7a06      	ldrb	r6, [r0, #8]
 8013044:	b996      	cbnz	r6, 801306c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013046:	4604      	mov	r4, r0
 8013048:	88c0      	ldrh	r0, [r0, #6]
 801304a:	88a5      	ldrh	r5, [r4, #4]
 801304c:	42a8      	cmp	r0, r5
 801304e:	d20d      	bcs.n	801306c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8013050:	6827      	ldr	r7, [r4, #0]
 8013052:	1a2d      	subs	r5, r5, r0
 8013054:	460b      	mov	r3, r1
 8013056:	4a06      	ldr	r2, [pc, #24]	; (8013070 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8013058:	4629      	mov	r1, r5
 801305a:	4438      	add	r0, r7
 801305c:	f7f6 fb00 	bl	8009660 <snprintf>
 8013060:	4285      	cmp	r5, r0
 8013062:	bfa1      	itttt	ge
 8013064:	2601      	movge	r6, #1
 8013066:	88e3      	ldrhge	r3, [r4, #6]
 8013068:	18c0      	addge	r0, r0, r3
 801306a:	80e0      	strhge	r0, [r4, #6]
 801306c:	4630      	mov	r0, r6
 801306e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013070:	08018bf1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, fp, pc}

08013074 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8013074:	e9c0 1200 	strd	r1, r2, [r0]
 8013078:	4770      	bx	lr

0801307a <ReadConfigFile::~ReadConfigFile()>:
 801307a:	4770      	bx	lr

0801307c <ReadConfigFile::Read(char const*, unsigned int)>:
 801307c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013080:	4606      	mov	r6, r0
 8013082:	460d      	mov	r5, r1
 8013084:	4614      	mov	r4, r2
 8013086:	f04f 0800 	mov.w	r8, #0
 801308a:	b0a0      	sub	sp, #128	; 0x80
 801308c:	b33c      	cbz	r4, 80130de <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801308e:	466b      	mov	r3, sp
 8013090:	462a      	mov	r2, r5
 8013092:	4619      	mov	r1, r3
 8013094:	e007      	b.n	80130a6 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8013096:	f803 7b01 	strb.w	r7, [r3], #1
 801309a:	1a58      	subs	r0, r3, r1
 801309c:	287f      	cmp	r0, #127	; 0x7f
 801309e:	4615      	mov	r5, r2
 80130a0:	dc1d      	bgt.n	80130de <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80130a2:	3c01      	subs	r4, #1
 80130a4:	d00f      	beq.n	80130c6 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80130a6:	7817      	ldrb	r7, [r2, #0]
 80130a8:	4610      	mov	r0, r2
 80130aa:	2f0d      	cmp	r7, #13
 80130ac:	f102 0201 	add.w	r2, r2, #1
 80130b0:	d001      	beq.n	80130b6 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80130b2:	2f0a      	cmp	r7, #10
 80130b4:	d1ef      	bne.n	8013096 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 80130b6:	4605      	mov	r5, r0
 80130b8:	b12c      	cbz	r4, 80130c6 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 80130ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 80130be:	2a0d      	cmp	r2, #13
 80130c0:	d00b      	beq.n	80130da <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80130c2:	2a0a      	cmp	r2, #10
 80130c4:	d009      	beq.n	80130da <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80130c6:	f89d 2000 	ldrb.w	r2, [sp]
 80130ca:	2a60      	cmp	r2, #96	; 0x60
 80130cc:	d9de      	bls.n	801308c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80130ce:	f883 8000 	strb.w	r8, [r3]
 80130d2:	e9d6 3000 	ldrd	r3, r0, [r6]
 80130d6:	4798      	blx	r3
 80130d8:	e7d8      	b.n	801308c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80130da:	3c01      	subs	r4, #1
 80130dc:	e7eb      	b.n	80130b6 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 80130de:	b020      	add	sp, #128	; 0x80
 80130e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080130e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80130e4:	b570      	push	{r4, r5, r6, lr}
 80130e6:	4615      	mov	r5, r2
 80130e8:	461c      	mov	r4, r3
 80130ea:	f000 f91c 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 80130ee:	b180      	cbz	r0, 8013112 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 80130f0:	2100      	movs	r1, #0
 80130f2:	5c43      	ldrb	r3, [r0, r1]
 80130f4:	6826      	ldr	r6, [r4, #0]
 80130f6:	b28a      	uxth	r2, r1
 80130f8:	b143      	cbz	r3, 801310c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 80130fa:	42b2      	cmp	r2, r6
 80130fc:	d303      	bcc.n	8013106 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 80130fe:	2b0a      	cmp	r3, #10
 8013100:	d004      	beq.n	801310c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8013102:	2002      	movs	r0, #2
 8013104:	e004      	b.n	8013110 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8013106:	546b      	strb	r3, [r5, r1]
 8013108:	3101      	adds	r1, #1
 801310a:	e7f2      	b.n	80130f2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 801310c:	2000      	movs	r0, #0
 801310e:	6022      	str	r2, [r4, #0]
 8013110:	bd70      	pop	{r4, r5, r6, pc}
 8013112:	2001      	movs	r0, #1
 8013114:	e7fc      	b.n	8013110 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08013116 <Sscan::Float(char const*, char const*, float&)>:
 8013116:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801311a:	4616      	mov	r6, r2
 801311c:	f000 f903 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 8013120:	2800      	cmp	r0, #0
 8013122:	d059      	beq.n	80131d8 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8013124:	4604      	mov	r4, r0
 8013126:	7803      	ldrb	r3, [r0, #0]
 8013128:	2b2d      	cmp	r3, #45	; 0x2d
 801312a:	bf08      	it	eq
 801312c:	3401      	addeq	r4, #1
 801312e:	7823      	ldrb	r3, [r4, #0]
 8013130:	bf0c      	ite	eq
 8013132:	f04f 0801 	moveq.w	r8, #1
 8013136:	f04f 0800 	movne.w	r8, #0
 801313a:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801313e:	d103      	bne.n	8013148 <Sscan::Float(char const*, char const*, float&)+0x32>
 8013140:	2702      	movs	r7, #2
 8013142:	4638      	mov	r0, r7
 8013144:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013148:	2000      	movs	r0, #0
 801314a:	220a      	movs	r2, #10
 801314c:	7823      	ldrb	r3, [r4, #0]
 801314e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8013152:	2909      	cmp	r1, #9
 8013154:	d8f4      	bhi.n	8013140 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8013156:	fb02 3000 	mla	r0, r2, r0, r3
 801315a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801315e:	3830      	subs	r0, #48	; 0x30
 8013160:	2b2e      	cmp	r3, #46	; 0x2e
 8013162:	d002      	beq.n	801316a <Sscan::Float(char const*, char const*, float&)+0x54>
 8013164:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8013168:	d1f0      	bne.n	801314c <Sscan::Float(char const*, char const*, float&)+0x36>
 801316a:	f7f4 fded 	bl	8007d48 <__aeabi_ui2f>
 801316e:	6030      	str	r0, [r6, #0]
 8013170:	7823      	ldrb	r3, [r4, #0]
 8013172:	4605      	mov	r5, r0
 8013174:	2b2e      	cmp	r3, #46	; 0x2e
 8013176:	d008      	beq.n	801318a <Sscan::Float(char const*, char const*, float&)+0x74>
 8013178:	f1b8 0f00 	cmp.w	r8, #0
 801317c:	d101      	bne.n	8013182 <Sscan::Float(char const*, char const*, float&)+0x6c>
 801317e:	2700      	movs	r7, #0
 8013180:	e7df      	b.n	8013142 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8013182:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8013186:	6035      	str	r5, [r6, #0]
 8013188:	e7f9      	b.n	801317e <Sscan::Float(char const*, char const*, float&)+0x68>
 801318a:	f04f 0901 	mov.w	r9, #1
 801318e:	2000      	movs	r0, #0
 8013190:	220a      	movs	r2, #10
 8013192:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013196:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 801319a:	d111      	bne.n	80131c0 <Sscan::Float(char const*, char const*, float&)+0xaa>
 801319c:	f7f4 fdd4 	bl	8007d48 <__aeabi_ui2f>
 80131a0:	4604      	mov	r4, r0
 80131a2:	4648      	mov	r0, r9
 80131a4:	f7f4 fdd0 	bl	8007d48 <__aeabi_ui2f>
 80131a8:	4601      	mov	r1, r0
 80131aa:	4620      	mov	r0, r4
 80131ac:	f7f5 f94a 	bl	8008444 <__aeabi_fdiv>
 80131b0:	4629      	mov	r1, r5
 80131b2:	f7f4 fd19 	bl	8007be8 <__addsf3>
 80131b6:	f1b8 0f00 	cmp.w	r8, #0
 80131ba:	d109      	bne.n	80131d0 <Sscan::Float(char const*, char const*, float&)+0xba>
 80131bc:	6030      	str	r0, [r6, #0]
 80131be:	e7de      	b.n	801317e <Sscan::Float(char const*, char const*, float&)+0x68>
 80131c0:	3b30      	subs	r3, #48	; 0x30
 80131c2:	2b09      	cmp	r3, #9
 80131c4:	d8bc      	bhi.n	8013140 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80131c6:	fb02 3000 	mla	r0, r2, r0, r3
 80131ca:	fb02 f909 	mul.w	r9, r2, r9
 80131ce:	e7e0      	b.n	8013192 <Sscan::Float(char const*, char const*, float&)+0x7c>
 80131d0:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 80131d4:	6030      	str	r0, [r6, #0]
 80131d6:	e7b4      	b.n	8013142 <Sscan::Float(char const*, char const*, float&)+0x2c>
 80131d8:	2701      	movs	r7, #1
 80131da:	e7b2      	b.n	8013142 <Sscan::Float(char const*, char const*, float&)+0x2c>

080131dc <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80131dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80131de:	4615      	mov	r5, r2
 80131e0:	f000 f8a1 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 80131e4:	bb58      	cbnz	r0, 801323e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 80131e6:	2001      	movs	r0, #1
 80131e8:	e027      	b.n	801323a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 80131ea:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80131ee:	2b09      	cmp	r3, #9
 80131f0:	d822      	bhi.n	8013238 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 80131f2:	4603      	mov	r3, r0
 80131f4:	fb0c 2101 	mla	r1, ip, r1, r2
 80131f8:	3930      	subs	r1, #48	; 0x30
 80131fa:	4618      	mov	r0, r3
 80131fc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013200:	2a2e      	cmp	r2, #46	; 0x2e
 8013202:	d115      	bne.n	8013230 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8013204:	29ff      	cmp	r1, #255	; 0xff
 8013206:	d817      	bhi.n	8013238 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013208:	3401      	adds	r4, #1
 801320a:	2c03      	cmp	r4, #3
 801320c:	f806 1b01 	strb.w	r1, [r6], #1
 8013210:	d119      	bne.n	8013246 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8013212:	2400      	movs	r4, #0
 8013214:	260a      	movs	r6, #10
 8013216:	1d1a      	adds	r2, r3, #4
 8013218:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801321c:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8013220:	d115      	bne.n	801324e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8013222:	2cff      	cmp	r4, #255	; 0xff
 8013224:	d808      	bhi.n	8013238 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013226:	f88d 4007 	strb.w	r4, [sp, #7]
 801322a:	9b01      	ldr	r3, [sp, #4]
 801322c:	602b      	str	r3, [r5, #0]
 801322e:	e004      	b.n	801323a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8013230:	2a00      	cmp	r2, #0
 8013232:	d0e7      	beq.n	8013204 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8013234:	42b8      	cmp	r0, r7
 8013236:	d1d8      	bne.n	80131ea <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8013238:	2002      	movs	r0, #2
 801323a:	b003      	add	sp, #12
 801323c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801323e:	2400      	movs	r4, #0
 8013240:	f04f 0c0a 	mov.w	ip, #10
 8013244:	ae01      	add	r6, sp, #4
 8013246:	4603      	mov	r3, r0
 8013248:	2100      	movs	r1, #0
 801324a:	1d07      	adds	r7, r0, #4
 801324c:	e7d5      	b.n	80131fa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 801324e:	4293      	cmp	r3, r2
 8013250:	d0f2      	beq.n	8013238 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013252:	3930      	subs	r1, #48	; 0x30
 8013254:	2909      	cmp	r1, #9
 8013256:	d8ef      	bhi.n	8013238 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8013258:	fb06 1404 	mla	r4, r6, r4, r1
 801325c:	e7dc      	b.n	8013218 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0801325e <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 801325e:	b538      	push	{r3, r4, r5, lr}
 8013260:	4615      	mov	r5, r2
 8013262:	f000 f860 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 8013266:	b1a0      	cbz	r0, 8013292 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8013268:	4604      	mov	r4, r0
 801326a:	2100      	movs	r1, #0
 801326c:	220a      	movs	r2, #10
 801326e:	7823      	ldrb	r3, [r4, #0]
 8013270:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8013274:	2809      	cmp	r0, #9
 8013276:	d80e      	bhi.n	8013296 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8013278:	fb02 3101 	mla	r1, r2, r1, r3
 801327c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013280:	3930      	subs	r1, #48	; 0x30
 8013282:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8013286:	d1f2      	bne.n	801326e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8013288:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801328c:	d203      	bcs.n	8013296 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801328e:	8029      	strh	r1, [r5, #0]
 8013290:	bd38      	pop	{r3, r4, r5, pc}
 8013292:	2001      	movs	r0, #1
 8013294:	e7fc      	b.n	8013290 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8013296:	2002      	movs	r0, #2
 8013298:	e7fa      	b.n	8013290 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801329a <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 801329a:	b570      	push	{r4, r5, r6, lr}
 801329c:	4615      	mov	r5, r2
 801329e:	f000 f842 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 80132a2:	b1f8      	cbz	r0, 80132e4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 80132a4:	2300      	movs	r3, #0
 80132a6:	4604      	mov	r4, r0
 80132a8:	461a      	mov	r2, r3
 80132aa:	260a      	movs	r6, #10
 80132ac:	7820      	ldrb	r0, [r4, #0]
 80132ae:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 80132b2:	2909      	cmp	r1, #9
 80132b4:	d818      	bhi.n	80132e8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80132b6:	fba3 3106 	umull	r3, r1, r3, r6
 80132ba:	fb06 1102 	mla	r1, r6, r2, r1
 80132be:	3b30      	subs	r3, #48	; 0x30
 80132c0:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 80132c4:	18c3      	adds	r3, r0, r3
 80132c6:	f141 0200 	adc.w	r2, r1, #0
 80132ca:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80132ce:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80132d2:	d1eb      	bne.n	80132ac <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 80132d4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80132d8:	4299      	cmp	r1, r3
 80132da:	eb70 0202 	sbcs.w	r2, r0, r2
 80132de:	d303      	bcc.n	80132e8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80132e0:	602b      	str	r3, [r5, #0]
 80132e2:	bd70      	pop	{r4, r5, r6, pc}
 80132e4:	2001      	movs	r0, #1
 80132e6:	e7fc      	b.n	80132e2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 80132e8:	2002      	movs	r0, #2
 80132ea:	e7fa      	b.n	80132e2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

080132ec <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80132ec:	b538      	push	{r3, r4, r5, lr}
 80132ee:	4615      	mov	r5, r2
 80132f0:	f000 f819 	bl	8013326 <Sscan::checkName(char const*, char const*)>
 80132f4:	b198      	cbz	r0, 801331e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80132f6:	4604      	mov	r4, r0
 80132f8:	2100      	movs	r1, #0
 80132fa:	220a      	movs	r2, #10
 80132fc:	7823      	ldrb	r3, [r4, #0]
 80132fe:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8013302:	2809      	cmp	r0, #9
 8013304:	d80d      	bhi.n	8013322 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8013306:	fb02 3101 	mla	r1, r2, r1, r3
 801330a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801330e:	3930      	subs	r1, #48	; 0x30
 8013310:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8013314:	d1f2      	bne.n	80132fc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8013316:	29ff      	cmp	r1, #255	; 0xff
 8013318:	d803      	bhi.n	8013322 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801331a:	7029      	strb	r1, [r5, #0]
 801331c:	bd38      	pop	{r3, r4, r5, pc}
 801331e:	2001      	movs	r0, #1
 8013320:	e7fc      	b.n	801331c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8013322:	2002      	movs	r0, #2
 8013324:	e7fa      	b.n	801331c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08013326 <Sscan::checkName(char const*, char const*)>:
 8013326:	4603      	mov	r3, r0
 8013328:	b510      	push	{r4, lr}
 801332a:	3901      	subs	r1, #1
 801332c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013330:	461c      	mov	r4, r3
 8013332:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013336:	b120      	cbz	r0, 8013342 <Sscan::checkName(char const*, char const*)+0x1c>
 8013338:	b10a      	cbz	r2, 801333e <Sscan::checkName(char const*, char const*)+0x18>
 801333a:	4290      	cmp	r0, r2
 801333c:	d0f6      	beq.n	801332c <Sscan::checkName(char const*, char const*)+0x6>
 801333e:	2000      	movs	r0, #0
 8013340:	e006      	b.n	8013350 <Sscan::checkName(char const*, char const*)+0x2a>
 8013342:	2a3d      	cmp	r2, #61	; 0x3d
 8013344:	d104      	bne.n	8013350 <Sscan::checkName(char const*, char const*)+0x2a>
 8013346:	7860      	ldrb	r0, [r4, #1]
 8013348:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 801334c:	d000      	beq.n	8013350 <Sscan::checkName(char const*, char const*)+0x2a>
 801334e:	1c60      	adds	r0, r4, #1
 8013350:	bd10      	pop	{r4, pc}

08013352 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8013352:	2300      	movs	r3, #0
 8013354:	2001      	movs	r0, #1
 8013356:	7093      	strb	r3, [r2, #2]
 8013358:	8010      	strh	r0, [r2, #0]
 801335a:	4770      	bx	lr

0801335c <Display::PrintInfo() [clone .isra.0]>:
 801335c:	b910      	cbnz	r0, 8013364 <Display::PrintInfo() [clone .isra.0]+0x8>
 801335e:	4803      	ldr	r0, [pc, #12]	; (801336c <Display::PrintInfo() [clone .isra.0]+0x10>)
 8013360:	f000 bd2d 	b.w	8013dbe <puts>
 8013364:	6803      	ldr	r3, [r0, #0]
 8013366:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8013368:	4718      	bx	r3
 801336a:	bf00      	nop
 801336c:	08018da3 	stmdaeq	r1, {r0, r1, r5, r7, r8, sl, fp, pc}

08013370 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8013370:	b513      	push	{r0, r1, r4, lr}
 8013372:	4604      	mov	r4, r0
 8013374:	0a13      	lsrs	r3, r2, #8
 8013376:	7800      	ldrb	r0, [r0, #0]
 8013378:	f88d 1004 	strb.w	r1, [sp, #4]
 801337c:	f88d 3005 	strb.w	r3, [sp, #5]
 8013380:	f88d 2006 	strb.w	r2, [sp, #6]
 8013384:	f001 fe0e 	bl	8014fa4 <gd32_i2c_set_address>
 8013388:	6860      	ldr	r0, [r4, #4]
 801338a:	f001 fe03 	bl	8014f94 <gd32_i2c_set_baudrate>
 801338e:	2103      	movs	r1, #3
 8013390:	a801      	add	r0, sp, #4
 8013392:	f001 fe0d 	bl	8014fb0 <gd32_i2c_write>
 8013396:	b002      	add	sp, #8
 8013398:	bd10      	pop	{r4, pc}

0801339a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 801339a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801339c:	460d      	mov	r5, r1
 801339e:	4604      	mov	r4, r0
 80133a0:	f001 fe00 	bl	8014fa4 <gd32_i2c_set_address>
 80133a4:	4628      	mov	r0, r5
 80133a6:	f001 fdf5 	bl	8014f94 <gd32_i2c_set_baudrate>
 80133aa:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80133ae:	2b07      	cmp	r3, #7
 80133b0:	d902      	bls.n	80133b8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80133b2:	3c50      	subs	r4, #80	; 0x50
 80133b4:	2c0f      	cmp	r4, #15
 80133b6:	d809      	bhi.n	80133cc <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80133b8:	2101      	movs	r1, #1
 80133ba:	f10d 0007 	add.w	r0, sp, #7
 80133be:	f001 fe5d 	bl	801507c <gd32_i2c_read>
 80133c2:	fab0 f080 	clz	r0, r0
 80133c6:	0940      	lsrs	r0, r0, #5
 80133c8:	b003      	add	sp, #12
 80133ca:	bd30      	pop	{r4, r5, pc}
 80133cc:	2100      	movs	r1, #0
 80133ce:	4608      	mov	r0, r1
 80133d0:	f001 fdee 	bl	8014fb0 <gd32_i2c_write>
 80133d4:	e7f5      	b.n	80133c2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

080133d6 <Display::Detect7Segment()>:
 80133d6:	b538      	push	{r3, r4, r5, lr}
 80133d8:	68c1      	ldr	r1, [r0, #12]
 80133da:	4604      	mov	r4, r0
 80133dc:	7a00      	ldrb	r0, [r0, #8]
 80133de:	f7ff ffdc 	bl	801339a <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 80133e2:	7460      	strb	r0, [r4, #17]
 80133e4:	b170      	cbz	r0, 8013404 <Display::Detect7Segment()+0x2e>
 80133e6:	2200      	movs	r2, #0
 80133e8:	f104 0508 	add.w	r5, r4, #8
 80133ec:	4611      	mov	r1, r2
 80133ee:	4628      	mov	r0, r5
 80133f0:	f7ff ffbe 	bl	8013370 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 80133f4:	7c63      	ldrb	r3, [r4, #17]
 80133f6:	b12b      	cbz	r3, 8013404 <Display::Detect7Segment()+0x2e>
 80133f8:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 80133fc:	2112      	movs	r1, #18
 80133fe:	4628      	mov	r0, r5
 8013400:	f7ff ffb6 	bl	8013370 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8013404:	bd38      	pop	{r3, r4, r5, pc}

08013406 <Display::Detect(display::Type)>:
 8013406:	2902      	cmp	r1, #2
 8013408:	b538      	push	{r3, r4, r5, lr}
 801340a:	4604      	mov	r4, r0
 801340c:	d014      	beq.n	8013438 <Display::Detect(display::Type)+0x32>
 801340e:	2904      	cmp	r1, #4
 8013410:	d01b      	beq.n	801344a <Display::Detect(display::Type)+0x44>
 8013412:	69a0      	ldr	r0, [r4, #24]
 8013414:	b168      	cbz	r0, 8013432 <Display::Detect(display::Type)+0x2c>
 8013416:	6803      	ldr	r3, [r0, #0]
 8013418:	689b      	ldr	r3, [r3, #8]
 801341a:	4798      	blx	r3
 801341c:	4603      	mov	r3, r0
 801341e:	69a0      	ldr	r0, [r4, #24]
 8013420:	b9ab      	cbnz	r3, 801344e <Display::Detect(display::Type)+0x48>
 8013422:	b110      	cbz	r0, 801342a <Display::Detect(display::Type)+0x24>
 8013424:	6803      	ldr	r3, [r0, #0]
 8013426:	685b      	ldr	r3, [r3, #4]
 8013428:	4798      	blx	r3
 801342a:	2300      	movs	r3, #0
 801342c:	61a3      	str	r3, [r4, #24]
 801342e:	2304      	movs	r3, #4
 8013430:	6023      	str	r3, [r4, #0]
 8013432:	2300      	movs	r3, #0
 8013434:	6163      	str	r3, [r4, #20]
 8013436:	e010      	b.n	801345a <Display::Detect(display::Type)+0x54>
 8013438:	2018      	movs	r0, #24
 801343a:	f000 fbc9 	bl	8013bd0 <operator new(unsigned int)>
 801343e:	4605      	mov	r5, r0
 8013440:	2100      	movs	r1, #0
 8013442:	f000 f89d 	bl	8013580 <Ssd1306::Ssd1306(TOledPanel)>
 8013446:	61a5      	str	r5, [r4, #24]
 8013448:	e7e3      	b.n	8013412 <Display::Detect(display::Type)+0xc>
 801344a:	6001      	str	r1, [r0, #0]
 801344c:	e7e1      	b.n	8013412 <Display::Detect(display::Type)+0xc>
 801344e:	6803      	ldr	r3, [r0, #0]
 8013450:	68db      	ldr	r3, [r3, #12]
 8013452:	4798      	blx	r3
 8013454:	69a3      	ldr	r3, [r4, #24]
 8013456:	2b00      	cmp	r3, #0
 8013458:	d0eb      	beq.n	8013432 <Display::Detect(display::Type)+0x2c>
 801345a:	bd38      	pop	{r3, r4, r5, pc}

0801345c <Display::Display()>:
 801345c:	2304      	movs	r3, #4
 801345e:	b510      	push	{r4, lr}
 8013460:	6003      	str	r3, [r0, #0]
 8013462:	4b0f      	ldr	r3, [pc, #60]	; (80134a0 <Display::Display()+0x44>)
 8013464:	4604      	mov	r4, r0
 8013466:	681b      	ldr	r3, [r3, #0]
 8013468:	4a0e      	ldr	r2, [pc, #56]	; (80134a4 <Display::Display()+0x48>)
 801346a:	6043      	str	r3, [r0, #4]
 801346c:	2321      	movs	r3, #33	; 0x21
 801346e:	7203      	strb	r3, [r0, #8]
 8013470:	4b0d      	ldr	r3, [pc, #52]	; (80134a8 <Display::Display()+0x4c>)
 8013472:	2102      	movs	r1, #2
 8013474:	60c3      	str	r3, [r0, #12]
 8013476:	2300      	movs	r3, #0
 8013478:	e9c0 2305 	strd	r2, r3, [r0, #20]
 801347c:	8203      	strh	r3, [r0, #16]
 801347e:	4b0b      	ldr	r3, [pc, #44]	; (80134ac <Display::Display()+0x50>)
 8013480:	6018      	str	r0, [r3, #0]
 8013482:	f7ff ffc0 	bl	8013406 <Display::Detect(display::Type)>
 8013486:	4620      	mov	r0, r4
 8013488:	f7ff ffa5 	bl	80133d6 <Display::Detect7Segment()>
 801348c:	69a3      	ldr	r3, [r4, #24]
 801348e:	b10b      	cbz	r3, 8013494 <Display::Display()+0x38>
 8013490:	f7f5 f9e4 	bl	800885c <display::timeout::gpio_init()>
 8013494:	69a0      	ldr	r0, [r4, #24]
 8013496:	f7ff ff61 	bl	801335c <Display::PrintInfo() [clone .isra.0]>
 801349a:	4620      	mov	r0, r4
 801349c:	bd10      	pop	{r4, pc}
 801349e:	bf00      	nop
 80134a0:	2001d994 	mulcs	r1, r4, r9
 80134a4:	000493e0 	andeq	r9, r4, r0, ror #7
 80134a8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80134ac:	2001d88c 	andcs	sp, r1, ip, lsl #17

080134b0 <Ssd1306::~Ssd1306()>:
 80134b0:	4770      	bx	lr

080134b2 <Ssd1306::SetCursor(unsigned int)>:
 80134b2:	4770      	bx	lr

080134b4 <Ssd1306::PrintInfo()>:
 80134b4:	b410      	push	{r4}
 80134b6:	4906      	ldr	r1, [pc, #24]	; (80134d0 <Ssd1306::PrintInfo()+0x1c>)
 80134b8:	7c44      	ldrb	r4, [r0, #17]
 80134ba:	7903      	ldrb	r3, [r0, #4]
 80134bc:	7942      	ldrb	r2, [r0, #5]
 80134be:	4805      	ldr	r0, [pc, #20]	; (80134d4 <Ssd1306::PrintInfo()+0x20>)
 80134c0:	2c00      	cmp	r4, #0
 80134c2:	bf08      	it	eq
 80134c4:	4601      	moveq	r1, r0
 80134c6:	4804      	ldr	r0, [pc, #16]	; (80134d8 <Ssd1306::PrintInfo()+0x24>)
 80134c8:	bc10      	pop	{r4}
 80134ca:	f7f6 b8a1 	b.w	8009610 <printf>
 80134ce:	bf00      	nop
 80134d0:	08018db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, pc}
 80134d4:	08018dbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, fp, pc}
 80134d8:	08018dc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, sl, fp, pc}

080134dc <Ssd1306::~Ssd1306()>:
 80134dc:	b510      	push	{r4, lr}
 80134de:	4604      	mov	r4, r0
 80134e0:	f000 fb72 	bl	8013bc8 <operator delete(void*)>
 80134e4:	4620      	mov	r0, r4
 80134e6:	bd10      	pop	{r4, pc}

080134e8 <HAL_I2C::Setup()>:
 80134e8:	b510      	push	{r4, lr}
 80134ea:	4604      	mov	r4, r0
 80134ec:	7800      	ldrb	r0, [r0, #0]
 80134ee:	f001 fd59 	bl	8014fa4 <gd32_i2c_set_address>
 80134f2:	6860      	ldr	r0, [r4, #4]
 80134f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80134f8:	f001 bd4c 	b.w	8014f94 <gd32_i2c_set_baudrate>

080134fc <Ssd1306::PutChar(int)>:
 80134fc:	b510      	push	{r4, lr}
 80134fe:	f1a1 0420 	sub.w	r4, r1, #32
 8013502:	2c5f      	cmp	r4, #95	; 0x5f
 8013504:	bf88      	it	hi
 8013506:	2400      	movhi	r4, #0
 8013508:	3008      	adds	r0, #8
 801350a:	f7ff ffed 	bl	80134e8 <HAL_I2C::Setup()>
 801350e:	4804      	ldr	r0, [pc, #16]	; (8013520 <Ssd1306::PutChar(int)+0x24>)
 8013510:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013514:	4420      	add	r0, r4
 8013516:	2107      	movs	r1, #7
 8013518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801351c:	f001 bd48 	b.w	8014fb0 <gd32_i2c_write>
 8013520:	08018dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp, pc}

08013524 <Ssd1306::PutString(char const*)>:
 8013524:	b538      	push	{r3, r4, r5, lr}
 8013526:	4605      	mov	r5, r0
 8013528:	1e4c      	subs	r4, r1, #1
 801352a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801352e:	b901      	cbnz	r1, 8013532 <Ssd1306::PutString(char const*)+0xe>
 8013530:	bd38      	pop	{r3, r4, r5, pc}
 8013532:	4628      	mov	r0, r5
 8013534:	f7ff ffe2 	bl	80134fc <Ssd1306::PutChar(int)>
 8013538:	e7f7      	b.n	801352a <Ssd1306::PutString(char const*)+0x6>

0801353a <Ssd1306::Text(char const*, unsigned int)>:
 801353a:	b570      	push	{r4, r5, r6, lr}
 801353c:	7903      	ldrb	r3, [r0, #4]
 801353e:	4605      	mov	r5, r0
 8013540:	460c      	mov	r4, r1
 8013542:	4293      	cmp	r3, r2
 8013544:	bf94      	ite	ls
 8013546:	18ce      	addls	r6, r1, r3
 8013548:	188e      	addhi	r6, r1, r2
 801354a:	42b4      	cmp	r4, r6
 801354c:	d100      	bne.n	8013550 <Ssd1306::Text(char const*, unsigned int)+0x16>
 801354e:	bd70      	pop	{r4, r5, r6, pc}
 8013550:	4628      	mov	r0, r5
 8013552:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013556:	f7ff ffd1 	bl	80134fc <Ssd1306::PutChar(int)>
 801355a:	e7f6      	b.n	801354a <Ssd1306::Text(char const*, unsigned int)+0x10>

0801355c <Ssd1306::InitMembers()>:
 801355c:	7c03      	ldrb	r3, [r0, #16]
 801355e:	b14b      	cbz	r3, 8013574 <Ssd1306::InitMembers()+0x18>
 8013560:	3b01      	subs	r3, #1
 8013562:	2b01      	cmp	r3, #1
 8013564:	d909      	bls.n	801357a <Ssd1306::InitMembers()+0x1e>
 8013566:	2308      	movs	r3, #8
 8013568:	2204      	movs	r2, #4
 801356a:	2115      	movs	r1, #21
 801356c:	7143      	strb	r3, [r0, #5]
 801356e:	7101      	strb	r1, [r0, #4]
 8013570:	6142      	str	r2, [r0, #20]
 8013572:	4770      	bx	lr
 8013574:	2308      	movs	r3, #8
 8013576:	461a      	mov	r2, r3
 8013578:	e7f7      	b.n	801356a <Ssd1306::InitMembers()+0xe>
 801357a:	2304      	movs	r3, #4
 801357c:	e7fb      	b.n	8013576 <Ssd1306::InitMembers()+0x1a>
	...

08013580 <Ssd1306::Ssd1306(TOledPanel)>:
 8013580:	4a08      	ldr	r2, [pc, #32]	; (80135a4 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8013582:	b508      	push	{r3, lr}
 8013584:	6002      	str	r2, [r0, #0]
 8013586:	227f      	movs	r2, #127	; 0x7f
 8013588:	80c2      	strh	r2, [r0, #6]
 801358a:	223c      	movs	r2, #60	; 0x3c
 801358c:	7202      	strb	r2, [r0, #8]
 801358e:	4a06      	ldr	r2, [pc, #24]	; (80135a8 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8013590:	7401      	strb	r1, [r0, #16]
 8013592:	60c2      	str	r2, [r0, #12]
 8013594:	2200      	movs	r2, #0
 8013596:	7442      	strb	r2, [r0, #17]
 8013598:	4a04      	ldr	r2, [pc, #16]	; (80135ac <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 801359a:	6010      	str	r0, [r2, #0]
 801359c:	f7ff ffde 	bl	801355c <Ssd1306::InitMembers()>
 80135a0:	bd08      	pop	{r3, pc}
 80135a2:	bf00      	nop
 80135a4:	080190b0 	stmdaeq	r1, {r4, r5, r7, ip, pc}
 80135a8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80135ac:	2001d918 	andcs	sp, r1, r8, lsl r9

080135b0 <Ssd1306::SendCommand(unsigned char)>:
 80135b0:	2300      	movs	r3, #0
 80135b2:	b507      	push	{r0, r1, r2, lr}
 80135b4:	3008      	adds	r0, #8
 80135b6:	f88d 3004 	strb.w	r3, [sp, #4]
 80135ba:	f88d 1005 	strb.w	r1, [sp, #5]
 80135be:	f7ff ff93 	bl	80134e8 <HAL_I2C::Setup()>
 80135c2:	2102      	movs	r1, #2
 80135c4:	a801      	add	r0, sp, #4
 80135c6:	f001 fcf3 	bl	8014fb0 <gd32_i2c_write>
 80135ca:	b003      	add	sp, #12
 80135cc:	f85d fb04 	ldr.w	pc, [sp], #4

080135d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80135d0:	2914      	cmp	r1, #20
 80135d2:	b570      	push	{r4, r5, r6, lr}
 80135d4:	4605      	mov	r5, r0
 80135d6:	4616      	mov	r6, r2
 80135d8:	d81c      	bhi.n	8013614 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80135da:	7943      	ldrb	r3, [r0, #5]
 80135dc:	4293      	cmp	r3, r2
 80135de:	d919      	bls.n	8013614 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80135e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80135e4:	7c43      	ldrb	r3, [r0, #17]
 80135e6:	004c      	lsls	r4, r1, #1
 80135e8:	b2e4      	uxtb	r4, r4
 80135ea:	b10b      	cbz	r3, 80135f0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 80135ec:	3404      	adds	r4, #4
 80135ee:	b2e4      	uxtb	r4, r4
 80135f0:	4628      	mov	r0, r5
 80135f2:	f004 010e 	and.w	r1, r4, #14
 80135f6:	f7ff ffdb 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80135fa:	0921      	lsrs	r1, r4, #4
 80135fc:	4628      	mov	r0, r5
 80135fe:	f041 0110 	orr.w	r1, r1, #16
 8013602:	f7ff ffd5 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013606:	4628      	mov	r0, r5
 8013608:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 801360c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013610:	f7ff bfce 	b.w	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013614:	bd70      	pop	{r4, r5, r6, pc}

08013616 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8013616:	b570      	push	{r4, r5, r6, lr}
 8013618:	461e      	mov	r6, r3
 801361a:	7943      	ldrb	r3, [r0, #5]
 801361c:	4604      	mov	r4, r0
 801361e:	428b      	cmp	r3, r1
 8013620:	4615      	mov	r5, r2
 8013622:	d30b      	bcc.n	801363c <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8013624:	3901      	subs	r1, #1
 8013626:	b2ca      	uxtb	r2, r1
 8013628:	2100      	movs	r1, #0
 801362a:	f7ff ffd1 	bl	80135d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801362e:	4632      	mov	r2, r6
 8013630:	4629      	mov	r1, r5
 8013632:	4620      	mov	r0, r4
 8013634:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013638:	f7ff bf7f 	b.w	801353a <Ssd1306::Text(char const*, unsigned int)>
 801363c:	bd70      	pop	{r4, r5, r6, pc}
	...

08013640 <Ssd1306::ClearLine(unsigned char)>:
 8013640:	b538      	push	{r3, r4, r5, lr}
 8013642:	7943      	ldrb	r3, [r0, #5]
 8013644:	4605      	mov	r5, r0
 8013646:	428b      	cmp	r3, r1
 8013648:	d314      	bcc.n	8013674 <Ssd1306::ClearLine(unsigned char)+0x34>
 801364a:	3901      	subs	r1, #1
 801364c:	b2cc      	uxtb	r4, r1
 801364e:	4622      	mov	r2, r4
 8013650:	2100      	movs	r1, #0
 8013652:	f7ff ffbd 	bl	80135d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013656:	f105 0008 	add.w	r0, r5, #8
 801365a:	f7ff ff45 	bl	80134e8 <HAL_I2C::Setup()>
 801365e:	2181      	movs	r1, #129	; 0x81
 8013660:	4805      	ldr	r0, [pc, #20]	; (8013678 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8013662:	f001 fca5 	bl	8014fb0 <gd32_i2c_write>
 8013666:	4622      	mov	r2, r4
 8013668:	4628      	mov	r0, r5
 801366a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801366e:	2100      	movs	r1, #0
 8013670:	f7ff bfae 	b.w	80135d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013674:	bd38      	pop	{r3, r4, r5, pc}
 8013676:	bf00      	nop
 8013678:	2001d890 	mulcs	r1, r0, r8

0801367c <Ssd1306::SetSleep(bool)>:
 801367c:	b111      	cbz	r1, 8013684 <Ssd1306::SetSleep(bool)+0x8>
 801367e:	21ae      	movs	r1, #174	; 0xae
 8013680:	f7ff bf96 	b.w	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013684:	21af      	movs	r1, #175	; 0xaf
 8013686:	e7fb      	b.n	8013680 <Ssd1306::SetSleep(bool)+0x4>

08013688 <Ssd1306::SetContrast(unsigned char)>:
 8013688:	b538      	push	{r3, r4, r5, lr}
 801368a:	4604      	mov	r4, r0
 801368c:	460d      	mov	r5, r1
 801368e:	7181      	strb	r1, [r0, #6]
 8013690:	2181      	movs	r1, #129	; 0x81
 8013692:	f7ff ff8d 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013696:	4629      	mov	r1, r5
 8013698:	4620      	mov	r0, r4
 801369a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801369e:	f7ff bf87 	b.w	80135b0 <Ssd1306::SendCommand(unsigned char)>

080136a2 <Ssd1306::SetFlipVertically(bool)>:
 80136a2:	b510      	push	{r4, lr}
 80136a4:	4604      	mov	r4, r0
 80136a6:	71c1      	strb	r1, [r0, #7]
 80136a8:	b141      	cbz	r1, 80136bc <Ssd1306::SetFlipVertically(bool)+0x1a>
 80136aa:	21c0      	movs	r1, #192	; 0xc0
 80136ac:	f7ff ff80 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136b0:	21a0      	movs	r1, #160	; 0xa0
 80136b2:	4620      	mov	r0, r4
 80136b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136b8:	f7ff bf7a 	b.w	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136bc:	21c8      	movs	r1, #200	; 0xc8
 80136be:	f7ff ff77 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136c2:	21a1      	movs	r1, #161	; 0xa1
 80136c4:	e7f5      	b.n	80136b2 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080136c8 <Ssd1306::CheckSH1106()>:
 80136c8:	b530      	push	{r4, r5, lr}
 80136ca:	4604      	mov	r4, r0
 80136cc:	b087      	sub	sp, #28
 80136ce:	2100      	movs	r1, #0
 80136d0:	f7ff ff6e 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136d4:	2190      	movs	r1, #144	; 0x90
 80136d6:	4620      	mov	r0, r4
 80136d8:	f7ff ff6a 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136dc:	21b0      	movs	r1, #176	; 0xb0
 80136de:	4620      	mov	r0, r4
 80136e0:	f7ff ff66 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80136e4:	4b22      	ldr	r3, [pc, #136]	; (8013770 <Ssd1306::CheckSH1106()+0xa8>)
 80136e6:	f104 0508 	add.w	r5, r4, #8
 80136ea:	6818      	ldr	r0, [r3, #0]
 80136ec:	791b      	ldrb	r3, [r3, #4]
 80136ee:	9002      	str	r0, [sp, #8]
 80136f0:	4628      	mov	r0, r5
 80136f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80136f6:	f7ff fef7 	bl	80134e8 <HAL_I2C::Setup()>
 80136fa:	2105      	movs	r1, #5
 80136fc:	a802      	add	r0, sp, #8
 80136fe:	f001 fc57 	bl	8014fb0 <gd32_i2c_write>
 8013702:	2100      	movs	r1, #0
 8013704:	4620      	mov	r0, r4
 8013706:	f7ff ff53 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 801370a:	2190      	movs	r1, #144	; 0x90
 801370c:	4620      	mov	r0, r4
 801370e:	f7ff ff4f 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013712:	21b0      	movs	r1, #176	; 0xb0
 8013714:	4620      	mov	r0, r4
 8013716:	f7ff ff4b 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 801371a:	2300      	movs	r3, #0
 801371c:	9304      	str	r3, [sp, #16]
 801371e:	f88d 3014 	strb.w	r3, [sp, #20]
 8013722:	2340      	movs	r3, #64	; 0x40
 8013724:	4628      	mov	r0, r5
 8013726:	f88d 3007 	strb.w	r3, [sp, #7]
 801372a:	f7ff fedd 	bl	80134e8 <HAL_I2C::Setup()>
 801372e:	2101      	movs	r1, #1
 8013730:	f10d 0007 	add.w	r0, sp, #7
 8013734:	f001 fc3c 	bl	8014fb0 <gd32_i2c_write>
 8013738:	4628      	mov	r0, r5
 801373a:	f7ff fed5 	bl	80134e8 <HAL_I2C::Setup()>
 801373e:	2105      	movs	r1, #5
 8013740:	a804      	add	r0, sp, #16
 8013742:	f001 fc9b 	bl	801507c <gd32_i2c_read>
 8013746:	2004      	movs	r0, #4
 8013748:	aa02      	add	r2, sp, #8
 801374a:	a904      	add	r1, sp, #16
 801374c:	3801      	subs	r0, #1
 801374e:	d201      	bcs.n	8013754 <Ssd1306::CheckSH1106()+0x8c>
 8013750:	2300      	movs	r3, #0
 8013752:	e006      	b.n	8013762 <Ssd1306::CheckSH1106()+0x9a>
 8013754:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8013758:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 801375c:	42ab      	cmp	r3, r5
 801375e:	d0f5      	beq.n	801374c <Ssd1306::CheckSH1106()+0x84>
 8013760:	1b5b      	subs	r3, r3, r5
 8013762:	fab3 f383 	clz	r3, r3
 8013766:	095b      	lsrs	r3, r3, #5
 8013768:	7463      	strb	r3, [r4, #17]
 801376a:	b007      	add	sp, #28
 801376c:	bd30      	pop	{r4, r5, pc}
 801376e:	bf00      	nop
 8013770:	08018dcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sl, fp, pc}

08013774 <Ssd1306::Cls()>:
 8013774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013778:	4604      	mov	r4, r0
 801377a:	2600      	movs	r6, #0
 801377c:	7c45      	ldrb	r5, [r0, #17]
 801377e:	00ad      	lsls	r5, r5, #2
 8013780:	b2ed      	uxtb	r5, r5
 8013782:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8013786:	f045 0810 	orr.w	r8, r5, #16
 801378a:	b2ff      	uxtb	r7, r7
 801378c:	6963      	ldr	r3, [r4, #20]
 801378e:	4629      	mov	r1, r5
 8013790:	42b3      	cmp	r3, r6
 8013792:	4620      	mov	r0, r4
 8013794:	d80b      	bhi.n	80137ae <Ssd1306::Cls()+0x3a>
 8013796:	f7ff ff0b 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 801379a:	4641      	mov	r1, r8
 801379c:	4620      	mov	r0, r4
 801379e:	f7ff ff07 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80137a2:	4620      	mov	r0, r4
 80137a4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80137a8:	21b0      	movs	r1, #176	; 0xb0
 80137aa:	f7ff bf01 	b.w	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80137ae:	f7ff feff 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80137b2:	4641      	mov	r1, r8
 80137b4:	4620      	mov	r0, r4
 80137b6:	f7ff fefb 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80137ba:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80137be:	4620      	mov	r0, r4
 80137c0:	b2c9      	uxtb	r1, r1
 80137c2:	f7ff fef5 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 80137c6:	7c23      	ldrb	r3, [r4, #16]
 80137c8:	b123      	cbz	r3, 80137d4 <Ssd1306::Cls()+0x60>
 80137ca:	3b01      	subs	r3, #1
 80137cc:	2b01      	cmp	r3, #1
 80137ce:	d901      	bls.n	80137d4 <Ssd1306::Cls()+0x60>
 80137d0:	3601      	adds	r6, #1
 80137d2:	e7db      	b.n	801378c <Ssd1306::Cls()+0x18>
 80137d4:	f104 0008 	add.w	r0, r4, #8
 80137d8:	f7ff fe86 	bl	80134e8 <HAL_I2C::Setup()>
 80137dc:	4639      	mov	r1, r7
 80137de:	4802      	ldr	r0, [pc, #8]	; (80137e8 <Ssd1306::Cls()+0x74>)
 80137e0:	f001 fbe6 	bl	8014fb0 <gd32_i2c_write>
 80137e4:	e7f4      	b.n	80137d0 <Ssd1306::Cls()+0x5c>
 80137e6:	bf00      	nop
 80137e8:	2001d890 	mulcs	r1, r0, r8

080137ec <Ssd1306::Start()>:
 80137ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80137ee:	7a04      	ldrb	r4, [r0, #8]
 80137f0:	68c6      	ldr	r6, [r0, #12]
 80137f2:	4605      	mov	r5, r0
 80137f4:	4620      	mov	r0, r4
 80137f6:	f001 fbd5 	bl	8014fa4 <gd32_i2c_set_address>
 80137fa:	4630      	mov	r0, r6
 80137fc:	f001 fbca 	bl	8014f94 <gd32_i2c_set_baudrate>
 8013800:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013804:	2b07      	cmp	r3, #7
 8013806:	d902      	bls.n	801380e <Ssd1306::Start()+0x22>
 8013808:	3c50      	subs	r4, #80	; 0x50
 801380a:	2c0f      	cmp	r4, #15
 801380c:	d80f      	bhi.n	801382e <Ssd1306::Start()+0x42>
 801380e:	2101      	movs	r1, #1
 8013810:	f10d 0007 	add.w	r0, sp, #7
 8013814:	f001 fc32 	bl	801507c <gd32_i2c_read>
 8013818:	fab0 f480 	clz	r4, r0
 801381c:	0964      	lsrs	r4, r4, #5
 801381e:	b35c      	cbz	r4, 8013878 <Ssd1306::Start()+0x8c>
 8013820:	7c2e      	ldrb	r6, [r5, #16]
 8013822:	b14e      	cbz	r6, 8013838 <Ssd1306::Start()+0x4c>
 8013824:	3e01      	subs	r6, #1
 8013826:	2e01      	cmp	r6, #1
 8013828:	d929      	bls.n	801387e <Ssd1306::Start()+0x92>
 801382a:	2400      	movs	r4, #0
 801382c:	e024      	b.n	8013878 <Ssd1306::Start()+0x8c>
 801382e:	2100      	movs	r1, #0
 8013830:	4608      	mov	r0, r1
 8013832:	f001 fbbd 	bl	8014fb0 <gd32_i2c_write>
 8013836:	e7ef      	b.n	8013818 <Ssd1306::Start()+0x2c>
 8013838:	4f16      	ldr	r7, [pc, #88]	; (8013894 <Ssd1306::Start()+0xa8>)
 801383a:	4628      	mov	r0, r5
 801383c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013840:	3601      	adds	r6, #1
 8013842:	f7ff feb5 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013846:	2e18      	cmp	r6, #24
 8013848:	d1f7      	bne.n	801383a <Ssd1306::Start()+0x4e>
 801384a:	2300      	movs	r3, #0
 801384c:	4a12      	ldr	r2, [pc, #72]	; (8013898 <Ssd1306::Start()+0xac>)
 801384e:	4618      	mov	r0, r3
 8013850:	4611      	mov	r1, r2
 8013852:	3301      	adds	r3, #1
 8013854:	2b86      	cmp	r3, #134	; 0x86
 8013856:	f802 0b01 	strb.w	r0, [r2], #1
 801385a:	d1fa      	bne.n	8013852 <Ssd1306::Start()+0x66>
 801385c:	2340      	movs	r3, #64	; 0x40
 801385e:	4628      	mov	r0, r5
 8013860:	700b      	strb	r3, [r1, #0]
 8013862:	f7ff ff31 	bl	80136c8 <Ssd1306::CheckSH1106()>
 8013866:	4628      	mov	r0, r5
 8013868:	f7ff ff84 	bl	8013774 <Ssd1306::Cls()>
 801386c:	21af      	movs	r1, #175	; 0xaf
 801386e:	4628      	mov	r0, r5
 8013870:	f7ff fe9e 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 8013874:	2301      	movs	r3, #1
 8013876:	71eb      	strb	r3, [r5, #7]
 8013878:	4620      	mov	r0, r4
 801387a:	b003      	add	sp, #12
 801387c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801387e:	2600      	movs	r6, #0
 8013880:	4f06      	ldr	r7, [pc, #24]	; (801389c <Ssd1306::Start()+0xb0>)
 8013882:	4628      	mov	r0, r5
 8013884:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013888:	3601      	adds	r6, #1
 801388a:	f7ff fe91 	bl	80135b0 <Ssd1306::SendCommand(unsigned char)>
 801388e:	2e18      	cmp	r6, #24
 8013890:	d1f7      	bne.n	8013882 <Ssd1306::Start()+0x96>
 8013892:	e7da      	b.n	801384a <Ssd1306::Start()+0x5e>
 8013894:	08019090 	stmdaeq	r1, {r4, r7, ip, pc}
 8013898:	2001d890 	mulcs	r1, r0, r8
 801389c:	08019078 	stmdaeq	r1, {r3, r4, r5, r6, ip, pc}

080138a0 <console_putc>:
 80138a0:	f000 bb90 	b.w	8013fc4 <uart0_putc>

080138a4 <console_puts>:
 80138a4:	f000 bbae 	b.w	8014004 <uart0_puts>

080138a8 <console_set_fg_color>:
 80138a8:	2807      	cmp	r0, #7
 80138aa:	d810      	bhi.n	80138ce <console_set_fg_color+0x26>
 80138ac:	e8df f000 	tbb	[pc, r0]
 80138b0:	0b090704 	bleq	82554c8 <__exidx_end+0x23c2e4>
 80138b4:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8013880 <Ssd1306::Start()+0x94>
 80138b8:	4806      	ldr	r0, [pc, #24]	; (80138d4 <console_set_fg_color+0x2c>)
 80138ba:	f000 bba3 	b.w	8014004 <uart0_puts>
 80138be:	4806      	ldr	r0, [pc, #24]	; (80138d8 <console_set_fg_color+0x30>)
 80138c0:	e7fb      	b.n	80138ba <console_set_fg_color+0x12>
 80138c2:	4806      	ldr	r0, [pc, #24]	; (80138dc <console_set_fg_color+0x34>)
 80138c4:	e7f9      	b.n	80138ba <console_set_fg_color+0x12>
 80138c6:	4806      	ldr	r0, [pc, #24]	; (80138e0 <console_set_fg_color+0x38>)
 80138c8:	e7f7      	b.n	80138ba <console_set_fg_color+0x12>
 80138ca:	4806      	ldr	r0, [pc, #24]	; (80138e4 <console_set_fg_color+0x3c>)
 80138cc:	e7f5      	b.n	80138ba <console_set_fg_color+0x12>
 80138ce:	4806      	ldr	r0, [pc, #24]	; (80138e8 <console_set_fg_color+0x40>)
 80138d0:	e7f3      	b.n	80138ba <console_set_fg_color+0x12>
 80138d2:	bf00      	nop
 80138d4:	080190ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, ip, pc}
 80138d8:	080190f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, ip, pc}
 80138dc:	080190fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, ip, pc}
 80138e0:	08019100 	stmdaeq	r1, {r8, ip, pc}
 80138e4:	080161ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sp, lr}
 80138e8:	08019106 	stmdaeq	r1, {r1, r2, r8, ip, pc}

080138ec <console_error>:
 80138ec:	b510      	push	{r4, lr}
 80138ee:	4604      	mov	r4, r0
 80138f0:	4805      	ldr	r0, [pc, #20]	; (8013908 <console_error+0x1c>)
 80138f2:	f000 fb87 	bl	8014004 <uart0_puts>
 80138f6:	4620      	mov	r0, r4
 80138f8:	f000 fb84 	bl	8014004 <uart0_puts>
 80138fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013900:	4802      	ldr	r0, [pc, #8]	; (801390c <console_error+0x20>)
 8013902:	f000 bb7f 	b.w	8014004 <uart0_puts>
 8013906:	bf00      	nop
 8013908:	080190f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, ip, pc}
 801390c:	080161ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sp, lr}

08013910 <console_status>:
 8013910:	b510      	push	{r4, lr}
 8013912:	460c      	mov	r4, r1
 8013914:	b280      	uxth	r0, r0
 8013916:	f7ff ffc7 	bl	80138a8 <console_set_fg_color>
 801391a:	4807      	ldr	r0, [pc, #28]	; (8013938 <console_status+0x28>)
 801391c:	f000 fb72 	bl	8014004 <uart0_puts>
 8013920:	4620      	mov	r0, r4
 8013922:	f000 fb6f 	bl	8014004 <uart0_puts>
 8013926:	200a      	movs	r0, #10
 8013928:	f000 fb4c 	bl	8013fc4 <uart0_putc>
 801392c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013930:	4802      	ldr	r0, [pc, #8]	; (801393c <console_status+0x2c>)
 8013932:	f000 bb67 	b.w	8014004 <uart0_puts>
 8013936:	bf00      	nop
 8013938:	080190e8 	stmdaeq	r1, {r3, r5, r6, r7, ip, pc}
 801393c:	080161ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sp, lr}

08013940 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8013940:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013944:	4617      	mov	r7, r2
 8013946:	461e      	mov	r6, r3
 8013948:	4d14      	ldr	r5, [pc, #80]	; (801399c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801394a:	4b15      	ldr	r3, [pc, #84]	; (80139a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801394c:	b086      	sub	sp, #24
 801394e:	6018      	str	r0, [r3, #0]
 8013950:	4604      	mov	r4, r0
 8013952:	f105 0803 	add.w	r8, r5, #3
 8013956:	2203      	movs	r2, #3
 8013958:	4628      	mov	r0, r5
 801395a:	f000 f9f8 	bl	8013d4e <memmove>
 801395e:	4639      	mov	r1, r7
 8013960:	220b      	movs	r2, #11
 8013962:	4640      	mov	r0, r8
 8013964:	f000 f9f3 	bl	8013d4e <memmove>
 8013968:	f105 030e 	add.w	r3, r5, #14
 801396c:	4631      	mov	r1, r6
 801396e:	2208      	movs	r2, #8
 8013970:	4618      	mov	r0, r3
 8013972:	f000 f9ec 	bl	8013d4e <memmove>
 8013976:	2308      	movs	r3, #8
 8013978:	e9cd 8303 	strd	r8, r3, [sp, #12]
 801397c:	230b      	movs	r3, #11
 801397e:	9302      	str	r3, [sp, #8]
 8013980:	4b08      	ldr	r3, [pc, #32]	; (80139a4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8013982:	9005      	str	r0, [sp, #20]
 8013984:	e9cd 5300 	strd	r5, r3, [sp]
 8013988:	213f      	movs	r1, #63	; 0x3f
 801398a:	2303      	movs	r3, #3
 801398c:	4a06      	ldr	r2, [pc, #24]	; (80139a8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801398e:	4807      	ldr	r0, [pc, #28]	; (80139ac <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8013990:	f7f5 fe66 	bl	8009660 <snprintf>
 8013994:	4620      	mov	r0, r4
 8013996:	b006      	add	sp, #24
 8013998:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801399c:	2001d91c 	andcs	sp, r1, ip, lsl r9
 80139a0:	2001d974 	andcs	sp, r1, r4, ror r9
 80139a4:	08016a0a 	stmdaeq	r1, {r1, r3, r9, fp, sp, lr}
 80139a8:	0801910c 	stmdaeq	r1, {r2, r3, r8, ip, pc}
 80139ac:	2001d932 	andcs	sp, r1, r2, lsr r9

080139b0 <FirmwareVersion::Print(char const*)>:
 80139b0:	b510      	push	{r4, lr}
 80139b2:	460c      	mov	r4, r1
 80139b4:	4804      	ldr	r0, [pc, #16]	; (80139c8 <FirmwareVersion::Print(char const*)+0x18>)
 80139b6:	f000 fa02 	bl	8013dbe <puts>
 80139ba:	b124      	cbz	r4, 80139c6 <FirmwareVersion::Print(char const*)+0x16>
 80139bc:	4620      	mov	r0, r4
 80139be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80139c2:	f000 b9fc 	b.w	8013dbe <puts>
 80139c6:	bd10      	pop	{r4, pc}
 80139c8:	2001d932 	andcs	sp, r1, r2, lsr r9

080139cc <LedBlink::LedBlink()>:
 80139cc:	b538      	push	{r3, r4, r5, lr}
 80139ce:	2205      	movs	r2, #5
 80139d0:	2300      	movs	r3, #0
 80139d2:	e9c0 3200 	strd	r3, r2, [r0]
 80139d6:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80139da:	6083      	str	r3, [r0, #8]
 80139dc:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80139e0:	6143      	str	r3, [r0, #20]
 80139e2:	4b09      	ldr	r3, [pc, #36]	; (8013a08 <LedBlink::LedBlink()+0x3c>)
 80139e4:	4d09      	ldr	r5, [pc, #36]	; (8013a0c <LedBlink::LedBlink()+0x40>)
 80139e6:	4604      	mov	r4, r0
 80139e8:	6018      	str	r0, [r3, #0]
 80139ea:	f240 6004 	movw	r0, #1540	; 0x604
 80139ee:	f000 fd77 	bl	80144e0 <rcu_periph_clock_enable>
 80139f2:	4628      	mov	r0, r5
 80139f4:	2301      	movs	r3, #1
 80139f6:	2203      	movs	r2, #3
 80139f8:	2110      	movs	r1, #16
 80139fa:	f000 fcd9 	bl	80143b0 <gpio_init>
 80139fe:	2301      	movs	r3, #1
 8013a00:	4620      	mov	r0, r4
 8013a02:	616b      	str	r3, [r5, #20]
 8013a04:	bd38      	pop	{r3, r4, r5, pc}
 8013a06:	bf00      	nop
 8013a08:	2001d978 	andcs	sp, r1, r8, ror r9
 8013a0c:	40011000 	andmi	r1, r1, r0

08013a10 <LedBlink::SetMode(ledblink::Mode)>:
 8013a10:	6843      	ldr	r3, [r0, #4]
 8013a12:	428b      	cmp	r3, r1
 8013a14:	d02f      	beq.n	8013a76 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8013a16:	6041      	str	r1, [r0, #4]
 8013a18:	2904      	cmp	r1, #4
 8013a1a:	d822      	bhi.n	8013a62 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8013a1c:	e8df f001 	tbb	[pc, r1]
 8013a20:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8013a24:	23ff001d 	mvnscs	r0, #29
 8013a28:	6003      	str	r3, [r0, #0]
 8013a2a:	2300      	movs	r3, #0
 8013a2c:	2201      	movs	r2, #1
 8013a2e:	60c3      	str	r3, [r0, #12]
 8013a30:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013a34:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8013a38:	611a      	str	r2, [r3, #16]
 8013a3a:	6880      	ldr	r0, [r0, #8]
 8013a3c:	b1d8      	cbz	r0, 8013a76 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8013a3e:	6803      	ldr	r3, [r0, #0]
 8013a40:	689b      	ldr	r3, [r3, #8]
 8013a42:	4718      	bx	r3
 8013a44:	2301      	movs	r3, #1
 8013a46:	6003      	str	r3, [r0, #0]
 8013a48:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8013a4c:	60c3      	str	r3, [r0, #12]
 8013a4e:	e7f4      	b.n	8013a3a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8013a50:	2303      	movs	r3, #3
 8013a52:	6003      	str	r3, [r0, #0]
 8013a54:	f240 134d 	movw	r3, #333	; 0x14d
 8013a58:	e7f8      	b.n	8013a4c <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8013a5a:	2305      	movs	r3, #5
 8013a5c:	6003      	str	r3, [r0, #0]
 8013a5e:	23c8      	movs	r3, #200	; 0xc8
 8013a60:	e7f4      	b.n	8013a4c <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8013a62:	2300      	movs	r3, #0
 8013a64:	2201      	movs	r2, #1
 8013a66:	6003      	str	r3, [r0, #0]
 8013a68:	60c3      	str	r3, [r0, #12]
 8013a6a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013a6e:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8013a72:	615a      	str	r2, [r3, #20]
 8013a74:	e7e1      	b.n	8013a3a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8013a76:	4770      	bx	lr

08013a78 <Hardware::Hardware()>:
 8013a78:	b570      	push	{r4, r5, r6, lr}
 8013a7a:	2400      	movs	r4, #0
 8013a7c:	4b24      	ldr	r3, [pc, #144]	; (8013b10 <Hardware::Hardware()+0x98>)
 8013a7e:	b090      	sub	sp, #64	; 0x40
 8013a80:	7004      	strb	r4, [r0, #0]
 8013a82:	6018      	str	r0, [r3, #0]
 8013a84:	4605      	mov	r5, r0
 8013a86:	f7f3 fd67 	bl	8007558 <console_init>
 8013a8a:	f000 facb 	bl	8014024 <systick_config>
 8013a8e:	f001 fcff 	bl	8015490 <udelay_init()>
 8013a92:	f001 fcaf 	bl	80153f4 <micros_init()>
 8013a96:	f240 701b 	movw	r0, #1819	; 0x71b
 8013a9a:	f000 fd21 	bl	80144e0 <rcu_periph_clock_enable>
 8013a9e:	f240 701c 	movw	r0, #1820	; 0x71c
 8013aa2:	f000 fd1d 	bl	80144e0 <rcu_periph_clock_enable>
 8013aa6:	4e1b      	ldr	r6, [pc, #108]	; (8013b14 <Hardware::Hardware()+0x9c>)
 8013aa8:	f000 fd12 	bl	80144d0 <pmu_backup_write_enable>
 8013aac:	4621      	mov	r1, r4
 8013aae:	2002      	movs	r0, #2
 8013ab0:	f000 fb5c 	bl	801416c <bkp_data_write>
 8013ab4:	f240 7004 	movw	r0, #1796	; 0x704
 8013ab8:	f000 fd12 	bl	80144e0 <rcu_periph_clock_enable>
 8013abc:	4630      	mov	r0, r6
 8013abe:	f000 fe73 	bl	80147a8 <timer_deinit>
 8013ac2:	2377      	movs	r3, #119	; 0x77
 8013ac4:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013ac8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013acc:	a903      	add	r1, sp, #12
 8013ace:	4630      	mov	r0, r6
 8013ad0:	9305      	str	r3, [sp, #20]
 8013ad2:	f000 ff0f 	bl	80148f4 <timer_init>
 8013ad6:	4630      	mov	r0, r6
 8013ad8:	f000 ff64 	bl	80149a4 <timer_enable>
 8013adc:	f001 f9cc 	bl	8014e78 <gd32_adc_init()>
 8013ae0:	220a      	movs	r2, #10
 8013ae2:	2309      	movs	r3, #9
 8013ae4:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8013ae8:	237a      	movs	r3, #122	; 0x7a
 8013aea:	a807      	add	r0, sp, #28
 8013aec:	930c      	str	r3, [sp, #48]	; 0x30
 8013aee:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8013af2:	9407      	str	r4, [sp, #28]
 8013af4:	940f      	str	r4, [sp, #60]	; 0x3c
 8013af6:	f000 f9bb 	bl	8013e70 <mktime>
 8013afa:	4621      	mov	r1, r4
 8013afc:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8013b00:	a801      	add	r0, sp, #4
 8013b02:	f000 fa2b 	bl	8013f5c <settimeofday>
 8013b06:	f001 fa11 	bl	8014f2c <gd32_i2c_begin>
 8013b0a:	4628      	mov	r0, r5
 8013b0c:	b010      	add	sp, #64	; 0x40
 8013b0e:	bd70      	pop	{r4, r5, r6, pc}
 8013b10:	2001d97c 	andcs	sp, r1, ip, ror r9
 8013b14:	40001000 	andmi	r1, r0, r0

08013b18 <Hardware::GetUuid(unsigned char*)>:
 8013b18:	4a0c      	ldr	r2, [pc, #48]	; (8013b4c <Hardware::GetUuid(unsigned char*)+0x34>)
 8013b1a:	b084      	sub	sp, #16
 8013b1c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8013b20:	9300      	str	r3, [sp, #0]
 8013b22:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8013b26:	9001      	str	r0, [sp, #4]
 8013b28:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8013b2c:	4403      	add	r3, r0
 8013b2e:	4413      	add	r3, r2
 8013b30:	9202      	str	r2, [sp, #8]
 8013b32:	466a      	mov	r2, sp
 8013b34:	9303      	str	r3, [sp, #12]
 8013b36:	1e4b      	subs	r3, r1, #1
 8013b38:	310f      	adds	r1, #15
 8013b3a:	428b      	cmp	r3, r1
 8013b3c:	d101      	bne.n	8013b42 <Hardware::GetUuid(unsigned char*)+0x2a>
 8013b3e:	b004      	add	sp, #16
 8013b40:	4770      	bx	lr
 8013b42:	f812 0b01 	ldrb.w	r0, [r2], #1
 8013b46:	f803 0f01 	strb.w	r0, [r3, #1]!
 8013b4a:	e7f6      	b.n	8013b3a <Hardware::GetUuid(unsigned char*)+0x22>
 8013b4c:	1ffff000 	svcne	0x00fff000

08013b50 <Hardware::Reboot()>:
 8013b50:	b508      	push	{r3, lr}
 8013b52:	2300      	movs	r3, #0
 8013b54:	4604      	mov	r4, r0
 8013b56:	7003      	strb	r3, [r0, #0]
 8013b58:	2104      	movs	r1, #4
 8013b5a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8013b5e:	f000 fbfd 	bl	801435c <fwdgt_config>
 8013b62:	4620      	mov	r0, r4
 8013b64:	f7f4 ff46 	bl	80089f4 <Hardware::RebootHandler()>
 8013b68:	2102      	movs	r1, #2
 8013b6a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8013b6e:	f000 fbf5 	bl	801435c <fwdgt_config>
 8013b72:	2801      	cmp	r0, #1
 8013b74:	bf0c      	ite	eq
 8013b76:	2301      	moveq	r3, #1
 8013b78:	2300      	movne	r3, #0
 8013b7a:	7023      	strb	r3, [r4, #0]
 8013b7c:	d101      	bne.n	8013b82 <Hardware::Reboot()+0x32>
 8013b7e:	f000 fbdd 	bl	801433c <fwdgt_enable>
 8013b82:	2208      	movs	r2, #8
 8013b84:	4b0d      	ldr	r3, [pc, #52]	; (8013bbc <Hardware::Reboot()+0x6c>)
 8013b86:	2501      	movs	r5, #1
 8013b88:	681b      	ldr	r3, [r3, #0]
 8013b8a:	480d      	ldr	r0, [pc, #52]	; (8013bc0 <Hardware::Reboot()+0x70>)
 8013b8c:	601a      	str	r2, [r3, #0]
 8013b8e:	227d      	movs	r2, #125	; 0x7d
 8013b90:	490c      	ldr	r1, [pc, #48]	; (8013bc4 <Hardware::Reboot()+0x74>)
 8013b92:	60da      	str	r2, [r3, #12]
 8013b94:	68dc      	ldr	r4, [r3, #12]
 8013b96:	b904      	cbnz	r4, 8013b9a <Hardware::Reboot()+0x4a>
 8013b98:	e7fe      	b.n	8013b98 <Hardware::Reboot()+0x48>
 8013b9a:	6802      	ldr	r2, [r0, #0]
 8013b9c:	695e      	ldr	r6, [r3, #20]
 8013b9e:	1b92      	subs	r2, r2, r6
 8013ba0:	4294      	cmp	r4, r2
 8013ba2:	d8f8      	bhi.n	8013b96 <Hardware::Reboot()+0x46>
 8013ba4:	6802      	ldr	r2, [r0, #0]
 8013ba6:	615a      	str	r2, [r3, #20]
 8013ba8:	691a      	ldr	r2, [r3, #16]
 8013baa:	2a01      	cmp	r2, #1
 8013bac:	f082 0401 	eor.w	r4, r2, #1
 8013bb0:	611c      	str	r4, [r3, #16]
 8013bb2:	bf14      	ite	ne
 8013bb4:	610d      	strne	r5, [r1, #16]
 8013bb6:	614a      	streq	r2, [r1, #20]
 8013bb8:	e7ec      	b.n	8013b94 <Hardware::Reboot()+0x44>
 8013bba:	bf00      	nop
 8013bbc:	2001d978 	andcs	sp, r1, r8, ror r9
 8013bc0:	2001d994 	mulcs	r1, r4, r9
 8013bc4:	40011000 	andmi	r1, r1, r0

08013bc8 <operator delete(void*)>:
 8013bc8:	f000 b890 	b.w	8013cec <free>

08013bcc <operator delete[](void*)>:
 8013bcc:	f000 b88e 	b.w	8013cec <free>

08013bd0 <operator new(unsigned int)>:
 8013bd0:	f000 b842 	b.w	8013c58 <malloc>

08013bd4 <operator new[](unsigned int)>:
 8013bd4:	f000 b840 	b.w	8013c58 <malloc>

08013bd8 <inet_aton>:
 8013bd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013bda:	f04f 0c0a 	mov.w	ip, #10
 8013bde:	2500      	movs	r5, #0
 8013be0:	ae01      	add	r6, sp, #4
 8013be2:	4603      	mov	r3, r0
 8013be4:	2200      	movs	r2, #0
 8013be6:	1d07      	adds	r7, r0, #4
 8013be8:	e007      	b.n	8013bfa <inet_aton+0x22>
 8013bea:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013bee:	2b09      	cmp	r3, #9
 8013bf0:	d820      	bhi.n	8013c34 <inet_aton+0x5c>
 8013bf2:	4603      	mov	r3, r0
 8013bf4:	fb0c 4202 	mla	r2, ip, r2, r4
 8013bf8:	3a30      	subs	r2, #48	; 0x30
 8013bfa:	4618      	mov	r0, r3
 8013bfc:	f810 4b01 	ldrb.w	r4, [r0], #1
 8013c00:	2c2e      	cmp	r4, #46	; 0x2e
 8013c02:	d111      	bne.n	8013c28 <inet_aton+0x50>
 8013c04:	3501      	adds	r5, #1
 8013c06:	2d03      	cmp	r5, #3
 8013c08:	f806 2b01 	strb.w	r2, [r6], #1
 8013c0c:	d1e9      	bne.n	8013be2 <inet_aton+0xa>
 8013c0e:	2200      	movs	r2, #0
 8013c10:	250a      	movs	r5, #10
 8013c12:	1d1c      	adds	r4, r3, #4
 8013c14:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013c18:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8013c1c:	d10d      	bne.n	8013c3a <inet_aton+0x62>
 8013c1e:	f88d 2007 	strb.w	r2, [sp, #7]
 8013c22:	b9b1      	cbnz	r1, 8013c52 <inet_aton+0x7a>
 8013c24:	2001      	movs	r0, #1
 8013c26:	e006      	b.n	8013c36 <inet_aton+0x5e>
 8013c28:	2c00      	cmp	r4, #0
 8013c2a:	d0eb      	beq.n	8013c04 <inet_aton+0x2c>
 8013c2c:	2c0a      	cmp	r4, #10
 8013c2e:	d0e9      	beq.n	8013c04 <inet_aton+0x2c>
 8013c30:	42b8      	cmp	r0, r7
 8013c32:	d1da      	bne.n	8013bea <inet_aton+0x12>
 8013c34:	2000      	movs	r0, #0
 8013c36:	b003      	add	sp, #12
 8013c38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c3a:	280a      	cmp	r0, #10
 8013c3c:	d0ef      	beq.n	8013c1e <inet_aton+0x46>
 8013c3e:	42a3      	cmp	r3, r4
 8013c40:	d0f8      	beq.n	8013c34 <inet_aton+0x5c>
 8013c42:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8013c46:	2e09      	cmp	r6, #9
 8013c48:	d8f4      	bhi.n	8013c34 <inet_aton+0x5c>
 8013c4a:	fb05 0202 	mla	r2, r5, r2, r0
 8013c4e:	3a30      	subs	r2, #48	; 0x30
 8013c50:	e7e0      	b.n	8013c14 <inet_aton+0x3c>
 8013c52:	9b01      	ldr	r3, [sp, #4]
 8013c54:	600b      	str	r3, [r1, #0]
 8013c56:	e7e5      	b.n	8013c24 <inet_aton+0x4c>

08013c58 <malloc>:
 8013c58:	b538      	push	{r3, r4, r5, lr}
 8013c5a:	4604      	mov	r4, r0
 8013c5c:	4601      	mov	r1, r0
 8013c5e:	481c      	ldr	r0, [pc, #112]	; (8013cd0 <malloc+0x78>)
 8013c60:	f7f5 fcd6 	bl	8009610 <printf>
 8013c64:	b17c      	cbz	r4, 8013c86 <malloc+0x2e>
 8013c66:	4b1b      	ldr	r3, [pc, #108]	; (8013cd4 <malloc+0x7c>)
 8013c68:	6818      	ldr	r0, [r3, #0]
 8013c6a:	b978      	cbnz	r0, 8013c8c <malloc+0x34>
 8013c6c:	4a1a      	ldr	r2, [pc, #104]	; (8013cd8 <malloc+0x80>)
 8013c6e:	f104 031b 	add.w	r3, r4, #27
 8013c72:	6811      	ldr	r1, [r2, #0]
 8013c74:	4819      	ldr	r0, [pc, #100]	; (8013cdc <malloc+0x84>)
 8013c76:	f023 030f 	bic.w	r3, r3, #15
 8013c7a:	440b      	add	r3, r1
 8013c7c:	4283      	cmp	r3, r0
 8013c7e:	d921      	bls.n	8013cc4 <malloc+0x6c>
 8013c80:	4817      	ldr	r0, [pc, #92]	; (8013ce0 <malloc+0x88>)
 8013c82:	f7f5 fcc5 	bl	8009610 <printf>
 8013c86:	2500      	movs	r5, #0
 8013c88:	4628      	mov	r0, r5
 8013c8a:	bd38      	pop	{r3, r4, r5, pc}
 8013c8c:	4284      	cmp	r4, r0
 8013c8e:	d80a      	bhi.n	8013ca6 <malloc+0x4e>
 8013c90:	685a      	ldr	r2, [r3, #4]
 8013c92:	6899      	ldr	r1, [r3, #8]
 8013c94:	3201      	adds	r2, #1
 8013c96:	428a      	cmp	r2, r1
 8013c98:	605a      	str	r2, [r3, #4]
 8013c9a:	d900      	bls.n	8013c9e <malloc+0x46>
 8013c9c:	609a      	str	r2, [r3, #8]
 8013c9e:	68d9      	ldr	r1, [r3, #12]
 8013ca0:	b919      	cbnz	r1, 8013caa <malloc+0x52>
 8013ca2:	4604      	mov	r4, r0
 8013ca4:	e7e2      	b.n	8013c6c <malloc+0x14>
 8013ca6:	3310      	adds	r3, #16
 8013ca8:	e7de      	b.n	8013c68 <malloc+0x10>
 8013caa:	4604      	mov	r4, r0
 8013cac:	688a      	ldr	r2, [r1, #8]
 8013cae:	60da      	str	r2, [r3, #12]
 8013cb0:	2300      	movs	r3, #0
 8013cb2:	f101 050c 	add.w	r5, r1, #12
 8013cb6:	608b      	str	r3, [r1, #8]
 8013cb8:	4622      	mov	r2, r4
 8013cba:	462b      	mov	r3, r5
 8013cbc:	4809      	ldr	r0, [pc, #36]	; (8013ce4 <malloc+0x8c>)
 8013cbe:	f7f5 fca7 	bl	8009610 <printf>
 8013cc2:	e7e1      	b.n	8013c88 <malloc+0x30>
 8013cc4:	6013      	str	r3, [r2, #0]
 8013cc6:	4b08      	ldr	r3, [pc, #32]	; (8013ce8 <malloc+0x90>)
 8013cc8:	e9c1 3400 	strd	r3, r4, [r1]
 8013ccc:	e7f0      	b.n	8013cb0 <malloc+0x58>
 8013cce:	bf00      	nop
 8013cd0:	08019130 	stmdaeq	r1, {r4, r5, r8, ip, pc}
 8013cd4:	20000014 	andcs	r0, r0, r4, lsl r0
 8013cd8:	20000010 	andcs	r0, r0, r0, lsl r0
 8013cdc:	2003d800 	andcs	sp, r3, r0, lsl #16
 8013ce0:	0801913c 	stmdaeq	r1, {r2, r3, r4, r5, r8, ip, pc}
 8013ce4:	08019158 	stmdaeq	r1, {r3, r4, r6, r8, ip, pc}
 8013ce8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08013cec <free>:
 8013cec:	b538      	push	{r3, r4, r5, lr}
 8013cee:	4604      	mov	r4, r0
 8013cf0:	b1c8      	cbz	r0, 8013d26 <free+0x3a>
 8013cf2:	f1a0 050c 	sub.w	r5, r0, #12
 8013cf6:	4602      	mov	r2, r0
 8013cf8:	4629      	mov	r1, r5
 8013cfa:	480c      	ldr	r0, [pc, #48]	; (8013d2c <free+0x40>)
 8013cfc:	f7f5 fc88 	bl	8009610 <printf>
 8013d00:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8013d04:	4b0a      	ldr	r3, [pc, #40]	; (8013d30 <free+0x44>)
 8013d06:	429a      	cmp	r2, r3
 8013d08:	d10d      	bne.n	8013d26 <free+0x3a>
 8013d0a:	4b0a      	ldr	r3, [pc, #40]	; (8013d34 <free+0x48>)
 8013d0c:	681a      	ldr	r2, [r3, #0]
 8013d0e:	b152      	cbz	r2, 8013d26 <free+0x3a>
 8013d10:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8013d14:	4291      	cmp	r1, r2
 8013d16:	d107      	bne.n	8013d28 <free+0x3c>
 8013d18:	68da      	ldr	r2, [r3, #12]
 8013d1a:	f844 2c04 	str.w	r2, [r4, #-4]
 8013d1e:	685a      	ldr	r2, [r3, #4]
 8013d20:	60dd      	str	r5, [r3, #12]
 8013d22:	3a01      	subs	r2, #1
 8013d24:	605a      	str	r2, [r3, #4]
 8013d26:	bd38      	pop	{r3, r4, r5, pc}
 8013d28:	3310      	adds	r3, #16
 8013d2a:	e7ef      	b.n	8013d0c <free+0x20>
 8013d2c:	08019183 	stmdaeq	r1, {r0, r1, r7, r8, ip, pc}
 8013d30:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8013d34:	20000014 	andcs	r0, r0, r4, lsl r0

08013d38 <memcpy>:
 8013d38:	b510      	push	{r4, lr}
 8013d3a:	1e43      	subs	r3, r0, #1
 8013d3c:	440a      	add	r2, r1
 8013d3e:	4291      	cmp	r1, r2
 8013d40:	d100      	bne.n	8013d44 <memcpy+0xc>
 8013d42:	bd10      	pop	{r4, pc}
 8013d44:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013d48:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013d4c:	e7f7      	b.n	8013d3e <memcpy+0x6>

08013d4e <memmove>:
 8013d4e:	4288      	cmp	r0, r1
 8013d50:	b510      	push	{r4, lr}
 8013d52:	eb01 0302 	add.w	r3, r1, r2
 8013d56:	d208      	bcs.n	8013d6a <memmove+0x1c>
 8013d58:	1e42      	subs	r2, r0, #1
 8013d5a:	4299      	cmp	r1, r3
 8013d5c:	d100      	bne.n	8013d60 <memmove+0x12>
 8013d5e:	bd10      	pop	{r4, pc}
 8013d60:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013d64:	f802 4f01 	strb.w	r4, [r2, #1]!
 8013d68:	e7f7      	b.n	8013d5a <memmove+0xc>
 8013d6a:	4601      	mov	r1, r0
 8013d6c:	4402      	add	r2, r0
 8013d6e:	428a      	cmp	r2, r1
 8013d70:	d0f5      	beq.n	8013d5e <memmove+0x10>
 8013d72:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8013d76:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8013d7a:	e7f8      	b.n	8013d6e <memmove+0x20>

08013d7c <memset>:
 8013d7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013d7e:	b1c2      	cbz	r2, 8013db2 <memset+0x36>
 8013d80:	4603      	mov	r3, r0
 8013d82:	b2c9      	uxtb	r1, r1
 8013d84:	075c      	lsls	r4, r3, #29
 8013d86:	d110      	bne.n	8013daa <memset+0x2e>
 8013d88:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8013d8c:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8013d90:	463d      	mov	r5, r7
 8013d92:	461e      	mov	r6, r3
 8013d94:	f022 0407 	bic.w	r4, r2, #7
 8013d98:	441c      	add	r4, r3
 8013d9a:	42a6      	cmp	r6, r4
 8013d9c:	d10a      	bne.n	8013db4 <memset+0x38>
 8013d9e:	4413      	add	r3, r2
 8013da0:	429c      	cmp	r4, r3
 8013da2:	d006      	beq.n	8013db2 <memset+0x36>
 8013da4:	f804 1b01 	strb.w	r1, [r4], #1
 8013da8:	e7fa      	b.n	8013da0 <memset+0x24>
 8013daa:	3a01      	subs	r2, #1
 8013dac:	f803 1b01 	strb.w	r1, [r3], #1
 8013db0:	d1e8      	bne.n	8013d84 <memset+0x8>
 8013db2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013db4:	f846 7b08 	str.w	r7, [r6], #8
 8013db8:	f846 5c04 	str.w	r5, [r6, #-4]
 8013dbc:	e7ed      	b.n	8013d9a <memset+0x1e>

08013dbe <puts>:
 8013dbe:	b508      	push	{r3, lr}
 8013dc0:	f7ff fd70 	bl	80138a4 <console_puts>
 8013dc4:	200a      	movs	r0, #10
 8013dc6:	f7ff fd6b 	bl	80138a0 <console_putc>
 8013dca:	2001      	movs	r0, #1
 8013dcc:	bd08      	pop	{r3, pc}
	...

08013dd0 <strtok>:
 8013dd0:	b530      	push	{r4, r5, lr}
 8013dd2:	b910      	cbnz	r0, 8013dda <strtok+0xa>
 8013dd4:	4b12      	ldr	r3, [pc, #72]	; (8013e20 <strtok+0x50>)
 8013dd6:	6818      	ldr	r0, [r3, #0]
 8013dd8:	b158      	cbz	r0, 8013df2 <strtok+0x22>
 8013dda:	4603      	mov	r3, r0
 8013ddc:	460d      	mov	r5, r1
 8013dde:	4618      	mov	r0, r3
 8013de0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013de4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013de8:	b924      	cbnz	r4, 8013df4 <strtok+0x24>
 8013dea:	b94a      	cbnz	r2, 8013e00 <strtok+0x30>
 8013dec:	4610      	mov	r0, r2
 8013dee:	4b0c      	ldr	r3, [pc, #48]	; (8013e20 <strtok+0x50>)
 8013df0:	601a      	str	r2, [r3, #0]
 8013df2:	bd30      	pop	{r4, r5, pc}
 8013df4:	42a2      	cmp	r2, r4
 8013df6:	d1f5      	bne.n	8013de4 <strtok+0x14>
 8013df8:	e7f0      	b.n	8013ddc <strtok+0xc>
 8013dfa:	4613      	mov	r3, r2
 8013dfc:	e00c      	b.n	8013e18 <strtok+0x48>
 8013dfe:	b914      	cbnz	r4, 8013e06 <strtok+0x36>
 8013e00:	460d      	mov	r5, r1
 8013e02:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013e06:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013e0a:	42a2      	cmp	r2, r4
 8013e0c:	d1f7      	bne.n	8013dfe <strtok+0x2e>
 8013e0e:	2a00      	cmp	r2, #0
 8013e10:	d0f3      	beq.n	8013dfa <strtok+0x2a>
 8013e12:	2200      	movs	r2, #0
 8013e14:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013e18:	4a01      	ldr	r2, [pc, #4]	; (8013e20 <strtok+0x50>)
 8013e1a:	6013      	str	r3, [r2, #0]
 8013e1c:	e7e9      	b.n	8013df2 <strtok+0x22>
 8013e1e:	bf00      	nop
 8013e20:	2001d980 	andcs	sp, r1, r0, lsl #19

08013e24 <isleapyear>:
 8013e24:	2264      	movs	r2, #100	; 0x64
 8013e26:	fb90 f3f2 	sdiv	r3, r0, r2
 8013e2a:	fb02 0313 	mls	r3, r2, r3, r0
 8013e2e:	b94b      	cbnz	r3, 8013e44 <isleapyear+0x20>
 8013e30:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8013e34:	fb90 f2f3 	sdiv	r2, r0, r3
 8013e38:	fb03 0012 	mls	r0, r3, r2, r0
 8013e3c:	fab0 f080 	clz	r0, r0
 8013e40:	0940      	lsrs	r0, r0, #5
 8013e42:	4770      	bx	lr
 8013e44:	f010 0f03 	tst.w	r0, #3
 8013e48:	bf0c      	ite	eq
 8013e4a:	2001      	moveq	r0, #1
 8013e4c:	2000      	movne	r0, #0
 8013e4e:	4770      	bx	lr

08013e50 <getdaysofmonth>:
 8013e50:	b510      	push	{r4, lr}
 8013e52:	4604      	mov	r4, r0
 8013e54:	2c01      	cmp	r4, #1
 8013e56:	4608      	mov	r0, r1
 8013e58:	d102      	bne.n	8013e60 <getdaysofmonth+0x10>
 8013e5a:	f7ff ffe3 	bl	8013e24 <isleapyear>
 8013e5e:	b918      	cbnz	r0, 8013e68 <getdaysofmonth+0x18>
 8013e60:	4b02      	ldr	r3, [pc, #8]	; (8013e6c <getdaysofmonth+0x1c>)
 8013e62:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8013e66:	bd10      	pop	{r4, pc}
 8013e68:	201d      	movs	r0, #29
 8013e6a:	e7fc      	b.n	8013e66 <getdaysofmonth+0x16>
 8013e6c:	080191ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, ip, pc}

08013e70 <mktime>:
 8013e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e74:	4604      	mov	r4, r0
 8013e76:	2800      	cmp	r0, #0
 8013e78:	d043      	beq.n	8013f02 <mktime+0x92>
 8013e7a:	6941      	ldr	r1, [r0, #20]
 8013e7c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8013e80:	2b45      	cmp	r3, #69	; 0x45
 8013e82:	d83e      	bhi.n	8013f02 <mktime+0x92>
 8013e84:	2600      	movs	r6, #0
 8013e86:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8013e8a:	f240 186d 	movw	r8, #365	; 0x16d
 8013e8e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8013e92:	42af      	cmp	r7, r5
 8013e94:	da24      	bge.n	8013ee0 <mktime+0x70>
 8013e96:	6927      	ldr	r7, [r4, #16]
 8013e98:	2f0b      	cmp	r7, #11
 8013e9a:	d832      	bhi.n	8013f02 <mktime+0x92>
 8013e9c:	2500      	movs	r5, #0
 8013e9e:	42af      	cmp	r7, r5
 8013ea0:	d129      	bne.n	8013ef6 <mktime+0x86>
 8013ea2:	68e5      	ldr	r5, [r4, #12]
 8013ea4:	2d00      	cmp	r5, #0
 8013ea6:	dd2c      	ble.n	8013f02 <mktime+0x92>
 8013ea8:	4638      	mov	r0, r7
 8013eaa:	f7ff ffd1 	bl	8013e50 <getdaysofmonth>
 8013eae:	4285      	cmp	r5, r0
 8013eb0:	dc27      	bgt.n	8013f02 <mktime+0x92>
 8013eb2:	2318      	movs	r3, #24
 8013eb4:	3d01      	subs	r5, #1
 8013eb6:	4435      	add	r5, r6
 8013eb8:	435d      	muls	r5, r3
 8013eba:	68a3      	ldr	r3, [r4, #8]
 8013ebc:	2b17      	cmp	r3, #23
 8013ebe:	d820      	bhi.n	8013f02 <mktime+0x92>
 8013ec0:	213c      	movs	r1, #60	; 0x3c
 8013ec2:	442b      	add	r3, r5
 8013ec4:	fb01 f203 	mul.w	r2, r1, r3
 8013ec8:	6863      	ldr	r3, [r4, #4]
 8013eca:	2b3b      	cmp	r3, #59	; 0x3b
 8013ecc:	d819      	bhi.n	8013f02 <mktime+0x92>
 8013ece:	6820      	ldr	r0, [r4, #0]
 8013ed0:	4413      	add	r3, r2
 8013ed2:	283b      	cmp	r0, #59	; 0x3b
 8013ed4:	fb01 f303 	mul.w	r3, r1, r3
 8013ed8:	d813      	bhi.n	8013f02 <mktime+0x92>
 8013eda:	4418      	add	r0, r3
 8013edc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ee0:	4628      	mov	r0, r5
 8013ee2:	f7ff ff9f 	bl	8013e24 <isleapyear>
 8013ee6:	2800      	cmp	r0, #0
 8013ee8:	bf14      	ite	ne
 8013eea:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8013eee:	4643      	moveq	r3, r8
 8013ef0:	3501      	adds	r5, #1
 8013ef2:	441e      	add	r6, r3
 8013ef4:	e7cd      	b.n	8013e92 <mktime+0x22>
 8013ef6:	4628      	mov	r0, r5
 8013ef8:	f7ff ffaa 	bl	8013e50 <getdaysofmonth>
 8013efc:	3501      	adds	r5, #1
 8013efe:	4406      	add	r6, r0
 8013f00:	e7cd      	b.n	8013e9e <mktime+0x2e>
 8013f02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013f06:	e7e9      	b.n	8013edc <mktime+0x6c>

08013f08 <gettimeofday>:
 8013f08:	b538      	push	{r3, r4, r5, lr}
 8013f0a:	4b10      	ldr	r3, [pc, #64]	; (8013f4c <gettimeofday+0x44>)
 8013f0c:	4a10      	ldr	r2, [pc, #64]	; (8013f50 <gettimeofday+0x48>)
 8013f0e:	681b      	ldr	r3, [r3, #0]
 8013f10:	6814      	ldr	r4, [r2, #0]
 8013f12:	6013      	str	r3, [r2, #0]
 8013f14:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013f18:	429c      	cmp	r4, r3
 8013f1a:	bf2c      	ite	cs
 8013f1c:	1ae4      	subcs	r4, r4, r3
 8013f1e:	1b1c      	subcc	r4, r3, r4
 8013f20:	4354      	muls	r4, r2
 8013f22:	4b0c      	ldr	r3, [pc, #48]	; (8013f54 <gettimeofday+0x4c>)
 8013f24:	4605      	mov	r5, r0
 8013f26:	e9d3 2100 	ldrd	r2, r1, [r3]
 8013f2a:	18a4      	adds	r4, r4, r2
 8013f2c:	f141 0100 	adc.w	r1, r1, #0
 8013f30:	e9c3 4100 	strd	r4, r1, [r3]
 8013f34:	4620      	mov	r0, r4
 8013f36:	2300      	movs	r3, #0
 8013f38:	4a07      	ldr	r2, [pc, #28]	; (8013f58 <gettimeofday+0x50>)
 8013f3a:	f7f3 fff9 	bl	8007f30 <__aeabi_uldivmod>
 8013f3e:	4b06      	ldr	r3, [pc, #24]	; (8013f58 <gettimeofday+0x50>)
 8013f40:	6028      	str	r0, [r5, #0]
 8013f42:	fb03 4410 	mls	r4, r3, r0, r4
 8013f46:	2000      	movs	r0, #0
 8013f48:	606c      	str	r4, [r5, #4]
 8013f4a:	bd38      	pop	{r3, r4, r5, pc}
 8013f4c:	2001d994 	mulcs	r1, r4, r9
 8013f50:	2001d990 	mulcs	r1, r0, r9
 8013f54:	2001d988 	andcs	sp, r1, r8, lsl #19
 8013f58:	000f4240 	andeq	r4, pc, r0, asr #4

08013f5c <settimeofday>:
 8013f5c:	4b07      	ldr	r3, [pc, #28]	; (8013f7c <settimeofday+0x20>)
 8013f5e:	b510      	push	{r4, lr}
 8013f60:	681a      	ldr	r2, [r3, #0]
 8013f62:	4b07      	ldr	r3, [pc, #28]	; (8013f80 <settimeofday+0x24>)
 8013f64:	6804      	ldr	r4, [r0, #0]
 8013f66:	601a      	str	r2, [r3, #0]
 8013f68:	6843      	ldr	r3, [r0, #4]
 8013f6a:	4806      	ldr	r0, [pc, #24]	; (8013f84 <settimeofday+0x28>)
 8013f6c:	17da      	asrs	r2, r3, #31
 8013f6e:	fbc4 3200 	smlal	r3, r2, r4, r0
 8013f72:	4905      	ldr	r1, [pc, #20]	; (8013f88 <settimeofday+0x2c>)
 8013f74:	2000      	movs	r0, #0
 8013f76:	e9c1 3200 	strd	r3, r2, [r1]
 8013f7a:	bd10      	pop	{r4, pc}
 8013f7c:	2001d994 	mulcs	r1, r4, r9
 8013f80:	2001d990 	mulcs	r1, r0, r9
 8013f84:	000f4240 	andeq	r4, pc, r0, asr #4
 8013f88:	2001d988 	andcs	sp, r1, r8, lsl #19

08013f8c <time>:
 8013f8c:	b513      	push	{r0, r1, r4, lr}
 8013f8e:	4604      	mov	r4, r0
 8013f90:	2100      	movs	r1, #0
 8013f92:	4668      	mov	r0, sp
 8013f94:	f7ff ffb8 	bl	8013f08 <gettimeofday>
 8013f98:	9800      	ldr	r0, [sp, #0]
 8013f9a:	b104      	cbz	r4, 8013f9e <time+0x12>
 8013f9c:	6020      	str	r0, [r4, #0]
 8013f9e:	b002      	add	sp, #8
 8013fa0:	bd10      	pop	{r4, pc}
	...

08013fa4 <uart0_init>:
 8013fa4:	2301      	movs	r3, #1
 8013fa6:	b507      	push	{r0, r1, r2, lr}
 8013fa8:	2208      	movs	r2, #8
 8013faa:	9300      	str	r3, [sp, #0]
 8013fac:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8013fb0:	2300      	movs	r3, #0
 8013fb2:	4803      	ldr	r0, [pc, #12]	; (8013fc0 <uart0_init+0x1c>)
 8013fb4:	f001 f906 	bl	80151c4 <gd32_uart_begin>
 8013fb8:	b003      	add	sp, #12
 8013fba:	f85d fb04 	ldr.w	pc, [sp], #4
 8013fbe:	bf00      	nop
 8013fc0:	40013800 	andmi	r3, r1, r0, lsl #16

08013fc4 <uart0_putc>:
 8013fc4:	280a      	cmp	r0, #10
 8013fc6:	b538      	push	{r3, r4, r5, lr}
 8013fc8:	4604      	mov	r4, r0
 8013fca:	d10a      	bne.n	8013fe2 <uart0_putc+0x1e>
 8013fcc:	4d0b      	ldr	r5, [pc, #44]	; (8013ffc <uart0_putc+0x38>)
 8013fce:	2107      	movs	r1, #7
 8013fd0:	4628      	mov	r0, r5
 8013fd2:	f000 ff2b 	bl	8014e2c <usart_flag_get>
 8013fd6:	2800      	cmp	r0, #0
 8013fd8:	d0f9      	beq.n	8013fce <uart0_putc+0xa>
 8013fda:	220d      	movs	r2, #13
 8013fdc:	4b08      	ldr	r3, [pc, #32]	; (8014000 <uart0_putc+0x3c>)
 8013fde:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8013fe2:	4d06      	ldr	r5, [pc, #24]	; (8013ffc <uart0_putc+0x38>)
 8013fe4:	2107      	movs	r1, #7
 8013fe6:	4628      	mov	r0, r5
 8013fe8:	f000 ff20 	bl	8014e2c <usart_flag_get>
 8013fec:	2800      	cmp	r0, #0
 8013fee:	d0f9      	beq.n	8013fe4 <uart0_putc+0x20>
 8013ff0:	4b03      	ldr	r3, [pc, #12]	; (8014000 <uart0_putc+0x3c>)
 8013ff2:	b2e4      	uxtb	r4, r4
 8013ff4:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8013ff8:	bd38      	pop	{r3, r4, r5, pc}
 8013ffa:	bf00      	nop
 8013ffc:	40013800 	andmi	r3, r1, r0, lsl #16
 8014000:	40013000 	andmi	r3, r1, r0

08014004 <uart0_puts>:
 8014004:	b510      	push	{r4, lr}
 8014006:	1e44      	subs	r4, r0, #1
 8014008:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801400c:	b903      	cbnz	r3, 8014010 <uart0_puts+0xc>
 801400e:	bd10      	pop	{r4, pc}
 8014010:	2b0a      	cmp	r3, #10
 8014012:	d102      	bne.n	801401a <uart0_puts+0x16>
 8014014:	200d      	movs	r0, #13
 8014016:	f7ff ffd5 	bl	8013fc4 <uart0_putc>
 801401a:	7820      	ldrb	r0, [r4, #0]
 801401c:	f7ff ffd2 	bl	8013fc4 <uart0_putc>
 8014020:	e7f2      	b.n	8014008 <uart0_puts+0x4>
	...

08014024 <systick_config>:
 8014024:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014028:	4b0b      	ldr	r3, [pc, #44]	; (8014058 <systick_config+0x34>)
 801402a:	681b      	ldr	r3, [r3, #0]
 801402c:	fbb3 f3f2 	udiv	r3, r3, r2
 8014030:	3b01      	subs	r3, #1
 8014032:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8014036:	d20d      	bcs.n	8014054 <systick_config+0x30>
 8014038:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 801403c:	21f0      	movs	r1, #240	; 0xf0
 801403e:	6153      	str	r3, [r2, #20]
 8014040:	4b06      	ldr	r3, [pc, #24]	; (801405c <systick_config+0x38>)
 8014042:	2007      	movs	r0, #7
 8014044:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8014048:	2100      	movs	r1, #0
 801404a:	6191      	str	r1, [r2, #24]
 801404c:	6110      	str	r0, [r2, #16]
 801404e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8014052:	4770      	bx	lr
 8014054:	e7fe      	b.n	8014054 <systick_config+0x30>
 8014056:	bf00      	nop
 8014058:	200000e4 	andcs	r0, r0, r4, ror #1
 801405c:	e000ed00 	and	lr, r0, r0, lsl #26

08014060 <SysTick_Handler>:
 8014060:	4a02      	ldr	r2, [pc, #8]	; (801406c <SysTick_Handler+0xc>)
 8014062:	6813      	ldr	r3, [r2, #0]
 8014064:	3301      	adds	r3, #1
 8014066:	6013      	str	r3, [r2, #0]
 8014068:	4770      	bx	lr
 801406a:	bf00      	nop
 801406c:	2001d994 	mulcs	r1, r4, r9

08014070 <SystemInit>:
 8014070:	4b3a      	ldr	r3, [pc, #232]	; (801415c <SystemInit+0xec>)
 8014072:	681a      	ldr	r2, [r3, #0]
 8014074:	f042 0201 	orr.w	r2, r2, #1
 8014078:	601a      	str	r2, [r3, #0]
 801407a:	6859      	ldr	r1, [r3, #4]
 801407c:	4a38      	ldr	r2, [pc, #224]	; (8014160 <SystemInit+0xf0>)
 801407e:	400a      	ands	r2, r1
 8014080:	605a      	str	r2, [r3, #4]
 8014082:	681a      	ldr	r2, [r3, #0]
 8014084:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8014088:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 801408c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8014090:	601a      	str	r2, [r3, #0]
 8014092:	681a      	ldr	r2, [r3, #0]
 8014094:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8014098:	601a      	str	r2, [r3, #0]
 801409a:	685a      	ldr	r2, [r3, #4]
 801409c:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80140a0:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80140a4:	605a      	str	r2, [r3, #4]
 80140a6:	681a      	ldr	r2, [r3, #0]
 80140a8:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 80140ac:	601a      	str	r2, [r3, #0]
 80140ae:	2200      	movs	r2, #0
 80140b0:	62da      	str	r2, [r3, #44]	; 0x2c
 80140b2:	6099      	str	r1, [r3, #8]
 80140b4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80140b8:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 80140bc:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80140c0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80140c4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80140c8:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80140cc:	4a25      	ldr	r2, [pc, #148]	; (8014164 <SystemInit+0xf4>)
 80140ce:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80140d2:	681a      	ldr	r2, [r3, #0]
 80140d4:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80140d8:	601a      	str	r2, [r3, #0]
 80140da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80140de:	6819      	ldr	r1, [r3, #0]
 80140e0:	0389      	lsls	r1, r1, #14
 80140e2:	d401      	bmi.n	80140e8 <SystemInit+0x78>
 80140e4:	3a01      	subs	r2, #1
 80140e6:	d1fa      	bne.n	80140de <SystemInit+0x6e>
 80140e8:	681a      	ldr	r2, [r3, #0]
 80140ea:	0392      	lsls	r2, r2, #14
 80140ec:	d400      	bmi.n	80140f0 <SystemInit+0x80>
 80140ee:	e7fe      	b.n	80140ee <SystemInit+0x7e>
 80140f0:	685a      	ldr	r2, [r3, #4]
 80140f2:	605a      	str	r2, [r3, #4]
 80140f4:	685a      	ldr	r2, [r3, #4]
 80140f6:	605a      	str	r2, [r3, #4]
 80140f8:	685a      	ldr	r2, [r3, #4]
 80140fa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80140fe:	605a      	str	r2, [r3, #4]
 8014100:	685a      	ldr	r2, [r3, #4]
 8014102:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8014106:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 801410a:	605a      	str	r2, [r3, #4]
 801410c:	685a      	ldr	r2, [r3, #4]
 801410e:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8014112:	605a      	str	r2, [r3, #4]
 8014114:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8014116:	4a14      	ldr	r2, [pc, #80]	; (8014168 <SystemInit+0xf8>)
 8014118:	400a      	ands	r2, r1
 801411a:	62da      	str	r2, [r3, #44]	; 0x2c
 801411c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801411e:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8014122:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8014126:	62da      	str	r2, [r3, #44]	; 0x2c
 8014128:	681a      	ldr	r2, [r3, #0]
 801412a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801412e:	601a      	str	r2, [r3, #0]
 8014130:	681a      	ldr	r2, [r3, #0]
 8014132:	0110      	lsls	r0, r2, #4
 8014134:	d5fc      	bpl.n	8014130 <SystemInit+0xc0>
 8014136:	681a      	ldr	r2, [r3, #0]
 8014138:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 801413c:	601a      	str	r2, [r3, #0]
 801413e:	681a      	ldr	r2, [r3, #0]
 8014140:	0191      	lsls	r1, r2, #6
 8014142:	d5fc      	bpl.n	801413e <SystemInit+0xce>
 8014144:	685a      	ldr	r2, [r3, #4]
 8014146:	f022 0203 	bic.w	r2, r2, #3
 801414a:	605a      	str	r2, [r3, #4]
 801414c:	685a      	ldr	r2, [r3, #4]
 801414e:	f042 0202 	orr.w	r2, r2, #2
 8014152:	605a      	str	r2, [r3, #4]
 8014154:	685a      	ldr	r2, [r3, #4]
 8014156:	0712      	lsls	r2, r2, #28
 8014158:	d5fc      	bpl.n	8014154 <SystemInit+0xe4>
 801415a:	4770      	bx	lr
 801415c:	40021000 	andmi	r1, r2, r0
 8014160:	e0ff000c 	rscs	r0, pc, ip
 8014164:	20003010 	andcs	r3, r0, r0, lsl r0
 8014168:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0801416c <bkp_data_write>:
 801416c:	f1a0 030b 	sub.w	r3, r0, #11
 8014170:	2b1f      	cmp	r3, #31
 8014172:	d804      	bhi.n	801417e <bkp_data_write+0x12>
 8014174:	4b07      	ldr	r3, [pc, #28]	; (8014194 <bkp_data_write+0x28>)
 8014176:	4403      	add	r3, r0
 8014178:	009b      	lsls	r3, r3, #2
 801417a:	8019      	strh	r1, [r3, #0]
 801417c:	4770      	bx	lr
 801417e:	1e43      	subs	r3, r0, #1
 8014180:	2b09      	cmp	r3, #9
 8014182:	bf9f      	itttt	ls
 8014184:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8014188:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 801418c:	0080      	lslls	r0, r0, #2
 801418e:	8001      	strhls	r1, [r0, #0]
 8014190:	4770      	bx	lr
 8014192:	bf00      	nop
 8014194:	10001b05 	andne	r1, r0, r5, lsl #22

08014198 <bkp_data_read>:
 8014198:	f1a0 030b 	sub.w	r3, r0, #11
 801419c:	2b1f      	cmp	r3, #31
 801419e:	d805      	bhi.n	80141ac <bkp_data_read+0x14>
 80141a0:	4b08      	ldr	r3, [pc, #32]	; (80141c4 <bkp_data_read+0x2c>)
 80141a2:	4403      	add	r3, r0
 80141a4:	009b      	lsls	r3, r3, #2
 80141a6:	8818      	ldrh	r0, [r3, #0]
 80141a8:	b280      	uxth	r0, r0
 80141aa:	4770      	bx	lr
 80141ac:	1e43      	subs	r3, r0, #1
 80141ae:	2b09      	cmp	r3, #9
 80141b0:	d806      	bhi.n	80141c0 <bkp_data_read+0x28>
 80141b2:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 80141b6:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80141ba:	0080      	lsls	r0, r0, #2
 80141bc:	8800      	ldrh	r0, [r0, #0]
 80141be:	e7f3      	b.n	80141a8 <bkp_data_read+0x10>
 80141c0:	2000      	movs	r0, #0
 80141c2:	4770      	bx	lr
 80141c4:	10001b05 	andne	r1, r0, r5, lsl #22

080141c8 <dma_deinit>:
 80141c8:	2314      	movs	r3, #20
 80141ca:	fb03 0301 	mla	r3, r3, r1, r0
 80141ce:	689a      	ldr	r2, [r3, #8]
 80141d0:	b530      	push	{r4, r5, lr}
 80141d2:	f022 0201 	bic.w	r2, r2, #1
 80141d6:	609a      	str	r2, [r3, #8]
 80141d8:	2200      	movs	r2, #0
 80141da:	609a      	str	r2, [r3, #8]
 80141dc:	60da      	str	r2, [r3, #12]
 80141de:	611a      	str	r2, [r3, #16]
 80141e0:	615a      	str	r2, [r3, #20]
 80141e2:	230f      	movs	r3, #15
 80141e4:	6844      	ldr	r4, [r0, #4]
 80141e6:	008d      	lsls	r5, r1, #2
 80141e8:	40ab      	lsls	r3, r5
 80141ea:	4323      	orrs	r3, r4
 80141ec:	6043      	str	r3, [r0, #4]
 80141ee:	4b04      	ldr	r3, [pc, #16]	; (8014200 <dma_deinit+0x38>)
 80141f0:	4298      	cmp	r0, r3
 80141f2:	d103      	bne.n	80141fc <dma_deinit+0x34>
 80141f4:	2905      	cmp	r1, #5
 80141f6:	bf08      	it	eq
 80141f8:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 80141fc:	bd30      	pop	{r4, r5, pc}
 80141fe:	bf00      	nop
 8014200:	40020400 	andmi	r0, r2, r0, lsl #8

08014204 <dma_struct_para_init>:
 8014204:	2300      	movs	r3, #0
 8014206:	e9c0 3300 	strd	r3, r3, [r0]
 801420a:	e9c0 3302 	strd	r3, r3, [r0, #8]
 801420e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8014212:	8303      	strh	r3, [r0, #24]
 8014214:	7683      	strb	r3, [r0, #26]
 8014216:	4770      	bx	lr

08014218 <dma_init>:
 8014218:	2314      	movs	r3, #20
 801421a:	fb03 0101 	mla	r1, r3, r1, r0
 801421e:	6813      	ldr	r3, [r2, #0]
 8014220:	b510      	push	{r4, lr}
 8014222:	610b      	str	r3, [r1, #16]
 8014224:	6893      	ldr	r3, [r2, #8]
 8014226:	614b      	str	r3, [r1, #20]
 8014228:	8a13      	ldrh	r3, [r2, #16]
 801422a:	60cb      	str	r3, [r1, #12]
 801422c:	68d4      	ldr	r4, [r2, #12]
 801422e:	6853      	ldr	r3, [r2, #4]
 8014230:	6888      	ldr	r0, [r1, #8]
 8014232:	4323      	orrs	r3, r4
 8014234:	6954      	ldr	r4, [r2, #20]
 8014236:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 801423a:	4323      	orrs	r3, r4
 801423c:	4303      	orrs	r3, r0
 801423e:	608b      	str	r3, [r1, #8]
 8014240:	7e13      	ldrb	r3, [r2, #24]
 8014242:	2b01      	cmp	r3, #1
 8014244:	688b      	ldr	r3, [r1, #8]
 8014246:	bf0c      	ite	eq
 8014248:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 801424c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8014250:	608b      	str	r3, [r1, #8]
 8014252:	7e53      	ldrb	r3, [r2, #25]
 8014254:	2b01      	cmp	r3, #1
 8014256:	688b      	ldr	r3, [r1, #8]
 8014258:	bf0c      	ite	eq
 801425a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 801425e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8014262:	608b      	str	r3, [r1, #8]
 8014264:	7e93      	ldrb	r3, [r2, #26]
 8014266:	b923      	cbnz	r3, 8014272 <dma_init+0x5a>
 8014268:	688b      	ldr	r3, [r1, #8]
 801426a:	f023 0310 	bic.w	r3, r3, #16
 801426e:	608b      	str	r3, [r1, #8]
 8014270:	bd10      	pop	{r4, pc}
 8014272:	688b      	ldr	r3, [r1, #8]
 8014274:	f043 0310 	orr.w	r3, r3, #16
 8014278:	e7f9      	b.n	801426e <dma_init+0x56>

0801427a <dma_circulation_disable>:
 801427a:	2314      	movs	r3, #20
 801427c:	4359      	muls	r1, r3
 801427e:	3008      	adds	r0, #8
 8014280:	580b      	ldr	r3, [r1, r0]
 8014282:	f023 0320 	bic.w	r3, r3, #32
 8014286:	500b      	str	r3, [r1, r0]
 8014288:	4770      	bx	lr

0801428a <dma_memory_to_memory_disable>:
 801428a:	2314      	movs	r3, #20
 801428c:	4359      	muls	r1, r3
 801428e:	3008      	adds	r0, #8
 8014290:	580b      	ldr	r3, [r1, r0]
 8014292:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014296:	500b      	str	r3, [r1, r0]
 8014298:	4770      	bx	lr
	...

0801429c <fmc_bank0_unlock>:
 801429c:	4b04      	ldr	r3, [pc, #16]	; (80142b0 <fmc_bank0_unlock+0x14>)
 801429e:	691a      	ldr	r2, [r3, #16]
 80142a0:	0612      	lsls	r2, r2, #24
 80142a2:	bf41      	itttt	mi
 80142a4:	4a03      	ldrmi	r2, [pc, #12]	; (80142b4 <fmc_bank0_unlock+0x18>)
 80142a6:	605a      	strmi	r2, [r3, #4]
 80142a8:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80142ac:	605a      	strmi	r2, [r3, #4]
 80142ae:	4770      	bx	lr
 80142b0:	40022000 	andmi	r2, r2, r0
 80142b4:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080142b8 <fmc_bank1_unlock>:
 80142b8:	4b04      	ldr	r3, [pc, #16]	; (80142cc <fmc_bank1_unlock+0x14>)
 80142ba:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80142bc:	0612      	lsls	r2, r2, #24
 80142be:	bf41      	itttt	mi
 80142c0:	4a03      	ldrmi	r2, [pc, #12]	; (80142d0 <fmc_bank1_unlock+0x18>)
 80142c2:	645a      	strmi	r2, [r3, #68]	; 0x44
 80142c4:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80142c8:	645a      	strmi	r2, [r3, #68]	; 0x44
 80142ca:	4770      	bx	lr
 80142cc:	40022000 	andmi	r2, r2, r0
 80142d0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080142d4 <fmc_bank0_lock>:
 80142d4:	4a02      	ldr	r2, [pc, #8]	; (80142e0 <fmc_bank0_lock+0xc>)
 80142d6:	6913      	ldr	r3, [r2, #16]
 80142d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80142dc:	6113      	str	r3, [r2, #16]
 80142de:	4770      	bx	lr
 80142e0:	40022000 	andmi	r2, r2, r0

080142e4 <fmc_bank1_lock>:
 80142e4:	4a02      	ldr	r2, [pc, #8]	; (80142f0 <fmc_bank1_lock+0xc>)
 80142e6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80142e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80142ec:	6513      	str	r3, [r2, #80]	; 0x50
 80142ee:	4770      	bx	lr
 80142f0:	40022000 	andmi	r2, r2, r0

080142f4 <fmc_bank0_state_get>:
 80142f4:	4b07      	ldr	r3, [pc, #28]	; (8014314 <fmc_bank0_state_get+0x20>)
 80142f6:	68da      	ldr	r2, [r3, #12]
 80142f8:	07d1      	lsls	r1, r2, #31
 80142fa:	d407      	bmi.n	801430c <fmc_bank0_state_get+0x18>
 80142fc:	68da      	ldr	r2, [r3, #12]
 80142fe:	06d2      	lsls	r2, r2, #27
 8014300:	d406      	bmi.n	8014310 <fmc_bank0_state_get+0x1c>
 8014302:	68d8      	ldr	r0, [r3, #12]
 8014304:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8014308:	0040      	lsls	r0, r0, #1
 801430a:	4770      	bx	lr
 801430c:	2001      	movs	r0, #1
 801430e:	4770      	bx	lr
 8014310:	2003      	movs	r0, #3
 8014312:	4770      	bx	lr
 8014314:	40022000 	andmi	r2, r2, r0

08014318 <fmc_bank1_state_get>:
 8014318:	4b07      	ldr	r3, [pc, #28]	; (8014338 <fmc_bank1_state_get+0x20>)
 801431a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801431c:	07d1      	lsls	r1, r2, #31
 801431e:	d407      	bmi.n	8014330 <fmc_bank1_state_get+0x18>
 8014320:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8014322:	06d2      	lsls	r2, r2, #27
 8014324:	d406      	bmi.n	8014334 <fmc_bank1_state_get+0x1c>
 8014326:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014328:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801432c:	0040      	lsls	r0, r0, #1
 801432e:	4770      	bx	lr
 8014330:	2001      	movs	r0, #1
 8014332:	4770      	bx	lr
 8014334:	2003      	movs	r0, #3
 8014336:	4770      	bx	lr
 8014338:	40022000 	andmi	r2, r2, r0

0801433c <fwdgt_enable>:
 801433c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8014340:	4b01      	ldr	r3, [pc, #4]	; (8014348 <fwdgt_enable+0xc>)
 8014342:	601a      	str	r2, [r3, #0]
 8014344:	4770      	bx	lr
 8014346:	bf00      	nop
 8014348:	40003000 	andmi	r3, r0, r0

0801434c <fwdgt_counter_reload>:
 801434c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8014350:	4b01      	ldr	r3, [pc, #4]	; (8014358 <fwdgt_counter_reload+0xc>)
 8014352:	601a      	str	r2, [r3, #0]
 8014354:	4770      	bx	lr
 8014356:	bf00      	nop
 8014358:	40003000 	andmi	r3, r0, r0

0801435c <fwdgt_config>:
 801435c:	f245 5355 	movw	r3, #21845	; 0x5555
 8014360:	4a11      	ldr	r2, [pc, #68]	; (80143a8 <fwdgt_config+0x4c>)
 8014362:	b510      	push	{r4, lr}
 8014364:	4c11      	ldr	r4, [pc, #68]	; (80143ac <fwdgt_config+0x50>)
 8014366:	6013      	str	r3, [r2, #0]
 8014368:	68d3      	ldr	r3, [r2, #12]
 801436a:	3c01      	subs	r4, #1
 801436c:	f003 0301 	and.w	r3, r3, #1
 8014370:	d013      	beq.n	801439a <fwdgt_config+0x3e>
 8014372:	2b00      	cmp	r3, #0
 8014374:	d1f8      	bne.n	8014368 <fwdgt_config+0xc>
 8014376:	6051      	str	r1, [r2, #4]
 8014378:	490c      	ldr	r1, [pc, #48]	; (80143ac <fwdgt_config+0x50>)
 801437a:	4a0b      	ldr	r2, [pc, #44]	; (80143a8 <fwdgt_config+0x4c>)
 801437c:	68d3      	ldr	r3, [r2, #12]
 801437e:	3901      	subs	r1, #1
 8014380:	f003 0302 	and.w	r3, r3, #2
 8014384:	d00d      	beq.n	80143a2 <fwdgt_config+0x46>
 8014386:	2b00      	cmp	r3, #0
 8014388:	d1f8      	bne.n	801437c <fwdgt_config+0x20>
 801438a:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 801438e:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8014392:	6090      	str	r0, [r2, #8]
 8014394:	2001      	movs	r0, #1
 8014396:	6013      	str	r3, [r2, #0]
 8014398:	e002      	b.n	80143a0 <fwdgt_config+0x44>
 801439a:	2b00      	cmp	r3, #0
 801439c:	d0eb      	beq.n	8014376 <fwdgt_config+0x1a>
 801439e:	2000      	movs	r0, #0
 80143a0:	bd10      	pop	{r4, pc}
 80143a2:	2b00      	cmp	r3, #0
 80143a4:	d1fb      	bne.n	801439e <fwdgt_config+0x42>
 80143a6:	e7f0      	b.n	801438a <fwdgt_config+0x2e>
 80143a8:	40003000 	andmi	r3, r0, r0
 80143ac:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080143b0 <gpio_init>:
 80143b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80143b4:	f04f 0c0f 	mov.w	ip, #15
 80143b8:	06cf      	lsls	r7, r1, #27
 80143ba:	f04f 0400 	mov.w	r4, #0
 80143be:	f04f 0701 	mov.w	r7, #1
 80143c2:	f001 050f 	and.w	r5, r1, #15
 80143c6:	bf48      	it	mi
 80143c8:	4315      	orrmi	r5, r2
 80143ca:	fa23 f204 	lsr.w	r2, r3, r4
 80143ce:	07d6      	lsls	r6, r2, #31
 80143d0:	d510      	bpl.n	80143f4 <gpio_init+0x44>
 80143d2:	00a2      	lsls	r2, r4, #2
 80143d4:	6806      	ldr	r6, [r0, #0]
 80143d6:	fa0c fe02 	lsl.w	lr, ip, r2
 80143da:	ea26 060e 	bic.w	r6, r6, lr
 80143de:	fa05 f202 	lsl.w	r2, r5, r2
 80143e2:	2928      	cmp	r1, #40	; 0x28
 80143e4:	ea42 0206 	orr.w	r2, r2, r6
 80143e8:	d128      	bne.n	801443c <gpio_init+0x8c>
 80143ea:	fa07 f604 	lsl.w	r6, r7, r4
 80143ee:	401e      	ands	r6, r3
 80143f0:	6146      	str	r6, [r0, #20]
 80143f2:	6002      	str	r2, [r0, #0]
 80143f4:	3401      	adds	r4, #1
 80143f6:	2c08      	cmp	r4, #8
 80143f8:	d1e7      	bne.n	80143ca <gpio_init+0x1a>
 80143fa:	2600      	movs	r6, #0
 80143fc:	f04f 0c0f 	mov.w	ip, #15
 8014400:	2701      	movs	r7, #1
 8014402:	f106 0208 	add.w	r2, r6, #8
 8014406:	fa23 f402 	lsr.w	r4, r3, r2
 801440a:	07e4      	lsls	r4, r4, #31
 801440c:	d511      	bpl.n	8014432 <gpio_init+0x82>
 801440e:	00b4      	lsls	r4, r6, #2
 8014410:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8014414:	fa0c f804 	lsl.w	r8, ip, r4
 8014418:	ea2e 0e08 	bic.w	lr, lr, r8
 801441c:	fa05 f404 	lsl.w	r4, r5, r4
 8014420:	2928      	cmp	r1, #40	; 0x28
 8014422:	ea44 040e 	orr.w	r4, r4, lr
 8014426:	d110      	bne.n	801444a <gpio_init+0x9a>
 8014428:	fa07 f202 	lsl.w	r2, r7, r2
 801442c:	401a      	ands	r2, r3
 801442e:	6142      	str	r2, [r0, #20]
 8014430:	6044      	str	r4, [r0, #4]
 8014432:	3601      	adds	r6, #1
 8014434:	2e08      	cmp	r6, #8
 8014436:	d1e4      	bne.n	8014402 <gpio_init+0x52>
 8014438:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801443c:	2948      	cmp	r1, #72	; 0x48
 801443e:	bf02      	ittt	eq
 8014440:	fa07 f604 	lsleq.w	r6, r7, r4
 8014444:	401e      	andeq	r6, r3
 8014446:	6106      	streq	r6, [r0, #16]
 8014448:	e7d3      	b.n	80143f2 <gpio_init+0x42>
 801444a:	2948      	cmp	r1, #72	; 0x48
 801444c:	bf02      	ittt	eq
 801444e:	fa07 f202 	lsleq.w	r2, r7, r2
 8014452:	401a      	andeq	r2, r3
 8014454:	6102      	streq	r2, [r0, #16]
 8014456:	e7eb      	b.n	8014430 <gpio_init+0x80>

08014458 <gpio_pin_remap_config>:
 8014458:	2800      	cmp	r0, #0
 801445a:	4a16      	ldr	r2, [pc, #88]	; (80144b4 <gpio_pin_remap_config+0x5c>)
 801445c:	b530      	push	{r4, r5, lr}
 801445e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8014462:	bfb4      	ite	lt
 8014464:	69d3      	ldrlt	r3, [r2, #28]
 8014466:	6853      	ldrge	r3, [r2, #4]
 8014468:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 801446c:	b284      	uxth	r4, r0
 801446e:	d110      	bne.n	8014492 <gpio_pin_remap_config+0x3a>
 8014470:	6855      	ldr	r5, [r2, #4]
 8014472:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8014476:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801447a:	6055      	str	r5, [r2, #4]
 801447c:	b119      	cbz	r1, 8014486 <gpio_pin_remap_config+0x2e>
 801447e:	0d42      	lsrs	r2, r0, #21
 8014480:	0112      	lsls	r2, r2, #4
 8014482:	4094      	lsls	r4, r2
 8014484:	4323      	orrs	r3, r4
 8014486:	4a0b      	ldr	r2, [pc, #44]	; (80144b4 <gpio_pin_remap_config+0x5c>)
 8014488:	2800      	cmp	r0, #0
 801448a:	bfb4      	ite	lt
 801448c:	61d3      	strlt	r3, [r2, #28]
 801448e:	6053      	strge	r3, [r2, #4]
 8014490:	bd30      	pop	{r4, r5, pc}
 8014492:	02c2      	lsls	r2, r0, #11
 8014494:	bf4d      	iteet	mi
 8014496:	2203      	movmi	r2, #3
 8014498:	0d42      	lsrpl	r2, r0, #21
 801449a:	0112      	lslpl	r2, r2, #4
 801449c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80144a0:	bf4c      	ite	mi
 80144a2:	40aa      	lslmi	r2, r5
 80144a4:	fa04 f202 	lslpl.w	r2, r4, r2
 80144a8:	ea23 0302 	bic.w	r3, r3, r2
 80144ac:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80144b0:	e7e4      	b.n	801447c <gpio_pin_remap_config+0x24>
 80144b2:	bf00      	nop
 80144b4:	40010000 	andmi	r0, r1, r0

080144b8 <gpio_ethernet_phy_select>:
 80144b8:	4b04      	ldr	r3, [pc, #16]	; (80144cc <gpio_ethernet_phy_select+0x14>)
 80144ba:	685a      	ldr	r2, [r3, #4]
 80144bc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80144c0:	605a      	str	r2, [r3, #4]
 80144c2:	685a      	ldr	r2, [r3, #4]
 80144c4:	4302      	orrs	r2, r0
 80144c6:	605a      	str	r2, [r3, #4]
 80144c8:	4770      	bx	lr
 80144ca:	bf00      	nop
 80144cc:	40010000 	andmi	r0, r1, r0

080144d0 <pmu_backup_write_enable>:
 80144d0:	4a02      	ldr	r2, [pc, #8]	; (80144dc <pmu_backup_write_enable+0xc>)
 80144d2:	6813      	ldr	r3, [r2, #0]
 80144d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80144d8:	6013      	str	r3, [r2, #0]
 80144da:	4770      	bx	lr
 80144dc:	40007000 	andmi	r7, r0, r0

080144e0 <rcu_periph_clock_enable>:
 80144e0:	2201      	movs	r2, #1
 80144e2:	0983      	lsrs	r3, r0, #6
 80144e4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80144e8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80144ec:	6819      	ldr	r1, [r3, #0]
 80144ee:	f000 001f 	and.w	r0, r0, #31
 80144f2:	4082      	lsls	r2, r0
 80144f4:	430a      	orrs	r2, r1
 80144f6:	601a      	str	r2, [r3, #0]
 80144f8:	4770      	bx	lr

080144fa <rcu_periph_clock_disable>:
 80144fa:	2101      	movs	r1, #1
 80144fc:	0983      	lsrs	r3, r0, #6
 80144fe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014502:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014506:	681a      	ldr	r2, [r3, #0]
 8014508:	f000 001f 	and.w	r0, r0, #31
 801450c:	4081      	lsls	r1, r0
 801450e:	ea22 0201 	bic.w	r2, r2, r1
 8014512:	601a      	str	r2, [r3, #0]
 8014514:	4770      	bx	lr

08014516 <rcu_periph_reset_enable>:
 8014516:	f7ff bfe3 	b.w	80144e0 <rcu_periph_clock_enable>

0801451a <rcu_periph_reset_disable>:
 801451a:	f7ff bfee 	b.w	80144fa <rcu_periph_clock_disable>
	...

08014520 <rcu_ckout0_config>:
 8014520:	4a06      	ldr	r2, [pc, #24]	; (801453c <rcu_ckout0_config+0x1c>)
 8014522:	6853      	ldr	r3, [r2, #4]
 8014524:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8014528:	4303      	orrs	r3, r0
 801452a:	6053      	str	r3, [r2, #4]
 801452c:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8014530:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8014534:	430b      	orrs	r3, r1
 8014536:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 801453a:	4770      	bx	lr
 801453c:	40021000 	andmi	r1, r2, r0

08014540 <rcu_pll2_config>:
 8014540:	4b04      	ldr	r3, [pc, #16]	; (8014554 <rcu_pll2_config+0x14>)
 8014542:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8014544:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8014548:	62da      	str	r2, [r3, #44]	; 0x2c
 801454a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801454c:	4302      	orrs	r2, r0
 801454e:	62da      	str	r2, [r3, #44]	; 0x2c
 8014550:	4770      	bx	lr
 8014552:	bf00      	nop
 8014554:	40021000 	andmi	r1, r2, r0

08014558 <rcu_adc_clock_config>:
 8014558:	490c      	ldr	r1, [pc, #48]	; (801458c <rcu_adc_clock_config+0x34>)
 801455a:	2805      	cmp	r0, #5
 801455c:	684b      	ldr	r3, [r1, #4]
 801455e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8014562:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8014566:	d006      	beq.n	8014576 <rcu_adc_clock_config+0x1e>
 8014568:	d803      	bhi.n	8014572 <rcu_adc_clock_config+0x1a>
 801456a:	2804      	cmp	r0, #4
 801456c:	d10a      	bne.n	8014584 <rcu_adc_clock_config+0x2c>
 801456e:	604b      	str	r3, [r1, #4]
 8014570:	4770      	bx	lr
 8014572:	2807      	cmp	r0, #7
 8014574:	d1fb      	bne.n	801456e <rcu_adc_clock_config+0x16>
 8014576:	4a06      	ldr	r2, [pc, #24]	; (8014590 <rcu_adc_clock_config+0x38>)
 8014578:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 801457c:	4313      	orrs	r3, r2
 801457e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8014582:	e7f4      	b.n	801456e <rcu_adc_clock_config+0x16>
 8014584:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8014588:	e7f1      	b.n	801456e <rcu_adc_clock_config+0x16>
 801458a:	bf00      	nop
 801458c:	40021000 	andmi	r1, r2, r0
 8014590:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08014594 <rcu_flag_get>:
 8014594:	0983      	lsrs	r3, r0, #6
 8014596:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801459a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801459e:	681a      	ldr	r2, [r3, #0]
 80145a0:	2301      	movs	r3, #1
 80145a2:	f000 001f 	and.w	r0, r0, #31
 80145a6:	4083      	lsls	r3, r0
 80145a8:	4213      	tst	r3, r2
 80145aa:	bf14      	ite	ne
 80145ac:	2001      	movne	r0, #1
 80145ae:	2000      	moveq	r0, #0
 80145b0:	4770      	bx	lr
	...

080145b4 <rcu_osci_stab_wait>:
 80145b4:	281c      	cmp	r0, #28
 80145b6:	b508      	push	{r3, lr}
 80145b8:	d056      	beq.n	8014668 <rcu_osci_stab_wait+0xb4>
 80145ba:	d812      	bhi.n	80145e2 <rcu_osci_stab_wait+0x2e>
 80145bc:	2818      	cmp	r0, #24
 80145be:	d04a      	beq.n	8014656 <rcu_osci_stab_wait+0xa2>
 80145c0:	d804      	bhi.n	80145cc <rcu_osci_stab_wait+0x18>
 80145c2:	b398      	cbz	r0, 801462c <rcu_osci_stab_wait+0x78>
 80145c4:	2810      	cmp	r0, #16
 80145c6:	d022      	beq.n	801460e <rcu_osci_stab_wait+0x5a>
 80145c8:	2000      	movs	r0, #0
 80145ca:	bd08      	pop	{r3, pc}
 80145cc:	281a      	cmp	r0, #26
 80145ce:	d1fb      	bne.n	80145c8 <rcu_osci_stab_wait+0x14>
 80145d0:	492f      	ldr	r1, [pc, #188]	; (8014690 <rcu_osci_stab_wait+0xdc>)
 80145d2:	201b      	movs	r0, #27
 80145d4:	f7ff ffde 	bl	8014594 <rcu_flag_get>
 80145d8:	b908      	cbnz	r0, 80145de <rcu_osci_stab_wait+0x2a>
 80145da:	3901      	subs	r1, #1
 80145dc:	d1f9      	bne.n	80145d2 <rcu_osci_stab_wait+0x1e>
 80145de:	201b      	movs	r0, #27
 80145e0:	e01e      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 80145e2:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80145e6:	d02b      	beq.n	8014640 <rcu_osci_stab_wait+0x8c>
 80145e8:	f242 431c 	movw	r3, #9244	; 0x241c
 80145ec:	4298      	cmp	r0, r3
 80145ee:	d044      	beq.n	801467a <rcu_osci_stab_wait+0xc6>
 80145f0:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80145f4:	d1e8      	bne.n	80145c8 <rcu_osci_stab_wait+0x14>
 80145f6:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 80145fa:	f640 0001 	movw	r0, #2049	; 0x801
 80145fe:	f7ff ffc9 	bl	8014594 <rcu_flag_get>
 8014602:	b908      	cbnz	r0, 8014608 <rcu_osci_stab_wait+0x54>
 8014604:	3901      	subs	r1, #1
 8014606:	d1f8      	bne.n	80145fa <rcu_osci_stab_wait+0x46>
 8014608:	f640 0001 	movw	r0, #2049	; 0x801
 801460c:	e008      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 801460e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014612:	2011      	movs	r0, #17
 8014614:	f7ff ffbe 	bl	8014594 <rcu_flag_get>
 8014618:	b908      	cbnz	r0, 801461e <rcu_osci_stab_wait+0x6a>
 801461a:	3901      	subs	r1, #1
 801461c:	d1f9      	bne.n	8014612 <rcu_osci_stab_wait+0x5e>
 801461e:	2011      	movs	r0, #17
 8014620:	f7ff ffb8 	bl	8014594 <rcu_flag_get>
 8014624:	3800      	subs	r0, #0
 8014626:	bf18      	it	ne
 8014628:	2001      	movne	r0, #1
 801462a:	e7ce      	b.n	80145ca <rcu_osci_stab_wait+0x16>
 801462c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8014630:	2001      	movs	r0, #1
 8014632:	f7ff ffaf 	bl	8014594 <rcu_flag_get>
 8014636:	b908      	cbnz	r0, 801463c <rcu_osci_stab_wait+0x88>
 8014638:	3901      	subs	r1, #1
 801463a:	d1f9      	bne.n	8014630 <rcu_osci_stab_wait+0x7c>
 801463c:	2001      	movs	r0, #1
 801463e:	e7ef      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 8014640:	4913      	ldr	r1, [pc, #76]	; (8014690 <rcu_osci_stab_wait+0xdc>)
 8014642:	f640 1001 	movw	r0, #2305	; 0x901
 8014646:	f7ff ffa5 	bl	8014594 <rcu_flag_get>
 801464a:	b908      	cbnz	r0, 8014650 <rcu_osci_stab_wait+0x9c>
 801464c:	3901      	subs	r1, #1
 801464e:	d1f8      	bne.n	8014642 <rcu_osci_stab_wait+0x8e>
 8014650:	f640 1001 	movw	r0, #2305	; 0x901
 8014654:	e7e4      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 8014656:	490e      	ldr	r1, [pc, #56]	; (8014690 <rcu_osci_stab_wait+0xdc>)
 8014658:	2019      	movs	r0, #25
 801465a:	f7ff ff9b 	bl	8014594 <rcu_flag_get>
 801465e:	b908      	cbnz	r0, 8014664 <rcu_osci_stab_wait+0xb0>
 8014660:	3901      	subs	r1, #1
 8014662:	d1f9      	bne.n	8014658 <rcu_osci_stab_wait+0xa4>
 8014664:	2019      	movs	r0, #25
 8014666:	e7db      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 8014668:	4909      	ldr	r1, [pc, #36]	; (8014690 <rcu_osci_stab_wait+0xdc>)
 801466a:	201d      	movs	r0, #29
 801466c:	f7ff ff92 	bl	8014594 <rcu_flag_get>
 8014670:	b908      	cbnz	r0, 8014676 <rcu_osci_stab_wait+0xc2>
 8014672:	3901      	subs	r1, #1
 8014674:	d1f9      	bne.n	801466a <rcu_osci_stab_wait+0xb6>
 8014676:	201d      	movs	r0, #29
 8014678:	e7d2      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 801467a:	4905      	ldr	r1, [pc, #20]	; (8014690 <rcu_osci_stab_wait+0xdc>)
 801467c:	f242 401d 	movw	r0, #9245	; 0x241d
 8014680:	f7ff ff88 	bl	8014594 <rcu_flag_get>
 8014684:	b908      	cbnz	r0, 801468a <rcu_osci_stab_wait+0xd6>
 8014686:	3901      	subs	r1, #1
 8014688:	d1f8      	bne.n	801467c <rcu_osci_stab_wait+0xc8>
 801468a:	f242 401d 	movw	r0, #9245	; 0x241d
 801468e:	e7c7      	b.n	8014620 <rcu_osci_stab_wait+0x6c>
 8014690:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08014694 <rcu_osci_on>:
 8014694:	f7ff bf24 	b.w	80144e0 <rcu_periph_clock_enable>

08014698 <rcu_clock_freq_get>:
 8014698:	4b3e      	ldr	r3, [pc, #248]	; (8014794 <rcu_clock_freq_get+0xfc>)
 801469a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801469c:	4604      	mov	r4, r0
 801469e:	461f      	mov	r7, r3
 80146a0:	b089      	sub	sp, #36	; 0x24
 80146a2:	ad04      	add	r5, sp, #16
 80146a4:	f103 0610 	add.w	r6, r3, #16
 80146a8:	462a      	mov	r2, r5
 80146aa:	6818      	ldr	r0, [r3, #0]
 80146ac:	6859      	ldr	r1, [r3, #4]
 80146ae:	3308      	adds	r3, #8
 80146b0:	c203      	stmia	r2!, {r0, r1}
 80146b2:	42b3      	cmp	r3, r6
 80146b4:	4615      	mov	r5, r2
 80146b6:	d1f7      	bne.n	80146a8 <rcu_clock_freq_get+0x10>
 80146b8:	466b      	mov	r3, sp
 80146ba:	6938      	ldr	r0, [r7, #16]
 80146bc:	6871      	ldr	r1, [r6, #4]
 80146be:	4a36      	ldr	r2, [pc, #216]	; (8014798 <rcu_clock_freq_get+0x100>)
 80146c0:	c303      	stmia	r3!, {r0, r1}
 80146c2:	c303      	stmia	r3!, {r0, r1}
 80146c4:	6853      	ldr	r3, [r2, #4]
 80146c6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80146ca:	2b01      	cmp	r3, #1
 80146cc:	d053      	beq.n	8014776 <rcu_clock_freq_get+0xde>
 80146ce:	2b02      	cmp	r3, #2
 80146d0:	d153      	bne.n	801477a <rcu_clock_freq_get+0xe2>
 80146d2:	6853      	ldr	r3, [r2, #4]
 80146d4:	03dd      	lsls	r5, r3, #15
 80146d6:	d523      	bpl.n	8014720 <rcu_clock_freq_get+0x88>
 80146d8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80146da:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80146de:	4b2f      	ldr	r3, [pc, #188]	; (801479c <rcu_clock_freq_get+0x104>)
 80146e0:	d00e      	beq.n	8014700 <rcu_clock_freq_get+0x68>
 80146e2:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80146e4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80146e6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80146ea:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80146ee:	3101      	adds	r1, #1
 80146f0:	280f      	cmp	r0, #15
 80146f2:	f100 0502 	add.w	r5, r0, #2
 80146f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80146fa:	bf08      	it	eq
 80146fc:	2514      	moveq	r5, #20
 80146fe:	436b      	muls	r3, r5
 8014700:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014702:	f001 010f 	and.w	r1, r1, #15
 8014706:	3101      	adds	r1, #1
 8014708:	fbb3 f3f1 	udiv	r3, r3, r1
 801470c:	6851      	ldr	r1, [r2, #4]
 801470e:	6850      	ldr	r0, [r2, #4]
 8014710:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8014714:	0080      	lsls	r0, r0, #2
 8014716:	d505      	bpl.n	8014724 <rcu_clock_freq_get+0x8c>
 8014718:	f041 0110 	orr.w	r1, r1, #16
 801471c:	3101      	adds	r1, #1
 801471e:	e027      	b.n	8014770 <rcu_clock_freq_get+0xd8>
 8014720:	4b1f      	ldr	r3, [pc, #124]	; (80147a0 <rcu_clock_freq_get+0x108>)
 8014722:	e7f3      	b.n	801470c <rcu_clock_freq_get+0x74>
 8014724:	290d      	cmp	r1, #13
 8014726:	d120      	bne.n	801476a <rcu_clock_freq_get+0xd2>
 8014728:	2006      	movs	r0, #6
 801472a:	0859      	lsrs	r1, r3, #1
 801472c:	fb00 1003 	mla	r0, r0, r3, r1
 8014730:	6853      	ldr	r3, [r2, #4]
 8014732:	6851      	ldr	r1, [r2, #4]
 8014734:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8014738:	6852      	ldr	r2, [r2, #4]
 801473a:	3320      	adds	r3, #32
 801473c:	446b      	add	r3, sp
 801473e:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8014742:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8014746:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 801474a:	3120      	adds	r1, #32
 801474c:	3220      	adds	r2, #32
 801474e:	4469      	add	r1, sp
 8014750:	446a      	add	r2, sp
 8014752:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8014756:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 801475a:	fa20 f303 	lsr.w	r3, r0, r3
 801475e:	2c03      	cmp	r4, #3
 8014760:	d816      	bhi.n	8014790 <rcu_clock_freq_get+0xf8>
 8014762:	e8df f004 	tbb	[pc, r4]
 8014766:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 801476a:	290f      	cmp	r1, #15
 801476c:	d0d6      	beq.n	801471c <rcu_clock_freq_get+0x84>
 801476e:	3102      	adds	r1, #2
 8014770:	fb03 f001 	mul.w	r0, r3, r1
 8014774:	e7dc      	b.n	8014730 <rcu_clock_freq_get+0x98>
 8014776:	4809      	ldr	r0, [pc, #36]	; (801479c <rcu_clock_freq_get+0x104>)
 8014778:	e7da      	b.n	8014730 <rcu_clock_freq_get+0x98>
 801477a:	480a      	ldr	r0, [pc, #40]	; (80147a4 <rcu_clock_freq_get+0x10c>)
 801477c:	e7d8      	b.n	8014730 <rcu_clock_freq_get+0x98>
 801477e:	4618      	mov	r0, r3
 8014780:	b009      	add	sp, #36	; 0x24
 8014782:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014784:	fa23 f001 	lsr.w	r0, r3, r1
 8014788:	e7fa      	b.n	8014780 <rcu_clock_freq_get+0xe8>
 801478a:	fa23 f002 	lsr.w	r0, r3, r2
 801478e:	e7f7      	b.n	8014780 <rcu_clock_freq_get+0xe8>
 8014790:	2000      	movs	r0, #0
 8014792:	e7f5      	b.n	8014780 <rcu_clock_freq_get+0xe8>
 8014794:	08016150 	stmdaeq	r1, {r4, r6, r8, sp, lr}
 8014798:	40021000 	andmi	r1, r2, r0
 801479c:	017d7840 	cmneq	sp, r0, asr #16
 80147a0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80147a4:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080147a8 <timer_deinit>:
 80147a8:	b508      	push	{r3, lr}
 80147aa:	4b4e      	ldr	r3, [pc, #312]	; (80148e4 <timer_deinit+0x13c>)
 80147ac:	4298      	cmp	r0, r3
 80147ae:	f000 8092 	beq.w	80148d6 <timer_deinit+0x12e>
 80147b2:	d822      	bhi.n	80147fa <timer_deinit+0x52>
 80147b4:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80147b8:	4298      	cmp	r0, r3
 80147ba:	d062      	beq.n	8014882 <timer_deinit+0xda>
 80147bc:	d80b      	bhi.n	80147d6 <timer_deinit+0x2e>
 80147be:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80147c2:	4298      	cmp	r0, r3
 80147c4:	d04f      	beq.n	8014866 <timer_deinit+0xbe>
 80147c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80147ca:	4298      	cmp	r0, r3
 80147cc:	d052      	beq.n	8014874 <timer_deinit+0xcc>
 80147ce:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80147d2:	d041      	beq.n	8014858 <timer_deinit+0xb0>
 80147d4:	bd08      	pop	{r3, pc}
 80147d6:	4b44      	ldr	r3, [pc, #272]	; (80148e8 <timer_deinit+0x140>)
 80147d8:	4298      	cmp	r0, r3
 80147da:	d059      	beq.n	8014890 <timer_deinit+0xe8>
 80147dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80147e0:	4298      	cmp	r0, r3
 80147e2:	d071      	beq.n	80148c8 <timer_deinit+0x120>
 80147e4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80147e8:	4298      	cmp	r0, r3
 80147ea:	d1f3      	bne.n	80147d4 <timer_deinit+0x2c>
 80147ec:	f240 4004 	movw	r0, #1028	; 0x404
 80147f0:	f7ff fe91 	bl	8014516 <rcu_periph_reset_enable>
 80147f4:	f240 4004 	movw	r0, #1028	; 0x404
 80147f8:	e02a      	b.n	8014850 <timer_deinit+0xa8>
 80147fa:	4b3c      	ldr	r3, [pc, #240]	; (80148ec <timer_deinit+0x144>)
 80147fc:	4298      	cmp	r0, r3
 80147fe:	d055      	beq.n	80148ac <timer_deinit+0x104>
 8014800:	d812      	bhi.n	8014828 <timer_deinit+0x80>
 8014802:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8014806:	4298      	cmp	r0, r3
 8014808:	d01c      	beq.n	8014844 <timer_deinit+0x9c>
 801480a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801480e:	4298      	cmp	r0, r3
 8014810:	d045      	beq.n	801489e <timer_deinit+0xf6>
 8014812:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 8014816:	4298      	cmp	r0, r3
 8014818:	d1dc      	bne.n	80147d4 <timer_deinit+0x2c>
 801481a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 801481e:	f7ff fe7a 	bl	8014516 <rcu_periph_reset_enable>
 8014822:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8014826:	e013      	b.n	8014850 <timer_deinit+0xa8>
 8014828:	4b31      	ldr	r3, [pc, #196]	; (80148f0 <timer_deinit+0x148>)
 801482a:	4298      	cmp	r0, r3
 801482c:	d045      	beq.n	80148ba <timer_deinit+0x112>
 801482e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014832:	4298      	cmp	r0, r3
 8014834:	d1ce      	bne.n	80147d4 <timer_deinit+0x2c>
 8014836:	f240 3015 	movw	r0, #789	; 0x315
 801483a:	f7ff fe6c 	bl	8014516 <rcu_periph_reset_enable>
 801483e:	f240 3015 	movw	r0, #789	; 0x315
 8014842:	e005      	b.n	8014850 <timer_deinit+0xa8>
 8014844:	f240 300b 	movw	r0, #779	; 0x30b
 8014848:	f7ff fe65 	bl	8014516 <rcu_periph_reset_enable>
 801484c:	f240 300b 	movw	r0, #779	; 0x30b
 8014850:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014854:	f7ff be61 	b.w	801451a <rcu_periph_reset_disable>
 8014858:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801485c:	f7ff fe5b 	bl	8014516 <rcu_periph_reset_enable>
 8014860:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8014864:	e7f4      	b.n	8014850 <timer_deinit+0xa8>
 8014866:	f240 4001 	movw	r0, #1025	; 0x401
 801486a:	f7ff fe54 	bl	8014516 <rcu_periph_reset_enable>
 801486e:	f240 4001 	movw	r0, #1025	; 0x401
 8014872:	e7ed      	b.n	8014850 <timer_deinit+0xa8>
 8014874:	f240 4002 	movw	r0, #1026	; 0x402
 8014878:	f7ff fe4d 	bl	8014516 <rcu_periph_reset_enable>
 801487c:	f240 4002 	movw	r0, #1026	; 0x402
 8014880:	e7e6      	b.n	8014850 <timer_deinit+0xa8>
 8014882:	f240 4003 	movw	r0, #1027	; 0x403
 8014886:	f7ff fe46 	bl	8014516 <rcu_periph_reset_enable>
 801488a:	f240 4003 	movw	r0, #1027	; 0x403
 801488e:	e7df      	b.n	8014850 <timer_deinit+0xa8>
 8014890:	f240 4005 	movw	r0, #1029	; 0x405
 8014894:	f7ff fe3f 	bl	8014516 <rcu_periph_reset_enable>
 8014898:	f240 4005 	movw	r0, #1029	; 0x405
 801489c:	e7d8      	b.n	8014850 <timer_deinit+0xa8>
 801489e:	f240 300d 	movw	r0, #781	; 0x30d
 80148a2:	f7ff fe38 	bl	8014516 <rcu_periph_reset_enable>
 80148a6:	f240 300d 	movw	r0, #781	; 0x30d
 80148aa:	e7d1      	b.n	8014850 <timer_deinit+0xa8>
 80148ac:	f240 3013 	movw	r0, #787	; 0x313
 80148b0:	f7ff fe31 	bl	8014516 <rcu_periph_reset_enable>
 80148b4:	f240 3013 	movw	r0, #787	; 0x313
 80148b8:	e7ca      	b.n	8014850 <timer_deinit+0xa8>
 80148ba:	f44f 7045 	mov.w	r0, #788	; 0x314
 80148be:	f7ff fe2a 	bl	8014516 <rcu_periph_reset_enable>
 80148c2:	f44f 7045 	mov.w	r0, #788	; 0x314
 80148c6:	e7c3      	b.n	8014850 <timer_deinit+0xa8>
 80148c8:	f240 4006 	movw	r0, #1030	; 0x406
 80148cc:	f7ff fe23 	bl	8014516 <rcu_periph_reset_enable>
 80148d0:	f240 4006 	movw	r0, #1030	; 0x406
 80148d4:	e7bc      	b.n	8014850 <timer_deinit+0xa8>
 80148d6:	f240 4007 	movw	r0, #1031	; 0x407
 80148da:	f7ff fe1c 	bl	8014516 <rcu_periph_reset_enable>
 80148de:	f240 4007 	movw	r0, #1031	; 0x407
 80148e2:	e7b5      	b.n	8014850 <timer_deinit+0xa8>
 80148e4:	40001c00 	andmi	r1, r0, r0, lsl #24
 80148e8:	40001400 	andmi	r1, r0, r0, lsl #8
 80148ec:	40014c00 	andmi	r4, r1, r0, lsl #24
 80148f0:	40015000 	andmi	r5, r1, r0

080148f4 <timer_init>:
 80148f4:	880b      	ldrh	r3, [r1, #0]
 80148f6:	6283      	str	r3, [r0, #40]	; 0x28
 80148f8:	4b26      	ldr	r3, [pc, #152]	; (8014994 <timer_init+0xa0>)
 80148fa:	4298      	cmp	r0, r3
 80148fc:	d018      	beq.n	8014930 <timer_init+0x3c>
 80148fe:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8014902:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8014906:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801490a:	d011      	beq.n	8014930 <timer_init+0x3c>
 801490c:	4a22      	ldr	r2, [pc, #136]	; (8014998 <timer_init+0xa4>)
 801490e:	4290      	cmp	r0, r2
 8014910:	d00e      	beq.n	8014930 <timer_init+0x3c>
 8014912:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8014916:	4290      	cmp	r0, r2
 8014918:	d00a      	beq.n	8014930 <timer_init+0x3c>
 801491a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801491e:	4293      	cmp	r3, r2
 8014920:	d006      	beq.n	8014930 <timer_init+0x3c>
 8014922:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8014926:	4293      	cmp	r3, r2
 8014928:	d002      	beq.n	8014930 <timer_init+0x3c>
 801492a:	4b1c      	ldr	r3, [pc, #112]	; (801499c <timer_init+0xa8>)
 801492c:	4298      	cmp	r0, r3
 801492e:	d10f      	bne.n	8014950 <timer_init+0x5c>
 8014930:	6803      	ldr	r3, [r0, #0]
 8014932:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014936:	6003      	str	r3, [r0, #0]
 8014938:	884b      	ldrh	r3, [r1, #2]
 801493a:	6802      	ldr	r2, [r0, #0]
 801493c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014940:	4313      	orrs	r3, r2
 8014942:	6003      	str	r3, [r0, #0]
 8014944:	888b      	ldrh	r3, [r1, #4]
 8014946:	6802      	ldr	r2, [r0, #0]
 8014948:	f003 0310 	and.w	r3, r3, #16
 801494c:	4313      	orrs	r3, r2
 801494e:	6003      	str	r3, [r0, #0]
 8014950:	688b      	ldr	r3, [r1, #8]
 8014952:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014954:	4b12      	ldr	r3, [pc, #72]	; (80149a0 <timer_init+0xac>)
 8014956:	4298      	cmp	r0, r3
 8014958:	d003      	beq.n	8014962 <timer_init+0x6e>
 801495a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801495e:	4298      	cmp	r0, r3
 8014960:	d104      	bne.n	801496c <timer_init+0x78>
 8014962:	6943      	ldr	r3, [r0, #20]
 8014964:	f043 0301 	orr.w	r3, r3, #1
 8014968:	6143      	str	r3, [r0, #20]
 801496a:	4770      	bx	lr
 801496c:	6803      	ldr	r3, [r0, #0]
 801496e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8014972:	6003      	str	r3, [r0, #0]
 8014974:	898b      	ldrh	r3, [r1, #12]
 8014976:	6802      	ldr	r2, [r0, #0]
 8014978:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801497c:	4313      	orrs	r3, r2
 801497e:	6003      	str	r3, [r0, #0]
 8014980:	4b04      	ldr	r3, [pc, #16]	; (8014994 <timer_init+0xa0>)
 8014982:	4298      	cmp	r0, r3
 8014984:	d002      	beq.n	801498c <timer_init+0x98>
 8014986:	4b04      	ldr	r3, [pc, #16]	; (8014998 <timer_init+0xa4>)
 8014988:	4298      	cmp	r0, r3
 801498a:	d1ea      	bne.n	8014962 <timer_init+0x6e>
 801498c:	7b8b      	ldrb	r3, [r1, #14]
 801498e:	6303      	str	r3, [r0, #48]	; 0x30
 8014990:	e7e7      	b.n	8014962 <timer_init+0x6e>
 8014992:	bf00      	nop
 8014994:	40012c00 	andmi	r2, r1, r0, lsl #24
 8014998:	40013400 	andmi	r3, r1, r0, lsl #8
 801499c:	40002000 	andmi	r2, r0, r0
 80149a0:	40001000 	andmi	r1, r0, r0

080149a4 <timer_enable>:
 80149a4:	6803      	ldr	r3, [r0, #0]
 80149a6:	f043 0301 	orr.w	r3, r3, #1
 80149aa:	6003      	str	r3, [r0, #0]
 80149ac:	4770      	bx	lr

080149ae <timer_dma_enable>:
 80149ae:	68c3      	ldr	r3, [r0, #12]
 80149b0:	4319      	orrs	r1, r3
 80149b2:	60c1      	str	r1, [r0, #12]
 80149b4:	4770      	bx	lr
	...

080149b8 <timer_channel_output_config>:
 80149b8:	2903      	cmp	r1, #3
 80149ba:	d840      	bhi.n	8014a3e <timer_channel_output_config+0x86>
 80149bc:	e8df f011 	tbh	[pc, r1, lsl #1]
 80149c0:	00400004 	subeq	r0, r0, r4
 80149c4:	00c20081 	sbceq	r0, r2, r1, lsl #1
 80149c8:	6a03      	ldr	r3, [r0, #32]
 80149ca:	f023 0301 	bic.w	r3, r3, #1
 80149ce:	6203      	str	r3, [r0, #32]
 80149d0:	6983      	ldr	r3, [r0, #24]
 80149d2:	f023 0303 	bic.w	r3, r3, #3
 80149d6:	6183      	str	r3, [r0, #24]
 80149d8:	6a01      	ldr	r1, [r0, #32]
 80149da:	8813      	ldrh	r3, [r2, #0]
 80149dc:	430b      	orrs	r3, r1
 80149de:	6203      	str	r3, [r0, #32]
 80149e0:	6a03      	ldr	r3, [r0, #32]
 80149e2:	f023 0302 	bic.w	r3, r3, #2
 80149e6:	6203      	str	r3, [r0, #32]
 80149e8:	6a01      	ldr	r1, [r0, #32]
 80149ea:	8893      	ldrh	r3, [r2, #4]
 80149ec:	430b      	orrs	r3, r1
 80149ee:	6203      	str	r3, [r0, #32]
 80149f0:	4b68      	ldr	r3, [pc, #416]	; (8014b94 <timer_channel_output_config+0x1dc>)
 80149f2:	4298      	cmp	r0, r3
 80149f4:	d003      	beq.n	80149fe <timer_channel_output_config+0x46>
 80149f6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80149fa:	4298      	cmp	r0, r3
 80149fc:	d11f      	bne.n	8014a3e <timer_channel_output_config+0x86>
 80149fe:	6a03      	ldr	r3, [r0, #32]
 8014a00:	f023 0304 	bic.w	r3, r3, #4
 8014a04:	6203      	str	r3, [r0, #32]
 8014a06:	6a01      	ldr	r1, [r0, #32]
 8014a08:	8853      	ldrh	r3, [r2, #2]
 8014a0a:	430b      	orrs	r3, r1
 8014a0c:	6203      	str	r3, [r0, #32]
 8014a0e:	6a03      	ldr	r3, [r0, #32]
 8014a10:	f023 0308 	bic.w	r3, r3, #8
 8014a14:	6203      	str	r3, [r0, #32]
 8014a16:	6a01      	ldr	r1, [r0, #32]
 8014a18:	88d3      	ldrh	r3, [r2, #6]
 8014a1a:	430b      	orrs	r3, r1
 8014a1c:	6203      	str	r3, [r0, #32]
 8014a1e:	6843      	ldr	r3, [r0, #4]
 8014a20:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014a24:	6043      	str	r3, [r0, #4]
 8014a26:	6841      	ldr	r1, [r0, #4]
 8014a28:	8913      	ldrh	r3, [r2, #8]
 8014a2a:	430b      	orrs	r3, r1
 8014a2c:	6043      	str	r3, [r0, #4]
 8014a2e:	6843      	ldr	r3, [r0, #4]
 8014a30:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014a34:	6043      	str	r3, [r0, #4]
 8014a36:	6841      	ldr	r1, [r0, #4]
 8014a38:	8953      	ldrh	r3, [r2, #10]
 8014a3a:	430b      	orrs	r3, r1
 8014a3c:	6043      	str	r3, [r0, #4]
 8014a3e:	4770      	bx	lr
 8014a40:	6a03      	ldr	r3, [r0, #32]
 8014a42:	8811      	ldrh	r1, [r2, #0]
 8014a44:	f023 0310 	bic.w	r3, r3, #16
 8014a48:	6203      	str	r3, [r0, #32]
 8014a4a:	6983      	ldr	r3, [r0, #24]
 8014a4c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8014a50:	6183      	str	r3, [r0, #24]
 8014a52:	6a03      	ldr	r3, [r0, #32]
 8014a54:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8014a58:	6203      	str	r3, [r0, #32]
 8014a5a:	6a03      	ldr	r3, [r0, #32]
 8014a5c:	8891      	ldrh	r1, [r2, #4]
 8014a5e:	f023 0320 	bic.w	r3, r3, #32
 8014a62:	6203      	str	r3, [r0, #32]
 8014a64:	6a03      	ldr	r3, [r0, #32]
 8014a66:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8014a6a:	6203      	str	r3, [r0, #32]
 8014a6c:	4b49      	ldr	r3, [pc, #292]	; (8014b94 <timer_channel_output_config+0x1dc>)
 8014a6e:	4298      	cmp	r0, r3
 8014a70:	d003      	beq.n	8014a7a <timer_channel_output_config+0xc2>
 8014a72:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8014a76:	4298      	cmp	r0, r3
 8014a78:	d1e1      	bne.n	8014a3e <timer_channel_output_config+0x86>
 8014a7a:	6a03      	ldr	r3, [r0, #32]
 8014a7c:	8851      	ldrh	r1, [r2, #2]
 8014a7e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8014a82:	6203      	str	r3, [r0, #32]
 8014a84:	6a03      	ldr	r3, [r0, #32]
 8014a86:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8014a8a:	6203      	str	r3, [r0, #32]
 8014a8c:	6a03      	ldr	r3, [r0, #32]
 8014a8e:	88d1      	ldrh	r1, [r2, #6]
 8014a90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014a94:	6203      	str	r3, [r0, #32]
 8014a96:	6a03      	ldr	r3, [r0, #32]
 8014a98:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8014a9c:	6203      	str	r3, [r0, #32]
 8014a9e:	6843      	ldr	r3, [r0, #4]
 8014aa0:	8911      	ldrh	r1, [r2, #8]
 8014aa2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014aa6:	6043      	str	r3, [r0, #4]
 8014aa8:	6843      	ldr	r3, [r0, #4]
 8014aaa:	8952      	ldrh	r2, [r2, #10]
 8014aac:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 8014ab0:	6043      	str	r3, [r0, #4]
 8014ab2:	6843      	ldr	r3, [r0, #4]
 8014ab4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014ab8:	6043      	str	r3, [r0, #4]
 8014aba:	6843      	ldr	r3, [r0, #4]
 8014abc:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8014ac0:	e7bc      	b.n	8014a3c <timer_channel_output_config+0x84>
 8014ac2:	6a03      	ldr	r3, [r0, #32]
 8014ac4:	8811      	ldrh	r1, [r2, #0]
 8014ac6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014aca:	6203      	str	r3, [r0, #32]
 8014acc:	69c3      	ldr	r3, [r0, #28]
 8014ace:	f023 0303 	bic.w	r3, r3, #3
 8014ad2:	61c3      	str	r3, [r0, #28]
 8014ad4:	6a03      	ldr	r3, [r0, #32]
 8014ad6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8014ada:	6203      	str	r3, [r0, #32]
 8014adc:	6a03      	ldr	r3, [r0, #32]
 8014ade:	8891      	ldrh	r1, [r2, #4]
 8014ae0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014ae4:	6203      	str	r3, [r0, #32]
 8014ae6:	6a03      	ldr	r3, [r0, #32]
 8014ae8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8014aec:	6203      	str	r3, [r0, #32]
 8014aee:	4b29      	ldr	r3, [pc, #164]	; (8014b94 <timer_channel_output_config+0x1dc>)
 8014af0:	4298      	cmp	r0, r3
 8014af2:	d003      	beq.n	8014afc <timer_channel_output_config+0x144>
 8014af4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8014af8:	4298      	cmp	r0, r3
 8014afa:	d1a0      	bne.n	8014a3e <timer_channel_output_config+0x86>
 8014afc:	6a03      	ldr	r3, [r0, #32]
 8014afe:	8851      	ldrh	r1, [r2, #2]
 8014b00:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014b04:	6203      	str	r3, [r0, #32]
 8014b06:	6a03      	ldr	r3, [r0, #32]
 8014b08:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8014b0c:	6203      	str	r3, [r0, #32]
 8014b0e:	6a03      	ldr	r3, [r0, #32]
 8014b10:	88d1      	ldrh	r1, [r2, #6]
 8014b12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014b16:	6203      	str	r3, [r0, #32]
 8014b18:	6a03      	ldr	r3, [r0, #32]
 8014b1a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8014b1e:	6203      	str	r3, [r0, #32]
 8014b20:	6843      	ldr	r3, [r0, #4]
 8014b22:	8911      	ldrh	r1, [r2, #8]
 8014b24:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8014b28:	6043      	str	r3, [r0, #4]
 8014b2a:	6843      	ldr	r3, [r0, #4]
 8014b2c:	8952      	ldrh	r2, [r2, #10]
 8014b2e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8014b32:	6043      	str	r3, [r0, #4]
 8014b34:	6843      	ldr	r3, [r0, #4]
 8014b36:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014b3a:	6043      	str	r3, [r0, #4]
 8014b3c:	6843      	ldr	r3, [r0, #4]
 8014b3e:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8014b42:	e77b      	b.n	8014a3c <timer_channel_output_config+0x84>
 8014b44:	6a03      	ldr	r3, [r0, #32]
 8014b46:	8811      	ldrh	r1, [r2, #0]
 8014b48:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8014b4c:	6203      	str	r3, [r0, #32]
 8014b4e:	69c3      	ldr	r3, [r0, #28]
 8014b50:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8014b54:	61c3      	str	r3, [r0, #28]
 8014b56:	6a03      	ldr	r3, [r0, #32]
 8014b58:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8014b5c:	6203      	str	r3, [r0, #32]
 8014b5e:	6a03      	ldr	r3, [r0, #32]
 8014b60:	8891      	ldrh	r1, [r2, #4]
 8014b62:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014b66:	6203      	str	r3, [r0, #32]
 8014b68:	6a03      	ldr	r3, [r0, #32]
 8014b6a:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8014b6e:	6203      	str	r3, [r0, #32]
 8014b70:	4b08      	ldr	r3, [pc, #32]	; (8014b94 <timer_channel_output_config+0x1dc>)
 8014b72:	4298      	cmp	r0, r3
 8014b74:	d004      	beq.n	8014b80 <timer_channel_output_config+0x1c8>
 8014b76:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8014b7a:	4298      	cmp	r0, r3
 8014b7c:	f47f af5f 	bne.w	8014a3e <timer_channel_output_config+0x86>
 8014b80:	6843      	ldr	r3, [r0, #4]
 8014b82:	8912      	ldrh	r2, [r2, #8]
 8014b84:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014b88:	6043      	str	r3, [r0, #4]
 8014b8a:	6843      	ldr	r3, [r0, #4]
 8014b8c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8014b90:	e754      	b.n	8014a3c <timer_channel_output_config+0x84>
 8014b92:	bf00      	nop
 8014b94:	40012c00 	andmi	r2, r1, r0, lsl #24

08014b98 <timer_channel_output_mode_config>:
 8014b98:	2903      	cmp	r1, #3
 8014b9a:	d81a      	bhi.n	8014bd2 <timer_channel_output_mode_config+0x3a>
 8014b9c:	e8df f001 	tbb	[pc, r1]
 8014ba0:	1a120a02 	bne	84973b0 <__exidx_end+0x47e1cc>
 8014ba4:	6983      	ldr	r3, [r0, #24]
 8014ba6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014baa:	6183      	str	r3, [r0, #24]
 8014bac:	6983      	ldr	r3, [r0, #24]
 8014bae:	4313      	orrs	r3, r2
 8014bb0:	6183      	str	r3, [r0, #24]
 8014bb2:	4770      	bx	lr
 8014bb4:	6983      	ldr	r3, [r0, #24]
 8014bb6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014bba:	6183      	str	r3, [r0, #24]
 8014bbc:	6983      	ldr	r3, [r0, #24]
 8014bbe:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8014bc2:	e7f5      	b.n	8014bb0 <timer_channel_output_mode_config+0x18>
 8014bc4:	69c3      	ldr	r3, [r0, #28]
 8014bc6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014bca:	61c3      	str	r3, [r0, #28]
 8014bcc:	69c3      	ldr	r3, [r0, #28]
 8014bce:	4313      	orrs	r3, r2
 8014bd0:	61c3      	str	r3, [r0, #28]
 8014bd2:	4770      	bx	lr
 8014bd4:	69c3      	ldr	r3, [r0, #28]
 8014bd6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014bda:	61c3      	str	r3, [r0, #28]
 8014bdc:	69c3      	ldr	r3, [r0, #28]
 8014bde:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8014be2:	e7f5      	b.n	8014bd0 <timer_channel_output_mode_config+0x38>

08014be4 <timer_channel_output_pulse_value_config>:
 8014be4:	2903      	cmp	r1, #3
 8014be6:	d80a      	bhi.n	8014bfe <timer_channel_output_pulse_value_config+0x1a>
 8014be8:	e8df f001 	tbb	[pc, r1]
 8014bec:	08060402 	stmdaeq	r6, {r1, sl}
 8014bf0:	6342      	str	r2, [r0, #52]	; 0x34
 8014bf2:	4770      	bx	lr
 8014bf4:	6382      	str	r2, [r0, #56]	; 0x38
 8014bf6:	4770      	bx	lr
 8014bf8:	63c2      	str	r2, [r0, #60]	; 0x3c
 8014bfa:	4770      	bx	lr
 8014bfc:	6402      	str	r2, [r0, #64]	; 0x40
 8014bfe:	4770      	bx	lr

08014c00 <timer_channel_output_shadow_config>:
 8014c00:	2903      	cmp	r1, #3
 8014c02:	d81a      	bhi.n	8014c3a <timer_channel_output_shadow_config+0x3a>
 8014c04:	e8df f001 	tbb	[pc, r1]
 8014c08:	1a120a02 	bne	8497418 <__exidx_end+0x47e234>
 8014c0c:	6983      	ldr	r3, [r0, #24]
 8014c0e:	f023 0308 	bic.w	r3, r3, #8
 8014c12:	6183      	str	r3, [r0, #24]
 8014c14:	6983      	ldr	r3, [r0, #24]
 8014c16:	4313      	orrs	r3, r2
 8014c18:	6183      	str	r3, [r0, #24]
 8014c1a:	4770      	bx	lr
 8014c1c:	6983      	ldr	r3, [r0, #24]
 8014c1e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014c22:	6183      	str	r3, [r0, #24]
 8014c24:	6983      	ldr	r3, [r0, #24]
 8014c26:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8014c2a:	e7f5      	b.n	8014c18 <timer_channel_output_shadow_config+0x18>
 8014c2c:	69c3      	ldr	r3, [r0, #28]
 8014c2e:	f023 0308 	bic.w	r3, r3, #8
 8014c32:	61c3      	str	r3, [r0, #28]
 8014c34:	69c3      	ldr	r3, [r0, #28]
 8014c36:	4313      	orrs	r3, r2
 8014c38:	61c3      	str	r3, [r0, #28]
 8014c3a:	4770      	bx	lr
 8014c3c:	69c3      	ldr	r3, [r0, #28]
 8014c3e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014c42:	61c3      	str	r3, [r0, #28]
 8014c44:	69c3      	ldr	r3, [r0, #28]
 8014c46:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8014c4a:	e7f5      	b.n	8014c38 <timer_channel_output_shadow_config+0x38>

08014c4c <timer_input_trigger_source_select>:
 8014c4c:	6883      	ldr	r3, [r0, #8]
 8014c4e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014c52:	6083      	str	r3, [r0, #8]
 8014c54:	6883      	ldr	r3, [r0, #8]
 8014c56:	430b      	orrs	r3, r1
 8014c58:	6083      	str	r3, [r0, #8]
 8014c5a:	4770      	bx	lr

08014c5c <timer_master_output_trigger_source_select>:
 8014c5c:	6843      	ldr	r3, [r0, #4]
 8014c5e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014c62:	6043      	str	r3, [r0, #4]
 8014c64:	6843      	ldr	r3, [r0, #4]
 8014c66:	430b      	orrs	r3, r1
 8014c68:	6043      	str	r3, [r0, #4]
 8014c6a:	4770      	bx	lr

08014c6c <timer_slave_mode_select>:
 8014c6c:	6883      	ldr	r3, [r0, #8]
 8014c6e:	f023 0307 	bic.w	r3, r3, #7
 8014c72:	6083      	str	r3, [r0, #8]
 8014c74:	6883      	ldr	r3, [r0, #8]
 8014c76:	430b      	orrs	r3, r1
 8014c78:	6083      	str	r3, [r0, #8]
 8014c7a:	4770      	bx	lr

08014c7c <timer_master_slave_mode_config>:
 8014c7c:	2980      	cmp	r1, #128	; 0x80
 8014c7e:	d104      	bne.n	8014c8a <timer_master_slave_mode_config+0xe>
 8014c80:	6883      	ldr	r3, [r0, #8]
 8014c82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014c86:	6083      	str	r3, [r0, #8]
 8014c88:	4770      	bx	lr
 8014c8a:	2900      	cmp	r1, #0
 8014c8c:	d1fc      	bne.n	8014c88 <timer_master_slave_mode_config+0xc>
 8014c8e:	6883      	ldr	r3, [r0, #8]
 8014c90:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014c94:	e7f7      	b.n	8014c86 <timer_master_slave_mode_config+0xa>

08014c96 <timer_interrupt_enable>:
 8014c96:	68c3      	ldr	r3, [r0, #12]
 8014c98:	430b      	orrs	r3, r1
 8014c9a:	60c3      	str	r3, [r0, #12]
 8014c9c:	4770      	bx	lr
	...

08014ca0 <usart_deinit>:
 8014ca0:	b508      	push	{r3, lr}
 8014ca2:	4b2d      	ldr	r3, [pc, #180]	; (8014d58 <usart_deinit+0xb8>)
 8014ca4:	4298      	cmp	r0, r3
 8014ca6:	d050      	beq.n	8014d4a <usart_deinit+0xaa>
 8014ca8:	d817      	bhi.n	8014cda <usart_deinit+0x3a>
 8014caa:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014cae:	4298      	cmp	r0, r3
 8014cb0:	d044      	beq.n	8014d3c <usart_deinit+0x9c>
 8014cb2:	d808      	bhi.n	8014cc6 <usart_deinit+0x26>
 8014cb4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014cb8:	4298      	cmp	r0, r3
 8014cba:	d02a      	beq.n	8014d12 <usart_deinit+0x72>
 8014cbc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014cc0:	4298      	cmp	r0, r3
 8014cc2:	d02d      	beq.n	8014d20 <usart_deinit+0x80>
 8014cc4:	bd08      	pop	{r3, pc}
 8014cc6:	4b25      	ldr	r3, [pc, #148]	; (8014d5c <usart_deinit+0xbc>)
 8014cc8:	4298      	cmp	r0, r3
 8014cca:	d1fb      	bne.n	8014cc4 <usart_deinit+0x24>
 8014ccc:	f240 4014 	movw	r0, #1044	; 0x414
 8014cd0:	f7ff fc21 	bl	8014516 <rcu_periph_reset_enable>
 8014cd4:	f240 4014 	movw	r0, #1044	; 0x414
 8014cd8:	e017      	b.n	8014d0a <usart_deinit+0x6a>
 8014cda:	4b21      	ldr	r3, [pc, #132]	; (8014d60 <usart_deinit+0xc0>)
 8014cdc:	4298      	cmp	r0, r3
 8014cde:	d00e      	beq.n	8014cfe <usart_deinit+0x5e>
 8014ce0:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014ce4:	4298      	cmp	r0, r3
 8014ce6:	d022      	beq.n	8014d2e <usart_deinit+0x8e>
 8014ce8:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014cec:	4298      	cmp	r0, r3
 8014cee:	d1e9      	bne.n	8014cc4 <usart_deinit+0x24>
 8014cf0:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014cf4:	f7ff fc0f 	bl	8014516 <rcu_periph_reset_enable>
 8014cf8:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014cfc:	e005      	b.n	8014d0a <usart_deinit+0x6a>
 8014cfe:	f240 300e 	movw	r0, #782	; 0x30e
 8014d02:	f7ff fc08 	bl	8014516 <rcu_periph_reset_enable>
 8014d06:	f240 300e 	movw	r0, #782	; 0x30e
 8014d0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014d0e:	f7ff bc04 	b.w	801451a <rcu_periph_reset_disable>
 8014d12:	f240 4011 	movw	r0, #1041	; 0x411
 8014d16:	f7ff fbfe 	bl	8014516 <rcu_periph_reset_enable>
 8014d1a:	f240 4011 	movw	r0, #1041	; 0x411
 8014d1e:	e7f4      	b.n	8014d0a <usart_deinit+0x6a>
 8014d20:	f240 4012 	movw	r0, #1042	; 0x412
 8014d24:	f7ff fbf7 	bl	8014516 <rcu_periph_reset_enable>
 8014d28:	f240 4012 	movw	r0, #1042	; 0x412
 8014d2c:	e7ed      	b.n	8014d0a <usart_deinit+0x6a>
 8014d2e:	f641 5018 	movw	r0, #7448	; 0x1d18
 8014d32:	f7ff fbf0 	bl	8014516 <rcu_periph_reset_enable>
 8014d36:	f641 5018 	movw	r0, #7448	; 0x1d18
 8014d3a:	e7e6      	b.n	8014d0a <usart_deinit+0x6a>
 8014d3c:	f240 4013 	movw	r0, #1043	; 0x413
 8014d40:	f7ff fbe9 	bl	8014516 <rcu_periph_reset_enable>
 8014d44:	f240 4013 	movw	r0, #1043	; 0x413
 8014d48:	e7df      	b.n	8014d0a <usart_deinit+0x6a>
 8014d4a:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8014d4e:	f7ff fbe2 	bl	8014516 <rcu_periph_reset_enable>
 8014d52:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8014d56:	e7d8      	b.n	8014d0a <usart_deinit+0x6a>
 8014d58:	40007800 	andmi	r7, r0, r0, lsl #16
 8014d5c:	40005000 	andmi	r5, r0, r0
 8014d60:	40013800 	andmi	r3, r1, r0, lsl #16

08014d64 <usart_baudrate_set>:
 8014d64:	b538      	push	{r3, r4, r5, lr}
 8014d66:	4b16      	ldr	r3, [pc, #88]	; (8014dc0 <usart_baudrate_set+0x5c>)
 8014d68:	4604      	mov	r4, r0
 8014d6a:	4298      	cmp	r0, r3
 8014d6c:	460d      	mov	r5, r1
 8014d6e:	d025      	beq.n	8014dbc <usart_baudrate_set+0x58>
 8014d70:	d816      	bhi.n	8014da0 <usart_baudrate_set+0x3c>
 8014d72:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014d76:	4298      	cmp	r0, r3
 8014d78:	d020      	beq.n	8014dbc <usart_baudrate_set+0x58>
 8014d7a:	d80f      	bhi.n	8014d9c <usart_baudrate_set+0x38>
 8014d7c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014d80:	4298      	cmp	r0, r3
 8014d82:	d01b      	beq.n	8014dbc <usart_baudrate_set+0x58>
 8014d84:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014d88:	429c      	cmp	r4, r3
 8014d8a:	d017      	beq.n	8014dbc <usart_baudrate_set+0x58>
 8014d8c:	2000      	movs	r0, #0
 8014d8e:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 8014d92:	fbb1 f1f5 	udiv	r1, r1, r5
 8014d96:	b289      	uxth	r1, r1
 8014d98:	60a1      	str	r1, [r4, #8]
 8014d9a:	bd38      	pop	{r3, r4, r5, pc}
 8014d9c:	4b09      	ldr	r3, [pc, #36]	; (8014dc4 <usart_baudrate_set+0x60>)
 8014d9e:	e7f3      	b.n	8014d88 <usart_baudrate_set+0x24>
 8014da0:	4b09      	ldr	r3, [pc, #36]	; (8014dc8 <usart_baudrate_set+0x64>)
 8014da2:	4298      	cmp	r0, r3
 8014da4:	d006      	beq.n	8014db4 <usart_baudrate_set+0x50>
 8014da6:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014daa:	4298      	cmp	r0, r3
 8014dac:	d002      	beq.n	8014db4 <usart_baudrate_set+0x50>
 8014dae:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014db2:	e7e9      	b.n	8014d88 <usart_baudrate_set+0x24>
 8014db4:	2003      	movs	r0, #3
 8014db6:	f7ff fc6f 	bl	8014698 <rcu_clock_freq_get>
 8014dba:	e7e8      	b.n	8014d8e <usart_baudrate_set+0x2a>
 8014dbc:	2002      	movs	r0, #2
 8014dbe:	e7fa      	b.n	8014db6 <usart_baudrate_set+0x52>
 8014dc0:	40007800 	andmi	r7, r0, r0, lsl #16
 8014dc4:	40005000 	andmi	r5, r0, r0
 8014dc8:	40013800 	andmi	r3, r1, r0, lsl #16

08014dcc <usart_parity_config>:
 8014dcc:	68c3      	ldr	r3, [r0, #12]
 8014dce:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8014dd2:	60c3      	str	r3, [r0, #12]
 8014dd4:	68c3      	ldr	r3, [r0, #12]
 8014dd6:	430b      	orrs	r3, r1
 8014dd8:	60c3      	str	r3, [r0, #12]
 8014dda:	4770      	bx	lr

08014ddc <usart_word_length_set>:
 8014ddc:	68c3      	ldr	r3, [r0, #12]
 8014dde:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8014de2:	60c3      	str	r3, [r0, #12]
 8014de4:	68c3      	ldr	r3, [r0, #12]
 8014de6:	430b      	orrs	r3, r1
 8014de8:	60c3      	str	r3, [r0, #12]
 8014dea:	4770      	bx	lr

08014dec <usart_stop_bit_set>:
 8014dec:	6903      	ldr	r3, [r0, #16]
 8014dee:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8014df2:	6103      	str	r3, [r0, #16]
 8014df4:	6903      	ldr	r3, [r0, #16]
 8014df6:	430b      	orrs	r3, r1
 8014df8:	6103      	str	r3, [r0, #16]
 8014dfa:	4770      	bx	lr

08014dfc <usart_transmit_config>:
 8014dfc:	68c3      	ldr	r3, [r0, #12]
 8014dfe:	f023 0308 	bic.w	r3, r3, #8
 8014e02:	430b      	orrs	r3, r1
 8014e04:	60c3      	str	r3, [r0, #12]
 8014e06:	4770      	bx	lr

08014e08 <usart_receive_config>:
 8014e08:	68c3      	ldr	r3, [r0, #12]
 8014e0a:	f023 0304 	bic.w	r3, r3, #4
 8014e0e:	430b      	orrs	r3, r1
 8014e10:	60c3      	str	r3, [r0, #12]
 8014e12:	4770      	bx	lr

08014e14 <usart_hardware_flow_rts_config>:
 8014e14:	6943      	ldr	r3, [r0, #20]
 8014e16:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014e1a:	430b      	orrs	r3, r1
 8014e1c:	6143      	str	r3, [r0, #20]
 8014e1e:	4770      	bx	lr

08014e20 <usart_hardware_flow_cts_config>:
 8014e20:	6943      	ldr	r3, [r0, #20]
 8014e22:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014e26:	430b      	orrs	r3, r1
 8014e28:	6143      	str	r3, [r0, #20]
 8014e2a:	4770      	bx	lr

08014e2c <usart_flag_get>:
 8014e2c:	098b      	lsrs	r3, r1, #6
 8014e2e:	581a      	ldr	r2, [r3, r0]
 8014e30:	2301      	movs	r3, #1
 8014e32:	f001 011f 	and.w	r1, r1, #31
 8014e36:	408b      	lsls	r3, r1
 8014e38:	4213      	tst	r3, r2
 8014e3a:	bf14      	ite	ne
 8014e3c:	2001      	movne	r0, #1
 8014e3e:	2000      	moveq	r0, #0
 8014e40:	4770      	bx	lr
	...

08014e44 <emac_eth_recv>:
 8014e44:	b538      	push	{r3, r4, r5, lr}
 8014e46:	4605      	mov	r5, r0
 8014e48:	f001 f870 	bl	8015f2c <enet_rxframe_size_get>
 8014e4c:	4604      	mov	r4, r0
 8014e4e:	b138      	cbz	r0, 8014e60 <emac_eth_recv+0x1c>
 8014e50:	4b05      	ldr	r3, [pc, #20]	; (8014e68 <emac_eth_recv+0x24>)
 8014e52:	2105      	movs	r1, #5
 8014e54:	6818      	ldr	r0, [r3, #0]
 8014e56:	f001 f818 	bl	8015e8a <enet_desc_information_get>
 8014e5a:	6028      	str	r0, [r5, #0]
 8014e5c:	4620      	mov	r0, r4
 8014e5e:	bd38      	pop	{r3, r4, r5, pc}
 8014e60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014e64:	e7fb      	b.n	8014e5e <emac_eth_recv+0x1a>
 8014e66:	bf00      	nop
 8014e68:	2001d9a4 	andcs	sp, r1, r4, lsr #19

08014e6c <emac_free_pkt>:
 8014e6c:	2100      	movs	r1, #0
 8014e6e:	4608      	mov	r0, r1
 8014e70:	f000 bd46 	b.w	8015900 <enet_frame_receive>

08014e74 <emac_eth_send>:
 8014e74:	f000 bd84 	b.w	8015980 <enet_frame_transmit>

08014e78 <gd32_adc_init()>:
 8014e78:	b510      	push	{r4, lr}
 8014e7a:	f240 6009 	movw	r0, #1545	; 0x609
 8014e7e:	4c21      	ldr	r4, [pc, #132]	; (8014f04 <gd32_adc_init()+0x8c>)
 8014e80:	f7ff fb2e 	bl	80144e0 <rcu_periph_clock_enable>
 8014e84:	2005      	movs	r0, #5
 8014e86:	f7ff fb67 	bl	8014558 <rcu_adc_clock_config>
 8014e8a:	4620      	mov	r0, r4
 8014e8c:	2201      	movs	r2, #1
 8014e8e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014e92:	f000 fbf5 	bl	8015680 <adc_special_function_config>
 8014e96:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8014e9a:	4620      	mov	r0, r4
 8014e9c:	2102      	movs	r1, #2
 8014e9e:	f000 fc8e 	bl	80157be <adc_external_trigger_source_config>
 8014ea2:	2100      	movs	r1, #0
 8014ea4:	4620      	mov	r0, r4
 8014ea6:	f000 fc13 	bl	80156d0 <adc_data_alignment_config>
 8014eaa:	2000      	movs	r0, #0
 8014eac:	f000 fbd8 	bl	8015660 <adc_mode_config>
 8014eb0:	2202      	movs	r2, #2
 8014eb2:	4620      	mov	r0, r4
 8014eb4:	4611      	mov	r1, r2
 8014eb6:	f000 fc37 	bl	8015728 <adc_channel_length_config>
 8014eba:	4620      	mov	r0, r4
 8014ebc:	2307      	movs	r3, #7
 8014ebe:	2210      	movs	r2, #16
 8014ec0:	2100      	movs	r1, #0
 8014ec2:	f000 fc4e 	bl	8015762 <adc_inserted_channel_config>
 8014ec6:	2307      	movs	r3, #7
 8014ec8:	4620      	mov	r0, r4
 8014eca:	2211      	movs	r2, #17
 8014ecc:	2101      	movs	r1, #1
 8014ece:	f000 fc48 	bl	8015762 <adc_inserted_channel_config>
 8014ed2:	2201      	movs	r2, #1
 8014ed4:	2102      	movs	r1, #2
 8014ed6:	4620      	mov	r0, r4
 8014ed8:	f000 fc82 	bl	80157e0 <adc_external_trigger_config>
 8014edc:	f000 fc1a 	bl	8015714 <adc_tempsensor_vrefint_enable>
 8014ee0:	4620      	mov	r0, r4
 8014ee2:	f000 fbfe 	bl	80156e2 <adc_enable>
 8014ee6:	2100      	movs	r1, #0
 8014ee8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8014eec:	f000 fae4 	bl	80154b8 <udelay(unsigned int, unsigned int)>
 8014ef0:	4620      	mov	r0, r4
 8014ef2:	f000 fbfe 	bl	80156f2 <adc_calibration_enable>
 8014ef6:	4620      	mov	r0, r4
 8014ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014efc:	2102      	movs	r1, #2
 8014efe:	f000 bc8a 	b.w	8015816 <adc_software_trigger_enable>
 8014f02:	bf00      	nop
 8014f04:	40012400 	andmi	r2, r1, r0, lsl #8

08014f08 <_stop() [clone .isra.0]>:
 8014f08:	b508      	push	{r3, lr}
 8014f0a:	4806      	ldr	r0, [pc, #24]	; (8014f24 <_stop() [clone .isra.0]+0x1c>)
 8014f0c:	f001 f8d2 	bl	80160b4 <i2c_stop_on_bus>
 8014f10:	f640 73ff 	movw	r3, #4095	; 0xfff
 8014f14:	4904      	ldr	r1, [pc, #16]	; (8014f28 <_stop() [clone .isra.0]+0x20>)
 8014f16:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8014f1a:	0592      	lsls	r2, r2, #22
 8014f1c:	d501      	bpl.n	8014f22 <_stop() [clone .isra.0]+0x1a>
 8014f1e:	3b01      	subs	r3, #1
 8014f20:	d1f9      	bne.n	8014f16 <_stop() [clone .isra.0]+0xe>
 8014f22:	bd08      	pop	{r3, pc}
 8014f24:	40005400 	andmi	r5, r0, r0, lsl #8
 8014f28:	40005000 	andmi	r5, r0, r0

08014f2c <gd32_i2c_begin>:
 8014f2c:	b510      	push	{r4, lr}
 8014f2e:	f240 7015 	movw	r0, #1813	; 0x715
 8014f32:	f7ff fad5 	bl	80144e0 <rcu_periph_clock_enable>
 8014f36:	4c15      	ldr	r4, [pc, #84]	; (8014f8c <gd32_i2c_begin+0x60>)
 8014f38:	f240 6003 	movw	r0, #1539	; 0x603
 8014f3c:	f7ff fad0 	bl	80144e0 <rcu_periph_clock_enable>
 8014f40:	f240 6003 	movw	r0, #1539	; 0x603
 8014f44:	f7ff facc 	bl	80144e0 <rcu_periph_clock_enable>
 8014f48:	4620      	mov	r0, r4
 8014f4a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014f4e:	2203      	movs	r2, #3
 8014f50:	211c      	movs	r1, #28
 8014f52:	f7ff fa2d 	bl	80143b0 <gpio_init>
 8014f56:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014f5a:	2203      	movs	r2, #3
 8014f5c:	4620      	mov	r0, r4
 8014f5e:	211c      	movs	r1, #28
 8014f60:	f7ff fa26 	bl	80143b0 <gpio_init>
 8014f64:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8014f68:	2101      	movs	r1, #1
 8014f6a:	2002      	movs	r0, #2
 8014f6c:	f7ff fa74 	bl	8014458 <gpio_pin_remap_config>
 8014f70:	4620      	mov	r0, r4
 8014f72:	4907      	ldr	r1, [pc, #28]	; (8014f90 <gd32_i2c_begin+0x64>)
 8014f74:	2200      	movs	r2, #0
 8014f76:	f001 f817 	bl	8015fa8 <i2c_clock_config>
 8014f7a:	4620      	mov	r0, r4
 8014f7c:	f001 f890 	bl	80160a0 <i2c_enable>
 8014f80:	4620      	mov	r0, r4
 8014f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014f86:	2101      	movs	r1, #1
 8014f88:	f001 b870 	b.w	801606c <i2c_ack_config>
 8014f8c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8014f90:	00061a80 	andeq	r1, r6, r0, lsl #21

08014f94 <gd32_i2c_set_baudrate>:
 8014f94:	4601      	mov	r1, r0
 8014f96:	2200      	movs	r2, #0
 8014f98:	4801      	ldr	r0, [pc, #4]	; (8014fa0 <gd32_i2c_set_baudrate+0xc>)
 8014f9a:	f001 b805 	b.w	8015fa8 <i2c_clock_config>
 8014f9e:	bf00      	nop
 8014fa0:	40005400 	andmi	r5, r0, r0, lsl #8

08014fa4 <gd32_i2c_set_address>:
 8014fa4:	4b01      	ldr	r3, [pc, #4]	; (8014fac <gd32_i2c_set_address+0x8>)
 8014fa6:	0040      	lsls	r0, r0, #1
 8014fa8:	7018      	strb	r0, [r3, #0]
 8014faa:	4770      	bx	lr
 8014fac:	2001d998 	mulcs	r1, r8, r9

08014fb0 <gd32_i2c_write>:
 8014fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014fb2:	4604      	mov	r4, r0
 8014fb4:	460f      	mov	r7, r1
 8014fb6:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014fba:	4e2e      	ldr	r6, [pc, #184]	; (8015074 <gd32_i2c_write+0xc4>)
 8014fbc:	f240 6101 	movw	r1, #1537	; 0x601
 8014fc0:	4630      	mov	r0, r6
 8014fc2:	f001 f881 	bl	80160c8 <i2c_flag_get>
 8014fc6:	b9b0      	cbnz	r0, 8014ff6 <gd32_i2c_write+0x46>
 8014fc8:	482a      	ldr	r0, [pc, #168]	; (8015074 <gd32_i2c_write+0xc4>)
 8014fca:	f001 f86e 	bl	80160aa <i2c_start_on_bus>
 8014fce:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014fd2:	4e28      	ldr	r6, [pc, #160]	; (8015074 <gd32_i2c_write+0xc4>)
 8014fd4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8014fd8:	4630      	mov	r0, r6
 8014fda:	f001 f875 	bl	80160c8 <i2c_flag_get>
 8014fde:	b190      	cbz	r0, 8015006 <gd32_i2c_write+0x56>
 8014fe0:	4b25      	ldr	r3, [pc, #148]	; (8015078 <gd32_i2c_write+0xc8>)
 8014fe2:	f06f 0201 	mvn.w	r2, #1
 8014fe6:	7819      	ldrb	r1, [r3, #0]
 8014fe8:	4822      	ldr	r0, [pc, #136]	; (8015074 <gd32_i2c_write+0xc4>)
 8014fea:	f001 f851 	bl	8016090 <i2c_master_addressing>
 8014fee:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014ff2:	4e20      	ldr	r6, [pc, #128]	; (8015074 <gd32_i2c_write+0xc4>)
 8014ff4:	e00c      	b.n	8015010 <gd32_i2c_write+0x60>
 8014ff6:	3d01      	subs	r5, #1
 8014ff8:	d1e0      	bne.n	8014fbc <gd32_i2c_write+0xc>
 8014ffa:	f7ff ff85 	bl	8014f08 <_stop() [clone .isra.0]>
 8014ffe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015002:	4240      	negs	r0, r0
 8015004:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015006:	3d01      	subs	r5, #1
 8015008:	d1e4      	bne.n	8014fd4 <gd32_i2c_write+0x24>
 801500a:	e7f6      	b.n	8014ffa <gd32_i2c_write+0x4a>
 801500c:	3d01      	subs	r5, #1
 801500e:	d0f4      	beq.n	8014ffa <gd32_i2c_write+0x4a>
 8015010:	f240 5101 	movw	r1, #1281	; 0x501
 8015014:	4630      	mov	r0, r6
 8015016:	f001 f857 	bl	80160c8 <i2c_flag_get>
 801501a:	2800      	cmp	r0, #0
 801501c:	d0f6      	beq.n	801500c <gd32_i2c_write+0x5c>
 801501e:	f240 5101 	movw	r1, #1281	; 0x501
 8015022:	4814      	ldr	r0, [pc, #80]	; (8015074 <gd32_i2c_write+0xc4>)
 8015024:	f001 f85b 	bl	80160de <i2c_flag_clear>
 8015028:	f640 75ff 	movw	r5, #4095	; 0xfff
 801502c:	4e11      	ldr	r6, [pc, #68]	; (8015074 <gd32_i2c_write+0xc4>)
 801502e:	f240 5107 	movw	r1, #1287	; 0x507
 8015032:	4630      	mov	r0, r6
 8015034:	f001 f848 	bl	80160c8 <i2c_flag_get>
 8015038:	2801      	cmp	r0, #1
 801503a:	d107      	bne.n	801504c <gd32_i2c_write+0x9c>
 801503c:	4e0d      	ldr	r6, [pc, #52]	; (8015074 <gd32_i2c_write+0xc4>)
 801503e:	4427      	add	r7, r4
 8015040:	42a7      	cmp	r7, r4
 8015042:	d106      	bne.n	8015052 <gd32_i2c_write+0xa2>
 8015044:	f7ff ff60 	bl	8014f08 <_stop() [clone .isra.0]>
 8015048:	2000      	movs	r0, #0
 801504a:	e7da      	b.n	8015002 <gd32_i2c_write+0x52>
 801504c:	3d01      	subs	r5, #1
 801504e:	d1ee      	bne.n	801502e <gd32_i2c_write+0x7e>
 8015050:	e7d3      	b.n	8014ffa <gd32_i2c_write+0x4a>
 8015052:	4630      	mov	r0, r6
 8015054:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015058:	f001 f831 	bl	80160be <i2c_data_transmit>
 801505c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015060:	f240 5102 	movw	r1, #1282	; 0x502
 8015064:	4630      	mov	r0, r6
 8015066:	f001 f82f 	bl	80160c8 <i2c_flag_get>
 801506a:	2800      	cmp	r0, #0
 801506c:	d1e8      	bne.n	8015040 <gd32_i2c_write+0x90>
 801506e:	3d01      	subs	r5, #1
 8015070:	d1f6      	bne.n	8015060 <gd32_i2c_write+0xb0>
 8015072:	e7c2      	b.n	8014ffa <gd32_i2c_write+0x4a>
 8015074:	40005400 	andmi	r5, r0, r0, lsl #8
 8015078:	2001d998 	mulcs	r1, r8, r9

0801507c <gd32_i2c_read>:
 801507c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015080:	4680      	mov	r8, r0
 8015082:	460c      	mov	r4, r1
 8015084:	f640 76ff 	movw	r6, #4095	; 0xfff
 8015088:	4f4b      	ldr	r7, [pc, #300]	; (80151b8 <gd32_i2c_read+0x13c>)
 801508a:	f240 6101 	movw	r1, #1537	; 0x601
 801508e:	4638      	mov	r0, r7
 8015090:	f001 f81a 	bl	80160c8 <i2c_flag_get>
 8015094:	4605      	mov	r5, r0
 8015096:	bb08      	cbnz	r0, 80150dc <gd32_i2c_read+0x60>
 8015098:	2c02      	cmp	r4, #2
 801509a:	d103      	bne.n	80150a4 <gd32_i2c_read+0x28>
 801509c:	4601      	mov	r1, r0
 801509e:	4846      	ldr	r0, [pc, #280]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150a0:	f000 ffed 	bl	801607e <i2c_ackpos_config>
 80150a4:	4844      	ldr	r0, [pc, #272]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150a6:	f001 f800 	bl	80160aa <i2c_start_on_bus>
 80150aa:	f640 76ff 	movw	r6, #4095	; 0xfff
 80150ae:	4f42      	ldr	r7, [pc, #264]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150b0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80150b4:	4638      	mov	r0, r7
 80150b6:	f001 f807 	bl	80160c8 <i2c_flag_get>
 80150ba:	b1a8      	cbz	r0, 80150e8 <gd32_i2c_read+0x6c>
 80150bc:	4b3f      	ldr	r3, [pc, #252]	; (80151bc <gd32_i2c_read+0x140>)
 80150be:	2201      	movs	r2, #1
 80150c0:	7819      	ldrb	r1, [r3, #0]
 80150c2:	483d      	ldr	r0, [pc, #244]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150c4:	f000 ffe4 	bl	8016090 <i2c_master_addressing>
 80150c8:	2c02      	cmp	r4, #2
 80150ca:	d803      	bhi.n	80150d4 <gd32_i2c_read+0x58>
 80150cc:	2100      	movs	r1, #0
 80150ce:	483a      	ldr	r0, [pc, #232]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150d0:	f000 ffcc 	bl	801606c <i2c_ack_config>
 80150d4:	f640 76ff 	movw	r6, #4095	; 0xfff
 80150d8:	4f37      	ldr	r7, [pc, #220]	; (80151b8 <gd32_i2c_read+0x13c>)
 80150da:	e00a      	b.n	80150f2 <gd32_i2c_read+0x76>
 80150dc:	3e01      	subs	r6, #1
 80150de:	d1d4      	bne.n	801508a <gd32_i2c_read+0xe>
 80150e0:	f7ff ff12 	bl	8014f08 <_stop() [clone .isra.0]>
 80150e4:	2504      	movs	r5, #4
 80150e6:	e04d      	b.n	8015184 <gd32_i2c_read+0x108>
 80150e8:	3e01      	subs	r6, #1
 80150ea:	d1e1      	bne.n	80150b0 <gd32_i2c_read+0x34>
 80150ec:	e7f8      	b.n	80150e0 <gd32_i2c_read+0x64>
 80150ee:	3e01      	subs	r6, #1
 80150f0:	d0f6      	beq.n	80150e0 <gd32_i2c_read+0x64>
 80150f2:	f240 5101 	movw	r1, #1281	; 0x501
 80150f6:	4638      	mov	r0, r7
 80150f8:	f000 ffe6 	bl	80160c8 <i2c_flag_get>
 80150fc:	2800      	cmp	r0, #0
 80150fe:	d0f6      	beq.n	80150ee <gd32_i2c_read+0x72>
 8015100:	f240 5101 	movw	r1, #1281	; 0x501
 8015104:	482c      	ldr	r0, [pc, #176]	; (80151b8 <gd32_i2c_read+0x13c>)
 8015106:	f000 ffea 	bl	80160de <i2c_flag_clear>
 801510a:	2c01      	cmp	r4, #1
 801510c:	d102      	bne.n	8015114 <gd32_i2c_read+0x98>
 801510e:	482a      	ldr	r0, [pc, #168]	; (80151b8 <gd32_i2c_read+0x13c>)
 8015110:	f000 ffd0 	bl	80160b4 <i2c_stop_on_bus>
 8015114:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015118:	4e27      	ldr	r6, [pc, #156]	; (80151b8 <gd32_i2c_read+0x13c>)
 801511a:	e022      	b.n	8015162 <gd32_i2c_read+0xe6>
 801511c:	2c03      	cmp	r4, #3
 801511e:	d134      	bne.n	801518a <gd32_i2c_read+0x10e>
 8015120:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015124:	e002      	b.n	801512c <gd32_i2c_read+0xb0>
 8015126:	f1b9 0901 	subs.w	r9, r9, #1
 801512a:	d0d9      	beq.n	80150e0 <gd32_i2c_read+0x64>
 801512c:	f240 5102 	movw	r1, #1282	; 0x502
 8015130:	4630      	mov	r0, r6
 8015132:	f000 ffc9 	bl	80160c8 <i2c_flag_get>
 8015136:	2800      	cmp	r0, #0
 8015138:	d0f5      	beq.n	8015126 <gd32_i2c_read+0xaa>
 801513a:	2100      	movs	r1, #0
 801513c:	4630      	mov	r0, r6
 801513e:	f000 ff95 	bl	801606c <i2c_ack_config>
 8015142:	f240 5106 	movw	r1, #1286	; 0x506
 8015146:	4630      	mov	r0, r6
 8015148:	f000 ffbe 	bl	80160c8 <i2c_flag_get>
 801514c:	b138      	cbz	r0, 801515e <gd32_i2c_read+0xe2>
 801514e:	4630      	mov	r0, r6
 8015150:	f000 ffb7 	bl	80160c2 <i2c_data_receive>
 8015154:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015158:	f808 0b01 	strb.w	r0, [r8], #1
 801515c:	3c01      	subs	r4, #1
 801515e:	3f01      	subs	r7, #1
 8015160:	d0be      	beq.n	80150e0 <gd32_i2c_read+0x64>
 8015162:	2c00      	cmp	r4, #0
 8015164:	d1da      	bne.n	801511c <gd32_i2c_read+0xa0>
 8015166:	f640 73ff 	movw	r3, #4095	; 0xfff
 801516a:	4915      	ldr	r1, [pc, #84]	; (80151c0 <gd32_i2c_read+0x144>)
 801516c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8015170:	0592      	lsls	r2, r2, #22
 8015172:	d41d      	bmi.n	80151b0 <gd32_i2c_read+0x134>
 8015174:	2101      	movs	r1, #1
 8015176:	4810      	ldr	r0, [pc, #64]	; (80151b8 <gd32_i2c_read+0x13c>)
 8015178:	f000 ff78 	bl	801606c <i2c_ack_config>
 801517c:	2101      	movs	r1, #1
 801517e:	480e      	ldr	r0, [pc, #56]	; (80151b8 <gd32_i2c_read+0x13c>)
 8015180:	f000 ff7d 	bl	801607e <i2c_ackpos_config>
 8015184:	4628      	mov	r0, r5
 8015186:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801518a:	2c02      	cmp	r4, #2
 801518c:	d1d9      	bne.n	8015142 <gd32_i2c_read+0xc6>
 801518e:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015192:	e002      	b.n	801519a <gd32_i2c_read+0x11e>
 8015194:	f1b9 0901 	subs.w	r9, r9, #1
 8015198:	d0a2      	beq.n	80150e0 <gd32_i2c_read+0x64>
 801519a:	f240 5102 	movw	r1, #1282	; 0x502
 801519e:	4630      	mov	r0, r6
 80151a0:	f000 ff92 	bl	80160c8 <i2c_flag_get>
 80151a4:	2800      	cmp	r0, #0
 80151a6:	d0f5      	beq.n	8015194 <gd32_i2c_read+0x118>
 80151a8:	4630      	mov	r0, r6
 80151aa:	f000 ff83 	bl	80160b4 <i2c_stop_on_bus>
 80151ae:	e7c8      	b.n	8015142 <gd32_i2c_read+0xc6>
 80151b0:	3b01      	subs	r3, #1
 80151b2:	d1db      	bne.n	801516c <gd32_i2c_read+0xf0>
 80151b4:	e796      	b.n	80150e4 <gd32_i2c_read+0x68>
 80151b6:	bf00      	nop
 80151b8:	40005400 	andmi	r5, r0, r0, lsl #8
 80151bc:	2001d998 	mulcs	r1, r8, r9
 80151c0:	40005000 	andmi	r5, r0, r0

080151c4 <gd32_uart_begin>:
 80151c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80151c6:	461e      	mov	r6, r3
 80151c8:	4b82      	ldr	r3, [pc, #520]	; (80153d4 <gd32_uart_begin+0x210>)
 80151ca:	4604      	mov	r4, r0
 80151cc:	4298      	cmp	r0, r3
 80151ce:	460f      	mov	r7, r1
 80151d0:	4615      	mov	r5, r2
 80151d2:	d060      	beq.n	8015296 <gd32_uart_begin+0xd2>
 80151d4:	d80f      	bhi.n	80151f6 <gd32_uart_begin+0x32>
 80151d6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80151da:	4298      	cmp	r0, r3
 80151dc:	d04a      	beq.n	8015274 <gd32_uart_begin+0xb0>
 80151de:	d84c      	bhi.n	801527a <gd32_uart_begin+0xb6>
 80151e0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80151e4:	4298      	cmp	r0, r3
 80151e6:	d03e      	beq.n	8015266 <gd32_uart_begin+0xa2>
 80151e8:	f240 7012 	movw	r0, #1810	; 0x712
 80151ec:	f7ff f978 	bl	80144e0 <rcu_periph_clock_enable>
 80151f0:	f240 6004 	movw	r0, #1540	; 0x604
 80151f4:	e00f      	b.n	8015216 <gd32_uart_begin+0x52>
 80151f6:	4b78      	ldr	r3, [pc, #480]	; (80153d8 <gd32_uart_begin+0x214>)
 80151f8:	4298      	cmp	r0, r3
 80151fa:	d006      	beq.n	801520a <gd32_uart_begin+0x46>
 80151fc:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8015200:	4298      	cmp	r0, r3
 8015202:	d045      	beq.n	8015290 <gd32_uart_begin+0xcc>
 8015204:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8015208:	e047      	b.n	801529a <gd32_uart_begin+0xd6>
 801520a:	f240 600e 	movw	r0, #1550	; 0x60e
 801520e:	f7ff f967 	bl	80144e0 <rcu_periph_clock_enable>
 8015212:	f240 6003 	movw	r0, #1539	; 0x603
 8015216:	f7ff f963 	bl	80144e0 <rcu_periph_clock_enable>
 801521a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801521e:	f7ff f95f 	bl	80144e0 <rcu_periph_clock_enable>
 8015222:	4b6c      	ldr	r3, [pc, #432]	; (80153d4 <gd32_uart_begin+0x210>)
 8015224:	429c      	cmp	r4, r3
 8015226:	f000 80c3 	beq.w	80153b0 <gd32_uart_begin+0x1ec>
 801522a:	d83b      	bhi.n	80152a4 <gd32_uart_begin+0xe0>
 801522c:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015230:	429c      	cmp	r4, r3
 8015232:	f000 809c 	beq.w	801536e <gd32_uart_begin+0x1aa>
 8015236:	f200 80a7 	bhi.w	8015388 <gd32_uart_begin+0x1c4>
 801523a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801523e:	429c      	cmp	r4, r3
 8015240:	f000 8088 	beq.w	8015354 <gd32_uart_begin+0x190>
 8015244:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015248:	2203      	movs	r2, #3
 801524a:	2118      	movs	r1, #24
 801524c:	4863      	ldr	r0, [pc, #396]	; (80153dc <gd32_uart_begin+0x218>)
 801524e:	f7ff f8af 	bl	80143b0 <gpio_init>
 8015252:	2104      	movs	r1, #4
 8015254:	4861      	ldr	r0, [pc, #388]	; (80153dc <gd32_uart_begin+0x218>)
 8015256:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801525a:	2203      	movs	r2, #3
 801525c:	f7ff f8a8 	bl	80143b0 <gpio_init>
 8015260:	2101      	movs	r1, #1
 8015262:	485f      	ldr	r0, [pc, #380]	; (80153e0 <gd32_uart_begin+0x21c>)
 8015264:	e03b      	b.n	80152de <gd32_uart_begin+0x11a>
 8015266:	f240 7011 	movw	r0, #1809	; 0x711
 801526a:	f7ff f939 	bl	80144e0 <rcu_periph_clock_enable>
 801526e:	f240 6002 	movw	r0, #1538	; 0x602
 8015272:	e7d0      	b.n	8015216 <gd32_uart_begin+0x52>
 8015274:	f240 7013 	movw	r0, #1811	; 0x713
 8015278:	e7b8      	b.n	80151ec <gd32_uart_begin+0x28>
 801527a:	f240 7014 	movw	r0, #1812	; 0x714
 801527e:	f7ff f92f 	bl	80144e0 <rcu_periph_clock_enable>
 8015282:	f240 6004 	movw	r0, #1540	; 0x604
 8015286:	f7ff f92b 	bl	80144e0 <rcu_periph_clock_enable>
 801528a:	f240 6005 	movw	r0, #1541	; 0x605
 801528e:	e7c2      	b.n	8015216 <gd32_uart_begin+0x52>
 8015290:	f641 1018 	movw	r0, #6424	; 0x1918
 8015294:	e7aa      	b.n	80151ec <gd32_uart_begin+0x28>
 8015296:	f641 201e 	movw	r0, #6686	; 0x1a1e
 801529a:	f7ff f921 	bl	80144e0 <rcu_periph_clock_enable>
 801529e:	f240 6006 	movw	r0, #1542	; 0x606
 80152a2:	e7b8      	b.n	8015216 <gd32_uart_begin+0x52>
 80152a4:	4b4c      	ldr	r3, [pc, #304]	; (80153d8 <gd32_uart_begin+0x214>)
 80152a6:	429c      	cmp	r4, r3
 80152a8:	d00b      	beq.n	80152c2 <gd32_uart_begin+0xfe>
 80152aa:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80152ae:	429c      	cmp	r4, r3
 80152b0:	d076      	beq.n	80153a0 <gd32_uart_begin+0x1dc>
 80152b2:	2302      	movs	r3, #2
 80152b4:	2203      	movs	r2, #3
 80152b6:	2118      	movs	r1, #24
 80152b8:	484a      	ldr	r0, [pc, #296]	; (80153e4 <gd32_uart_begin+0x220>)
 80152ba:	f7ff f879 	bl	80143b0 <gpio_init>
 80152be:	2301      	movs	r3, #1
 80152c0:	e07e      	b.n	80153c0 <gd32_uart_begin+0x1fc>
 80152c2:	2340      	movs	r3, #64	; 0x40
 80152c4:	2203      	movs	r2, #3
 80152c6:	2118      	movs	r1, #24
 80152c8:	4847      	ldr	r0, [pc, #284]	; (80153e8 <gd32_uart_begin+0x224>)
 80152ca:	f7ff f871 	bl	80143b0 <gpio_init>
 80152ce:	2104      	movs	r1, #4
 80152d0:	4845      	ldr	r0, [pc, #276]	; (80153e8 <gd32_uart_begin+0x224>)
 80152d2:	2380      	movs	r3, #128	; 0x80
 80152d4:	2203      	movs	r2, #3
 80152d6:	f7ff f86b 	bl	80143b0 <gpio_init>
 80152da:	2101      	movs	r1, #1
 80152dc:	2004      	movs	r0, #4
 80152de:	f7ff f8bb 	bl	8014458 <gpio_pin_remap_config>
 80152e2:	4620      	mov	r0, r4
 80152e4:	f7ff fcdc 	bl	8014ca0 <usart_deinit>
 80152e8:	68e3      	ldr	r3, [r4, #12]
 80152ea:	4639      	mov	r1, r7
 80152ec:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80152f0:	4620      	mov	r0, r4
 80152f2:	60e3      	str	r3, [r4, #12]
 80152f4:	f7ff fd36 	bl	8014d64 <usart_baudrate_set>
 80152f8:	f1a5 0309 	sub.w	r3, r5, #9
 80152fc:	4259      	negs	r1, r3
 80152fe:	4159      	adcs	r1, r3
 8015300:	4620      	mov	r0, r4
 8015302:	0309      	lsls	r1, r1, #12
 8015304:	f7ff fd6a 	bl	8014ddc <usart_word_length_set>
 8015308:	9906      	ldr	r1, [sp, #24]
 801530a:	4620      	mov	r0, r4
 801530c:	1e8a      	subs	r2, r1, #2
 801530e:	4251      	negs	r1, r2
 8015310:	4151      	adcs	r1, r2
 8015312:	0349      	lsls	r1, r1, #13
 8015314:	f7ff fd6a 	bl	8014dec <usart_stop_bit_set>
 8015318:	2e01      	cmp	r6, #1
 801531a:	d055      	beq.n	80153c8 <gd32_uart_begin+0x204>
 801531c:	2e02      	cmp	r6, #2
 801531e:	d156      	bne.n	80153ce <gd32_uart_begin+0x20a>
 8015320:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8015324:	4620      	mov	r0, r4
 8015326:	f7ff fd51 	bl	8014dcc <usart_parity_config>
 801532a:	2100      	movs	r1, #0
 801532c:	4620      	mov	r0, r4
 801532e:	f7ff fd71 	bl	8014e14 <usart_hardware_flow_rts_config>
 8015332:	2100      	movs	r1, #0
 8015334:	4620      	mov	r0, r4
 8015336:	f7ff fd73 	bl	8014e20 <usart_hardware_flow_cts_config>
 801533a:	2104      	movs	r1, #4
 801533c:	4620      	mov	r0, r4
 801533e:	f7ff fd63 	bl	8014e08 <usart_receive_config>
 8015342:	2108      	movs	r1, #8
 8015344:	4620      	mov	r0, r4
 8015346:	f7ff fd59 	bl	8014dfc <usart_transmit_config>
 801534a:	68e3      	ldr	r3, [r4, #12]
 801534c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8015350:	60e3      	str	r3, [r4, #12]
 8015352:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015354:	2304      	movs	r3, #4
 8015356:	2203      	movs	r2, #3
 8015358:	2118      	movs	r1, #24
 801535a:	4824      	ldr	r0, [pc, #144]	; (80153ec <gd32_uart_begin+0x228>)
 801535c:	f7ff f828 	bl	80143b0 <gpio_init>
 8015360:	2308      	movs	r3, #8
 8015362:	2203      	movs	r2, #3
 8015364:	2104      	movs	r1, #4
 8015366:	4821      	ldr	r0, [pc, #132]	; (80153ec <gd32_uart_begin+0x228>)
 8015368:	f7ff f822 	bl	80143b0 <gpio_init>
 801536c:	e7b9      	b.n	80152e2 <gd32_uart_begin+0x11e>
 801536e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015372:	2203      	movs	r2, #3
 8015374:	2118      	movs	r1, #24
 8015376:	4819      	ldr	r0, [pc, #100]	; (80153dc <gd32_uart_begin+0x218>)
 8015378:	f7ff f81a 	bl	80143b0 <gpio_init>
 801537c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015380:	2203      	movs	r2, #3
 8015382:	2104      	movs	r1, #4
 8015384:	4815      	ldr	r0, [pc, #84]	; (80153dc <gd32_uart_begin+0x218>)
 8015386:	e7ef      	b.n	8015368 <gd32_uart_begin+0x1a4>
 8015388:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801538c:	2203      	movs	r2, #3
 801538e:	2118      	movs	r1, #24
 8015390:	4812      	ldr	r0, [pc, #72]	; (80153dc <gd32_uart_begin+0x218>)
 8015392:	f7ff f80d 	bl	80143b0 <gpio_init>
 8015396:	2304      	movs	r3, #4
 8015398:	2203      	movs	r2, #3
 801539a:	4619      	mov	r1, r3
 801539c:	4814      	ldr	r0, [pc, #80]	; (80153f0 <gd32_uart_begin+0x22c>)
 801539e:	e7e3      	b.n	8015368 <gd32_uart_begin+0x1a4>
 80153a0:	2340      	movs	r3, #64	; 0x40
 80153a2:	2203      	movs	r2, #3
 80153a4:	2118      	movs	r1, #24
 80153a6:	480d      	ldr	r0, [pc, #52]	; (80153dc <gd32_uart_begin+0x218>)
 80153a8:	f7ff f802 	bl	80143b0 <gpio_init>
 80153ac:	2380      	movs	r3, #128	; 0x80
 80153ae:	e7e7      	b.n	8015380 <gd32_uart_begin+0x1bc>
 80153b0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80153b4:	2203      	movs	r2, #3
 80153b6:	2118      	movs	r1, #24
 80153b8:	480a      	ldr	r0, [pc, #40]	; (80153e4 <gd32_uart_begin+0x220>)
 80153ba:	f7fe fff9 	bl	80143b0 <gpio_init>
 80153be:	2380      	movs	r3, #128	; 0x80
 80153c0:	2203      	movs	r2, #3
 80153c2:	2104      	movs	r1, #4
 80153c4:	4807      	ldr	r0, [pc, #28]	; (80153e4 <gd32_uart_begin+0x220>)
 80153c6:	e7cf      	b.n	8015368 <gd32_uart_begin+0x1a4>
 80153c8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80153cc:	e7aa      	b.n	8015324 <gd32_uart_begin+0x160>
 80153ce:	2100      	movs	r1, #0
 80153d0:	e7a8      	b.n	8015324 <gd32_uart_begin+0x160>
 80153d2:	bf00      	nop
 80153d4:	40007800 	andmi	r7, r0, r0, lsl #16
 80153d8:	40013800 	andmi	r3, r1, r0, lsl #16
 80153dc:	40011000 	andmi	r1, r1, r0
 80153e0:	00140010 	andseq	r0, r4, r0, lsl r0
 80153e4:	40011800 	andmi	r1, r1, r0, lsl #16
 80153e8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80153ec:	40010800 	andmi	r0, r1, r0, lsl #16
 80153f0:	40011400 	andmi	r1, r1, r0, lsl #8

080153f4 <micros_init()>:
 80153f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80153f6:	2400      	movs	r4, #0
 80153f8:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 80153fc:	4d22      	ldr	r5, [pc, #136]	; (8015488 <micros_init()+0x94>)
 80153fe:	f240 6013 	movw	r0, #1555	; 0x613
 8015402:	f7ff f86d 	bl	80144e0 <rcu_periph_clock_enable>
 8015406:	4628      	mov	r0, r5
 8015408:	f7ff f9ce 	bl	80147a8 <timer_deinit>
 801540c:	4b1f      	ldr	r3, [pc, #124]	; (801548c <micros_init()+0x98>)
 801540e:	4628      	mov	r0, r5
 8015410:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8015414:	4669      	mov	r1, sp
 8015416:	9400      	str	r4, [sp, #0]
 8015418:	f8ad 4004 	strh.w	r4, [sp, #4]
 801541c:	9602      	str	r6, [sp, #8]
 801541e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8015422:	f7ff fa67 	bl	80148f4 <timer_init>
 8015426:	4628      	mov	r0, r5
 8015428:	4621      	mov	r1, r4
 801542a:	f7ff fc27 	bl	8014c7c <timer_master_slave_mode_config>
 801542e:	4628      	mov	r0, r5
 8015430:	2107      	movs	r1, #7
 8015432:	f7ff fc1b 	bl	8014c6c <timer_slave_mode_select>
 8015436:	2120      	movs	r1, #32
 8015438:	4628      	mov	r0, r5
 801543a:	f7ff fc07 	bl	8014c4c <timer_input_trigger_source_select>
 801543e:	4628      	mov	r0, r5
 8015440:	f7ff fab0 	bl	80149a4 <timer_enable>
 8015444:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8015448:	f240 6014 	movw	r0, #1556	; 0x614
 801544c:	f7ff f848 	bl	80144e0 <rcu_periph_clock_enable>
 8015450:	4628      	mov	r0, r5
 8015452:	f7ff f9a9 	bl	80147a8 <timer_deinit>
 8015456:	2377      	movs	r3, #119	; 0x77
 8015458:	626c      	str	r4, [r5, #36]	; 0x24
 801545a:	4669      	mov	r1, sp
 801545c:	4628      	mov	r0, r5
 801545e:	9300      	str	r3, [sp, #0]
 8015460:	f8ad 4004 	strh.w	r4, [sp, #4]
 8015464:	9602      	str	r6, [sp, #8]
 8015466:	f8ad 400c 	strh.w	r4, [sp, #12]
 801546a:	f7ff fa43 	bl	80148f4 <timer_init>
 801546e:	4621      	mov	r1, r4
 8015470:	4628      	mov	r0, r5
 8015472:	f7ff fc03 	bl	8014c7c <timer_master_slave_mode_config>
 8015476:	2120      	movs	r1, #32
 8015478:	4628      	mov	r0, r5
 801547a:	f7ff fbef 	bl	8014c5c <timer_master_output_trigger_source_select>
 801547e:	4628      	mov	r0, r5
 8015480:	f7ff fa90 	bl	80149a4 <timer_enable>
 8015484:	b004      	add	sp, #16
 8015486:	bd70      	pop	{r4, r5, r6, pc}
 8015488:	40014c00 	andmi	r4, r1, r0, lsl #24
 801548c:	40014000 	andmi	r4, r1, r0

08015490 <udelay_init()>:
 8015490:	4a07      	ldr	r2, [pc, #28]	; (80154b0 <udelay_init()+0x20>)
 8015492:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8015496:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801549a:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 801549e:	2200      	movs	r2, #0
 80154a0:	4b04      	ldr	r3, [pc, #16]	; (80154b4 <udelay_init()+0x24>)
 80154a2:	605a      	str	r2, [r3, #4]
 80154a4:	681a      	ldr	r2, [r3, #0]
 80154a6:	f042 0201 	orr.w	r2, r2, #1
 80154aa:	601a      	str	r2, [r3, #0]
 80154ac:	4770      	bx	lr
 80154ae:	bf00      	nop
 80154b0:	e000ed00 	and	lr, r0, r0, lsl #26
 80154b4:	e0001000 	and	r1, r0, r0

080154b8 <udelay(unsigned int, unsigned int)>:
 80154b8:	2378      	movs	r3, #120	; 0x78
 80154ba:	b530      	push	{r4, r5, lr}
 80154bc:	4358      	muls	r0, r3
 80154be:	b909      	cbnz	r1, 80154c4 <udelay(unsigned int, unsigned int)+0xc>
 80154c0:	4b08      	ldr	r3, [pc, #32]	; (80154e4 <udelay(unsigned int, unsigned int)+0x2c>)
 80154c2:	6859      	ldr	r1, [r3, #4]
 80154c4:	2300      	movs	r3, #0
 80154c6:	4c07      	ldr	r4, [pc, #28]	; (80154e4 <udelay(unsigned int, unsigned int)+0x2c>)
 80154c8:	6862      	ldr	r2, [r4, #4]
 80154ca:	4291      	cmp	r1, r2
 80154cc:	d0fc      	beq.n	80154c8 <udelay(unsigned int, unsigned int)+0x10>
 80154ce:	bf2a      	itet	cs
 80154d0:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80154d4:	189b      	addcc	r3, r3, r2
 80154d6:	195b      	addcs	r3, r3, r5
 80154d8:	1a5b      	subs	r3, r3, r1
 80154da:	4283      	cmp	r3, r0
 80154dc:	d300      	bcc.n	80154e0 <udelay(unsigned int, unsigned int)+0x28>
 80154de:	bd30      	pop	{r4, r5, pc}
 80154e0:	4611      	mov	r1, r2
 80154e2:	e7f1      	b.n	80154c8 <udelay(unsigned int, unsigned int)+0x10>
 80154e4:	e0001000 	and	r1, r0, r0

080154e8 <emac_start(unsigned char*)>:
 80154e8:	b538      	push	{r3, r4, r5, lr}
 80154ea:	4605      	mov	r5, r0
 80154ec:	f240 6002 	movw	r0, #1538	; 0x602
 80154f0:	f7fe fff6 	bl	80144e0 <rcu_periph_clock_enable>
 80154f4:	f240 6003 	movw	r0, #1539	; 0x603
 80154f8:	f7fe fff2 	bl	80144e0 <rcu_periph_clock_enable>
 80154fc:	f240 6004 	movw	r0, #1540	; 0x604
 8015500:	f7fe ffee 	bl	80144e0 <rcu_periph_clock_enable>
 8015504:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8015508:	f7fe ffea 	bl	80144e0 <rcu_periph_clock_enable>
 801550c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015510:	2203      	movs	r2, #3
 8015512:	2118      	movs	r1, #24
 8015514:	4844      	ldr	r0, [pc, #272]	; (8015628 <emac_start(unsigned char*)+0x140>)
 8015516:	f7fe ff4b 	bl	80143b0 <gpio_init>
 801551a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 801551e:	f7ff f80f 	bl	8014540 <rcu_pll2_config>
 8015522:	201c      	movs	r0, #28
 8015524:	f7ff f8b6 	bl	8014694 <rcu_osci_on>
 8015528:	201c      	movs	r0, #28
 801552a:	f7ff f843 	bl	80145b4 <rcu_osci_stab_wait>
 801552e:	2100      	movs	r1, #0
 8015530:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8015534:	f7fe fff4 	bl	8014520 <rcu_ckout0_config>
 8015538:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801553c:	f7fe ffbc 	bl	80144b8 <gpio_ethernet_phy_select>
 8015540:	2302      	movs	r3, #2
 8015542:	2203      	movs	r2, #3
 8015544:	2104      	movs	r1, #4
 8015546:	4838      	ldr	r0, [pc, #224]	; (8015628 <emac_start(unsigned char*)+0x140>)
 8015548:	f7fe ff32 	bl	80143b0 <gpio_init>
 801554c:	2304      	movs	r3, #4
 801554e:	2203      	movs	r2, #3
 8015550:	2118      	movs	r1, #24
 8015552:	4835      	ldr	r0, [pc, #212]	; (8015628 <emac_start(unsigned char*)+0x140>)
 8015554:	f7fe ff2c 	bl	80143b0 <gpio_init>
 8015558:	2380      	movs	r3, #128	; 0x80
 801555a:	2203      	movs	r2, #3
 801555c:	2104      	movs	r1, #4
 801555e:	4832      	ldr	r0, [pc, #200]	; (8015628 <emac_start(unsigned char*)+0x140>)
 8015560:	f7fe ff26 	bl	80143b0 <gpio_init>
 8015564:	2302      	movs	r3, #2
 8015566:	2203      	movs	r2, #3
 8015568:	2118      	movs	r1, #24
 801556a:	4830      	ldr	r0, [pc, #192]	; (801562c <emac_start(unsigned char*)+0x144>)
 801556c:	f7fe ff20 	bl	80143b0 <gpio_init>
 8015570:	2310      	movs	r3, #16
 8015572:	2203      	movs	r2, #3
 8015574:	2104      	movs	r1, #4
 8015576:	482d      	ldr	r0, [pc, #180]	; (801562c <emac_start(unsigned char*)+0x144>)
 8015578:	f7fe ff1a 	bl	80143b0 <gpio_init>
 801557c:	2320      	movs	r3, #32
 801557e:	2203      	movs	r2, #3
 8015580:	2104      	movs	r1, #4
 8015582:	482a      	ldr	r0, [pc, #168]	; (801562c <emac_start(unsigned char*)+0x144>)
 8015584:	f7fe ff14 	bl	80143b0 <gpio_init>
 8015588:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801558c:	2203      	movs	r2, #3
 801558e:	2118      	movs	r1, #24
 8015590:	4827      	ldr	r0, [pc, #156]	; (8015630 <emac_start(unsigned char*)+0x148>)
 8015592:	f7fe ff0d 	bl	80143b0 <gpio_init>
 8015596:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801559a:	2203      	movs	r2, #3
 801559c:	2118      	movs	r1, #24
 801559e:	4824      	ldr	r0, [pc, #144]	; (8015630 <emac_start(unsigned char*)+0x148>)
 80155a0:	f7fe ff06 	bl	80143b0 <gpio_init>
 80155a4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80155a8:	2203      	movs	r2, #3
 80155aa:	2118      	movs	r1, #24
 80155ac:	4820      	ldr	r0, [pc, #128]	; (8015630 <emac_start(unsigned char*)+0x148>)
 80155ae:	f7fe feff 	bl	80143b0 <gpio_init>
 80155b2:	f240 500e 	movw	r0, #1294	; 0x50e
 80155b6:	f7fe ff93 	bl	80144e0 <rcu_periph_clock_enable>
 80155ba:	f240 500f 	movw	r0, #1295	; 0x50f
 80155be:	f7fe ff8f 	bl	80144e0 <rcu_periph_clock_enable>
 80155c2:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80155c6:	f7fe ff8b 	bl	80144e0 <rcu_periph_clock_enable>
 80155ca:	f000 fcdf 	bl	8015f8c <enet_deinit>
 80155ce:	f000 f93b 	bl	8015848 <enet_software_reset>
 80155d2:	4604      	mov	r4, r0
 80155d4:	b138      	cbz	r0, 80155e6 <emac_start(unsigned char*)+0xfe>
 80155d6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80155da:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80155de:	2001      	movs	r0, #1
 80155e0:	f000 fab6 	bl	8015b50 <enet_init>
 80155e4:	4604      	mov	r4, r0
 80155e6:	4628      	mov	r0, r5
 80155e8:	f000 fd8c 	bl	8016104 <mac_address_get(unsigned char*)>
 80155ec:	4629      	mov	r1, r5
 80155ee:	2000      	movs	r0, #0
 80155f0:	f000 fa0e 	bl	8015a10 <enet_mac_address_set>
 80155f4:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80155f8:	f000 f93a 	bl	8015870 <enet_descriptors_chain_init>
 80155fc:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8015600:	f000 f936 	bl	8015870 <enet_descriptors_chain_init>
 8015604:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8015608:	480a      	ldr	r0, [pc, #40]	; (8015634 <emac_start(unsigned char*)+0x14c>)
 801560a:	f000 f9fb 	bl	8015a04 <enet_transmit_checksum_config>
 801560e:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8015612:	4809      	ldr	r0, [pc, #36]	; (8015638 <emac_start(unsigned char*)+0x150>)
 8015614:	f000 f9f6 	bl	8015a04 <enet_transmit_checksum_config>
 8015618:	f000 fc30 	bl	8015e7c <enet_enable>
 801561c:	fab4 f084 	clz	r0, r4
 8015620:	0940      	lsrs	r0, r0, #5
 8015622:	4240      	negs	r0, r0
 8015624:	bd38      	pop	{r3, r4, r5, pc}
 8015626:	bf00      	nop
 8015628:	40010800 	andmi	r0, r1, r0, lsl #16
 801562c:	40011000 	andmi	r1, r1, r0
 8015630:	40010c00 	andmi	r0, r1, r0, lsl #24
 8015634:	2002b258 	andcs	fp, r2, r8, asr r2
 8015638:	2002b268 	andcs	fp, r2, r8, ror #4

0801563c <net::link_register_read()>:
 801563c:	b507      	push	{r0, r1, r2, lr}
 801563e:	2201      	movs	r2, #1
 8015640:	f10d 0306 	add.w	r3, sp, #6
 8015644:	4611      	mov	r1, r2
 8015646:	2000      	movs	r0, #0
 8015648:	f000 f9fa 	bl	8015a40 <enet_phy_write_read>
 801564c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015650:	f080 0004 	eor.w	r0, r0, #4
 8015654:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8015658:	b003      	add	sp, #12
 801565a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08015660 <adc_mode_config>:
 8015660:	4b06      	ldr	r3, [pc, #24]	; (801567c <adc_mode_config+0x1c>)
 8015662:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8015666:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 801566a:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801566e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8015672:	4302      	orrs	r2, r0
 8015674:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8015678:	4770      	bx	lr
 801567a:	bf00      	nop
 801567c:	40012000 	andmi	r2, r1, r0

08015680 <adc_special_function_config>:
 8015680:	b510      	push	{r4, lr}
 8015682:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8015686:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 801568a:	f001 0102 	and.w	r1, r1, #2
 801568e:	b17a      	cbz	r2, 80156b0 <adc_special_function_config+0x30>
 8015690:	b11b      	cbz	r3, 801569a <adc_special_function_config+0x1a>
 8015692:	6843      	ldr	r3, [r0, #4]
 8015694:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015698:	6043      	str	r3, [r0, #4]
 801569a:	b11c      	cbz	r4, 80156a4 <adc_special_function_config+0x24>
 801569c:	6843      	ldr	r3, [r0, #4]
 801569e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80156a2:	6043      	str	r3, [r0, #4]
 80156a4:	b119      	cbz	r1, 80156ae <adc_special_function_config+0x2e>
 80156a6:	6883      	ldr	r3, [r0, #8]
 80156a8:	f043 0302 	orr.w	r3, r3, #2
 80156ac:	6083      	str	r3, [r0, #8]
 80156ae:	bd10      	pop	{r4, pc}
 80156b0:	b11b      	cbz	r3, 80156ba <adc_special_function_config+0x3a>
 80156b2:	6843      	ldr	r3, [r0, #4]
 80156b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80156b8:	6043      	str	r3, [r0, #4]
 80156ba:	b11c      	cbz	r4, 80156c4 <adc_special_function_config+0x44>
 80156bc:	6843      	ldr	r3, [r0, #4]
 80156be:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80156c2:	6043      	str	r3, [r0, #4]
 80156c4:	2900      	cmp	r1, #0
 80156c6:	d0f2      	beq.n	80156ae <adc_special_function_config+0x2e>
 80156c8:	6883      	ldr	r3, [r0, #8]
 80156ca:	f023 0302 	bic.w	r3, r3, #2
 80156ce:	e7ed      	b.n	80156ac <adc_special_function_config+0x2c>

080156d0 <adc_data_alignment_config>:
 80156d0:	6883      	ldr	r3, [r0, #8]
 80156d2:	b119      	cbz	r1, 80156dc <adc_data_alignment_config+0xc>
 80156d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80156d8:	6083      	str	r3, [r0, #8]
 80156da:	4770      	bx	lr
 80156dc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80156e0:	e7fa      	b.n	80156d8 <adc_data_alignment_config+0x8>

080156e2 <adc_enable>:
 80156e2:	6883      	ldr	r3, [r0, #8]
 80156e4:	07db      	lsls	r3, r3, #31
 80156e6:	bf5e      	ittt	pl
 80156e8:	6883      	ldrpl	r3, [r0, #8]
 80156ea:	f043 0301 	orrpl.w	r3, r3, #1
 80156ee:	6083      	strpl	r3, [r0, #8]
 80156f0:	4770      	bx	lr

080156f2 <adc_calibration_enable>:
 80156f2:	6883      	ldr	r3, [r0, #8]
 80156f4:	f100 0208 	add.w	r2, r0, #8
 80156f8:	f043 0308 	orr.w	r3, r3, #8
 80156fc:	6083      	str	r3, [r0, #8]
 80156fe:	6813      	ldr	r3, [r2, #0]
 8015700:	0719      	lsls	r1, r3, #28
 8015702:	d4fc      	bmi.n	80156fe <adc_calibration_enable+0xc>
 8015704:	6883      	ldr	r3, [r0, #8]
 8015706:	f043 0304 	orr.w	r3, r3, #4
 801570a:	6083      	str	r3, [r0, #8]
 801570c:	6813      	ldr	r3, [r2, #0]
 801570e:	075b      	lsls	r3, r3, #29
 8015710:	d4fc      	bmi.n	801570c <adc_calibration_enable+0x1a>
 8015712:	4770      	bx	lr

08015714 <adc_tempsensor_vrefint_enable>:
 8015714:	4a03      	ldr	r2, [pc, #12]	; (8015724 <adc_tempsensor_vrefint_enable+0x10>)
 8015716:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 801571a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 801571e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8015722:	4770      	bx	lr
 8015724:	40012000 	andmi	r2, r1, r0

08015728 <adc_channel_length_config>:
 8015728:	2901      	cmp	r1, #1
 801572a:	d002      	beq.n	8015732 <adc_channel_length_config+0xa>
 801572c:	2902      	cmp	r1, #2
 801572e:	d00c      	beq.n	801574a <adc_channel_length_config+0x22>
 8015730:	4770      	bx	lr
 8015732:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015734:	3a01      	subs	r2, #1
 8015736:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801573a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801573c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801573e:	0512      	lsls	r2, r2, #20
 8015740:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8015744:	431a      	orrs	r2, r3
 8015746:	62c2      	str	r2, [r0, #44]	; 0x2c
 8015748:	4770      	bx	lr
 801574a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801574c:	3a01      	subs	r2, #1
 801574e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8015752:	6383      	str	r3, [r0, #56]	; 0x38
 8015754:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8015756:	0512      	lsls	r2, r2, #20
 8015758:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801575c:	431a      	orrs	r2, r3
 801575e:	6382      	str	r2, [r0, #56]	; 0x38
 8015760:	4770      	bx	lr

08015762 <adc_inserted_channel_config>:
 8015762:	b530      	push	{r4, r5, lr}
 8015764:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8015766:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8015768:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801576c:	1a61      	subs	r1, r4, r1
 801576e:	f06f 0404 	mvn.w	r4, #4
 8015772:	4361      	muls	r1, r4
 8015774:	241f      	movs	r4, #31
 8015776:	310f      	adds	r1, #15
 8015778:	408c      	lsls	r4, r1
 801577a:	ea25 0504 	bic.w	r5, r5, r4
 801577e:	fa02 f101 	lsl.w	r1, r2, r1
 8015782:	4329      	orrs	r1, r5
 8015784:	2a09      	cmp	r2, #9
 8015786:	6381      	str	r1, [r0, #56]	; 0x38
 8015788:	d80b      	bhi.n	80157a2 <adc_inserted_channel_config+0x40>
 801578a:	2407      	movs	r4, #7
 801578c:	6901      	ldr	r1, [r0, #16]
 801578e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015792:	4094      	lsls	r4, r2
 8015794:	ea21 0104 	bic.w	r1, r1, r4
 8015798:	fa03 f202 	lsl.w	r2, r3, r2
 801579c:	430a      	orrs	r2, r1
 801579e:	6102      	str	r2, [r0, #16]
 80157a0:	bd30      	pop	{r4, r5, pc}
 80157a2:	2a11      	cmp	r2, #17
 80157a4:	d8fc      	bhi.n	80157a0 <adc_inserted_channel_config+0x3e>
 80157a6:	2407      	movs	r4, #7
 80157a8:	3a0a      	subs	r2, #10
 80157aa:	68c1      	ldr	r1, [r0, #12]
 80157ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80157b0:	4094      	lsls	r4, r2
 80157b2:	ea21 0104 	bic.w	r1, r1, r4
 80157b6:	4093      	lsls	r3, r2
 80157b8:	430b      	orrs	r3, r1
 80157ba:	60c3      	str	r3, [r0, #12]
 80157bc:	e7f0      	b.n	80157a0 <adc_inserted_channel_config+0x3e>

080157be <adc_external_trigger_source_config>:
 80157be:	2901      	cmp	r1, #1
 80157c0:	d002      	beq.n	80157c8 <adc_external_trigger_source_config+0xa>
 80157c2:	2902      	cmp	r1, #2
 80157c4:	d008      	beq.n	80157d8 <adc_external_trigger_source_config+0x1a>
 80157c6:	4770      	bx	lr
 80157c8:	6883      	ldr	r3, [r0, #8]
 80157ca:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80157ce:	6083      	str	r3, [r0, #8]
 80157d0:	6883      	ldr	r3, [r0, #8]
 80157d2:	4313      	orrs	r3, r2
 80157d4:	6083      	str	r3, [r0, #8]
 80157d6:	4770      	bx	lr
 80157d8:	6883      	ldr	r3, [r0, #8]
 80157da:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80157de:	e7f6      	b.n	80157ce <adc_external_trigger_source_config+0x10>

080157e0 <adc_external_trigger_config>:
 80157e0:	f001 0301 	and.w	r3, r1, #1
 80157e4:	f001 0102 	and.w	r1, r1, #2
 80157e8:	b152      	cbz	r2, 8015800 <adc_external_trigger_config+0x20>
 80157ea:	b11b      	cbz	r3, 80157f4 <adc_external_trigger_config+0x14>
 80157ec:	6883      	ldr	r3, [r0, #8]
 80157ee:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80157f2:	6083      	str	r3, [r0, #8]
 80157f4:	b119      	cbz	r1, 80157fe <adc_external_trigger_config+0x1e>
 80157f6:	6883      	ldr	r3, [r0, #8]
 80157f8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80157fc:	6083      	str	r3, [r0, #8]
 80157fe:	4770      	bx	lr
 8015800:	b11b      	cbz	r3, 801580a <adc_external_trigger_config+0x2a>
 8015802:	6883      	ldr	r3, [r0, #8]
 8015804:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8015808:	6083      	str	r3, [r0, #8]
 801580a:	2900      	cmp	r1, #0
 801580c:	d0f7      	beq.n	80157fe <adc_external_trigger_config+0x1e>
 801580e:	6883      	ldr	r3, [r0, #8]
 8015810:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8015814:	e7f2      	b.n	80157fc <adc_external_trigger_config+0x1c>

08015816 <adc_software_trigger_enable>:
 8015816:	07ca      	lsls	r2, r1, #31
 8015818:	bf42      	ittt	mi
 801581a:	6883      	ldrmi	r3, [r0, #8]
 801581c:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8015820:	6083      	strmi	r3, [r0, #8]
 8015822:	078b      	lsls	r3, r1, #30
 8015824:	bf42      	ittt	mi
 8015826:	6883      	ldrmi	r3, [r0, #8]
 8015828:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801582c:	6083      	strmi	r3, [r0, #8]
 801582e:	4770      	bx	lr

08015830 <enet_delay>:
 8015830:	2300      	movs	r3, #0
 8015832:	b082      	sub	sp, #8
 8015834:	9301      	str	r3, [sp, #4]
 8015836:	9001      	str	r0, [sp, #4]
 8015838:	9b01      	ldr	r3, [sp, #4]
 801583a:	b90b      	cbnz	r3, 8015840 <enet_delay+0x10>
 801583c:	b002      	add	sp, #8
 801583e:	4770      	bx	lr
 8015840:	9b01      	ldr	r3, [sp, #4]
 8015842:	3b01      	subs	r3, #1
 8015844:	9301      	str	r3, [sp, #4]
 8015846:	e7f7      	b.n	8015838 <enet_delay+0x8>

08015848 <enet_software_reset>:
 8015848:	4b07      	ldr	r3, [pc, #28]	; (8015868 <enet_software_reset+0x20>)
 801584a:	681a      	ldr	r2, [r3, #0]
 801584c:	f042 0201 	orr.w	r2, r2, #1
 8015850:	601a      	str	r2, [r3, #0]
 8015852:	4a06      	ldr	r2, [pc, #24]	; (801586c <enet_software_reset+0x24>)
 8015854:	6819      	ldr	r1, [r3, #0]
 8015856:	07c9      	lsls	r1, r1, #31
 8015858:	d501      	bpl.n	801585e <enet_software_reset+0x16>
 801585a:	3a01      	subs	r2, #1
 801585c:	d1fa      	bne.n	8015854 <enet_software_reset+0xc>
 801585e:	6818      	ldr	r0, [r3, #0]
 8015860:	43c0      	mvns	r0, r0
 8015862:	f000 0001 	and.w	r0, r0, #1
 8015866:	4770      	bx	lr
 8015868:	40029000 	andmi	r9, r2, r0
 801586c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015870 <enet_descriptors_chain_init>:
 8015870:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8015874:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015876:	4a19      	ldr	r2, [pc, #100]	; (80158dc <enet_descriptors_chain_init+0x6c>)
 8015878:	d125      	bne.n	80158c6 <enet_descriptors_chain_init+0x56>
 801587a:	2500      	movs	r5, #0
 801587c:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8015880:	2002      	movs	r0, #2
 8015882:	4b17      	ldr	r3, [pc, #92]	; (80158e0 <enet_descriptors_chain_init+0x70>)
 8015884:	4c17      	ldr	r4, [pc, #92]	; (80158e4 <enet_descriptors_chain_init+0x74>)
 8015886:	6113      	str	r3, [r2, #16]
 8015888:	4a17      	ldr	r2, [pc, #92]	; (80158e8 <enet_descriptors_chain_init+0x78>)
 801588a:	6013      	str	r3, [r2, #0]
 801588c:	2200      	movs	r2, #0
 801588e:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8015892:	4916      	ldr	r1, [pc, #88]	; (80158ec <enet_descriptors_chain_init+0x7c>)
 8015894:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8015898:	600a      	str	r2, [r1, #0]
 801589a:	4915      	ldr	r1, [pc, #84]	; (80158f0 <enet_descriptors_chain_init+0x80>)
 801589c:	600a      	str	r2, [r1, #0]
 801589e:	f103 0110 	add.w	r1, r3, #16
 80158a2:	fb0e 4702 	mla	r7, lr, r2, r4
 80158a6:	f841 7c08 	str.w	r7, [r1, #-8]
 80158aa:	4594      	cmp	ip, r2
 80158ac:	bf94      	ite	ls
 80158ae:	461f      	movls	r7, r3
 80158b0:	460f      	movhi	r7, r1
 80158b2:	3201      	adds	r2, #1
 80158b4:	4290      	cmp	r0, r2
 80158b6:	e941 6504 	strd	r6, r5, [r1, #-16]
 80158ba:	f841 7c04 	str.w	r7, [r1, #-4]
 80158be:	f101 0110 	add.w	r1, r1, #16
 80158c2:	d1ee      	bne.n	80158a2 <enet_descriptors_chain_init+0x32>
 80158c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80158c6:	4b0b      	ldr	r3, [pc, #44]	; (80158f4 <enet_descriptors_chain_init+0x84>)
 80158c8:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80158cc:	60d3      	str	r3, [r2, #12]
 80158ce:	4a0a      	ldr	r2, [pc, #40]	; (80158f8 <enet_descriptors_chain_init+0x88>)
 80158d0:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80158d4:	2022      	movs	r0, #34	; 0x22
 80158d6:	4c09      	ldr	r4, [pc, #36]	; (80158fc <enet_descriptors_chain_init+0x8c>)
 80158d8:	6013      	str	r3, [r2, #0]
 80158da:	e7d7      	b.n	801588c <enet_descriptors_chain_init+0x1c>
 80158dc:	40029000 	andmi	r9, r2, r0
 80158e0:	2002b258 	andcs	fp, r2, r8, asr r2
 80158e4:	2002a670 	andcs	sl, r2, r0, ror r6
 80158e8:	2001d9a8 	andcs	sp, r1, r8, lsr #19
 80158ec:	2001d99c 	mulcs	r1, ip, r9
 80158f0:	2001d9a0 	andcs	sp, r1, r0, lsr #19
 80158f4:	2002a450 	andcs	sl, r2, r0, asr r4
 80158f8:	2001d9a4 	andcs	sp, r1, r4, lsr #19
 80158fc:	2001d9e8 	andcs	sp, r1, r8, ror #19

08015900 <enet_frame_receive>:
 8015900:	4a1d      	ldr	r2, [pc, #116]	; (8015978 <enet_frame_receive+0x78>)
 8015902:	b510      	push	{r4, lr}
 8015904:	6813      	ldr	r3, [r2, #0]
 8015906:	681b      	ldr	r3, [r3, #0]
 8015908:	2b00      	cmp	r3, #0
 801590a:	db33      	blt.n	8015974 <enet_frame_receive+0x74>
 801590c:	b970      	cbnz	r0, 801592c <enet_frame_receive+0x2c>
 801590e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8015912:	6813      	ldr	r3, [r2, #0]
 8015914:	6019      	str	r1, [r3, #0]
 8015916:	4919      	ldr	r1, [pc, #100]	; (801597c <enet_frame_receive+0x7c>)
 8015918:	6948      	ldr	r0, [r1, #20]
 801591a:	0604      	lsls	r4, r0, #24
 801591c:	d419      	bmi.n	8015952 <enet_frame_receive+0x52>
 801591e:	6859      	ldr	r1, [r3, #4]
 8015920:	0448      	lsls	r0, r1, #17
 8015922:	d51b      	bpl.n	801595c <enet_frame_receive+0x5c>
 8015924:	68db      	ldr	r3, [r3, #12]
 8015926:	2001      	movs	r0, #1
 8015928:	6013      	str	r3, [r2, #0]
 801592a:	bd10      	pop	{r4, pc}
 801592c:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8015930:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8015934:	d11e      	bne.n	8015974 <enet_frame_receive+0x74>
 8015936:	f3c3 430d 	ubfx	r3, r3, #16, #14
 801593a:	3b04      	subs	r3, #4
 801593c:	428b      	cmp	r3, r1
 801593e:	d819      	bhi.n	8015974 <enet_frame_receive+0x74>
 8015940:	2100      	movs	r1, #0
 8015942:	4299      	cmp	r1, r3
 8015944:	6814      	ldr	r4, [r2, #0]
 8015946:	d2e2      	bcs.n	801590e <enet_frame_receive+0xe>
 8015948:	68a4      	ldr	r4, [r4, #8]
 801594a:	5d0c      	ldrb	r4, [r1, r4]
 801594c:	5444      	strb	r4, [r0, r1]
 801594e:	3101      	adds	r1, #1
 8015950:	e7f7      	b.n	8015942 <enet_frame_receive+0x42>
 8015952:	2080      	movs	r0, #128	; 0x80
 8015954:	6148      	str	r0, [r1, #20]
 8015956:	2000      	movs	r0, #0
 8015958:	6088      	str	r0, [r1, #8]
 801595a:	e7e0      	b.n	801591e <enet_frame_receive+0x1e>
 801595c:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8015960:	4906      	ldr	r1, [pc, #24]	; (801597c <enet_frame_receive+0x7c>)
 8015962:	bf05      	ittet	eq
 8015964:	3310      	addeq	r3, #16
 8015966:	6809      	ldreq	r1, [r1, #0]
 8015968:	68cb      	ldrne	r3, [r1, #12]
 801596a:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801596e:	bf08      	it	eq
 8015970:	185b      	addeq	r3, r3, r1
 8015972:	e7d8      	b.n	8015926 <enet_frame_receive+0x26>
 8015974:	2000      	movs	r0, #0
 8015976:	e7d8      	b.n	801592a <enet_frame_receive+0x2a>
 8015978:	2001d9a4 	andcs	sp, r1, r4, lsr #19
 801597c:	40029000 	andmi	r9, r2, r0

08015980 <enet_frame_transmit>:
 8015980:	4a1e      	ldr	r2, [pc, #120]	; (80159fc <enet_frame_transmit+0x7c>)
 8015982:	b530      	push	{r4, r5, lr}
 8015984:	6813      	ldr	r3, [r2, #0]
 8015986:	681b      	ldr	r3, [r3, #0]
 8015988:	2b00      	cmp	r3, #0
 801598a:	db34      	blt.n	80159f6 <enet_frame_transmit+0x76>
 801598c:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8015990:	4299      	cmp	r1, r3
 8015992:	d830      	bhi.n	80159f6 <enet_frame_transmit+0x76>
 8015994:	b9e8      	cbnz	r0, 80159d2 <enet_frame_transmit+0x52>
 8015996:	6813      	ldr	r3, [r2, #0]
 8015998:	4819      	ldr	r0, [pc, #100]	; (8015a00 <enet_frame_transmit+0x80>)
 801599a:	6059      	str	r1, [r3, #4]
 801599c:	6819      	ldr	r1, [r3, #0]
 801599e:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80159a2:	6019      	str	r1, [r3, #0]
 80159a4:	6941      	ldr	r1, [r0, #20]
 80159a6:	6944      	ldr	r4, [r0, #20]
 80159a8:	f001 0104 	and.w	r1, r1, #4
 80159ac:	f004 0420 	and.w	r4, r4, #32
 80159b0:	4321      	orrs	r1, r4
 80159b2:	d110      	bne.n	80159d6 <enet_frame_transmit+0x56>
 80159b4:	6819      	ldr	r1, [r3, #0]
 80159b6:	02c8      	lsls	r0, r1, #11
 80159b8:	d511      	bpl.n	80159de <enet_frame_transmit+0x5e>
 80159ba:	68db      	ldr	r3, [r3, #12]
 80159bc:	2001      	movs	r0, #1
 80159be:	6013      	str	r3, [r2, #0]
 80159c0:	bd30      	pop	{r4, r5, pc}
 80159c2:	5cc5      	ldrb	r5, [r0, r3]
 80159c4:	68a4      	ldr	r4, [r4, #8]
 80159c6:	551d      	strb	r5, [r3, r4]
 80159c8:	3301      	adds	r3, #1
 80159ca:	428b      	cmp	r3, r1
 80159cc:	6814      	ldr	r4, [r2, #0]
 80159ce:	d1f8      	bne.n	80159c2 <enet_frame_transmit+0x42>
 80159d0:	e7e1      	b.n	8015996 <enet_frame_transmit+0x16>
 80159d2:	2300      	movs	r3, #0
 80159d4:	e7f9      	b.n	80159ca <enet_frame_transmit+0x4a>
 80159d6:	6141      	str	r1, [r0, #20]
 80159d8:	2100      	movs	r1, #0
 80159da:	6041      	str	r1, [r0, #4]
 80159dc:	e7ea      	b.n	80159b4 <enet_frame_transmit+0x34>
 80159de:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80159e2:	4907      	ldr	r1, [pc, #28]	; (8015a00 <enet_frame_transmit+0x80>)
 80159e4:	bf05      	ittet	eq
 80159e6:	3310      	addeq	r3, #16
 80159e8:	6809      	ldreq	r1, [r1, #0]
 80159ea:	690b      	ldrne	r3, [r1, #16]
 80159ec:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80159f0:	bf08      	it	eq
 80159f2:	185b      	addeq	r3, r3, r1
 80159f4:	e7e2      	b.n	80159bc <enet_frame_transmit+0x3c>
 80159f6:	2000      	movs	r0, #0
 80159f8:	e7e2      	b.n	80159c0 <enet_frame_transmit+0x40>
 80159fa:	bf00      	nop
 80159fc:	2001d9a8 	andcs	sp, r1, r8, lsr #19
 8015a00:	40029000 	andmi	r9, r2, r0

08015a04 <enet_transmit_checksum_config>:
 8015a04:	6803      	ldr	r3, [r0, #0]
 8015a06:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8015a0a:	430b      	orrs	r3, r1
 8015a0c:	6003      	str	r3, [r0, #0]
 8015a0e:	4770      	bx	lr

08015a10 <enet_mac_address_set>:
 8015a10:	888a      	ldrh	r2, [r1, #4]
 8015a12:	4b03      	ldr	r3, [pc, #12]	; (8015a20 <enet_mac_address_set+0x10>)
 8015a14:	50c2      	str	r2, [r0, r3]
 8015a16:	680a      	ldr	r2, [r1, #0]
 8015a18:	3304      	adds	r3, #4
 8015a1a:	50c2      	str	r2, [r0, r3]
 8015a1c:	4770      	bx	lr
 8015a1e:	bf00      	nop
 8015a20:	40028040 	andmi	r8, r2, r0, asr #32

08015a24 <enet_rx_enable>:
 8015a24:	4a05      	ldr	r2, [pc, #20]	; (8015a3c <enet_rx_enable+0x18>)
 8015a26:	6813      	ldr	r3, [r2, #0]
 8015a28:	f043 0304 	orr.w	r3, r3, #4
 8015a2c:	6013      	str	r3, [r2, #0]
 8015a2e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8015a32:	6993      	ldr	r3, [r2, #24]
 8015a34:	f043 0302 	orr.w	r3, r3, #2
 8015a38:	6193      	str	r3, [r2, #24]
 8015a3a:	4770      	bx	lr
 8015a3c:	40028000 	andmi	r8, r2, r0

08015a40 <enet_phy_write_read>:
 8015a40:	b530      	push	{r4, r5, lr}
 8015a42:	4604      	mov	r4, r0
 8015a44:	4d13      	ldr	r5, [pc, #76]	; (8015a94 <enet_phy_write_read+0x54>)
 8015a46:	0192      	lsls	r2, r2, #6
 8015a48:	6928      	ldr	r0, [r5, #16]
 8015a4a:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8015a4e:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8015a52:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8015a56:	4302      	orrs	r2, r0
 8015a58:	02c9      	lsls	r1, r1, #11
 8015a5a:	b289      	uxth	r1, r1
 8015a5c:	2c02      	cmp	r4, #2
 8015a5e:	ea42 0204 	orr.w	r2, r2, r4
 8015a62:	ea42 0201 	orr.w	r2, r2, r1
 8015a66:	bf08      	it	eq
 8015a68:	8819      	ldrheq	r1, [r3, #0]
 8015a6a:	f042 0201 	orr.w	r2, r2, #1
 8015a6e:	bf08      	it	eq
 8015a70:	6169      	streq	r1, [r5, #20]
 8015a72:	612a      	str	r2, [r5, #16]
 8015a74:	4907      	ldr	r1, [pc, #28]	; (8015a94 <enet_phy_write_read+0x54>)
 8015a76:	4a08      	ldr	r2, [pc, #32]	; (8015a98 <enet_phy_write_read+0x58>)
 8015a78:	6908      	ldr	r0, [r1, #16]
 8015a7a:	07c0      	lsls	r0, r0, #31
 8015a7c:	d501      	bpl.n	8015a82 <enet_phy_write_read+0x42>
 8015a7e:	3a01      	subs	r2, #1
 8015a80:	d1fa      	bne.n	8015a78 <enet_phy_write_read+0x38>
 8015a82:	690a      	ldr	r2, [r1, #16]
 8015a84:	43d2      	mvns	r2, r2
 8015a86:	f002 0001 	and.w	r0, r2, #1
 8015a8a:	b90c      	cbnz	r4, 8015a90 <enet_phy_write_read+0x50>
 8015a8c:	694a      	ldr	r2, [r1, #20]
 8015a8e:	801a      	strh	r2, [r3, #0]
 8015a90:	bd30      	pop	{r4, r5, pc}
 8015a92:	bf00      	nop
 8015a94:	40028000 	andmi	r8, r2, r0
 8015a98:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015a9c <enet_phy_config>:
 8015a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015a9e:	4d22      	ldr	r5, [pc, #136]	; (8015b28 <enet_phy_config+0x8c>)
 8015aa0:	2001      	movs	r0, #1
 8015aa2:	692c      	ldr	r4, [r5, #16]
 8015aa4:	f7fe fdf8 	bl	8014698 <rcu_clock_freq_get>
 8015aa8:	4b20      	ldr	r3, [pc, #128]	; (8015b2c <enet_phy_config+0x90>)
 8015aaa:	4a21      	ldr	r2, [pc, #132]	; (8015b30 <enet_phy_config+0x94>)
 8015aac:	4403      	add	r3, r0
 8015aae:	4293      	cmp	r3, r2
 8015ab0:	f024 041c 	bic.w	r4, r4, #28
 8015ab4:	d21f      	bcs.n	8015af6 <enet_phy_config+0x5a>
 8015ab6:	f044 0408 	orr.w	r4, r4, #8
 8015aba:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015abe:	612c      	str	r4, [r5, #16]
 8015ac0:	2200      	movs	r2, #0
 8015ac2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ac6:	2101      	movs	r1, #1
 8015ac8:	2002      	movs	r0, #2
 8015aca:	f10d 0306 	add.w	r3, sp, #6
 8015ace:	f7ff ffb7 	bl	8015a40 <enet_phy_write_read>
 8015ad2:	b310      	cbz	r0, 8015b1a <enet_phy_config+0x7e>
 8015ad4:	2200      	movs	r2, #0
 8015ad6:	4817      	ldr	r0, [pc, #92]	; (8015b34 <enet_phy_config+0x98>)
 8015ad8:	f7ff feaa 	bl	8015830 <enet_delay>
 8015adc:	2101      	movs	r1, #1
 8015ade:	4610      	mov	r0, r2
 8015ae0:	f10d 0306 	add.w	r3, sp, #6
 8015ae4:	f7ff ffac 	bl	8015a40 <enet_phy_write_read>
 8015ae8:	b1b8      	cbz	r0, 8015b1a <enet_phy_config+0x7e>
 8015aea:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015aee:	43c0      	mvns	r0, r0
 8015af0:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8015af4:	e012      	b.n	8015b1c <enet_phy_config+0x80>
 8015af6:	4b10      	ldr	r3, [pc, #64]	; (8015b38 <enet_phy_config+0x9c>)
 8015af8:	4a10      	ldr	r2, [pc, #64]	; (8015b3c <enet_phy_config+0xa0>)
 8015afa:	4403      	add	r3, r0
 8015afc:	4293      	cmp	r3, r2
 8015afe:	d802      	bhi.n	8015b06 <enet_phy_config+0x6a>
 8015b00:	f044 040c 	orr.w	r4, r4, #12
 8015b04:	e7d9      	b.n	8015aba <enet_phy_config+0x1e>
 8015b06:	4b0e      	ldr	r3, [pc, #56]	; (8015b40 <enet_phy_config+0xa4>)
 8015b08:	4a0e      	ldr	r2, [pc, #56]	; (8015b44 <enet_phy_config+0xa8>)
 8015b0a:	4403      	add	r3, r0
 8015b0c:	4293      	cmp	r3, r2
 8015b0e:	d3d4      	bcc.n	8015aba <enet_phy_config+0x1e>
 8015b10:	4b0d      	ldr	r3, [pc, #52]	; (8015b48 <enet_phy_config+0xac>)
 8015b12:	4a0e      	ldr	r2, [pc, #56]	; (8015b4c <enet_phy_config+0xb0>)
 8015b14:	4403      	add	r3, r0
 8015b16:	4293      	cmp	r3, r2
 8015b18:	d902      	bls.n	8015b20 <enet_phy_config+0x84>
 8015b1a:	2000      	movs	r0, #0
 8015b1c:	b003      	add	sp, #12
 8015b1e:	bd30      	pop	{r4, r5, pc}
 8015b20:	f044 0404 	orr.w	r4, r4, #4
 8015b24:	e7c9      	b.n	8015aba <enet_phy_config+0x1e>
 8015b26:	bf00      	nop
 8015b28:	40028000 	andmi	r8, r2, r0
 8015b2c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8015b30:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8015b34:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015b38:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8015b3c:	017d783f 	cmneq	sp, pc, lsr r8
 8015b40:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8015b44:	02625a00 	rsbeq	r5, r2, #0, 20
 8015b48:	fa0a1f00 	blx	829d750 <__exidx_end+0x28456c>
 8015b4c:	01312d00 	teqeq	r1, r0, lsl #26

08015b50 <enet_init>:
 8015b50:	2300      	movs	r3, #0
 8015b52:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015b54:	4604      	mov	r4, r0
 8015b56:	460d      	mov	r5, r1
 8015b58:	4616      	mov	r6, r2
 8015b5a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015b5e:	f7ff ff9d 	bl	8015a9c <enet_phy_config>
 8015b62:	2800      	cmp	r0, #0
 8015b64:	d039      	beq.n	8015bda <enet_init+0x8a>
 8015b66:	4b3c      	ldr	r3, [pc, #240]	; (8015c58 <enet_init+0x108>)
 8015b68:	4a3c      	ldr	r2, [pc, #240]	; (8015c5c <enet_init+0x10c>)
 8015b6a:	6819      	ldr	r1, [r3, #0]
 8015b6c:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8015b70:	400a      	ands	r2, r1
 8015b72:	601a      	str	r2, [r3, #0]
 8015b74:	2200      	movs	r2, #0
 8015b76:	605a      	str	r2, [r3, #4]
 8015b78:	609a      	str	r2, [r3, #8]
 8015b7a:	60da      	str	r2, [r3, #12]
 8015b7c:	6999      	ldr	r1, [r3, #24]
 8015b7e:	2c01      	cmp	r4, #1
 8015b80:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8015b84:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8015b88:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8015b8c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8015b90:	6199      	str	r1, [r3, #24]
 8015b92:	4933      	ldr	r1, [pc, #204]	; (8015c60 <enet_init+0x110>)
 8015b94:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8015b98:	61da      	str	r2, [r3, #28]
 8015b9a:	6988      	ldr	r0, [r1, #24]
 8015b9c:	4b31      	ldr	r3, [pc, #196]	; (8015c64 <enet_init+0x114>)
 8015b9e:	ea03 0300 	and.w	r3, r3, r0
 8015ba2:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015ba6:	618b      	str	r3, [r1, #24]
 8015ba8:	680b      	ldr	r3, [r1, #0]
 8015baa:	4b2f      	ldr	r3, [pc, #188]	; (8015c68 <enet_init+0x118>)
 8015bac:	600b      	str	r3, [r1, #0]
 8015bae:	d01e      	beq.n	8015bee <enet_init+0x9e>
 8015bb0:	08e3      	lsrs	r3, r4, #3
 8015bb2:	0861      	lsrs	r1, r4, #1
 8015bb4:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015bb8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015bbc:	430b      	orrs	r3, r1
 8015bbe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015bc2:	2101      	movs	r1, #1
 8015bc4:	2002      	movs	r0, #2
 8015bc6:	f10d 0306 	add.w	r3, sp, #6
 8015bca:	f7ff ff39 	bl	8015a40 <enet_phy_write_read>
 8015bce:	b158      	cbz	r0, 8015be8 <enet_init+0x98>
 8015bd0:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8015bd4:	f7ff fe2c 	bl	8015830 <enet_delay>
 8015bd8:	e05d      	b.n	8015c96 <enet_init+0x146>
 8015bda:	4824      	ldr	r0, [pc, #144]	; (8015c6c <enet_init+0x11c>)
 8015bdc:	f7ff fe28 	bl	8015830 <enet_delay>
 8015be0:	f7ff ff5c 	bl	8015a9c <enet_phy_config>
 8015be4:	2800      	cmp	r0, #0
 8015be6:	d1be      	bne.n	8015b66 <enet_init+0x16>
 8015be8:	2000      	movs	r0, #0
 8015bea:	b003      	add	sp, #12
 8015bec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015bee:	4614      	mov	r4, r2
 8015bf0:	4f1f      	ldr	r7, [pc, #124]	; (8015c70 <enet_init+0x120>)
 8015bf2:	2201      	movs	r2, #1
 8015bf4:	2000      	movs	r0, #0
 8015bf6:	4611      	mov	r1, r2
 8015bf8:	f10d 0306 	add.w	r3, sp, #6
 8015bfc:	f7ff ff20 	bl	8015a40 <enet_phy_write_read>
 8015c00:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015c04:	3401      	adds	r4, #1
 8015c06:	f002 0204 	and.w	r2, r2, #4
 8015c0a:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015c0e:	b912      	cbnz	r2, 8015c16 <enet_init+0xc6>
 8015c10:	42bc      	cmp	r4, r7
 8015c12:	d1ee      	bne.n	8015bf2 <enet_init+0xa2>
 8015c14:	e7e8      	b.n	8015be8 <enet_init+0x98>
 8015c16:	42bc      	cmp	r4, r7
 8015c18:	d0e6      	beq.n	8015be8 <enet_init+0x98>
 8015c1a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8015c1e:	2101      	movs	r1, #1
 8015c20:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015c24:	2002      	movs	r0, #2
 8015c26:	2200      	movs	r2, #0
 8015c28:	f7ff ff0a 	bl	8015a40 <enet_phy_write_read>
 8015c2c:	2800      	cmp	r0, #0
 8015c2e:	d0db      	beq.n	8015be8 <enet_init+0x98>
 8015c30:	2400      	movs	r4, #0
 8015c32:	4f0f      	ldr	r7, [pc, #60]	; (8015c70 <enet_init+0x120>)
 8015c34:	2201      	movs	r2, #1
 8015c36:	2000      	movs	r0, #0
 8015c38:	4611      	mov	r1, r2
 8015c3a:	f10d 0306 	add.w	r3, sp, #6
 8015c3e:	f7ff feff 	bl	8015a40 <enet_phy_write_read>
 8015c42:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015c46:	3401      	adds	r4, #1
 8015c48:	f002 0220 	and.w	r2, r2, #32
 8015c4c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015c50:	b982      	cbnz	r2, 8015c74 <enet_init+0x124>
 8015c52:	42bc      	cmp	r4, r7
 8015c54:	d1ee      	bne.n	8015c34 <enet_init+0xe4>
 8015c56:	e7c7      	b.n	8015be8 <enet_init+0x98>
 8015c58:	40028000 	andmi	r8, r2, r0
 8015c5c:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8015c60:	40029000 	andmi	r9, r2, r0
 8015c64:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8015c68:	02c16000 	sbceq	r6, r1, #0
 8015c6c:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8015c70:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015c74:	42bc      	cmp	r4, r7
 8015c76:	d0b7      	beq.n	8015be8 <enet_init+0x98>
 8015c78:	2101      	movs	r1, #1
 8015c7a:	2210      	movs	r2, #16
 8015c7c:	2000      	movs	r0, #0
 8015c7e:	f7ff fedf 	bl	8015a40 <enet_phy_write_read>
 8015c82:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8015c86:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8015c8a:	0799      	lsls	r1, r3, #30
 8015c8c:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8015c90:	d401      	bmi.n	8015c96 <enet_init+0x146>
 8015c92:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8015c96:	4b63      	ldr	r3, [pc, #396]	; (8015e24 <enet_init+0x2d4>)
 8015c98:	681a      	ldr	r2, [r3, #0]
 8015c9a:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8015c9e:	4314      	orrs	r4, r2
 8015ca0:	056a      	lsls	r2, r5, #21
 8015ca2:	601c      	str	r4, [r3, #0]
 8015ca4:	d50b      	bpl.n	8015cbe <enet_init+0x16e>
 8015ca6:	681a      	ldr	r2, [r3, #0]
 8015ca8:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8015cac:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8015cb0:	601a      	str	r2, [r3, #0]
 8015cb2:	4a5d      	ldr	r2, [pc, #372]	; (8015e28 <enet_init+0x2d8>)
 8015cb4:	6993      	ldr	r3, [r2, #24]
 8015cb6:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8015cba:	431d      	orrs	r5, r3
 8015cbc:	6195      	str	r5, [r2, #24]
 8015cbe:	4959      	ldr	r1, [pc, #356]	; (8015e24 <enet_init+0x2d4>)
 8015cc0:	684b      	ldr	r3, [r1, #4]
 8015cc2:	431e      	orrs	r6, r3
 8015cc4:	4b59      	ldr	r3, [pc, #356]	; (8015e2c <enet_init+0x2dc>)
 8015cc6:	604e      	str	r6, [r1, #4]
 8015cc8:	681a      	ldr	r2, [r3, #0]
 8015cca:	07d7      	lsls	r7, r2, #31
 8015ccc:	d510      	bpl.n	8015cf0 <enet_init+0x1a0>
 8015cce:	685a      	ldr	r2, [r3, #4]
 8015cd0:	680c      	ldr	r4, [r1, #0]
 8015cd2:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8015cd6:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8015cda:	4320      	orrs	r0, r4
 8015cdc:	6008      	str	r0, [r1, #0]
 8015cde:	4852      	ldr	r0, [pc, #328]	; (8015e28 <enet_init+0x2d8>)
 8015ce0:	0892      	lsrs	r2, r2, #2
 8015ce2:	6981      	ldr	r1, [r0, #24]
 8015ce4:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8015ce8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8015cec:	430a      	orrs	r2, r1
 8015cee:	6182      	str	r2, [r0, #24]
 8015cf0:	681a      	ldr	r2, [r3, #0]
 8015cf2:	0796      	lsls	r6, r2, #30
 8015cf4:	d508      	bpl.n	8015d08 <enet_init+0x1b8>
 8015cf6:	494c      	ldr	r1, [pc, #304]	; (8015e28 <enet_init+0x2d8>)
 8015cf8:	6898      	ldr	r0, [r3, #8]
 8015cfa:	680a      	ldr	r2, [r1, #0]
 8015cfc:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8015d00:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8015d04:	4302      	orrs	r2, r0
 8015d06:	600a      	str	r2, [r1, #0]
 8015d08:	681a      	ldr	r2, [r3, #0]
 8015d0a:	0755      	lsls	r5, r2, #29
 8015d0c:	d508      	bpl.n	8015d20 <enet_init+0x1d0>
 8015d0e:	4946      	ldr	r1, [pc, #280]	; (8015e28 <enet_init+0x2d8>)
 8015d10:	68d8      	ldr	r0, [r3, #12]
 8015d12:	680a      	ldr	r2, [r1, #0]
 8015d14:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8015d18:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8015d1c:	4302      	orrs	r2, r0
 8015d1e:	600a      	str	r2, [r1, #0]
 8015d20:	681a      	ldr	r2, [r3, #0]
 8015d22:	0714      	lsls	r4, r2, #28
 8015d24:	d508      	bpl.n	8015d38 <enet_init+0x1e8>
 8015d26:	4940      	ldr	r1, [pc, #256]	; (8015e28 <enet_init+0x2d8>)
 8015d28:	6918      	ldr	r0, [r3, #16]
 8015d2a:	680a      	ldr	r2, [r1, #0]
 8015d2c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8015d30:	f022 0202 	bic.w	r2, r2, #2
 8015d34:	4302      	orrs	r2, r0
 8015d36:	600a      	str	r2, [r1, #0]
 8015d38:	681a      	ldr	r2, [r3, #0]
 8015d3a:	06d0      	lsls	r0, r2, #27
 8015d3c:	d506      	bpl.n	8015d4c <enet_init+0x1fc>
 8015d3e:	493a      	ldr	r1, [pc, #232]	; (8015e28 <enet_init+0x2d8>)
 8015d40:	4a3b      	ldr	r2, [pc, #236]	; (8015e30 <enet_init+0x2e0>)
 8015d42:	6988      	ldr	r0, [r1, #24]
 8015d44:	4002      	ands	r2, r0
 8015d46:	6958      	ldr	r0, [r3, #20]
 8015d48:	4302      	orrs	r2, r0
 8015d4a:	618a      	str	r2, [r1, #24]
 8015d4c:	681a      	ldr	r2, [r3, #0]
 8015d4e:	0691      	lsls	r1, r2, #26
 8015d50:	d508      	bpl.n	8015d64 <enet_init+0x214>
 8015d52:	4935      	ldr	r1, [pc, #212]	; (8015e28 <enet_init+0x2d8>)
 8015d54:	6998      	ldr	r0, [r3, #24]
 8015d56:	698a      	ldr	r2, [r1, #24]
 8015d58:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8015d5c:	f022 0204 	bic.w	r2, r2, #4
 8015d60:	4302      	orrs	r2, r0
 8015d62:	618a      	str	r2, [r1, #24]
 8015d64:	681a      	ldr	r2, [r3, #0]
 8015d66:	0652      	lsls	r2, r2, #25
 8015d68:	d506      	bpl.n	8015d78 <enet_init+0x228>
 8015d6a:	492e      	ldr	r1, [pc, #184]	; (8015e24 <enet_init+0x2d4>)
 8015d6c:	69d8      	ldr	r0, [r3, #28]
 8015d6e:	69ca      	ldr	r2, [r1, #28]
 8015d70:	0c52      	lsrs	r2, r2, #17
 8015d72:	0452      	lsls	r2, r2, #17
 8015d74:	4302      	orrs	r2, r0
 8015d76:	61ca      	str	r2, [r1, #28]
 8015d78:	681a      	ldr	r2, [r3, #0]
 8015d7a:	0617      	lsls	r7, r2, #24
 8015d7c:	d517      	bpl.n	8015dae <enet_init+0x25e>
 8015d7e:	4c29      	ldr	r4, [pc, #164]	; (8015e24 <enet_init+0x2d4>)
 8015d80:	6a1a      	ldr	r2, [r3, #32]
 8015d82:	69a0      	ldr	r0, [r4, #24]
 8015d84:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8015d88:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8015d8c:	0400      	lsls	r0, r0, #16
 8015d8e:	0c00      	lsrs	r0, r0, #16
 8015d90:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8015d94:	4301      	orrs	r1, r0
 8015d96:	4824      	ldr	r0, [pc, #144]	; (8015e28 <enet_init+0x2d8>)
 8015d98:	61a1      	str	r1, [r4, #24]
 8015d9a:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8015d9e:	0a12      	lsrs	r2, r2, #8
 8015da0:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8015da4:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8015da8:	430a      	orrs	r2, r1
 8015daa:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8015dae:	681a      	ldr	r2, [r3, #0]
 8015db0:	05d6      	lsls	r6, r2, #23
 8015db2:	bf42      	ittt	mi
 8015db4:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8015db6:	4a1b      	ldrmi	r2, [pc, #108]	; (8015e24 <enet_init+0x2d4>)
 8015db8:	6091      	strmi	r1, [r2, #8]
 8015dba:	681a      	ldr	r2, [r3, #0]
 8015dbc:	0595      	lsls	r5, r2, #22
 8015dbe:	bf42      	ittt	mi
 8015dc0:	4a18      	ldrmi	r2, [pc, #96]	; (8015e24 <enet_init+0x2d4>)
 8015dc2:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8015dc4:	60d1      	strmi	r1, [r2, #12]
 8015dc6:	681a      	ldr	r2, [r3, #0]
 8015dc8:	0554      	lsls	r4, r2, #21
 8015dca:	d508      	bpl.n	8015dde <enet_init+0x28e>
 8015dcc:	4915      	ldr	r1, [pc, #84]	; (8015e24 <enet_init+0x2d4>)
 8015dce:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8015dd0:	684a      	ldr	r2, [r1, #4]
 8015dd2:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8015dd6:	f022 0206 	bic.w	r2, r2, #6
 8015dda:	4302      	orrs	r2, r0
 8015ddc:	604a      	str	r2, [r1, #4]
 8015dde:	681a      	ldr	r2, [r3, #0]
 8015de0:	0510      	lsls	r0, r2, #20
 8015de2:	d508      	bpl.n	8015df6 <enet_init+0x2a6>
 8015de4:	490f      	ldr	r1, [pc, #60]	; (8015e24 <enet_init+0x2d4>)
 8015de6:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8015de8:	680a      	ldr	r2, [r1, #0]
 8015dea:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8015dee:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8015df2:	4302      	orrs	r2, r0
 8015df4:	600a      	str	r2, [r1, #0]
 8015df6:	681a      	ldr	r2, [r3, #0]
 8015df8:	04d1      	lsls	r1, r2, #19
 8015dfa:	d506      	bpl.n	8015e0a <enet_init+0x2ba>
 8015dfc:	4909      	ldr	r1, [pc, #36]	; (8015e24 <enet_init+0x2d4>)
 8015dfe:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8015e00:	680a      	ldr	r2, [r1, #0]
 8015e02:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8015e06:	4302      	orrs	r2, r0
 8015e08:	600a      	str	r2, [r1, #0]
 8015e0a:	681a      	ldr	r2, [r3, #0]
 8015e0c:	0492      	lsls	r2, r2, #18
 8015e0e:	d506      	bpl.n	8015e1e <enet_init+0x2ce>
 8015e10:	4904      	ldr	r1, [pc, #16]	; (8015e24 <enet_init+0x2d4>)
 8015e12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015e14:	680a      	ldr	r2, [r1, #0]
 8015e16:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8015e1a:	4313      	orrs	r3, r2
 8015e1c:	600b      	str	r3, [r1, #0]
 8015e1e:	2001      	movs	r0, #1
 8015e20:	e6e3      	b.n	8015bea <enet_init+0x9a>
 8015e22:	bf00      	nop
 8015e24:	40028000 	andmi	r8, r2, r0
 8015e28:	40029000 	andmi	r9, r2, r0
 8015e2c:	2001d9ac 	andcs	sp, r1, ip, lsr #19
 8015e30:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08015e34 <enet_txfifo_flush>:
 8015e34:	4b06      	ldr	r3, [pc, #24]	; (8015e50 <enet_txfifo_flush+0x1c>)
 8015e36:	4807      	ldr	r0, [pc, #28]	; (8015e54 <enet_txfifo_flush+0x20>)
 8015e38:	699a      	ldr	r2, [r3, #24]
 8015e3a:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8015e3e:	619a      	str	r2, [r3, #24]
 8015e40:	699a      	ldr	r2, [r3, #24]
 8015e42:	02d2      	lsls	r2, r2, #11
 8015e44:	d502      	bpl.n	8015e4c <enet_txfifo_flush+0x18>
 8015e46:	3801      	subs	r0, #1
 8015e48:	d1fa      	bne.n	8015e40 <enet_txfifo_flush+0xc>
 8015e4a:	4770      	bx	lr
 8015e4c:	2001      	movs	r0, #1
 8015e4e:	4770      	bx	lr
 8015e50:	40029000 	andmi	r9, r2, r0
 8015e54:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015e58 <enet_tx_enable>:
 8015e58:	4a06      	ldr	r2, [pc, #24]	; (8015e74 <enet_tx_enable+0x1c>)
 8015e5a:	b508      	push	{r3, lr}
 8015e5c:	6813      	ldr	r3, [r2, #0]
 8015e5e:	f043 0308 	orr.w	r3, r3, #8
 8015e62:	6013      	str	r3, [r2, #0]
 8015e64:	f7ff ffe6 	bl	8015e34 <enet_txfifo_flush>
 8015e68:	4a03      	ldr	r2, [pc, #12]	; (8015e78 <enet_tx_enable+0x20>)
 8015e6a:	6993      	ldr	r3, [r2, #24]
 8015e6c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8015e70:	6193      	str	r3, [r2, #24]
 8015e72:	bd08      	pop	{r3, pc}
 8015e74:	40028000 	andmi	r8, r2, r0
 8015e78:	40029000 	andmi	r9, r2, r0

08015e7c <enet_enable>:
 8015e7c:	b508      	push	{r3, lr}
 8015e7e:	f7ff ffeb 	bl	8015e58 <enet_tx_enable>
 8015e82:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015e86:	f7ff bdcd 	b.w	8015a24 <enet_rx_enable>

08015e8a <enet_desc_information_get>:
 8015e8a:	2905      	cmp	r1, #5
 8015e8c:	d817      	bhi.n	8015ebe <enet_desc_information_get+0x34>
 8015e8e:	e8df f001 	tbb	[pc, r1]
 8015e92:	03091012 	movweq	r1, #36882	; 0x9012
 8015e96:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8015e9a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015e9e:	4770      	bx	lr
 8015ea0:	88c0      	ldrh	r0, [r0, #6]
 8015ea2:	e7fa      	b.n	8015e9a <enet_desc_information_get+0x10>
 8015ea4:	8840      	ldrh	r0, [r0, #2]
 8015ea6:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8015eaa:	2804      	cmp	r0, #4
 8015eac:	d90a      	bls.n	8015ec4 <enet_desc_information_get+0x3a>
 8015eae:	3804      	subs	r0, #4
 8015eb0:	4770      	bx	lr
 8015eb2:	6880      	ldr	r0, [r0, #8]
 8015eb4:	4770      	bx	lr
 8015eb6:	6800      	ldr	r0, [r0, #0]
 8015eb8:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8015ebc:	4770      	bx	lr
 8015ebe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015ec2:	4770      	bx	lr
 8015ec4:	2000      	movs	r0, #0
 8015ec6:	4770      	bx	lr

08015ec8 <enet_rxframe_drop>:
 8015ec8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8015ecc:	4814      	ldr	r0, [pc, #80]	; (8015f20 <enet_rxframe_drop+0x58>)
 8015ece:	b510      	push	{r4, lr}
 8015ed0:	6802      	ldr	r2, [r0, #0]
 8015ed2:	4914      	ldr	r1, [pc, #80]	; (8015f24 <enet_rxframe_drop+0x5c>)
 8015ed4:	6854      	ldr	r4, [r2, #4]
 8015ed6:	6013      	str	r3, [r2, #0]
 8015ed8:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8015edc:	680b      	ldr	r3, [r1, #0]
 8015ede:	d009      	beq.n	8015ef4 <enet_rxframe_drop+0x2c>
 8015ee0:	b12b      	cbz	r3, 8015eee <enet_rxframe_drop+0x26>
 8015ee2:	68da      	ldr	r2, [r3, #12]
 8015ee4:	6002      	str	r2, [r0, #0]
 8015ee6:	681a      	ldr	r2, [r3, #0]
 8015ee8:	b1ba      	cbz	r2, 8015f1a <enet_rxframe_drop+0x52>
 8015eea:	600a      	str	r2, [r1, #0]
 8015eec:	bd10      	pop	{r4, pc}
 8015eee:	68d3      	ldr	r3, [r2, #12]
 8015ef0:	6003      	str	r3, [r0, #0]
 8015ef2:	e7fb      	b.n	8015eec <enet_rxframe_drop+0x24>
 8015ef4:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8015ef8:	4c0b      	ldr	r4, [pc, #44]	; (8015f28 <enet_rxframe_drop+0x60>)
 8015efa:	d006      	beq.n	8015f0a <enet_rxframe_drop+0x42>
 8015efc:	68e2      	ldr	r2, [r4, #12]
 8015efe:	6002      	str	r2, [r0, #0]
 8015f00:	2b00      	cmp	r3, #0
 8015f02:	d0f3      	beq.n	8015eec <enet_rxframe_drop+0x24>
 8015f04:	681b      	ldr	r3, [r3, #0]
 8015f06:	600b      	str	r3, [r1, #0]
 8015f08:	e7f0      	b.n	8015eec <enet_rxframe_drop+0x24>
 8015f0a:	6824      	ldr	r4, [r4, #0]
 8015f0c:	3210      	adds	r2, #16
 8015f0e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8015f12:	4422      	add	r2, r4
 8015f14:	6002      	str	r2, [r0, #0]
 8015f16:	2b00      	cmp	r3, #0
 8015f18:	d0e8      	beq.n	8015eec <enet_rxframe_drop+0x24>
 8015f1a:	3310      	adds	r3, #16
 8015f1c:	e7f3      	b.n	8015f06 <enet_rxframe_drop+0x3e>
 8015f1e:	bf00      	nop
 8015f20:	2001d9a4 	andcs	sp, r1, r4, lsr #19
 8015f24:	2001d99c 	mulcs	r1, ip, r9
 8015f28:	40029000 	andmi	r9, r2, r0

08015f2c <enet_rxframe_size_get>:
 8015f2c:	b508      	push	{r3, lr}
 8015f2e:	4b0c      	ldr	r3, [pc, #48]	; (8015f60 <enet_rxframe_size_get+0x34>)
 8015f30:	681b      	ldr	r3, [r3, #0]
 8015f32:	6818      	ldr	r0, [r3, #0]
 8015f34:	2800      	cmp	r0, #0
 8015f36:	db10      	blt.n	8015f5a <enet_rxframe_size_get+0x2e>
 8015f38:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8015f3c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015f40:	d003      	beq.n	8015f4a <enet_rxframe_size_get+0x1e>
 8015f42:	f7ff ffc1 	bl	8015ec8 <enet_rxframe_drop>
 8015f46:	2001      	movs	r0, #1
 8015f48:	bd08      	pop	{r3, pc}
 8015f4a:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8015f4e:	2b21      	cmp	r3, #33	; 0x21
 8015f50:	d0f7      	beq.n	8015f42 <enet_rxframe_size_get+0x16>
 8015f52:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8015f56:	3804      	subs	r0, #4
 8015f58:	e7f6      	b.n	8015f48 <enet_rxframe_size_get+0x1c>
 8015f5a:	2000      	movs	r0, #0
 8015f5c:	e7f4      	b.n	8015f48 <enet_rxframe_size_get+0x1c>
 8015f5e:	bf00      	nop
 8015f60:	2001d9a4 	andcs	sp, r1, r4, lsr #19

08015f64 <enet_initpara_reset>:
 8015f64:	2200      	movs	r2, #0
 8015f66:	4b08      	ldr	r3, [pc, #32]	; (8015f88 <enet_initpara_reset+0x24>)
 8015f68:	e9c3 2200 	strd	r2, r2, [r3]
 8015f6c:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8015f70:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8015f74:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8015f78:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8015f7c:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8015f80:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8015f84:	639a      	str	r2, [r3, #56]	; 0x38
 8015f86:	4770      	bx	lr
 8015f88:	2001d9ac 	andcs	sp, r1, ip, lsr #19

08015f8c <enet_deinit>:
 8015f8c:	b508      	push	{r3, lr}
 8015f8e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8015f92:	f7fe fac0 	bl	8014516 <rcu_periph_reset_enable>
 8015f96:	f640 200e 	movw	r0, #2574	; 0xa0e
 8015f9a:	f7fe fabe 	bl	801451a <rcu_periph_reset_disable>
 8015f9e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015fa2:	f7ff bfdf 	b.w	8015f64 <enet_initpara_reset>
	...

08015fa8 <i2c_clock_config>:
 8015fa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015faa:	4605      	mov	r5, r0
 8015fac:	2002      	movs	r0, #2
 8015fae:	460c      	mov	r4, r1
 8015fb0:	4617      	mov	r7, r2
 8015fb2:	f7fe fb71 	bl	8014698 <rcu_clock_freq_get>
 8015fb6:	4603      	mov	r3, r0
 8015fb8:	4828      	ldr	r0, [pc, #160]	; (801605c <i2c_clock_config+0xb4>)
 8015fba:	4a29      	ldr	r2, [pc, #164]	; (8016060 <i2c_clock_config+0xb8>)
 8015fbc:	fbb3 f0f0 	udiv	r0, r3, r0
 8015fc0:	4293      	cmp	r3, r2
 8015fc2:	bf94      	ite	ls
 8015fc4:	4601      	movls	r1, r0
 8015fc6:	213f      	movhi	r1, #63	; 0x3f
 8015fc8:	686e      	ldr	r6, [r5, #4]
 8015fca:	4a26      	ldr	r2, [pc, #152]	; (8016064 <i2c_clock_config+0xbc>)
 8015fcc:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8015fd0:	430e      	orrs	r6, r1
 8015fd2:	4294      	cmp	r4, r2
 8015fd4:	606e      	str	r6, [r5, #4]
 8015fd6:	d816      	bhi.n	8016006 <i2c_clock_config+0x5e>
 8015fd8:	3001      	adds	r0, #1
 8015fda:	283e      	cmp	r0, #62	; 0x3e
 8015fdc:	d90d      	bls.n	8015ffa <i2c_clock_config+0x52>
 8015fde:	223f      	movs	r2, #63	; 0x3f
 8015fe0:	622a      	str	r2, [r5, #32]
 8015fe2:	0064      	lsls	r4, r4, #1
 8015fe4:	fbb3 f4f4 	udiv	r4, r3, r4
 8015fe8:	2c04      	cmp	r4, #4
 8015fea:	bf38      	it	cc
 8015fec:	2404      	movcc	r4, #4
 8015fee:	69ea      	ldr	r2, [r5, #28]
 8015ff0:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8015ff4:	4314      	orrs	r4, r2
 8015ff6:	61ec      	str	r4, [r5, #28]
 8015ff8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ffa:	2802      	cmp	r0, #2
 8015ffc:	d801      	bhi.n	8016002 <i2c_clock_config+0x5a>
 8015ffe:	2202      	movs	r2, #2
 8016000:	e7ee      	b.n	8015fe0 <i2c_clock_config+0x38>
 8016002:	6228      	str	r0, [r5, #32]
 8016004:	e7ed      	b.n	8015fe2 <i2c_clock_config+0x3a>
 8016006:	4a18      	ldr	r2, [pc, #96]	; (8016068 <i2c_clock_config+0xc0>)
 8016008:	4294      	cmp	r4, r2
 801600a:	d8f5      	bhi.n	8015ff8 <i2c_clock_config+0x50>
 801600c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8016010:	4351      	muls	r1, r2
 8016012:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8016016:	fbb1 f1f2 	udiv	r1, r1, r2
 801601a:	3101      	adds	r1, #1
 801601c:	6229      	str	r1, [r5, #32]
 801601e:	b9a7      	cbnz	r7, 801604a <i2c_clock_config+0xa2>
 8016020:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016024:	fbb3 f4f4 	udiv	r4, r3, r4
 8016028:	69eb      	ldr	r3, [r5, #28]
 801602a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801602e:	61eb      	str	r3, [r5, #28]
 8016030:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8016034:	b90b      	cbnz	r3, 801603a <i2c_clock_config+0x92>
 8016036:	f044 0401 	orr.w	r4, r4, #1
 801603a:	69eb      	ldr	r3, [r5, #28]
 801603c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8016040:	61eb      	str	r3, [r5, #28]
 8016042:	69eb      	ldr	r3, [r5, #28]
 8016044:	4323      	orrs	r3, r4
 8016046:	61eb      	str	r3, [r5, #28]
 8016048:	e7d6      	b.n	8015ff8 <i2c_clock_config+0x50>
 801604a:	2219      	movs	r2, #25
 801604c:	4354      	muls	r4, r2
 801604e:	fbb3 f4f4 	udiv	r4, r3, r4
 8016052:	69eb      	ldr	r3, [r5, #28]
 8016054:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8016058:	e7e9      	b.n	801602e <i2c_clock_config+0x86>
 801605a:	bf00      	nop
 801605c:	000f4240 	andeq	r4, pc, r0, asr #4
 8016060:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 8016064:	000186a0 	andeq	r8, r1, r0, lsr #13
 8016068:	00061a80 	andeq	r1, r6, r0, lsl #21

0801606c <i2c_ack_config>:
 801606c:	6803      	ldr	r3, [r0, #0]
 801606e:	2901      	cmp	r1, #1
 8016070:	bf0c      	ite	eq
 8016072:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8016076:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 801607a:	6003      	str	r3, [r0, #0]
 801607c:	4770      	bx	lr

0801607e <i2c_ackpos_config>:
 801607e:	6803      	ldr	r3, [r0, #0]
 8016080:	b919      	cbnz	r1, 801608a <i2c_ackpos_config+0xc>
 8016082:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8016086:	6003      	str	r3, [r0, #0]
 8016088:	4770      	bx	lr
 801608a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801608e:	e7fa      	b.n	8016086 <i2c_ackpos_config+0x8>

08016090 <i2c_master_addressing>:
 8016090:	3202      	adds	r2, #2
 8016092:	bf0c      	ite	eq
 8016094:	f021 0101 	biceq.w	r1, r1, #1
 8016098:	f041 0101 	orrne.w	r1, r1, #1
 801609c:	6101      	str	r1, [r0, #16]
 801609e:	4770      	bx	lr

080160a0 <i2c_enable>:
 80160a0:	6803      	ldr	r3, [r0, #0]
 80160a2:	f043 0301 	orr.w	r3, r3, #1
 80160a6:	6003      	str	r3, [r0, #0]
 80160a8:	4770      	bx	lr

080160aa <i2c_start_on_bus>:
 80160aa:	6803      	ldr	r3, [r0, #0]
 80160ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80160b0:	6003      	str	r3, [r0, #0]
 80160b2:	4770      	bx	lr

080160b4 <i2c_stop_on_bus>:
 80160b4:	6803      	ldr	r3, [r0, #0]
 80160b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80160ba:	6003      	str	r3, [r0, #0]
 80160bc:	4770      	bx	lr

080160be <i2c_data_transmit>:
 80160be:	6101      	str	r1, [r0, #16]
 80160c0:	4770      	bx	lr

080160c2 <i2c_data_receive>:
 80160c2:	6900      	ldr	r0, [r0, #16]
 80160c4:	b2c0      	uxtb	r0, r0
 80160c6:	4770      	bx	lr

080160c8 <i2c_flag_get>:
 80160c8:	098b      	lsrs	r3, r1, #6
 80160ca:	581a      	ldr	r2, [r3, r0]
 80160cc:	2301      	movs	r3, #1
 80160ce:	f001 011f 	and.w	r1, r1, #31
 80160d2:	408b      	lsls	r3, r1
 80160d4:	4213      	tst	r3, r2
 80160d6:	bf14      	ite	ne
 80160d8:	2001      	movne	r0, #1
 80160da:	2000      	moveq	r0, #0
 80160dc:	4770      	bx	lr

080160de <i2c_flag_clear>:
 80160de:	f240 5301 	movw	r3, #1281	; 0x501
 80160e2:	4299      	cmp	r1, r3
 80160e4:	b510      	push	{r4, lr}
 80160e6:	d102      	bne.n	80160ee <i2c_flag_clear+0x10>
 80160e8:	6943      	ldr	r3, [r0, #20]
 80160ea:	6983      	ldr	r3, [r0, #24]
 80160ec:	bd10      	pop	{r4, pc}
 80160ee:	2201      	movs	r2, #1
 80160f0:	098c      	lsrs	r4, r1, #6
 80160f2:	5823      	ldr	r3, [r4, r0]
 80160f4:	f001 011f 	and.w	r1, r1, #31
 80160f8:	408a      	lsls	r2, r1
 80160fa:	ea23 0302 	bic.w	r3, r3, r2
 80160fe:	5023      	str	r3, [r4, r0]
 8016100:	e7f4      	b.n	80160ec <i2c_flag_clear+0xe>
	...

08016104 <mac_address_get(unsigned char*)>:
 8016104:	2102      	movs	r1, #2
 8016106:	4a07      	ldr	r2, [pc, #28]	; (8016124 <mac_address_get(unsigned char*)+0x20>)
 8016108:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 801610c:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8016110:	7001      	strb	r1, [r0, #0]
 8016112:	7042      	strb	r2, [r0, #1]
 8016114:	0e1a      	lsrs	r2, r3, #24
 8016116:	7082      	strb	r2, [r0, #2]
 8016118:	0c1a      	lsrs	r2, r3, #16
 801611a:	70c2      	strb	r2, [r0, #3]
 801611c:	0a1a      	lsrs	r2, r3, #8
 801611e:	7102      	strb	r2, [r0, #4]
 8016120:	7143      	strb	r3, [r0, #5]
 8016122:	4770      	bx	lr
 8016124:	1ffff000 	svcne	0x00fff000

08016128 <__popcountsi2>:
 8016128:	0843      	lsrs	r3, r0, #1
 801612a:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 801612e:	1ac0      	subs	r0, r0, r3
 8016130:	0883      	lsrs	r3, r0, #2
 8016132:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8016136:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 801613a:	4418      	add	r0, r3
 801613c:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8016140:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8016144:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8016148:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 801614c:	0e00      	lsrs	r0, r0, #24
 801614e:	4770      	bx	lr

Disassembly of section .rodata:

08016150 <vtable for DisplayHandler-0xd8>:
	...
 8016158:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 801615c:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8016160:	00000000 	andeq	r0, r0, r0
 8016164:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8016168:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 801616c:	35303a36 	ldrcc	r3, [r0, #-2614]!	; 0xfffff5ca
 8016170:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8016174:	20303120 	eorscs	r3, r0, r0, lsr #2
 8016178:	32323032 	eorscc	r3, r2, #50	; 0x32
 801617c:	335b1b00 	cmpcc	fp, #0, 22
 8016180:	41736d32 	cmnmi	r3, r2, lsr sp
 8016184:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8016188:	31332e31 	teqcc	r3, r1, lsr lr
 801618c:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8016190:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8016194:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8016198:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 801619c:	387b2072 	ldmdacc	fp!, {r1, r4, r5, r6, sp}^
 80161a0:	20342078 	eorscs	r2, r4, r8, ror r0
 80161a4:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 80161a8:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80161ac:	5b1b7d73 	blpl	86f5780 <__exidx_end+0x6dc59c>
 80161b0:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 80161b4:	6f635f2e 	svcvs	0x00635f2e
 80161b8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80161bc:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 80161c0:	00707474 	rsbseq	r7, r0, r4, ror r4
 80161c4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80161c8:	4341733d 	movtmi	r7, #4925	; 0x133d
 80161cc:	3145204e 	cmpcc	r5, lr, asr #32
 80161d0:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80161d4:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80161d8:	4173006c 	cmnmi	r3, ip, rrx
 80161dc:	50204e43 	eorpl	r4, r0, r3, asr #28
 80161e0:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80161e4:	2d642520 	cfstr64cs	mvdx2, [r4, #-128]!	; 0xffffff80
 80161e8:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 80161ec:	44470064 	strbmi	r0, [r7], #-100	; 0xffffff9c
 80161f0:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 80161f4:	47523730 	smmlarmi	r2, r0, r7, r3
 80161f8:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 80161fc:	73006c65 	movwvc	r6, #3173	; 0xc65
 8016200:	204e4341 	subcs	r4, lr, r1, asr #6
 8016204:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8016208:	3a38206c 	bcc	8e1e3c0 <__exidx_end+0xe051dc>
 801620c:	25786425 	ldrbcs	r6, [r8, #-1061]!	; 0xfffffbdb
 8016210:	73250064 			; <UNDEFINED> instruction: 0x73250064
 8016214:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8016218:	20642547 	rsbcs	r2, r4, r7, asr #10
 801621c:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 8016220:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8016224:	00000000 	andeq	r0, r0, r0

08016228 <vtable for DisplayHandler>:
	...
 8016230:	08008619 	stmdaeq	r0, {r0, r3, r4, r9, sl, pc}
 8016234:	08008663 	stmdaeq	r0, {r0, r1, r5, r6, r9, sl, pc}
 8016238:	080086b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, sl, pc}

0801623c <vtable for PixelDmxStartStop>:
	...
 8016244:	0800861b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, pc}
 8016248:	0800866f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9, sl, pc}
 801624c:	0800861d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, pc}
 8016250:	08008629 	stmdaeq	r0, {r0, r3, r5, r9, sl, pc}

08016254 <vtable for RDMNetDevice>:
	...
 801625c:	08008709 	stmdaeq	r0, {r0, r3, r8, r9, sl, pc}
 8016260:	08008731 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, pc}
 8016264:	0800c9c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r8, fp, lr, pc}
 8016268:	0800c9c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp, lr, pc}
 801626c:	08008635 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, pc}
 8016270:	08008649 	stmdaeq	r0, {r0, r3, r6, r9, sl, pc}
 8016274:	08008689 	stmdaeq	r0, {r0, r3, r7, r9, sl, pc}
 8016278:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 801627c:	00000000 	andeq	r0, r0, r0
 8016280:	08008729 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, pc}
 8016284:	08008743 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, pc}
 8016288:	08008641 	stmdaeq	r0, {r0, r6, r9, sl, pc}
 801628c:	08008659 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, pc}
 8016290:	0800869d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, sl, pc}

08016294 <vtable for FactoryDefaults>:
	...
 801629c:	08008661 	stmdaeq	r0, {r0, r5, r6, r9, sl, pc}
 80162a0:	0800867b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r9, sl, pc}
 80162a4:	080089c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, pc}

080162a8 <CSWTCH.80>:
 80162a8:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80162ac:	 	eorcc	r3, lr, #-2147483631	; 0x80000011

080162ad <SOFTWARE_VERSION>:
 80162ad:	00322e31 	eorseq	r2, r2, r1, lsr lr

080162b1 <gamma10_0>:
 80162b1:	03020100 	movweq	r0, #8448	; 0x2100
 80162b5:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80162b9:	0b0a0908 	bleq	82986e1 <__exidx_end+0x27f4fd>
 80162bd:	0f0e0d0c 	svceq	0x000e0d0c
 80162c1:	13121110 	tstne	r2, #16, 2
 80162c5:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80162c9:	1b1a1918 	blne	869c731 <__exidx_end+0x68354d>
 80162cd:	1f1e1d1c 	svcne	0x001e1d1c
 80162d1:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80162d5:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80162d9:	2b2a2928 	blcs	8aa0781 <__exidx_end+0xa8759d>
 80162dd:	2f2e2d2c 	svccs	0x002e2d2c
 80162e1:	33323130 	teqcc	r2, #48, 2
 80162e5:	37363534 			; <UNDEFINED> instruction: 0x37363534
 80162e9:	3b3a3938 	blcc	8ea47d1 <__exidx_end+0xe8b5ed>
 80162ed:	3f3e3d3c 	svccc	0x003e3d3c
 80162f1:	43424140 	movtmi	r4, #8512	; 0x2140
 80162f5:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 80162f9:	4b4a4948 	blmi	92a8821 <__exidx_end+0x128f63d>
 80162fd:	4f4e4d4c 	svcmi	0x004e4d4c
 8016301:	53525150 	cmppl	r2, #80, 2
 8016305:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8016309:	5b5a5958 	blpl	96ac871 <__exidx_end+0x169368d>
 801630d:	5f5e5d5c 	svcpl	0x005e5d5c
 8016311:	63626160 	cmnvs	r2, #96, 2
 8016315:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8016319:	6b6a6968 	blvs	9ab08c1 <__exidx_end+0x1a976dd>
 801631d:	6f6e6d6c 	svcvs	0x006e6d6c
 8016321:	73727170 	cmnvc	r2, #112, 2
 8016325:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016329:	7b7a7978 	blvc	9eb4911 <__exidx_end+0x1e9b72d>
 801632d:	7f7e7d7c 	svcvc	0x007e7d7c
 8016331:	83828180 	orrhi	r8, r2, #128, 2
 8016335:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016339:	8b8a8988 	blhi	62b8961 <__stack_size+0x62b6161>
 801633d:	8f8e8d8c 	svchi	0x008e8d8c
 8016341:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016345:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016349:	9b9a9998 	blls	66bc9b1 <__stack_size+0x66ba1b1>
 801634d:	9f9e9d9c 	svcls	0x009e9d9c
 8016351:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016355:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8016359:	abaaa9a8 	blge	6ac0a01 <__stack_size+0x6abe201>
 801635d:	afaeadac 	svcge	0x00aeadac
 8016361:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016365:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8016369:	bbbab9b8 	bllt	6ec4a51 <__stack_size+0x6ec2251>
 801636d:	bfbebdbc 	svclt	0x00bebdbc
 8016371:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016375:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8016379:	cbcac9c8 	blgt	72c8aa1 <__stack_size+0x72c62a1>
 801637d:	cfcecdcc 	svcgt	0x00cecdcc
 8016381:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8016385:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8016389:	dbdad9d8 	blle	76ccaf1 <__stack_size+0x76ca2f1>
 801638d:	dfdedddc 	svcle	0x00dedddc
 8016391:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8016395:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8016399:	ebeae9e8 	bl	7ad0b41 <__stack_size+0x7ace341>
 801639d:	efeeedec 	svc	0x00eeedec
 80163a1:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80163a5:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80163a9:	fbfaf9f8 	blx	7ed4b93 <__stack_size+0x7ed2393>
 80163ad:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080163b1 <SOFTWARE_VERSION>:
 80163b1:	00322e31 	eorseq	r2, r2, r1, lsr lr
 80163b5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80163b9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80163bd:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80163c1:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80163c5:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80163c9:	0a73252c 	beq	9cdf881 <__exidx_end+0x1cc669d>
 80163cd:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80163d1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80163d5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80163d9:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80163dd:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80163e1:	4f000a64 	svcmi	0x00000a64
 80163e5:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80163e9:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80163ed:	616c7073 	smcvs	50947	; 0xc703
 80163f1:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80163f5:	6674000a 	ldrbtvs	r0, [r4], -sl
 80163f9:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80163fd:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8016401:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016405:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8016409:	70750073 	rsbsvc	r0, r5, r3, ror r0
 801640d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016411:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016415:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8016419:	20505446 	subscs	r5, r0, r6, asr #8
 801641d:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8016421:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8016425:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8016429:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 801642d:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8016431:	525b2066 	subspl	r2, fp, #102	; 0x66
 8016435:	6f6f6265 	svcvs	0x006f6265
 8016439:	00205d74 	eoreq	r5, r0, r4, ror sp
 801643d:	4f525245 	svcmi	0x00525245
 8016441:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8016445:	000a7465 	andeq	r7, sl, r5, ror #8
 8016449:	70746674 	rsbsvc	r6, r4, r4, ror r6
 801644d:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8016451:	616c7073 	smcvs	50947	; 0xc703
 8016455:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8016459:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801645d:	000a2123 	andeq	r2, sl, r3, lsr #2
 8016461:	4f525245 	svcmi	0x00525245
 8016465:	0a3f2352 	beq	8fdf1b5 <__exidx_end+0xfc5fd1>
 8016469:	62657200 	rsbvs	r7, r5, #0, 4
 801646d:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8016471:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8016475:	00237473 	eoreq	r7, r3, r3, ror r4
 8016479:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801647d:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8016481:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016485:	76002365 	strvc	r2, [r0], -r5, ror #6
 8016489:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801648d:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8016491:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8016495:	63616600 	cmnvs	r1, #0, 12
 8016499:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801649d:	 	tstmi	r0, r3, lsr #6

080164a0 <s_Node>:
 80164a0:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80164a4:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 80164b0:	41730000 	cmnmi	r3, r0
 80164b4:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80164b8:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80164c4:	2043534f 	subcs	r5, r3, pc, asr #6
 80164c8:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80164cc:	00007265 	andeq	r7, r0, r5, ror #4
 80164d0:	00000000 	andeq	r0, r0, r0
 80164d4:	544c0000 	strbpl	r0, [ip], #-0
 80164d8:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80164e8:	2043534f 	subcs	r5, r3, pc, asr #6
 80164ec:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80164f0:	0000746e 	andeq	r7, r0, lr, ror #8
 80164f4:	00000000 	andeq	r0, r0, r0
 80164f8:	44520000 	ldrbmi	r0, [r2], #-0
 80164fc:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8016500:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8016504:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8016508:	0000796c 	andeq	r7, r0, ip, ror #18
 801650c:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8016510:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 801651c:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8016520:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8016530:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8016540:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8016544:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8016548:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 801654c:	00000072 	andeq	r0, r0, r2, ror r0
 8016550:	00000000 	andeq	r0, r0, r0
 8016554:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08016566 <s_Output>:
 8016566:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8016572:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801657e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8016582:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8016586:	00000000 	andeq	r0, r0, r0
 801658a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801658e:	0000006c 	andeq	r0, r0, ip, rrx
 8016592:	00000000 	andeq	r0, r0, r0
 8016596:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801659a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 801659e:	00000000 	andeq	r0, r0, r0
 80165a2:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80165ae:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80165b2:	00006769 	andeq	r6, r0, r9, ror #14
 80165b6:	00000000 	andeq	r0, r0, r0
 80165ba:	70657453 	rsbvc	r7, r5, r3, asr r4
 80165be:	00726570 	rsbseq	r6, r2, r0, ror r5
 80165c2:	00000000 	andeq	r0, r0, r0
 80165c6:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 80165ca:	00007265 	andeq	r7, r0, r5, ror #4
 80165ce:	00000000 	andeq	r0, r0, r0
 80165d2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80165d6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80165da:	00000000 	andeq	r0, r0, r0
 80165de:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80165e2:	00006c61 	andeq	r6, r0, r1, ror #24
 80165e6:	00000000 	andeq	r0, r0, r0
 80165ea:	20424752 	subcs	r4, r2, r2, asr r7
 80165ee:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80165f2:	0000006c 	andeq	r0, r0, ip, rrx
	...

080165f8 <RemoteConfig::s_GET>:
 80165f8:	0800a489 	stmdaeq	r0, {r0, r3, r7, sl, sp, pc}
 80165fc:	00000000 	andeq	r0, r0, r0
 8016600:	0801646a 	stmdaeq	r1, {r1, r3, r5, r6, sl, sp, lr}
 8016604:	00000008 	andeq	r0, r0, r8
 8016608:	0800997d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, pc}
 801660c:	00000000 	andeq	r0, r0, r0
 8016610:	08016473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, sp, lr}
 8016614:	00000005 	andeq	r0, r0, r5
 8016618:	0800997d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, pc}
 801661c:	00000000 	andeq	r0, r0, r0
 8016620:	08016479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, sp, lr}
 8016624:	00000006 	andeq	r0, r0, r6
 8016628:	08009b31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp, ip, pc}
 801662c:	00000000 	andeq	r0, r0, r0
 8016630:	08016480 	stmdaeq	r1, {r7, sl, sp, lr}
 8016634:	00000007 	andeq	r0, r0, r7
 8016638:	08009af1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip, pc}
 801663c:	00000000 	andeq	r0, r0, r0
 8016640:	08016488 	stmdaeq	r1, {r3, r7, sl, sp, lr}
 8016644:	00000008 	andeq	r0, r0, r8
 8016648:	08009a4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, fp, ip, pc}
 801664c:	00000000 	andeq	r0, r0, r0
 8016650:	0801644f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp, lr}
 8016654:	00000008 	andeq	r0, r0, r8
 8016658:	08009e05 	stmdaeq	r0, {r0, r2, r9, sl, fp, ip, pc}
 801665c:	00000000 	andeq	r0, r0, r0
 8016660:	08016491 	stmdaeq	r1, {r0, r4, r7, sl, sp, lr}
 8016664:	00010004 	andeq	r0, r1, r4
 8016668:	08009aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, ip, pc}
 801666c:	00000000 	andeq	r0, r0, r0
 8016670:	08016449 	stmdaeq	r1, {r0, r3, r6, sl, sp, lr}
 8016674:	00000005 	andeq	r0, r0, r5
 8016678:	0800a179 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sp, pc}
 801667c:	00000000 	andeq	r0, r0, r0
 8016680:	08016496 	stmdaeq	r1, {r1, r2, r4, r7, sl, sp, lr}
 8016684:	00000009 	andeq	r0, r0, r9

08016688 <RemoteConfig::s_SET>:
 8016688:	08009bdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, ip, pc}
 801668c:	00000000 	andeq	r0, r0, r0
 8016690:	08016449 	stmdaeq	r1, {r0, r3, r6, sl, sp, lr}
 8016694:	00010005 	andeq	r0, r1, r5
 8016698:	08009bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, ip, pc}
 801669c:	00000000 	andeq	r0, r0, r0
 80166a0:	0801644f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, sp, lr}
 80166a4:	00010008 	andeq	r0, r1, r8
 80166a8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80166ac:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80166b0:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80166b4:	0a64253d 	beq	991fbb0 <__exidx_end+0x19069cc>
 80166b8:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80166bc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80166c0:	002c2273 	eoreq	r2, ip, r3, ror r2
 80166c4:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80166c8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80166cc:	6f626552 	svcvs	0x00626552
 80166d0:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 80166d4:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80166d8:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80166dc:	6f6f6265 	svcvs	0x006f6265
 80166e0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80166e4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80166e8:	6f637200 	svcvs	0x00637200
 80166ec:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80166f0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80166f4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80166f8:	6b726f77 	blvs	9cb24dc <__exidx_end+0x1c992f8>
 80166fc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016700:	73696400 	cmnvc	r9, #0, 8
 8016704:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016708:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801670c:	33316500 	teqcc	r1, #0, 10
 8016710:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016714:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 8016718:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801671c:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8016720:	00000074 	andeq	r0, r0, r4, ror r0

08016724 <RemoteConfig::s_TXT>:
 8016724:	08009e0d 	stmdaeq	r0, {r0, r2, r3, r9, sl, fp, ip, pc}
 8016728:	00000000 	andeq	r0, r0, r0
 801672c:	0800a0a9 	stmdaeq	r0, {r0, r3, r5, r7, sp, pc}
 8016730:	00000000 	andeq	r0, r0, r0
 8016734:	080166e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, sp, lr}
 8016738:	0000000b 	andeq	r0, r0, fp
 801673c:	0000000c 	andeq	r0, r0, ip
 8016740:	08009e39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, ip, pc}
 8016744:	00000000 	andeq	r0, r0, r0
 8016748:	0800a0d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sp, pc}
 801674c:	00000000 	andeq	r0, r0, r0
 8016750:	080166f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, sp, lr}
 8016754:	0000000b 	andeq	r0, r0, fp
 8016758:	00000000 	andeq	r0, r0, r0
 801675c:	08009ebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, ip, pc}
 8016760:	00000000 	andeq	r0, r0, r0
 8016764:	0800a151 	stmdaeq	r0, {r0, r4, r6, r8, sp, pc}
 8016768:	00000000 	andeq	r0, r0, r0
 801676c:	08016701 	stmdaeq	r1, {r0, r8, r9, sl, sp, lr}
 8016770:	0000000b 	andeq	r0, r0, fp
 8016774:	0000000f 	andeq	r0, r0, pc
 8016778:	08009e65 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, fp, ip, pc}
 801677c:	00000000 	andeq	r0, r0, r0
 8016780:	0800a101 	stmdaeq	r0, {r0, r8, sp, pc}
 8016784:	00000000 	andeq	r0, r0, r0
 8016788:	0801670d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sl, sp, lr}
 801678c:	00000008 	andeq	r0, r0, r8
 8016790:	00000004 	andeq	r0, r0, r4
 8016794:	08009e91 	stmdaeq	r0, {r0, r4, r7, r9, sl, fp, ip, pc}
 8016798:	00000000 	andeq	r0, r0, r0
 801679c:	0800a129 	stmdaeq	r0, {r0, r3, r5, r8, sp, pc}
 80167a0:	00000000 	andeq	r0, r0, r0
 80167a4:	08016716 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, sp, lr}
 80167a8:	0000000b 	andeq	r0, r0, fp
 80167ac:	00000003 	andeq	r0, r0, r3
 80167b0:	00544547 	subseq	r4, r4, r7, asr #10
 80167b4:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 80167b8:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 80167bc:	0a200050 	beq	8816904 <__exidx_end+0x7fd720>
 80167c0:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 80167c4:	43003a00 	movwmi	r3, #2560	; 0xa00
 80167c8:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80167cc:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 80167d0:	00657079 	rsbeq	r7, r5, r9, ror r0
 80167d4:	61003b20 	tstvs	r0, r0, lsr #22
 80167d8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80167dc:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80167e0:	6a2f6e6f 	bvs	8bf21a4 <__exidx_end+0xbd8fc0>
 80167e4:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80167e8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80167ec:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80167f0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80167f4:	2f006874 	svccs	0x00006874
 80167f8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80167fc:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8016800:	2f006c6d 	svccs	0x00006c6d
 8016804:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8016808:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 801680c:	2f007373 	svccs	0x00007373
 8016810:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8016814:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8016818:	736a2f00 	cmnvc	sl, #0, 30
 801681c:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8016820:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016824:	72657600 	rsbvc	r7, r5, #0, 12
 8016828:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801682c:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8016830:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8016834:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016838:	0079616c 	rsbseq	r6, r9, ip, ror #2
 801683c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016840:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016844:	6a2f0079 	bvs	8bd6a30 <__exidx_end+0xbbd84c>
 8016848:	2f6e6f73 	svccs	0x006e6f73
 801684c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8016850:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8016854:	6f6f6265 	svcvs	0x006f6265
 8016858:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 801685c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8016860:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8016864:	434f4421 	movtmi	r4, #62497	; 0xf421
 8016868:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 801686c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8016870:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016874:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016878:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 801687c:	3e646165 	powccsz	f6, f4, f5
 8016880:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016884:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8016888:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 801688c:	742f3c74 	strtvc	r3, [pc], #-3188	; 8016894 <RemoteConfig::s_TXT+0x170>
 8016890:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8016894:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016898:	3e646165 	powccsz	f6, f4, f5
 801689c:	6f623c0a 	svcvs	0x00623c0a
 80168a0:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 80168a4:	4f3e3168 	svcmi	0x003e3168
 80168a8:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80168ac:	2f3c3e31 	svccs	0x003c3e31
 80168b0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80168b4:	2f3c0a3e 	svccs	0x003c0a3e
 80168b8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80168bc:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 80168c0:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 80168c4:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 80168c8:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 80168cc:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 80168d0:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 80168d4:	71655200 	cmnvc	r5, r0, lsl #4
 80168d8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80168dc:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 80168e0:	20797469 	rsbscs	r7, r9, r9, ror #8
 80168e4:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 80168e8:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 80168ec:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 80168f0:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 80168f4:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 80168f8:	6f542049 	svcvs	0x00542049
 80168fc:	6f4c206f 	svcvs	0x004c206f
 8016900:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8016904:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8016908:	206c616e 	rsbcs	r6, ip, lr, ror #2
 801690c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8016910:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8016914:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8016918:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 801691c:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8016920:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8016924:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8016928:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801692c:	00646574 	rsbeq	r6, r4, r4, ror r5
 8016930:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8016934:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8016938:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801693c:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8016940:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8016944:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8016948:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 801694c:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8016950:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8016954:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8016958:	434f4421 	movtmi	r4, #62497	; 0xf421
 801695c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8016960:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8016964:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016968:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801696c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8016970:	3e646165 	powccsz	f6, f4, f5
 8016974:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016978:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 801697c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8016980:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016984:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8016988:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801698c:	0a3e6461 	beq	8fafb18 <__exidx_end+0xf96934>
 8016990:	646f623c 	strbtvs	r6, [pc], #-572	; 8016998 <RemoteConfig::s_TXT+0x274>
 8016994:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016998:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 801699c:	31682f3c 	cmncc	r8, ip, lsr pc
 80169a0:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 80169a4:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80169a8:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80169ac:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80169b0:	5448000a 	strbpl	r0, [r8], #-10
 80169b4:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 80169b8:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 80169bc:	73252075 			; <UNDEFINED> instruction: 0x73252075
 80169c0:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 80169c4:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 80169c8:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80169cc:	6f430a0d 	svcvs	0x00430a0d
 80169d0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80169d4:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 80169d8:	203a6570 	eorscs	r6, sl, r0, ror r5
 80169dc:	0a0d7325 	beq	8373678 <__exidx_end+0x35a494>
 80169e0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80169e4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80169e8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80169ec:	203a6874 	eorscs	r6, sl, r4, ror r8
 80169f0:	0a0d7525 	beq	8373e8c <__exidx_end+0x35aca8>
 80169f4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80169f8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80169fc:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8016a00:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8016a04:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8016a08:	4447000a 	strbmi	r0, [r7], #-10
 8016a0c:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 8016a10:	47523730 	smmlarmi	r2, r0, r7, r3
	...

08016a15 <contentType>:
 8016a15:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016a19:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8016a1d:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8016a35:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016a39:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8016a55:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016a59:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8016a5d:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8016a61:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8016a75:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8016a79:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8016a7d:	2f6e6f69 	svccs	0x006e6f69
 8016a81:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08016a95 <RemoteConfigConst::PARAMS_DISABLE>:
 8016a95:	61736964 	cmnvs	r3, r4, ror #18
 8016a99:	00656c62 	rsbeq	r6, r5, r2, ror #24

08016a9d <RemoteConfigConst::PARAMS_FILE_NAME>:
 8016a9d:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8016aa1:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8016aa5:	00747874 	rsbseq	r7, r4, r4, ror r8

08016aa9 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8016aa9:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016aad:	5f79616c 	svcpl	0x0079616c
 8016ab1:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016ab6 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8016ab6:	61736964 	cmnvs	r3, r4, ror #18
 8016aba:	5f656c62 	svcpl	0x00656c62
 8016abe:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8016ac2:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016ac4 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8016ac4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016ac8:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8016acc:	6f6f6265 	svcvs	0x006f6265
 8016ad0:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08016ad2 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8016ad2:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016ad6:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8016572 <s_Output+0xc>
 8016ada:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016ade:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016ae0 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8016ae0:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016ae4:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8016ae8:	6f746361 	svcvs	0x00746361
 8016aec:	7b007972 	blvc	80350bc <__exidx_end+0x1bed8>
 8016af0:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8016af4:	7b3a2274 	blvc	8e9f4cc <__exidx_end+0xe862e8>
 8016af8:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8016afc:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016b00:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016b04:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016b08:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016b0c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8016b10:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016b14:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016b18:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8016b1c:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016b20:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016b24:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016b28:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016b2c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016b30:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016b34:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016b38:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016b3c:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016b40:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016b44:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8016b48:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8016b4c:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016b50:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016b54:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016b58:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016b5c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016b60:	616f6222 	cmnvs	pc, r2, lsr #4
 8016b64:	3a226472 	bcc	88afd34 <__exidx_end+0x896b50>
 8016b68:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016b6c:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8016b70:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8016b74:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8016b78:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8016b7c:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016b80:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016b84:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8016b88:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8016b8c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016b90:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8016b94:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8016b98:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016b9c:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8016ba0:	7b000a7d 	blvc	801959c <__exidx_end+0x3b8>
 8016ba4:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8016ba8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016bac:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8016bb0:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016bb4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016bb8:	7b3a2273 	blvc	8e9f58c <__exidx_end+0xe863a8>
 8016bbc:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8016bc0:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016bc4:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8016bc8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016bcc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016bd0:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8016bd4:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8016bd8:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8016bdc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016be0:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8016be4:	5020584d 	eorpl	r5, r0, sp, asr #16
 8016be8:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8016bec:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8016bf0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016bf4:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 8016bf8:	3a227478 	bcc	88b3de0 <__exidx_end+0x89abfc>
 8016bfc:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8016c00:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016c04:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8016c08:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8016c0c:	6f777465 	svcvs	0x00777465
 8016c10:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8016c14:	3a227478 	bcc	88b3dfc <__exidx_end+0x89ac18>
 8016c18:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8016c1c:	6b726f77 	blvs	9cb2a00 <__exidx_end+0x1c9981c>
 8016c20:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8016c24:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016c28:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8016c2c:	3a227478 	bcc	88b3e14 <__exidx_end+0x89ac30>
 8016c30:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8016c34:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8016c38:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016c3c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016c40:	6f697461 	svcvs	0x00697461
 8016c44:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08016c49 <index_html>:
 8016c49:	4f44213c 	svcmi	0x0044213c
 8016c4d:	50595443 	subspl	r5, r9, r3, asr #8
 8016c51:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8016c55:	0a3e6c6d 	beq	8fb1e11 <__exidx_end+0xf98c2d>
 8016c59:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8016c5d:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016c61:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8016c65:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8016c69:	6b6e696c 	blvs	9bb1221 <__exidx_end+0x1b9803d>
 8016c6d:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8016c71:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8016c75:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8016c79:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8016c7d:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8016c81:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8016c85:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8016c89:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8016c8d:	20227373 	eorcs	r7, r2, r3, ror r3
 8016c91:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8016c95:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016c99:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8016c9d:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8016ca1:	0a3e656c 	beq	8fb0259 <__exidx_end+0xf97075>
 8016ca5:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8016ca9:	0a3e6461 	beq	8fafe35 <__exidx_end+0xf96c51>
 8016cad:	646f623c 	strbtvs	r6, [pc], #-572	; 8016cb5 <index_html+0x6c>
 8016cb1:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016cb5:	6165683c 	cmnvs	r5, ip, lsr r8
 8016cb9:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8016cbd:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8016cc1:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8016cc5:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8016cc9:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8016ccd:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016cd1:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016cd5:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8016cd9:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016cdd:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8016ce1:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8016ce5:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8016ce9:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8016ced:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8016cf1:	6f746365 	svcvs	0x00746365
 8016cf5:	20227972 	eorcs	r7, r2, r2, ror r9
 8016cf9:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8016cfd:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8016d01:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8016d05:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016d09:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8016d0d:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8016d11:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8016d15:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8016d19:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8016d1d:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8016d21:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8016d25:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8016d29:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8016d2d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016d31:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8016d35:	20227478 	eorcs	r7, r2, r8, ror r4
 8016d39:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016d3d:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8016d41:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8016d45:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8016d49:	0a3e656c 	beq	8fb0301 <__exidx_end+0xf9711d>
 8016d4d:	6f663c09 	svcvs	0x00663c09
 8016d51:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8016d55:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8016d59:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016d5d:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016d61:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016d65:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8016d69:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016d6d:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016d71:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016d75:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016d79:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8016d7d:	20747069 	rsbscs	r7, r4, r9, rrx
 8016d81:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016d85:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8016d89:	6a2e7865 	bvs	8bb4f25 <__exidx_end+0xb9bd41>
 8016d8d:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8016d91:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8016d95:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8016d99:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8016d9d:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016da1:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016da5:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016da9:	 	strbtvs	r6, [pc], #-522	; 8016db1 <styles_css+0x7>

08016daa <styles_css>:
 8016daa:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016dae:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016db2:	63616220 	cmnvs	r1, #32, 4
 8016db6:	6f72676b 	svcvs	0x0072676b
 8016dba:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8016dbe:	6f6c6f63 	svcvs	0x006c6f63
 8016dc2:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016dc6:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016dca:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8016dce:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8016dd2:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016dd6:	6f6c6f63 	svcvs	0x006c6f63
 8016dda:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016dde:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016de2:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8016de6:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8016dea:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8016dee:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8016df2:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8016df6:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016dfa:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8016dfe:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016e02:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016e06:	0a3b7865 	beq	8ef4fa2 <__exidx_end+0xedbdbe>
 8016e0a:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8016e0e:	0a7b2069 	beq	9edefba <__exidx_end+0x1ec5dd6>
 8016e12:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8016e16:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8016e1a:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8016e1e:	6f6e203a 	svcvs	0x006e203a
 8016e22:	0a3b656e 	beq	8ef03e2 <__exidx_end+0xed71fe>
 8016e26:	616d2020 	cmnvs	sp, r0, lsr #32
 8016e2a:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8016e2e:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8016e32:	70352078 	eorsvc	r2, r5, r8, ror r0
 8016e36:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8016e3a:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8016e3e:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016e42:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016e46:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8016e4a:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016e4e:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016e52:	0a3b7865 	beq	8ef4fee <__exidx_end+0xedbe0a>
 8016e56:	6f622020 	svcvs	0x00622020
 8016e5a:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016e5e:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016e62:	3a737569 	bcc	9cf440e <__exidx_end+0x1cdb22a>
 8016e66:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016e6a:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016e6e:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016e72:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016e76:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016e7a:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016e7e:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016e82:	0a3b7870 	beq	8ef504a <__exidx_end+0xedbe66>
 8016e86:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8016e8a:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016e8e:	0a7b2072 	beq	9edf05e <__exidx_end+0x1ec5e7a>
 8016e92:	69642020 	stmdbvs	r4!, {r5, sp}^
 8016e96:	616c7073 	smcvs	50947	; 0xc703
 8016e9a:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8016e9e:	3b78656c 	blcc	9e30456 <__exidx_end+0x1e17272>
 8016ea2:	6a20200a 	bvs	881eed2 <__exidx_end+0x805cee>
 8016ea6:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8016eaa:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8016eae:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016eb2:	203a746e 	eorscs	r7, sl, lr, ror #8
 8016eb6:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8016eba:	0a3b7265 	beq	8ef3856 <__exidx_end+0xeda672>
 8016ebe:	6f622020 	svcvs	0x00622020
 8016ec2:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016ec6:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016eca:	3a737569 	bcc	9cf4476 <__exidx_end+0x1cdb292>
 8016ece:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016ed2:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016ed6:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016eda:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016ede:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016ee2:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016ee6:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016eea:	0a3b7870 	beq	8ef50b2 <__exidx_end+0xedbece>
 8016eee:	 	stmdavs	r4, {r0, r2, r3, r4, r5, r6, r9, fp}

08016ef0 <HttpContent>:
 8016ef0:	08016804 	stmdaeq	r1, {r2, fp, sp, lr}
 8016ef4:	08016daa 	stmdaeq	r1, {r1, r3, r5, r7, r8, sl, fp, sp, lr}
 8016ef8:	08016810 	stmdaeq	r1, {r4, fp, sp, lr}
 8016efc:	08016f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, sp, lr}
 8016f00:	080167f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 8016f04:	08016c49 	stmdaeq	r1, {r0, r3, r6, sl, fp, sp, lr}

08016f08 <index_js>:
 8016f08:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016f0c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016f10:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016f14:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8016f18:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016f1c:	6a284e4f 	bvs	8a2a860 <__exidx_end+0xa1167c>
 8016f20:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016f24:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8016f28:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8016f2c:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8016f30:	6a2f273d 	bvs	8be0c2c <__exidx_end+0xbc7a48>
 8016f34:	2f6e6f73 	svccs	0x006e6f73
 8016f38:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8016f3c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016f40:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8016f44:	20797274 	rsbscs	r7, r9, r4, ror r2
 8016f48:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016f4c:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8016f50:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8016f54:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8016f58:	20746961 	rsbscs	r6, r4, r1, ror #18
 8016f5c:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8016f60:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8016f64:	0a3b296c 	beq	8ee151c <__exidx_end+0xec8338>
 8016f68:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016f6c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8016f70:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8016f74:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8016f78:	73657220 	cmnvc	r5, #32, 4
 8016f7c:	6f736a2e 	svcvs	0x00736a2e
 8016f80:	3b29286e 	blcc	8a61140 <__exidx_end+0xa47f5c>
 8016f84:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016f88:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8016f8c:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8016f90:	6f727265 	svcvs	0x00727265
 8016f94:	7b202972 	blvc	8821564 <__exidx_end+0x808380>
 8016f98:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016f9c:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8016fa0:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8016fa4:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8016fa8:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8016fac:	3b29726f 	blcc	8a73970 <__exidx_end+0xa5a78c>
 8016fb0:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016fb4:	0a0a7d0a 	beq	82b63e4 <__exidx_end+0x29d200>
 8016fb8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016fbc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016fc0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016fc4:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8016fc8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016fcc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016fd0:	20292874 	eorcs	r2, r9, r4, ror r8
 8016fd4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016fd8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016fdc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016fe0:	6177613d 	cmnvs	r7, sp, lsr r1
 8016fe4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016fe8:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016fec:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016ff0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016ff4:	0a3b2927 	beq	8ee1498 <__exidx_end+0xec82b4>
 8016ff8:	6f640909 	svcvs	0x00640909
 8016ffc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8017000:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8017004:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017008:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801700c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8017010:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8017014:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8017018:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801701c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8017020:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017024:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8017028:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 801702c:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8017030:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8017034:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8017038:	2b656d61 	blcs	99725c4 <__exidx_end+0x19593e0>
 801703c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016fbc <index_js+0xb4>
 8017040:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017044:	2b223e69 	blcs	88a69f0 <__exidx_end+0x88d80c>
 8017048:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801704c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017050:	6f6e2e74 	svcvs	0x006e2e74
 8017054:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8017058:	2b657079 	blcs	9973244 <__exidx_end+0x195a060>
 801705c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016fdc <index_js+0xd4>
 8017060:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017064:	2b223e69 	blcs	88a6a10 <__exidx_end+0x88d82c>
 8017068:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801706c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8017070:	6f6e2e74 	svcvs	0x006e2e74
 8017074:	702e6564 	eorvc	r6, lr, r4, ror #10
 8017078:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 801707c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8017080:	2f3c222b 	svccs	0x003c222b
 8017084:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017088:	0a7d0a3b 	beq	9f5997c <__exidx_end+0x1f40798>
 801708c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8017090:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8017094:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017098:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801709c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80170a0:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80170a4:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80170a8:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80170ac:	0a7b2029 	beq	9edf158 <__exidx_end+0x1ec5f74>
 80170b0:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80170b4:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80170b8:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80170bc:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80170c0:	6177613d 	cmnvs	r7, sp, lsr r1
 80170c4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80170c8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80170cc:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80170d0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80170d4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80170d8:	3b292779 	blcc	8a60ec4 <__exidx_end+0xa47ce0>
 80170dc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80170e0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80170e4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80170e8:	0a22223d 	beq	889f9e4 <__exidx_end+0x886800>
 80170ec:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80170f0:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80170f4:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80170f8:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80170fc:	6a624f3d 	bvs	98aadf8 <__exidx_end+0x1891c14>
 8017100:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8017104:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8017108:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 801710c:	6f746365 	svcvs	0x00746365
 8017110:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8017114:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8017118:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 801711c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8017120:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8017124:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8017128:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 801712c:	6145726f 	cmpvs	r5, pc, ror #4
 8017130:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8017134:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017138:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801713c:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8017140:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017144:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017148:	20726176 	rsbscs	r6, r2, r6, ror r1
 801714c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8017150:	203d2065 	eorscs	r2, sp, r5, rrx
 8017154:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017158:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 801715c:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8017160:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8017164:	6b5b5d22 	blvs	96ee5f4 <__exidx_end+0x16d5410>
 8017168:	3b5d7965 	blcc	9775704 <__exidx_end+0x175c520>
 801716c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017170:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8017174:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8017178:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 801717c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017180:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8017184:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8017188:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801718c:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8017190:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017194:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8017198:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 801719c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80171a0:	0a3b223e 	beq	8edfaa0 <__exidx_end+0xec68bc>
 80171a4:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80171a8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80171ac:	6f640909 	svcvs	0x00640909
 80171b0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80171b4:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80171b8:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80171bc:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80171c0:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80171c4:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80171c8:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80171cc:	6f746365 	svcvs	0x00746365
 80171d0:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80171d4:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80171d8:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80171dc:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80171e0:	3b6c6d74 	blcc	9b327b8 <__exidx_end+0x1b195d4>
 80171e4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80171e8:	5f746567 	svcpl	0x00746567
 80171ec:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80171f0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80171f4:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80171f8:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80171fc:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8017200:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8017204:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8017208:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801720c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017210:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8017214:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8017218:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801721c:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8017220:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017224:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017228:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 801722c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8017230:	6177613d 	cmnvs	r7, sp, lsr r1
 8017234:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017238:	534a7465 	movtpl	r7, #42085	; 0xa465
 801723c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8017240:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017244:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8017248:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801724c:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8017250:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8017254:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8017258:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 801725c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8017260:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8017264:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8017268:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801726c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8017270:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8017274:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8017278:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 801727c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8017280:	2b22563e 	blcs	88acb80 <__exidx_end+0x89399c>
 8017284:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017288:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801728c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017290:	2b6e6f69 	blcs	9bb303c <__exidx_end+0x1b99e58>
 8017294:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017214 <index_js+0x30c>
 8017298:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801729c:	2b223e69 	blcs	88a6c48 <__exidx_end+0x88da64>
 80172a0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80172a4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80172a8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80172ac:	61642e64 	cmnvs	r4, r4, ror #28
 80172b0:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80172b4:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80172b8:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80172bc:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80172c0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80172c4:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80172c8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80172cc:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80172d0:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80172d4:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80172d8:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80172dc:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80172e0:	6f697372 	svcvs	0x00697372
 80172e4:	6f622e6e 	svcvs	0x00622e6e
 80172e8:	2b647261 	blcs	9933c74 <__exidx_end+0x191aa90>
 80172ec:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801726c <index_js+0x364>
 80172f0:	3b223e69 	blcc	88a6c9c <__exidx_end+0x88dab8>
 80172f4:	0a0a7d0a 	beq	82b6724 <__exidx_end+0x29d540>
 80172f8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80172fc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8017300:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017304:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017308:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8017310 <index_js+0x408>
 801730c:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8017310:	20296c65 	eorcs	r6, r9, r5, ror #24
 8017314:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8017318:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 801731c:	613d7478 	teqvs	sp, r8, ror r4
 8017320:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017324:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8017328:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801732c:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8017330:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017334:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017338:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801733c:	3b22223d 	blcc	889fc38 <__exidx_end+0x886a54>
 8017340:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8017344:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8017348:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 801734c:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8017350:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017354:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8017358:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 801735c:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8017360:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017364:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017368:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 801736c:	0a7b2029 	beq	9edf418 <__exidx_end+0x1ec6234>
 8017370:	61760909 	cmnvs	r6, r9, lsl #18
 8017374:	61762072 	cmnvs	r6, r2, ror r0
 8017378:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801737c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8017380:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017384:	6b5b5d6c 	blvs	96ee93c <__exidx_end+0x16d5758>
 8017388:	3b5d7965 	blcc	9775924 <__exidx_end+0x175c740>
 801738c:	2009090a 	andcs	r0, r9, sl, lsl #18
 8017390:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017394:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8017398:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 801739c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80173a0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80173a4:	2f3c222b 	svccs	0x003c222b
 80173a8:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80173ac:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80173b0:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80173b4:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80173b8:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80173bc:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80173c4 <index_js+0x4bc>
 80173c0:	3b223e72 	blcc	88a6d90 <__exidx_end+0x88dbac>
 80173c4:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80173c8:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80173cc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80173d0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80173d4:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 80173d8:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 80173dc:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80173e0:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 80173e4:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80173e8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80173ec:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80173f0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80173f4:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80173f8:	0a3b6c6d 	beq	8ef25b4 <__exidx_end+0xed93d0>
 80173fc:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8017400:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017404:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8017408:	3b292874 	blcc	8a615e0 <__exidx_end+0xa483fc>
 801740c:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8017410:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8017414:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017418:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801741c:	0a3b2928 	beq	8ee18c4 <__exidx_end+0xec86e0>
 8017420:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017424:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8017428:	6f697372 	svcvs	0x00697372
 801742c:	3b29286e 	blcc	8a615ec <__exidx_end+0xa48408>
 8017430:	3933320a 	ldmdbcc	r3!, {r1, r3, r9, ip, sp}
 8017434:	3535322e 	ldrcc	r3, [r5, #-558]!	; 0xfffffdd2
 8017438:	302e302e 	eorcc	r3, lr, lr, lsr #32
 801743c:	342e2500 	strtcc	r2, [lr], #-1280	; 0xfffffb00
 8017440:	25207338 	strcs	r7, [r0, #-824]!	; 0xfffffcc8
 8017444:	2e300073 	mrccs	0, 1, r0, cr0, cr3, {3}
 8017448:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
 801744c:	65736163 	ldrbvs	r6, [r3, #-355]!	; 0xfffffe9d
 8017450:	616d2073 	smcvs	53763	; 0xd203
 8017454:	65686374 	strbvs	r6, [r8, #-884]!	; 0xfffffc8c
 8017458:	74202c64 	strtvc	r2, [r0], #-3172	; 0xfffff39c
 801745c:	20736968 	rsbscs	r6, r3, r8, ror #18
 8017460:	756f6873 	strbvc	r6, [pc, #-2163]!	; 8016bf5 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x115>
 8017464:	276e646c 	strbcs	r6, [lr, -ip, ror #8]!
 8017468:	61682074 	smcvs	33284	; 0x8204
 801746c:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
 8017470:	48000a21 	stmdami	r0, {r0, r5, r9, fp}
 8017474:	4c005054 	stcmi	0, cr5, [r0], {84}	; 0x54
 8017478:	42005054 	andmi	r5, r0, #84	; 0x54
 801747c:	67646972 			; <UNDEFINED> instruction: 0x67646972
 8017480:	20000a65 	andcs	r0, r0, r5, ror #20
 8017484:	6d726946 			; <UNDEFINED> instruction: 0x6d726946
 8017488:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 801748c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017490:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017494:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 8017498:	20204449 	eorcs	r4, r0, r9, asr #8
 801749c:	20202020 	eorcs	r2, r0, r0, lsr #32
 80174a0:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80174a4:	4f20000a 	svcmi	0x0020000a
 80174a8:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 80174ac:	20000a74 	andcs	r0, r0, r4, ror sl
 80174b0:	726f5020 	rsbvc	r5, pc, #32
 80174b4:	32252074 	eorcc	r2, r5, #116	; 0x74
 80174b8:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80174bc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80174c0:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80174c4:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 80174c8:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
 80174cc:	4920000a 	stmdbmi	r0!, {r1, r3}
 80174d0:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 80174d4:	2020000a 	eorcs	r0, r0, sl
 80174d8:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 80174dc:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 80174e0:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80174e4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80174e8:	2d252065 	stccs	0, cr2, [r5, #-404]!	; 0xfffffe6c
 80174ec:	5b206433 	blpl	88305c0 <__exidx_end+0x8173dc>
 80174f0:	0a5d6425 	beq	977058c <__exidx_end+0x17573a8>
 80174f4:	79532000 	ldmdbvc	r3, {sp}^
 80174f8:	7268636e 	rsbvc	r6, r8, #-1207959551	; 0xb8000001
 80174fc:	7a696e6f 	bvc	9a72ec0 <__exidx_end+0x1a59cdc>
 8017500:	73692065 	cmnvc	r9, #101	; 0x65
 8017504:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8017508:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801750c:	 	movwpl	r0, #2660	; 0xa64

0801750f <E131MsgConst::START>:
 801750f:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8017513:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8017517:	43417320 	movtmi	r7, #4896	; 0x1320
 801751b:	3145204e 	cmpcc	r5, lr, asr #32
 801751f:	0031332e 	eorseq	r3, r1, lr, lsr #6

08017523 <E131MsgConst::PARAMS>:
 8017523:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8017527:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801752b:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801752f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8017533:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8017537:	 	movwvc	r3, #307	; 0x133

0801753a <E131MsgConst::STARTED>:
 801753a:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801753e:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8017542:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8017546:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801754a:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 801754e:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8017552:	0066666f 	rsbeq	r6, r6, pc, ror #12
 8017556:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801755a:	6b636162 	blvs	98efaea <__exidx_end+0x18d6906>
 801755e:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8017562:	6f007475 	svcvs	0x00007475
 8017566:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 801756a:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 801756e:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8017572:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 8017576:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 801757a:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 801757e:	754f2058 	strbvc	r2, [pc, #-88]	; 801752e <E131MsgConst::PARAMS+0xb>
 8017582:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 8017586:	584d4400 	stmdapl	sp, {sl, lr}^
 801758a:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 801758e:	00007475 	andeq	r7, r0, r5, ror r4
	...

08017594 <CSWTCH.56>:
 8017594:	0801754d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, ip, sp, lr}
 8017598:	08017552 	stmdaeq	r1, {r1, r4, r6, r8, sl, ip, sp, lr}
 801759c:	0801682a 	stmdaeq	r1, {r1, r3, r5, fp, sp, lr}
 80175a0:	08017556 	stmdaeq	r1, {r1, r2, r4, r6, r8, sl, ip, sp, lr}

080175a4 <E131ParamsConst::PRIORITY>:
 80175a4:	6f697270 	svcvs	0x00697270
 80175a8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80175ac:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80175b0:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80175b4:	72700000 	rsbsvc	r0, r0, #0
 80175b8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80175bc:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 80175c0:	5f74726f 	svcpl	0x0074726f
 80175c4:	00000062 	andeq	r0, r0, r2, rrx
 80175c8:	6f697270 	svcvs	0x00697270
 80175cc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80175d0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80175d4:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80175d8:	72700000 	rsbsvc	r0, r0, #0
 80175dc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80175e0:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 80175e4:	5f74726f 	svcpl	0x0074726f
 80175e8:	00000064 	andeq	r0, r0, r4, rrx

080175ec <E131ParamsConst::FILE_NAME>:
 80175ec:	31333165 	teqcc	r3, r5, ror #2
 80175f0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

080175f5 <E117Const::ACN_PACKET_IDENTIFIER>:
 80175f5:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80175f9:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80175fd:	00000037 	andeq	r0, r0, r7, lsr r0

08017601 <E131BridgeConst::VERSION>:
 8017601:	33321901 	teqcc	r2, #16384	; 0x4000
 8017605:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8017609:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 801760d:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8017611:	33320033 	teqcc	r2, #51	; 0x33
 8017615:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8017619:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 801761d:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8017621:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 8017625:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8017629:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801762d:	6f632065 	svcvs	0x00632065
 8017631:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8017635:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8017639:	0a6e6f69 	beq	9bb33e5 <__exidx_end+0x1b9a201>
 801763d:	6f502000 	svcvs	0x00502000
 8017641:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8017645:	20205044 	eorcs	r5, r0, r4, asr #32
 8017649:	20202020 	eorcs	r2, r0, r0, lsr #32
 801764d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017651:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017655:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017659:	20000a64 	andcs	r0, r0, r4, ror #20
 801765d:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8017661:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8017665:	6f6a2074 	svcvs	0x006a2074
 8017669:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 801766d:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8017671:	3a207473 	bcc	8834845 <__exidx_end+0x81b661>
 8017675:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017679:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801767d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017681:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8017685:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8017689:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 801768d:	73655220 	cmnvc	r5, #32, 4
 8017691:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8017695:	20202065 	eorcs	r2, r0, r5, rrx
 8017699:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801769d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80176a1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80176a5:	0a64252e 	beq	9920b65 <__exidx_end+0x1907981>
 80176a9:	 	andeq	r0, r0, r0

080176ac <vtable for LLRPDevice>:
	...
 80176b4:	0800c4db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, sl, lr, pc}
 80176b8:	0800c4e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, lr, pc}
 80176bc:	0800c4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, lr, pc}
 80176c0:	0800c4df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, sl, lr, pc}
 80176c4:	0800c4e1 	stmdaeq	r0, {r0, r5, r6, r7, sl, lr, pc}

080176c8 <RDMNetConst::MSG_CONFIG>:
 80176c8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80176cc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80176d0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80176d4:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80176d8:	 	andpl	r7, r0, #1694498816	; 0x65000000

080176db <RDMNetConst::MSG_STARTED>:
 80176db:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80176df:	73207465 			; <UNDEFINED> instruction: 0x73207465
 80176e3:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80176e7:	 	movwpl	r6, #1125	; 0x465

080176ea <RDMNetConst::MSG_START>:
 80176ea:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80176ee:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80176f2:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 80176f6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80176fa:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80176fe:	000a7465 	andeq	r7, sl, r5, ror #8
 8017702:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8017706:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801770a:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 801770e:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8017712:	6f707365 	svcvs	0x00707365
 8017716:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 801771a:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801771e:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8017722:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8017726:	000a6e6f 	andeq	r6, sl, pc, ror #28
 801772a:	6f725020 	svcvs	0x00725020
 801772e:	6f636f74 	svcvs	0x00636f74
 8017732:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8017736:	6f697372 	svcvs	0x00697372
 801773a:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 801773e:	0a64252e 	beq	9920bfe <__exidx_end+0x1907a1a>
 8017742:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8017746:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 801774a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801774e:	20202073 	eorcs	r2, r0, r3, ror r0
 8017752:	3a202020 	bcc	881f7da <__exidx_end+0x8065f6>
 8017756:	0a642520 	beq	9920bde <__exidx_end+0x19079fa>
 801775a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801775e:	6f462058 	svcvs	0x00462058
 8017762:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8017766:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801776a:	3a202020 	bcc	881f7f2 <__exidx_end+0x80660e>
 801776e:	0a642520 	beq	9920bf6 <__exidx_end+0x1907a12>
 8017772:	65502000 	ldrbvs	r2, [r0, #-0]
 8017776:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801777a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801777e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8017782:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8017786:	5b206425 	blpl	8830822 <__exidx_end+0x81763e>
 801778a:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801778e:	20000a5d 	andcs	r0, r0, sp, asr sl
 8017792:	20627553 	rsbcs	r7, r2, r3, asr r5
 8017796:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801779a:	20736563 	rsbscs	r6, r3, r3, ror #10
 801779e:	20202020 	eorcs	r2, r0, r0, lsr #32
 80177a2:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80177a6:	20000a64 	andcs	r0, r0, r4, ror #20
 80177aa:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 80177ae:	2073726f 	rsbscs	r7, r3, pc, ror #4
 80177b2:	20202020 	eorcs	r2, r0, r0, lsr #32
 80177b6:	20202020 	eorcs	r2, r0, r0, lsr #32
 80177ba:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80177be:	00000a64 	andeq	r0, r0, r4, ror #20
	...

080177c4 <vtable for RDMDeviceResponder>:
	...
 80177cc:	0800c9cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, fp, lr, pc}
 80177d0:	0800c9ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, fp, lr, pc}
 80177d4:	0800c9c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r8, fp, lr, pc}
 80177d8:	0800c9c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp, lr, pc}

080177dc <UID_ALL>:
 80177dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80177e0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

080177e4 <RDMHandler::PID_DEFINITIONS>:
 80177e4:	00000060 	andeq	r0, r0, r0, rrx
 80177e8:	0800cebd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, fp, lr, pc}
	...
 80177f8:	01010000 	mrseq	r0, (UNDEF: 1)
 80177fc:	00000080 	andeq	r0, r0, r0, lsl #1
 8017800:	0800cfa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, lr, pc}
	...
 8017810:	01010100 	mrseq	r0, (UNDEF: 17)
 8017814:	00000081 	andeq	r0, r0, r1, lsl #1
 8017818:	0800cfc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, fp, lr, pc}
	...
 8017828:	01010100 	mrseq	r0, (UNDEF: 17)
 801782c:	00000082 	andeq	r0, r0, r2, lsl #1
 8017830:	0800cfe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, lr, pc}
 8017834:	00000000 	andeq	r0, r0, r0
 8017838:	0800d131 	stmdaeq	r0, {r0, r4, r5, r8, ip, lr, pc}
 801783c:	00000000 	andeq	r0, r0, r0
 8017840:	01010100 	mrseq	r0, (UNDEF: 17)
 8017844:	00000090 	muleq	r0, r0, r0
 8017848:	0800cf25 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, fp, lr, pc}
 801784c:	00000000 	andeq	r0, r0, r0
 8017850:	0800d0fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, ip, lr, pc}
 8017854:	00000000 	andeq	r0, r0, r0
 8017858:	01010100 	mrseq	r0, (UNDEF: 17)
 801785c:	00001000 	andeq	r1, r0, r0
 8017860:	0800d01d 	stmdaeq	r0, {r0, r2, r3, r4, ip, lr, pc}
 8017864:	00000000 	andeq	r0, r0, r0
 8017868:	0800d081 	stmdaeq	r0, {r0, r7, ip, lr, pc}
 801786c:	00000000 	andeq	r0, r0, r0
 8017870:	01010000 	mrseq	r0, (UNDEF: 1)
 8017874:	00001001 	andeq	r1, r0, r1
	...
 8017880:	0800d039 	stmdaeq	r0, {r0, r3, r4, r5, ip, lr, pc}
 8017884:	00000000 	andeq	r0, r0, r0
 8017888:	01010100 	mrseq	r0, (UNDEF: 17)
 801788c:	00000700 	andeq	r0, r0, r0, lsl #14
 8017890:	0800d429 	stmdaeq	r0, {r0, r3, r5, sl, ip, lr, pc}
	...
 80178a0:	01000000 	mrseq	r0, (UNDEF: 0)
 80178a4:	00000701 	andeq	r0, r0, r1, lsl #14
 80178a8:	0800d451 	stmdaeq	r0, {r0, r4, r6, sl, ip, lr, pc}
	...
 80178b8:	01000004 	tsteq	r0, r4
 80178bc:	00000702 	andeq	r0, r0, r2, lsl #14
 80178c0:	0800d49d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sl, ip, lr, pc}
	...
 80178d0:	01000004 	tsteq	r0, r4
 80178d4:	00000703 	andeq	r0, r0, r3, lsl #14
 80178d8:	0800d4cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, ip, lr, pc}
 80178dc:	00000000 	andeq	r0, r0, r0
 80178e0:	0800d4f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sl, ip, lr, pc}
 80178e4:	00000000 	andeq	r0, r0, r0
 80178e8:	01000004 	tsteq	r0, r4
 80178ec:	00000704 	andeq	r0, r0, r4, lsl #14
 80178f0:	0800d565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, ip, lr, pc}
 80178f4:	00000000 	andeq	r0, r0, r0
 80178f8:	0800d595 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, ip, lr, pc}
 80178fc:	00000000 	andeq	r0, r0, r0
 8017900:	01000004 	tsteq	r0, r4
 8017904:	00000705 	andeq	r0, r0, r5, lsl #14
 8017908:	0800d609 	stmdaeq	r0, {r0, r3, r9, sl, ip, lr, pc}
	...
 8017918:	01000004 	tsteq	r0, r4
 801791c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8017928:	0800d5dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, ip, lr, pc}
 801792c:	00000000 	andeq	r0, r0, r0
 8017930:	01000004 	tsteq	r0, r4
 8017934:	00000706 	andeq	r0, r0, r6, lsl #14
 8017938:	0800d651 	stmdaeq	r0, {r0, r4, r6, r9, sl, ip, lr, pc}
 801793c:	00000000 	andeq	r0, r0, r0
 8017940:	0800d695 	stmdaeq	r0, {r0, r2, r4, r7, r9, sl, ip, lr, pc}
 8017944:	00000000 	andeq	r0, r0, r0
 8017948:	01000004 	tsteq	r0, r4
 801794c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8017958:	0800d6e1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, ip, lr, pc}
 801795c:	00000000 	andeq	r0, r0, r0
 8017960:	01000004 	tsteq	r0, r4
 8017964:	0000070b 	andeq	r0, r0, fp, lsl #14
 8017968:	0800d541 	stmdaeq	r0, {r0, r6, r8, sl, ip, lr, pc}
	...
 8017978:	01000001 	tsteq	r0, r1
 801797c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8017980:	0800d709 	stmdaeq	r0, {r0, r3, r8, r9, sl, ip, lr, pc}
 8017984:	00000000 	andeq	r0, r0, r0
 8017988:	0800d741 	stmdaeq	r0, {r0, r6, r8, r9, sl, ip, lr, pc}
 801798c:	00000000 	andeq	r0, r0, r0
 8017990:	01000004 	tsteq	r0, r4
 8017994:	0000070c 	andeq	r0, r0, ip, lsl #14
 8017998:	0800d749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, ip, lr, pc}
 801799c:	00000000 	andeq	r0, r0, r0
 80179a0:	0800d779 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, ip, lr, pc}
 80179a4:	00000000 	andeq	r0, r0, r0
 80179a8:	01000000 	mrseq	r0, (UNDEF: 0)
 80179ac:	0000070d 	andeq	r0, r0, sp, lsl #14
 80179b0:	0800d7ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, ip, lr, pc}
 80179b4:	00000000 	andeq	r0, r0, r0
 80179b8:	0800d7dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, lr, pc}
 80179bc:	00000000 	andeq	r0, r0, r0
 80179c0:	01000000 	mrseq	r0, (UNDEF: 0)
 80179c4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80179c8:	2f2f3a73 	svccs	0x002f3a73
 80179cc:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 80179d0:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 80179d4:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 80179d8:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 80179dc:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 80179e0:	20656369 	rsbcs	r6, r5, r9, ror #6
 80179e4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80179e8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80179ec:	6f697461 	svcvs	0x00697461
 80179f0:	20000a6e 	andcs	r0, r0, lr, ror #20
 80179f4:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 80179f8:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 80179fc:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 8017a00:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 8017a04:	203a2065 	eorscs	r2, sl, r5, rrx
 8017a08:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8017a0c:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8017a10:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8017a14:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8017a18:	20726572 	rsbscs	r6, r2, r2, ror r5
 8017a1c:	20204449 	eorcs	r4, r0, r9, asr #8
 8017a20:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017a24:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017a28:	0a58322e 	beq	96242e8 <__exidx_end+0x160b104>
 8017a2c:	65532000 	ldrbvs	r2, [r3, #-0]
 8017a30:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 8017a34:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 8017a38:	20726562 	rsbscs	r6, r2, r2, ror #10
 8017a3c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a40:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017a44:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8017a48:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8017a4c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8017a50:	000a5832 	andeq	r5, sl, r2, lsr r8
 8017a54:	6f6f5220 	svcvs	0x006f5220
 8017a58:	616c2074 	smcvs	49668	; 0xc204
 8017a5c:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8017a60:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a64:	3a202020 	bcc	881faec <__exidx_end+0x806908>
 8017a68:	2a2e2520 	bcs	8ba0ef0 <__exidx_end+0xb87d0c>
 8017a6c:	20000a73 	andcs	r0, r0, r3, ror sl
 8017a70:	646f7250 	strbtvs	r7, [pc], #-592	; 8017a78 <RDMHandler::PID_DEFINITIONS+0x294>
 8017a74:	20746375 	rsbscs	r6, r4, r5, ror r3
 8017a78:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 8017a7c:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017a80:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017a84:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017a88:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017a8c:	5020000a 	eorpl	r0, r0, sl
 8017a90:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8017a94:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 8017a98:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 8017a9c:	2020206c 	eorcs	r2, r0, ip, rrx
 8017aa0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017aa4:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017aa8:	0a58322e 	beq	9624368 <__exidx_end+0x160b184>
	...

08017aad <DEVICE_LABEL>:
 8017aad:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8017ab1:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8017ab5:	52204752 	eorpl	r4, r0, #21495808	; 0x1480000
 8017ab9:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8017abd:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8017ac1:	 	subseq	r0, r0, r5, rrx

08017ac3 <RDMConst::MANUFACTURER_ID>:
 8017ac3:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08017ac5 <RDMConst::MANUFACTURER_NAME>:
 8017ac5:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8017ac9:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8017acd:	6f2e7777 	svcvs	0x002e7777
 8017ad1:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8017ad5:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8017ad9:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8017add:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8017ae1:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 8017ae5:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 8017ae9:	30252d78 	eorcc	r2, r5, r8, ror sp
 8017aed:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8017af1:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8017af5:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8017af9:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017afd:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b01:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b05:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b09:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b0d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b11:	78695000 	stmdavc	r9!, {ip, lr}^
 8017b15:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 8017b19:	6320584d 			; <UNDEFINED> instruction: 0x6320584d
 8017b1d:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8017b21:	61727567 	cmnvs	r2, r7, ror #10
 8017b25:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017b29:	4f20000a 	svcmi	0x0020000a
 8017b2d:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8017b31:	3a207374 	bcc	8834909 <__exidx_end+0x81b725>
 8017b35:	0a642520 	beq	9920fbd <__exidx_end+0x1907dd9>
 8017b39:	72472000 	subvc	r2, r7, #0
 8017b3d:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
 8017b41:	6320676e 			; <UNDEFINED> instruction: 0x6320676e
 8017b45:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8017b49:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017b4d:	475b2064 	ldrbmi	r2, [fp, -r4, rrx]
 8017b51:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8017b55:	203a2073 	eorscs	r2, sl, r3, ror r0
 8017b59:	0a5d6425 	beq	9770bf5 <__exidx_end+0x1757a11>
 8017b5d:	 	andeq	r0, r0, r0

08017b60 <vtable for WS28xxDmxMulti>:
	...
 8017b68:	0800dac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, ip, lr, pc}
 8017b6c:	0800dae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, ip, lr, pc}
 8017b70:	0800da9f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r9, fp, ip, lr, pc}
 8017b74:	0800dc51 	stmdaeq	r0, {r0, r4, r6, sl, fp, ip, lr, pc}
 8017b78:	0800db1b 	stmdaeq	r0, {r0, r1, r3, r4, r8, r9, fp, ip, lr, pc}
 8017b7c:	0800daf3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 8017b80:	0800dc33 	stmdaeq	r0, {r0, r1, r4, r5, sl, fp, ip, lr, pc}
 8017b84:	0800dc4b 	stmdaeq	r0, {r0, r1, r3, r6, sl, fp, ip, lr, pc}
 8017b88:	0800da91 	stmdaeq	r0, {r0, r4, r7, r9, fp, ip, lr, pc}
 8017b8c:	0800da95 	stmdaeq	r0, {r0, r2, r4, r7, r9, fp, ip, lr, pc}
 8017b90:	0800da9b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r9, fp, ip, lr, pc}
 8017b94:	08013353 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, ip, sp}
 8017b98:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8017b9c:	2a2e253a 	bcs	8ba108c <__exidx_end+0xb87ea8>
 8017ba0:	23002c66 	movwcs	r2, #3174	; 0xc66
 8017ba4:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8017ba8:	0a662a2e 	beq	99a2468 <__exidx_end+0x1989284>
 8017bac:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 8017bb0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 8017bb4:	4f003e74 	svcmi	0x00003e74
 8017bb8:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8017bbc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8017bc0:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8017bc4:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8017bc8:	4f007465 	svcmi	0x00007465
 8017bcc:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8017bd0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8017bd4:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8017bd8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8017bdc:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 8017be0:	6f724700 	svcvs	0x00724700
 8017be4:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8017be8:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8017bec:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8017bf0:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 8017bf4:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8017bf8:	00737069 	rsbseq	r7, r3, r9, rrx
 8017bfc:	31415041 	cmpcc	r1, r1, asr #32
 8017c00:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 8017c04:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8017c08:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 8017c0c:	70207473 	eorvc	r7, r0, r3, ror r4
 8017c10:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8017c14:	59006e72 	stmdbpl	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
 8017c18:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 8017c1c:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 8017c20:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8017c24:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8017c28:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8017c2c:	6f697461 	svcvs	0x00697461
 8017c30:	20000a6e 	andcs	r0, r0, lr, ror #20
 8017c34:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8017c38:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017c3c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8017c40:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8017c44:	20000a5d 	andcs	r0, r0, sp, asr sl
 8017c48:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8017c4c:	20202074 	eorcs	r2, r0, r4, ror r0
 8017c50:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017c54:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8017c58:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8017c5c:	3a20676e 	bcc	8831a1c <__exidx_end+0x818838>
 8017c60:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8017c64:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8017c68:	5420000a 	strtpl	r0, [r0], #-10
 8017c6c:	20204830 	eorcs	r4, r0, r0, lsr r8
 8017c70:	3a202020 	bcc	881fcf8 <__exidx_end+0x806b14>
 8017c74:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8017c78:	305b2066 	subscc	r2, fp, r6, rrx
 8017c7c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8017c80:	5420000a 	strtpl	r0, [r0], #-10
 8017c84:	20204831 	eorcs	r4, r0, r1, lsr r8
 8017c88:	3a202020 	bcc	881fd10 <__exidx_end+0x806b2c>
 8017c8c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8017c90:	305b2066 	subscc	r2, fp, r6, rrx
 8017c94:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8017c98:	4720000a 	strmi	r0, [r0, -sl]!
 8017c9c:	61626f6c 	cmnvs	r2, ip, ror #30
 8017ca0:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 8017ca4:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8017ca8:	3a737365 	bcc	9cf4a44 <__exidx_end+0x1cdb860>
 8017cac:	0a752520 	beq	9d61134 <__exidx_end+0x1d47f50>
 8017cb0:	61472000 	mrsvs	r2, (UNDEF: 71)
 8017cb4:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 8017cb8:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 8017cbc:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8017cc0:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8017cc4:	20000a73 	andcs	r0, r0, r3, ror sl
 8017cc8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8017ccc:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 8017cd0:	7a482075 	bvc	921feac <__exidx_end+0x1206cc8>
 8017cd4:	0000000a 	andeq	r0, r0, sl

08017cd8 <CSWTCH.9>:
 8017cd8:	08017eec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8017cdc:	08017fec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8017ce0:	080180ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, pc}
 8017ce4:	080181ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, pc}
 8017ce8:	080182ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, pc}

08017cec <gamma10_0>:
 8017cec:	03020100 	movweq	r0, #8448	; 0x2100
 8017cf0:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8017cf4:	0b0a0908 	bleq	829a11c <__exidx_end+0x280f38>
 8017cf8:	0f0e0d0c 	svceq	0x000e0d0c
 8017cfc:	13121110 	tstne	r2, #16, 2
 8017d00:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8017d04:	1b1a1918 	blne	869e16c <__exidx_end+0x684f88>
 8017d08:	1f1e1d1c 	svcne	0x001e1d1c
 8017d0c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8017d10:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8017d14:	2b2a2928 	blcs	8aa21bc <__exidx_end+0xa88fd8>
 8017d18:	2f2e2d2c 	svccs	0x002e2d2c
 8017d1c:	33323130 	teqcc	r2, #48, 2
 8017d20:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8017d24:	3b3a3938 	blcc	8ea620c <__exidx_end+0xe8d028>
 8017d28:	3f3e3d3c 	svccc	0x003e3d3c
 8017d2c:	43424140 	movtmi	r4, #8512	; 0x2140
 8017d30:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8017d34:	4b4a4948 	blmi	92aa25c <__exidx_end+0x1291078>
 8017d38:	4f4e4d4c 	svcmi	0x004e4d4c
 8017d3c:	53525150 	cmppl	r2, #80, 2
 8017d40:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8017d44:	5b5a5958 	blpl	96ae2ac <__exidx_end+0x16950c8>
 8017d48:	5f5e5d5c 	svcpl	0x005e5d5c
 8017d4c:	63626160 	cmnvs	r2, #96, 2
 8017d50:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8017d54:	6b6a6968 	blvs	9ab22fc <__exidx_end+0x1a99118>
 8017d58:	6f6e6d6c 	svcvs	0x006e6d6c
 8017d5c:	73727170 	cmnvc	r2, #112, 2
 8017d60:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8017d64:	7b7a7978 	blvc	9eb634c <__exidx_end+0x1e9d168>
 8017d68:	7f7e7d7c 	svcvc	0x007e7d7c
 8017d6c:	83828180 	orrhi	r8, r2, #128, 2
 8017d70:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8017d74:	8b8a8988 	blhi	62ba39c <__stack_size+0x62b7b9c>
 8017d78:	8f8e8d8c 	svchi	0x008e8d8c
 8017d7c:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8017d80:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8017d84:	9b9a9998 	blls	66be3ec <__stack_size+0x66bbbec>
 8017d88:	9f9e9d9c 	svcls	0x009e9d9c
 8017d8c:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8017d90:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8017d94:	abaaa9a8 	blge	6ac243c <__stack_size+0x6abfc3c>
 8017d98:	afaeadac 	svcge	0x00aeadac
 8017d9c:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8017da0:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8017da4:	bbbab9b8 	bllt	6ec648c <__stack_size+0x6ec3c8c>
 8017da8:	bfbebdbc 	svclt	0x00bebdbc
 8017dac:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8017db0:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8017db4:	cbcac9c8 	blgt	72ca4dc <__stack_size+0x72c7cdc>
 8017db8:	cfcecdcc 	svcgt	0x00cecdcc
 8017dbc:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8017dc0:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8017dc4:	dbdad9d8 	blle	76ce52c <__stack_size+0x76cbd2c>
 8017dc8:	dfdedddc 	svcle	0x00dedddc
 8017dcc:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8017dd0:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8017dd4:	ebeae9e8 	bl	7ad257c <__stack_size+0x7acfd7c>
 8017dd8:	efeeedec 	svc	0x00eeedec
 8017ddc:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8017de0:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8017de4:	fbfaf9f8 	blx	7ed65ce <__stack_size+0x7ed3dce>
 8017de8:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08017dec <gamma20_0>:
	...
 8017df8:	01010101 	tsteq	r1, r1, lsl #2
 8017dfc:	01010101 	tsteq	r1, r1, lsl #2
 8017e00:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8017e04:	03030202 	movweq	r0, #12802	; 0x3202
 8017e08:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8017e0c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8017e10:	06060505 	streq	r0, [r6], -r5, lsl #10
 8017e14:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8017e18:	09080808 	stmdbeq	r8, {r3, fp}
 8017e1c:	0a0a0909 	beq	829a248 <__exidx_end+0x281064>
 8017e20:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8017e24:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8017e28:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8017e2c:	12111110 	andsne	r1, r1, #16, 2
 8017e30:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8017e34:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8017e38:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8017e3c:	1b1a1a19 	blne	869e6a8 <__exidx_end+0x6854c4>
 8017e40:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8017e44:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8017e48:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8017e4c:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8017e50:	2a292827 	bcs	8a61ef4 <__exidx_end+0xa48d10>
 8017e54:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8017e58:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8017e5c:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8017e60:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8017e64:	3b3a3938 	blcc	8ea634c <__exidx_end+0xe8d168>
 8017e68:	3f3e3d3c 	svccc	0x003e3d3c
 8017e6c:	43424140 	movtmi	r4, #8512	; 0x2140
 8017e70:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8017e74:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8017e78:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8017e7c:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8017e80:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8017e84:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8017e88:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8017e8c:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8017e90:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8017e94:	7371706f 	cmnvc	r1, #111	; 0x6f
 8017e98:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8017e9c:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8017ea0:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8017ea4:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8017ea8:	8f8e8c8b 	svchi	0x008e8c8b
 8017eac:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8017eb0:	9b9a9897 	blls	66be114 <__stack_size+0x66bb914>
 8017eb4:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8017eb8:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8017ebc:	afadabaa 	svcge	0x00adabaa
 8017ec0:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8017ec4:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8017ec8:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8017ecc:	cac8c7c5 	bgt	7249de8 <__stack_size+0x72475e8>
 8017ed0:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8017ed4:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8017ed8:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8017edc:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8017ee0:	efedebe9 	svc	0x00edebe9
 8017ee4:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8017ee8:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08017eec <gamma21_0>:
	...
 8017ef8:	01010000 	mrseq	r0, (UNDEF: 1)
 8017efc:	01010101 	tsteq	r1, r1, lsl #2
 8017f00:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8017f04:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8017f08:	03030302 	movweq	r0, #13058	; 0x3302
 8017f0c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8017f10:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8017f14:	06060505 	streq	r0, [r6], -r5, lsl #10
 8017f18:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8017f1c:	09080808 	stmdbeq	r8, {r3, fp}
 8017f20:	0a0a0909 	beq	829a34c <__exidx_end+0x281168>
 8017f24:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8017f28:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8017f2c:	0f0f0e0e 	svceq	0x000f0e0e
 8017f30:	11111010 	tstne	r1, r0, lsl r0
 8017f34:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8017f38:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8017f3c:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8017f40:	1b1a1919 	blne	869e3ac <__exidx_end+0x6851c8>
 8017f44:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8017f48:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8017f4c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8017f50:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8017f54:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8017f58:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8017f5c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8017f60:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8017f64:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8017f68:	3b3a3938 	blcc	8ea6450 <__exidx_end+0xe8d26c>
 8017f6c:	3f3e3d3c 	svccc	0x003e3d3c
 8017f70:	43424140 	movtmi	r4, #8512	; 0x2140
 8017f74:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8017f78:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8017f7c:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8017f80:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8017f84:	5a585756 	bpl	962dce4 <__exidx_end+0x1614b00>
 8017f88:	5f5d5c5b 	svcpl	0x005d5c5b
 8017f8c:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8017f90:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8017f94:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8017f98:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8017f9c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8017fa0:	7f7e7c7b 	svcvc	0x007e7c7b
 8017fa4:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8017fa8:	8b898886 	blhi	627a1c8 <__stack_size+0x62779c8>
 8017fac:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8017fb0:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8017fb4:	9e9c9b99 	vmovls.32	r9, d28[0]
 8017fb8:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8017fbc:	abaaa8a6 	blge	6ac225c <__stack_size+0x6abfa5c>
 8017fc0:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8017fc4:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8017fc8:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8017fcc:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8017fd0:	cfcdcbca 	svcgt	0x00cdcbca
 8017fd4:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8017fd8:	dfdddbd9 	svcle	0x00dddbd9
 8017fdc:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8017fe0:	eeeceae8 	vfms.f32	s29, s25, s17
 8017fe4:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8017fe8:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08017fec <gamma22_0>:
	...
 8017ff8:	01000000 	mrseq	r0, (UNDEF: 0)
 8017ffc:	01010101 	tsteq	r1, r1, lsl #2
 8018000:	01010101 	tsteq	r1, r1, lsl #2
 8018004:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8018008:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801800c:	03030303 	movweq	r0, #13059	; 0x3303
 8018010:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8018014:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018018:	06060605 	streq	r0, [r6], -r5, lsl #12
 801801c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018020:	09080808 	stmdbeq	r8, {r3, fp}
 8018024:	0a0a0909 	beq	829a450 <__exidx_end+0x28126c>
 8018028:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801802c:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018030:	0f0f0e0e 	svceq	0x000f0e0e
 8018034:	11111010 	tstne	r1, r0, lsl r0
 8018038:	13131212 	tstne	r3, #536870913	; 0x20000001
 801803c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018040:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018044:	1a1a1919 	bne	869e4b0 <__exidx_end+0x6852cc>
 8018048:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801804c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018050:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018054:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018058:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801805c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8018060:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018064:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8018068:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801806c:	3b3a3938 	blcc	8ea6554 <__exidx_end+0xe8d370>
 8018070:	3f3e3d3c 	svccc	0x003e3d3c
 8018074:	43424140 	movtmi	r4, #8512	; 0x2140
 8018078:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801807c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018080:	514f4e4d 	cmppl	pc, sp, asr #28
 8018084:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8018088:	5a595857 	bpl	966e1ec <__exidx_end+0x1655008>
 801808c:	5f5e5d5b 	svcpl	0x005e5d5b
 8018090:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8018094:	6a696766 	bvs	9a71e34 <__exidx_end+0x1a58c50>
 8018098:	6f6e6d6b 	svcvs	0x006e6d6b
 801809c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 80180a0:	7b797877 	blvc	9e76284 <__exidx_end+0x1e5d0a0>
 80180a4:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 80180a8:	87858482 	strhi	r8, [r5, r2, lsl #9]
 80180ac:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 80180b0:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 80180b4:	9a999795 	bls	667df10 <__stack_size+0x667b710>
 80180b8:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 80180bc:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 80180c0:	afadacaa 	svcge	0x00adacaa
 80180c4:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 80180c8:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 80180cc:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 80180d0:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 80180d4:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 80180d8:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 80180dc:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 80180e0:	eeeceae7 	vfms.f32	s29, s25, s15
 80180e4:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 80180e8:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

080180ec <gamma23_0>:
	...
 80180fc:	01010100 	mrseq	r0, (UNDEF: 17)
 8018100:	01010101 	tsteq	r1, r1, lsl #2
 8018104:	01010101 	tsteq	r1, r1, lsl #2
 8018108:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801810c:	03020202 	movweq	r0, #8706	; 0x2202
 8018110:	03030303 	movweq	r0, #13059	; 0x3303
 8018114:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8018118:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801811c:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018120:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8018124:	09080808 	stmdbeq	r8, {r3, fp}
 8018128:	0a0a0a09 	beq	829a954 <__exidx_end+0x281770>
 801812c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018130:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8018134:	0f0f0e0e 	svceq	0x000f0e0e
 8018138:	11111010 	tstne	r1, r0, lsl r0
 801813c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018140:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8018144:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018148:	1a1a1918 	bne	869e5b0 <__exidx_end+0x6853cc>
 801814c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018150:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018154:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8018158:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801815c:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8018160:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8018164:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8018168:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801816c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8018170:	3b3a3938 	blcc	8ea6658 <__exidx_end+0xe8d474>
 8018174:	3f3e3d3c 	svccc	0x003e3d3c
 8018178:	43424140 	movtmi	r4, #8512	; 0x2140
 801817c:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8018180:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8018184:	51504f4e 	cmppl	r0, lr, asr #30
 8018188:	56555452 			; <UNDEFINED> instruction: 0x56555452
 801818c:	5b5a5957 	blpl	96ae6f0 <__exidx_end+0x169550c>
 8018190:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8018194:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8018198:	6b6a6867 	blvs	9ab233c <__exidx_end+0x1a99158>
 801819c:	71706e6d 	cmnvc	r0, sp, ror #28
 80181a0:	77757472 			; <UNDEFINED> instruction: 0x77757472
 80181a4:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 80181a8:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 80181ac:	8a888685 	bhi	6239bc8 <__stack_size+0x62373c8>
 80181b0:	908f8d8b 	addls	r8, pc, fp, lsl #27
 80181b4:	97959492 			; <UNDEFINED> instruction: 0x97959492
 80181b8:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 80181bc:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 80181c0:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 80181c4:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 80181c8:	bbb9b7b6 	bllt	6e860a8 <__stack_size+0x6e838a8>
 80181cc:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 80181d0:	cbc9c7c5 	blgt	728a0ec <__stack_size+0x72878ec>
 80181d4:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 80181d8:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 80181dc:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 80181e0:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 80181e4:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 80181e8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080181ec <gamma24_0>:
	...
 80181fc:	01000000 	mrseq	r0, (UNDEF: 0)
 8018200:	01010101 	tsteq	r1, r1, lsl #2
 8018204:	01010101 	tsteq	r1, r1, lsl #2
 8018208:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 801820c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018210:	03030202 	movweq	r0, #12802	; 0x3202
 8018214:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8018218:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801821c:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8018220:	06060606 	streq	r0, [r6], -r6, lsl #12
 8018224:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8018228:	09090808 	stmdbeq	r9, {r3, fp}
 801822c:	0a0a0a09 	beq	829aa58 <__exidx_end+0x281874>
 8018230:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8018234:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8018238:	0f0f0e0e 	svceq	0x000f0e0e
 801823c:	11111010 	tstne	r1, r0, lsl r0
 8018240:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018244:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8018248:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 801824c:	1a1a1918 	bne	869e6b4 <__exidx_end+0x6854d0>
 8018250:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018254:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8018258:	23222120 			; <UNDEFINED> instruction: 0x23222120
 801825c:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8018260:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8018264:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8018268:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 801826c:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018270:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8018274:	3b3a3938 	blcc	8ea675c <__exidx_end+0xe8d578>
 8018278:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 801827c:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8018280:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8018284:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8018288:	5251504e 	subspl	r5, r1, #78	; 0x4e
 801828c:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8018290:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8018294:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8018298:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 801829c:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 80182a0:	7372706f 	cmnvc	r2, #111	; 0x6f
 80182a4:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 80182a8:	7f7e7c7b 	svcvc	0x007e7c7b
 80182ac:	86848381 	strhi	r8, [r4], r1, lsl #7
 80182b0:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 80182b4:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 80182b8:	9b999795 	blls	667e114 <__stack_size+0x667b914>
 80182bc:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 80182c0:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 80182c4:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 80182c8:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 80182cc:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 80182d0:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 80182d4:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 80182d8:	dad8d6d4 	ble	764de30 <__stack_size+0x764b630>
 80182dc:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 80182e0:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 80182e4:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 80182e8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080182ec <gamma25_0>:
	...
 8018300:	01010000 	mrseq	r0, (UNDEF: 1)
 8018304:	01010101 	tsteq	r1, r1, lsl #2
 8018308:	01010101 	tsteq	r1, r1, lsl #2
 801830c:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8018310:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018314:	03030302 	movweq	r0, #13058	; 0x3302
 8018318:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801831c:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8018320:	06050505 	streq	r0, [r5], -r5, lsl #10
 8018324:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8018328:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 801832c:	09090808 	stmdbeq	r9, {r3, fp}
 8018330:	0a0a0a09 	beq	829ab5c <__exidx_end+0x281978>
 8018334:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8018338:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801833c:	0f0f0f0e 	svceq	0x000f0f0e
 8018340:	11111010 	tstne	r1, r0, lsl r0
 8018344:	13131212 	tstne	r3, #536870913	; 0x20000001
 8018348:	16151414 			; <UNDEFINED> instruction: 0x16151414
 801834c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8018350:	1a1a1919 	bne	869e7bc <__exidx_end+0x6855d8>
 8018354:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8018358:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 801835c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8018360:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8018364:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8018368:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 801836c:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8018370:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8018374:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018378:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 801837c:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8018380:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8018384:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8018388:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 801838c:	53525150 	cmppl	r2, #80, 2
 8018390:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8018394:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8018398:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801839c:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 80183a0:	6f6e6c6b 	svcvs	0x006e6c6b
 80183a4:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 80183a8:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 80183ac:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 80183b0:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 80183b4:	908e8d8b 	addls	r8, lr, fp, lsl #27
 80183b8:	97969492 			; <UNDEFINED> instruction: 0x97969492
 80183bc:	9f9d9b99 	svcls	0x009d9b99
 80183c0:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 80183c4:	aeacaaa8 	vfmage.f32	s20, s25, s17
 80183c8:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 80183cc:	bfbdbab8 	svclt	0x00bdbab8
 80183d0:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 80183d4:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 80183d8:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 80183dc:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 80183e0:	ebe9e7e4 	bl	7a92378 <__stack_size+0x7a8fb78>
 80183e4:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 80183e8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080183ec <gamma25_5>:
 80183ec:	01010100 	mrseq	r0, (UNDEF: 17)
 80183f0:	01010101 	tsteq	r1, r1, lsl #2
 80183f4:	01010101 	tsteq	r1, r1, lsl #2
 80183f8:	01010101 	tsteq	r1, r1, lsl #2
 80183fc:	01010101 	tsteq	r1, r1, lsl #2
 8018400:	01010101 	tsteq	r1, r1, lsl #2
 8018404:	01010101 	tsteq	r1, r1, lsl #2
 8018408:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801840c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8018410:	03030302 	movweq	r0, #13058	; 0x3302
 8018414:	03030303 	movweq	r0, #13059	; 0x3303
 8018418:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 801841c:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8018420:	06060605 	streq	r0, [r6], -r5, lsl #12
 8018424:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8018428:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 801842c:	0a090909 	beq	825a858 <__exidx_end+0x241674>
 8018430:	0b0b0a0a 	bleq	82dac60 <__exidx_end+0x2c1a7c>
 8018434:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8018438:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 801843c:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8018440:	12111110 	andsne	r1, r1, #16, 2
 8018444:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8018448:	16161514 			; <UNDEFINED> instruction: 0x16161514
 801844c:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8018450:	1b1a1a19 	blne	869ecbc <__exidx_end+0x685ad8>
 8018454:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8018458:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 801845c:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8018460:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8018464:	2a292827 	bcs	8a62508 <__exidx_end+0xa49324>
 8018468:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 801846c:	31302f2e 	teqcc	r0, lr, lsr #30
 8018470:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8018474:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8018478:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 801847c:	41403f3e 	cmpmi	r0, lr, lsr pc
 8018480:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8018484:	4a494846 	bmi	926a5a4 <__exidx_end+0x12513c0>
 8018488:	4f4e4c4b 	svcmi	0x004e4c4b
 801848c:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8018490:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8018494:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8018498:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 801849c:	6a686765 	bvs	9a32238 <__exidx_end+0x1a19054>
 80184a0:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 80184a4:	76747371 			; <UNDEFINED> instruction: 0x76747371
 80184a8:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 80184ac:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 80184b0:	8a888685 	bhi	6239ecc <__stack_size+0x62376cc>
 80184b4:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 80184b8:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 80184bc:	9f9d9c9a 	svcls	0x009d9c9a
 80184c0:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 80184c4:	afadaba9 	svcge	0x00adaba9
 80184c8:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 80184cc:	bfbdbbb9 	svclt	0x00bdbbb9
 80184d0:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 80184d4:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 80184d8:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 80184dc:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 80184e0:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 80184e4:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 80184e8:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 80184ec:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80184f0:	006e776f 	rsbeq	r7, lr, pc, ror #14
 80184f4:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80184f8:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80184fc:	 	andeq	r0, r0, #100	; 0x64

080184fe <CSWTCH.18>:
 80184fe:	02020200 	andeq	r0, r2, #0, 4
 8018502:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8018506:	 	ldrbmi	r0, [r2, -r0, lsl #10]

08018508 <PixelType::MAPS>:
 8018508:	00424752 	subeq	r4, r2, r2, asr r7
 801850c:	00474252 	subeq	r4, r7, r2, asr r2
 8018510:	00425247 	subeq	r5, r2, r7, asr #4
 8018514:	00524247 	subseq	r4, r2, r7, asr #4
 8018518:	00475242 	subeq	r5, r7, r2, asr #4
 801851c:	00524742 	subseq	r4, r2, r2, asr #14

08018520 <PixelType::TYPES>:
 8018520:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8018524:	00003130 	andeq	r3, r0, r0, lsr r1
 8018528:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801852c:	00003131 	andeq	r3, r0, r1, lsr r1
 8018530:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8018534:	00003231 	andeq	r3, r0, r1, lsr r2
 8018538:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801853c:	00423231 	subeq	r3, r2, r1, lsr r2
 8018540:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8018544:	00003331 	andeq	r3, r0, r1, lsr r3
 8018548:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801854c:	00003531 	andeq	r3, r0, r1, lsr r5
 8018550:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8018554:	00003231 	andeq	r3, r0, r1, lsr r2
 8018558:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801855c:	00573231 	subseq	r3, r7, r1, lsr r2
 8018560:	31534355 	cmpcc	r3, r5, asr r3
 8018564:	00333039 	eorseq	r3, r3, r9, lsr r0
 8018568:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801856c:	00333039 	eorseq	r3, r3, r9, lsr r0
 8018570:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8018574:	00003231 	andeq	r3, r0, r1, lsr r2
 8018578:	31415041 	cmpcc	r1, r1, asr #32
 801857c:	00003230 	andeq	r3, r0, r0, lsr r2
 8018580:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8018584:	00003232 	andeq	r3, r0, r2, lsr r2
 8018588:	31383950 	teqcc	r8, r0, asr r9
 801858c:	00000033 	andeq	r0, r0, r3, lsr r0

08018590 <s_patternName>:
 8018590:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 801859c:	61520000 	cmpvs	r2, r0
 80185a0:	6f626e69 	svcvs	0x00626e69
 80185a4:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 80185a8:	00656c63 	rsbeq	r6, r5, r3, ror #24
 80185ac:	61656854 	cmnvs	r5, r4, asr r8
 80185b0:	20726574 	rsbscs	r6, r2, r4, ror r5
 80185b4:	73616863 	cmnvc	r1, #6488064	; 0x630000
 80185b8:	6f430065 	svcvs	0x00430065
 80185bc:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 80185c0:	70697720 	rsbvc	r7, r9, r0, lsr #14
 80185c4:	00000065 	andeq	r0, r0, r5, rrx
 80185c8:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 80185cc:	0072656e 	rsbseq	r6, r2, lr, ror #10
 80185d0:	00000000 	andeq	r0, r0, r0
 80185d4:	61460000 	mrsvs	r0, (UNDEF: 70)
 80185d8:	00006564 	andeq	r6, r0, r4, ror #10
	...

080185e4 <pixel::s_GPIO_PINs>:
 80185e4:	00003fc0 	andeq	r3, r0, r0, asr #31

080185e8 <s_aStorSize>:
 80185e8:	00000060 	andeq	r0, r0, r0, rrx
 80185ec:	00000090 	muleq	r0, r0, r0
 80185f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80185f4:	00000040 	andeq	r0, r0, r0, asr #32
 80185f8:	00000060 	andeq	r0, r0, r0, rrx
 80185fc:	00000040 	andeq	r0, r0, r0, asr #32
 8018600:	00000020 	andeq	r0, r0, r0, lsr #32
 8018604:	00000020 	andeq	r0, r0, r0, lsr #32
 8018608:	000001e0 	andeq	r0, r0, r0, ror #3
 801860c:	00000040 	andeq	r0, r0, r0, asr #32
 8018610:	00000020 	andeq	r0, r0, r0, lsr #32
 8018614:	00000060 	andeq	r0, r0, r0, rrx
 8018618:	00000030 	andeq	r0, r0, r0, lsr r0
 801861c:	00000020 	andeq	r0, r0, r0, lsr #32
 8018620:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8018624:	00000030 	andeq	r0, r0, r0, lsr r0
 8018628:	00000040 	andeq	r0, r0, r0, asr #32
 801862c:	00000020 	andeq	r0, r0, r0, lsr #32
 8018630:	00000060 	andeq	r0, r0, r0, rrx
 8018634:	00000020 	andeq	r0, r0, r0, lsr #32
 8018638:	00000400 	andeq	r0, r0, r0, lsl #8
 801863c:	00000020 	andeq	r0, r0, r0, lsr #32
 8018640:	00000020 	andeq	r0, r0, r0, lsr #32
 8018644:	00000040 	andeq	r0, r0, r0, asr #32
 8018648:	00000060 	andeq	r0, r0, r0, rrx
 801864c:	00000020 	andeq	r0, r0, r0, lsr #32
 8018650:	00000020 	andeq	r0, r0, r0, lsr #32
 8018654:	000000c0 	andeq	r0, r0, r0, asr #1

08018658 <vtable for StoreDisplayUdf>:
	...
 8018660:	0800fcdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, fp, ip, sp, lr, pc}
 8018664:	0800fd29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, ip, sp, lr, pc}
 8018668:	0800fd05 	stmdaeq	r0, {r0, r2, r8, sl, fp, ip, sp, lr, pc}
 801866c:	0800fce1 	stmdaeq	r0, {r0, r5, r6, r7, sl, fp, ip, sp, lr, pc}

08018670 <vtable for StoreNetwork>:
	...
 8018678:	0800fd49 	stmdaeq	r0, {r0, r3, r6, r8, sl, fp, ip, sp, lr, pc}
 801867c:	0800fe2d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, fp, ip, sp, lr, pc}
 8018680:	0800fd51 	stmdaeq	r0, {r0, r4, r6, r8, sl, fp, ip, sp, lr, pc}
 8018684:	0800fe41 	stmdaeq	r0, {r0, r6, r9, sl, fp, ip, sp, lr, pc}
 8018688:	0800fdd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 801868c:	0800fda5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, fp, ip, sp, lr, pc}
 8018690:	0800fd75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, sl, fp, ip, sp, lr, pc}
 8018694:	0800fdfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8018698:	08008995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, pc}
 801869c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80186a0:	00000000 	andeq	r0, r0, r0
 80186a4:	0800fd4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, ip, sp, lr, pc}
 80186a8:	0800fe39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, ip, sp, lr, pc}
 80186ac:	0800fdf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 80186b0:	0800fdc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 80186b4:	0800fd9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, ip, sp, lr, pc}
 80186b8:	0800fe25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, ip, sp, lr, pc}
 80186bc:	080089bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, fp, pc}

080186c0 <vtable for StoreRDMDevice>:
	...
 80186c8:	0800fe79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr, pc}
 80186cc:	0800fee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
 80186d0:	0800fe81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, sp, lr, pc}
 80186d4:	0800fefd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
 80186d8:	0800fea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, ip, sp, lr, pc}
 80186dc:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80186e0:	00000000 	andeq	r0, r0, r0
 80186e4:	0800fe7b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr, pc}
 80186e8:	0800fef5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
 80186ec:	0800fee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}

080186f0 <vtable for StoreRemoteConfig>:
	...
 80186f8:	0800ff39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr, pc}
 80186fc:	0800ff85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8018700:	0800ff61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, sp, lr, pc}
 8018704:	0800ff3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr, pc}

08018708 <vtable for StoreE131>:
	...
 8018710:	0800ffa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8018714:	0800fff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8018718:	0800ffcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 801871c:	0800ffa9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, fp, ip, sp, lr, pc}

08018720 <vtable for StorePixelDmx>:
	...
 8018728:	08010011 	stmdaeq	r1, {r0, r4}
 801872c:	0801017d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8}
 8018730:	08010019 	stmdaeq	r1, {r0, r3, r4}
 8018734:	08010191 	stmdaeq	r1, {r0, r4, r7, r8}
 8018738:	08010149 	stmdaeq	r1, {r0, r3, r6, r8}
 801873c:	08010115 	stmdaeq	r1, {r0, r2, r4, r8}
 8018740:	080100dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7}
 8018744:	080100a5 	stmdaeq	r1, {r0, r2, r5, r7}
 8018748:	08010071 	stmdaeq	r1, {r0, r4, r5, r6}
 801874c:	0801003d 	stmdaeq	r1, {r0, r2, r3, r4, r5}
 8018750:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8018754:	00000000 	andeq	r0, r0, r0
 8018758:	08010013 	stmdaeq	r1, {r0, r1, r4}
 801875c:	08010189 	stmdaeq	r1, {r0, r3, r7, r8}
 8018760:	08010175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8}
 8018764:	08010141 	stmdaeq	r1, {r0, r6, r8}
 8018768:	0801010d 	stmdaeq	r1, {r0, r2, r3, r8}
 801876c:	080100d5 	stmdaeq	r1, {r0, r2, r4, r6, r7}
 8018770:	0801009d 	stmdaeq	r1, {r0, r2, r3, r4, r7}
 8018774:	08010069 	stmdaeq	r1, {r0, r3, r5, r6}
 8018778:	3a434d46 	bcc	90ebc98 <__exidx_end+0x10d2ab4>
 801877c:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8018780:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8018784:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8018788:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801878c:	6f742068 	svcvs	0x00742068
 8018790:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8018794:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8018798:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801879c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80187a0:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 80187a4:	6374000a 	cmnvs	r4, #10
 80187a8:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 80187ac:	3a6e6967 	bcc	9bb2d50 <__exidx_end+0x1b99b6c>
 80187b0:	6f6f7420 	svcvs	0x006f7420
 80187b4:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 80187b8:	6f632079 	svcvs	0x00632079
 80187bc:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80187c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80187c4:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80187c8:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80187cc:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80187d0:	41000a64 	tstmi	r0, r4, ror #20
 80187d4:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80187d8:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80187dc:	61662070 	smcvs	25088	; 0x6200
 80187e0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80187e4:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80187e8:	61666564 	cmnvs	r6, r4, ror #10
 80187ec:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80187f0:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80187f4:	0a796177 	beq	9e70dd8 <__exidx_end+0x1e57bf4>
 80187f8:	50524100 	subspl	r4, r2, r0, lsl #2
 80187fc:	6f6f6c20 	svcvs	0x006f6c20
 8018800:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8018804:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8018808:	000a6465 	andeq	r6, sl, r5, ror #8

0801880c <NetworkConst::MSG_MDNS_CONFIG>:
 801880c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018810:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8018814:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8018818:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801881d <NetworkConst::MSG_NETWORK_INIT>:
 801881d:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8018821:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8018825:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8018829:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801882d:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8018831:	3135322e 	teqcc	r5, lr, lsr #4
 8018835:	63745f00 	cmnvs	r4, #0, 30
 8018839:	6f6c2e70 	svcvs	0x006c2e70
 801883d:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8018841:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8018845:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8018849:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8018851 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801884d:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8018851:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80179f5 <RDMHandler::PID_DEFINITIONS+0x211>
 8018855:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8018859:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801885d:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8018861:	20000a53 	andcs	r0, r0, r3, asr sl
 8018865:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018869:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801886d:	0a676e69 	beq	99f4219 <__exidx_end+0x19db035>
 8018871:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8018875:	3a20656d 	bcc	8831e31 <__exidx_end+0x818c4d>
 8018879:	0a732520 	beq	9ce1d01 <__exidx_end+0x1cc8b1d>
 801887d:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8018881:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8018885:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018889:	30687465 	rsbcc	r7, r8, r5, ror #8
 801888d:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8018891:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8018895:	5f656369 	svcpl	0x00656369
 8018899:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801889d:	6b726f77 	blvs	9cb4681 <__exidx_end+0x1c9b49d>
 80188a1:	4820000a 	stmdami	r0!, {r1, r3}
 80188a5:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 80188a9:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80188ad:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80188b1:	20000a73 	andcs	r0, r0, r3, ror sl
 80188b5:	614e6649 	cmpvs	lr, r9, asr #12
 80188b9:	2020656d 	eorcs	r6, r0, sp, ror #10
 80188bd:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80188c1:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80188c5:	000a7325 	andeq	r7, sl, r5, lsr #6
 80188c9:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80188cd:	20202074 	eorcs	r2, r0, r4, ror r0
 80188d1:	3a202020 	bcc	8820959 <__exidx_end+0x807775>
 80188d5:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80188d9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80188dd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80188e1:	0a64252f 	beq	9921da5 <__exidx_end+0x1908bc1>
 80188e5:	654e2000 	strbvs	r2, [lr, #-0]
 80188e9:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80188ed:	2020206b 	eorcs	r2, r0, fp, rrx
 80188f1:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80188f5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80188f9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80188fd:	20000a64 	andcs	r0, r0, r4, ror #20
 8018901:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8018905:	20796177 	rsbscs	r6, r9, r7, ror r1
 8018909:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801890d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018911:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018915:	0a64252e 	beq	9921dd5 <__exidx_end+0x1908bf1>
 8018919:	72422000 	subvc	r2, r2, #0
 801891d:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8018921:	20747361 	rsbscs	r7, r4, r1, ror #6
 8018925:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018929:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801892d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018931:	20000a64 	andcs	r0, r0, r4, ror #20
 8018935:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8018939:	20202020 	eorcs	r2, r0, r0, lsr #32
 801893d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8018941:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8018945:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8018949:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801894d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8018951:	3a78322e 	bcc	9e25211 <__exidx_end+0x1e0c02d>
 8018955:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8018959:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801895d:	20000a78 	andcs	r0, r0, r8, ror sl
 8018961:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8018965:	20202020 	eorcs	r2, r0, r0, lsr #32
 8018969:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801896d:	000a6325 	andeq	r6, sl, r5, lsr #6
 8018971:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8018975:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8018979:	 	rsbvc	r0, r9, r0, asr r0

0801897b <NetworkParamsConst::IP_ADDRESS>:
 801897b:	615f7069 	cmpvs	pc, r9, rrx
 801897f:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8018983:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08018986 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8018986:	61666564 	cmnvs	r6, r4, ror #10
 801898a:	5f746c75 	svcpl	0x00746c75
 801898e:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8018992:	00796177 	rsbseq	r6, r9, r7, ror r1

08018996 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8018996:	70636864 	rsbvc	r6, r3, r4, ror #16
 801899a:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801899e:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80189a6 <NetworkParamsConst::HOSTNAME>
 80189a2:	00656d69 	rsbeq	r6, r5, r9, ror #26

080189a6 <NetworkParamsConst::HOSTNAME>:
 80189a6:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80189aa:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080189af <NetworkParamsConst::NET_MASK>:
 80189af:	5f74656e 	svcpl	0x0074656e
 80189b3:	6b73616d 	blvs	9cf0f6f <__exidx_end+0x1cd7d8b>
	...

080189b8 <NetworkParamsConst::USE_DHCP>:
 80189b8:	5f657375 	svcpl	0x00657375
 80189bc:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080189c1 <NetworkParamsConst::FILE_NAME>:
 80189c1:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80189c5:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80189c9:	00747874 	rsbseq	r7, r4, r4, ror r8
 80189cd:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80189d1:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80189d5:	61747320 	cmnvs	r4, r0, lsr #6
 80189d9:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80189dd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80189e1:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80189e5:	252f6425 	strcs	r6, [pc, #-1061]!	; 80185c8 <s_patternName+0x38>
 80189e9:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80189ed:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80189f1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80189f5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80189f9:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80189fd:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8018a01:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018a05:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018a09:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8018a0d:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8018a11:	20657261 	rsbcs	r7, r5, r1, ror #4
 8018a15:	2a2e2556 	bcs	8ba1f75 <__exidx_end+0xb88d91>
 8018a19:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8018a1d:	72205043 	eorvc	r5, r0, #67	; 0x43
 8018a21:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8018a25:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8018a29:	50434844 	subpl	r4, r3, r4, asr #16
 8018a2d:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8018a31:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8018a35:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8018a39:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8018a3d:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8018a41:	6f647475 	svcvs	0x00647475
 8018a45:	 	stcle	14, cr6, [r0], {119}	; 0x77

08018a48 <pArray>:
 8018a48:	08018adc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, fp, pc}
 8018a4c:	08018a98 	stmdaeq	r1, {r3, r4, r7, r9, fp, pc}
 8018a50:	0801897b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, fp, pc}
 8018a54:	08018ae2 	stmdaeq	r1, {r1, r5, r6, r7, r9, fp, pc}
 8018a58:	08018d52 	stmdaeq	r1, {r1, r4, r6, r8, sl, fp, pc}
 8018a5c:	08018aa3 	stmdaeq	r1, {r0, r1, r5, r7, r9, fp, pc}
 8018a60:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 8018a64:	080189a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, fp, pc}
 8018a68:	08018bf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8018a6c:	08018c09 	stmdaeq	r1, {r0, r3, sl, fp, pc}
 8018a70:	08018c19 	stmdaeq	r1, {r0, r3, r4, sl, fp, pc}
 8018a74:	08018c29 	stmdaeq	r1, {r0, r3, r5, sl, fp, pc}
 8018a78:	080189af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, fp, pc}
 8018a7c:	08018d21 	stmdaeq	r1, {r0, r5, r8, sl, fp, pc}
 8018a80:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 8018a84:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 8018a88:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 8018a8c:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}
 8018a90:	08018986 	stmdaeq	r1, {r1, r2, r7, r8, fp, pc}
 8018a94:	08018ab0 	stmdaeq	r1, {r4, r5, r7, r9, fp, pc}

08018a98 <DisplayUdfParamsConst::BOARD_NAME>:
 8018a98:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8018a9c:	616e5f64 	cmnvs	lr, r4, ror #30
 8018aa0:	 	tstvs	r0, sp, ror #10

08018aa3 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8018aa3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8018aa7:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8018aab:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08018ab0 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8018ab0:	5f786d64 	svcpl	0x00786d64
 8018ab4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018ab8:	6f697463 	svcvs	0x00697463
 8018abc:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08018abe <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8018abe:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8018ac2:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018ac6:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8018561 <PixelType::TYPES+0x41>
 8018aca:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08018acc <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8018acc:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8018ad0:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8018ad4:	61636974 	smcvs	13972	; 0x3694
 8018ad8:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08018adc <DisplayUdfParamsConst::TITLE>:
 8018adc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8018ae0:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08018ae2 <DisplayUdfParamsConst::VERSION>:
 8018ae2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018ae6:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08018aea <DisplayUdfParamsConst::FILE_NAME>:
 8018aea:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018aee:	2e79616c 	rpwcsez	f6, f1, #4.0
 8018af2:	00747874 	rsbseq	r7, r4, r4, ror r8

08018af6 <DisplayUdfParamsConst::INTENSITY>:
 8018af6:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8018afa:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8018afe:	50410079 	subpl	r0, r1, r9, ror r0
 8018b02:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018b06:	726f5000 	rsbvc	r5, pc, #0
 8018b0a:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8018b0e:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8018b12:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8018b16:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8018b1a:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8018b1e:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8018b22:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

08018b27 <DevicesParamsConst::ACTIVE_OUT>:
 8018b27:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8018b2b:	6f5f6576 	svcvs	0x005f6576
 8018b2f:	 	smlsdxvs	r0, r5, r4, r7

08018b32 <DevicesParamsConst::GAMMA_VALUE>:
 8018b32:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 8018b36:	61765f61 	cmnvs	r6, r1, ror #30
 8018b3a:	0065756c 	rsbeq	r7, r5, ip, ror #10

08018b3e <DevicesParamsConst::SPI_SPEED_HZ>:
 8018b3e:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8018b42:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8018b46:	5f646565 	svcpl	0x00646565
 8018b4a:	 	strvc	r7, [r0], #-2664	; 0xfffff598

08018b4d <DevicesParamsConst::TEST_PATTERN>:
 8018b4d:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8018b51:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8018b55:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08018b5a <DevicesParamsConst::GROUPING_COUNT>:
 8018b5a:	5f64656c 	svcpl	0x0064656c
 8018b5e:	756f7267 	strbvc	r7, [pc, #-615]!	; 80188ff <NetworkConst::MSG_NETWORK_INIT+0xe2>
 8018b62:	6f635f70 	svcvs	0x00635f70
 8018b66:	00746e75 	rsbseq	r6, r4, r5, ror lr

08018b6a <DevicesParamsConst::GAMMA_CORRECTION>:
 8018b6a:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 8018b6e:	6f635f61 	svcvs	0x00635f61
 8018b72:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 8018b76:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

08018b7b <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8018b7b:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8018b7f:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8018b83:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8018b87:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8018b8b:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08018b8d <DevicesParamsConst::MAP>:
 8018b8d:	5f64656c 	svcpl	0x0064656c
 8018b91:	5f626772 	svcpl	0x00626772
 8018b95:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8018b99:	00676e69 	rsbeq	r6, r7, r9, ror #28

08018b9d <DevicesParamsConst::TYPE>:
 8018b9d:	5f64656c 	svcpl	0x0064656c
 8018ba1:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08018ba6 <DevicesParamsConst::COUNT>:
 8018ba6:	5f64656c 	svcpl	0x0064656c
 8018baa:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8018bae:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08018bb0 <DevicesParamsConst::LED_T0H>:
 8018bb0:	5f64656c 	svcpl	0x0064656c
 8018bb4:	00683074 	rsbeq	r3, r8, r4, ror r0

08018bb8 <DevicesParamsConst::LED_T1H>:
 8018bb8:	5f64656c 	svcpl	0x0064656c
 8018bbc:	00683174 	rsbeq	r3, r8, r4, ror r1

08018bc0 <DevicesParamsConst::FILE_NAME>:
 8018bc0:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8018bc4:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8018bc8:	00747874 	rsbseq	r7, r4, r4, ror r8
 8018bcc:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018bd0:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8018bd4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018bd8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018bdc:	002c2264 	eoreq	r2, ip, r4, ror #4
 8018be0:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8018be4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018be8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018bec:	0a64252e 	beq	99220ac <__exidx_end+0x1908ec8>
 8018bf0:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8018bf4:	0a232073 	beq	88e0dc8 <__exidx_end+0x8c7be4>
	...

08018bf9 <LightSetParamsConst::UNIVERSE_PORT>:
 8018bf9:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8018bfd:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018c01:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018c05:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8018c09:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8018c0d:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018c11:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018c15:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8018c19:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8018c1d:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018c21:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018c25:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8018c29:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8018c2d:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018c31:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018c35:	00645f74 	rsbeq	r5, r4, r4, ror pc

08018c39 <LightSetParamsConst::START_UNI_PORT>:
 8018c39:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018c3d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018c41:	6f705f69 	svcvs	0x00705f69
 8018c45:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8018c49:	00000000 	andeq	r0, r0, r0
 8018c4d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018c51:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018c55:	6f705f69 	svcvs	0x00705f69
 8018c59:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 8018c5d:	00000000 	andeq	r0, r0, r0
 8018c61:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018c65:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018c69:	6f705f69 	svcvs	0x00705f69
 8018c6d:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8018c71:	00000000 	andeq	r0, r0, r0
 8018c75:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018c79:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018c7d:	6f705f69 	svcvs	0x00705f69
 8018c81:	345f7472 	ldrbcc	r7, [pc], #-1138	; 8018c89 <LightSetParamsConst::START_UNI_PORT+0x50>
 8018c85:	00000000 	andeq	r0, r0, r0
 8018c89:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018c8d:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018c91:	6f705f69 	svcvs	0x00705f69
 8018c95:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 801882b <NetworkConst::MSG_NETWORK_INIT+0xe>
 8018c99:	00000000 	andeq	r0, r0, r0
 8018c9d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018ca1:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018ca5:	6f705f69 	svcvs	0x00705f69
 8018ca9:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 8018cad:	00000000 	andeq	r0, r0, r0
 8018cb1:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018cb5:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018cb9:	6f705f69 	svcvs	0x00705f69
 8018cbd:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8018cc1:	00000000 	andeq	r0, r0, r0
 8018cc5:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018cc9:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8018ccd:	6f705f69 	svcvs	0x00705f69
 8018cd1:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8018cd5:	00000000 	andeq	r0, r0, r0

08018cd9 <LightSetParamsConst::MERGE_MODE_PORT>:
 8018cd9:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8018cdd:	6f6d5f65 	svcvs	0x006d5f65
 8018ce1:	705f6564 	subsvc	r6, pc, r4, ror #10
 8018ce5:	5f74726f 	svcpl	0x0074726f
 8018ce9:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8018ced:	5f656772 	svcpl	0x00656772
 8018cf1:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8018cf5:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018cf9:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8018cfd:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8018d01:	6f6d5f65 	svcvs	0x006d5f65
 8018d05:	705f6564 	subsvc	r6, pc, r4, ror #10
 8018d09:	5f74726f 	svcpl	0x0074726f
 8018d0d:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8018d11:	5f656772 	svcpl	0x00656772
 8018d15:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8018d19:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018d1d:	00645f74 	rsbeq	r5, r4, r4, ror pc

08018d21 <LightSetParamsConst::DMX_START_ADDRESS>:
 8018d21:	5f786d64 	svcpl	0x00786d64
 8018d25:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018d29:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8018d2d:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8018d31:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

08018d33 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 8018d33:	61736964 	cmnvs	r3, r4, ror #18
 8018d37:	5f656c62 	svcpl	0x00656c62
 8018d3b:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8018d3f:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8018d43:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80187de <vtable for StorePixelDmx+0xbe>
 8018d47:	 	smcvs	24580	; 0x6004

08018d49 <LightSetParamsConst::FAILSAFE>:
 8018d49:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8018d4d:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

08018d52 <LightSetParamsConst::UNIVERSE>:
 8018d52:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8018d56:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08018d5b <LightSetParamsConst::DIRECTION>:
 8018d5b:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018d5f:	6f697463 	svcvs	0x00697463
 8018d63:	6f705f6e 	svcvs	0x00705f6e
 8018d67:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8018d6b:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8018d6f:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8018d73:	5f6e6f69 	svcpl	0x006e6f69
 8018d77:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8018d7b:	0000625f 	andeq	r6, r0, pc, asr r2
 8018d7f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018d83:	6f697463 	svcvs	0x00697463
 8018d87:	6f705f6e 	svcvs	0x00705f6e
 8018d8b:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8018d8f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8018d93:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8018d97:	5f6e6f69 	svcpl	0x006e6f69
 8018d9b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8018d9f:	0000645f 	andeq	r6, r0, pc, asr r4
 8018da3:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8018da7:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8018dab:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8018daf:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8018db3:	31485300 	mrscc	r5, (UNDEF: 120)
 8018db7:	00363031 	eorseq	r3, r6, r1, lsr r0
 8018dbb:	31445353 	cmpcc	r4, r3, asr r3
 8018dbf:	00363033 	eorseq	r3, r6, r3, lsr r0
 8018dc3:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8018dc7:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8018dcb:	000a2964 	andeq	r2, sl, r4, ror #18
 8018dcf:	aaeeaa40 	bge	7bc36d7 <__stack_size+0x7bc0ed7>
 8018dd3:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08018dd8 <_OledFont8x6>:
 8018dd8:	00000040 	andeq	r0, r0, r0, asr #32
 8018ddc:	40000000 	andmi	r0, r0, r0
 8018de0:	005f0000 	subseq	r0, pc, r0
 8018de4:	00400000 	subeq	r0, r0, r0
 8018de8:	00070007 	andeq	r0, r7, r7
 8018dec:	7f144000 	svcvc	0x00144000
 8018df0:	00147f14 	andseq	r7, r4, r4, lsl pc
 8018df4:	7f2a2440 	svcvc	0x002a2440
 8018df8:	4000122a 	andmi	r1, r0, sl, lsr #4
 8018dfc:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8018e00:	36400062 	strbcc	r0, [r0], -r2, rrx
 8018e04:	50205649 	eorpl	r5, r0, r9, asr #12
 8018e08:	08004000 	stmdaeq	r0, {lr}
 8018e0c:	00000307 	andeq	r0, r0, r7, lsl #6
 8018e10:	221c0040 	andscs	r0, ip, #64	; 0x40
 8018e14:	40000041 	andmi	r0, r0, r1, asr #32
 8018e18:	1c224100 	stfnes	f4, [r2], #-0
 8018e1c:	2a400000 	bcs	9018e24 <__exidx_end+0xfffc40>
 8018e20:	2a1c7f1c 	bcs	8738a98 <__exidx_end+0x71f8b4>
 8018e24:	08084000 	stmdaeq	r8, {lr}
 8018e28:	0008083e 	andeq	r0, r8, lr, lsr r8
 8018e2c:	70800040 	addvc	r0, r0, r0, asr #32
 8018e30:	40000030 	andmi	r0, r0, r0, lsr r0
 8018e34:	08080808 	stmdaeq	r8, {r3, fp}
 8018e38:	00400008 	subeq	r0, r0, r8
 8018e3c:	00606000 	rsbeq	r6, r0, r0
 8018e40:	10204000 	eorne	r4, r0, r0
 8018e44:	00020408 	andeq	r0, r2, r8, lsl #8
 8018e48:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8018e4c:	40003e45 	andmi	r3, r0, r5, asr #28
 8018e50:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8018e54:	72400000 	subvc	r0, r0, #0
 8018e58:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8018e5c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8018e60:	00334d49 	eorseq	r4, r3, r9, asr #26
 8018e64:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8018e68:	4000107f 	andmi	r1, r0, pc, ror r0
 8018e6c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8018e70:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8018e74:	3149494a 	cmpcc	r9, sl, asr #18
 8018e78:	21414000 	mrscs	r4, (UNDEF: 65)
 8018e7c:	00070911 	andeq	r0, r7, r1, lsl r9
 8018e80:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8018e84:	40003649 	andmi	r3, r0, r9, asr #12
 8018e88:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8018e8c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8018e90:	00001400 	andeq	r1, r0, r0, lsl #8
 8018e94:	40004000 	andmi	r4, r0, r0
 8018e98:	00000034 	andeq	r0, r0, r4, lsr r0
 8018e9c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8018ea0:	40004122 	andmi	r4, r0, r2, lsr #2
 8018ea4:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8018ea8:	00400014 	subeq	r0, r0, r4, lsl r0
 8018eac:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8018eb0:	01024000 	mrseq	r4, (UNDEF: 2)
 8018eb4:	00060959 	andeq	r0, r6, r9, asr r9
 8018eb8:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8018ebc:	40004e59 	andmi	r4, r0, r9, asr lr
 8018ec0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8018ec4:	7f40007c 	svcvc	0x0040007c
 8018ec8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8018ecc:	413e4000 	teqmi	lr, r0
 8018ed0:	00224141 	eoreq	r4, r2, r1, asr #2
 8018ed4:	41417f40 	cmpmi	r1, r0, asr #30
 8018ed8:	40003e41 	andmi	r3, r0, r1, asr #28
 8018edc:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8018ee0:	7f400041 	svcvc	0x00400041
 8018ee4:	01090909 	tsteq	r9, r9, lsl #18
 8018ee8:	413e4000 	teqmi	lr, r0
 8018eec:	00735141 	rsbseq	r5, r3, r1, asr #2
 8018ef0:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8018ef4:	40007f08 	andmi	r7, r0, r8, lsl #30
 8018ef8:	417f4100 	cmnmi	pc, r0, lsl #2
 8018efc:	20400000 	subcs	r0, r0, r0
 8018f00:	013f4140 	teqeq	pc, r0, asr #2
 8018f04:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8018f08:	00412214 	subeq	r2, r1, r4, lsl r2
 8018f0c:	40407f40 	submi	r7, r0, r0, asr #30
 8018f10:	40004040 	andmi	r4, r0, r0, asr #32
 8018f14:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8018f18:	7f40007f 	svcvc	0x0040007f
 8018f1c:	7f100804 	svcvc	0x00100804
 8018f20:	413e4000 	teqmi	lr, r0
 8018f24:	003e4141 	eorseq	r4, lr, r1, asr #2
 8018f28:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8018f2c:	40000609 	andmi	r0, r0, r9, lsl #12
 8018f30:	2151413e 	cmpcs	r1, lr, lsr r1
 8018f34:	7f40005e 	svcvc	0x0040005e
 8018f38:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8018f3c:	49264000 	stmdbmi	r6!, {lr}
 8018f40:	00324949 	eorseq	r4, r2, r9, asr #18
 8018f44:	7f010340 	svcvc	0x00010340
 8018f48:	40000301 	andmi	r0, r0, r1, lsl #6
 8018f4c:	4040403f 	submi	r4, r0, pc, lsr r0
 8018f50:	1f40003f 	svcne	0x0040003f
 8018f54:	1f204020 	svcne	0x00204020
 8018f58:	403f4000 	eorsmi	r4, pc, r0
 8018f5c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8018f60:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8018f64:	40006314 	andmi	r6, r0, r4, lsl r3
 8018f68:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8018f6c:	61400003 	cmpvs	r0, r3
 8018f70:	434d4959 	movtmi	r4, #55641	; 0xd959
 8018f74:	7f004000 	svcvc	0x00004000
 8018f78:	00414141 	subeq	r4, r1, r1, asr #2
 8018f7c:	08040240 	stmdaeq	r4, {r6, r9}
 8018f80:	40002010 	andmi	r2, r0, r0, lsl r0
 8018f84:	41414100 	mrsmi	r4, (UNDEF: 81)
 8018f88:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8018f8c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8018f90:	40404000 	submi	r4, r0, r0
 8018f94:	00404040 	subeq	r4, r0, r0, asr #32
 8018f98:	07030040 	streq	r0, [r3, -r0, asr #32]
 8018f9c:	40000008 	andmi	r0, r0, r8
 8018fa0:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8018fa4:	7f400040 	svcvc	0x00400040
 8018fa8:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8018fac:	44384000 	ldrtmi	r4, [r8], #-0
 8018fb0:	00284444 	eoreq	r4, r8, r4, asr #8
 8018fb4:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8018fb8:	40007f28 	andmi	r7, r0, r8, lsr #30
 8018fbc:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8018fc0:	00400018 	subeq	r0, r0, r8, lsl r0
 8018fc4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8018fc8:	a4184000 	ldrge	r4, [r8], #-0
 8018fcc:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8018fd0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8018fd4:	40007804 	andmi	r7, r0, r4, lsl #16
 8018fd8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8018fdc:	20400000 	subcs	r0, r0, r0
 8018fe0:	003d4040 	eorseq	r4, sp, r0, asr #32
 8018fe4:	107f4000 	rsbsne	r4, pc, r0
 8018fe8:	00004428 	andeq	r4, r0, r8, lsr #8
 8018fec:	7f410040 	svcvc	0x00410040
 8018ff0:	40000040 	andmi	r0, r0, r0, asr #32
 8018ff4:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8018ff8:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8018ffc:	78040408 	stmdavc	r4, {r3, sl}
 8019000:	44384000 	ldrtmi	r4, [r8], #-0
 8019004:	00384444 	eorseq	r4, r8, r4, asr #8
 8019008:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801900c:	40001824 	andmi	r1, r0, r4, lsr #16
 8019010:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8019014:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8019018:	08040408 	stmdaeq	r4, {r3, sl}
 801901c:	54484000 	strbpl	r4, [r8], #-0
 8019020:	00245454 	eoreq	r5, r4, r4, asr r4
 8019024:	3f040440 	svccc	0x00040440
 8019028:	40002444 	andmi	r2, r0, r4, asr #8
 801902c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8019030:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8019034:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8019038:	403c4000 	eorsmi	r4, ip, r0
 801903c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8019040:	10284440 	eorne	r4, r8, r0, asr #8
 8019044:	40004428 	andmi	r4, r0, r8, lsr #8
 8019048:	9090904c 	addsls	r9, r0, ip, asr #32
 801904c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8019050:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8019054:	08004000 	stmdaeq	r0, {lr}
 8019058:	00004136 	andeq	r4, r0, r6, lsr r1
 801905c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8019060:	40000000 	andmi	r0, r0, r0
 8019064:	08364100 	ldmdaeq	r6!, {r8, lr}
 8019068:	02400000 	subeq	r0, r0, #0
 801906c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8019070:	263c4000 	ldrtcs	r4, [ip], -r0
 8019074:	003c2623 	eorseq	r2, ip, r3, lsr #12

08019078 <oled_128x32_init>:
 8019078:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801907c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8019080:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8019084:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8019088:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801908c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08019090 <oled_128x64_init>:
 8019090:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8019094:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8019098:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801909c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80190a0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80190a4:	a6a440db 	ssatge	r4, #5, fp, asr #1

080190a8 <vtable for Ssd1306>:
	...
 80190b0:	080134b1 	stmdaeq	r1, {r0, r4, r5, r7, sl, ip, sp}
 80190b4:	080134dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, ip, sp}
 80190b8:	080137ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, ip, sp}
 80190bc:	08013775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp}
 80190c0:	08013641 	stmdaeq	r1, {r0, r6, r9, sl, ip, sp}
 80190c4:	080134fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, ip, sp}
 80190c8:	08013525 	stmdaeq	r1, {r0, r2, r5, r8, sl, ip, sp}
 80190cc:	08013617 	stmdaeq	r1, {r0, r1, r2, r4, r9, sl, ip, sp}
 80190d0:	080135d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, ip, sp}
 80190d4:	080134b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, ip, sp}
 80190d8:	0801367d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, ip, sp}
 80190dc:	08013689 	stmdaeq	r1, {r0, r3, r7, r9, sl, ip, sp}
 80190e0:	080136a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, ip, sp}
 80190e4:	080134b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, sl, ip, sp}
 80190e8:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80190ec:	5b1b006d 	blpl	86d92a8 <__exidx_end+0x6c00c4>
 80190f0:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 80190f4:	31335b1b 	teqcc	r3, fp, lsl fp
 80190f8:	5b1b006d 	blpl	86d92b4 <__exidx_end+0x6c00d0>
 80190fc:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8019100:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8019104:	5b1b006d 	blpl	86d92c0 <__exidx_end+0x6c00dc>
 8019108:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801910c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8019110:	205d732a 	subscs	r7, sp, sl, lsr #6
 8019114:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8019118:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801911c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8019120:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8019124:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8019128:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801912c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8019130:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019134:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019138:	000a7525 	andeq	r7, sl, r5, lsr #10
 801913c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8019140:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019144:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8019148:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801914c:	6b636f6c 	blvs	98f4f04 <__exidx_end+0x18dbd20>
 8019150:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8019154:	000a7469 	andeq	r7, sl, r9, ror #8
 8019158:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801915c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8019160:	6f6c4270 	svcvs	0x006c4270
 8019164:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8019168:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801916c:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8019170:	7a697320 	bvc	9a75df8 <__exidx_end+0x1a5cc14>
 8019174:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8019178:	6164202c 	cmnvs	r4, ip, lsr #32
 801917c:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8019180:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8019184:	3a656572 	bcc	9972754 <__exidx_end+0x1959570>
 8019188:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801918c:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8019190:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8019194:	203d2072 	eorscs	r2, sp, r2, ror r0
 8019198:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801919c:	6f6c4270 	svcvs	0x006c4270
 80191a0:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 80191a4:	0a702520 	beq	9c2262c <__exidx_end+0x1c09448>
 80191a8:	00000000 	andeq	r0, r0, r0

080191ac <days_of_month>:
 80191ac:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 80191b4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191b8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80191bc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191c0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80191c4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191c8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191cc:	0000001e 	andeq	r0, r0, lr, lsl r0
 80191d0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80191d4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80191d8:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080191dc <__exidx_start>:
 80191dc:	7fff04d4 	svcvc	0x00ff04d4
 80191e0:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080191e4 <.ARM.attributes>:
 80191e4:	00002e41 	andeq	r2, r0, r1, asr #28
 80191e8:	61656100 	cmnvs	r5, r0, lsl #2
 80191ec:	01006962 	tsteq	r0, r2, ror #18
 80191f0:	00000024 	andeq	r0, r0, r4, lsr #32
 80191f4:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 80191f8:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 80191fc:	0600334d 	streq	r3, [r0], -sp, asr #6
 8019200:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8019204:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8019208:	17011501 	strne	r1, [r1, -r1, lsl #10]
 801920c:	1a011803 	bne	805f220 <__exidx_end+0x4603c>
 8019210:	Address 0x0000000008019210 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2003c000 	andcs	ip, r3, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <HttpDaemon::m_Content>:
	...

200006b8 <guard variable for lightset::Data::Get()::instance>:
200006b8:	00000000 	andeq	r0, r0, r0

200006bc <lightset::Data::Get()::instance>:
	...

2000c73c <E131Bridge::s_pThis>:
2000c73c:	00000000 	andeq	r0, r0, r0

2000c740 <s_ReceivingMask>:
2000c740:	00000000 	andeq	r0, r0, r0

2000c744 <s_nPortsMax>:
2000c744:	00000000 	andeq	r0, r0, r0

2000c748 <LLRPDevice::s_nIpAddressFrom>:
2000c748:	00000000 	andeq	r0, r0, r0

2000c74c <LLRPDevice::m_nIpAddresLLRPRequest>:
2000c74c:	00000000 	andeq	r0, r0, r0

2000c750 <LLRPDevice::m_nIpAddressLLRPResponse>:
2000c750:	00000000 	andeq	r0, r0, r0

2000c754 <LLRPDevice::m_pLLRP>:
2000c754:	00000000 	andeq	r0, r0, r0

2000c758 <RDMNetDevice::s_RdmCommand>:
	...

2000c857 <RDMNetDevice::s_Cid>:
	...

2000c868 <RDMSensors::s_pThis>:
2000c868:	00000000 	andeq	r0, r0, r0

2000c86c <RDMSubDevices::s_pThis>:
2000c86c:	00000000 	andeq	r0, r0, r0

2000c870 <RDMDeviceResponder::s_pThis>:
2000c870:	00000000 	andeq	r0, r0, r0

2000c874 <RDMIdentify::m_bIsEnabled>:
	...

2000c875 <RDMIdentify::m_nMode>:
2000c875:	 	andeq	r0, r0, r0

2000c878 <RDMIdentify::s_pThis>:
2000c878:	00000000 	andeq	r0, r0, r0

2000c87c <PixelPatterns::m_PortConfig>:
	...

2000c97c <PixelPatterns::m_nActivePorts>:
2000c97c:	00000000 	andeq	r0, r0, r0

2000c980 <PixelPatterns::m_pScannerColours>:
2000c980:	00000000 	andeq	r0, r0, r0

2000c984 <PixelPatterns::m_nCount>:
2000c984:	00000000 	andeq	r0, r0, r0

2000c988 <PixelPatterns::m_pOutput>:
2000c988:	00000000 	andeq	r0, r0, r0

2000c98c <PixelTestPattern::s_Pattern>:
2000c98c:	00000000 	andeq	r0, r0, r0

2000c990 <sv_isRunning>:
2000c990:	00000000 	andeq	r0, r0, r0

2000c994 <WS28xxMulti::s_pThis>:
2000c994:	00000000 	andeq	r0, r0, r0

2000c998 <pixel::s_DmaBuffer>:
	...

20014998 <SpiFlashStore::s_nWaitMillis>:
20014998:	00000000 	andeq	r0, r0, r0

2001499c <SpiFlashStore::s_SpiFlashData>:
	...

2001599c <SpiFlashStore::s_nStartAddress>:
2001599c:	00000000 	andeq	r0, r0, r0

200159a0 <SpiFlashStore::s_bHaveFlashChip>:
200159a0:	00000000 	andeq	r0, r0, r0

200159a4 <SpiFlashStore::s_nSpiFlashStoreSize>:
200159a4:	00000000 	andeq	r0, r0, r0

200159a8 <SpiFlashStore::s_State>:
200159a8:	00000000 	andeq	r0, r0, r0

200159ac <SpiFlashStore::s_pThis>:
200159ac:	00000000 	andeq	r0, r0, r0

200159b0 <SpiFlashStore::s_bIsNew>:
200159b0:	00000000 	andeq	r0, r0, r0

200159b4 <StoreDisplayUdf::s_pThis>:
200159b4:	00000000 	andeq	r0, r0, r0

200159b8 <StoreNetwork::s_pThis>:
200159b8:	00000000 	andeq	r0, r0, r0

200159bc <StoreRDMDevice::s_pThis>:
200159bc:	00000000 	andeq	r0, r0, r0

200159c0 <StoreRemoteConfig::s_pThis>:
200159c0:	00000000 	andeq	r0, r0, r0

200159c4 <StoreE131::s_pThis>:
200159c4:	00000000 	andeq	r0, r0, r0

200159c8 <StorePixelDmx::s_pThis>:
200159c8:	00000000 	andeq	r0, r0, r0

200159cc <FlashRom::s_pThis>:
200159cc:	00000000 	andeq	r0, r0, r0

200159d0 <flashrom::s_nAddress>:
200159d0:	00000000 	andeq	r0, r0, r0

200159d4 <flashrom::s_State>:
200159d4:	00000000 	andeq	r0, r0, r0

200159d8 <flashrom::s_nPage>:
200159d8:	00000000 	andeq	r0, r0, r0

200159dc <flashrom::s_pData>:
200159dc:	00000000 	andeq	r0, r0, r0

200159e0 <flashrom::s_isBank0>:
200159e0:	00000000 	andeq	r0, r0, r0

200159e4 <flashrom::s_nLength>:
200159e4:	00000000 	andeq	r0, r0, r0

200159e8 <g_ip_info>:
	...

200159f4 <g_mac_address>:
200159f4:	00000000 	andeq	r0, r0, r0
	...

200159fa <s_is_dhcp>:
	...

200159fc <s_p>:
200159fc:	00000000 	andeq	r0, r0, r0

20015a00 <s_ticker>:
20015a00:	00000000 	andeq	r0, r0, r0

20015a04 <s_mac_address>:
	...

20015a0c <s_mac_address_arp_reply>:
	...

20015a14 <s_id>:
20015a14:	00000000 	andeq	r0, r0, r0

20015a18 <s_recv_queue>:
	...

20016588 <s_tcb>:
	...

200165cc <s_tcp>:
	...

20016bb8 <broadcast_mask>:
20016bb8:	00000000 	andeq	r0, r0, r0

20016bbc <gw_ip>:
20016bbc:	00000000 	andeq	r0, r0, r0

20016bc0 <on_network_mask>:
20016bc0:	00000000 	andeq	r0, r0, r0

20016bc4 <s_id>:
20016bc4:	00000000 	andeq	r0, r0, r0

20016bc8 <s_ports_allowed>:
	...

20016be8 <s_recv_queue>:
	...

2001c888 <s_send_packet>:
	...

2001ce74 <MDNS::s_nRemoteIp>:
2001ce74:	00000000 	andeq	r0, r0, r0

2001ce78 <MDNS::s_nRemotePort>:
2001ce78:	00000000 	andeq	r0, r0, r0

2001ce7c <MDNS::s_nMulticastIp>:
2001ce7c:	00000000 	andeq	r0, r0, r0

2001ce80 <MDNS::s_AnswerLocalIp>:
	...

2001d084 <MDNS::s_ServiceRecords>:
	...

2001d0a4 <MDNS::s_nBytesReceived>:
2001d0a4:	00000000 	andeq	r0, r0, r0

2001d0a8 <MDNS::s_ServiceRecordsData>:
	...

2001d2ac <MDNS::s_pName>:
2001d2ac:	00000000 	andeq	r0, r0, r0

2001d2b0 <MDNS::s_pBuffer>:
2001d2b0:	00000000 	andeq	r0, r0, r0

2001d2b4 <Network::s_pThis>:
2001d2b4:	00000000 	andeq	r0, r0, r0

2001d2b8 <s_arp_announce>:
	...

2001d2e4 <s_arp_reply>:
	...

2001d310 <s_arp_request>:
	...

2001d33c <s_arp_records>:
	...

2001d4bc <s_entry_current>:
2001d4bc:	00000000 	andeq	r0, r0, r0

2001d4c0 <s_dhcp_allocated_gw>:
2001d4c0:	00000000 	andeq	r0, r0, r0

2001d4c4 <s_dhcp_allocated_ip>:
2001d4c4:	00000000 	andeq	r0, r0, r0

2001d4c8 <s_dhcp_allocated_netmask>:
2001d4c8:	00000000 	andeq	r0, r0, r0

2001d4cc <s_dhcp_message>:
	...

2001d6f0 <s_dhcp_server_ip>:
2001d6f0:	00000000 	andeq	r0, r0, r0

2001d6f4 <s_groups>:
	...

2001d814 <s_id>:
2001d814:	00000000 	andeq	r0, r0, r0

2001d818 <s_joins_allowed_index>:
2001d818:	00000000 	andeq	r0, r0, r0

2001d81c <s_leave>:
	...

2001d84c <s_multicast_mac>:
	...

2001d854 <s_report>:
	...

2001d884 <DisplayUdf::s_pThis>:
2001d884:	00000000 	andeq	r0, r0, r0

2001d888 <PropertiesConfig::s_Config>:
2001d888:	00000000 	andeq	r0, r0, r0

2001d88c <Display::s_pThis>:
2001d88c:	00000000 	andeq	r0, r0, r0

2001d890 <_ClearBuffer>:
	...

2001d918 <Ssd1306::s_pThis>:
2001d918:	00000000 	andeq	r0, r0, r0

2001d91c <FirmwareVersion::s_FirmwareVersion>:
	...

2001d932 <FirmwareVersion::s_Print>:
	...

2001d974 <FirmwareVersion::s_pThis>:
2001d974:	00000000 	andeq	r0, r0, r0

2001d978 <LedBlink::s_pThis>:
2001d978:	00000000 	andeq	r0, r0, r0

2001d97c <Hardware::s_pThis>:
2001d97c:	00000000 	andeq	r0, r0, r0

2001d980 <last.0>:
	...

2001d988 <s_micros>:
	...

2001d990 <set_timer>:
2001d990:	00000000 	andeq	r0, r0, r0

2001d994 <s_nSysTickMillis>:
2001d994:	00000000 	andeq	r0, r0, r0

2001d998 <s_nAddress>:
2001d998:	00000000 	andeq	r0, r0, r0

2001d99c <dma_current_ptp_rxdesc>:
2001d99c:	00000000 	andeq	r0, r0, r0

2001d9a0 <dma_current_ptp_txdesc>:
2001d9a0:	00000000 	andeq	r0, r0, r0

2001d9a4 <dma_current_rxdesc>:
2001d9a4:	00000000 	andeq	r0, r0, r0

2001d9a8 <dma_current_txdesc>:
2001d9a8:	00000000 	andeq	r0, r0, r0

2001d9ac <enet_initpara>:
	...

2001d9e8 <rx_buff>:
	...

2002a450 <rxdesc_tab>:
	...

2002a670 <tx_buff>:
	...

2002b258 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
