
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08007000 <g_pfnVectors>:
 8007000:	20020000 	andcs	r0, r2, r0
 8007004:	08007ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8007008:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800700c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007010:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007014:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007018:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 800702c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007030:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800703c:	08013db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, ip, sp}
 8007040:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007044:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007048:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800704c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007050:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007054:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007058:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800705c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007060:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007064:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007068:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800706c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007070:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007074:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007078:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800707c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007080:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007084:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007088:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800708c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007090:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007094:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007098:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800709c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ac:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070bc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070dc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ec:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070fc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007100:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007104:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007108:	0800d905 	stmdaeq	r0, {r0, r2, r8, fp, ip, lr, pc}
 800710c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007110:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007114:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007118:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800711c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007120:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007124:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007128:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800712c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007130:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007134:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007138:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800713c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007140:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007144:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007148:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800714c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007158:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800715c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007160:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007164:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 8007178:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800717c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007180:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800718c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 80071a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80071a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}

Disassembly of section .text:

080071a8 <__aeabi_drsub>:
 80071a8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80071ac:	e002      	b.n	80071b4 <__adddf3>
 80071ae:	bf00      	nop

080071b0 <__aeabi_dsub>:
 80071b0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080071b4 <__adddf3>:
 80071b4:	b530      	push	{r4, r5, lr}
 80071b6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80071ba:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80071be:	ea94 0f05 	teq	r4, r5
 80071c2:	bf08      	it	eq
 80071c4:	ea90 0f02 	teqeq	r0, r2
 80071c8:	bf1f      	itttt	ne
 80071ca:	ea54 0c00 	orrsne.w	ip, r4, r0
 80071ce:	ea55 0c02 	orrsne.w	ip, r5, r2
 80071d2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80071d6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80071da:	f000 80e2 	beq.w	80073a2 <__adddf3+0x1ee>
 80071de:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80071e2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80071e6:	bfb8      	it	lt
 80071e8:	426d      	neglt	r5, r5
 80071ea:	dd0c      	ble.n	8007206 <__adddf3+0x52>
 80071ec:	442c      	add	r4, r5
 80071ee:	ea80 0202 	eor.w	r2, r0, r2
 80071f2:	ea81 0303 	eor.w	r3, r1, r3
 80071f6:	ea82 0000 	eor.w	r0, r2, r0
 80071fa:	ea83 0101 	eor.w	r1, r3, r1
 80071fe:	ea80 0202 	eor.w	r2, r0, r2
 8007202:	ea81 0303 	eor.w	r3, r1, r3
 8007206:	2d36      	cmp	r5, #54	; 0x36
 8007208:	bf88      	it	hi
 800720a:	bd30      	pophi	{r4, r5, pc}
 800720c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007210:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007214:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007218:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800721c:	d002      	beq.n	8007224 <__adddf3+0x70>
 800721e:	4240      	negs	r0, r0
 8007220:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007224:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007228:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800722c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007230:	d002      	beq.n	8007238 <__adddf3+0x84>
 8007232:	4252      	negs	r2, r2
 8007234:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007238:	ea94 0f05 	teq	r4, r5
 800723c:	f000 80a7 	beq.w	800738e <__adddf3+0x1da>
 8007240:	f1a4 0401 	sub.w	r4, r4, #1
 8007244:	f1d5 0e20 	rsbs	lr, r5, #32
 8007248:	db0d      	blt.n	8007266 <__adddf3+0xb2>
 800724a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800724e:	fa22 f205 	lsr.w	r2, r2, r5
 8007252:	1880      	adds	r0, r0, r2
 8007254:	f141 0100 	adc.w	r1, r1, #0
 8007258:	fa03 f20e 	lsl.w	r2, r3, lr
 800725c:	1880      	adds	r0, r0, r2
 800725e:	fa43 f305 	asr.w	r3, r3, r5
 8007262:	4159      	adcs	r1, r3
 8007264:	e00e      	b.n	8007284 <__adddf3+0xd0>
 8007266:	f1a5 0520 	sub.w	r5, r5, #32
 800726a:	f10e 0e20 	add.w	lr, lr, #32
 800726e:	2a01      	cmp	r2, #1
 8007270:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007274:	bf28      	it	cs
 8007276:	f04c 0c02 	orrcs.w	ip, ip, #2
 800727a:	fa43 f305 	asr.w	r3, r3, r5
 800727e:	18c0      	adds	r0, r0, r3
 8007280:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007284:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007288:	d507      	bpl.n	800729a <__adddf3+0xe6>
 800728a:	f04f 0e00 	mov.w	lr, #0
 800728e:	f1dc 0c00 	rsbs	ip, ip, #0
 8007292:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007296:	eb6e 0101 	sbc.w	r1, lr, r1
 800729a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800729e:	d31b      	bcc.n	80072d8 <__adddf3+0x124>
 80072a0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80072a4:	d30c      	bcc.n	80072c0 <__adddf3+0x10c>
 80072a6:	0849      	lsrs	r1, r1, #1
 80072a8:	ea5f 0030 	movs.w	r0, r0, rrx
 80072ac:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80072b0:	f104 0401 	add.w	r4, r4, #1
 80072b4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80072b8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80072bc:	f080 809a 	bcs.w	80073f4 <__adddf3+0x240>
 80072c0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80072c4:	bf08      	it	eq
 80072c6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80072ca:	f150 0000 	adcs.w	r0, r0, #0
 80072ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80072d2:	ea41 0105 	orr.w	r1, r1, r5
 80072d6:	bd30      	pop	{r4, r5, pc}
 80072d8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80072dc:	4140      	adcs	r0, r0
 80072de:	eb41 0101 	adc.w	r1, r1, r1
 80072e2:	3c01      	subs	r4, #1
 80072e4:	bf28      	it	cs
 80072e6:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80072ea:	d2e9      	bcs.n	80072c0 <__adddf3+0x10c>
 80072ec:	f091 0f00 	teq	r1, #0
 80072f0:	bf04      	itt	eq
 80072f2:	4601      	moveq	r1, r0
 80072f4:	2000      	moveq	r0, #0
 80072f6:	fab1 f381 	clz	r3, r1
 80072fa:	bf08      	it	eq
 80072fc:	3320      	addeq	r3, #32
 80072fe:	f1a3 030b 	sub.w	r3, r3, #11
 8007302:	f1b3 0220 	subs.w	r2, r3, #32
 8007306:	da0c      	bge.n	8007322 <__adddf3+0x16e>
 8007308:	320c      	adds	r2, #12
 800730a:	dd08      	ble.n	800731e <__adddf3+0x16a>
 800730c:	f102 0c14 	add.w	ip, r2, #20
 8007310:	f1c2 020c 	rsb	r2, r2, #12
 8007314:	fa01 f00c 	lsl.w	r0, r1, ip
 8007318:	fa21 f102 	lsr.w	r1, r1, r2
 800731c:	e00c      	b.n	8007338 <__adddf3+0x184>
 800731e:	f102 0214 	add.w	r2, r2, #20
 8007322:	bfd8      	it	le
 8007324:	f1c2 0c20 	rsble	ip, r2, #32
 8007328:	fa01 f102 	lsl.w	r1, r1, r2
 800732c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8007330:	bfdc      	itt	le
 8007332:	ea41 010c 	orrle.w	r1, r1, ip
 8007336:	4090      	lslle	r0, r2
 8007338:	1ae4      	subs	r4, r4, r3
 800733a:	bfa2      	ittt	ge
 800733c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8007340:	4329      	orrge	r1, r5
 8007342:	bd30      	popge	{r4, r5, pc}
 8007344:	ea6f 0404 	mvn.w	r4, r4
 8007348:	3c1f      	subs	r4, #31
 800734a:	da1c      	bge.n	8007386 <__adddf3+0x1d2>
 800734c:	340c      	adds	r4, #12
 800734e:	dc0e      	bgt.n	800736e <__adddf3+0x1ba>
 8007350:	f104 0414 	add.w	r4, r4, #20
 8007354:	f1c4 0220 	rsb	r2, r4, #32
 8007358:	fa20 f004 	lsr.w	r0, r0, r4
 800735c:	fa01 f302 	lsl.w	r3, r1, r2
 8007360:	ea40 0003 	orr.w	r0, r0, r3
 8007364:	fa21 f304 	lsr.w	r3, r1, r4
 8007368:	ea45 0103 	orr.w	r1, r5, r3
 800736c:	bd30      	pop	{r4, r5, pc}
 800736e:	f1c4 040c 	rsb	r4, r4, #12
 8007372:	f1c4 0220 	rsb	r2, r4, #32
 8007376:	fa20 f002 	lsr.w	r0, r0, r2
 800737a:	fa01 f304 	lsl.w	r3, r1, r4
 800737e:	ea40 0003 	orr.w	r0, r0, r3
 8007382:	4629      	mov	r1, r5
 8007384:	bd30      	pop	{r4, r5, pc}
 8007386:	fa21 f004 	lsr.w	r0, r1, r4
 800738a:	4629      	mov	r1, r5
 800738c:	bd30      	pop	{r4, r5, pc}
 800738e:	f094 0f00 	teq	r4, #0
 8007392:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007396:	bf06      	itte	eq
 8007398:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800739c:	3401      	addeq	r4, #1
 800739e:	3d01      	subne	r5, #1
 80073a0:	e74e      	b.n	8007240 <__adddf3+0x8c>
 80073a2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80073a6:	bf18      	it	ne
 80073a8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80073ac:	d029      	beq.n	8007402 <__adddf3+0x24e>
 80073ae:	ea94 0f05 	teq	r4, r5
 80073b2:	bf08      	it	eq
 80073b4:	ea90 0f02 	teqeq	r0, r2
 80073b8:	d005      	beq.n	80073c6 <__adddf3+0x212>
 80073ba:	ea54 0c00 	orrs.w	ip, r4, r0
 80073be:	bf04      	itt	eq
 80073c0:	4619      	moveq	r1, r3
 80073c2:	4610      	moveq	r0, r2
 80073c4:	bd30      	pop	{r4, r5, pc}
 80073c6:	ea91 0f03 	teq	r1, r3
 80073ca:	bf1e      	ittt	ne
 80073cc:	2100      	movne	r1, #0
 80073ce:	2000      	movne	r0, #0
 80073d0:	bd30      	popne	{r4, r5, pc}
 80073d2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80073d6:	d105      	bne.n	80073e4 <__adddf3+0x230>
 80073d8:	0040      	lsls	r0, r0, #1
 80073da:	4149      	adcs	r1, r1
 80073dc:	bf28      	it	cs
 80073de:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80073e2:	bd30      	pop	{r4, r5, pc}
 80073e4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80073e8:	bf3c      	itt	cc
 80073ea:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80073ee:	bd30      	popcc	{r4, r5, pc}
 80073f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80073f4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80073f8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80073fc:	f04f 0000 	mov.w	r0, #0
 8007400:	bd30      	pop	{r4, r5, pc}
 8007402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007406:	bf1a      	itte	ne
 8007408:	4619      	movne	r1, r3
 800740a:	4610      	movne	r0, r2
 800740c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007410:	bf1c      	itt	ne
 8007412:	460b      	movne	r3, r1
 8007414:	4602      	movne	r2, r0
 8007416:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800741a:	bf06      	itte	eq
 800741c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007420:	ea91 0f03 	teqeq	r1, r3
 8007424:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007428:	bd30      	pop	{r4, r5, pc}
 800742a:	bf00      	nop

0800742c <__aeabi_ui2d>:
 800742c:	f090 0f00 	teq	r0, #0
 8007430:	bf04      	itt	eq
 8007432:	2100      	moveq	r1, #0
 8007434:	4770      	bxeq	lr
 8007436:	b530      	push	{r4, r5, lr}
 8007438:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800743c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007440:	f04f 0500 	mov.w	r5, #0
 8007444:	f04f 0100 	mov.w	r1, #0
 8007448:	e750      	b.n	80072ec <__adddf3+0x138>
 800744a:	bf00      	nop

0800744c <__aeabi_i2d>:
 800744c:	f090 0f00 	teq	r0, #0
 8007450:	bf04      	itt	eq
 8007452:	2100      	moveq	r1, #0
 8007454:	4770      	bxeq	lr
 8007456:	b530      	push	{r4, r5, lr}
 8007458:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800745c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007460:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007464:	bf48      	it	mi
 8007466:	4240      	negmi	r0, r0
 8007468:	f04f 0100 	mov.w	r1, #0
 800746c:	e73e      	b.n	80072ec <__adddf3+0x138>
 800746e:	bf00      	nop

08007470 <__aeabi_f2d>:
 8007470:	0042      	lsls	r2, r0, #1
 8007472:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007476:	ea4f 0131 	mov.w	r1, r1, rrx
 800747a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800747e:	bf1f      	itttt	ne
 8007480:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007484:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007488:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800748c:	4770      	bxne	lr
 800748e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007492:	bf08      	it	eq
 8007494:	4770      	bxeq	lr
 8007496:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800749a:	bf04      	itt	eq
 800749c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80074a0:	4770      	bxeq	lr
 80074a2:	b530      	push	{r4, r5, lr}
 80074a4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80074a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80074ac:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80074b0:	e71c      	b.n	80072ec <__adddf3+0x138>
 80074b2:	bf00      	nop

080074b4 <__aeabi_ul2d>:
 80074b4:	ea50 0201 	orrs.w	r2, r0, r1
 80074b8:	bf08      	it	eq
 80074ba:	4770      	bxeq	lr
 80074bc:	b530      	push	{r4, r5, lr}
 80074be:	f04f 0500 	mov.w	r5, #0
 80074c2:	e00a      	b.n	80074da <__aeabi_l2d+0x16>

080074c4 <__aeabi_l2d>:
 80074c4:	ea50 0201 	orrs.w	r2, r0, r1
 80074c8:	bf08      	it	eq
 80074ca:	4770      	bxeq	lr
 80074cc:	b530      	push	{r4, r5, lr}
 80074ce:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80074d2:	d502      	bpl.n	80074da <__aeabi_l2d+0x16>
 80074d4:	4240      	negs	r0, r0
 80074d6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80074da:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80074de:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80074e2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80074e6:	f43f aed8 	beq.w	800729a <__adddf3+0xe6>
 80074ea:	f04f 0203 	mov.w	r2, #3
 80074ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80074f2:	bf18      	it	ne
 80074f4:	3203      	addne	r2, #3
 80074f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80074fa:	bf18      	it	ne
 80074fc:	3203      	addne	r2, #3
 80074fe:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007502:	f1c2 0320 	rsb	r3, r2, #32
 8007506:	fa00 fc03 	lsl.w	ip, r0, r3
 800750a:	fa20 f002 	lsr.w	r0, r0, r2
 800750e:	fa01 fe03 	lsl.w	lr, r1, r3
 8007512:	ea40 000e 	orr.w	r0, r0, lr
 8007516:	fa21 f102 	lsr.w	r1, r1, r2
 800751a:	4414      	add	r4, r2
 800751c:	e6bd      	b.n	800729a <__adddf3+0xe6>
 800751e:	bf00      	nop

08007520 <__aeabi_d2f>:
 8007520:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007524:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007528:	bf24      	itt	cs
 800752a:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800752e:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007532:	d90d      	bls.n	8007550 <__aeabi_d2f+0x30>
 8007534:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007538:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 800753c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007540:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007544:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007548:	bf08      	it	eq
 800754a:	f020 0001 	biceq.w	r0, r0, #1
 800754e:	4770      	bx	lr
 8007550:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007554:	d121      	bne.n	800759a <__aeabi_d2f+0x7a>
 8007556:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 800755a:	bfbc      	itt	lt
 800755c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007560:	4770      	bxlt	lr
 8007562:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007566:	ea4f 5252 	mov.w	r2, r2, lsr #21
 800756a:	f1c2 0218 	rsb	r2, r2, #24
 800756e:	f1c2 0c20 	rsb	ip, r2, #32
 8007572:	fa10 f30c 	lsls.w	r3, r0, ip
 8007576:	fa20 f002 	lsr.w	r0, r0, r2
 800757a:	bf18      	it	ne
 800757c:	f040 0001 	orrne.w	r0, r0, #1
 8007580:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007584:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007588:	fa03 fc0c 	lsl.w	ip, r3, ip
 800758c:	ea40 000c 	orr.w	r0, r0, ip
 8007590:	fa23 f302 	lsr.w	r3, r3, r2
 8007594:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007598:	e7cc      	b.n	8007534 <__aeabi_d2f+0x14>
 800759a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800759e:	d107      	bne.n	80075b0 <__aeabi_d2f+0x90>
 80075a0:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80075a4:	bf1e      	ittt	ne
 80075a6:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80075aa:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80075ae:	4770      	bxne	lr
 80075b0:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80075b4:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80075b8:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80075bc:	4770      	bx	lr
 80075be:	bf00      	nop

080075c0 <__aeabi_frsub>:
 80075c0:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80075c4:	e002      	b.n	80075cc <__addsf3>
 80075c6:	bf00      	nop

080075c8 <__aeabi_fsub>:
 80075c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080075cc <__addsf3>:
 80075cc:	0042      	lsls	r2, r0, #1
 80075ce:	bf1f      	itttt	ne
 80075d0:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 80075d4:	ea92 0f03 	teqne	r2, r3
 80075d8:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 80075dc:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80075e0:	d06a      	beq.n	80076b8 <__addsf3+0xec>
 80075e2:	ea4f 6212 	mov.w	r2, r2, lsr #24
 80075e6:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 80075ea:	bfc1      	itttt	gt
 80075ec:	18d2      	addgt	r2, r2, r3
 80075ee:	4041      	eorgt	r1, r0
 80075f0:	4048      	eorgt	r0, r1
 80075f2:	4041      	eorgt	r1, r0
 80075f4:	bfb8      	it	lt
 80075f6:	425b      	neglt	r3, r3
 80075f8:	2b19      	cmp	r3, #25
 80075fa:	bf88      	it	hi
 80075fc:	4770      	bxhi	lr
 80075fe:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007602:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007606:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 800760a:	bf18      	it	ne
 800760c:	4240      	negne	r0, r0
 800760e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007612:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007616:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800761a:	bf18      	it	ne
 800761c:	4249      	negne	r1, r1
 800761e:	ea92 0f03 	teq	r2, r3
 8007622:	d03f      	beq.n	80076a4 <__addsf3+0xd8>
 8007624:	f1a2 0201 	sub.w	r2, r2, #1
 8007628:	fa41 fc03 	asr.w	ip, r1, r3
 800762c:	eb10 000c 	adds.w	r0, r0, ip
 8007630:	f1c3 0320 	rsb	r3, r3, #32
 8007634:	fa01 f103 	lsl.w	r1, r1, r3
 8007638:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800763c:	d502      	bpl.n	8007644 <__addsf3+0x78>
 800763e:	4249      	negs	r1, r1
 8007640:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007644:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007648:	d313      	bcc.n	8007672 <__addsf3+0xa6>
 800764a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800764e:	d306      	bcc.n	800765e <__addsf3+0x92>
 8007650:	0840      	lsrs	r0, r0, #1
 8007652:	ea4f 0131 	mov.w	r1, r1, rrx
 8007656:	f102 0201 	add.w	r2, r2, #1
 800765a:	2afe      	cmp	r2, #254	; 0xfe
 800765c:	d251      	bcs.n	8007702 <__addsf3+0x136>
 800765e:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007662:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007666:	bf08      	it	eq
 8007668:	f020 0001 	biceq.w	r0, r0, #1
 800766c:	ea40 0003 	orr.w	r0, r0, r3
 8007670:	4770      	bx	lr
 8007672:	0049      	lsls	r1, r1, #1
 8007674:	eb40 0000 	adc.w	r0, r0, r0
 8007678:	3a01      	subs	r2, #1
 800767a:	bf28      	it	cs
 800767c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007680:	d2ed      	bcs.n	800765e <__addsf3+0x92>
 8007682:	fab0 fc80 	clz	ip, r0
 8007686:	f1ac 0c08 	sub.w	ip, ip, #8
 800768a:	ebb2 020c 	subs.w	r2, r2, ip
 800768e:	fa00 f00c 	lsl.w	r0, r0, ip
 8007692:	bfaa      	itet	ge
 8007694:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007698:	4252      	neglt	r2, r2
 800769a:	4318      	orrge	r0, r3
 800769c:	bfbc      	itt	lt
 800769e:	40d0      	lsrlt	r0, r2
 80076a0:	4318      	orrlt	r0, r3
 80076a2:	4770      	bx	lr
 80076a4:	f092 0f00 	teq	r2, #0
 80076a8:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 80076ac:	bf06      	itte	eq
 80076ae:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 80076b2:	3201      	addeq	r2, #1
 80076b4:	3b01      	subne	r3, #1
 80076b6:	e7b5      	b.n	8007624 <__addsf3+0x58>
 80076b8:	ea4f 0341 	mov.w	r3, r1, lsl #1
 80076bc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80076c0:	bf18      	it	ne
 80076c2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 80076c6:	d021      	beq.n	800770c <__addsf3+0x140>
 80076c8:	ea92 0f03 	teq	r2, r3
 80076cc:	d004      	beq.n	80076d8 <__addsf3+0x10c>
 80076ce:	f092 0f00 	teq	r2, #0
 80076d2:	bf08      	it	eq
 80076d4:	4608      	moveq	r0, r1
 80076d6:	4770      	bx	lr
 80076d8:	ea90 0f01 	teq	r0, r1
 80076dc:	bf1c      	itt	ne
 80076de:	2000      	movne	r0, #0
 80076e0:	4770      	bxne	lr
 80076e2:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 80076e6:	d104      	bne.n	80076f2 <__addsf3+0x126>
 80076e8:	0040      	lsls	r0, r0, #1
 80076ea:	bf28      	it	cs
 80076ec:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 80076f0:	4770      	bx	lr
 80076f2:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 80076f6:	bf3c      	itt	cc
 80076f8:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 80076fc:	4770      	bxcc	lr
 80076fe:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007702:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007706:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800770a:	4770      	bx	lr
 800770c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007710:	bf16      	itet	ne
 8007712:	4608      	movne	r0, r1
 8007714:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007718:	4601      	movne	r1, r0
 800771a:	0242      	lsls	r2, r0, #9
 800771c:	bf06      	itte	eq
 800771e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007722:	ea90 0f01 	teqeq	r0, r1
 8007726:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 800772a:	4770      	bx	lr

0800772c <__aeabi_ui2f>:
 800772c:	f04f 0300 	mov.w	r3, #0
 8007730:	e004      	b.n	800773c <__aeabi_i2f+0x8>
 8007732:	bf00      	nop

08007734 <__aeabi_i2f>:
 8007734:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007738:	bf48      	it	mi
 800773a:	4240      	negmi	r0, r0
 800773c:	ea5f 0c00 	movs.w	ip, r0
 8007740:	bf08      	it	eq
 8007742:	4770      	bxeq	lr
 8007744:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007748:	4601      	mov	r1, r0
 800774a:	f04f 0000 	mov.w	r0, #0
 800774e:	e01c      	b.n	800778a <__aeabi_l2f+0x2a>

08007750 <__aeabi_ul2f>:
 8007750:	ea50 0201 	orrs.w	r2, r0, r1
 8007754:	bf08      	it	eq
 8007756:	4770      	bxeq	lr
 8007758:	f04f 0300 	mov.w	r3, #0
 800775c:	e00a      	b.n	8007774 <__aeabi_l2f+0x14>
 800775e:	bf00      	nop

08007760 <__aeabi_l2f>:
 8007760:	ea50 0201 	orrs.w	r2, r0, r1
 8007764:	bf08      	it	eq
 8007766:	4770      	bxeq	lr
 8007768:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800776c:	d502      	bpl.n	8007774 <__aeabi_l2f+0x14>
 800776e:	4240      	negs	r0, r0
 8007770:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007774:	ea5f 0c01 	movs.w	ip, r1
 8007778:	bf02      	ittt	eq
 800777a:	4684      	moveq	ip, r0
 800777c:	4601      	moveq	r1, r0
 800777e:	2000      	moveq	r0, #0
 8007780:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007784:	bf08      	it	eq
 8007786:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800778a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800778e:	fabc f28c 	clz	r2, ip
 8007792:	3a08      	subs	r2, #8
 8007794:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007798:	db10      	blt.n	80077bc <__aeabi_l2f+0x5c>
 800779a:	fa01 fc02 	lsl.w	ip, r1, r2
 800779e:	4463      	add	r3, ip
 80077a0:	fa00 fc02 	lsl.w	ip, r0, r2
 80077a4:	f1c2 0220 	rsb	r2, r2, #32
 80077a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80077ac:	fa20 f202 	lsr.w	r2, r0, r2
 80077b0:	eb43 0002 	adc.w	r0, r3, r2
 80077b4:	bf08      	it	eq
 80077b6:	f020 0001 	biceq.w	r0, r0, #1
 80077ba:	4770      	bx	lr
 80077bc:	f102 0220 	add.w	r2, r2, #32
 80077c0:	fa01 fc02 	lsl.w	ip, r1, r2
 80077c4:	f1c2 0220 	rsb	r2, r2, #32
 80077c8:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 80077cc:	fa21 f202 	lsr.w	r2, r1, r2
 80077d0:	eb43 0002 	adc.w	r0, r3, r2
 80077d4:	bf08      	it	eq
 80077d6:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80077da:	4770      	bx	lr

080077dc <__aeabi_fmul>:
 80077dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80077e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80077e4:	bf1e      	ittt	ne
 80077e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80077ea:	ea92 0f0c 	teqne	r2, ip
 80077ee:	ea93 0f0c 	teqne	r3, ip
 80077f2:	d06f      	beq.n	80078d4 <__aeabi_fmul+0xf8>
 80077f4:	441a      	add	r2, r3
 80077f6:	ea80 0c01 	eor.w	ip, r0, r1
 80077fa:	0240      	lsls	r0, r0, #9
 80077fc:	bf18      	it	ne
 80077fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007802:	d01e      	beq.n	8007842 <__aeabi_fmul+0x66>
 8007804:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007808:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800780c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007810:	fba0 3101 	umull	r3, r1, r0, r1
 8007814:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007818:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800781c:	bf3e      	ittt	cc
 800781e:	0049      	lslcc	r1, r1, #1
 8007820:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007824:	005b      	lslcc	r3, r3, #1
 8007826:	ea40 0001 	orr.w	r0, r0, r1
 800782a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800782e:	2afd      	cmp	r2, #253	; 0xfd
 8007830:	d81d      	bhi.n	800786e <__aeabi_fmul+0x92>
 8007832:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007836:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800783a:	bf08      	it	eq
 800783c:	f020 0001 	biceq.w	r0, r0, #1
 8007840:	4770      	bx	lr
 8007842:	f090 0f00 	teq	r0, #0
 8007846:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800784a:	bf08      	it	eq
 800784c:	0249      	lsleq	r1, r1, #9
 800784e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007852:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007856:	3a7f      	subs	r2, #127	; 0x7f
 8007858:	bfc2      	ittt	gt
 800785a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800785e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007862:	4770      	bxgt	lr
 8007864:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007868:	f04f 0300 	mov.w	r3, #0
 800786c:	3a01      	subs	r2, #1
 800786e:	dc5d      	bgt.n	800792c <__aeabi_fmul+0x150>
 8007870:	f112 0f19 	cmn.w	r2, #25
 8007874:	bfdc      	itt	le
 8007876:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800787a:	4770      	bxle	lr
 800787c:	f1c2 0200 	rsb	r2, r2, #0
 8007880:	0041      	lsls	r1, r0, #1
 8007882:	fa21 f102 	lsr.w	r1, r1, r2
 8007886:	f1c2 0220 	rsb	r2, r2, #32
 800788a:	fa00 fc02 	lsl.w	ip, r0, r2
 800788e:	ea5f 0031 	movs.w	r0, r1, rrx
 8007892:	f140 0000 	adc.w	r0, r0, #0
 8007896:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800789a:	bf08      	it	eq
 800789c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80078a0:	4770      	bx	lr
 80078a2:	f092 0f00 	teq	r2, #0
 80078a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80078aa:	bf02      	ittt	eq
 80078ac:	0040      	lsleq	r0, r0, #1
 80078ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80078b2:	3a01      	subeq	r2, #1
 80078b4:	d0f9      	beq.n	80078aa <__aeabi_fmul+0xce>
 80078b6:	ea40 000c 	orr.w	r0, r0, ip
 80078ba:	f093 0f00 	teq	r3, #0
 80078be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80078c2:	bf02      	ittt	eq
 80078c4:	0049      	lsleq	r1, r1, #1
 80078c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80078ca:	3b01      	subeq	r3, #1
 80078cc:	d0f9      	beq.n	80078c2 <__aeabi_fmul+0xe6>
 80078ce:	ea41 010c 	orr.w	r1, r1, ip
 80078d2:	e78f      	b.n	80077f4 <__aeabi_fmul+0x18>
 80078d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80078d8:	ea92 0f0c 	teq	r2, ip
 80078dc:	bf18      	it	ne
 80078de:	ea93 0f0c 	teqne	r3, ip
 80078e2:	d00a      	beq.n	80078fa <__aeabi_fmul+0x11e>
 80078e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80078e8:	bf18      	it	ne
 80078ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80078ee:	d1d8      	bne.n	80078a2 <__aeabi_fmul+0xc6>
 80078f0:	ea80 0001 	eor.w	r0, r0, r1
 80078f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80078f8:	4770      	bx	lr
 80078fa:	f090 0f00 	teq	r0, #0
 80078fe:	bf17      	itett	ne
 8007900:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007904:	4608      	moveq	r0, r1
 8007906:	f091 0f00 	teqne	r1, #0
 800790a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800790e:	d014      	beq.n	800793a <__aeabi_fmul+0x15e>
 8007910:	ea92 0f0c 	teq	r2, ip
 8007914:	d101      	bne.n	800791a <__aeabi_fmul+0x13e>
 8007916:	0242      	lsls	r2, r0, #9
 8007918:	d10f      	bne.n	800793a <__aeabi_fmul+0x15e>
 800791a:	ea93 0f0c 	teq	r3, ip
 800791e:	d103      	bne.n	8007928 <__aeabi_fmul+0x14c>
 8007920:	024b      	lsls	r3, r1, #9
 8007922:	bf18      	it	ne
 8007924:	4608      	movne	r0, r1
 8007926:	d108      	bne.n	800793a <__aeabi_fmul+0x15e>
 8007928:	ea80 0001 	eor.w	r0, r0, r1
 800792c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007930:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007934:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007938:	4770      	bx	lr
 800793a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800793e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007942:	4770      	bx	lr

08007944 <__aeabi_fdiv>:
 8007944:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007948:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800794c:	bf1e      	ittt	ne
 800794e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007952:	ea92 0f0c 	teqne	r2, ip
 8007956:	ea93 0f0c 	teqne	r3, ip
 800795a:	d069      	beq.n	8007a30 <__aeabi_fdiv+0xec>
 800795c:	eba2 0203 	sub.w	r2, r2, r3
 8007960:	ea80 0c01 	eor.w	ip, r0, r1
 8007964:	0249      	lsls	r1, r1, #9
 8007966:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800796a:	d037      	beq.n	80079dc <__aeabi_fdiv+0x98>
 800796c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007970:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8007974:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8007978:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800797c:	428b      	cmp	r3, r1
 800797e:	bf38      	it	cc
 8007980:	005b      	lslcc	r3, r3, #1
 8007982:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8007986:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800798a:	428b      	cmp	r3, r1
 800798c:	bf24      	itt	cs
 800798e:	1a5b      	subcs	r3, r3, r1
 8007990:	ea40 000c 	orrcs.w	r0, r0, ip
 8007994:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8007998:	bf24      	itt	cs
 800799a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800799e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80079a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80079a6:	bf24      	itt	cs
 80079a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80079ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80079b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80079b4:	bf24      	itt	cs
 80079b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80079ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80079be:	011b      	lsls	r3, r3, #4
 80079c0:	bf18      	it	ne
 80079c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80079c6:	d1e0      	bne.n	800798a <__aeabi_fdiv+0x46>
 80079c8:	2afd      	cmp	r2, #253	; 0xfd
 80079ca:	f63f af50 	bhi.w	800786e <__aeabi_fmul+0x92>
 80079ce:	428b      	cmp	r3, r1
 80079d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80079d4:	bf08      	it	eq
 80079d6:	f020 0001 	biceq.w	r0, r0, #1
 80079da:	4770      	bx	lr
 80079dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80079e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80079e4:	327f      	adds	r2, #127	; 0x7f
 80079e6:	bfc2      	ittt	gt
 80079e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80079ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80079f0:	4770      	bxgt	lr
 80079f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80079f6:	f04f 0300 	mov.w	r3, #0
 80079fa:	3a01      	subs	r2, #1
 80079fc:	e737      	b.n	800786e <__aeabi_fmul+0x92>
 80079fe:	f092 0f00 	teq	r2, #0
 8007a02:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007a06:	bf02      	ittt	eq
 8007a08:	0040      	lsleq	r0, r0, #1
 8007a0a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007a0e:	3a01      	subeq	r2, #1
 8007a10:	d0f9      	beq.n	8007a06 <__aeabi_fdiv+0xc2>
 8007a12:	ea40 000c 	orr.w	r0, r0, ip
 8007a16:	f093 0f00 	teq	r3, #0
 8007a1a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007a1e:	bf02      	ittt	eq
 8007a20:	0049      	lsleq	r1, r1, #1
 8007a22:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007a26:	3b01      	subeq	r3, #1
 8007a28:	d0f9      	beq.n	8007a1e <__aeabi_fdiv+0xda>
 8007a2a:	ea41 010c 	orr.w	r1, r1, ip
 8007a2e:	e795      	b.n	800795c <__aeabi_fdiv+0x18>
 8007a30:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007a34:	ea92 0f0c 	teq	r2, ip
 8007a38:	d108      	bne.n	8007a4c <__aeabi_fdiv+0x108>
 8007a3a:	0242      	lsls	r2, r0, #9
 8007a3c:	f47f af7d 	bne.w	800793a <__aeabi_fmul+0x15e>
 8007a40:	ea93 0f0c 	teq	r3, ip
 8007a44:	f47f af70 	bne.w	8007928 <__aeabi_fmul+0x14c>
 8007a48:	4608      	mov	r0, r1
 8007a4a:	e776      	b.n	800793a <__aeabi_fmul+0x15e>
 8007a4c:	ea93 0f0c 	teq	r3, ip
 8007a50:	d104      	bne.n	8007a5c <__aeabi_fdiv+0x118>
 8007a52:	024b      	lsls	r3, r1, #9
 8007a54:	f43f af4c 	beq.w	80078f0 <__aeabi_fmul+0x114>
 8007a58:	4608      	mov	r0, r1
 8007a5a:	e76e      	b.n	800793a <__aeabi_fmul+0x15e>
 8007a5c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007a60:	bf18      	it	ne
 8007a62:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007a66:	d1ca      	bne.n	80079fe <__aeabi_fdiv+0xba>
 8007a68:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8007a6c:	f47f af5c 	bne.w	8007928 <__aeabi_fmul+0x14c>
 8007a70:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8007a74:	f47f af3c 	bne.w	80078f0 <__aeabi_fmul+0x114>
 8007a78:	e75f      	b.n	800793a <__aeabi_fmul+0x15e>
 8007a7a:	bf00      	nop

08007a7c <__gesf2>:
 8007a7c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007a80:	e006      	b.n	8007a90 <__cmpsf2+0x4>
 8007a82:	bf00      	nop

08007a84 <__lesf2>:
 8007a84:	f04f 0c01 	mov.w	ip, #1
 8007a88:	e002      	b.n	8007a90 <__cmpsf2+0x4>
 8007a8a:	bf00      	nop

08007a8c <__cmpsf2>:
 8007a8c:	f04f 0c01 	mov.w	ip, #1
 8007a90:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007a94:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007a98:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007a9c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007aa0:	bf18      	it	ne
 8007aa2:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007aa6:	d011      	beq.n	8007acc <__cmpsf2+0x40>
 8007aa8:	b001      	add	sp, #4
 8007aaa:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007aae:	bf18      	it	ne
 8007ab0:	ea90 0f01 	teqne	r0, r1
 8007ab4:	bf58      	it	pl
 8007ab6:	ebb2 0003 	subspl.w	r0, r2, r3
 8007aba:	bf88      	it	hi
 8007abc:	17c8      	asrhi	r0, r1, #31
 8007abe:	bf38      	it	cc
 8007ac0:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007ac4:	bf18      	it	ne
 8007ac6:	f040 0001 	orrne.w	r0, r0, #1
 8007aca:	4770      	bx	lr
 8007acc:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007ad0:	d102      	bne.n	8007ad8 <__cmpsf2+0x4c>
 8007ad2:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007ad6:	d105      	bne.n	8007ae4 <__cmpsf2+0x58>
 8007ad8:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007adc:	d1e4      	bne.n	8007aa8 <__cmpsf2+0x1c>
 8007ade:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007ae2:	d0e1      	beq.n	8007aa8 <__cmpsf2+0x1c>
 8007ae4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007ae8:	4770      	bx	lr
 8007aea:	bf00      	nop

08007aec <__aeabi_cfrcmple>:
 8007aec:	4684      	mov	ip, r0
 8007aee:	4608      	mov	r0, r1
 8007af0:	4661      	mov	r1, ip
 8007af2:	e7ff      	b.n	8007af4 <__aeabi_cfcmpeq>

08007af4 <__aeabi_cfcmpeq>:
 8007af4:	b50f      	push	{r0, r1, r2, r3, lr}
 8007af6:	f7ff ffc9 	bl	8007a8c <__cmpsf2>
 8007afa:	2800      	cmp	r0, #0
 8007afc:	bf48      	it	mi
 8007afe:	f110 0f00 	cmnmi.w	r0, #0
 8007b02:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007b04 <__aeabi_fcmpeq>:
 8007b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007b08:	f7ff fff4 	bl	8007af4 <__aeabi_cfcmpeq>
 8007b0c:	bf0c      	ite	eq
 8007b0e:	2001      	moveq	r0, #1
 8007b10:	2000      	movne	r0, #0
 8007b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8007b16:	bf00      	nop

08007b18 <__aeabi_fcmplt>:
 8007b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007b1c:	f7ff ffea 	bl	8007af4 <__aeabi_cfcmpeq>
 8007b20:	bf34      	ite	cc
 8007b22:	2001      	movcc	r0, #1
 8007b24:	2000      	movcs	r0, #0
 8007b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8007b2a:	bf00      	nop

08007b2c <__aeabi_fcmple>:
 8007b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007b30:	f7ff ffe0 	bl	8007af4 <__aeabi_cfcmpeq>
 8007b34:	bf94      	ite	ls
 8007b36:	2001      	movls	r0, #1
 8007b38:	2000      	movhi	r0, #0
 8007b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8007b3e:	bf00      	nop

08007b40 <__aeabi_fcmpge>:
 8007b40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007b44:	f7ff ffd2 	bl	8007aec <__aeabi_cfrcmple>
 8007b48:	bf94      	ite	ls
 8007b4a:	2001      	movls	r0, #1
 8007b4c:	2000      	movhi	r0, #0
 8007b4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007b52:	bf00      	nop

08007b54 <__aeabi_fcmpgt>:
 8007b54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007b58:	f7ff ffc8 	bl	8007aec <__aeabi_cfrcmple>
 8007b5c:	bf34      	ite	cc
 8007b5e:	2001      	movcc	r0, #1
 8007b60:	2000      	movcs	r0, #0
 8007b62:	f85d fb08 	ldr.w	pc, [sp], #8
 8007b66:	bf00      	nop

08007b68 <__aeabi_f2iz>:
 8007b68:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007b6c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007b70:	d30f      	bcc.n	8007b92 <__aeabi_f2iz+0x2a>
 8007b72:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007b76:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007b7a:	d90d      	bls.n	8007b98 <__aeabi_f2iz+0x30>
 8007b7c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007b80:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007b84:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007b88:	fa23 f002 	lsr.w	r0, r3, r2
 8007b8c:	bf18      	it	ne
 8007b8e:	4240      	negne	r0, r0
 8007b90:	4770      	bx	lr
 8007b92:	f04f 0000 	mov.w	r0, #0
 8007b96:	4770      	bx	lr
 8007b98:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007b9c:	d101      	bne.n	8007ba2 <__aeabi_f2iz+0x3a>
 8007b9e:	0242      	lsls	r2, r0, #9
 8007ba0:	d105      	bne.n	8007bae <__aeabi_f2iz+0x46>
 8007ba2:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007ba6:	bf08      	it	eq
 8007ba8:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007bac:	4770      	bx	lr
 8007bae:	f04f 0000 	mov.w	r0, #0
 8007bb2:	4770      	bx	lr

08007bb4 <__aeabi_uldivmod>:
 8007bb4:	b953      	cbnz	r3, 8007bcc <__aeabi_uldivmod+0x18>
 8007bb6:	b94a      	cbnz	r2, 8007bcc <__aeabi_uldivmod+0x18>
 8007bb8:	2900      	cmp	r1, #0
 8007bba:	bf08      	it	eq
 8007bbc:	2800      	cmpeq	r0, #0
 8007bbe:	bf1c      	itt	ne
 8007bc0:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007bc4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007bc8:	f000 b98a 	b.w	8007ee0 <__aeabi_idiv0>
 8007bcc:	f1ad 0c08 	sub.w	ip, sp, #8
 8007bd0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007bd4:	f000 f81a 	bl	8007c0c <__udivmoddi4>
 8007bd8:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007bdc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007be0:	b004      	add	sp, #16
 8007be2:	4770      	bx	lr

08007be4 <__popcountsi2>:
 8007be4:	0843      	lsrs	r3, r0, #1
 8007be6:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007bea:	1ac0      	subs	r0, r0, r3
 8007bec:	0883      	lsrs	r3, r0, #2
 8007bee:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8007bf2:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007bf6:	4418      	add	r0, r3
 8007bf8:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007bfc:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007c00:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8007c04:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007c08:	0e00      	lsrs	r0, r0, #24
 8007c0a:	4770      	bx	lr

08007c0c <__udivmoddi4>:
 8007c0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007c10:	9e08      	ldr	r6, [sp, #32]
 8007c12:	460d      	mov	r5, r1
 8007c14:	4604      	mov	r4, r0
 8007c16:	4688      	mov	r8, r1
 8007c18:	2b00      	cmp	r3, #0
 8007c1a:	d14d      	bne.n	8007cb8 <__udivmoddi4+0xac>
 8007c1c:	428a      	cmp	r2, r1
 8007c1e:	4694      	mov	ip, r2
 8007c20:	d968      	bls.n	8007cf4 <__udivmoddi4+0xe8>
 8007c22:	fab2 f282 	clz	r2, r2
 8007c26:	b152      	cbz	r2, 8007c3e <__udivmoddi4+0x32>
 8007c28:	fa01 f302 	lsl.w	r3, r1, r2
 8007c2c:	f1c2 0120 	rsb	r1, r2, #32
 8007c30:	fa20 f101 	lsr.w	r1, r0, r1
 8007c34:	fa0c fc02 	lsl.w	ip, ip, r2
 8007c38:	ea41 0803 	orr.w	r8, r1, r3
 8007c3c:	4094      	lsls	r4, r2
 8007c3e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007c42:	fbb8 f7f1 	udiv	r7, r8, r1
 8007c46:	fa1f fe8c 	uxth.w	lr, ip
 8007c4a:	fb01 8817 	mls	r8, r1, r7, r8
 8007c4e:	fb07 f00e 	mul.w	r0, r7, lr
 8007c52:	0c23      	lsrs	r3, r4, #16
 8007c54:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007c58:	4298      	cmp	r0, r3
 8007c5a:	d90a      	bls.n	8007c72 <__udivmoddi4+0x66>
 8007c5c:	eb1c 0303 	adds.w	r3, ip, r3
 8007c60:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007c64:	f080 811e 	bcs.w	8007ea4 <__udivmoddi4+0x298>
 8007c68:	4298      	cmp	r0, r3
 8007c6a:	f240 811b 	bls.w	8007ea4 <__udivmoddi4+0x298>
 8007c6e:	3f02      	subs	r7, #2
 8007c70:	4463      	add	r3, ip
 8007c72:	1a1b      	subs	r3, r3, r0
 8007c74:	fbb3 f0f1 	udiv	r0, r3, r1
 8007c78:	fb01 3310 	mls	r3, r1, r0, r3
 8007c7c:	fb00 fe0e 	mul.w	lr, r0, lr
 8007c80:	b2a4      	uxth	r4, r4
 8007c82:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007c86:	45a6      	cmp	lr, r4
 8007c88:	d90a      	bls.n	8007ca0 <__udivmoddi4+0x94>
 8007c8a:	eb1c 0404 	adds.w	r4, ip, r4
 8007c8e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007c92:	f080 8109 	bcs.w	8007ea8 <__udivmoddi4+0x29c>
 8007c96:	45a6      	cmp	lr, r4
 8007c98:	f240 8106 	bls.w	8007ea8 <__udivmoddi4+0x29c>
 8007c9c:	4464      	add	r4, ip
 8007c9e:	3802      	subs	r0, #2
 8007ca0:	2100      	movs	r1, #0
 8007ca2:	eba4 040e 	sub.w	r4, r4, lr
 8007ca6:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8007caa:	b11e      	cbz	r6, 8007cb4 <__udivmoddi4+0xa8>
 8007cac:	2300      	movs	r3, #0
 8007cae:	40d4      	lsrs	r4, r2
 8007cb0:	e9c6 4300 	strd	r4, r3, [r6]
 8007cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007cb8:	428b      	cmp	r3, r1
 8007cba:	d908      	bls.n	8007cce <__udivmoddi4+0xc2>
 8007cbc:	2e00      	cmp	r6, #0
 8007cbe:	f000 80ee 	beq.w	8007e9e <__udivmoddi4+0x292>
 8007cc2:	2100      	movs	r1, #0
 8007cc4:	e9c6 0500 	strd	r0, r5, [r6]
 8007cc8:	4608      	mov	r0, r1
 8007cca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007cce:	fab3 f183 	clz	r1, r3
 8007cd2:	2900      	cmp	r1, #0
 8007cd4:	d14a      	bne.n	8007d6c <__udivmoddi4+0x160>
 8007cd6:	42ab      	cmp	r3, r5
 8007cd8:	d302      	bcc.n	8007ce0 <__udivmoddi4+0xd4>
 8007cda:	4282      	cmp	r2, r0
 8007cdc:	f200 80fc 	bhi.w	8007ed8 <__udivmoddi4+0x2cc>
 8007ce0:	1a84      	subs	r4, r0, r2
 8007ce2:	eb65 0303 	sbc.w	r3, r5, r3
 8007ce6:	2001      	movs	r0, #1
 8007ce8:	4698      	mov	r8, r3
 8007cea:	2e00      	cmp	r6, #0
 8007cec:	d0e2      	beq.n	8007cb4 <__udivmoddi4+0xa8>
 8007cee:	e9c6 4800 	strd	r4, r8, [r6]
 8007cf2:	e7df      	b.n	8007cb4 <__udivmoddi4+0xa8>
 8007cf4:	b902      	cbnz	r2, 8007cf8 <__udivmoddi4+0xec>
 8007cf6:	deff      	udf	#255	; 0xff
 8007cf8:	fab2 f282 	clz	r2, r2
 8007cfc:	2a00      	cmp	r2, #0
 8007cfe:	f040 8091 	bne.w	8007e24 <__udivmoddi4+0x218>
 8007d02:	eba1 000c 	sub.w	r0, r1, ip
 8007d06:	2101      	movs	r1, #1
 8007d08:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007d0c:	fa1f fe8c 	uxth.w	lr, ip
 8007d10:	fbb0 f3f7 	udiv	r3, r0, r7
 8007d14:	fb07 0013 	mls	r0, r7, r3, r0
 8007d18:	0c25      	lsrs	r5, r4, #16
 8007d1a:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007d1e:	fb0e f003 	mul.w	r0, lr, r3
 8007d22:	42a8      	cmp	r0, r5
 8007d24:	d908      	bls.n	8007d38 <__udivmoddi4+0x12c>
 8007d26:	eb1c 0505 	adds.w	r5, ip, r5
 8007d2a:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007d2e:	d202      	bcs.n	8007d36 <__udivmoddi4+0x12a>
 8007d30:	42a8      	cmp	r0, r5
 8007d32:	f200 80ce 	bhi.w	8007ed2 <__udivmoddi4+0x2c6>
 8007d36:	4643      	mov	r3, r8
 8007d38:	1a2d      	subs	r5, r5, r0
 8007d3a:	fbb5 f0f7 	udiv	r0, r5, r7
 8007d3e:	fb07 5510 	mls	r5, r7, r0, r5
 8007d42:	fb0e fe00 	mul.w	lr, lr, r0
 8007d46:	b2a4      	uxth	r4, r4
 8007d48:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8007d4c:	45a6      	cmp	lr, r4
 8007d4e:	d908      	bls.n	8007d62 <__udivmoddi4+0x156>
 8007d50:	eb1c 0404 	adds.w	r4, ip, r4
 8007d54:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007d58:	d202      	bcs.n	8007d60 <__udivmoddi4+0x154>
 8007d5a:	45a6      	cmp	lr, r4
 8007d5c:	f200 80b6 	bhi.w	8007ecc <__udivmoddi4+0x2c0>
 8007d60:	4628      	mov	r0, r5
 8007d62:	eba4 040e 	sub.w	r4, r4, lr
 8007d66:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007d6a:	e79e      	b.n	8007caa <__udivmoddi4+0x9e>
 8007d6c:	f1c1 0720 	rsb	r7, r1, #32
 8007d70:	408b      	lsls	r3, r1
 8007d72:	fa22 fc07 	lsr.w	ip, r2, r7
 8007d76:	ea4c 0c03 	orr.w	ip, ip, r3
 8007d7a:	fa25 fa07 	lsr.w	sl, r5, r7
 8007d7e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8007d82:	fbba f8f9 	udiv	r8, sl, r9
 8007d86:	fa20 f307 	lsr.w	r3, r0, r7
 8007d8a:	fb09 aa18 	mls	sl, r9, r8, sl
 8007d8e:	408d      	lsls	r5, r1
 8007d90:	fa1f fe8c 	uxth.w	lr, ip
 8007d94:	431d      	orrs	r5, r3
 8007d96:	fa00 f301 	lsl.w	r3, r0, r1
 8007d9a:	fb08 f00e 	mul.w	r0, r8, lr
 8007d9e:	0c2c      	lsrs	r4, r5, #16
 8007da0:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007da4:	42a0      	cmp	r0, r4
 8007da6:	fa02 f201 	lsl.w	r2, r2, r1
 8007daa:	d90b      	bls.n	8007dc4 <__udivmoddi4+0x1b8>
 8007dac:	eb1c 0404 	adds.w	r4, ip, r4
 8007db0:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007db4:	f080 8088 	bcs.w	8007ec8 <__udivmoddi4+0x2bc>
 8007db8:	42a0      	cmp	r0, r4
 8007dba:	f240 8085 	bls.w	8007ec8 <__udivmoddi4+0x2bc>
 8007dbe:	f1a8 0802 	sub.w	r8, r8, #2
 8007dc2:	4464      	add	r4, ip
 8007dc4:	1a24      	subs	r4, r4, r0
 8007dc6:	fbb4 f0f9 	udiv	r0, r4, r9
 8007dca:	fb09 4410 	mls	r4, r9, r0, r4
 8007dce:	fb00 fe0e 	mul.w	lr, r0, lr
 8007dd2:	b2ad      	uxth	r5, r5
 8007dd4:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007dd8:	45a6      	cmp	lr, r4
 8007dda:	d908      	bls.n	8007dee <__udivmoddi4+0x1e2>
 8007ddc:	eb1c 0404 	adds.w	r4, ip, r4
 8007de0:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007de4:	d26c      	bcs.n	8007ec0 <__udivmoddi4+0x2b4>
 8007de6:	45a6      	cmp	lr, r4
 8007de8:	d96a      	bls.n	8007ec0 <__udivmoddi4+0x2b4>
 8007dea:	3802      	subs	r0, #2
 8007dec:	4464      	add	r4, ip
 8007dee:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8007df2:	fba0 9502 	umull	r9, r5, r0, r2
 8007df6:	eba4 040e 	sub.w	r4, r4, lr
 8007dfa:	42ac      	cmp	r4, r5
 8007dfc:	46c8      	mov	r8, r9
 8007dfe:	46ae      	mov	lr, r5
 8007e00:	d356      	bcc.n	8007eb0 <__udivmoddi4+0x2a4>
 8007e02:	d053      	beq.n	8007eac <__udivmoddi4+0x2a0>
 8007e04:	2e00      	cmp	r6, #0
 8007e06:	d069      	beq.n	8007edc <__udivmoddi4+0x2d0>
 8007e08:	ebb3 0208 	subs.w	r2, r3, r8
 8007e0c:	eb64 040e 	sbc.w	r4, r4, lr
 8007e10:	fa22 f301 	lsr.w	r3, r2, r1
 8007e14:	fa04 f707 	lsl.w	r7, r4, r7
 8007e18:	431f      	orrs	r7, r3
 8007e1a:	40cc      	lsrs	r4, r1
 8007e1c:	e9c6 7400 	strd	r7, r4, [r6]
 8007e20:	2100      	movs	r1, #0
 8007e22:	e747      	b.n	8007cb4 <__udivmoddi4+0xa8>
 8007e24:	fa0c fc02 	lsl.w	ip, ip, r2
 8007e28:	f1c2 0120 	rsb	r1, r2, #32
 8007e2c:	fa25 f301 	lsr.w	r3, r5, r1
 8007e30:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8007e34:	fa20 f101 	lsr.w	r1, r0, r1
 8007e38:	4095      	lsls	r5, r2
 8007e3a:	430d      	orrs	r5, r1
 8007e3c:	fbb3 f1f7 	udiv	r1, r3, r7
 8007e40:	fb07 3311 	mls	r3, r7, r1, r3
 8007e44:	fa1f fe8c 	uxth.w	lr, ip
 8007e48:	0c28      	lsrs	r0, r5, #16
 8007e4a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8007e4e:	fb01 f30e 	mul.w	r3, r1, lr
 8007e52:	4283      	cmp	r3, r0
 8007e54:	fa04 f402 	lsl.w	r4, r4, r2
 8007e58:	d908      	bls.n	8007e6c <__udivmoddi4+0x260>
 8007e5a:	eb1c 0000 	adds.w	r0, ip, r0
 8007e5e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8007e62:	d22f      	bcs.n	8007ec4 <__udivmoddi4+0x2b8>
 8007e64:	4283      	cmp	r3, r0
 8007e66:	d92d      	bls.n	8007ec4 <__udivmoddi4+0x2b8>
 8007e68:	3902      	subs	r1, #2
 8007e6a:	4460      	add	r0, ip
 8007e6c:	1ac0      	subs	r0, r0, r3
 8007e6e:	fbb0 f3f7 	udiv	r3, r0, r7
 8007e72:	fb07 0013 	mls	r0, r7, r3, r0
 8007e76:	b2ad      	uxth	r5, r5
 8007e78:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 8007e7c:	fb03 f00e 	mul.w	r0, r3, lr
 8007e80:	42a8      	cmp	r0, r5
 8007e82:	d908      	bls.n	8007e96 <__udivmoddi4+0x28a>
 8007e84:	eb1c 0505 	adds.w	r5, ip, r5
 8007e88:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8007e8c:	d216      	bcs.n	8007ebc <__udivmoddi4+0x2b0>
 8007e8e:	42a8      	cmp	r0, r5
 8007e90:	d914      	bls.n	8007ebc <__udivmoddi4+0x2b0>
 8007e92:	3b02      	subs	r3, #2
 8007e94:	4465      	add	r5, ip
 8007e96:	1a28      	subs	r0, r5, r0
 8007e98:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 8007e9c:	e738      	b.n	8007d10 <__udivmoddi4+0x104>
 8007e9e:	4631      	mov	r1, r6
 8007ea0:	4630      	mov	r0, r6
 8007ea2:	e707      	b.n	8007cb4 <__udivmoddi4+0xa8>
 8007ea4:	462f      	mov	r7, r5
 8007ea6:	e6e4      	b.n	8007c72 <__udivmoddi4+0x66>
 8007ea8:	4618      	mov	r0, r3
 8007eaa:	e6f9      	b.n	8007ca0 <__udivmoddi4+0x94>
 8007eac:	454b      	cmp	r3, r9
 8007eae:	d2a9      	bcs.n	8007e04 <__udivmoddi4+0x1f8>
 8007eb0:	ebb9 0802 	subs.w	r8, r9, r2
 8007eb4:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007eb8:	3801      	subs	r0, #1
 8007eba:	e7a3      	b.n	8007e04 <__udivmoddi4+0x1f8>
 8007ebc:	4643      	mov	r3, r8
 8007ebe:	e7ea      	b.n	8007e96 <__udivmoddi4+0x28a>
 8007ec0:	4628      	mov	r0, r5
 8007ec2:	e794      	b.n	8007dee <__udivmoddi4+0x1e2>
 8007ec4:	4641      	mov	r1, r8
 8007ec6:	e7d1      	b.n	8007e6c <__udivmoddi4+0x260>
 8007ec8:	46d0      	mov	r8, sl
 8007eca:	e77b      	b.n	8007dc4 <__udivmoddi4+0x1b8>
 8007ecc:	4464      	add	r4, ip
 8007ece:	3802      	subs	r0, #2
 8007ed0:	e747      	b.n	8007d62 <__udivmoddi4+0x156>
 8007ed2:	3b02      	subs	r3, #2
 8007ed4:	4465      	add	r5, ip
 8007ed6:	e72f      	b.n	8007d38 <__udivmoddi4+0x12c>
 8007ed8:	4608      	mov	r0, r1
 8007eda:	e706      	b.n	8007cea <__udivmoddi4+0xde>
 8007edc:	4631      	mov	r1, r6
 8007ede:	e6e9      	b.n	8007cb4 <__udivmoddi4+0xa8>

08007ee0 <__aeabi_idiv0>:
 8007ee0:	4770      	bx	lr
 8007ee2:	bf00      	nop

08007ee4 <Reset_Handler>:
 8007ee4:	2100      	movs	r1, #0
 8007ee6:	e003      	b.n	8007ef0 <DataInit>

08007ee8 <CopyData>:
 8007ee8:	4b0a      	ldr	r3, [pc, #40]	; (8007f14 <Zerobss+0x10>)
 8007eea:	585b      	ldr	r3, [r3, r1]
 8007eec:	5043      	str	r3, [r0, r1]
 8007eee:	3104      	adds	r1, #4

08007ef0 <DataInit>:
 8007ef0:	4809      	ldr	r0, [pc, #36]	; (8007f18 <Zerobss+0x14>)
 8007ef2:	4b0a      	ldr	r3, [pc, #40]	; (8007f1c <Zerobss+0x18>)
 8007ef4:	1842      	adds	r2, r0, r1
 8007ef6:	429a      	cmp	r2, r3
 8007ef8:	d3f6      	bcc.n	8007ee8 <CopyData>
 8007efa:	4a09      	ldr	r2, [pc, #36]	; (8007f20 <Zerobss+0x1c>)
 8007efc:	e002      	b.n	8007f04 <Zerobss>

08007efe <FillZerobss>:
 8007efe:	2300      	movs	r3, #0
 8007f00:	f842 3b04 	str.w	r3, [r2], #4

08007f04 <Zerobss>:
 8007f04:	4b07      	ldr	r3, [pc, #28]	; (8007f24 <Zerobss+0x20>)
 8007f06:	429a      	cmp	r2, r3
 8007f08:	d3f9      	bcc.n	8007efe <FillZerobss>
 8007f0a:	f00b ff9b 	bl	8013e44 <SystemInit>
 8007f0e:	f000 f8fd 	bl	800810c <main>
 8007f12:	4770      	bx	lr
 8007f14:	08018338 	stmdaeq	r1, {r3, r4, r5, r8, r9, pc}
 8007f18:	20000000 	andcs	r0, r0, r0
 8007f1c:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f20:	20000100 	andcs	r0, r0, r0, lsl #2
 8007f24:	20017a34 	andcs	r7, r1, r4, lsr sl

08007f28 <ADC0_1_IRQHandler>:
 8007f28:	e7fe      	b.n	8007f28 <ADC0_1_IRQHandler>

08007f2a <memcpy>:
 8007f2a:	b510      	push	{r4, lr}
 8007f2c:	1e43      	subs	r3, r0, #1
 8007f2e:	440a      	add	r2, r1
 8007f30:	4291      	cmp	r1, r2
 8007f32:	d004      	beq.n	8007f3e <memcpy+0x14>
 8007f34:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007f38:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007f3c:	e7f8      	b.n	8007f30 <memcpy+0x6>
 8007f3e:	bd10      	pop	{r4, pc}

08007f40 <DisplayHandler::~DisplayHandler()>:
 8007f40:	4770      	bx	lr

08007f42 <E131Reboot::~E131Reboot()>:
 8007f42:	4770      	bx	lr

08007f44 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007f44:	4770      	bx	lr
	...

08007f48 <PixelDmxStartStop::Start()>:
 8007f48:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f4c:	4b01      	ldr	r3, [pc, #4]	; (8007f54 <PixelDmxStartStop::Start()+0xc>)
 8007f4e:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8007f52:	4770      	bx	lr
 8007f54:	40010000 	andmi	r0, r1, r0

08007f58 <PixelDmxStartStop::Stop()>:
 8007f58:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f5c:	4b01      	ldr	r3, [pc, #4]	; (8007f64 <PixelDmxStartStop::Stop()+0xc>)
 8007f5e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8007f62:	4770      	bx	lr
 8007f64:	40010000 	andmi	r0, r1, r0

08007f68 <RDMNetDevice::CopyUID(unsigned char*)>:
 8007f68:	460b      	mov	r3, r1
 8007f6a:	2206      	movs	r2, #6
 8007f6c:	1d01      	adds	r1, r0, #4
 8007f6e:	4618      	mov	r0, r3
 8007f70:	f7ff bfdb 	b.w	8007f2a <memcpy>

08007f74 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8007f74:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f78:	e7f6      	b.n	8007f68 <RDMNetDevice::CopyUID(unsigned char*)>
	...

08007f7c <RDMNetDevice::CopyCID(unsigned char*)>:
 8007f7c:	4608      	mov	r0, r1
 8007f7e:	2210      	movs	r2, #16
 8007f80:	4901      	ldr	r1, [pc, #4]	; (8007f88 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8007f82:	f7ff bfd2 	b.w	8007f2a <memcpy>
 8007f86:	bf00      	nop
 8007f88:	20001a57 	andcs	r1, r0, r7, asr sl

08007f8c <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8007f8c:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f90:	e7f4      	b.n	8007f7c <RDMNetDevice::CopyCID(unsigned char*)>
 8007f92:	bf00      	nop

08007f94 <FactoryDefaults::~FactoryDefaults()>:
 8007f94:	4770      	bx	lr

08007f96 <Reboot::~Reboot()>:
 8007f96:	4770      	bx	lr

08007f98 <Reboot::~Reboot()>:
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	4604      	mov	r4, r0
 8007f9c:	f00a ff02 	bl	8012da4 <operator delete(void*)>
 8007fa0:	4620      	mov	r0, r4
 8007fa2:	bd10      	pop	{r4, pc}

08007fa4 <E131Reboot::~E131Reboot()>:
 8007fa4:	b510      	push	{r4, lr}
 8007fa6:	4604      	mov	r4, r0
 8007fa8:	f00a fefc 	bl	8012da4 <operator delete(void*)>
 8007fac:	4620      	mov	r0, r4
 8007fae:	bd10      	pop	{r4, pc}

08007fb0 <DisplayHandler::~DisplayHandler()>:
 8007fb0:	b510      	push	{r4, lr}
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	f00a fef6 	bl	8012da4 <operator delete(void*)>
 8007fb8:	4620      	mov	r0, r4
 8007fba:	bd10      	pop	{r4, pc}

08007fbc <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007fbc:	b510      	push	{r4, lr}
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	f00a fef0 	bl	8012da4 <operator delete(void*)>
 8007fc4:	4620      	mov	r0, r4
 8007fc6:	bd10      	pop	{r4, pc}

08007fc8 <FactoryDefaults::~FactoryDefaults()>:
 8007fc8:	b510      	push	{r4, lr}
 8007fca:	4604      	mov	r4, r0
 8007fcc:	f00a feea 	bl	8012da4 <operator delete(void*)>
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	bd10      	pop	{r4, pc}

08007fd4 <Reboot::Run()>:
 8007fd4:	4b01      	ldr	r3, [pc, #4]	; (8007fdc <Reboot::Run()+0x8>)
 8007fd6:	6818      	ldr	r0, [r3, #0]
 8007fd8:	f005 bed6 	b.w	800dd88 <WS28xxMulti::Blackout()>
 8007fdc:	200095a4 	andcs	r9, r0, r4, lsr #11

08007fe0 <E131Reboot::Run()>:
 8007fe0:	b510      	push	{r4, lr}
 8007fe2:	4c07      	ldr	r4, [pc, #28]	; (8008000 <E131Reboot::Run()+0x20>)
 8007fe4:	6820      	ldr	r0, [r4, #0]
 8007fe6:	f001 fe5b 	bl	8009ca0 <E131Bridge::Stop()>
 8007fea:	6823      	ldr	r3, [r4, #0]
 8007fec:	6858      	ldr	r0, [r3, #4]
 8007fee:	b128      	cbz	r0, 8007ffc <E131Reboot::Run()+0x1c>
 8007ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ff4:	6803      	ldr	r3, [r0, #0]
 8007ff6:	2101      	movs	r1, #1
 8007ff8:	695b      	ldr	r3, [r3, #20]
 8007ffa:	4718      	bx	r3
 8007ffc:	bd10      	pop	{r4, pc}
 8007ffe:	bf00      	nop
 8008000:	20001940 	andcs	r1, r0, r0, asr #18

08008004 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008004:	b510      	push	{r4, lr}
 8008006:	4c03      	ldr	r4, [pc, #12]	; (8008014 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008008:	30d4      	adds	r0, #212	; 0xd4
 800800a:	4622      	mov	r2, r4
 800800c:	f003 ff06 	bl	800be1c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8008010:	4620      	mov	r0, r4
 8008012:	bd10      	pop	{r4, pc}
 8008014:	20001958 	andcs	r1, r0, r8, asr r9

08008018 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008018:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 800801c:	e7f2      	b.n	8008004 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 800801e:	bf00      	nop

08008020 <DisplayHandler::Print(unsigned int)>:
 8008020:	7903      	ldrb	r3, [r0, #4]
 8008022:	b570      	push	{r4, r5, r6, lr}
 8008024:	b1eb      	cbz	r3, 8008062 <DisplayHandler::Print(unsigned int)+0x42>
 8008026:	4d0f      	ldr	r5, [pc, #60]	; (8008064 <DisplayHandler::Print(unsigned int)+0x44>)
 8008028:	2904      	cmp	r1, #4
 800802a:	6828      	ldr	r0, [r5, #0]
 800802c:	bf98      	it	ls
 800802e:	4b0e      	ldrls	r3, [pc, #56]	; (8008068 <DisplayHandler::Print(unsigned int)+0x48>)
 8008030:	6842      	ldr	r2, [r0, #4]
 8008032:	bf8c      	ite	hi
 8008034:	2455      	movhi	r4, #85	; 0x55
 8008036:	5c5c      	ldrbls	r4, [r3, r1]
 8008038:	b18a      	cbz	r2, 800805e <DisplayHandler::Print(unsigned int)+0x3e>
 800803a:	7911      	ldrb	r1, [r2, #4]
 800803c:	3901      	subs	r1, #1
 800803e:	b2c9      	uxtb	r1, r1
 8008040:	b102      	cbz	r2, 8008044 <DisplayHandler::Print(unsigned int)+0x24>
 8008042:	7952      	ldrb	r2, [r2, #5]
 8008044:	3a01      	subs	r2, #1
 8008046:	b2d2      	uxtb	r2, r2
 8008048:	f00a fa45 	bl	80124d6 <Display::SetCursorPos(unsigned char, unsigned char)>
 800804c:	682b      	ldr	r3, [r5, #0]
 800804e:	6858      	ldr	r0, [r3, #4]
 8008050:	b138      	cbz	r0, 8008062 <DisplayHandler::Print(unsigned int)+0x42>
 8008052:	6803      	ldr	r3, [r0, #0]
 8008054:	4621      	mov	r1, r4
 8008056:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800805a:	695b      	ldr	r3, [r3, #20]
 800805c:	4718      	bx	r3
 800805e:	4611      	mov	r1, r2
 8008060:	e7ec      	b.n	800803c <DisplayHandler::Print(unsigned int)+0x1c>
 8008062:	bd70      	pop	{r4, r5, r6, pc}
 8008064:	20012498 	mulcs	r1, r8, r4
 8008068:	08015af0 	stmdaeq	r1, {r4, r5, r6, r7, r9, fp, ip, lr}

0800806c <RDMNetDevice::~RDMNetDevice()>:
 800806c:	b510      	push	{r4, lr}
 800806e:	4604      	mov	r4, r0
 8008070:	4b05      	ldr	r3, [pc, #20]	; (8008088 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8008072:	f840 3b8c 	str.w	r3, [r0], #140
 8008076:	f003 f96d 	bl	800b354 <RDMSubDevices::~RDMSubDevices()>
 800807a:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800807e:	f003 f949 	bl	800b314 <RDMSensors::~RDMSensors()>
 8008082:	4620      	mov	r0, r4
 8008084:	bd10      	pop	{r4, pc}
 8008086:	bf00      	nop
 8008088:	08016e8c 	stmdaeq	r1, {r2, r3, r7, r9, sl, fp, sp, lr}

0800808c <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800808c:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8008090:	e7ec      	b.n	800806c <RDMNetDevice::~RDMNetDevice()>
 8008092:	bf00      	nop

08008094 <RDMNetDevice::~RDMNetDevice()>:
 8008094:	b510      	push	{r4, lr}
 8008096:	4604      	mov	r4, r0
 8008098:	f7ff ffe8 	bl	800806c <RDMNetDevice::~RDMNetDevice()>
 800809c:	4620      	mov	r0, r4
 800809e:	f00a fe81 	bl	8012da4 <operator delete(void*)>
 80080a2:	4620      	mov	r0, r4
 80080a4:	bd10      	pop	{r4, pc}

080080a6 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 80080a6:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 80080aa:	e7f3      	b.n	8008094 <RDMNetDevice::~RDMNetDevice()>

080080ac <StoreNetwork::SaveDhcp(bool)>:
 80080ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80080ae:	2301      	movs	r3, #1
 80080b0:	f88d 1017 	strb.w	r1, [sp, #23]
 80080b4:	2100      	movs	r1, #0
 80080b6:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80080ba:	4805      	ldr	r0, [pc, #20]	; (80080d0 <StoreNetwork::SaveDhcp(bool)+0x24>)
 80080bc:	9300      	str	r3, [sp, #0]
 80080be:	2214      	movs	r2, #20
 80080c0:	6800      	ldr	r0, [r0, #0]
 80080c2:	f10d 0317 	add.w	r3, sp, #23
 80080c6:	f006 f893 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80080ca:	b007      	add	sp, #28
 80080cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80080d0:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

080080d4 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80080d4:	f1a0 0004 	sub.w	r0, r0, #4
 80080d8:	e7e8      	b.n	80080ac <StoreNetwork::SaveDhcp(bool)>
 80080da:	bf00      	nop

080080dc <FactoryDefaults::Set()>:
 80080dc:	b508      	push	{r3, lr}
 80080de:	4b08      	ldr	r3, [pc, #32]	; (8008100 <FactoryDefaults::Set()+0x24>)
 80080e0:	2100      	movs	r1, #0
 80080e2:	6818      	ldr	r0, [r3, #0]
 80080e4:	f000 fca6 	bl	8008a34 <RemoteConfig::SetDisable(bool)>
 80080e8:	4b06      	ldr	r3, [pc, #24]	; (8008104 <FactoryDefaults::Set()+0x28>)
 80080ea:	210b      	movs	r1, #11
 80080ec:	6818      	ldr	r0, [r3, #0]
 80080ee:	f006 f86d 	bl	800e1cc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80080f2:	4b05      	ldr	r3, [pc, #20]	; (8008108 <FactoryDefaults::Set()+0x2c>)
 80080f4:	2101      	movs	r1, #1
 80080f6:	6818      	ldr	r0, [r3, #0]
 80080f8:	f7ff ffd8 	bl	80080ac <StoreNetwork::SaveDhcp(bool)>
 80080fc:	bd08      	pop	{r3, pc}
 80080fe:	bf00      	nop
 8008100:	20000128 	andcs	r0, r0, r8, lsr #2
 8008104:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc
 8008108:	2000a5cc 	andcs	sl, r0, ip, asr #11

0800810c <main>:
 800810c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008110:	2501      	movs	r5, #1
 8008112:	f5ad 5d81 	sub.w	sp, sp, #4128	; 0x1020
 8008116:	b081      	sub	sp, #4
 8008118:	a80f      	add	r0, sp, #60	; 0x3c
 800811a:	f00a fd97 	bl	8012c4c <Hardware::Hardware()>
 800811e:	a88f      	add	r0, sp, #572	; 0x23c
 8008120:	f007 ffe2 	bl	80100e8 <Network::Network()>
 8008124:	a817      	add	r0, sp, #92	; 0x5c
 8008126:	f00a fd4d 	bl	8012bc4 <LedBlink::LedBlink()>
 800812a:	a878      	add	r0, sp, #480	; 0x1e0
 800812c:	f009 fb2a 	bl	8011784 <DisplayUdf::DisplayUdf()>
 8008130:	4bb9      	ldr	r3, [pc, #740]	; (8008418 <main+0x30c>)
 8008132:	4aba      	ldr	r2, [pc, #744]	; (800841c <main+0x310>)
 8008134:	49ba      	ldr	r1, [pc, #744]	; (8008420 <main+0x314>)
 8008136:	a807      	add	r0, sp, #28
 8008138:	f00a fcfe 	bl	8012b38 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 800813c:	a808      	add	r0, sp, #32
 800813e:	f006 fb93 	bl	800e868 <FlashRom::FlashRom()>
 8008142:	f8df a2e0 	ldr.w	sl, [pc, #736]	; 8008424 <main+0x318>
 8008146:	a809      	add	r0, sp, #36	; 0x24
 8008148:	f006 f81a 	bl	800e180 <SpiFlashStore::SpiFlashStore()>
 800814c:	49b6      	ldr	r1, [pc, #728]	; (8008428 <main+0x31c>)
 800814e:	a807      	add	r0, sp, #28
 8008150:	f00a fd2a 	bl	8012ba8 <FirmwareVersion::Print(char const*)>
 8008154:	2008      	movs	r0, #8
 8008156:	f8ca 5010 	str.w	r5, [sl, #16]
 800815a:	f00a fe27 	bl	8012dac <operator new(unsigned int)>
 800815e:	4bb3      	ldr	r3, [pc, #716]	; (800842c <main+0x320>)
 8008160:	2400      	movs	r4, #0
 8008162:	6003      	str	r3, [r0, #0]
 8008164:	4bb2      	ldr	r3, [pc, #712]	; (8008430 <main+0x324>)
 8008166:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	49b1      	ldr	r1, [pc, #708]	; (8008434 <main+0x328>)
 800816e:	3b00      	subs	r3, #0
 8008170:	bf18      	it	ne
 8008172:	2301      	movne	r3, #1
 8008174:	9019      	str	r0, [sp, #100]	; 0x64
 8008176:	7103      	strb	r3, [r0, #4]
 8008178:	2303      	movs	r3, #3
 800817a:	a878      	add	r0, sp, #480	; 0x1e0
 800817c:	f00a f9dd 	bl	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008180:	a811      	add	r0, sp, #68	; 0x44
 8008182:	f006 f9f5 	bl	800e570 <StoreNetwork::StoreNetwork()>
 8008186:	ab12      	add	r3, sp, #72	; 0x48
 8008188:	a911      	add	r1, sp, #68	; 0x44
 800818a:	a88f      	add	r0, sp, #572	; 0x23c
 800818c:	93bc      	str	r3, [sp, #752]	; 0x2f0
 800818e:	f008 f803 	bl	8010198 <Network::Init(NetworkParamsStore*)>
 8008192:	a88f      	add	r0, sp, #572	; 0x23c
 8008194:	f008 fa46 	bl	8010624 <Network::Print()>
 8008198:	a80a      	add	r0, sp, #40	; 0x28
 800819a:	f007 fbdf 	bl	800f95c <MDNS::MDNS()>
 800819e:	a80a      	add	r0, sp, #40	; 0x28
 80081a0:	f007 fca0 	bl	800fae4 <MDNS::Start()>
 80081a4:	f642 1305 	movw	r3, #10501	; 0x2905
 80081a8:	4621      	mov	r1, r4
 80081aa:	4aa3      	ldr	r2, [pc, #652]	; (8008438 <main+0x32c>)
 80081ac:	e9cd 4400 	strd	r4, r4, [sp]
 80081b0:	a80a      	add	r0, sp, #40	; 0x28
 80081b2:	f007 fe03 	bl	800fdbc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80081b6:	4ba1      	ldr	r3, [pc, #644]	; (800843c <main+0x330>)
 80081b8:	4621      	mov	r1, r4
 80081ba:	4aa1      	ldr	r2, [pc, #644]	; (8008440 <main+0x334>)
 80081bc:	e9cd 5300 	strd	r5, r3, [sp]
 80081c0:	a80a      	add	r0, sp, #40	; 0x28
 80081c2:	2350      	movs	r3, #80	; 0x50
 80081c4:	f007 fdfa 	bl	800fdbc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80081c8:	a80a      	add	r0, sp, #40	; 0x28
 80081ca:	f007 ff3d 	bl	8010048 <MDNS::Print()>
 80081ce:	2303      	movs	r3, #3
 80081d0:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80081d4:	499b      	ldr	r1, [pc, #620]	; (8008444 <main+0x338>)
 80081d6:	a878      	add	r0, sp, #480	; 0x1e0
 80081d8:	f00a f9af 	bl	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80081dc:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80081e0:	f001 fdae 	bl	8009d40 <E131Bridge::E131Bridge()>
 80081e4:	a80b      	add	r0, sp, #44	; 0x2c
 80081e6:	f006 f92f 	bl	800e448 <StoreE131::StoreE131()>
 80081ea:	a90b      	add	r1, sp, #44	; 0x2c
 80081ec:	a837      	add	r0, sp, #220	; 0xdc
 80081ee:	f002 fca5 	bl	800ab3c <E131Params::E131Params(E131ParamsStore*)>
 80081f2:	a837      	add	r0, sp, #220	; 0xdc
 80081f4:	f002 fcc2 	bl	800ab7c <E131Params::Load()>
 80081f8:	b138      	cbz	r0, 800820a <main+0xfe>
 80081fa:	a837      	add	r0, sp, #220	; 0xdc
 80081fc:	f50d 611d 	add.w	r1, sp, #2512	; 0x9d0
 8008200:	f002 fefd 	bl	800affe <E131Params::Set(E131Bridge*)>
 8008204:	a837      	add	r0, sp, #220	; 0xdc
 8008206:	f002 ff33 	bl	800b070 <E131Params::Dump()>
 800820a:	4d8f      	ldr	r5, [pc, #572]	; (8008448 <main+0x33c>)
 800820c:	ac1d      	add	r4, sp, #116	; 0x74
 800820e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008210:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008212:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8008216:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800821a:	a813      	add	r0, sp, #76	; 0x4c
 800821c:	f006 fb18 	bl	800e850 <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008220:	a913      	add	r1, sp, #76	; 0x4c
 8008222:	a853      	add	r0, sp, #332	; 0x14c
 8008224:	f004 fba0 	bl	800c968 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008228:	4b88      	ldr	r3, [pc, #544]	; (800844c <main+0x340>)
 800822a:	4a89      	ldr	r2, [pc, #548]	; (8008450 <main+0x344>)
 800822c:	9300      	str	r3, [sp, #0]
 800822e:	4989      	ldr	r1, [pc, #548]	; (8008454 <main+0x348>)
 8008230:	2386      	movs	r3, #134	; 0x86
 8008232:	4889      	ldr	r0, [pc, #548]	; (8008458 <main+0x34c>)
 8008234:	f00b fa14 	bl	8013660 <printf>
 8008238:	a853      	add	r0, sp, #332	; 0x14c
 800823a:	f004 fbbd 	bl	800c9b8 <WS28xxDmxParams::Load()>
 800823e:	b130      	cbz	r0, 800824e <main+0x142>
 8008240:	a853      	add	r0, sp, #332	; 0x14c
 8008242:	a91d      	add	r1, sp, #116	; 0x74
 8008244:	f004 fe55 	bl	800cef2 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 8008248:	a853      	add	r0, sp, #332	; 0x14c
 800824a:	f004 fe90 	bl	800cf6e <WS28xxDmxParams::Dump()>
 800824e:	ae6a      	add	r6, sp, #424	; 0x1a8
 8008250:	a91d      	add	r1, sp, #116	; 0x74
 8008252:	4630      	mov	r0, r6
 8008254:	f004 fa9e 	bl	800c794 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008258:	2004      	movs	r0, #4
 800825a:	f00a fda7 	bl	8012dac <operator new(unsigned int)>
 800825e:	2500      	movs	r5, #0
 8008260:	4b7e      	ldr	r3, [pc, #504]	; (800845c <main+0x350>)
 8008262:	4604      	mov	r4, r0
 8008264:	6003      	str	r3, [r0, #0]
 8008266:	2203      	movs	r2, #3
 8008268:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800826c:	2110      	movs	r1, #16
 800826e:	487c      	ldr	r0, [pc, #496]	; (8008460 <main+0x354>)
 8008270:	f00c f83e 	bl	80142f0 <gpio_init>
 8008274:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008278:	46a9      	mov	r9, r5
 800827a:	4b7a      	ldr	r3, [pc, #488]	; (8008464 <main+0x358>)
 800827c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008280:	69f3      	ldr	r3, [r6, #28]
 8008282:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8008286:	62f4      	str	r4, [r6, #44]	; 0x2c
 8008288:	f8cd 69d4 	str.w	r6, [sp, #2516]	; 0x9d4
 800828c:	9305      	str	r3, [sp, #20]
 800828e:	4545      	cmp	r5, r8
 8008290:	d036      	beq.n	8008300 <main+0x1f4>
 8008292:	2d07      	cmp	r5, #7
 8008294:	d82c      	bhi.n	80082f0 <main+0x1e4>
 8008296:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800829a:	9a54      	ldr	r2, [sp, #336]	; 0x150
 800829c:	40ab      	lsls	r3, r5
 800829e:	4393      	bics	r3, r2
 80082a0:	bf0c      	ite	eq
 80082a2:	f04f 0b01 	moveq.w	fp, #1
 80082a6:	f04f 0b00 	movne.w	fp, #0
 80082aa:	ab53      	add	r3, sp, #332	; 0x14c
 80082ac:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80082b0:	8b5b      	ldrh	r3, [r3, #26]
 80082b2:	9304      	str	r3, [sp, #16]
 80082b4:	464c      	mov	r4, r9
 80082b6:	9b05      	ldr	r3, [sp, #20]
 80082b8:	444b      	add	r3, r9
 80082ba:	42a3      	cmp	r3, r4
 80082bc:	d01d      	beq.n	80082fa <main+0x1ee>
 80082be:	f1bb 0f00 	cmp.w	fp, #0
 80082c2:	d013      	beq.n	80082ec <main+0x1e0>
 80082c4:	9b04      	ldr	r3, [sp, #16]
 80082c6:	4a62      	ldr	r2, [pc, #392]	; (8008450 <main+0x344>)
 80082c8:	eba3 0709 	sub.w	r7, r3, r9
 80082cc:	4427      	add	r7, r4
 80082ce:	b2bf      	uxth	r7, r7
 80082d0:	239d      	movs	r3, #157	; 0x9d
 80082d2:	4960      	ldr	r1, [pc, #384]	; (8008454 <main+0x348>)
 80082d4:	e9cd 4700 	strd	r4, r7, [sp]
 80082d8:	4863      	ldr	r0, [pc, #396]	; (8008468 <main+0x35c>)
 80082da:	f00b f9c1 	bl	8013660 <printf>
 80082de:	463b      	mov	r3, r7
 80082e0:	2201      	movs	r2, #1
 80082e2:	4621      	mov	r1, r4
 80082e4:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80082e8:	f001 fdca 	bl	8009e80 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 80082ec:	3401      	adds	r4, #1
 80082ee:	e7e2      	b.n	80082b6 <main+0x1aa>
 80082f0:	f04f 0b00 	mov.w	fp, #0
 80082f4:	f8cd b010 	str.w	fp, [sp, #16]
 80082f8:	e7dc      	b.n	80082b4 <main+0x1a8>
 80082fa:	46a1      	mov	r9, r4
 80082fc:	3501      	adds	r5, #1
 80082fe:	e7c6      	b.n	800828e <main+0x182>
 8008300:	f89d 5176 	ldrb.w	r5, [sp, #374]	; 0x176
 8008304:	2d00      	cmp	r5, #0
 8008306:	f000 80d0 	beq.w	80084aa <main+0x39e>
 800830a:	2001      	movs	r0, #1
 800830c:	f00a fd4e 	bl	8012dac <operator new(unsigned int)>
 8008310:	4641      	mov	r1, r8
 8008312:	4607      	mov	r7, r0
 8008314:	f004 ff7a 	bl	800d20c <PixelPatterns::PixelPatterns(unsigned int)>
 8008318:	4b54      	ldr	r3, [pc, #336]	; (800846c <main+0x360>)
 800831a:	2d05      	cmp	r5, #5
 800831c:	601d      	str	r5, [r3, #0]
 800831e:	d949      	bls.n	80083b4 <main+0x2a8>
 8008320:	2300      	movs	r3, #0
 8008322:	2004      	movs	r0, #4
 8008324:	f8cd 39d4 	str.w	r3, [sp, #2516]	; 0x9d4
 8008328:	f00a fd40 	bl	8012dac <operator new(unsigned int)>
 800832c:	4b50      	ldr	r3, [pc, #320]	; (8008470 <main+0x364>)
 800832e:	900f      	str	r0, [sp, #60]	; 0x3c
 8008330:	6003      	str	r3, [r0, #0]
 8008332:	f8df 9140 	ldr.w	r9, [pc, #320]	; 8008474 <main+0x368>
 8008336:	f04f 0b00 	mov.w	fp, #0
 800833a:	f8d9 3000 	ldr.w	r3, [r9]
 800833e:	6818      	ldr	r0, [r3, #0]
 8008340:	f005 f9e6 	bl	800d710 <PixelType::GetType(pixel::Type)>
 8008344:	f8d9 3000 	ldr.w	r3, [r9]
 8008348:	2120      	movs	r1, #32
 800834a:	685b      	ldr	r3, [r3, #4]
 800834c:	4a4a      	ldr	r2, [pc, #296]	; (8008478 <main+0x36c>)
 800834e:	e9cd 0300 	strd	r0, r3, [sp]
 8008352:	4643      	mov	r3, r8
 8008354:	a825      	add	r0, sp, #148	; 0x94
 8008356:	f00b f9ab 	bl	80136b0 <snprintf>
 800835a:	2120      	movs	r1, #32
 800835c:	4a47      	ldr	r2, [pc, #284]	; (800847c <main+0x370>)
 800835e:	a82e      	add	r0, sp, #184	; 0xb8
 8008360:	f00b f9a6 	bl	80136b0 <snprintf>
 8008364:	4605      	mov	r5, r0
 8008366:	202c      	movs	r0, #44	; 0x2c
 8008368:	f00a fd20 	bl	8012dac <operator new(unsigned int)>
 800836c:	4604      	mov	r4, r0
 800836e:	232d      	movs	r3, #45	; 0x2d
 8008370:	4943      	ldr	r1, [pc, #268]	; (8008480 <main+0x374>)
 8008372:	f8c0 b004 	str.w	fp, [r0, #4]
 8008376:	f880 b028 	strb.w	fp, [r0, #40]	; 0x28
 800837a:	4a42      	ldr	r2, [pc, #264]	; (8008484 <main+0x378>)
 800837c:	4842      	ldr	r0, [pc, #264]	; (8008488 <main+0x37c>)
 800837e:	f00b f96f 	bl	8013660 <printf>
 8008382:	f8a4 b000 	strh.w	fp, [r4]
 8008386:	f884 b028 	strb.w	fp, [r4, #40]	; 0x28
 800838a:	f104 0108 	add.w	r1, r4, #8
 800838e:	ab25      	add	r3, sp, #148	; 0x94
 8008390:	f104 0028 	add.w	r0, r4, #40	; 0x28
 8008394:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008398:	2a00      	cmp	r2, #0
 800839a:	f000 808e 	beq.w	80084ba <main+0x3ae>
 800839e:	4281      	cmp	r1, r0
 80083a0:	f000 808b 	beq.w	80084ba <main+0x3ae>
 80083a4:	f801 2b01 	strb.w	r2, [r1], #1
 80083a8:	f894 2028 	ldrb.w	r2, [r4, #40]	; 0x28
 80083ac:	3201      	adds	r2, #1
 80083ae:	f884 2028 	strb.w	r2, [r4, #40]	; 0x28
 80083b2:	e7ef      	b.n	8008394 <main+0x288>
 80083b4:	2400      	movs	r4, #0
 80083b6:	46a1      	mov	r9, r4
 80083b8:	f8df b0d0 	ldr.w	fp, [pc, #208]	; 800848c <main+0x380>
 80083bc:	3d02      	subs	r5, #2
 80083be:	2d03      	cmp	r5, #3
 80083c0:	d803      	bhi.n	80083ca <main+0x2be>
 80083c2:	e8df f005 	tbb	[pc, r5]
 80083c6:	6520170c 	strvs	r1, [r0, #-1804]!	; 0xfffff8f4
 80083ca:	2300      	movs	r3, #0
 80083cc:	2264      	movs	r2, #100	; 0x64
 80083ce:	4621      	mov	r1, r4
 80083d0:	4638      	mov	r0, r7
 80083d2:	f004 ff53 	bl	800d27c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 80083d6:	3401      	adds	r4, #1
 80083d8:	2c08      	cmp	r4, #8
 80083da:	d1f0      	bne.n	80083be <main+0x2b2>
 80083dc:	e7a0      	b.n	8008320 <main+0x214>
 80083de:	2364      	movs	r3, #100	; 0x64
 80083e0:	2200      	movs	r2, #0
 80083e2:	9300      	str	r3, [sp, #0]
 80083e4:	4621      	mov	r1, r4
 80083e6:	465b      	mov	r3, fp
 80083e8:	4638      	mov	r0, r7
 80083ea:	f8cd 9004 	str.w	r9, [sp, #4]
 80083ee:	f004 ff5b 	bl	800d2a8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80083f2:	e7f0      	b.n	80083d6 <main+0x2ca>
 80083f4:	2364      	movs	r3, #100	; 0x64
 80083f6:	465a      	mov	r2, fp
 80083f8:	4621      	mov	r1, r4
 80083fa:	4638      	mov	r0, r7
 80083fc:	f8cd 9000 	str.w	r9, [sp]
 8008400:	f004 ff6e 	bl	800d2e0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008404:	e7e7      	b.n	80083d6 <main+0x2ca>
 8008406:	2364      	movs	r3, #100	; 0x64
 8008408:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 800840c:	4621      	mov	r1, r4
 800840e:	4638      	mov	r0, r7
 8008410:	f004 ff80 	bl	800d314 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008414:	e7df      	b.n	80083d6 <main+0x2ca>
 8008416:	bf00      	nop
 8008418:	080158b4 	stmdaeq	r1, {r2, r4, r5, r7, fp, ip, lr}
 800841c:	080158bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, fp, ip, lr}
 8008420:	08015af5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, fp, ip, lr}
 8008424:	40011000 	andmi	r1, r1, r0
 8008428:	080158c9 	stmdaeq	r1, {r0, r3, r6, r7, fp, ip, lr}
 800842c:	08015a50 	stmdaeq	r1, {r4, r6, r9, fp, ip, lr}
 8008430:	20012498 	mulcs	r1, r8, r4
 8008434:	080177b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 8008438:	08015909 	stmdaeq	r1, {r0, r3, r8, fp, ip, lr}
 800843c:	08015919 	stmdaeq	r1, {r0, r3, r4, r8, fp, ip, lr}
 8008440:	08015912 	stmdaeq	r1, {r1, r4, r8, fp, ip, lr}
 8008444:	08016bec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, fp, sp, lr}
 8008448:	0801587c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip, lr}
 800844c:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8008450:	0801592f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, fp, ip, lr}
 8008454:	08015941 	stmdaeq	r1, {r0, r6, r8, fp, ip, lr}
 8008458:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 800845c:	08015a78 	stmdaeq	r1, {r3, r4, r5, r6, r9, fp, ip, lr}
 8008460:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008464:	40010000 	andmi	r0, r1, r0
 8008468:	0801595c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, ip, lr}
 800846c:	20001d8c 	andcs	r1, r0, ip, lsl #27
 8008470:	08015ae4 	stmdaeq	r1, {r2, r5, r6, r7, r9, fp, ip, lr}
 8008474:	200095a4 	andcs	r9, r0, r4, lsr #11
 8008478:	08015975 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, fp, ip, lr}
 800847c:	08015989 	stmdaeq	r1, {r0, r3, r7, r8, fp, ip, lr}
 8008480:	080159a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, ip, lr}
 8008484:	0801599a 	stmdaeq	r1, {r1, r3, r4, r7, r8, fp, ip, lr}
 8008488:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 800848c:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008490:	230a      	movs	r3, #10
 8008492:	2264      	movs	r2, #100	; 0x64
 8008494:	4621      	mov	r1, r4
 8008496:	e9cd 3200 	strd	r3, r2, [sp]
 800849a:	4638      	mov	r0, r7
 800849c:	465b      	mov	r3, fp
 800849e:	2200      	movs	r2, #0
 80084a0:	f8cd 9008 	str.w	r9, [sp, #8]
 80084a4:	f004 ff6a 	bl	800d37c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80084a8:	e795      	b.n	80083d6 <main+0x2ca>
 80084aa:	2004      	movs	r0, #4
 80084ac:	f00a fc7e 	bl	8012dac <operator new(unsigned int)>
 80084b0:	4ba2      	ldr	r3, [pc, #648]	; (800873c <main+0x630>)
 80084b2:	462f      	mov	r7, r5
 80084b4:	6003      	str	r3, [r0, #0]
 80084b6:	900f      	str	r0, [sp, #60]	; 0x3c
 80084b8:	e73b      	b.n	8008332 <main+0x226>
 80084ba:	233a      	movs	r3, #58	; 0x3a
 80084bc:	4aa0      	ldr	r2, [pc, #640]	; (8008740 <main+0x634>)
 80084be:	49a1      	ldr	r1, [pc, #644]	; (8008744 <main+0x638>)
 80084c0:	48a1      	ldr	r0, [pc, #644]	; (8008748 <main+0x63c>)
 80084c2:	f00b f8cd 	bl	8013660 <printf>
 80084c6:	2201      	movs	r2, #1
 80084c8:	a90c      	add	r1, sp, #48	; 0x30
 80084ca:	a8c1      	add	r0, sp, #772	; 0x304
 80084cc:	940c      	str	r4, [sp, #48]	; 0x30
 80084ce:	f003 f88b 	bl	800b5e8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 80084d2:	a8f5      	add	r0, sp, #980	; 0x3d4
 80084d4:	f002 fde2 	bl	800b09c <LLRPDevice::LLRPDevice()>
 80084d8:	4b9c      	ldr	r3, [pc, #624]	; (800874c <main+0x640>)
 80084da:	2100      	movs	r1, #0
 80084dc:	93c1      	str	r3, [sp, #772]	; 0x304
 80084de:	a8f6      	add	r0, sp, #984	; 0x3d8
 80084e0:	3324      	adds	r3, #36	; 0x24
 80084e2:	93f5      	str	r3, [sp, #980]	; 0x3d4
 80084e4:	f003 fa58 	bl	800b998 <RDMHandler::RDMHandler(bool)>
 80084e8:	4b99      	ldr	r3, [pc, #612]	; (8008750 <main+0x644>)
 80084ea:	b2ec      	uxtb	r4, r5
 80084ec:	4999      	ldr	r1, [pc, #612]	; (8008754 <main+0x648>)
 80084ee:	6818      	ldr	r0, [r3, #0]
 80084f0:	f00a fbfe 	bl	8012cf0 <Hardware::GetUuid(unsigned char*)>
 80084f4:	2c20      	cmp	r4, #32
 80084f6:	bf28      	it	cs
 80084f8:	2420      	movcs	r4, #32
 80084fa:	f89d 335a 	ldrb.w	r3, [sp, #858]	; 0x35a
 80084fe:	4622      	mov	r2, r4
 8008500:	a92e      	add	r1, sp, #184	; 0xb8
 8008502:	2b00      	cmp	r3, #0
 8008504:	f000 8112 	beq.w	800872c <main+0x620>
 8008508:	f20d 3012 	addw	r0, sp, #786	; 0x312
 800850c:	f7ff fd0d 	bl	8007f2a <memcpy>
 8008510:	98e0      	ldr	r0, [sp, #896]	; 0x380
 8008512:	f88d 4332 	strb.w	r4, [sp, #818]	; 0x332
 8008516:	b128      	cbz	r0, 8008524 <main+0x418>
 8008518:	6803      	ldr	r3, [r0, #0]
 800851a:	4622      	mov	r2, r4
 800851c:	689b      	ldr	r3, [r3, #8]
 800851e:	f20d 3112 	addw	r1, sp, #786	; 0x312
 8008522:	4798      	blx	r3
 8008524:	4b8c      	ldr	r3, [pc, #560]	; (8008758 <main+0x64c>)
 8008526:	2004      	movs	r0, #4
 8008528:	93d5      	str	r3, [sp, #852]	; 0x354
 800852a:	f00a fc3f 	bl	8012dac <operator new(unsigned int)>
 800852e:	4b8b      	ldr	r3, [pc, #556]	; (800875c <main+0x650>)
 8008530:	90f4      	str	r0, [sp, #976]	; 0x3d0
 8008532:	6003      	str	r3, [r0, #0]
 8008534:	a8c1      	add	r0, sp, #772	; 0x304
 8008536:	f003 f8b5 	bl	800b6a4 <RDMDeviceResponder::Init()>
 800853a:	a815      	add	r0, sp, #84	; 0x54
 800853c:	f006 f876 	bl	800e62c <StoreRDMDevice::StoreRDMDevice()>
 8008540:	a915      	add	r1, sp, #84	; 0x54
 8008542:	a85e      	add	r0, sp, #376	; 0x178
 8008544:	f002 ffb8 	bl	800b4b8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008548:	a85e      	add	r0, sp, #376	; 0x178
 800854a:	f002 ffc7 	bl	800b4dc <RDMDeviceParams::Load()>
 800854e:	b130      	cbz	r0, 800855e <main+0x452>
 8008550:	a85e      	add	r0, sp, #376	; 0x178
 8008552:	a9c2      	add	r1, sp, #776	; 0x308
 8008554:	f002 ffcd 	bl	800b4f2 <RDMDeviceParams::Set(RDMDevice*)>
 8008558:	a85e      	add	r0, sp, #376	; 0x178
 800855a:	f002 ffff 	bl	800b55c <RDMDeviceParams::Dump()>
 800855e:	ab16      	add	r3, sp, #88	; 0x58
 8008560:	a8c1      	add	r0, sp, #772	; 0x304
 8008562:	93e0      	str	r3, [sp, #896]	; 0x380
 8008564:	f002 feae 	bl	800b2c4 <RDMNetDevice::Print()>
 8008568:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 800856c:	f002 fa1c 	bl	800a9a8 <E131Bridge::Print()>
 8008570:	4630      	mov	r0, r6
 8008572:	f004 f8d5 	bl	800c720 <WS28xxDmxMulti::Print()>
 8008576:	f8d9 3000 	ldr.w	r3, [r9]
 800857a:	4642      	mov	r2, r8
 800857c:	685b      	ldr	r3, [r3, #4]
 800857e:	4978      	ldr	r1, [pc, #480]	; (8008760 <main+0x654>)
 8008580:	a878      	add	r0, sp, #480	; 0x1e0
 8008582:	f009 f915 	bl	80117b0 <DisplayUdf::SetTitle(char const*, ...)>
 8008586:	2207      	movs	r2, #7
 8008588:	2102      	movs	r1, #2
 800858a:	a878      	add	r0, sp, #480	; 0x1e0
 800858c:	f009 fa46 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008590:	2202      	movs	r2, #2
 8008592:	2103      	movs	r1, #3
 8008594:	a878      	add	r0, sp, #480	; 0x1e0
 8008596:	f009 fa41 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800859a:	2203      	movs	r2, #3
 800859c:	2104      	movs	r1, #4
 800859e:	a878      	add	r0, sp, #480	; 0x1e0
 80085a0:	f009 fa3c 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80085a4:	2204      	movs	r2, #4
 80085a6:	2105      	movs	r1, #5
 80085a8:	a878      	add	r0, sp, #480	; 0x1e0
 80085aa:	f009 fa37 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80085ae:	2201      	movs	r2, #1
 80085b0:	2106      	movs	r1, #6
 80085b2:	a878      	add	r0, sp, #480	; 0x1e0
 80085b4:	f009 fa32 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80085b8:	981d      	ldr	r0, [sp, #116]	; 0x74
 80085ba:	f005 f8a9 	bl	800d710 <PixelType::GetType(pixel::Type)>
 80085be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80085c0:	2107      	movs	r1, #7
 80085c2:	9302      	str	r3, [sp, #8]
 80085c4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80085c6:	4a67      	ldr	r2, [pc, #412]	; (8008764 <main+0x658>)
 80085c8:	e9cd 0300 	strd	r0, r3, [sp]
 80085cc:	4643      	mov	r3, r8
 80085ce:	a878      	add	r0, sp, #480	; 0x1e0
 80085d0:	f009 ff52 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 80085d4:	a80d      	add	r0, sp, #52	; 0x34
 80085d6:	f005 ff03 	bl	800e3e0 <StoreDisplayUdf::StoreDisplayUdf()>
 80085da:	a90d      	add	r1, sp, #52	; 0x34
 80085dc:	a849      	add	r0, sp, #292	; 0x124
 80085de:	f009 fa5f 	bl	8011aa0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80085e2:	a849      	add	r0, sp, #292	; 0x124
 80085e4:	f009 fa69 	bl	8011aba <DisplayUdfParams::Load()>
 80085e8:	b130      	cbz	r0, 80085f8 <main+0x4ec>
 80085ea:	a849      	add	r0, sp, #292	; 0x124
 80085ec:	a978      	add	r1, sp, #480	; 0x1e0
 80085ee:	f009 fb9a 	bl	8011d26 <DisplayUdfParams::Set(DisplayUdf*)>
 80085f2:	a849      	add	r0, sp, #292	; 0x124
 80085f4:	f009 fbca 	bl	8011d8c <DisplayUdfParams::Dump()>
 80085f8:	f50d 611d 	add.w	r1, sp, #2512	; 0x9d0
 80085fc:	a878      	add	r0, sp, #480	; 0x1e0
 80085fe:	f009 fbc7 	bl	8011d90 <DisplayUdf::Show(E131Bridge*)>
 8008602:	2203      	movs	r2, #3
 8008604:	2101      	movs	r1, #1
 8008606:	f89d 3edb 	ldrb.w	r3, [sp, #3803]	; 0xedb
 800860a:	a8f9      	add	r0, sp, #996	; 0x3e4
 800860c:	f000 f9c0 	bl	8008990 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008610:	a80e      	add	r0, sp, #56	; 0x38
 8008612:	f006 f841 	bl	800e698 <StoreRemoteConfig::StoreRemoteConfig()>
 8008616:	a90e      	add	r1, sp, #56	; 0x38
 8008618:	a840      	add	r0, sp, #256	; 0x100
 800861a:	f000 fc81 	bl	8008f20 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800861e:	a840      	add	r0, sp, #256	; 0x100
 8008620:	f000 fc88 	bl	8008f34 <RemoteConfigParams::Load()>
 8008624:	b130      	cbz	r0, 8008634 <main+0x528>
 8008626:	a840      	add	r0, sp, #256	; 0x100
 8008628:	a9f9      	add	r1, sp, #996	; 0x3e4
 800862a:	f000 fdaa 	bl	8009182 <RemoteConfigParams::Set(RemoteConfig*)>
 800862e:	a840      	add	r0, sp, #256	; 0x100
 8008630:	f000 fdc7 	bl	80091c2 <RemoteConfigParams::Dump()>
 8008634:	a809      	add	r0, sp, #36	; 0x24
 8008636:	f005 fe4f 	bl	800e2d8 <SpiFlashStore::Flash()>
 800863a:	2800      	cmp	r0, #0
 800863c:	d1fa      	bne.n	8008634 <main+0x528>
 800863e:	2303      	movs	r3, #3
 8008640:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008644:	4948      	ldr	r1, [pc, #288]	; (8008768 <main+0x65c>)
 8008646:	a878      	add	r0, sp, #480	; 0x1e0
 8008648:	f009 ff77 	bl	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800864c:	4c47      	ldr	r4, [pc, #284]	; (800876c <main+0x660>)
 800864e:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 8008652:	f001 fae9 	bl	8009c28 <E131Bridge::Start()>
 8008656:	232b      	movs	r3, #43	; 0x2b
 8008658:	4a45      	ldr	r2, [pc, #276]	; (8008770 <main+0x664>)
 800865a:	4946      	ldr	r1, [pc, #280]	; (8008774 <main+0x668>)
 800865c:	4846      	ldr	r0, [pc, #280]	; (8008778 <main+0x66c>)
 800865e:	f00a ffff 	bl	8013660 <printf>
 8008662:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008666:	6820      	ldr	r0, [r4, #0]
 8008668:	f007 fd6e 	bl	8010148 <Network::Begin(unsigned short)>
 800866c:	4d43      	ldr	r5, [pc, #268]	; (800877c <main+0x670>)
 800866e:	6028      	str	r0, [r5, #0]
 8008670:	3001      	adds	r0, #1
 8008672:	d105      	bne.n	8008680 <main+0x574>
 8008674:	212d      	movs	r1, #45	; 0x2d
 8008676:	4b42      	ldr	r3, [pc, #264]	; (8008780 <main+0x674>)
 8008678:	4a3d      	ldr	r2, [pc, #244]	; (8008770 <main+0x664>)
 800867a:	483e      	ldr	r0, [pc, #248]	; (8008774 <main+0x668>)
 800867c:	f00a fb9a 	bl	8012db4 <__assert_func>
 8008680:	4b40      	ldr	r3, [pc, #256]	; (8008784 <main+0x678>)
 8008682:	6829      	ldr	r1, [r5, #0]
 8008684:	681a      	ldr	r2, [r3, #0]
 8008686:	6820      	ldr	r0, [r4, #0]
 8008688:	f007 fd6f 	bl	801016a <Network::JoinGroup(int, unsigned int)>
 800868c:	232f      	movs	r3, #47	; 0x2f
 800868e:	4a38      	ldr	r2, [pc, #224]	; (8008770 <main+0x664>)
 8008690:	4938      	ldr	r1, [pc, #224]	; (8008774 <main+0x668>)
 8008692:	482d      	ldr	r0, [pc, #180]	; (8008748 <main+0x63c>)
 8008694:	f00a ffe4 	bl	8013660 <printf>
 8008698:	2302      	movs	r3, #2
 800869a:	f248 0280 	movw	r2, #32896	; 0x8080
 800869e:	493a      	ldr	r1, [pc, #232]	; (8008788 <main+0x67c>)
 80086a0:	a878      	add	r0, sp, #480	; 0x1e0
 80086a2:	f009 ff4a 	bl	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80086a6:	2102      	movs	r1, #2
 80086a8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80086ac:	f00b fdf6 	bl	801429c <fwdgt_config>
 80086b0:	2801      	cmp	r0, #1
 80086b2:	bf0c      	ite	eq
 80086b4:	2301      	moveq	r3, #1
 80086b6:	2300      	movne	r3, #0
 80086b8:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
 80086bc:	d101      	bne.n	80086c2 <main+0x5b6>
 80086be:	f00b fddd 	bl	801427c <fwdgt_enable>
 80086c2:	4c32      	ldr	r4, [pc, #200]	; (800878c <main+0x680>)
 80086c4:	4d32      	ldr	r5, [pc, #200]	; (8008790 <main+0x684>)
 80086c6:	f00b fde1 	bl	801428c <fwdgt_counter_reload>
 80086ca:	f006 fb0d 	bl	800ece8 <net_handle>
 80086ce:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80086d2:	f001 ff19 	bl	800a508 <E131Bridge::Run()>
 80086d6:	a8f9      	add	r0, sp, #996	; 0x3e4
 80086d8:	f000 faf6 	bl	8008cc8 <RemoteConfig::Run()>
 80086dc:	a8f5      	add	r0, sp, #980	; 0x3d4
 80086de:	f002 fd9b 	bl	800b218 <LLRPDevice::Run()>
 80086e2:	a809      	add	r0, sp, #36	; 0x24
 80086e4:	f005 fdf8 	bl	800e2d8 <SpiFlashStore::Flash()>
 80086e8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80086ea:	b192      	cbz	r2, 8008712 <main+0x606>
 80086ec:	6823      	ldr	r3, [r4, #0]
 80086ee:	991c      	ldr	r1, [sp, #112]	; 0x70
 80086f0:	1a5b      	subs	r3, r3, r1
 80086f2:	429a      	cmp	r2, r3
 80086f4:	d80d      	bhi.n	8008712 <main+0x606>
 80086f6:	6823      	ldr	r3, [r4, #0]
 80086f8:	931c      	str	r3, [sp, #112]	; 0x70
 80086fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80086fc:	2b01      	cmp	r3, #1
 80086fe:	f083 0201 	eor.w	r2, r3, #1
 8008702:	bf18      	it	ne
 8008704:	2301      	movne	r3, #1
 8008706:	921b      	str	r2, [sp, #108]	; 0x6c
 8008708:	bf14      	ite	ne
 800870a:	f8ca 3010 	strne.w	r3, [sl, #16]
 800870e:	f8ca 3014 	streq.w	r3, [sl, #20]
 8008712:	a878      	add	r0, sp, #480	; 0x1e0
 8008714:	f009 ff64 	bl	80125e0 <Display::Run()>
 8008718:	b127      	cbz	r7, 8008724 <main+0x618>
 800871a:	682b      	ldr	r3, [r5, #0]
 800871c:	b113      	cbz	r3, 8008724 <main+0x618>
 800871e:	4638      	mov	r0, r7
 8008720:	f004 ffca 	bl	800d6b8 <PixelPatterns::Run()>
 8008724:	a80a      	add	r0, sp, #40	; 0x28
 8008726:	f007 fc6b 	bl	8010000 <MDNS::Run()>
 800872a:	e7cc      	b.n	80086c6 <main+0x5ba>
 800872c:	f20d 305b 	addw	r0, sp, #859	; 0x35b
 8008730:	f7ff fbfb 	bl	8007f2a <memcpy>
 8008734:	f88d 437b 	strb.w	r4, [sp, #891]	; 0x37b
 8008738:	e6f4      	b.n	8008524 <main+0x418>
 800873a:	bf00      	nop
 800873c:	08015a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, ip, lr}
 8008740:	0801599a 	stmdaeq	r1, {r1, r3, r4, r7, r8, fp, ip, lr}
 8008744:	080159a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, ip, lr}
 8008748:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}
 800874c:	08015a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, lr}
 8008750:	2001258c 	andcs	r2, r1, ip, lsl #11
 8008754:	20001a57 	andcs	r1, r0, r7, asr sl
 8008758:	06010100 	streq	r0, [r1], -r0, lsl #2
 800875c:	08015ad0 	stmdaeq	r1, {r4, r6, r7, r9, fp, ip, lr}
 8008760:	080159e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, ip, lr}
 8008764:	080159fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 8008768:	08016bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, sp, lr}
 800876c:	20011ec0 	andcs	r1, r1, r0, asr #29
 8008770:	08015a09 	stmdaeq	r1, {r0, r3, r9, fp, ip, lr}
 8008774:	08015a0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, fp, ip, lr}
 8008778:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 800877c:	20000000 	andcs	r0, r0, r0
 8008780:	08015a32 	stmdaeq	r1, {r1, r4, r5, r9, fp, ip, lr}
 8008784:	2000194c 	andcs	r1, r0, ip, asr #18
 8008788:	08016c03 	stmdaeq	r1, {r0, r1, sl, fp, sp, lr}
 800878c:	200125a8 	andcs	r2, r1, r8, lsr #11
 8008790:	20001d8c 	andcs	r1, r0, ip, lsl #27

08008794 <RDMSoftwareVersion::GetVersion()>:
 8008794:	4800      	ldr	r0, [pc, #0]	; (8008798 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008796:	4770      	bx	lr
 8008798:	08015af9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, fp, ip, lr}

0800879c <RDMSoftwareVersion::GetVersionLength()>:
 800879c:	2003      	movs	r0, #3
 800879e:	4770      	bx	lr

080087a0 <RDMSoftwareVersion::GetVersionId()>:
 80087a0:	4800      	ldr	r0, [pc, #0]	; (80087a4 <RDMSoftwareVersion::GetVersionId()+0x4>)
 80087a2:	4770      	bx	lr
 80087a4:	61c83039 	bicvs	r3, r8, r9, lsr r0

080087a8 <RemoteConfig::HandleList()>:
 80087a8:	2212      	movs	r2, #18
 80087aa:	6803      	ldr	r3, [r0, #0]
 80087ac:	492f      	ldr	r1, [pc, #188]	; (800886c <RemoteConfig::HandleList()+0xc4>)
 80087ae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80087b2:	fb02 1103 	mla	r1, r2, r3, r1
 80087b6:	220c      	movs	r2, #12
 80087b8:	4604      	mov	r4, r0
 80087ba:	6843      	ldr	r3, [r0, #4]
 80087bc:	482c      	ldr	r0, [pc, #176]	; (8008870 <RemoteConfig::HandleList()+0xc8>)
 80087be:	4e2d      	ldr	r6, [pc, #180]	; (8008874 <RemoteConfig::HandleList()+0xcc>)
 80087c0:	fb02 0003 	mla	r0, r2, r3, r0
 80087c4:	4b2c      	ldr	r3, [pc, #176]	; (8008878 <RemoteConfig::HandleList()+0xd0>)
 80087c6:	4f2d      	ldr	r7, [pc, #180]	; (800887c <RemoteConfig::HandleList()+0xd4>)
 80087c8:	681b      	ldr	r3, [r3, #0]
 80087ca:	6835      	ldr	r5, [r6, #0]
 80087cc:	f8d3 c010 	ldr.w	ip, [r3, #16]
 80087d0:	f897 9009 	ldrb.w	r9, [r7, #9]
 80087d4:	fa5f f38c 	uxtb.w	r3, ip
 80087d8:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 80087dc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80087e0:	f8d4 8008 	ldr.w	r8, [r4, #8]
 80087e4:	b089      	sub	sp, #36	; 0x24
 80087e6:	3507      	adds	r5, #7
 80087e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80087ec:	f1b9 0f00 	cmp.w	r9, #0
 80087f0:	d020      	beq.n	8008834 <RemoteConfig::HandleList()+0x8c>
 80087f2:	b2d2      	uxtb	r2, r2
 80087f4:	3709      	adds	r7, #9
 80087f6:	9201      	str	r2, [sp, #4]
 80087f8:	fa5f f28c 	uxtb.w	r2, ip
 80087fc:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8008800:	9200      	str	r2, [sp, #0]
 8008802:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008806:	4628      	mov	r0, r5
 8008808:	e9cd 8705 	strd	r8, r7, [sp, #20]
 800880c:	4a1c      	ldr	r2, [pc, #112]	; (8008880 <RemoteConfig::HandleList()+0xd8>)
 800880e:	f8cd e008 	str.w	lr, [sp, #8]
 8008812:	f00a ff4d 	bl	80136b0 <snprintf>
 8008816:	8ba3      	ldrh	r3, [r4, #28]
 8008818:	2b05      	cmp	r3, #5
 800881a:	d11b      	bne.n	8008854 <RemoteConfig::HandleList()+0xac>
 800881c:	f642 1305 	movw	r3, #10501	; 0x2905
 8008820:	9300      	str	r3, [sp, #0]
 8008822:	69a3      	ldr	r3, [r4, #24]
 8008824:	b282      	uxth	r2, r0
 8008826:	4629      	mov	r1, r5
 8008828:	7d20      	ldrb	r0, [r4, #20]
 800882a:	f006 ffbd 	bl	800f7a8 <udp_send>
 800882e:	b009      	add	sp, #36	; 0x24
 8008830:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008834:	b2d2      	uxtb	r2, r2
 8008836:	9201      	str	r2, [sp, #4]
 8008838:	fa5f f28c 	uxtb.w	r2, ip
 800883c:	e9cd 0804 	strd	r0, r8, [sp, #16]
 8008840:	e9cd e102 	strd	lr, r1, [sp, #8]
 8008844:	9200      	str	r2, [sp, #0]
 8008846:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800884a:	4628      	mov	r0, r5
 800884c:	4a0d      	ldr	r2, [pc, #52]	; (8008884 <RemoteConfig::HandleList()+0xdc>)
 800884e:	f00a ff2f 	bl	80136b0 <snprintf>
 8008852:	e7e0      	b.n	8008816 <RemoteConfig::HandleList()+0x6e>
 8008854:	2b06      	cmp	r3, #6
 8008856:	d1ea      	bne.n	800882e <RemoteConfig::HandleList()+0x86>
 8008858:	6833      	ldr	r3, [r6, #0]
 800885a:	799b      	ldrb	r3, [r3, #6]
 800885c:	2b2a      	cmp	r3, #42	; 0x2a
 800885e:	d1e6      	bne.n	800882e <RemoteConfig::HandleList()+0x86>
 8008860:	f642 1305 	movw	r3, #10501	; 0x2905
 8008864:	9300      	str	r3, [sp, #0]
 8008866:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800886a:	e7db      	b.n	8008824 <RemoteConfig::HandleList()+0x7c>
 800886c:	08015bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, lr}
 8008870:	08015c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, lr}
 8008874:	20000100 	andcs	r0, r0, r0, lsl #2
 8008878:	20011ec0 	andcs	r1, r1, r0, asr #29
 800887c:	20000104 	andcs	r0, r0, r4, lsl #2
 8008880:	08015afd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, fp, ip, lr}
 8008884:	08015b16 	stmdaeq	r1, {r1, r2, r4, r8, r9, fp, ip, lr}

08008888 <RemoteConfig::HandleDisplayGet()>:
 8008888:	8b83      	ldrh	r3, [r0, #28]
 800888a:	2b08      	cmp	r3, #8
 800888c:	d11b      	bne.n	80088c6 <RemoteConfig::HandleDisplayGet()+0x3e>
 800888e:	4b0e      	ldr	r3, [pc, #56]	; (80088c8 <RemoteConfig::HandleDisplayGet()+0x40>)
 8008890:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	4d0d      	ldr	r5, [pc, #52]	; (80088cc <RemoteConfig::HandleDisplayGet()+0x44>)
 8008896:	7a19      	ldrb	r1, [r3, #8]
 8008898:	4a0d      	ldr	r2, [pc, #52]	; (80088d0 <RemoteConfig::HandleDisplayGet()+0x48>)
 800889a:	4b0e      	ldr	r3, [pc, #56]	; (80088d4 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800889c:	4604      	mov	r4, r0
 800889e:	2900      	cmp	r1, #0
 80088a0:	bf18      	it	ne
 80088a2:	4613      	movne	r3, r2
 80088a4:	6828      	ldr	r0, [r5, #0]
 80088a6:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80088aa:	4a0b      	ldr	r2, [pc, #44]	; (80088d8 <RemoteConfig::HandleDisplayGet()+0x50>)
 80088ac:	f00a ff00 	bl	80136b0 <snprintf>
 80088b0:	f642 1305 	movw	r3, #10501	; 0x2905
 80088b4:	9300      	str	r3, [sp, #0]
 80088b6:	b282      	uxth	r2, r0
 80088b8:	69a3      	ldr	r3, [r4, #24]
 80088ba:	6829      	ldr	r1, [r5, #0]
 80088bc:	7d20      	ldrb	r0, [r4, #20]
 80088be:	f006 ff73 	bl	800f7a8 <udp_send>
 80088c2:	b003      	add	sp, #12
 80088c4:	bd30      	pop	{r4, r5, pc}
 80088c6:	4770      	bx	lr
 80088c8:	20012498 	mulcs	r1, r8, r4
 80088cc:	20000100 	andcs	r0, r0, r0, lsl #2
 80088d0:	08015b2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, fp, ip, lr}
 80088d4:	08015b2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, ip, lr}
 80088d8:	08015b33 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, fp, ip, lr}

080088dc <RemoteConfig::HandleVersion()>:
 80088dc:	8b83      	ldrh	r3, [r0, #28]
 80088de:	2b08      	cmp	r3, #8
 80088e0:	d114      	bne.n	800890c <RemoteConfig::HandleVersion()+0x30>
 80088e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80088e4:	4d0a      	ldr	r5, [pc, #40]	; (8008910 <RemoteConfig::HandleVersion()+0x34>)
 80088e6:	4604      	mov	r4, r0
 80088e8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80088ec:	4b09      	ldr	r3, [pc, #36]	; (8008914 <RemoteConfig::HandleVersion()+0x38>)
 80088ee:	4a0a      	ldr	r2, [pc, #40]	; (8008918 <RemoteConfig::HandleVersion()+0x3c>)
 80088f0:	6828      	ldr	r0, [r5, #0]
 80088f2:	f00a fedd 	bl	80136b0 <snprintf>
 80088f6:	f642 1305 	movw	r3, #10501	; 0x2905
 80088fa:	9300      	str	r3, [sp, #0]
 80088fc:	b282      	uxth	r2, r0
 80088fe:	69a3      	ldr	r3, [r4, #24]
 8008900:	6829      	ldr	r1, [r5, #0]
 8008902:	7d20      	ldrb	r0, [r4, #20]
 8008904:	f006 ff50 	bl	800f7a8 <udp_send>
 8008908:	b003      	add	sp, #12
 800890a:	bd30      	pop	{r4, r5, pc}
 800890c:	4770      	bx	lr
 800890e:	bf00      	nop
 8008910:	20000100 	andcs	r0, r0, r0, lsl #2
 8008914:	20012542 	andcs	r2, r1, r2, asr #10
 8008918:	08015b3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}

0800891c <RemoteConfig::HandleUptime()>:
 800891c:	7bc3      	ldrb	r3, [r0, #15]
 800891e:	b1e3      	cbz	r3, 800895a <RemoteConfig::HandleUptime()+0x3e>
 8008920:	4b0e      	ldr	r3, [pc, #56]	; (800895c <RemoteConfig::HandleUptime()+0x40>)
 8008922:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008924:	681a      	ldr	r2, [r3, #0]
 8008926:	8b83      	ldrh	r3, [r0, #28]
 8008928:	4604      	mov	r4, r0
 800892a:	2b07      	cmp	r3, #7
 800892c:	d113      	bne.n	8008956 <RemoteConfig::HandleUptime()+0x3a>
 800892e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008932:	4d0b      	ldr	r5, [pc, #44]	; (8008960 <RemoteConfig::HandleUptime()+0x44>)
 8008934:	fbb2 f3f3 	udiv	r3, r2, r3
 8008938:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800893c:	4a09      	ldr	r2, [pc, #36]	; (8008964 <RemoteConfig::HandleUptime()+0x48>)
 800893e:	6828      	ldr	r0, [r5, #0]
 8008940:	f00a feb6 	bl	80136b0 <snprintf>
 8008944:	f642 1305 	movw	r3, #10501	; 0x2905
 8008948:	9300      	str	r3, [sp, #0]
 800894a:	b282      	uxth	r2, r0
 800894c:	69a3      	ldr	r3, [r4, #24]
 800894e:	6829      	ldr	r1, [r5, #0]
 8008950:	7d20      	ldrb	r0, [r4, #20]
 8008952:	f006 ff29 	bl	800f7a8 <udp_send>
 8008956:	b003      	add	sp, #12
 8008958:	bd30      	pop	{r4, r5, pc}
 800895a:	4770      	bx	lr
 800895c:	200125a8 	andcs	r2, r1, r8, lsr #11
 8008960:	20000100 	andcs	r0, r0, r0, lsl #2
 8008964:	08015b4a 	stmdaeq	r1, {r1, r3, r6, r8, r9, fp, ip, lr}

08008968 <RemoteConfig::HandleDisplaySet()>:
 8008968:	8b83      	ldrh	r3, [r0, #28]
 800896a:	2b09      	cmp	r3, #9
 800896c:	d10a      	bne.n	8008984 <RemoteConfig::HandleDisplaySet()+0x1c>
 800896e:	4b06      	ldr	r3, [pc, #24]	; (8008988 <RemoteConfig::HandleDisplaySet()+0x20>)
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	7a59      	ldrb	r1, [r3, #9]
 8008974:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8008978:	4259      	negs	r1, r3
 800897a:	4159      	adcs	r1, r3
 800897c:	4b03      	ldr	r3, [pc, #12]	; (800898c <RemoteConfig::HandleDisplaySet()+0x24>)
 800897e:	6818      	ldr	r0, [r3, #0]
 8008980:	f009 be1e 	b.w	80125c0 <Display::SetSleep(bool)>
 8008984:	4770      	bx	lr
 8008986:	bf00      	nop
 8008988:	20000100 	andcs	r0, r0, r0, lsl #2
 800898c:	20012498 	mulcs	r1, r8, r4

08008990 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8008990:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008994:	2500      	movs	r5, #0
 8008996:	461f      	mov	r7, r3
 8008998:	6083      	str	r3, [r0, #8]
 800899a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800899e:	4604      	mov	r4, r0
 80089a0:	4690      	mov	r8, r2
 80089a2:	4689      	mov	r9, r1
 80089a4:	f100 0a24 	add.w	sl, r0, #36	; 0x24
 80089a8:	e9c0 1200 	strd	r1, r2, [r0]
 80089ac:	4e12      	ldr	r6, [pc, #72]	; (80089f8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x68>)
 80089ae:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80089b2:	f8df b048 	ldr.w	fp, [pc, #72]	; 80089fc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>
 80089b6:	60c5      	str	r5, [r0, #12]
 80089b8:	8205      	strh	r5, [r0, #16]
 80089ba:	8385      	strh	r5, [r0, #28]
 80089bc:	6205      	str	r5, [r0, #32]
 80089be:	4650      	mov	r0, sl
 80089c0:	f000 fc94 	bl	80092ec <HttpDaemon::HttpDaemon()>
 80089c4:	4b0e      	ldr	r3, [pc, #56]	; (8008a00 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>)
 80089c6:	4631      	mov	r1, r6
 80089c8:	f8db 0000 	ldr.w	r0, [fp]
 80089cc:	601c      	str	r4, [r3, #0]
 80089ce:	f007 fbc1 	bl	8010154 <Network::MacAddressCopyTo(unsigned char*)>
 80089d2:	f642 1105 	movw	r1, #10501	; 0x2905
 80089d6:	f8db 0000 	ldr.w	r0, [fp]
 80089da:	f886 9006 	strb.w	r9, [r6, #6]
 80089de:	f886 8007 	strb.w	r8, [r6, #7]
 80089e2:	7237      	strb	r7, [r6, #8]
 80089e4:	7275      	strb	r5, [r6, #9]
 80089e6:	f007 fbaf 	bl	8010148 <Network::Begin(unsigned short)>
 80089ea:	6160      	str	r0, [r4, #20]
 80089ec:	4650      	mov	r0, sl
 80089ee:	f000 fc95 	bl	800931c <HttpDaemon::Start()>
 80089f2:	4620      	mov	r0, r4
 80089f4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089f8:	20000104 	andcs	r0, r0, r4, lsl #2
 80089fc:	20011ec0 	andcs	r1, r1, r0, asr #29
 8008a00:	20000128 	andcs	r0, r0, r8, lsr #2

08008a04 <RemoteConfig::GetStringNode() const>:
 8008a04:	2012      	movs	r0, #18
 8008a06:	4b03      	ldr	r3, [pc, #12]	; (8008a14 <RemoteConfig::GetStringNode() const+0x10>)
 8008a08:	799a      	ldrb	r2, [r3, #6]
 8008a0a:	4b03      	ldr	r3, [pc, #12]	; (8008a18 <RemoteConfig::GetStringNode() const+0x14>)
 8008a0c:	fb00 3002 	mla	r0, r0, r2, r3
 8008a10:	4770      	bx	lr
 8008a12:	bf00      	nop
 8008a14:	20000104 	andcs	r0, r0, r4, lsl #2
 8008a18:	08015bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, lr}

08008a1c <RemoteConfig::GetStringOutput() const>:
 8008a1c:	200c      	movs	r0, #12
 8008a1e:	4b03      	ldr	r3, [pc, #12]	; (8008a2c <RemoteConfig::GetStringOutput() const+0x10>)
 8008a20:	79da      	ldrb	r2, [r3, #7]
 8008a22:	4b03      	ldr	r3, [pc, #12]	; (8008a30 <RemoteConfig::GetStringOutput() const+0x14>)
 8008a24:	fb00 3002 	mla	r0, r0, r2, r3
 8008a28:	4770      	bx	lr
 8008a2a:	bf00      	nop
 8008a2c:	20000104 	andcs	r0, r0, r4, lsl #2
 8008a30:	08015c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, lr}

08008a34 <RemoteConfig::SetDisable(bool)>:
 8008a34:	b538      	push	{r3, r4, r5, lr}
 8008a36:	4604      	mov	r4, r0
 8008a38:	7b03      	ldrb	r3, [r0, #12]
 8008a3a:	b161      	cbz	r1, 8008a56 <RemoteConfig::SetDisable(bool)+0x22>
 8008a3c:	b953      	cbnz	r3, 8008a54 <RemoteConfig::SetDisable(bool)+0x20>
 8008a3e:	4b0c      	ldr	r3, [pc, #48]	; (8008a70 <RemoteConfig::SetDisable(bool)+0x3c>)
 8008a40:	f642 1105 	movw	r1, #10501	; 0x2905
 8008a44:	6818      	ldr	r0, [r3, #0]
 8008a46:	f007 fb82 	bl	801014e <Network::End(unsigned short)>
 8008a4a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8008a4e:	6163      	str	r3, [r4, #20]
 8008a50:	2301      	movs	r3, #1
 8008a52:	7323      	strb	r3, [r4, #12]
 8008a54:	bd38      	pop	{r3, r4, r5, pc}
 8008a56:	2b00      	cmp	r3, #0
 8008a58:	d0fc      	beq.n	8008a54 <RemoteConfig::SetDisable(bool)+0x20>
 8008a5a:	4b05      	ldr	r3, [pc, #20]	; (8008a70 <RemoteConfig::SetDisable(bool)+0x3c>)
 8008a5c:	460d      	mov	r5, r1
 8008a5e:	6818      	ldr	r0, [r3, #0]
 8008a60:	f642 1105 	movw	r1, #10501	; 0x2905
 8008a64:	f007 fb70 	bl	8010148 <Network::Begin(unsigned short)>
 8008a68:	7325      	strb	r5, [r4, #12]
 8008a6a:	6160      	str	r0, [r4, #20]
 8008a6c:	e7f2      	b.n	8008a54 <RemoteConfig::SetDisable(bool)+0x20>
 8008a6e:	bf00      	nop
 8008a70:	20011ec0 	andcs	r1, r1, r0, asr #29

08008a74 <RemoteConfig::SetDisplayName(char const*)>:
 8008a74:	2217      	movs	r2, #23
 8008a76:	4809      	ldr	r0, [pc, #36]	; (8008a9c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8008a78:	b508      	push	{r3, lr}
 8008a7a:	1e4b      	subs	r3, r1, #1
 8008a7c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8008a80:	b931      	cbnz	r1, 8008a90 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8008a82:	f00a fabd 	bl	8013000 <memset>
 8008a86:	2200      	movs	r2, #0
 8008a88:	4b05      	ldr	r3, [pc, #20]	; (8008aa0 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8008a8a:	f883 2020 	strb.w	r2, [r3, #32]
 8008a8e:	bd08      	pop	{r3, pc}
 8008a90:	3a01      	subs	r2, #1
 8008a92:	f800 1b01 	strb.w	r1, [r0], #1
 8008a96:	d1f1      	bne.n	8008a7c <RemoteConfig::SetDisplayName(char const*)+0x8>
 8008a98:	e7f5      	b.n	8008a86 <RemoteConfig::SetDisplayName(char const*)+0x12>
 8008a9a:	bf00      	nop
 8008a9c:	2000010d 	andcs	r0, r0, sp, lsl #2
 8008aa0:	20000104 	andcs	r0, r0, r4, lsl #2

08008aa4 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8008aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008aa6:	4604      	mov	r4, r0
 8008aa8:	4616      	mov	r6, r2
 8008aaa:	460d      	mov	r5, r1
 8008aac:	4f27      	ldr	r7, [pc, #156]	; (8008b4c <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 8008aae:	b085      	sub	sp, #20
 8008ab0:	b9a9      	cbnz	r1, 8008ade <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8008ab2:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8008ab6:	6839      	ldr	r1, [r7, #0]
 8008ab8:	aa03      	add	r2, sp, #12
 8008aba:	3105      	adds	r1, #5
 8008abc:	9303      	str	r3, [sp, #12]
 8008abe:	f000 fbb7 	bl	8009230 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008ac2:	1e03      	subs	r3, r0, #0
 8008ac4:	da1b      	bge.n	8008afe <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8008ac6:	f642 1305 	movw	r3, #10501	; 0x2905
 8008aca:	220b      	movs	r2, #11
 8008acc:	9300      	str	r3, [sp, #0]
 8008ace:	4920      	ldr	r1, [pc, #128]	; (8008b50 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8008ad0:	69a3      	ldr	r3, [r4, #24]
 8008ad2:	7d20      	ldrb	r0, [r4, #20]
 8008ad4:	f006 fe68 	bl	800f7a8 <udp_send>
 8008ad8:	200c      	movs	r0, #12
 8008ada:	b005      	add	sp, #20
 8008adc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ade:	9203      	str	r2, [sp, #12]
 8008ae0:	aa03      	add	r2, sp, #12
 8008ae2:	6039      	str	r1, [r7, #0]
 8008ae4:	f000 fba4 	bl	8009230 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008ae8:	1e03      	subs	r3, r0, #0
 8008aea:	da08      	bge.n	8008afe <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8008aec:	2e0b      	cmp	r6, #11
 8008aee:	4632      	mov	r2, r6
 8008af0:	4628      	mov	r0, r5
 8008af2:	bf28      	it	cs
 8008af4:	220b      	movcs	r2, #11
 8008af6:	4916      	ldr	r1, [pc, #88]	; (8008b50 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8008af8:	f00a fa60 	bl	8012fbc <memcpy>
 8008afc:	e7ec      	b.n	8008ad8 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8008afe:	201c      	movs	r0, #28
 8008b00:	4343      	muls	r3, r0
 8008b02:	4914      	ldr	r1, [pc, #80]	; (8008b54 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8008b04:	18ca      	adds	r2, r1, r3
 8008b06:	6852      	ldr	r2, [r2, #4]
 8008b08:	58cb      	ldr	r3, [r1, r3]
 8008b0a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8008b0e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008b12:	07d2      	lsls	r2, r2, #31
 8008b14:	bf48      	it	mi
 8008b16:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8008b1a:	a903      	add	r1, sp, #12
 8008b1c:	bf48      	it	mi
 8008b1e:	58d3      	ldrmi	r3, [r2, r3]
 8008b20:	4798      	blx	r3
 8008b22:	9a03      	ldr	r2, [sp, #12]
 8008b24:	b955      	cbnz	r5, 8008b3c <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8008b26:	f642 1305 	movw	r3, #10501	; 0x2905
 8008b2a:	6839      	ldr	r1, [r7, #0]
 8008b2c:	9300      	str	r3, [sp, #0]
 8008b2e:	7d20      	ldrb	r0, [r4, #20]
 8008b30:	69a3      	ldr	r3, [r4, #24]
 8008b32:	b292      	uxth	r2, r2
 8008b34:	f006 fe38 	bl	800f7a8 <udp_send>
 8008b38:	9803      	ldr	r0, [sp, #12]
 8008b3a:	e7ce      	b.n	8008ada <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8008b3c:	42b2      	cmp	r2, r6
 8008b3e:	bf28      	it	cs
 8008b40:	4632      	movcs	r2, r6
 8008b42:	4628      	mov	r0, r5
 8008b44:	6839      	ldr	r1, [r7, #0]
 8008b46:	f00a fa44 	bl	8012fd2 <memmove>
 8008b4a:	e7f5      	b.n	8008b38 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8008b4c:	20000100 	andcs	r0, r0, r0, lsl #2
 8008b50:	08015b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, lr}
 8008b54:	08015de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, lr}

08008b58 <RemoteConfig::HandleGetNoParams()>:
 8008b58:	2200      	movs	r2, #0
 8008b5a:	4611      	mov	r1, r2
 8008b5c:	f7ff bfa2 	b.w	8008aa4 <RemoteConfig::HandleGet(void*, unsigned int)>

08008b60 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8008b60:	b510      	push	{r4, lr}
 8008b62:	460c      	mov	r4, r1
 8008b64:	4b07      	ldr	r3, [pc, #28]	; (8008b84 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8008b66:	b08a      	sub	sp, #40	; 0x28
 8008b68:	6819      	ldr	r1, [r3, #0]
 8008b6a:	a801      	add	r0, sp, #4
 8008b6c:	f000 f9d8 	bl	8008f20 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008b70:	4905      	ldr	r1, [pc, #20]	; (8008b88 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8008b72:	4623      	mov	r3, r4
 8008b74:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008b78:	6809      	ldr	r1, [r1, #0]
 8008b7a:	a801      	add	r0, sp, #4
 8008b7c:	f000 faf4 	bl	8009168 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8008b80:	b00a      	add	sp, #40	; 0x28
 8008b82:	bd10      	pop	{r4, pc}
 8008b84:	2000a5d4 	ldrdcs	sl, [r0], -r4
 8008b88:	20000100 	andcs	r0, r0, r0, lsl #2

08008b8c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8008b8c:	b510      	push	{r4, lr}
 8008b8e:	460c      	mov	r4, r1
 8008b90:	4b07      	ldr	r3, [pc, #28]	; (8008bb0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8008b92:	b09a      	sub	sp, #104	; 0x68
 8008b94:	6819      	ldr	r1, [r3, #0]
 8008b96:	a801      	add	r0, sp, #4
 8008b98:	f007 fdcc 	bl	8010734 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8008b9c:	4905      	ldr	r1, [pc, #20]	; (8008bb4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8008b9e:	4623      	mov	r3, r4
 8008ba0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008ba4:	6809      	ldr	r1, [r1, #0]
 8008ba6:	a801      	add	r0, sp, #4
 8008ba8:	f008 f81a 	bl	8010be0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8008bac:	b01a      	add	sp, #104	; 0x68
 8008bae:	bd10      	pop	{r4, pc}
 8008bb0:	2000a5cc 	andcs	sl, r0, ip, asr #11
 8008bb4:	20000100 	andcs	r0, r0, r0, lsl #2

08008bb8 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8008bb8:	b510      	push	{r4, lr}
 8008bba:	460c      	mov	r4, r1
 8008bbc:	4b07      	ldr	r3, [pc, #28]	; (8008bdc <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8008bbe:	b08a      	sub	sp, #40	; 0x28
 8008bc0:	6819      	ldr	r1, [r3, #0]
 8008bc2:	a801      	add	r0, sp, #4
 8008bc4:	f001 ffba 	bl	800ab3c <E131Params::E131Params(E131ParamsStore*)>
 8008bc8:	4905      	ldr	r1, [pc, #20]	; (8008be0 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8008bca:	4623      	mov	r3, r4
 8008bcc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008bd0:	6809      	ldr	r1, [r1, #0]
 8008bd2:	a801      	add	r0, sp, #4
 8008bd4:	f002 fa06 	bl	800afe4 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8008bd8:	b00a      	add	sp, #40	; 0x28
 8008bda:	bd10      	pop	{r4, pc}
 8008bdc:	2000a5c8 	andcs	sl, r0, r8, asr #11
 8008be0:	20000100 	andcs	r0, r0, r0, lsl #2

08008be4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8008be4:	b510      	push	{r4, lr}
 8008be6:	460c      	mov	r4, r1
 8008be8:	4b07      	ldr	r3, [pc, #28]	; (8008c08 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8008bea:	b08c      	sub	sp, #48	; 0x30
 8008bec:	6819      	ldr	r1, [r3, #0]
 8008bee:	a801      	add	r0, sp, #4
 8008bf0:	f003 feba 	bl	800c968 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008bf4:	4905      	ldr	r1, [pc, #20]	; (8008c0c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8008bf6:	4623      	mov	r3, r4
 8008bf8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008bfc:	6809      	ldr	r1, [r1, #0]
 8008bfe:	a801      	add	r0, sp, #4
 8008c00:	f004 f96a 	bl	800ced8 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 8008c04:	b00c      	add	sp, #48	; 0x30
 8008c06:	bd10      	pop	{r4, pc}
 8008c08:	2000a5d8 	ldrdcs	sl, [r0], -r8
 8008c0c:	20000100 	andcs	r0, r0, r0, lsl #2

08008c10 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8008c10:	b510      	push	{r4, lr}
 8008c12:	460c      	mov	r4, r1
 8008c14:	4b07      	ldr	r3, [pc, #28]	; (8008c34 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8008c16:	b08a      	sub	sp, #40	; 0x28
 8008c18:	6819      	ldr	r1, [r3, #0]
 8008c1a:	4668      	mov	r0, sp
 8008c1c:	f008 ff40 	bl	8011aa0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008c20:	4905      	ldr	r1, [pc, #20]	; (8008c38 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8008c22:	4623      	mov	r3, r4
 8008c24:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008c28:	4668      	mov	r0, sp
 8008c2a:	6809      	ldr	r1, [r1, #0]
 8008c2c:	f009 f86e 	bl	8011d0c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8008c30:	b00a      	add	sp, #40	; 0x28
 8008c32:	bd10      	pop	{r4, pc}
 8008c34:	2000a5c4 	andcs	sl, r0, r4, asr #11
 8008c38:	20000100 	andcs	r0, r0, r0, lsl #2

08008c3c <RemoteConfig::HandleSet(void*, unsigned int)>:
 8008c3c:	b530      	push	{r4, r5, lr}
 8008c3e:	b085      	sub	sp, #20
 8008c40:	4604      	mov	r4, r0
 8008c42:	9201      	str	r2, [sp, #4]
 8008c44:	b9c9      	cbnz	r1, 8008c7a <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 8008c46:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8008c4a:	9303      	str	r3, [sp, #12]
 8008c4c:	4b1b      	ldr	r3, [pc, #108]	; (8008cbc <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8008c4e:	aa03      	add	r2, sp, #12
 8008c50:	6819      	ldr	r1, [r3, #0]
 8008c52:	3101      	adds	r1, #1
 8008c54:	f000 faec 	bl	8009230 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8008c58:	2800      	cmp	r0, #0
 8008c5a:	db24      	blt.n	8008ca6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8008c5c:	221c      	movs	r2, #28
 8008c5e:	4b18      	ldr	r3, [pc, #96]	; (8008cc0 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 8008c60:	fb02 3300 	mla	r3, r2, r0, r3
 8008c64:	68da      	ldr	r2, [r3, #12]
 8008c66:	689b      	ldr	r3, [r3, #8]
 8008c68:	1051      	asrs	r1, r2, #1
 8008c6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008c6e:	07d2      	lsls	r2, r2, #31
 8008c70:	bf44      	itt	mi
 8008c72:	5862      	ldrmi	r2, [r4, r1]
 8008c74:	58d3      	ldrmi	r3, [r2, r3]
 8008c76:	4798      	blx	r3
 8008c78:	e015      	b.n	8008ca6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8008c7a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008c7e:	4613      	mov	r3, r2
 8008c80:	d811      	bhi.n	8008ca6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8008c82:	2200      	movs	r2, #0
 8008c84:	460d      	mov	r5, r1
 8008c86:	490f      	ldr	r1, [pc, #60]	; (8008cc4 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 8008c88:	6202      	str	r2, [r0, #32]
 8008c8a:	7809      	ldrb	r1, [r1, #0]
 8008c8c:	b29b      	uxth	r3, r3
 8008c8e:	07c9      	lsls	r1, r1, #31
 8008c90:	d50b      	bpl.n	8008caa <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 8008c92:	7829      	ldrb	r1, [r5, #0]
 8008c94:	297b      	cmp	r1, #123	; 0x7b
 8008c96:	d108      	bne.n	8008caa <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 8008c98:	3b01      	subs	r3, #1
 8008c9a:	4628      	mov	r0, r5
 8008c9c:	b299      	uxth	r1, r3
 8008c9e:	f009 f8ff 	bl	8011ea0 <properties::convert_json_file(char*, unsigned short, bool)>
 8008ca2:	2800      	cmp	r0, #0
 8008ca4:	dc08      	bgt.n	8008cb8 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 8008ca6:	b005      	add	sp, #20
 8008ca8:	bd30      	pop	{r4, r5, pc}
 8008caa:	83a3      	strh	r3, [r4, #28]
 8008cac:	4b03      	ldr	r3, [pc, #12]	; (8008cbc <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8008cae:	4620      	mov	r0, r4
 8008cb0:	601d      	str	r5, [r3, #0]
 8008cb2:	aa01      	add	r2, sp, #4
 8008cb4:	1c69      	adds	r1, r5, #1
 8008cb6:	e7cd      	b.n	8008c54 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8008cb8:	83a0      	strh	r0, [r4, #28]
 8008cba:	e7f7      	b.n	8008cac <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 8008cbc:	20000100 	andcs	r0, r0, r0, lsl #2
 8008cc0:	08015de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, lr}
 8008cc4:	20012494 	mulcs	r1, r4, r4

08008cc8 <RemoteConfig::Run()>:
 8008cc8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8008ccc:	7b03      	ldrb	r3, [r0, #12]
 8008cce:	2b00      	cmp	r3, #0
 8008cd0:	d14f      	bne.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008cd2:	4604      	mov	r4, r0
 8008cd4:	4d3e      	ldr	r5, [pc, #248]	; (8008dd0 <RemoteConfig::Run()+0x108>)
 8008cd6:	3024      	adds	r0, #36	; 0x24
 8008cd8:	f000 fd90 	bl	80097fc <HttpDaemon::Run()>
 8008cdc:	4629      	mov	r1, r5
 8008cde:	7d20      	ldrb	r0, [r4, #20]
 8008ce0:	f10d 030e 	add.w	r3, sp, #14
 8008ce4:	f104 0218 	add.w	r2, r4, #24
 8008ce8:	f006 fd38 	bl	800f75c <udp_recv2>
 8008cec:	2803      	cmp	r0, #3
 8008cee:	83a0      	strh	r0, [r4, #28]
 8008cf0:	d93f      	bls.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008cf2:	682b      	ldr	r3, [r5, #0]
 8008cf4:	181a      	adds	r2, r3, r0
 8008cf6:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 8008cfa:	2a0a      	cmp	r2, #10
 8008cfc:	bf04      	itt	eq
 8008cfe:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 8008d02:	83a0      	strheq	r0, [r4, #28]
 8008d04:	7819      	ldrb	r1, [r3, #0]
 8008d06:	293f      	cmp	r1, #63	; 0x3f
 8008d08:	d139      	bne.n	8008d7e <RemoteConfig::Run()+0xb6>
 8008d0a:	4832      	ldr	r0, [pc, #200]	; (8008dd4 <RemoteConfig::Run()+0x10c>)
 8008d0c:	2200      	movs	r2, #0
 8008d0e:	4607      	mov	r7, r0
 8008d10:	8ba1      	ldrh	r1, [r4, #28]
 8008d12:	3901      	subs	r1, #1
 8008d14:	b289      	uxth	r1, r1
 8008d16:	83a1      	strh	r1, [r4, #28]
 8008d18:	7b86      	ldrb	r6, [r0, #14]
 8008d1a:	8985      	ldrh	r5, [r0, #12]
 8008d1c:	b17e      	cbz	r6, 8008d3e <RemoteConfig::Run()+0x76>
 8008d1e:	42a9      	cmp	r1, r5
 8008d20:	d80f      	bhi.n	8008d42 <RemoteConfig::Run()+0x7a>
 8008d22:	3201      	adds	r2, #1
 8008d24:	2a08      	cmp	r2, #8
 8008d26:	f100 0010 	add.w	r0, r0, #16
 8008d2a:	d1f5      	bne.n	8008d18 <RemoteConfig::Run()+0x50>
 8008d2c:	f642 1305 	movw	r3, #10501	; 0x2905
 8008d30:	9300      	str	r3, [sp, #0]
 8008d32:	69a3      	ldr	r3, [r4, #24]
 8008d34:	4928      	ldr	r1, [pc, #160]	; (8008dd8 <RemoteConfig::Run()+0x110>)
 8008d36:	7d20      	ldrb	r0, [r4, #20]
 8008d38:	f006 fd36 	bl	800f7a8 <udp_send>
 8008d3c:	e019      	b.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008d3e:	42a9      	cmp	r1, r5
 8008d40:	d1ef      	bne.n	8008d22 <RemoteConfig::Run()+0x5a>
 8008d42:	6886      	ldr	r6, [r0, #8]
 8008d44:	f103 0c01 	add.w	ip, r3, #1
 8008d48:	4435      	add	r5, r6
 8008d4a:	42b5      	cmp	r5, r6
 8008d4c:	d006      	beq.n	8008d5c <RemoteConfig::Run()+0x94>
 8008d4e:	f81c 8b01 	ldrb.w	r8, [ip], #1
 8008d52:	f816 eb01 	ldrb.w	lr, [r6], #1
 8008d56:	45f0      	cmp	r8, lr
 8008d58:	d0f7      	beq.n	8008d4a <RemoteConfig::Run()+0x82>
 8008d5a:	e7e2      	b.n	8008d22 <RemoteConfig::Run()+0x5a>
 8008d5c:	0113      	lsls	r3, r2, #4
 8008d5e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8008d62:	6852      	ldr	r2, [r2, #4]
 8008d64:	58fb      	ldr	r3, [r7, r3]
 8008d66:	1051      	asrs	r1, r2, #1
 8008d68:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8008d6c:	07d2      	lsls	r2, r2, #31
 8008d6e:	d403      	bmi.n	8008d78 <RemoteConfig::Run()+0xb0>
 8008d70:	4798      	blx	r3
 8008d72:	b004      	add	sp, #16
 8008d74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008d78:	5862      	ldr	r2, [r4, r1]
 8008d7a:	58d3      	ldr	r3, [r2, r3]
 8008d7c:	e7f8      	b.n	8008d70 <RemoteConfig::Run()+0xa8>
 8008d7e:	7b62      	ldrb	r2, [r4, #13]
 8008d80:	2a00      	cmp	r2, #0
 8008d82:	d1f6      	bne.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008d84:	2923      	cmp	r1, #35	; 0x23
 8008d86:	d105      	bne.n	8008d94 <RemoteConfig::Run()+0xcc>
 8008d88:	4611      	mov	r1, r2
 8008d8a:	4620      	mov	r0, r4
 8008d8c:	6222      	str	r2, [r4, #32]
 8008d8e:	f7ff ff55 	bl	8008c3c <RemoteConfig::HandleSet(void*, unsigned int)>
 8008d92:	e7ee      	b.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008d94:	2921      	cmp	r1, #33	; 0x21
 8008d96:	d1ec      	bne.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008d98:	8ba2      	ldrh	r2, [r4, #28]
 8008d9a:	3a01      	subs	r2, #1
 8008d9c:	b292      	uxth	r2, r2
 8008d9e:	2a08      	cmp	r2, #8
 8008da0:	83a2      	strh	r2, [r4, #28]
 8008da2:	d90a      	bls.n	8008dba <RemoteConfig::Run()+0xf2>
 8008da4:	490d      	ldr	r1, [pc, #52]	; (8008ddc <RemoteConfig::Run()+0x114>)
 8008da6:	1c5a      	adds	r2, r3, #1
 8008da8:	3309      	adds	r3, #9
 8008daa:	4293      	cmp	r3, r2
 8008dac:	d00c      	beq.n	8008dc8 <RemoteConfig::Run()+0x100>
 8008dae:	f812 5b01 	ldrb.w	r5, [r2], #1
 8008db2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008db6:	4285      	cmp	r5, r0
 8008db8:	d0f7      	beq.n	8008daa <RemoteConfig::Run()+0xe2>
 8008dba:	f642 1305 	movw	r3, #10501	; 0x2905
 8008dbe:	9300      	str	r3, [sp, #0]
 8008dc0:	2208      	movs	r2, #8
 8008dc2:	69a3      	ldr	r3, [r4, #24]
 8008dc4:	4906      	ldr	r1, [pc, #24]	; (8008de0 <RemoteConfig::Run()+0x118>)
 8008dc6:	e7b6      	b.n	8008d36 <RemoteConfig::Run()+0x6e>
 8008dc8:	4620      	mov	r0, r4
 8008dca:	f7ff fdcd 	bl	8008968 <RemoteConfig::HandleDisplaySet()>
 8008dce:	e7d0      	b.n	8008d72 <RemoteConfig::Run()+0xaa>
 8008dd0:	20000100 	andcs	r0, r0, r0, lsl #2
 8008dd4:	08015ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, ip, lr}
 8008dd8:	08015b6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, fp, ip, lr}
 8008ddc:	08015b63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, fp, ip, lr}
 8008de0:	08015b75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, fp, ip, lr}

08008de4 <RemoteConfig::HandleSetRconfig()>:
 8008de4:	b510      	push	{r4, lr}
 8008de6:	4604      	mov	r4, r0
 8008de8:	4b08      	ldr	r3, [pc, #32]	; (8008e0c <RemoteConfig::HandleSetRconfig()+0x28>)
 8008dea:	b08a      	sub	sp, #40	; 0x28
 8008dec:	6819      	ldr	r1, [r3, #0]
 8008dee:	a801      	add	r0, sp, #4
 8008df0:	f000 f896 	bl	8008f20 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008df4:	4b06      	ldr	r3, [pc, #24]	; (8008e10 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8008df6:	8ba2      	ldrh	r2, [r4, #28]
 8008df8:	6819      	ldr	r1, [r3, #0]
 8008dfa:	a801      	add	r0, sp, #4
 8008dfc:	f000 f8a6 	bl	8008f4c <RemoteConfigParams::Load(char const*, unsigned int)>
 8008e00:	4621      	mov	r1, r4
 8008e02:	a801      	add	r0, sp, #4
 8008e04:	f000 f9bd 	bl	8009182 <RemoteConfigParams::Set(RemoteConfig*)>
 8008e08:	b00a      	add	sp, #40	; 0x28
 8008e0a:	bd10      	pop	{r4, pc}
 8008e0c:	2000a5d4 	ldrdcs	sl, [r0], -r4
 8008e10:	20000100 	andcs	r0, r0, r0, lsl #2

08008e14 <RemoteConfig::HandleSetNetworkTxt()>:
 8008e14:	b510      	push	{r4, lr}
 8008e16:	4604      	mov	r4, r0
 8008e18:	4b06      	ldr	r3, [pc, #24]	; (8008e34 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8008e1a:	b09a      	sub	sp, #104	; 0x68
 8008e1c:	6819      	ldr	r1, [r3, #0]
 8008e1e:	a801      	add	r0, sp, #4
 8008e20:	f007 fc88 	bl	8010734 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8008e24:	4b04      	ldr	r3, [pc, #16]	; (8008e38 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8008e26:	8ba2      	ldrh	r2, [r4, #28]
 8008e28:	6819      	ldr	r1, [r3, #0]
 8008e2a:	a801      	add	r0, sp, #4
 8008e2c:	f007 fc9a 	bl	8010764 <NetworkParams::Load(char const*, unsigned int)>
 8008e30:	b01a      	add	sp, #104	; 0x68
 8008e32:	bd10      	pop	{r4, pc}
 8008e34:	2000a5cc 	andcs	sl, r0, ip, asr #11
 8008e38:	20000100 	andcs	r0, r0, r0, lsl #2

08008e3c <RemoteConfig::HandleSetE131Txt()>:
 8008e3c:	b510      	push	{r4, lr}
 8008e3e:	4604      	mov	r4, r0
 8008e40:	4b06      	ldr	r3, [pc, #24]	; (8008e5c <RemoteConfig::HandleSetE131Txt()+0x20>)
 8008e42:	b08a      	sub	sp, #40	; 0x28
 8008e44:	6819      	ldr	r1, [r3, #0]
 8008e46:	a801      	add	r0, sp, #4
 8008e48:	f001 fe78 	bl	800ab3c <E131Params::E131Params(E131ParamsStore*)>
 8008e4c:	4b04      	ldr	r3, [pc, #16]	; (8008e60 <RemoteConfig::HandleSetE131Txt()+0x24>)
 8008e4e:	8ba2      	ldrh	r2, [r4, #28]
 8008e50:	6819      	ldr	r1, [r3, #0]
 8008e52:	a801      	add	r0, sp, #4
 8008e54:	f001 fe9e 	bl	800ab94 <E131Params::Load(char const*, unsigned int)>
 8008e58:	b00a      	add	sp, #40	; 0x28
 8008e5a:	bd10      	pop	{r4, pc}
 8008e5c:	2000a5c8 	andcs	sl, r0, r8, asr #11
 8008e60:	20000100 	andcs	r0, r0, r0, lsl #2

08008e64 <RemoteConfig::HandleSetDevicesTxt()>:
 8008e64:	b510      	push	{r4, lr}
 8008e66:	4604      	mov	r4, r0
 8008e68:	4b06      	ldr	r3, [pc, #24]	; (8008e84 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 8008e6a:	b08c      	sub	sp, #48	; 0x30
 8008e6c:	6819      	ldr	r1, [r3, #0]
 8008e6e:	a801      	add	r0, sp, #4
 8008e70:	f003 fd7a 	bl	800c968 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008e74:	4b04      	ldr	r3, [pc, #16]	; (8008e88 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 8008e76:	8ba2      	ldrh	r2, [r4, #28]
 8008e78:	6819      	ldr	r1, [r3, #0]
 8008e7a:	a801      	add	r0, sp, #4
 8008e7c:	f003 fda8 	bl	800c9d0 <WS28xxDmxParams::Load(char const*, unsigned int)>
 8008e80:	b00c      	add	sp, #48	; 0x30
 8008e82:	bd10      	pop	{r4, pc}
 8008e84:	2000a5d8 	ldrdcs	sl, [r0], -r8
 8008e88:	20000100 	andcs	r0, r0, r0, lsl #2

08008e8c <RemoteConfig::HandleSetDisplayTxt()>:
 8008e8c:	b510      	push	{r4, lr}
 8008e8e:	4604      	mov	r4, r0
 8008e90:	4b06      	ldr	r3, [pc, #24]	; (8008eac <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8008e92:	b08a      	sub	sp, #40	; 0x28
 8008e94:	6819      	ldr	r1, [r3, #0]
 8008e96:	4668      	mov	r0, sp
 8008e98:	f008 fe02 	bl	8011aa0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008e9c:	4b04      	ldr	r3, [pc, #16]	; (8008eb0 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8008e9e:	4668      	mov	r0, sp
 8008ea0:	8ba2      	ldrh	r2, [r4, #28]
 8008ea2:	6819      	ldr	r1, [r3, #0]
 8008ea4:	f008 fe16 	bl	8011ad4 <DisplayUdfParams::Load(char const*, unsigned int)>
 8008ea8:	b00a      	add	sp, #40	; 0x28
 8008eaa:	bd10      	pop	{r4, pc}
 8008eac:	2000a5c4 	andcs	sl, r0, r4, asr #11
 8008eb0:	20000100 	andcs	r0, r0, r0, lsl #2

08008eb4 <RemoteConfig::HandleFactory()>:
 8008eb4:	b538      	push	{r3, r4, r5, lr}
 8008eb6:	2400      	movs	r4, #0
 8008eb8:	4d04      	ldr	r5, [pc, #16]	; (8008ecc <RemoteConfig::HandleFactory()+0x18>)
 8008eba:	4621      	mov	r1, r4
 8008ebc:	6828      	ldr	r0, [r5, #0]
 8008ebe:	3401      	adds	r4, #1
 8008ec0:	f005 f984 	bl	800e1cc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8008ec4:	2c1c      	cmp	r4, #28
 8008ec6:	d1f8      	bne.n	8008eba <RemoteConfig::HandleFactory()+0x6>
 8008ec8:	bd38      	pop	{r3, r4, r5, pc}
 8008eca:	bf00      	nop
 8008ecc:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

08008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8008ed0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008ed2:	460b      	mov	r3, r1
 8008ed4:	8885      	ldrh	r5, [r0, #4]
 8008ed6:	88c1      	ldrh	r1, [r0, #6]
 8008ed8:	42a9      	cmp	r1, r5
 8008eda:	d214      	bcs.n	8008f06 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8008edc:	4604      	mov	r4, r0
 8008ede:	6800      	ldr	r0, [r0, #0]
 8008ee0:	1a6d      	subs	r5, r5, r1
 8008ee2:	4408      	add	r0, r1
 8008ee4:	7a21      	ldrb	r1, [r4, #8]
 8008ee6:	b91a      	cbnz	r2, 8008ef0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8008ee8:	b919      	cbnz	r1, 8008ef2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8008eea:	4a0a      	ldr	r2, [pc, #40]	; (8008f14 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8008eec:	9100      	str	r1, [sp, #0]
 8008eee:	e002      	b.n	8008ef6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008ef0:	b159      	cbz	r1, 8008f0a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8008ef2:	9200      	str	r2, [sp, #0]
 8008ef4:	4a08      	ldr	r2, [pc, #32]	; (8008f18 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8008ef6:	4629      	mov	r1, r5
 8008ef8:	f00a fbda 	bl	80136b0 <snprintf>
 8008efc:	4285      	cmp	r5, r0
 8008efe:	bfa2      	ittt	ge
 8008f00:	88e3      	ldrhge	r3, [r4, #6]
 8008f02:	181b      	addge	r3, r3, r0
 8008f04:	80e3      	strhge	r3, [r4, #6]
 8008f06:	b003      	add	sp, #12
 8008f08:	bd30      	pop	{r4, r5, pc}
 8008f0a:	2201      	movs	r2, #1
 8008f0c:	9200      	str	r2, [sp, #0]
 8008f0e:	4a03      	ldr	r2, [pc, #12]	; (8008f1c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8008f10:	e7f1      	b.n	8008ef6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8008f12:	bf00      	nop
 8008f14:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 8008f18:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 8008f1c:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

08008f20 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8008f20:	b510      	push	{r4, lr}
 8008f22:	4604      	mov	r4, r0
 8008f24:	2220      	movs	r2, #32
 8008f26:	f840 1b04 	str.w	r1, [r0], #4
 8008f2a:	2100      	movs	r1, #0
 8008f2c:	f00a f868 	bl	8013000 <memset>
 8008f30:	4620      	mov	r0, r4
 8008f32:	bd10      	pop	{r4, pc}

08008f34 <RemoteConfigParams::Load()>:
 8008f34:	b508      	push	{r3, lr}
 8008f36:	2300      	movs	r3, #0
 8008f38:	4601      	mov	r1, r0
 8008f3a:	6043      	str	r3, [r0, #4]
 8008f3c:	6800      	ldr	r0, [r0, #0]
 8008f3e:	b120      	cbz	r0, 8008f4a <RemoteConfigParams::Load()+0x16>
 8008f40:	6803      	ldr	r3, [r0, #0]
 8008f42:	3104      	adds	r1, #4
 8008f44:	68db      	ldr	r3, [r3, #12]
 8008f46:	4798      	blx	r3
 8008f48:	2001      	movs	r0, #1
 8008f4a:	bd08      	pop	{r3, pc}

08008f4c <RemoteConfigParams::Load(char const*, unsigned int)>:
 8008f4c:	2300      	movs	r3, #0
 8008f4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008f50:	460d      	mov	r5, r1
 8008f52:	4616      	mov	r6, r2
 8008f54:	4604      	mov	r4, r0
 8008f56:	6043      	str	r3, [r0, #4]
 8008f58:	4602      	mov	r2, r0
 8008f5a:	490a      	ldr	r1, [pc, #40]	; (8008f84 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8008f5c:	4668      	mov	r0, sp
 8008f5e:	f009 f8ed 	bl	801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8008f62:	4632      	mov	r2, r6
 8008f64:	4629      	mov	r1, r5
 8008f66:	4668      	mov	r0, sp
 8008f68:	f009 f8ec 	bl	8012144 <ReadConfigFile::Read(char const*, unsigned int)>
 8008f6c:	4621      	mov	r1, r4
 8008f6e:	f851 0b04 	ldr.w	r0, [r1], #4
 8008f72:	6803      	ldr	r3, [r0, #0]
 8008f74:	689b      	ldr	r3, [r3, #8]
 8008f76:	4798      	blx	r3
 8008f78:	4668      	mov	r0, sp
 8008f7a:	f009 f8e2 	bl	8012142 <ReadConfigFile::~ReadConfigFile()>
 8008f7e:	b002      	add	sp, #8
 8008f80:	bd70      	pop	{r4, r5, r6, pc}
 8008f82:	bf00      	nop
 8008f84:	08009045 	stmdaeq	r0, {r0, r2, r6, ip, pc}

08008f88 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8008f88:	6843      	ldr	r3, [r0, #4]
 8008f8a:	b111      	cbz	r1, 8008f92 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8008f8c:	4313      	orrs	r3, r2
 8008f8e:	6043      	str	r3, [r0, #4]
 8008f90:	4770      	bx	lr
 8008f92:	ea23 0302 	bic.w	r3, r3, r2
 8008f96:	e7fa      	b.n	8008f8e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08008f98 <RemoteConfigParams::callbackFunction(char const*)>:
 8008f98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008f9a:	460d      	mov	r5, r1
 8008f9c:	4604      	mov	r4, r0
 8008f9e:	4923      	ldr	r1, [pc, #140]	; (800902c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8008fa0:	4628      	mov	r0, r5
 8008fa2:	f10d 0203 	add.w	r2, sp, #3
 8008fa6:	f009 fa04 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008faa:	b938      	cbnz	r0, 8008fbc <RemoteConfigParams::callbackFunction(char const*)+0x24>
 8008fac:	2201      	movs	r2, #1
 8008fae:	4620      	mov	r0, r4
 8008fb0:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8008fb4:	f7ff ffe8 	bl	8008f88 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8008fb8:	b003      	add	sp, #12
 8008fba:	bd30      	pop	{r4, r5, pc}
 8008fbc:	4628      	mov	r0, r5
 8008fbe:	491c      	ldr	r1, [pc, #112]	; (8009030 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8008fc0:	f10d 0203 	add.w	r2, sp, #3
 8008fc4:	f009 f9f5 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008fc8:	b908      	cbnz	r0, 8008fce <RemoteConfigParams::callbackFunction(char const*)+0x36>
 8008fca:	2202      	movs	r2, #2
 8008fcc:	e7ef      	b.n	8008fae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008fce:	4628      	mov	r0, r5
 8008fd0:	4918      	ldr	r1, [pc, #96]	; (8009034 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8008fd2:	f10d 0203 	add.w	r2, sp, #3
 8008fd6:	f009 f9ec 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008fda:	b908      	cbnz	r0, 8008fe0 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 8008fdc:	2204      	movs	r2, #4
 8008fde:	e7e6      	b.n	8008fae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008fe0:	4628      	mov	r0, r5
 8008fe2:	4915      	ldr	r1, [pc, #84]	; (8009038 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8008fe4:	f10d 0203 	add.w	r2, sp, #3
 8008fe8:	f009 f9e3 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008fec:	b908      	cbnz	r0, 8008ff2 <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 8008fee:	2208      	movs	r2, #8
 8008ff0:	e7dd      	b.n	8008fae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8008ff2:	4628      	mov	r0, r5
 8008ff4:	4911      	ldr	r1, [pc, #68]	; (800903c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8008ff6:	f10d 0203 	add.w	r2, sp, #3
 8008ffa:	f009 f9da 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8008ffe:	b908      	cbnz	r0, 8009004 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 8009000:	2220      	movs	r2, #32
 8009002:	e7d4      	b.n	8008fae <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009004:	2317      	movs	r3, #23
 8009006:	4628      	mov	r0, r5
 8009008:	9301      	str	r3, [sp, #4]
 800900a:	490d      	ldr	r1, [pc, #52]	; (8009040 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800900c:	ab01      	add	r3, sp, #4
 800900e:	f104 020c 	add.w	r2, r4, #12
 8009012:	f009 f8cb 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009016:	2800      	cmp	r0, #0
 8009018:	d1ce      	bne.n	8008fb8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800901a:	9b01      	ldr	r3, [sp, #4]
 800901c:	4423      	add	r3, r4
 800901e:	7318      	strb	r0, [r3, #12]
 8009020:	6863      	ldr	r3, [r4, #4]
 8009022:	f043 0310 	orr.w	r3, r3, #16
 8009026:	6063      	str	r3, [r4, #4]
 8009028:	e7c6      	b.n	8008fb8 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800902a:	bf00      	nop
 800902c:	08016159 	stmdaeq	r1, {r0, r3, r4, r6, r8, sp, lr}
 8009030:	0801617a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sp, lr}
 8009034:	08016188 	stmdaeq	r1, {r3, r7, r8, sp, lr}
 8009038:	08016196 	stmdaeq	r1, {r1, r2, r4, r7, r8, sp, lr}
 800903c:	080161a4 	stmdaeq	r1, {r2, r5, r7, r8, sp, lr}
 8009040:	0801616d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sp, lr}

08009044 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009044:	f7ff bfa8 	b.w	8008f98 <RemoteConfigParams::callbackFunction(char const*)>

08009048 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009048:	b570      	push	{r4, r5, r6, lr}
 800904a:	4604      	mov	r4, r0
 800904c:	4615      	mov	r5, r2
 800904e:	461e      	mov	r6, r3
 8009050:	b086      	sub	sp, #24
 8009052:	3004      	adds	r0, #4
 8009054:	2900      	cmp	r1, #0
 8009056:	d040      	beq.n	80090da <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 8009058:	2220      	movs	r2, #32
 800905a:	f009 ffba 	bl	8012fd2 <memmove>
 800905e:	4633      	mov	r3, r6
 8009060:	462a      	mov	r2, r5
 8009062:	4937      	ldr	r1, [pc, #220]	; (8009140 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009064:	a803      	add	r0, sp, #12
 8009066:	f008 ffc9 	bl	8011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800906a:	6862      	ldr	r2, [r4, #4]
 800906c:	4935      	ldr	r1, [pc, #212]	; (8009144 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800906e:	f002 0201 	and.w	r2, r2, #1
 8009072:	a803      	add	r0, sp, #12
 8009074:	f7ff ff2c 	bl	8008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009078:	6862      	ldr	r2, [r4, #4]
 800907a:	4933      	ldr	r1, [pc, #204]	; (8009148 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800907c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009080:	a803      	add	r0, sp, #12
 8009082:	f7ff ff25 	bl	8008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009086:	6862      	ldr	r2, [r4, #4]
 8009088:	4930      	ldr	r1, [pc, #192]	; (800914c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800908a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800908e:	a803      	add	r0, sp, #12
 8009090:	f7ff ff1e 	bl	8008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009094:	6862      	ldr	r2, [r4, #4]
 8009096:	492e      	ldr	r1, [pc, #184]	; (8009150 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009098:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800909c:	a803      	add	r0, sp, #12
 800909e:	f7ff ff17 	bl	8008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80090a2:	6862      	ldr	r2, [r4, #4]
 80090a4:	492b      	ldr	r1, [pc, #172]	; (8009154 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 80090a6:	f3c2 1240 	ubfx	r2, r2, #5, #1
 80090aa:	a803      	add	r0, sp, #12
 80090ac:	f7ff ff10 	bl	8008ed0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80090b0:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 80090b4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80090b8:	42a9      	cmp	r1, r5
 80090ba:	d223      	bcs.n	8009104 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 80090bc:	9803      	ldr	r0, [sp, #12]
 80090be:	1a6d      	subs	r5, r5, r1
 80090c0:	4408      	add	r0, r1
 80090c2:	6861      	ldr	r1, [r4, #4]
 80090c4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80090c8:	06c9      	lsls	r1, r1, #27
 80090ca:	f104 030c 	add.w	r3, r4, #12
 80090ce:	d40b      	bmi.n	80090e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 80090d0:	b95a      	cbnz	r2, 80090ea <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 80090d2:	9300      	str	r3, [sp, #0]
 80090d4:	4a20      	ldr	r2, [pc, #128]	; (8009158 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 80090d6:	4b21      	ldr	r3, [pc, #132]	; (800915c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 80090d8:	e00a      	b.n	80090f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 80090da:	6823      	ldr	r3, [r4, #0]
 80090dc:	4601      	mov	r1, r0
 80090de:	681a      	ldr	r2, [r3, #0]
 80090e0:	4618      	mov	r0, r3
 80090e2:	68d2      	ldr	r2, [r2, #12]
 80090e4:	4790      	blx	r2
 80090e6:	e7ba      	b.n	800905e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 80090e8:	b32a      	cbz	r2, 8009136 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 80090ea:	9300      	str	r3, [sp, #0]
 80090ec:	4a1c      	ldr	r2, [pc, #112]	; (8009160 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 80090ee:	4b1b      	ldr	r3, [pc, #108]	; (800915c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 80090f0:	4629      	mov	r1, r5
 80090f2:	f00a fadd 	bl	80136b0 <snprintf>
 80090f6:	4285      	cmp	r5, r0
 80090f8:	bfa2      	ittt	ge
 80090fa:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80090fe:	18c0      	addge	r0, r0, r3
 8009100:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009104:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009108:	b17b      	cbz	r3, 800912a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 800910a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800910e:	9b03      	ldr	r3, [sp, #12]
 8009110:	4413      	add	r3, r2
 8009112:	227d      	movs	r2, #125	; 0x7d
 8009114:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009118:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800911c:	9903      	ldr	r1, [sp, #12]
 800911e:	54ca      	strb	r2, [r1, r3]
 8009120:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009124:	3301      	adds	r3, #1
 8009126:	f8ad 3012 	strh.w	r3, [sp, #18]
 800912a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800912e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009130:	601a      	str	r2, [r3, #0]
 8009132:	b006      	add	sp, #24
 8009134:	bd70      	pop	{r4, r5, r6, pc}
 8009136:	9300      	str	r3, [sp, #0]
 8009138:	4a0a      	ldr	r2, [pc, #40]	; (8009164 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800913a:	4b08      	ldr	r3, [pc, #32]	; (800915c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800913c:	e7d8      	b.n	80090f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800913e:	bf00      	nop
 8009140:	08016161 	stmdaeq	r1, {r0, r5, r6, r8, sp, lr}
 8009144:	08016159 	stmdaeq	r1, {r0, r3, r4, r6, r8, sp, lr}
 8009148:	0801617a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sp, lr}
 800914c:	08016188 	stmdaeq	r1, {r3, r7, r8, sp, lr}
 8009150:	08016196 	stmdaeq	r1, {r1, r2, r4, r7, r8, sp, lr}
 8009154:	080161a4 	stmdaeq	r1, {r2, r5, r7, r8, sp, lr}
 8009158:	08015d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, ip, lr}
 800915c:	0801616d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sp, lr}
 8009160:	08015d79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, fp, ip, lr}
 8009164:	08015d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, ip, lr}

08009168 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009168:	b513      	push	{r0, r1, r4, lr}
 800916a:	6804      	ldr	r4, [r0, #0]
 800916c:	b914      	cbnz	r4, 8009174 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800916e:	601c      	str	r4, [r3, #0]
 8009170:	b002      	add	sp, #8
 8009172:	bd10      	pop	{r4, pc}
 8009174:	9300      	str	r3, [sp, #0]
 8009176:	4613      	mov	r3, r2
 8009178:	460a      	mov	r2, r1
 800917a:	2100      	movs	r1, #0
 800917c:	f7ff ff64 	bl	8009048 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009180:	e7f6      	b.n	8009170 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009182 <RemoteConfigParams::Set(RemoteConfig*)>:
 8009182:	b538      	push	{r3, r4, r5, lr}
 8009184:	460c      	mov	r4, r1
 8009186:	4605      	mov	r5, r0
 8009188:	6841      	ldr	r1, [r0, #4]
 800918a:	4620      	mov	r0, r4
 800918c:	f001 0101 	and.w	r1, r1, #1
 8009190:	f7ff fc50 	bl	8008a34 <RemoteConfig::SetDisable(bool)>
 8009194:	686b      	ldr	r3, [r5, #4]
 8009196:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800919a:	7362      	strb	r2, [r4, #13]
 800919c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 80091a0:	73a2      	strb	r2, [r4, #14]
 80091a2:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 80091a6:	73e2      	strb	r2, [r4, #15]
 80091a8:	f3c3 1240 	ubfx	r2, r3, #5, #1
 80091ac:	06db      	lsls	r3, r3, #27
 80091ae:	7422      	strb	r2, [r4, #16]
 80091b0:	d506      	bpl.n	80091c0 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 80091b2:	4620      	mov	r0, r4
 80091b4:	f105 010c 	add.w	r1, r5, #12
 80091b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80091bc:	f7ff bc5a 	b.w	8008a74 <RemoteConfig::SetDisplayName(char const*)>
 80091c0:	bd38      	pop	{r3, r4, r5, pc}

080091c2 <RemoteConfigParams::Dump()>:
 80091c2:	4770      	bx	lr

080091c4 <RemoteConfig::HandleReboot()>:
 80091c4:	b538      	push	{r3, r4, r5, lr}
 80091c6:	7b83      	ldrb	r3, [r0, #14]
 80091c8:	b32b      	cbz	r3, 8009216 <RemoteConfig::HandleReboot()+0x52>
 80091ca:	2301      	movs	r3, #1
 80091cc:	4c12      	ldr	r4, [pc, #72]	; (8009218 <RemoteConfig::HandleReboot()+0x54>)
 80091ce:	7443      	strb	r3, [r0, #17]
 80091d0:	2100      	movs	r1, #0
 80091d2:	6820      	ldr	r0, [r4, #0]
 80091d4:	f009 f9f4 	bl	80125c0 <Display::SetSleep(bool)>
 80091d8:	4d10      	ldr	r5, [pc, #64]	; (800921c <RemoteConfig::HandleReboot()+0x58>)
 80091da:	6828      	ldr	r0, [r5, #0]
 80091dc:	f005 f87c 	bl	800e2d8 <SpiFlashStore::Flash()>
 80091e0:	2800      	cmp	r0, #0
 80091e2:	d1fa      	bne.n	80091da <RemoteConfig::HandleReboot()+0x16>
 80091e4:	4b0e      	ldr	r3, [pc, #56]	; (8009220 <RemoteConfig::HandleReboot()+0x5c>)
 80091e6:	6818      	ldr	r0, [r3, #0]
 80091e8:	f006 ffa6 	bl	8010138 <Network::Shutdown()>
 80091ec:	480d      	ldr	r0, [pc, #52]	; (8009224 <RemoteConfig::HandleReboot()+0x60>)
 80091ee:	f00a fa37 	bl	8013660 <printf>
 80091f2:	6823      	ldr	r3, [r4, #0]
 80091f4:	6858      	ldr	r0, [r3, #4]
 80091f6:	b110      	cbz	r0, 80091fe <RemoteConfig::HandleReboot()+0x3a>
 80091f8:	6803      	ldr	r3, [r0, #0]
 80091fa:	68db      	ldr	r3, [r3, #12]
 80091fc:	4798      	blx	r3
 80091fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009202:	6820      	ldr	r0, [r4, #0]
 8009204:	f244 0240 	movw	r2, #16448	; 0x4040
 8009208:	4907      	ldr	r1, [pc, #28]	; (8009228 <RemoteConfig::HandleReboot()+0x64>)
 800920a:	f009 f996 	bl	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800920e:	4b07      	ldr	r3, [pc, #28]	; (800922c <RemoteConfig::HandleReboot()+0x68>)
 8009210:	6818      	ldr	r0, [r3, #0]
 8009212:	f009 fd89 	bl	8012d28 <Hardware::Reboot()>
 8009216:	bd38      	pop	{r3, r4, r5, pc}
 8009218:	20012498 	mulcs	r1, r8, r4
 800921c:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc
 8009220:	20011ec0 	andcs	r1, r1, r0, asr #29
 8009224:	08015d8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, ip, lr}
 8009228:	08015d9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, fp, ip, lr}
 800922c:	2001258c 	andcs	r2, r1, ip, lsl #11

08009230 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009230:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009234:	2000      	movs	r0, #0
 8009236:	4d12      	ldr	r5, [pc, #72]	; (8009280 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009238:	f10d 0c04 	add.w	ip, sp, #4
 800923c:	6814      	ldr	r4, [r2, #0]
 800923e:	7d2b      	ldrb	r3, [r5, #20]
 8009240:	692e      	ldr	r6, [r5, #16]
 8009242:	42a3      	cmp	r3, r4
 8009244:	bf34      	ite	cc
 8009246:	4664      	movcc	r4, ip
 8009248:	4614      	movcs	r4, r2
 800924a:	9301      	str	r3, [sp, #4]
 800924c:	6827      	ldr	r7, [r4, #0]
 800924e:	460c      	mov	r4, r1
 8009250:	3e01      	subs	r6, #1
 8009252:	440f      	add	r7, r1
 8009254:	42bc      	cmp	r4, r7
 8009256:	d011      	beq.n	800927c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009258:	f894 8000 	ldrb.w	r8, [r4]
 800925c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009260:	45f0      	cmp	r8, lr
 8009262:	d009      	beq.n	8009278 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 8009264:	3001      	adds	r0, #1
 8009266:	2805      	cmp	r0, #5
 8009268:	f105 051c 	add.w	r5, r5, #28
 800926c:	d1e6      	bne.n	800923c <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800926e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009272:	b002      	add	sp, #8
 8009274:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009278:	3401      	adds	r4, #1
 800927a:	e7eb      	b.n	8009254 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800927c:	6013      	str	r3, [r2, #0]
 800927e:	e7f8      	b.n	8009272 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 8009280:	08015de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, lr}

08009284 <strcmp>:
 8009284:	1e43      	subs	r3, r0, #1
 8009286:	3901      	subs	r1, #1
 8009288:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800928c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009290:	4290      	cmp	r0, r2
 8009292:	d102      	bne.n	800929a <strcmp+0x16>
 8009294:	2800      	cmp	r0, #0
 8009296:	d1f7      	bne.n	8009288 <strcmp+0x4>
 8009298:	4770      	bx	lr
 800929a:	1a80      	subs	r0, r0, r2
 800929c:	4770      	bx	lr

0800929e <strcasecmp>:
 800929e:	b530      	push	{r4, r5, lr}
 80092a0:	1e42      	subs	r2, r0, #1
 80092a2:	3901      	subs	r1, #1
 80092a4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80092a8:	4604      	mov	r4, r0
 80092aa:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 80092ae:	2b19      	cmp	r3, #25
 80092b0:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80092b4:	bf98      	it	ls
 80092b6:	f100 0420 	addls.w	r4, r0, #32
 80092ba:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 80092be:	2d19      	cmp	r5, #25
 80092c0:	bf98      	it	ls
 80092c2:	3320      	addls	r3, #32
 80092c4:	42a3      	cmp	r3, r4
 80092c6:	d102      	bne.n	80092ce <strcasecmp+0x30>
 80092c8:	2800      	cmp	r0, #0
 80092ca:	d1eb      	bne.n	80092a4 <strcasecmp+0x6>
 80092cc:	bd30      	pop	{r4, r5, pc}
 80092ce:	1ae0      	subs	r0, r4, r3
 80092d0:	e7fc      	b.n	80092cc <strcasecmp+0x2e>
	...

080092d4 <PropertiesConfig::EnableJSON(bool)>:
 80092d4:	4a04      	ldr	r2, [pc, #16]	; (80092e8 <PropertiesConfig::EnableJSON(bool)+0x14>)
 80092d6:	7813      	ldrb	r3, [r2, #0]
 80092d8:	b118      	cbz	r0, 80092e2 <PropertiesConfig::EnableJSON(bool)+0xe>
 80092da:	f043 0301 	orr.w	r3, r3, #1
 80092de:	7013      	strb	r3, [r2, #0]
 80092e0:	4770      	bx	lr
 80092e2:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 80092e6:	e7fa      	b.n	80092de <PropertiesConfig::EnableJSON(bool)+0xa>
 80092e8:	20012494 	mulcs	r1, r4, r4

080092ec <HttpDaemon::HttpDaemon()>:
 80092ec:	4a0a      	ldr	r2, [pc, #40]	; (8009318 <HttpDaemon::HttpDaemon()+0x2c>)
 80092ee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80092f2:	6002      	str	r2, [r0, #0]
 80092f4:	2200      	movs	r2, #0
 80092f6:	f44f 7c02 	mov.w	ip, #520	; 0x208
 80092fa:	e9c0 1204 	strd	r1, r2, [r0, #16]
 80092fe:	2102      	movs	r1, #2
 8009300:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009304:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009308:	60c2      	str	r2, [r0, #12]
 800930a:	8402      	strh	r2, [r0, #32]
 800930c:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 8009310:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 8009314:	4770      	bx	lr
 8009316:	bf00      	nop
 8009318:	080160d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sp, lr}

0800931c <HttpDaemon::Start()>:
 800931c:	4b04      	ldr	r3, [pc, #16]	; (8009330 <HttpDaemon::Start()+0x14>)
 800931e:	b510      	push	{r4, lr}
 8009320:	2150      	movs	r1, #80	; 0x50
 8009322:	4604      	mov	r4, r0
 8009324:	6818      	ldr	r0, [r3, #0]
 8009326:	f007 f9f9 	bl	801071c <Network::TcpBegin(unsigned short)>
 800932a:	6120      	str	r0, [r4, #16]
 800932c:	bd10      	pop	{r4, pc}
 800932e:	bf00      	nop
 8009330:	20011ec0 	andcs	r1, r1, r0, asr #29

08009334 <HttpDaemon::ParseMethod(char*)>:
 8009334:	b538      	push	{r3, r4, r5, lr}
 8009336:	4604      	mov	r4, r0
 8009338:	4608      	mov	r0, r1
 800933a:	491b      	ldr	r1, [pc, #108]	; (80093a8 <HttpDaemon::ParseMethod(char*)+0x74>)
 800933c:	f00a f9e8 	bl	8013710 <strtok>
 8009340:	4605      	mov	r5, r0
 8009342:	b370      	cbz	r0, 80093a2 <HttpDaemon::ParseMethod(char*)+0x6e>
 8009344:	4919      	ldr	r1, [pc, #100]	; (80093ac <HttpDaemon::ParseMethod(char*)+0x78>)
 8009346:	f7ff ff9d 	bl	8009284 <strcmp>
 800934a:	b940      	cbnz	r0, 800935e <HttpDaemon::ParseMethod(char*)+0x2a>
 800934c:	61e0      	str	r0, [r4, #28]
 800934e:	2000      	movs	r0, #0
 8009350:	4915      	ldr	r1, [pc, #84]	; (80093a8 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009352:	f00a f9dd 	bl	8013710 <strtok>
 8009356:	b950      	cbnz	r0, 800936e <HttpDaemon::ParseMethod(char*)+0x3a>
 8009358:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800935c:	bd38      	pop	{r3, r4, r5, pc}
 800935e:	4628      	mov	r0, r5
 8009360:	4913      	ldr	r1, [pc, #76]	; (80093b0 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8009362:	f7ff ff8f 	bl	8009284 <strcmp>
 8009366:	b9e0      	cbnz	r0, 80093a2 <HttpDaemon::ParseMethod(char*)+0x6e>
 8009368:	2301      	movs	r3, #1
 800936a:	61e3      	str	r3, [r4, #28]
 800936c:	e7ef      	b.n	800934e <HttpDaemon::ParseMethod(char*)+0x1a>
 800936e:	6060      	str	r0, [r4, #4]
 8009370:	4910      	ldr	r1, [pc, #64]	; (80093b4 <HttpDaemon::ParseMethod(char*)+0x80>)
 8009372:	2000      	movs	r0, #0
 8009374:	f00a f9cc 	bl	8013710 <strtok>
 8009378:	2800      	cmp	r0, #0
 800937a:	d0ed      	beq.n	8009358 <HttpDaemon::ParseMethod(char*)+0x24>
 800937c:	490e      	ldr	r1, [pc, #56]	; (80093b8 <HttpDaemon::ParseMethod(char*)+0x84>)
 800937e:	f7ff ff81 	bl	8009284 <strcmp>
 8009382:	2800      	cmp	r0, #0
 8009384:	d1e8      	bne.n	8009358 <HttpDaemon::ParseMethod(char*)+0x24>
 8009386:	490d      	ldr	r1, [pc, #52]	; (80093bc <HttpDaemon::ParseMethod(char*)+0x88>)
 8009388:	f00a f9c2 	bl	8013710 <strtok>
 800938c:	2800      	cmp	r0, #0
 800938e:	d0e3      	beq.n	8009358 <HttpDaemon::ParseMethod(char*)+0x24>
 8009390:	490b      	ldr	r1, [pc, #44]	; (80093c0 <HttpDaemon::ParseMethod(char*)+0x8c>)
 8009392:	f7ff ff77 	bl	8009284 <strcmp>
 8009396:	2800      	cmp	r0, #0
 8009398:	f240 10f9 	movw	r0, #505	; 0x1f9
 800939c:	bf08      	it	eq
 800939e:	20c8      	moveq	r0, #200	; 0xc8
 80093a0:	e7dc      	b.n	800935c <HttpDaemon::ParseMethod(char*)+0x28>
 80093a2:	f240 10f5 	movw	r0, #501	; 0x1f5
 80093a6:	e7d9      	b.n	800935c <HttpDaemon::ParseMethod(char*)+0x28>
 80093a8:	080180ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, pc}
 80093ac:	08015e70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, ip, lr}
 80093b0:	08015e74 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, fp, ip, lr}
 80093b4:	08015ede 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, fp, ip, lr}
 80093b8:	08015e79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sl, fp, ip, lr}
 80093bc:	08015e7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, fp, ip, lr}
 80093c0:	08015e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip, lr}

080093c4 <HttpDaemon::ParseHeaderField(char*)>:
 80093c4:	b538      	push	{r3, r4, r5, lr}
 80093c6:	4605      	mov	r5, r0
 80093c8:	4608      	mov	r0, r1
 80093ca:	491d      	ldr	r1, [pc, #116]	; (8009440 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 80093cc:	f00a f9a0 	bl	8013710 <strtok>
 80093d0:	4604      	mov	r4, r0
 80093d2:	b910      	cbnz	r0, 80093da <HttpDaemon::ParseHeaderField(char*)+0x16>
 80093d4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80093d8:	bd38      	pop	{r3, r4, r5, pc}
 80093da:	491a      	ldr	r1, [pc, #104]	; (8009444 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 80093dc:	f7ff ff5f 	bl	800929e <strcasecmp>
 80093e0:	b970      	cbnz	r0, 8009400 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 80093e2:	4919      	ldr	r1, [pc, #100]	; (8009448 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 80093e4:	f00a f994 	bl	8013710 <strtok>
 80093e8:	2800      	cmp	r0, #0
 80093ea:	d0f3      	beq.n	80093d4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 80093ec:	4917      	ldr	r1, [pc, #92]	; (800944c <HttpDaemon::ParseHeaderField(char*)+0x88>)
 80093ee:	f7ff ff49 	bl	8009284 <strcmp>
 80093f2:	b108      	cbz	r0, 80093f8 <HttpDaemon::ParseHeaderField(char*)+0x34>
 80093f4:	20c8      	movs	r0, #200	; 0xc8
 80093f6:	e7ef      	b.n	80093d8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 80093f8:	2301      	movs	r3, #1
 80093fa:	f885 3020 	strb.w	r3, [r5, #32]
 80093fe:	e7f9      	b.n	80093f4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009400:	4620      	mov	r0, r4
 8009402:	4913      	ldr	r1, [pc, #76]	; (8009450 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009404:	f7ff ff4b 	bl	800929e <strcasecmp>
 8009408:	4604      	mov	r4, r0
 800940a:	2800      	cmp	r0, #0
 800940c:	d1f2      	bne.n	80093f4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800940e:	4911      	ldr	r1, [pc, #68]	; (8009454 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009410:	f00a f97e 	bl	8013710 <strtok>
 8009414:	2800      	cmp	r0, #0
 8009416:	d0dd      	beq.n	80093d4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009418:	1e42      	subs	r2, r0, #1
 800941a:	4623      	mov	r3, r4
 800941c:	200a      	movs	r0, #10
 800941e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009422:	b151      	cbz	r1, 800943a <HttpDaemon::ParseHeaderField(char*)+0x76>
 8009424:	3930      	subs	r1, #48	; 0x30
 8009426:	2909      	cmp	r1, #9
 8009428:	d8d4      	bhi.n	80093d4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800942a:	fb00 1303 	mla	r3, r0, r3, r1
 800942e:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 8009432:	d9f4      	bls.n	800941e <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009434:	f240 109d 	movw	r0, #413	; 0x19d
 8009438:	e7ce      	b.n	80093d8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800943a:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800943e:	e7d9      	b.n	80093f4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009440:	08015e85 	stmdaeq	r1, {r0, r2, r7, r9, sl, fp, ip, lr}
 8009444:	08015e87 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, fp, ip, lr}
 8009448:	08015e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, lr}
 800944c:	08015e97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, fp, ip, lr}
 8009450:	08015ea8 	stmdaeq	r1, {r3, r5, r7, r9, sl, fp, ip, lr}
 8009454:	080180ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, pc}

08009458 <HttpDaemon::ParseRequest()>:
 8009458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800945a:	2400      	movs	r4, #0
 800945c:	4605      	mov	r5, r0
 800945e:	4622      	mov	r2, r4
 8009460:	4626      	mov	r6, r4
 8009462:	68c1      	ldr	r1, [r0, #12]
 8009464:	f880 4020 	strb.w	r4, [r0, #32]
 8009468:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800946c:	8aab      	ldrh	r3, [r5, #20]
 800946e:	42a3      	cmp	r3, r4
 8009470:	d923      	bls.n	80094ba <HttpDaemon::ParseRequest()+0x62>
 8009472:	68eb      	ldr	r3, [r5, #12]
 8009474:	5d18      	ldrb	r0, [r3, r4]
 8009476:	280a      	cmp	r0, #10
 8009478:	d10e      	bne.n	8009498 <HttpDaemon::ParseRequest()+0x40>
 800947a:	4423      	add	r3, r4
 800947c:	f803 6c01 	strb.w	r6, [r3, #-1]
 8009480:	1c57      	adds	r7, r2, #1
 8009482:	b962      	cbnz	r2, 800949e <HttpDaemon::ParseRequest()+0x46>
 8009484:	4628      	mov	r0, r5
 8009486:	f7ff ff55 	bl	8009334 <HttpDaemon::ParseMethod(char*)>
 800948a:	28c8      	cmp	r0, #200	; 0xc8
 800948c:	d116      	bne.n	80094bc <HttpDaemon::ParseRequest()+0x64>
 800948e:	463a      	mov	r2, r7
 8009490:	68e9      	ldr	r1, [r5, #12]
 8009492:	3401      	adds	r4, #1
 8009494:	b2a4      	uxth	r4, r4
 8009496:	4421      	add	r1, r4
 8009498:	3401      	adds	r4, #1
 800949a:	b2a4      	uxth	r4, r4
 800949c:	e7e6      	b.n	800946c <HttpDaemon::ParseRequest()+0x14>
 800949e:	7808      	ldrb	r0, [r1, #0]
 80094a0:	b968      	cbnz	r0, 80094be <HttpDaemon::ParseRequest()+0x66>
 80094a2:	696b      	ldr	r3, [r5, #20]
 80094a4:	3b01      	subs	r3, #1
 80094a6:	1b1b      	subs	r3, r3, r4
 80094a8:	b29b      	uxth	r3, r3
 80094aa:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 80094ae:	b123      	cbz	r3, 80094ba <HttpDaemon::ParseRequest()+0x62>
 80094b0:	68ea      	ldr	r2, [r5, #12]
 80094b2:	3401      	adds	r4, #1
 80094b4:	4414      	add	r4, r2
 80094b6:	60ac      	str	r4, [r5, #8]
 80094b8:	54e0      	strb	r0, [r4, r3]
 80094ba:	20c8      	movs	r0, #200	; 0xc8
 80094bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80094be:	4628      	mov	r0, r5
 80094c0:	f7ff ff80 	bl	80093c4 <HttpDaemon::ParseHeaderField(char*)>
 80094c4:	e7e1      	b.n	800948a <HttpDaemon::ParseRequest()+0x32>
	...

080094c8 <HttpDaemon::HandleGetTxt()>:
 80094c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80094cc:	6847      	ldr	r7, [r0, #4]
 80094ce:	4604      	mov	r4, r0
 80094d0:	1dbd      	adds	r5, r7, #6
 80094d2:	462b      	mov	r3, r5
 80094d4:	4618      	mov	r0, r3
 80094d6:	7802      	ldrb	r2, [r0, #0]
 80094d8:	3301      	adds	r3, #1
 80094da:	2a00      	cmp	r2, #0
 80094dc:	d1fa      	bne.n	80094d4 <HttpDaemon::HandleGetTxt()+0xc>
 80094de:	1b40      	subs	r0, r0, r5
 80094e0:	2804      	cmp	r0, #4
 80094e2:	d925      	bls.n	8009530 <HttpDaemon::HandleGetTxt()+0x68>
 80094e4:	3804      	subs	r0, #4
 80094e6:	4915      	ldr	r1, [pc, #84]	; (800953c <HttpDaemon::HandleGetTxt()+0x74>)
 80094e8:	4428      	add	r0, r5
 80094ea:	f7ff fecb 	bl	8009284 <strcmp>
 80094ee:	b9f8      	cbnz	r0, 8009530 <HttpDaemon::HandleGetTxt()+0x68>
 80094f0:	4b13      	ldr	r3, [pc, #76]	; (8009540 <HttpDaemon::HandleGetTxt()+0x78>)
 80094f2:	2001      	movs	r0, #1
 80094f4:	f893 8000 	ldrb.w	r8, [r3]
 80094f8:	f7ff feec 	bl	80092d4 <PropertiesConfig::EnableJSON(bool)>
 80094fc:	4b11      	ldr	r3, [pc, #68]	; (8009544 <HttpDaemon::HandleGetTxt()+0x7c>)
 80094fe:	f240 529b 	movw	r2, #1435	; 0x59b
 8009502:	4629      	mov	r1, r5
 8009504:	6818      	ldr	r0, [r3, #0]
 8009506:	f7ff facd 	bl	8008aa4 <RemoteConfig::HandleGet(void*, unsigned int)>
 800950a:	4606      	mov	r6, r0
 800950c:	f008 0801 	and.w	r8, r8, #1
 8009510:	4640      	mov	r0, r8
 8009512:	f7ff fedf 	bl	80092d4 <PropertiesConfig::EnableJSON(bool)>
 8009516:	b15e      	cbz	r6, 8009530 <HttpDaemon::HandleGetTxt()+0x68>
 8009518:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800951c:	3606      	adds	r6, #6
 800951e:	3422      	adds	r4, #34	; 0x22
 8009520:	443e      	add	r6, r7
 8009522:	42b5      	cmp	r5, r6
 8009524:	d008      	beq.n	8009538 <HttpDaemon::HandleGetTxt()+0x70>
 8009526:	f815 3b01 	ldrb.w	r3, [r5], #1
 800952a:	f804 3b01 	strb.w	r3, [r4], #1
 800952e:	e7f8      	b.n	8009522 <HttpDaemon::HandleGetTxt()+0x5a>
 8009530:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009534:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009538:	20c8      	movs	r0, #200	; 0xc8
 800953a:	e7fb      	b.n	8009534 <HttpDaemon::HandleGetTxt()+0x6c>
 800953c:	08015dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, lr}
 8009540:	20012494 	mulcs	r1, r4, r4
 8009544:	20000128 	andcs	r0, r0, r8, lsr #2

08009548 <HttpDaemon::HandleGet()>:
 8009548:	b570      	push	{r4, r5, r6, lr}
 800954a:	6845      	ldr	r5, [r0, #4]
 800954c:	4604      	mov	r4, r0
 800954e:	4943      	ldr	r1, [pc, #268]	; (800965c <HttpDaemon::HandleGet()+0x114>)
 8009550:	4628      	mov	r0, r5
 8009552:	f7ff fe97 	bl	8009284 <strcmp>
 8009556:	b120      	cbz	r0, 8009562 <HttpDaemon::HandleGet()+0x1a>
 8009558:	4628      	mov	r0, r5
 800955a:	4941      	ldr	r1, [pc, #260]	; (8009660 <HttpDaemon::HandleGet()+0x118>)
 800955c:	f7ff fe92 	bl	8009284 <strcmp>
 8009560:	b960      	cbnz	r0, 800957c <HttpDaemon::HandleGet()+0x34>
 8009562:	4621      	mov	r1, r4
 8009564:	4b3f      	ldr	r3, [pc, #252]	; (8009664 <HttpDaemon::HandleGet()+0x11c>)
 8009566:	4840      	ldr	r0, [pc, #256]	; (8009668 <HttpDaemon::HandleGet()+0x120>)
 8009568:	f841 3b22 	str.w	r3, [r1], #34
 800956c:	f000 fa70 	bl	8009a50 <get_file_content(char const*, char*)>
 8009570:	2800      	cmp	r0, #0
 8009572:	dd1e      	ble.n	80095b2 <HttpDaemon::HandleGet()+0x6a>
 8009574:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009578:	20c8      	movs	r0, #200	; 0xc8
 800957a:	bd70      	pop	{r4, r5, r6, pc}
 800957c:	4628      	mov	r0, r5
 800957e:	493b      	ldr	r1, [pc, #236]	; (800966c <HttpDaemon::HandleGet()+0x124>)
 8009580:	f7ff fe80 	bl	8009284 <strcmp>
 8009584:	b928      	cbnz	r0, 8009592 <HttpDaemon::HandleGet()+0x4a>
 8009586:	4621      	mov	r1, r4
 8009588:	4b39      	ldr	r3, [pc, #228]	; (8009670 <HttpDaemon::HandleGet()+0x128>)
 800958a:	483a      	ldr	r0, [pc, #232]	; (8009674 <HttpDaemon::HandleGet()+0x12c>)
 800958c:	f841 3b22 	str.w	r3, [r1], #34
 8009590:	e7ec      	b.n	800956c <HttpDaemon::HandleGet()+0x24>
 8009592:	4628      	mov	r0, r5
 8009594:	4938      	ldr	r1, [pc, #224]	; (8009678 <HttpDaemon::HandleGet()+0x130>)
 8009596:	f7ff fe75 	bl	8009284 <strcmp>
 800959a:	b168      	cbz	r0, 80095b8 <HttpDaemon::HandleGet()+0x70>
 800959c:	4a37      	ldr	r2, [pc, #220]	; (800967c <HttpDaemon::HandleGet()+0x134>)
 800959e:	1e6b      	subs	r3, r5, #1
 80095a0:	1d6e      	adds	r6, r5, #5
 80095a2:	42b3      	cmp	r3, r6
 80095a4:	d00e      	beq.n	80095c4 <HttpDaemon::HandleGet()+0x7c>
 80095a6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80095aa:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80095ae:	4288      	cmp	r0, r1
 80095b0:	d0f7      	beq.n	80095a2 <HttpDaemon::HandleGet()+0x5a>
 80095b2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 80095b6:	e7e0      	b.n	800957a <HttpDaemon::HandleGet()+0x32>
 80095b8:	4621      	mov	r1, r4
 80095ba:	4b31      	ldr	r3, [pc, #196]	; (8009680 <HttpDaemon::HandleGet()+0x138>)
 80095bc:	4831      	ldr	r0, [pc, #196]	; (8009684 <HttpDaemon::HandleGet()+0x13c>)
 80095be:	f841 3b22 	str.w	r3, [r1], #34
 80095c2:	e7d3      	b.n	800956c <HttpDaemon::HandleGet()+0x24>
 80095c4:	4b30      	ldr	r3, [pc, #192]	; (8009688 <HttpDaemon::HandleGet()+0x140>)
 80095c6:	3506      	adds	r5, #6
 80095c8:	4628      	mov	r0, r5
 80095ca:	4930      	ldr	r1, [pc, #192]	; (800968c <HttpDaemon::HandleGet()+0x144>)
 80095cc:	6023      	str	r3, [r4, #0]
 80095ce:	f7ff fe59 	bl	8009284 <strcmp>
 80095d2:	b930      	cbnz	r0, 80095e2 <HttpDaemon::HandleGet()+0x9a>
 80095d4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 80095d8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 80095dc:	f000 f9c0 	bl	8009960 <remoteconfig::json_get_list(char*, unsigned short)>
 80095e0:	e7c6      	b.n	8009570 <HttpDaemon::HandleGet()+0x28>
 80095e2:	4628      	mov	r0, r5
 80095e4:	492a      	ldr	r1, [pc, #168]	; (8009690 <HttpDaemon::HandleGet()+0x148>)
 80095e6:	f7ff fe4d 	bl	8009284 <strcmp>
 80095ea:	b930      	cbnz	r0, 80095fa <HttpDaemon::HandleGet()+0xb2>
 80095ec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 80095f0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 80095f4:	f000 f9e8 	bl	80099c8 <remoteconfig::json_get_version(char*, unsigned short)>
 80095f8:	e7ba      	b.n	8009570 <HttpDaemon::HandleGet()+0x28>
 80095fa:	4628      	mov	r0, r5
 80095fc:	4925      	ldr	r1, [pc, #148]	; (8009694 <HttpDaemon::HandleGet()+0x14c>)
 80095fe:	f7ff fe41 	bl	8009284 <strcmp>
 8009602:	b950      	cbnz	r0, 800961a <HttpDaemon::HandleGet()+0xd2>
 8009604:	4b24      	ldr	r3, [pc, #144]	; (8009698 <HttpDaemon::HandleGet()+0x150>)
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	7bdb      	ldrb	r3, [r3, #15]
 800960a:	b31b      	cbz	r3, 8009654 <HttpDaemon::HandleGet()+0x10c>
 800960c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009610:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009614:	f000 f9f4 	bl	8009a00 <remoteconfig::json_get_uptime(char*, unsigned short)>
 8009618:	e7aa      	b.n	8009570 <HttpDaemon::HandleGet()+0x28>
 800961a:	4628      	mov	r0, r5
 800961c:	491f      	ldr	r1, [pc, #124]	; (800969c <HttpDaemon::HandleGet()+0x154>)
 800961e:	f7ff fe31 	bl	8009284 <strcmp>
 8009622:	b930      	cbnz	r0, 8009632 <HttpDaemon::HandleGet()+0xea>
 8009624:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009628:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800962c:	f000 f9f8 	bl	8009a20 <remoteconfig::json_get_display(char*, unsigned short)>
 8009630:	e79e      	b.n	8009570 <HttpDaemon::HandleGet()+0x28>
 8009632:	4628      	mov	r0, r5
 8009634:	491a      	ldr	r1, [pc, #104]	; (80096a0 <HttpDaemon::HandleGet()+0x158>)
 8009636:	f7ff fe25 	bl	8009284 <strcmp>
 800963a:	b930      	cbnz	r0, 800964a <HttpDaemon::HandleGet()+0x102>
 800963c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009640:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009644:	f000 f9fc 	bl	8009a40 <remoteconfig::json_get_directory(char*, unsigned short)>
 8009648:	e792      	b.n	8009570 <HttpDaemon::HandleGet()+0x28>
 800964a:	4620      	mov	r0, r4
 800964c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009650:	f7ff bf3a 	b.w	80094c8 <HttpDaemon::HandleGetTxt()>
 8009654:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009658:	e78f      	b.n	800957a <HttpDaemon::HandleGet()+0x32>
 800965a:	bf00      	nop
 800965c:	08015ede 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, fp, ip, lr}
 8009660:	08015eb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r9, sl, fp, ip, lr}
 8009664:	080160d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sp, lr}
 8009668:	08015eb8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, fp, ip, lr}
 800966c:	08015ec3 	stmdaeq	r1, {r0, r1, r6, r7, r9, sl, fp, ip, lr}
 8009670:	080160f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sp, lr}
 8009674:	08015ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, ip, lr}
 8009678:	08015ecf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, fp, ip, lr}
 800967c:	08015ed9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, fp, ip, lr}
 8009680:	08016119 	stmdaeq	r1, {r0, r3, r4, r8, sp, lr}
 8009684:	08015ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, ip, lr}
 8009688:	08016139 	stmdaeq	r1, {r0, r3, r4, r5, r8, sp, lr}
 800968c:	08015ee0 	stmdaeq	r1, {r5, r6, r7, r9, sl, fp, ip, lr}
 8009690:	08015ee5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, fp, ip, lr}
 8009694:	08015eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, lr}
 8009698:	20000128 	andcs	r0, r0, r8, lsr #2
 800969c:	08015ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, ip, lr}
 80096a0:	08015efc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, lr}

080096a4 <HttpDaemon::HandlePost(bool)>:
 80096a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80096a6:	4604      	mov	r4, r0
 80096a8:	2900      	cmp	r1, #0
 80096aa:	f040 8088 	bne.w	80097be <HttpDaemon::HandlePost(bool)+0x11a>
 80096ae:	f890 3020 	ldrb.w	r3, [r0, #32]
 80096b2:	2b00      	cmp	r3, #0
 80096b4:	d055      	beq.n	8009762 <HttpDaemon::HandlePost(bool)+0xbe>
 80096b6:	6845      	ldr	r5, [r0, #4]
 80096b8:	4944      	ldr	r1, [pc, #272]	; (80097cc <HttpDaemon::HandlePost(bool)+0x128>)
 80096ba:	4628      	mov	r0, r5
 80096bc:	f7ff fde2 	bl	8009284 <strcmp>
 80096c0:	2800      	cmp	r0, #0
 80096c2:	bf0c      	ite	eq
 80096c4:	2301      	moveq	r3, #1
 80096c6:	2300      	movne	r3, #0
 80096c8:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 80096cc:	d04d      	beq.n	800976a <HttpDaemon::HandlePost(bool)+0xc6>
 80096ce:	4628      	mov	r0, r5
 80096d0:	493f      	ldr	r1, [pc, #252]	; (80097d0 <HttpDaemon::HandlePost(bool)+0x12c>)
 80096d2:	f7ff fdd7 	bl	8009284 <strcmp>
 80096d6:	2800      	cmp	r0, #0
 80096d8:	d047      	beq.n	800976a <HttpDaemon::HandlePost(bool)+0xc6>
 80096da:	f44f 70ca 	mov.w	r0, #404	; 0x194
 80096de:	e042      	b.n	8009766 <HttpDaemon::HandlePost(bool)+0xc2>
 80096e0:	493c      	ldr	r1, [pc, #240]	; (80097d4 <HttpDaemon::HandlePost(bool)+0x130>)
 80096e2:	68a0      	ldr	r0, [r4, #8]
 80096e4:	f10d 0207 	add.w	r2, sp, #7
 80096e8:	f008 fe63 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80096ec:	b9a8      	cbnz	r0, 800971a <HttpDaemon::HandlePost(bool)+0x76>
 80096ee:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80096f2:	4b39      	ldr	r3, [pc, #228]	; (80097d8 <HttpDaemon::HandlePost(bool)+0x134>)
 80096f4:	fab1 f181 	clz	r1, r1
 80096f8:	6818      	ldr	r0, [r3, #0]
 80096fa:	0949      	lsrs	r1, r1, #5
 80096fc:	f008 ff60 	bl	80125c0 <Display::SetSleep(bool)>
 8009700:	4620      	mov	r0, r4
 8009702:	4b36      	ldr	r3, [pc, #216]	; (80097dc <HttpDaemon::HandlePost(bool)+0x138>)
 8009704:	f240 519f 	movw	r1, #1439	; 0x59f
 8009708:	4a35      	ldr	r2, [pc, #212]	; (80097e0 <HttpDaemon::HandlePost(bool)+0x13c>)
 800970a:	f840 3b22 	str.w	r3, [r0], #34
 800970e:	f009 ffcf 	bl	80136b0 <snprintf>
 8009712:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009716:	20c8      	movs	r0, #200	; 0xc8
 8009718:	e025      	b.n	8009766 <HttpDaemon::HandlePost(bool)+0xc2>
 800971a:	4932      	ldr	r1, [pc, #200]	; (80097e4 <HttpDaemon::HandlePost(bool)+0x140>)
 800971c:	68a0      	ldr	r0, [r4, #8]
 800971e:	f10d 0207 	add.w	r2, sp, #7
 8009722:	f008 fe46 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009726:	b9e0      	cbnz	r0, 8009762 <HttpDaemon::HandlePost(bool)+0xbe>
 8009728:	4b2f      	ldr	r3, [pc, #188]	; (80097e8 <HttpDaemon::HandlePost(bool)+0x144>)
 800972a:	6818      	ldr	r0, [r3, #0]
 800972c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009730:	b11b      	cbz	r3, 800973a <HttpDaemon::HandlePost(bool)+0x96>
 8009732:	2104      	movs	r1, #4
 8009734:	f009 fa56 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 8009738:	e7e2      	b.n	8009700 <HttpDaemon::HandlePost(bool)+0x5c>
 800973a:	2102      	movs	r1, #2
 800973c:	e7fa      	b.n	8009734 <HttpDaemon::HandlePost(bool)+0x90>
 800973e:	4b2b      	ldr	r3, [pc, #172]	; (80097ec <HttpDaemon::HandlePost(bool)+0x148>)
 8009740:	2001      	movs	r0, #1
 8009742:	781d      	ldrb	r5, [r3, #0]
 8009744:	f7ff fdc6 	bl	80092d4 <PropertiesConfig::EnableJSON(bool)>
 8009748:	4b29      	ldr	r3, [pc, #164]	; (80097f0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800974a:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800974e:	6818      	ldr	r0, [r3, #0]
 8009750:	68a1      	ldr	r1, [r4, #8]
 8009752:	f005 0501 	and.w	r5, r5, #1
 8009756:	f7ff fa71 	bl	8008c3c <RemoteConfig::HandleSet(void*, unsigned int)>
 800975a:	4628      	mov	r0, r5
 800975c:	f7ff fdba 	bl	80092d4 <PropertiesConfig::EnableJSON(bool)>
 8009760:	e7ce      	b.n	8009700 <HttpDaemon::HandlePost(bool)+0x5c>
 8009762:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009766:	b003      	add	sp, #12
 8009768:	bd30      	pop	{r4, r5, pc}
 800976a:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800976e:	6962      	ldr	r2, [r4, #20]
 8009770:	429a      	cmp	r2, r3
 8009772:	dbd0      	blt.n	8009716 <HttpDaemon::HandlePost(bool)+0x72>
 8009774:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 8009778:	2b00      	cmp	r3, #0
 800977a:	d0cc      	beq.n	8009716 <HttpDaemon::HandlePost(bool)+0x72>
 800977c:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 8009780:	2b00      	cmp	r3, #0
 8009782:	d0dc      	beq.n	800973e <HttpDaemon::HandlePost(bool)+0x9a>
 8009784:	2201      	movs	r2, #1
 8009786:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800978a:	68a0      	ldr	r0, [r4, #8]
 800978c:	f008 fb88 	bl	8011ea0 <properties::convert_json_file(char*, unsigned short, bool)>
 8009790:	2800      	cmp	r0, #0
 8009792:	dde6      	ble.n	8009762 <HttpDaemon::HandlePost(bool)+0xbe>
 8009794:	4917      	ldr	r1, [pc, #92]	; (80097f4 <HttpDaemon::HandlePost(bool)+0x150>)
 8009796:	68a0      	ldr	r0, [r4, #8]
 8009798:	f10d 0207 	add.w	r2, sp, #7
 800979c:	f008 fe09 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80097a0:	2800      	cmp	r0, #0
 80097a2:	d19d      	bne.n	80096e0 <HttpDaemon::HandlePost(bool)+0x3c>
 80097a4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80097a8:	2b00      	cmp	r3, #0
 80097aa:	d0a9      	beq.n	8009700 <HttpDaemon::HandlePost(bool)+0x5c>
 80097ac:	4b10      	ldr	r3, [pc, #64]	; (80097f0 <HttpDaemon::HandlePost(bool)+0x14c>)
 80097ae:	681b      	ldr	r3, [r3, #0]
 80097b0:	7b9b      	ldrb	r3, [r3, #14]
 80097b2:	2b00      	cmp	r3, #0
 80097b4:	d0d5      	beq.n	8009762 <HttpDaemon::HandlePost(bool)+0xbe>
 80097b6:	4b10      	ldr	r3, [pc, #64]	; (80097f8 <HttpDaemon::HandlePost(bool)+0x154>)
 80097b8:	6818      	ldr	r0, [r3, #0]
 80097ba:	f009 fab5 	bl	8012d28 <Hardware::Reboot()>
 80097be:	68c3      	ldr	r3, [r0, #12]
 80097c0:	6083      	str	r3, [r0, #8]
 80097c2:	6943      	ldr	r3, [r0, #20]
 80097c4:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 80097c8:	e7d8      	b.n	800977c <HttpDaemon::HandlePost(bool)+0xd8>
 80097ca:	bf00      	nop
 80097cc:	08015f06 	stmdaeq	r1, {r1, r2, r8, r9, sl, fp, ip, lr}
 80097d0:	08015ea2 	stmdaeq	r1, {r1, r5, r7, r9, sl, fp, ip, lr}
 80097d4:	08015ef4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, fp, ip, lr}
 80097d8:	20012498 	mulcs	r1, r8, r4
 80097dc:	080160d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sp, lr}
 80097e0:	08015f23 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, fp, ip, lr}
 80097e4:	08015f1a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sl, fp, ip, lr}
 80097e8:	20012588 	andcs	r2, r1, r8, lsl #11
 80097ec:	20012494 	mulcs	r1, r4, r4
 80097f0:	20000128 	andcs	r0, r0, r8, lsr #2
 80097f4:	08015f13 	stmdaeq	r1, {r0, r1, r4, r8, r9, sl, fp, ip, lr}
 80097f8:	2001258c 	andcs	r2, r1, ip, lsl #11

080097fc <HttpDaemon::Run()>:
 80097fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097fe:	4e4a      	ldr	r6, [pc, #296]	; (8009928 <HttpDaemon::Run()+0x12c>)
 8009800:	4604      	mov	r4, r0
 8009802:	6901      	ldr	r1, [r0, #16]
 8009804:	f100 020c 	add.w	r2, r0, #12
 8009808:	b085      	sub	sp, #20
 800980a:	6830      	ldr	r0, [r6, #0]
 800980c:	f006 ff89 	bl	8010722 <Network::TcpRead(int, unsigned char const**)>
 8009810:	6160      	str	r0, [r4, #20]
 8009812:	2800      	cmp	r0, #0
 8009814:	d061      	beq.n	80098da <HttpDaemon::Run()+0xde>
 8009816:	69a3      	ldr	r3, [r4, #24]
 8009818:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800981c:	d15f      	bne.n	80098de <HttpDaemon::Run()+0xe2>
 800981e:	4620      	mov	r0, r4
 8009820:	f7ff fe1a 	bl	8009458 <HttpDaemon::ParseRequest()>
 8009824:	28c8      	cmp	r0, #200	; 0xc8
 8009826:	61a0      	str	r0, [r4, #24]
 8009828:	d106      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 800982a:	69e3      	ldr	r3, [r4, #28]
 800982c:	2b00      	cmp	r3, #0
 800982e:	d147      	bne.n	80098c0 <HttpDaemon::Run()+0xc4>
 8009830:	4620      	mov	r0, r4
 8009832:	f7ff fe89 	bl	8009548 <HttpDaemon::HandleGet()>
 8009836:	61a0      	str	r0, [r4, #24]
 8009838:	69a3      	ldr	r3, [r4, #24]
 800983a:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800983e:	2bc8      	cmp	r3, #200	; 0xc8
 8009840:	d06f      	beq.n	8009922 <HttpDaemon::Run()+0x126>
 8009842:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 8009846:	d062      	beq.n	800990e <HttpDaemon::Run()+0x112>
 8009848:	dc52      	bgt.n	80098f0 <HttpDaemon::Run()+0xf4>
 800984a:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800984e:	d060      	beq.n	8009912 <HttpDaemon::Run()+0x116>
 8009850:	f240 129d 	movw	r2, #413	; 0x19d
 8009854:	4293      	cmp	r3, r2
 8009856:	d05e      	beq.n	8009916 <HttpDaemon::Run()+0x11a>
 8009858:	4d34      	ldr	r5, [pc, #208]	; (800992c <HttpDaemon::Run()+0x130>)
 800985a:	4a35      	ldr	r2, [pc, #212]	; (8009930 <HttpDaemon::Run()+0x134>)
 800985c:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8009860:	bf18      	it	ne
 8009862:	4615      	movne	r5, r2
 8009864:	4a33      	ldr	r2, [pc, #204]	; (8009934 <HttpDaemon::Run()+0x138>)
 8009866:	f240 519f 	movw	r1, #1439	; 0x59f
 800986a:	6022      	str	r2, [r4, #0]
 800986c:	4638      	mov	r0, r7
 800986e:	e9cd 5500 	strd	r5, r5, [sp]
 8009872:	4a31      	ldr	r2, [pc, #196]	; (8009938 <HttpDaemon::Run()+0x13c>)
 8009874:	f009 ff1c 	bl	80136b0 <snprintf>
 8009878:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800987c:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 8009880:	f240 519f 	movw	r1, #1439	; 0x59f
 8009884:	9303      	str	r3, [sp, #12]
 8009886:	6823      	ldr	r3, [r4, #0]
 8009888:	4a2c      	ldr	r2, [pc, #176]	; (800993c <HttpDaemon::Run()+0x140>)
 800988a:	9302      	str	r3, [sp, #8]
 800988c:	4b2c      	ldr	r3, [pc, #176]	; (8009940 <HttpDaemon::Run()+0x144>)
 800988e:	68e0      	ldr	r0, [r4, #12]
 8009890:	e9cd 5300 	strd	r5, r3, [sp]
 8009894:	69a3      	ldr	r3, [r4, #24]
 8009896:	f009 ff0b 	bl	80136b0 <snprintf>
 800989a:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800989e:	b283      	uxth	r3, r0
 80098a0:	6830      	ldr	r0, [r6, #0]
 80098a2:	f006 ff42 	bl	801072a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 80098a6:	463a      	mov	r2, r7
 80098a8:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 80098ac:	6921      	ldr	r1, [r4, #16]
 80098ae:	6830      	ldr	r0, [r6, #0]
 80098b0:	f006 ff3b 	bl	801072a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 80098b4:	f44f 7202 	mov.w	r2, #520	; 0x208
 80098b8:	2302      	movs	r3, #2
 80098ba:	e9c4 2306 	strd	r2, r3, [r4, #24]
 80098be:	e00c      	b.n	80098da <HttpDaemon::Run()+0xde>
 80098c0:	2b01      	cmp	r3, #1
 80098c2:	d1b9      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 80098c4:	2100      	movs	r1, #0
 80098c6:	4620      	mov	r0, r4
 80098c8:	f7ff feec 	bl	80096a4 <HttpDaemon::HandlePost(bool)>
 80098cc:	28c8      	cmp	r0, #200	; 0xc8
 80098ce:	61a0      	str	r0, [r4, #24]
 80098d0:	d1b2      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 80098d2:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 80098d6:	2b00      	cmp	r3, #0
 80098d8:	d1ae      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 80098da:	b005      	add	sp, #20
 80098dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80098de:	2bc8      	cmp	r3, #200	; 0xc8
 80098e0:	d1aa      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 80098e2:	69e1      	ldr	r1, [r4, #28]
 80098e4:	2901      	cmp	r1, #1
 80098e6:	d1a7      	bne.n	8009838 <HttpDaemon::Run()+0x3c>
 80098e8:	4620      	mov	r0, r4
 80098ea:	f7ff fedb 	bl	80096a4 <HttpDaemon::HandlePost(bool)>
 80098ee:	e7a2      	b.n	8009836 <HttpDaemon::Run()+0x3a>
 80098f0:	f240 12f5 	movw	r2, #501	; 0x1f5
 80098f4:	4293      	cmp	r3, r2
 80098f6:	d010      	beq.n	800991a <HttpDaemon::Run()+0x11e>
 80098f8:	f240 12f9 	movw	r2, #505	; 0x1f9
 80098fc:	4293      	cmp	r3, r2
 80098fe:	d00e      	beq.n	800991e <HttpDaemon::Run()+0x122>
 8009900:	4d10      	ldr	r5, [pc, #64]	; (8009944 <HttpDaemon::Run()+0x148>)
 8009902:	4a0b      	ldr	r2, [pc, #44]	; (8009930 <HttpDaemon::Run()+0x134>)
 8009904:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8009908:	bf18      	it	ne
 800990a:	4615      	movne	r5, r2
 800990c:	e7aa      	b.n	8009864 <HttpDaemon::Run()+0x68>
 800990e:	4d0e      	ldr	r5, [pc, #56]	; (8009948 <HttpDaemon::Run()+0x14c>)
 8009910:	e7a8      	b.n	8009864 <HttpDaemon::Run()+0x68>
 8009912:	4d0e      	ldr	r5, [pc, #56]	; (800994c <HttpDaemon::Run()+0x150>)
 8009914:	e7a6      	b.n	8009864 <HttpDaemon::Run()+0x68>
 8009916:	4d0e      	ldr	r5, [pc, #56]	; (8009950 <HttpDaemon::Run()+0x154>)
 8009918:	e7a4      	b.n	8009864 <HttpDaemon::Run()+0x68>
 800991a:	4d0e      	ldr	r5, [pc, #56]	; (8009954 <HttpDaemon::Run()+0x158>)
 800991c:	e7a2      	b.n	8009864 <HttpDaemon::Run()+0x68>
 800991e:	4d0e      	ldr	r5, [pc, #56]	; (8009958 <HttpDaemon::Run()+0x15c>)
 8009920:	e7a0      	b.n	8009864 <HttpDaemon::Run()+0x68>
 8009922:	4d0e      	ldr	r5, [pc, #56]	; (800995c <HttpDaemon::Run()+0x160>)
 8009924:	e7aa      	b.n	800987c <HttpDaemon::Run()+0x80>
 8009926:	bf00      	nop
 8009928:	20011ec0 	andcs	r1, r1, r0, asr #29
 800992c:	08015fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8009930:	08015ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8009934:	080160d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sp, lr}
 8009938:	08016017 	stmdaeq	r1, {r0, r1, r2, r4, sp, lr}
 800993c:	08016072 	stmdaeq	r1, {r1, r4, r5, r6, sp, lr}
 8009940:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}
 8009944:	08015ffe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 8009948:	08015fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, lr}
 800994c:	08015f98 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, fp, ip, lr}
 8009950:	08015f7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}
 8009954:	08015fcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip, lr}
 8009958:	08015fb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, lr}
 800995c:	08016014 	stmdaeq	r1, {r2, r4, sp, lr}

08009960 <remoteconfig::json_get_list(char*, unsigned short)>:
 8009960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009964:	4b14      	ldr	r3, [pc, #80]	; (80099b8 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 8009966:	f8df 8054 	ldr.w	r8, [pc, #84]	; 80099bc <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800996a:	681b      	ldr	r3, [r3, #0]
 800996c:	b088      	sub	sp, #32
 800996e:	4605      	mov	r5, r0
 8009970:	f8d8 0000 	ldr.w	r0, [r8]
 8009974:	691c      	ldr	r4, [r3, #16]
 8009976:	460e      	mov	r6, r1
 8009978:	f7ff f844 	bl	8008a04 <RemoteConfig::GetStringNode() const>
 800997c:	4607      	mov	r7, r0
 800997e:	f8d8 0000 	ldr.w	r0, [r8]
 8009982:	f7ff f84b 	bl	8008a1c <RemoteConfig::GetStringOutput() const>
 8009986:	4b0e      	ldr	r3, [pc, #56]	; (80099c0 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 8009988:	4631      	mov	r1, r6
 800998a:	7a1a      	ldrb	r2, [r3, #8]
 800998c:	3309      	adds	r3, #9
 800998e:	9303      	str	r3, [sp, #12]
 8009990:	0e23      	lsrs	r3, r4, #24
 8009992:	9302      	str	r3, [sp, #8]
 8009994:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8009998:	9301      	str	r3, [sp, #4]
 800999a:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800999e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80099a2:	9300      	str	r3, [sp, #0]
 80099a4:	4628      	mov	r0, r5
 80099a6:	4a07      	ldr	r2, [pc, #28]	; (80099c4 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 80099a8:	9704      	str	r7, [sp, #16]
 80099aa:	b2e3      	uxtb	r3, r4
 80099ac:	f009 fe80 	bl	80136b0 <snprintf>
 80099b0:	b280      	uxth	r0, r0
 80099b2:	b008      	add	sp, #32
 80099b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80099b8:	20011ec0 	andcs	r1, r1, r0, asr #29
 80099bc:	20000128 	andcs	r0, r0, r8, lsr #2
 80099c0:	20000104 	andcs	r0, r0, r4, lsl #2
 80099c4:	080161b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sp, lr}

080099c8 <remoteconfig::json_get_version(char*, unsigned short)>:
 80099c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80099ca:	2208      	movs	r2, #8
 80099cc:	4b09      	ldr	r3, [pc, #36]	; (80099f4 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 80099ce:	9204      	str	r2, [sp, #16]
 80099d0:	f1a3 020b 	sub.w	r2, r3, #11
 80099d4:	9203      	str	r2, [sp, #12]
 80099d6:	220b      	movs	r2, #11
 80099d8:	9202      	str	r2, [sp, #8]
 80099da:	4a07      	ldr	r2, [pc, #28]	; (80099f8 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 80099dc:	9305      	str	r3, [sp, #20]
 80099de:	3b0e      	subs	r3, #14
 80099e0:	9201      	str	r2, [sp, #4]
 80099e2:	9300      	str	r3, [sp, #0]
 80099e4:	4a05      	ldr	r2, [pc, #20]	; (80099fc <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 80099e6:	2303      	movs	r3, #3
 80099e8:	f009 fe62 	bl	80136b0 <snprintf>
 80099ec:	b280      	uxth	r0, r0
 80099ee:	b007      	add	sp, #28
 80099f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80099f4:	2001253a 	andcs	r2, r1, sl, lsr r5
 80099f8:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}
 80099fc:	08016212 	stmdaeq	r1, {r1, r4, r9, sp, lr}

08009a00 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 8009a00:	b508      	push	{r3, lr}
 8009a02:	4b05      	ldr	r3, [pc, #20]	; (8009a18 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 8009a04:	681a      	ldr	r2, [r3, #0]
 8009a06:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009a0a:	fbb2 f3f3 	udiv	r3, r2, r3
 8009a0e:	4a03      	ldr	r2, [pc, #12]	; (8009a1c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 8009a10:	f009 fe4e 	bl	80136b0 <snprintf>
 8009a14:	b280      	uxth	r0, r0
 8009a16:	bd08      	pop	{r3, pc}
 8009a18:	200125a8 	andcs	r2, r1, r8, lsr #11
 8009a1c:	08016258 	stmdaeq	r1, {r3, r4, r6, r9, sp, lr}

08009a20 <remoteconfig::json_get_display(char*, unsigned short)>:
 8009a20:	b508      	push	{r3, lr}
 8009a22:	4b05      	ldr	r3, [pc, #20]	; (8009a38 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 8009a24:	4a05      	ldr	r2, [pc, #20]	; (8009a3c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	7a1b      	ldrb	r3, [r3, #8]
 8009a2a:	f083 0301 	eor.w	r3, r3, #1
 8009a2e:	f009 fe3f 	bl	80136b0 <snprintf>
 8009a32:	b280      	uxth	r0, r0
 8009a34:	bd08      	pop	{r3, pc}
 8009a36:	bf00      	nop
 8009a38:	20012498 	mulcs	r1, r8, r4
 8009a3c:	08016267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sp, lr}

08009a40 <remoteconfig::json_get_directory(char*, unsigned short)>:
 8009a40:	b508      	push	{r3, lr}
 8009a42:	4a02      	ldr	r2, [pc, #8]	; (8009a4c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 8009a44:	f009 fe34 	bl	80136b0 <snprintf>
 8009a48:	b280      	uxth	r0, r0
 8009a4a:	bd08      	pop	{r3, pc}
 8009a4c:	08016276 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sp, lr}

08009a50 <get_file_content(char const*, char*)>:
 8009a50:	2300      	movs	r3, #0
 8009a52:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a54:	4a10      	ldr	r2, [pc, #64]	; (8009a98 <get_file_content(char const*, char*)+0x48>)
 8009a56:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 8009a5a:	1e46      	subs	r6, r0, #1
 8009a5c:	3c01      	subs	r4, #1
 8009a5e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 8009a62:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8009a66:	42bd      	cmp	r5, r7
 8009a68:	d10f      	bne.n	8009a8a <get_file_content(char const*, char*)+0x3a>
 8009a6a:	2d00      	cmp	r5, #0
 8009a6c:	d1f7      	bne.n	8009a5e <get_file_content(char const*, char*)+0xe>
 8009a6e:	4608      	mov	r0, r1
 8009a70:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009a74:	685b      	ldr	r3, [r3, #4]
 8009a76:	3b01      	subs	r3, #1
 8009a78:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 8009a7c:	f800 2b01 	strb.w	r2, [r0], #1
 8009a80:	2a00      	cmp	r2, #0
 8009a82:	d1f9      	bne.n	8009a78 <get_file_content(char const*, char*)+0x28>
 8009a84:	1a40      	subs	r0, r0, r1
 8009a86:	3801      	subs	r0, #1
 8009a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a8a:	3301      	adds	r3, #1
 8009a8c:	2b03      	cmp	r3, #3
 8009a8e:	d1e2      	bne.n	8009a56 <get_file_content(char const*, char*)+0x6>
 8009a90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009a94:	e7f8      	b.n	8009a88 <get_file_content(char const*, char*)+0x38>
 8009a96:	bf00      	nop
 8009a98:	080165b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, sl, sp, lr}

08009a9c <e131::universe_to_multicast_ip(unsigned short)>:
 8009a9c:	b513      	push	{r0, r1, r4, lr}
 8009a9e:	4604      	mov	r4, r0
 8009aa0:	a901      	add	r1, sp, #4
 8009aa2:	4806      	ldr	r0, [pc, #24]	; (8009abc <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 8009aa4:	f009 f99c 	bl	8012de0 <inet_aton>
 8009aa8:	9801      	ldr	r0, [sp, #4]
 8009aaa:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 8009aae:	0224      	lsls	r4, r4, #8
 8009ab0:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8009ab4:	4320      	orrs	r0, r4
 8009ab6:	b002      	add	sp, #8
 8009ab8:	bd10      	pop	{r4, pc}
 8009aba:	bf00      	nop
 8009abc:	08016afa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, fp, sp, lr}

08009ac0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 8009ac0:	f240 6304 	movw	r3, #1540	; 0x604
 8009ac4:	fb03 0101 	mla	r1, r3, r1, r0
 8009ac8:	2300      	movs	r3, #0
 8009aca:	b510      	push	{r4, lr}
 8009acc:	4293      	cmp	r3, r2
 8009ace:	d00a      	beq.n	8009ae6 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 8009ad0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009ad4:	3301      	adds	r3, #1
 8009ad6:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 8009ada:	42a0      	cmp	r0, r4
 8009adc:	bf38      	it	cc
 8009ade:	4620      	movcc	r0, r4
 8009ae0:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 8009ae4:	e7f2      	b.n	8009acc <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 8009ae6:	bd10      	pop	{r4, pc}

08009ae8 <memset.constprop.0.isra.0>:
 8009ae8:	2300      	movs	r3, #0
 8009aea:	4401      	add	r1, r0
 8009aec:	4288      	cmp	r0, r1
 8009aee:	d002      	beq.n	8009af6 <memset.constprop.0.isra.0+0xe>
 8009af0:	f800 3b01 	strb.w	r3, [r0], #1
 8009af4:	e7fa      	b.n	8009aec <memset.constprop.0.isra.0+0x4>
 8009af6:	4770      	bx	lr

08009af8 <memcpy.isra.0>:
 8009af8:	3801      	subs	r0, #1
 8009afa:	440a      	add	r2, r1
 8009afc:	4291      	cmp	r1, r2
 8009afe:	d004      	beq.n	8009b0a <memcpy.isra.0+0x12>
 8009b00:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009b04:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009b08:	e7f8      	b.n	8009afc <memcpy.isra.0+0x4>
 8009b0a:	4770      	bx	lr

08009b0c <lightset::Data::Get()>:
 8009b0c:	4b03      	ldr	r3, [pc, #12]	; (8009b1c <lightset::Data::Get()+0x10>)
 8009b0e:	4804      	ldr	r0, [pc, #16]	; (8009b20 <lightset::Data::Get()+0x14>)
 8009b10:	681a      	ldr	r2, [r3, #0]
 8009b12:	07d2      	lsls	r2, r2, #31
 8009b14:	bf5c      	itt	pl
 8009b16:	2201      	movpl	r2, #1
 8009b18:	601a      	strpl	r2, [r3, #0]
 8009b1a:	4770      	bx	lr
 8009b1c:	2000012c 	andcs	r0, r0, ip, lsr #2
 8009b20:	20000130 	andcs	r0, r0, r0, lsr r1

08009b24 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8009b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b28:	4615      	mov	r5, r2
 8009b2a:	460f      	mov	r7, r1
 8009b2c:	4604      	mov	r4, r0
 8009b2e:	f7ff ffed 	bl	8009b0c <lightset::Data::Get()>
 8009b32:	4606      	mov	r6, r0
 8009b34:	f240 6004 	movw	r0, #1540	; 0x604
 8009b38:	4344      	muls	r4, r0
 8009b3a:	eb06 0804 	add.w	r8, r6, r4
 8009b3e:	462a      	mov	r2, r5
 8009b40:	4639      	mov	r1, r7
 8009b42:	4640      	mov	r0, r8
 8009b44:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009b48:	f7ff ffd6 	bl	8009af8 <memcpy.isra.0>
 8009b4c:	462a      	mov	r2, r5
 8009b4e:	4639      	mov	r1, r7
 8009b50:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 8009b54:	1930      	adds	r0, r6, r4
 8009b56:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009b5a:	f7ff bfcd 	b.w	8009af8 <memcpy.isra.0>

08009b5e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8009b5e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b62:	4680      	mov	r8, r0
 8009b64:	f240 6404 	movw	r4, #1540	; 0x604
 8009b68:	4615      	mov	r5, r2
 8009b6a:	460f      	mov	r7, r1
 8009b6c:	4699      	mov	r9, r3
 8009b6e:	f7ff ffcd 	bl	8009b0c <lightset::Data::Get()>
 8009b72:	fb04 f408 	mul.w	r4, r4, r8
 8009b76:	eb00 0a04 	add.w	sl, r0, r4
 8009b7a:	4606      	mov	r6, r0
 8009b7c:	462a      	mov	r2, r5
 8009b7e:	4639      	mov	r1, r7
 8009b80:	4650      	mov	r0, sl
 8009b82:	f7ff ffb9 	bl	8009af8 <memcpy.isra.0>
 8009b86:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 8009b8a:	f1b9 0f00 	cmp.w	r9, #0
 8009b8e:	d106      	bne.n	8009b9e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 8009b90:	462a      	mov	r2, r5
 8009b92:	4641      	mov	r1, r8
 8009b94:	4630      	mov	r0, r6
 8009b96:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b9a:	f7ff bf91 	b.w	8009ac0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009b9e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009ba2:	462a      	mov	r2, r5
 8009ba4:	4639      	mov	r1, r7
 8009ba6:	1930      	adds	r0, r6, r4
 8009ba8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009bac:	f7ff bfa4 	b.w	8009af8 <memcpy.isra.0>

08009bb0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8009bb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009bb4:	4616      	mov	r6, r2
 8009bb6:	4699      	mov	r9, r3
 8009bb8:	4680      	mov	r8, r0
 8009bba:	460f      	mov	r7, r1
 8009bbc:	f7ff ffa6 	bl	8009b0c <lightset::Data::Get()>
 8009bc0:	f240 6404 	movw	r4, #1540	; 0x604
 8009bc4:	4605      	mov	r5, r0
 8009bc6:	fb04 f408 	mul.w	r4, r4, r8
 8009bca:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8009bce:	4632      	mov	r2, r6
 8009bd0:	4639      	mov	r1, r7
 8009bd2:	4428      	add	r0, r5
 8009bd4:	f7ff ff90 	bl	8009af8 <memcpy.isra.0>
 8009bd8:	192b      	adds	r3, r5, r4
 8009bda:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 8009bde:	f1b9 0f00 	cmp.w	r9, #0
 8009be2:	d106      	bne.n	8009bf2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009be4:	4632      	mov	r2, r6
 8009be6:	4641      	mov	r1, r8
 8009be8:	4628      	mov	r0, r5
 8009bea:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009bee:	f7ff bf67 	b.w	8009ac0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009bf2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009bf6:	4632      	mov	r2, r6
 8009bf8:	4639      	mov	r1, r7
 8009bfa:	1928      	adds	r0, r5, r4
 8009bfc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009c00:	f7ff bf7a 	b.w	8009af8 <memcpy.isra.0>

08009c04 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 8009c04:	f240 6304 	movw	r3, #1540	; 0x604
 8009c08:	b470      	push	{r4, r5, r6}
 8009c0a:	4605      	mov	r5, r0
 8009c0c:	4608      	mov	r0, r1
 8009c0e:	4353      	muls	r3, r2
 8009c10:	4611      	mov	r1, r2
 8009c12:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 8009c16:	18ea      	adds	r2, r5, r3
 8009c18:	6803      	ldr	r3, [r0, #0]
 8009c1a:	691e      	ldr	r6, [r3, #16]
 8009c1c:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 8009c20:	46b4      	mov	ip, r6
 8009c22:	192a      	adds	r2, r5, r4
 8009c24:	bc70      	pop	{r4, r5, r6}
 8009c26:	4760      	bx	ip

08009c28 <E131Bridge::Start()>:
 8009c28:	6943      	ldr	r3, [r0, #20]
 8009c2a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009c2c:	4604      	mov	r4, r0
 8009c2e:	b35b      	cbz	r3, 8009c88 <E131Bridge::Start()+0x60>
 8009c30:	6983      	ldr	r3, [r0, #24]
 8009c32:	b9cb      	cbnz	r3, 8009c68 <E131Bridge::Start()+0x40>
 8009c34:	a901      	add	r1, sp, #4
 8009c36:	4818      	ldr	r0, [pc, #96]	; (8009c98 <E131Bridge::Start()+0x70>)
 8009c38:	f009 f8d2 	bl	8012de0 <inet_aton>
 8009c3c:	9b01      	ldr	r3, [sp, #4]
 8009c3e:	f240 207e 	movw	r0, #638	; 0x27e
 8009c42:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8009c46:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8009c4a:	6223      	str	r3, [r4, #32]
 8009c4c:	f009 f8ae 	bl	8012dac <operator new(unsigned int)>
 8009c50:	61a0      	str	r0, [r4, #24]
 8009c52:	4620      	mov	r0, r4
 8009c54:	f000 fd8e 	bl	800a774 <E131Bridge::FillDataPacket()>
 8009c58:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009c5c:	f009 f8a6 	bl	8012dac <operator new(unsigned int)>
 8009c60:	61e0      	str	r0, [r4, #28]
 8009c62:	4620      	mov	r0, r4
 8009c64:	f000 fcdc 	bl	800a620 <E131Bridge::FillDiscoveryPacket()>
 8009c68:	2500      	movs	r5, #0
 8009c6a:	270c      	movs	r7, #12
 8009c6c:	f204 6622 	addw	r6, r4, #1570	; 0x622
 8009c70:	fb07 f305 	mul.w	r3, r7, r5
 8009c74:	5cf3      	ldrb	r3, [r6, r3]
 8009c76:	b123      	cbz	r3, 8009c82 <E131Bridge::Start()+0x5a>
 8009c78:	6960      	ldr	r0, [r4, #20]
 8009c7a:	4629      	mov	r1, r5
 8009c7c:	6803      	ldr	r3, [r0, #0]
 8009c7e:	689b      	ldr	r3, [r3, #8]
 8009c80:	4798      	blx	r3
 8009c82:	3501      	adds	r5, #1
 8009c84:	2d04      	cmp	r5, #4
 8009c86:	d1f3      	bne.n	8009c70 <E131Bridge::Start()+0x48>
 8009c88:	2102      	movs	r1, #2
 8009c8a:	4b04      	ldr	r3, [pc, #16]	; (8009c9c <E131Bridge::Start()+0x74>)
 8009c8c:	6818      	ldr	r0, [r3, #0]
 8009c8e:	b003      	add	sp, #12
 8009c90:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8009c94:	f008 bfa6 	b.w	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 8009c98:	08016afa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, fp, sp, lr}
 8009c9c:	20012588 	andcs	r2, r1, r8, lsl #11

08009ca0 <E131Bridge::Stop()>:
 8009ca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ca4:	2500      	movs	r5, #0
 8009ca6:	2301      	movs	r3, #1
 8009ca8:	4604      	mov	r4, r0
 8009caa:	f240 6804 	movw	r8, #1540	; 0x604
 8009cae:	462e      	mov	r6, r5
 8009cb0:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 8009cb4:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 8009cb8:	6860      	ldr	r0, [r4, #4]
 8009cba:	b118      	cbz	r0, 8009cc4 <E131Bridge::Stop()+0x24>
 8009cbc:	6803      	ldr	r3, [r0, #0]
 8009cbe:	4629      	mov	r1, r5
 8009cc0:	68db      	ldr	r3, [r3, #12]
 8009cc2:	4798      	blx	r3
 8009cc4:	f7ff ff22 	bl	8009b0c <lightset::Data::Get()>
 8009cc8:	2344      	movs	r3, #68	; 0x44
 8009cca:	fb08 0005 	mla	r0, r8, r5, r0
 8009cce:	436b      	muls	r3, r5
 8009cd0:	3501      	adds	r5, #1
 8009cd2:	2d04      	cmp	r5, #4
 8009cd4:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 8009cd8:	54fe      	strb	r6, [r7, r3]
 8009cda:	d1ed      	bne.n	8009cb8 <E131Bridge::Stop()+0x18>
 8009cdc:	6963      	ldr	r3, [r4, #20]
 8009cde:	b17b      	cbz	r3, 8009d00 <E131Bridge::Stop()+0x60>
 8009ce0:	2500      	movs	r5, #0
 8009ce2:	270c      	movs	r7, #12
 8009ce4:	f204 6622 	addw	r6, r4, #1570	; 0x622
 8009ce8:	fb07 f305 	mul.w	r3, r7, r5
 8009cec:	5cf3      	ldrb	r3, [r6, r3]
 8009cee:	b123      	cbz	r3, 8009cfa <E131Bridge::Stop()+0x5a>
 8009cf0:	6960      	ldr	r0, [r4, #20]
 8009cf2:	4629      	mov	r1, r5
 8009cf4:	6803      	ldr	r3, [r0, #0]
 8009cf6:	68db      	ldr	r3, [r3, #12]
 8009cf8:	4798      	blx	r3
 8009cfa:	3501      	adds	r5, #1
 8009cfc:	2d04      	cmp	r5, #4
 8009cfe:	d1f3      	bne.n	8009ce8 <E131Bridge::Stop()+0x48>
 8009d00:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009d04:	4b02      	ldr	r3, [pc, #8]	; (8009d10 <E131Bridge::Stop()+0x70>)
 8009d06:	2100      	movs	r1, #0
 8009d08:	6818      	ldr	r0, [r3, #0]
 8009d0a:	f008 bf6b 	b.w	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 8009d0e:	bf00      	nop
 8009d10:	20012588 	andcs	r2, r1, r8, lsl #11

08009d14 <E131Bridge::SetSourceName(char const*)>:
 8009d14:	223f      	movs	r2, #63	; 0x3f
 8009d16:	b510      	push	{r4, lr}
 8009d18:	f100 0334 	add.w	r3, r0, #52	; 0x34
 8009d1c:	3901      	subs	r1, #1
 8009d1e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009d22:	b92c      	cbnz	r4, 8009d30 <E131Bridge::SetSourceName(char const*)+0x1c>
 8009d24:	441a      	add	r2, r3
 8009d26:	4293      	cmp	r3, r2
 8009d28:	d006      	beq.n	8009d38 <E131Bridge::SetSourceName(char const*)+0x24>
 8009d2a:	f803 4b01 	strb.w	r4, [r3], #1
 8009d2e:	e7fa      	b.n	8009d26 <E131Bridge::SetSourceName(char const*)+0x12>
 8009d30:	3a01      	subs	r2, #1
 8009d32:	f803 4b01 	strb.w	r4, [r3], #1
 8009d36:	d1f2      	bne.n	8009d1e <E131Bridge::SetSourceName(char const*)+0xa>
 8009d38:	2300      	movs	r3, #0
 8009d3a:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 8009d3e:	bd10      	pop	{r4, pc}

08009d40 <E131Bridge::E131Bridge()>:
 8009d40:	2300      	movs	r3, #0
 8009d42:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009d46:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d48:	e9c0 2300 	strd	r2, r3, [r0]
 8009d4c:	2201      	movs	r2, #1
 8009d4e:	4604      	mov	r4, r0
 8009d50:	2764      	movs	r7, #100	; 0x64
 8009d52:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009d56:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009d5a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8009d5e:	6743      	str	r3, [r0, #116]	; 0x74
 8009d60:	4b1e      	ldr	r3, [pc, #120]	; (8009ddc <E131Bridge::E131Bridge()+0x9c>)
 8009d62:	7202      	strb	r2, [r0, #8]
 8009d64:	b093      	sub	sp, #76	; 0x4c
 8009d66:	6018      	str	r0, [r3, #0]
 8009d68:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 8009d6c:	f500 62c4 	add.w	r2, r0, #1568	; 0x620
 8009d70:	f500 66ca 	add.w	r6, r0, #1616	; 0x650
 8009d74:	4628      	mov	r0, r5
 8009d76:	2144      	movs	r1, #68	; 0x44
 8009d78:	f7ff feb6 	bl	8009ae8 <memset.constprop.0.isra.0>
 8009d7c:	4610      	mov	r0, r2
 8009d7e:	210c      	movs	r1, #12
 8009d80:	f7ff feb2 	bl	8009ae8 <memset.constprop.0.isra.0>
 8009d84:	320c      	adds	r2, #12
 8009d86:	f802 7c03 	strb.w	r7, [r2, #-3]
 8009d8a:	42b2      	cmp	r2, r6
 8009d8c:	f105 0544 	add.w	r5, r5, #68	; 0x44
 8009d90:	d1f0      	bne.n	8009d74 <E131Bridge::E131Bridge()+0x34>
 8009d92:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 8009d96:	211c      	movs	r1, #28
 8009d98:	f7ff fea6 	bl	8009ae8 <memset.constprop.0.isra.0>
 8009d9c:	2301      	movs	r3, #1
 8009d9e:	4d10      	ldr	r5, [pc, #64]	; (8009de0 <E131Bridge::E131Bridge()+0xa0>)
 8009da0:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 8009da4:	4a0f      	ldr	r2, [pc, #60]	; (8009de4 <E131Bridge::E131Bridge()+0xa4>)
 8009da6:	682b      	ldr	r3, [r5, #0]
 8009da8:	2140      	movs	r1, #64	; 0x40
 8009daa:	331c      	adds	r3, #28
 8009dac:	9200      	str	r2, [sp, #0]
 8009dae:	a802      	add	r0, sp, #8
 8009db0:	4a0d      	ldr	r2, [pc, #52]	; (8009de8 <E131Bridge::E131Bridge()+0xa8>)
 8009db2:	f009 fc7d 	bl	80136b0 <snprintf>
 8009db6:	4620      	mov	r0, r4
 8009db8:	a902      	add	r1, sp, #8
 8009dba:	f7ff ffab 	bl	8009d14 <E131Bridge::SetSourceName(char const*)>
 8009dbe:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8009dc2:	6828      	ldr	r0, [r5, #0]
 8009dc4:	f006 f9c0 	bl	8010148 <Network::Begin(unsigned short)>
 8009dc8:	4621      	mov	r1, r4
 8009dca:	4b08      	ldr	r3, [pc, #32]	; (8009dec <E131Bridge::E131Bridge()+0xac>)
 8009dcc:	f841 0b24 	str.w	r0, [r1], #36
 8009dd0:	6818      	ldr	r0, [r3, #0]
 8009dd2:	f008 ff8d 	bl	8012cf0 <Hardware::GetUuid(unsigned char*)>
 8009dd6:	4620      	mov	r0, r4
 8009dd8:	b013      	add	sp, #76	; 0x4c
 8009dda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ddc:	20001940 	andcs	r1, r0, r0, asr #18
 8009de0:	20011ec0 	andcs	r1, r1, r0, asr #29
 8009de4:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}
 8009de8:	08016b06 	stmdaeq	r1, {r1, r2, r8, r9, fp, sp, lr}
 8009dec:	2001258c 	andcs	r2, r1, ip, lsl #11

08009df0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 8009df0:	b570      	push	{r4, r5, r6, lr}
 8009df2:	4604      	mov	r4, r0
 8009df4:	2300      	movs	r3, #0
 8009df6:	2544      	movs	r5, #68	; 0x44
 8009df8:	4610      	mov	r0, r2
 8009dfa:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 8009dfe:	4299      	cmp	r1, r3
 8009e00:	d004      	beq.n	8009e0c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 8009e02:	fb05 f603 	mul.w	r6, r5, r3
 8009e06:	5b96      	ldrh	r6, [r2, r6]
 8009e08:	4286      	cmp	r6, r0
 8009e0a:	d00e      	beq.n	8009e2a <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 8009e0c:	3301      	adds	r3, #1
 8009e0e:	2b04      	cmp	r3, #4
 8009e10:	d1f5      	bne.n	8009dfe <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 8009e12:	4b06      	ldr	r3, [pc, #24]	; (8009e2c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 8009e14:	6824      	ldr	r4, [r4, #0]
 8009e16:	681d      	ldr	r5, [r3, #0]
 8009e18:	f7ff fe40 	bl	8009a9c <e131::universe_to_multicast_ip(unsigned short)>
 8009e1c:	4621      	mov	r1, r4
 8009e1e:	4602      	mov	r2, r0
 8009e20:	4628      	mov	r0, r5
 8009e22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009e26:	f006 b9a3 	b.w	8010170 <Network::LeaveGroup(int, unsigned int)>
 8009e2a:	bd70      	pop	{r4, r5, r6, pc}
 8009e2c:	20011ec0 	andcs	r1, r1, r0, asr #29

08009e30 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8009e30:	b570      	push	{r4, r5, r6, lr}
 8009e32:	4604      	mov	r4, r0
 8009e34:	461d      	mov	r5, r3
 8009e36:	b191      	cbz	r1, 8009e5e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 8009e38:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009e3c:	f200 5606 	addw	r6, r0, #1286	; 0x506
 8009e40:	b99a      	cbnz	r2, 8009e6a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 8009e42:	4b0e      	ldr	r3, [pc, #56]	; (8009e7c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 8009e44:	8035      	strh	r5, [r6, #0]
 8009e46:	4628      	mov	r0, r5
 8009e48:	6826      	ldr	r6, [r4, #0]
 8009e4a:	681c      	ldr	r4, [r3, #0]
 8009e4c:	f7ff fe26 	bl	8009a9c <e131::universe_to_multicast_ip(unsigned short)>
 8009e50:	4631      	mov	r1, r6
 8009e52:	4602      	mov	r2, r0
 8009e54:	4620      	mov	r0, r4
 8009e56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009e5a:	f006 b986 	b.w	801016a <Network::JoinGroup(int, unsigned int)>
 8009e5e:	b15a      	cbz	r2, 8009e78 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 8009e60:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009e64:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009e68:	e7ea      	b.n	8009e40 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009e6a:	42aa      	cmp	r2, r5
 8009e6c:	d004      	beq.n	8009e78 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 8009e6e:	2104      	movs	r1, #4
 8009e70:	4620      	mov	r0, r4
 8009e72:	f7ff ffbd 	bl	8009df0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009e76:	e7e4      	b.n	8009e42 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 8009e78:	bd70      	pop	{r4, r5, r6, pc}
 8009e7a:	bf00      	nop
 8009e7c:	20011ec0 	andcs	r1, r1, r0, asr #29

08009e80 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8009e80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e84:	4604      	mov	r4, r0
 8009e86:	460d      	mov	r5, r1
 8009e88:	461e      	mov	r6, r3
 8009e8a:	bb02      	cbnz	r2, 8009ece <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 8009e8c:	2903      	cmp	r1, #3
 8009e8e:	d843      	bhi.n	8009f18 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009e90:	230c      	movs	r3, #12
 8009e92:	fb03 0301 	mla	r3, r3, r1, r0
 8009e96:	f893 2622 	ldrb.w	r2, [r3, #1570]	; 0x622
 8009e9a:	b12a      	cbz	r2, 8009ea8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 8009e9c:	f8b3 3620 	ldrh.w	r3, [r3, #1568]	; 0x620
 8009ea0:	42b3      	cmp	r3, r6
 8009ea2:	d109      	bne.n	8009eb8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 8009ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009ea8:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8009eac:	3201      	adds	r2, #1
 8009eae:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 8009eb2:	2201      	movs	r2, #1
 8009eb4:	f883 2622 	strb.w	r2, [r3, #1570]	; 0x622
 8009eb8:	210c      	movs	r1, #12
 8009eba:	fb01 4405 	mla	r4, r1, r5, r4
 8009ebe:	4630      	mov	r0, r6
 8009ec0:	f8a4 6620 	strh.w	r6, [r4, #1568]	; 0x620
 8009ec4:	f7ff fdea 	bl	8009a9c <e131::universe_to_multicast_ip(unsigned short)>
 8009ec8:	f8c4 0624 	str.w	r0, [r4, #1572]	; 0x624
 8009ecc:	e7ea      	b.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009ece:	2a02      	cmp	r2, #2
 8009ed0:	d122      	bne.n	8009f18 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009ed2:	2903      	cmp	r1, #3
 8009ed4:	d8e6      	bhi.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009ed6:	2344      	movs	r3, #68	; 0x44
 8009ed8:	fb03 0301 	mla	r3, r3, r1, r0
 8009edc:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009ee0:	b152      	cbz	r2, 8009ef8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 8009ee2:	2200      	movs	r2, #0
 8009ee4:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009ee8:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009eec:	4632      	mov	r2, r6
 8009eee:	3b01      	subs	r3, #1
 8009ef0:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009ef4:	f7ff ff7c 	bl	8009df0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009ef8:	210c      	movs	r1, #12
 8009efa:	fb01 4505 	mla	r5, r1, r5, r4
 8009efe:	f895 3622 	ldrb.w	r3, [r5, #1570]	; 0x622
 8009f02:	2b00      	cmp	r3, #0
 8009f04:	d0ce      	beq.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009f06:	2300      	movs	r3, #0
 8009f08:	f885 3622 	strb.w	r3, [r5, #1570]	; 0x622
 8009f0c:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009f10:	3b01      	subs	r3, #1
 8009f12:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009f16:	e7c5      	b.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009f18:	2344      	movs	r3, #68	; 0x44
 8009f1a:	fb03 4305 	mla	r3, r3, r5, r4
 8009f1e:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009f22:	b1d2      	cbz	r2, 8009f5a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 8009f24:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8009f28:	42b3      	cmp	r3, r6
 8009f2a:	d0bb      	beq.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009f2c:	4632      	mov	r2, r6
 8009f2e:	4629      	mov	r1, r5
 8009f30:	4620      	mov	r0, r4
 8009f32:	f7ff ff5d 	bl	8009df0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009f36:	4b0d      	ldr	r3, [pc, #52]	; (8009f6c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 8009f38:	4630      	mov	r0, r6
 8009f3a:	681f      	ldr	r7, [r3, #0]
 8009f3c:	f8d4 8000 	ldr.w	r8, [r4]
 8009f40:	f7ff fdac 	bl	8009a9c <e131::universe_to_multicast_ip(unsigned short)>
 8009f44:	4641      	mov	r1, r8
 8009f46:	4602      	mov	r2, r0
 8009f48:	4638      	mov	r0, r7
 8009f4a:	f006 f90e 	bl	801016a <Network::JoinGroup(int, unsigned int)>
 8009f4e:	2144      	movs	r1, #68	; 0x44
 8009f50:	fb01 4405 	mla	r4, r1, r5, r4
 8009f54:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 8009f58:	e7a4      	b.n	8009ea4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009f5a:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009f5e:	3201      	adds	r2, #1
 8009f60:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009f64:	2201      	movs	r2, #1
 8009f66:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009f6a:	e7e4      	b.n	8009f36 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 8009f6c:	20011ec0 	andcs	r1, r1, r0, asr #29

08009f70 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009f70:	b953      	cbnz	r3, 8009f88 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 8009f72:	2903      	cmp	r1, #3
 8009f74:	d811      	bhi.n	8009f9a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 8009f76:	230c      	movs	r3, #12
 8009f78:	fb03 0001 	mla	r0, r3, r1, r0
 8009f7c:	f8b0 3620 	ldrh.w	r3, [r0, #1568]	; 0x620
 8009f80:	f890 0622 	ldrb.w	r0, [r0, #1570]	; 0x622
 8009f84:	8013      	strh	r3, [r2, #0]
 8009f86:	4770      	bx	lr
 8009f88:	2344      	movs	r3, #68	; 0x44
 8009f8a:	fb03 0001 	mla	r0, r3, r1, r0
 8009f8e:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8009f92:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 8009f96:	8013      	strh	r3, [r2, #0]
 8009f98:	4770      	bx	lr
 8009f9a:	4618      	mov	r0, r3
 8009f9c:	4770      	bx	lr

08009f9e <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009f9e:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009fa2:	b923      	cbnz	r3, 8009fae <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009fa4:	2301      	movs	r3, #1
 8009fa6:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009faa:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009fae:	2344      	movs	r3, #68	; 0x44
 8009fb0:	fb03 0001 	mla	r0, r3, r1, r0
 8009fb4:	2301      	movs	r3, #1
 8009fb6:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8009fba:	4770      	bx	lr

08009fbc <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009fbc:	4602      	mov	r2, r0
 8009fbe:	2044      	movs	r0, #68	; 0x44
 8009fc0:	4348      	muls	r0, r1
 8009fc2:	b570      	push	{r4, r5, r6, lr}
 8009fc4:	1815      	adds	r5, r2, r0
 8009fc6:	460c      	mov	r4, r1
 8009fc8:	68d3      	ldr	r3, [r2, #12]
 8009fca:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 8009fce:	1a5b      	subs	r3, r3, r1
 8009fd0:	f242 7110 	movw	r1, #10000	; 0x2710
 8009fd4:	428b      	cmp	r3, r1
 8009fd6:	d90a      	bls.n	8009fee <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009fd8:	2600      	movs	r6, #0
 8009fda:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 8009fde:	2110      	movs	r1, #16
 8009fe0:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8009fe4:	4410      	add	r0, r2
 8009fe6:	f7ff fd7f 	bl	8009ae8 <memset.constprop.0.isra.0>
 8009fea:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009fee:	2044      	movs	r0, #68	; 0x44
 8009ff0:	4344      	muls	r4, r0
 8009ff2:	1915      	adds	r5, r2, r4
 8009ff4:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8009ff8:	68d3      	ldr	r3, [r2, #12]
 8009ffa:	1a5b      	subs	r3, r3, r1
 8009ffc:	f242 7110 	movw	r1, #10000	; 0x2710
 800a000:	428b      	cmp	r3, r1
 800a002:	d90a      	bls.n	800a01a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800a004:	2600      	movs	r6, #0
 800a006:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 800a00a:	2110      	movs	r1, #16
 800a00c:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800a010:	1910      	adds	r0, r2, r4
 800a012:	f7ff fd69 	bl	8009ae8 <memset.constprop.0.isra.0>
 800a016:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800a01a:	f892 1595 	ldrb.w	r1, [r2, #1429]	; 0x595
 800a01e:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 800a022:	430b      	orrs	r3, r1
 800a024:	f892 15d9 	ldrb.w	r1, [r2, #1497]	; 0x5d9
 800a028:	430b      	orrs	r3, r1
 800a02a:	d107      	bne.n	800a03c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800a02c:	f892 361d 	ldrb.w	r3, [r2, #1565]	; 0x61d
 800a030:	b923      	cbnz	r3, 800a03c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800a032:	2101      	movs	r1, #1
 800a034:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800a038:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800a03c:	bd70      	pop	{r4, r5, r6, pc}

0800a03e <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800a03e:	2244      	movs	r2, #68	; 0x44
 800a040:	fb02 0101 	mla	r1, r2, r1, r0
 800a044:	68c3      	ldr	r3, [r0, #12]
 800a046:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 800a04a:	b510      	push	{r4, lr}
 800a04c:	1a1a      	subs	r2, r3, r0
 800a04e:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 800a052:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 800a056:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800a05a:	b171      	cbz	r1, 800a07a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800a05c:	1b1b      	subs	r3, r3, r4
 800a05e:	b128      	cbz	r0, 800a06c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800a060:	f242 700f 	movw	r0, #9999	; 0x270f
 800a064:	4283      	cmp	r3, r0
 800a066:	d90d      	bls.n	800a084 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800a068:	4282      	cmp	r2, r0
 800a06a:	e002      	b.n	800a072 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800a06c:	f242 7010 	movw	r0, #10000	; 0x2710
 800a070:	4283      	cmp	r3, r0
 800a072:	bf94      	ite	ls
 800a074:	2000      	movls	r0, #0
 800a076:	2001      	movhi	r0, #1
 800a078:	bd10      	pop	{r4, pc}
 800a07a:	2800      	cmp	r0, #0
 800a07c:	d0fc      	beq.n	800a078 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800a07e:	f242 7010 	movw	r0, #10000	; 0x2710
 800a082:	e7f1      	b.n	800a068 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800a084:	2000      	movs	r0, #0
 800a086:	e7f7      	b.n	800a078 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800a088 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800a088:	684a      	ldr	r2, [r1, #4]
 800a08a:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800a08c:	b510      	push	{r4, lr}
 800a08e:	429a      	cmp	r2, r3
 800a090:	d10b      	bne.n	800a0aa <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 800a092:	f100 0392 	add.w	r3, r0, #146	; 0x92
 800a096:	3108      	adds	r1, #8
 800a098:	30a2      	adds	r0, #162	; 0xa2
 800a09a:	4298      	cmp	r0, r3
 800a09c:	d007      	beq.n	800a0ae <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800a09e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a0a2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a0a6:	4294      	cmp	r4, r2
 800a0a8:	d0f7      	beq.n	800a09a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800a0aa:	2000      	movs	r0, #0
 800a0ac:	bd10      	pop	{r4, pc}
 800a0ae:	2001      	movs	r0, #1
 800a0b0:	e7fc      	b.n	800a0ac <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

0800a0b4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800a0b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a0b8:	2301      	movs	r3, #1
 800a0ba:	4605      	mov	r5, r0
 800a0bc:	4690      	mov	r8, r2
 800a0be:	460f      	mov	r7, r1
 800a0c0:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800a0c4:	2900      	cmp	r1, #0
 800a0c6:	d03d      	beq.n	800a144 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800a0c8:	2a00      	cmp	r2, #0
 800a0ca:	d03b      	beq.n	800a144 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800a0cc:	2600      	movs	r6, #0
 800a0ce:	f240 6804 	movw	r8, #1540	; 0x604
 800a0d2:	4637      	mov	r7, r6
 800a0d4:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800a0d8:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800a0dc:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 800a0e0:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800a0e4:	b1e3      	cbz	r3, 800a120 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 800a0e6:	6868      	ldr	r0, [r5, #4]
 800a0e8:	4631      	mov	r1, r6
 800a0ea:	6803      	ldr	r3, [r0, #0]
 800a0ec:	68db      	ldr	r3, [r3, #12]
 800a0ee:	4798      	blx	r3
 800a0f0:	2110      	movs	r1, #16
 800a0f2:	4620      	mov	r0, r4
 800a0f4:	f844 7c04 	str.w	r7, [r4, #-4]
 800a0f8:	f7ff fcf6 	bl	8009ae8 <memset.constprop.0.isra.0>
 800a0fc:	2110      	movs	r1, #16
 800a0fe:	f104 001c 	add.w	r0, r4, #28
 800a102:	61a7      	str	r7, [r4, #24]
 800a104:	f7ff fcf0 	bl	8009ae8 <memset.constprop.0.isra.0>
 800a108:	f7ff fd00 	bl	8009b0c <lightset::Data::Get()>
 800a10c:	fb08 0006 	mla	r0, r8, r6, r0
 800a110:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800a114:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 800a118:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 800a11c:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 800a120:	3601      	adds	r6, #1
 800a122:	2e04      	cmp	r6, #4
 800a124:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800a128:	d1da      	bne.n	800a0e0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 800a12a:	4b25      	ldr	r3, [pc, #148]	; (800a1c0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 800a12c:	2102      	movs	r1, #2
 800a12e:	6818      	ldr	r0, [r3, #0]
 800a130:	f008 fd58 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 800a134:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 800a138:	f023 0302 	bic.w	r3, r3, #2
 800a13c:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 800a140:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a144:	2600      	movs	r6, #0
 800a146:	f240 6b04 	movw	fp, #1540	; 0x604
 800a14a:	46b1      	mov	r9, r6
 800a14c:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 800a150:	7ea3      	ldrb	r3, [r4, #26]
 800a152:	b373      	cbz	r3, 800a1b2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800a154:	b15f      	cbz	r7, 800a16e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800a156:	f854 3c20 	ldr.w	r3, [r4, #-32]
 800a15a:	b143      	cbz	r3, 800a16e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800a15c:	2110      	movs	r1, #16
 800a15e:	f844 9c20 	str.w	r9, [r4, #-32]
 800a162:	f1a4 001c 	sub.w	r0, r4, #28
 800a166:	f7ff fcbf 	bl	8009ae8 <memset.constprop.0.isra.0>
 800a16a:	f884 9019 	strb.w	r9, [r4, #25]
 800a16e:	f1b8 0f00 	cmp.w	r8, #0
 800a172:	d00a      	beq.n	800a18a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800a174:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800a178:	b13b      	cbz	r3, 800a18a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800a17a:	2110      	movs	r1, #16
 800a17c:	4620      	mov	r0, r4
 800a17e:	f844 9c04 	str.w	r9, [r4, #-4]
 800a182:	f7ff fcb1 	bl	8009ae8 <memset.constprop.0.isra.0>
 800a186:	f884 9019 	strb.w	r9, [r4, #25]
 800a18a:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800a18e:	f1ba 0f00 	cmp.w	sl, #0
 800a192:	d10e      	bne.n	800a1b2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800a194:	6868      	ldr	r0, [r5, #4]
 800a196:	4631      	mov	r1, r6
 800a198:	6803      	ldr	r3, [r0, #0]
 800a19a:	68db      	ldr	r3, [r3, #12]
 800a19c:	4798      	blx	r3
 800a19e:	f7ff fcb5 	bl	8009b0c <lightset::Data::Get()>
 800a1a2:	fb0b 0006 	mla	r0, fp, r6, r0
 800a1a6:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800a1aa:	f884 a018 	strb.w	sl, [r4, #24]
 800a1ae:	f884 a01a 	strb.w	sl, [r4, #26]
 800a1b2:	3601      	adds	r6, #1
 800a1b4:	2e04      	cmp	r6, #4
 800a1b6:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800a1ba:	d1c9      	bne.n	800a150 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800a1bc:	e7b5      	b.n	800a12a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800a1be:	bf00      	nop
 800a1c0:	20012588 	andcs	r2, r1, r8, lsl #11

0800a1c4 <E131Bridge::HandleDmx()>:
 800a1c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1c8:	4604      	mov	r4, r0
 800a1ca:	2600      	movs	r6, #0
 800a1cc:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800a1d0:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800a1d4:	ba7f      	rev16	r7, r7
 800a1d6:	b2bf      	uxth	r7, r7
 800a1d8:	3f01      	subs	r7, #1
 800a1da:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800a1de:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800a1e2:	b353      	cbz	r3, 800a23a <E131Bridge::HandleDmx()+0x76>
 800a1e4:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800a1e8:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800a1ec:	ba5b      	rev16	r3, r3
 800a1ee:	b29b      	uxth	r3, r3
 800a1f0:	429a      	cmp	r2, r3
 800a1f2:	d122      	bne.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a1f4:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800a1f8:	f1a5 0108 	sub.w	r1, r5, #8
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	9300      	str	r3, [sp, #0]
 800a200:	f7ff ff42 	bl	800a088 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a204:	f105 0114 	add.w	r1, r5, #20
 800a208:	4682      	mov	sl, r0
 800a20a:	4620      	mov	r0, r4
 800a20c:	f7ff ff3c 	bl	800a088 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a210:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800a214:	4680      	mov	r8, r0
 800a216:	f1ba 0f00 	cmp.w	sl, #0
 800a21a:	d016      	beq.n	800a24a <E131Bridge::HandleDmx()+0x86>
 800a21c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a220:	7c2a      	ldrb	r2, [r5, #16]
 800a222:	742b      	strb	r3, [r5, #16]
 800a224:	3313      	adds	r3, #19
 800a226:	1a9b      	subs	r3, r3, r2
 800a228:	b2db      	uxtb	r3, r3
 800a22a:	2b13      	cmp	r3, #19
 800a22c:	d905      	bls.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a22e:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800a232:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a236:	2a00      	cmp	r2, #0
 800a238:	da10      	bge.n	800a25c <E131Bridge::HandleDmx()+0x98>
 800a23a:	3601      	adds	r6, #1
 800a23c:	2e04      	cmp	r6, #4
 800a23e:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800a242:	d1cc      	bne.n	800a1de <E131Bridge::HandleDmx()+0x1a>
 800a244:	b003      	add	sp, #12
 800a246:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a24a:	2800      	cmp	r0, #0
 800a24c:	d0ef      	beq.n	800a22e <E131Bridge::HandleDmx()+0x6a>
 800a24e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a252:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800a256:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a25a:	e7e3      	b.n	800a224 <E131Bridge::HandleDmx()+0x60>
 800a25c:	065a      	lsls	r2, r3, #25
 800a25e:	d50b      	bpl.n	800a278 <E131Bridge::HandleDmx()+0xb4>
 800a260:	f1ba 0f00 	cmp.w	sl, #0
 800a264:	d102      	bne.n	800a26c <E131Bridge::HandleDmx()+0xa8>
 800a266:	f1b8 0f00 	cmp.w	r8, #0
 800a26a:	d0e6      	beq.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a26c:	4642      	mov	r2, r8
 800a26e:	4651      	mov	r1, sl
 800a270:	4620      	mov	r0, r4
 800a272:	f7ff ff1f 	bl	800a0b4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a276:	e7e0      	b.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a278:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800a27c:	b133      	cbz	r3, 800a28c <E131Bridge::HandleDmx()+0xc8>
 800a27e:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800a282:	b91b      	cbnz	r3, 800a28c <E131Bridge::HandleDmx()+0xc8>
 800a284:	4631      	mov	r1, r6
 800a286:	4620      	mov	r0, r4
 800a288:	f7ff fe98 	bl	8009fbc <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800a28c:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800a290:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800a294:	4293      	cmp	r3, r2
 800a296:	d259      	bcs.n	800a34c <E131Bridge::HandleDmx()+0x188>
 800a298:	4631      	mov	r1, r6
 800a29a:	4620      	mov	r0, r4
 800a29c:	9301      	str	r3, [sp, #4]
 800a29e:	f7ff fece 	bl	800a03e <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800a2a2:	2800      	cmp	r0, #0
 800a2a4:	d0c9      	beq.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a2a6:	9b01      	ldr	r3, [sp, #4]
 800a2a8:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800a2ac:	9b00      	ldr	r3, [sp, #0]
 800a2ae:	2b00      	cmp	r3, #0
 800a2b0:	d154      	bne.n	800a35c <E131Bridge::HandleDmx()+0x198>
 800a2b2:	f1bb 0f00 	cmp.w	fp, #0
 800a2b6:	d15c      	bne.n	800a372 <E131Bridge::HandleDmx()+0x1ae>
 800a2b8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a2ba:	2210      	movs	r2, #16
 800a2bc:	f845 3c04 	str.w	r3, [r5, #-4]
 800a2c0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a2c4:	4628      	mov	r0, r5
 800a2c6:	742b      	strb	r3, [r5, #16]
 800a2c8:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a2cc:	f7ff fc14 	bl	8009af8 <memcpy.isra.0>
 800a2d0:	68e3      	ldr	r3, [r4, #12]
 800a2d2:	463a      	mov	r2, r7
 800a2d4:	4649      	mov	r1, r9
 800a2d6:	4630      	mov	r0, r6
 800a2d8:	f845 3c08 	str.w	r3, [r5, #-8]
 800a2dc:	f7ff fc22 	bl	8009b24 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800a2e0:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a2e4:	069b      	lsls	r3, r3, #26
 800a2e6:	f100 80ad 	bmi.w	800a444 <E131Bridge::HandleDmx()+0x280>
 800a2ea:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800a2ee:	b29a      	uxth	r2, r3
 800a2f0:	2a00      	cmp	r2, #0
 800a2f2:	f000 80ab 	beq.w	800a44c <E131Bridge::HandleDmx()+0x288>
 800a2f6:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800a2fa:	2a00      	cmp	r2, #0
 800a2fc:	f040 80a6 	bne.w	800a44c <E131Bridge::HandleDmx()+0x288>
 800a300:	ba5b      	rev16	r3, r3
 800a302:	b29b      	uxth	r3, r3
 800a304:	f1ba 0f00 	cmp.w	sl, #0
 800a308:	f040 8099 	bne.w	800a43e <E131Bridge::HandleDmx()+0x27a>
 800a30c:	f1b8 0f00 	cmp.w	r8, #0
 800a310:	f040 8095 	bne.w	800a43e <E131Bridge::HandleDmx()+0x27a>
 800a314:	69aa      	ldr	r2, [r5, #24]
 800a316:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800a31a:	3a00      	subs	r2, #0
 800a31c:	bf18      	it	ne
 800a31e:	2201      	movne	r2, #1
 800a320:	3900      	subs	r1, #0
 800a322:	bf18      	it	ne
 800a324:	2101      	movne	r1, #1
 800a326:	4620      	mov	r0, r4
 800a328:	f7ff fd82 	bl	8009e30 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800a32c:	f240 1301 	movw	r3, #257	; 0x101
 800a330:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800a334:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a338:	2b00      	cmp	r3, #0
 800a33a:	f040 808c 	bne.w	800a456 <E131Bridge::HandleDmx()+0x292>
 800a33e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a342:	f043 0302 	orr.w	r3, r3, #2
 800a346:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a34a:	e776      	b.n	800a23a <E131Bridge::HandleDmx()+0x76>
 800a34c:	d9ae      	bls.n	800a2ac <E131Bridge::HandleDmx()+0xe8>
 800a34e:	2200      	movs	r2, #0
 800a350:	f845 2c04 	str.w	r2, [r5, #-4]
 800a354:	61aa      	str	r2, [r5, #24]
 800a356:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800a35a:	e7a5      	b.n	800a2a8 <E131Bridge::HandleDmx()+0xe4>
 800a35c:	f1ba 0f00 	cmp.w	sl, #0
 800a360:	f000 8092 	beq.w	800a488 <E131Bridge::HandleDmx()+0x2c4>
 800a364:	f1bb 0f00 	cmp.w	fp, #0
 800a368:	d15c      	bne.n	800a424 <E131Bridge::HandleDmx()+0x260>
 800a36a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a36e:	742b      	strb	r3, [r5, #16]
 800a370:	e7ae      	b.n	800a2d0 <E131Bridge::HandleDmx()+0x10c>
 800a372:	f1b8 0f00 	cmp.w	r8, #0
 800a376:	d03b      	beq.n	800a3f0 <E131Bridge::HandleDmx()+0x22c>
 800a378:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a37c:	f240 6b04 	movw	fp, #1540	; 0x604
 800a380:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a384:	68e3      	ldr	r3, [r4, #12]
 800a386:	fb0b fb06 	mul.w	fp, fp, r6
 800a38a:	616b      	str	r3, [r5, #20]
 800a38c:	f7ff fbbe 	bl	8009b0c <lightset::Data::Get()>
 800a390:	4603      	mov	r3, r0
 800a392:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800a396:	463a      	mov	r2, r7
 800a398:	4649      	mov	r1, r9
 800a39a:	4418      	add	r0, r3
 800a39c:	9300      	str	r3, [sp, #0]
 800a39e:	f7ff fbab 	bl	8009af8 <memcpy.isra.0>
 800a3a2:	9b00      	ldr	r3, [sp, #0]
 800a3a4:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800a3a8:	eb03 020b 	add.w	r2, r3, fp
 800a3ac:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800a3b0:	4649      	mov	r1, r9
 800a3b2:	463a      	mov	r2, r7
 800a3b4:	4418      	add	r0, r3
 800a3b6:	f7ff fb9f 	bl	8009af8 <memcpy.isra.0>
 800a3ba:	e791      	b.n	800a2e0 <E131Bridge::HandleDmx()+0x11c>
 800a3bc:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a3be:	2210      	movs	r2, #16
 800a3c0:	61ab      	str	r3, [r5, #24]
 800a3c2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a3c6:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a3ca:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a3ce:	f105 001c 	add.w	r0, r5, #28
 800a3d2:	f7ff fb91 	bl	8009af8 <memcpy.isra.0>
 800a3d6:	68e3      	ldr	r3, [r4, #12]
 800a3d8:	4631      	mov	r1, r6
 800a3da:	4620      	mov	r0, r4
 800a3dc:	616b      	str	r3, [r5, #20]
 800a3de:	f7ff fdde 	bl	8009f9e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a3e2:	463a      	mov	r2, r7
 800a3e4:	4649      	mov	r1, r9
 800a3e6:	4630      	mov	r0, r6
 800a3e8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a3ea:	f7ff fbe1 	bl	8009bb0 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a3ee:	e777      	b.n	800a2e0 <E131Bridge::HandleDmx()+0x11c>
 800a3f0:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a3f2:	2210      	movs	r2, #16
 800a3f4:	f845 3c04 	str.w	r3, [r5, #-4]
 800a3f8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a3fc:	4628      	mov	r0, r5
 800a3fe:	742b      	strb	r3, [r5, #16]
 800a400:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a404:	f7ff fb78 	bl	8009af8 <memcpy.isra.0>
 800a408:	68e3      	ldr	r3, [r4, #12]
 800a40a:	4631      	mov	r1, r6
 800a40c:	4620      	mov	r0, r4
 800a40e:	f845 3c08 	str.w	r3, [r5, #-8]
 800a412:	f7ff fdc4 	bl	8009f9e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a416:	463a      	mov	r2, r7
 800a418:	4649      	mov	r1, r9
 800a41a:	4630      	mov	r0, r6
 800a41c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a41e:	f7ff fb9e 	bl	8009b5e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a422:	e75d      	b.n	800a2e0 <E131Bridge::HandleDmx()+0x11c>
 800a424:	f1b8 0f00 	cmp.w	r8, #0
 800a428:	d103      	bne.n	800a432 <E131Bridge::HandleDmx()+0x26e>
 800a42a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a42e:	742b      	strb	r3, [r5, #16]
 800a430:	e7ea      	b.n	800a408 <E131Bridge::HandleDmx()+0x244>
 800a432:	481b      	ldr	r0, [pc, #108]	; (800a4a0 <E131Bridge::HandleDmx()+0x2dc>)
 800a434:	b003      	add	sp, #12
 800a436:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a43a:	f009 b911 	b.w	8013660 <printf>
 800a43e:	4642      	mov	r2, r8
 800a440:	4651      	mov	r1, sl
 800a442:	e770      	b.n	800a326 <E131Bridge::HandleDmx()+0x162>
 800a444:	f04f 0300 	mov.w	r3, #0
 800a448:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800a44c:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a450:	2b00      	cmp	r3, #0
 800a452:	f47f af6f 	bne.w	800a334 <E131Bridge::HandleDmx()+0x170>
 800a456:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800a45a:	f7ff fb57 	bl	8009b0c <lightset::Data::Get()>
 800a45e:	4632      	mov	r2, r6
 800a460:	4641      	mov	r1, r8
 800a462:	f7ff fbcf 	bl	8009c04 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800a466:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800a46a:	2b00      	cmp	r3, #0
 800a46c:	f47f af67 	bne.w	800a33e <E131Bridge::HandleDmx()+0x17a>
 800a470:	6860      	ldr	r0, [r4, #4]
 800a472:	4631      	mov	r1, r6
 800a474:	6803      	ldr	r3, [r0, #0]
 800a476:	689b      	ldr	r3, [r3, #8]
 800a478:	4798      	blx	r3
 800a47a:	f04f 0301 	mov.w	r3, #1
 800a47e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800a482:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800a486:	e75a      	b.n	800a33e <E131Bridge::HandleDmx()+0x17a>
 800a488:	f1bb 0f00 	cmp.w	fp, #0
 800a48c:	d096      	beq.n	800a3bc <E131Bridge::HandleDmx()+0x1f8>
 800a48e:	f1b8 0f00 	cmp.w	r8, #0
 800a492:	d0ce      	beq.n	800a432 <E131Bridge::HandleDmx()+0x26e>
 800a494:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a498:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a49c:	e79b      	b.n	800a3d6 <E131Bridge::HandleDmx()+0x212>
 800a49e:	bf00      	nop
 800a4a0:	08016b0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, fp, sp, lr}

0800a4a4 <E131Bridge::IsValidRoot()>:
 800a4a4:	4a0d      	ldr	r2, [pc, #52]	; (800a4dc <E131Bridge::IsValidRoot()+0x38>)
 800a4a6:	b530      	push	{r4, r5, lr}
 800a4a8:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800a4ac:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 800a4b0:	42ab      	cmp	r3, r5
 800a4b2:	d007      	beq.n	800a4c4 <E131Bridge::IsValidRoot()+0x20>
 800a4b4:	f813 4b01 	ldrb.w	r4, [r3], #1
 800a4b8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a4bc:	428c      	cmp	r4, r1
 800a4be:	d0f7      	beq.n	800a4b0 <E131Bridge::IsValidRoot()+0xc>
 800a4c0:	2000      	movs	r0, #0
 800a4c2:	e008      	b.n	800a4d6 <E131Bridge::IsValidRoot()+0x32>
 800a4c4:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800a4c8:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800a4cc:	d004      	beq.n	800a4d8 <E131Bridge::IsValidRoot()+0x34>
 800a4ce:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800a4d2:	4258      	negs	r0, r3
 800a4d4:	4158      	adcs	r0, r3
 800a4d6:	bd30      	pop	{r4, r5, pc}
 800a4d8:	2001      	movs	r0, #1
 800a4da:	e7fc      	b.n	800a4d6 <E131Bridge::IsValidRoot()+0x32>
 800a4dc:	08016ccf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, fp, sp, lr}

0800a4e0 <E131Bridge::IsValidDataPacket()>:
 800a4e0:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800a4e4:	2b02      	cmp	r3, #2
 800a4e6:	d10d      	bne.n	800a504 <E131Bridge::IsValidDataPacket()+0x24>
 800a4e8:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800a4ec:	2ba1      	cmp	r3, #161	; 0xa1
 800a4ee:	d109      	bne.n	800a504 <E131Bridge::IsValidDataPacket()+0x24>
 800a4f0:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a4f4:	b933      	cbnz	r3, 800a504 <E131Bridge::IsValidDataPacket()+0x24>
 800a4f6:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a4fa:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a4fe:	4258      	negs	r0, r3
 800a500:	4158      	adcs	r0, r3
 800a502:	4770      	bx	lr
 800a504:	2000      	movs	r0, #0
 800a506:	4770      	bx	lr

0800a508 <E131Bridge::Run()>:
 800a508:	b530      	push	{r4, r5, lr}
 800a50a:	4601      	mov	r1, r0
 800a50c:	4604      	mov	r4, r0
 800a50e:	b085      	sub	sp, #20
 800a510:	f10d 030e 	add.w	r3, sp, #14
 800a514:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a518:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a51c:	9300      	str	r3, [sp, #0]
 800a51e:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a522:	f005 f8e5 	bl	800f6f0 <udp_recv>
 800a526:	4b3c      	ldr	r3, [pc, #240]	; (800a618 <E131Bridge::Run()+0x110>)
 800a528:	681d      	ldr	r5, [r3, #0]
 800a52a:	60e5      	str	r5, [r4, #12]
 800a52c:	2800      	cmp	r0, #0
 800a52e:	d13b      	bne.n	800a5a8 <E131Bridge::Run()+0xa0>
 800a530:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a534:	b183      	cbz	r3, 800a558 <E131Bridge::Run()+0x50>
 800a536:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800a53a:	bb73      	cbnz	r3, 800a59a <E131Bridge::Run()+0x92>
 800a53c:	6923      	ldr	r3, [r4, #16]
 800a53e:	1aed      	subs	r5, r5, r3
 800a540:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a544:	429d      	cmp	r5, r3
 800a546:	d928      	bls.n	800a59a <E131Bridge::Run()+0x92>
 800a548:	6863      	ldr	r3, [r4, #4]
 800a54a:	b9eb      	cbnz	r3, 800a588 <E131Bridge::Run()+0x80>
 800a54c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a550:	f023 0302 	bic.w	r3, r3, #2
 800a554:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a558:	6963      	ldr	r3, [r4, #20]
 800a55a:	b12b      	cbz	r3, 800a568 <E131Bridge::Run()+0x60>
 800a55c:	4620      	mov	r0, r4
 800a55e:	f000 f94f 	bl	800a800 <E131Bridge::HandleDmxIn()>
 800a562:	4620      	mov	r0, r4
 800a564:	f000 f8ca 	bl	800a6fc <E131Bridge::SendDiscoveryPacket()>
 800a568:	7a23      	ldrb	r3, [r4, #8]
 800a56a:	b15b      	cbz	r3, 800a584 <E131Bridge::Run()+0x7c>
 800a56c:	4b2b      	ldr	r3, [pc, #172]	; (800a61c <E131Bridge::Run()+0x114>)
 800a56e:	6818      	ldr	r0, [r3, #0]
 800a570:	6843      	ldr	r3, [r0, #4]
 800a572:	2b04      	cmp	r3, #4
 800a574:	d006      	beq.n	800a584 <E131Bridge::Run()+0x7c>
 800a576:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d049      	beq.n	800a612 <E131Bridge::Run()+0x10a>
 800a57e:	2103      	movs	r1, #3
 800a580:	f008 fb30 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 800a584:	b005      	add	sp, #20
 800a586:	bd30      	pop	{r4, r5, pc}
 800a588:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a58c:	2b00      	cmp	r3, #0
 800a58e:	d1dd      	bne.n	800a54c <E131Bridge::Run()+0x44>
 800a590:	2201      	movs	r2, #1
 800a592:	4620      	mov	r0, r4
 800a594:	4611      	mov	r1, r2
 800a596:	f7ff fd8d 	bl	800a0b4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a59a:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a59e:	1a9b      	subs	r3, r3, r2
 800a5a0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a5a4:	d3d8      	bcc.n	800a558 <E131Bridge::Run()+0x50>
 800a5a6:	e7d1      	b.n	800a54c <E131Bridge::Run()+0x44>
 800a5a8:	4620      	mov	r0, r4
 800a5aa:	f7ff ff7b 	bl	800a4a4 <E131Bridge::IsValidRoot()>
 800a5ae:	2800      	cmp	r0, #0
 800a5b0:	d0e8      	beq.n	800a584 <E131Bridge::Run()+0x7c>
 800a5b2:	2300      	movs	r3, #0
 800a5b4:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a5b8:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a5bc:	6125      	str	r5, [r4, #16]
 800a5be:	b15b      	cbz	r3, 800a5d8 <E131Bridge::Run()+0xd0>
 800a5c0:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a5c4:	b943      	cbnz	r3, 800a5d8 <E131Bridge::Run()+0xd0>
 800a5c6:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a5ca:	1aad      	subs	r5, r5, r2
 800a5cc:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a5d0:	4295      	cmp	r5, r2
 800a5d2:	bf88      	it	hi
 800a5d4:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a5d8:	6863      	ldr	r3, [r4, #4]
 800a5da:	2b00      	cmp	r3, #0
 800a5dc:	d0bc      	beq.n	800a558 <E131Bridge::Run()+0x50>
 800a5de:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a5e2:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a5e6:	ba1a      	rev	r2, r3
 800a5e8:	d108      	bne.n	800a5fc <E131Bridge::Run()+0xf4>
 800a5ea:	4620      	mov	r0, r4
 800a5ec:	f7ff ff78 	bl	800a4e0 <E131Bridge::IsValidDataPacket()>
 800a5f0:	2800      	cmp	r0, #0
 800a5f2:	d0b1      	beq.n	800a558 <E131Bridge::Run()+0x50>
 800a5f4:	4620      	mov	r0, r4
 800a5f6:	f7ff fde5 	bl	800a1c4 <E131Bridge::HandleDmx()>
 800a5fa:	e7ad      	b.n	800a558 <E131Bridge::Run()+0x50>
 800a5fc:	2a08      	cmp	r2, #8
 800a5fe:	d1ab      	bne.n	800a558 <E131Bridge::Run()+0x50>
 800a600:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a604:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a608:	d1a6      	bne.n	800a558 <E131Bridge::Run()+0x50>
 800a60a:	4620      	mov	r0, r4
 800a60c:	f000 f96e 	bl	800a8ec <E131Bridge::HandleSynchronization()>
 800a610:	e7a2      	b.n	800a558 <E131Bridge::Run()+0x50>
 800a612:	2102      	movs	r1, #2
 800a614:	e7b4      	b.n	800a580 <E131Bridge::Run()+0x78>
 800a616:	bf00      	nop
 800a618:	200125a8 	andcs	r2, r1, r8, lsr #11
 800a61c:	20012588 	andcs	r2, r1, r8, lsl #11

0800a620 <E131Bridge::FillDiscoveryPacket()>:
 800a620:	2200      	movs	r2, #0
 800a622:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a626:	b510      	push	{r4, lr}
 800a628:	333c      	adds	r3, #60	; 0x3c
 800a62a:	005b      	lsls	r3, r3, #1
 800a62c:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a630:	69c3      	ldr	r3, [r0, #28]
 800a632:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a636:	428b      	cmp	r3, r1
 800a638:	d002      	beq.n	800a640 <E131Bridge::FillDiscoveryPacket()+0x20>
 800a63a:	f803 2b01 	strb.w	r2, [r3], #1
 800a63e:	e7fa      	b.n	800a636 <E131Bridge::FillDiscoveryPacket()+0x16>
 800a640:	69c3      	ldr	r3, [r0, #28]
 800a642:	492d      	ldr	r1, [pc, #180]	; (800a6f8 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800a644:	701a      	strb	r2, [r3, #0]
 800a646:	2210      	movs	r2, #16
 800a648:	705a      	strb	r2, [r3, #1]
 800a64a:	1d1a      	adds	r2, r3, #4
 800a64c:	3310      	adds	r3, #16
 800a64e:	4293      	cmp	r3, r2
 800a650:	d004      	beq.n	800a65c <E131Bridge::FillDiscoveryPacket()+0x3c>
 800a652:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a656:	f802 4b01 	strb.w	r4, [r2], #1
 800a65a:	e7f8      	b.n	800a64e <E131Bridge::FillDiscoveryPacket()+0x2e>
 800a65c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a660:	69c3      	ldr	r3, [r0, #28]
 800a662:	3234      	adds	r2, #52	; 0x34
 800a664:	0052      	lsls	r2, r2, #1
 800a666:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a66a:	ba52      	rev16	r2, r2
 800a66c:	821a      	strh	r2, [r3, #16]
 800a66e:	2200      	movs	r2, #0
 800a670:	749a      	strb	r2, [r3, #18]
 800a672:	74da      	strb	r2, [r3, #19]
 800a674:	751a      	strb	r2, [r3, #20]
 800a676:	2208      	movs	r2, #8
 800a678:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a67c:	755a      	strb	r2, [r3, #21]
 800a67e:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800a682:	3316      	adds	r3, #22
 800a684:	42a1      	cmp	r1, r4
 800a686:	d004      	beq.n	800a692 <E131Bridge::FillDiscoveryPacket()+0x72>
 800a688:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a68c:	f803 2b01 	strb.w	r2, [r3], #1
 800a690:	e7f8      	b.n	800a684 <E131Bridge::FillDiscoveryPacket()+0x64>
 800a692:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a696:	69c3      	ldr	r3, [r0, #28]
 800a698:	3229      	adds	r2, #41	; 0x29
 800a69a:	0052      	lsls	r2, r2, #1
 800a69c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a6a0:	ba52      	rev16	r2, r2
 800a6a2:	84da      	strh	r2, [r3, #38]	; 0x26
 800a6a4:	2200      	movs	r2, #0
 800a6a6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a6aa:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a6ae:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a6b2:	2202      	movs	r2, #2
 800a6b4:	332c      	adds	r3, #44	; 0x2c
 800a6b6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a6ba:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800a6be:	42a1      	cmp	r1, r4
 800a6c0:	d004      	beq.n	800a6cc <E131Bridge::FillDiscoveryPacket()+0xac>
 800a6c2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a6c6:	f803 2b01 	strb.w	r2, [r3], #1
 800a6ca:	e7f8      	b.n	800a6be <E131Bridge::FillDiscoveryPacket()+0x9e>
 800a6cc:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a6d0:	69c2      	ldr	r2, [r0, #28]
 800a6d2:	3304      	adds	r3, #4
 800a6d4:	005b      	lsls	r3, r3, #1
 800a6d6:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a6da:	ba5b      	rev16	r3, r3
 800a6dc:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a6e0:	2300      	movs	r3, #0
 800a6e2:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a6e6:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a6ea:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a6ee:	2301      	movs	r3, #1
 800a6f0:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a6f4:	bd10      	pop	{r4, pc}
 800a6f6:	bf00      	nop
 800a6f8:	08016ccf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, fp, sp, lr}

0800a6fc <E131Bridge::SendDiscoveryPacket()>:
 800a6fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a6fe:	f242 710f 	movw	r1, #9999	; 0x270f
 800a702:	68c2      	ldr	r2, [r0, #12]
 800a704:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a708:	4604      	mov	r4, r0
 800a70a:	1ad3      	subs	r3, r2, r3
 800a70c:	428b      	cmp	r3, r1
 800a70e:	d924      	bls.n	800a75a <E131Bridge::SendDiscoveryPacket()+0x5e>
 800a710:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a714:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a718:	b1ab      	cbz	r3, 800a746 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800a71a:	2500      	movs	r5, #0
 800a71c:	462e      	mov	r6, r5
 800a71e:	2300      	movs	r3, #0
 800a720:	4629      	mov	r1, r5
 800a722:	4620      	mov	r0, r4
 800a724:	f10d 020e 	add.w	r2, sp, #14
 800a728:	f7ff fc22 	bl	8009f70 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a72c:	b140      	cbz	r0, 800a740 <E131Bridge::SendDiscoveryPacket()+0x44>
 800a72e:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a732:	69e2      	ldr	r2, [r4, #28]
 800a734:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800a738:	ba5b      	rev16	r3, r3
 800a73a:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800a73e:	3601      	adds	r6, #1
 800a740:	3501      	adds	r5, #1
 800a742:	2d04      	cmp	r5, #4
 800a744:	d1eb      	bne.n	800a71e <E131Bridge::SendDiscoveryPacket()+0x22>
 800a746:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a74a:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a74e:	9300      	str	r3, [sp, #0]
 800a750:	69e1      	ldr	r1, [r4, #28]
 800a752:	6a23      	ldr	r3, [r4, #32]
 800a754:	7820      	ldrb	r0, [r4, #0]
 800a756:	f005 f827 	bl	800f7a8 <udp_send>
 800a75a:	b004      	add	sp, #16
 800a75c:	bd70      	pop	{r4, r5, r6, pc}

0800a75e <memcpy.isra.0>:
 800a75e:	3801      	subs	r0, #1
 800a760:	440a      	add	r2, r1
 800a762:	4291      	cmp	r1, r2
 800a764:	d004      	beq.n	800a770 <memcpy.isra.0+0x12>
 800a766:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a76a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a76e:	e7f8      	b.n	800a762 <memcpy.isra.0+0x4>
 800a770:	4770      	bx	lr
	...

0800a774 <E131Bridge::FillDataPacket()>:
 800a774:	b570      	push	{r4, r5, r6, lr}
 800a776:	2400      	movs	r4, #0
 800a778:	2610      	movs	r6, #16
 800a77a:	4605      	mov	r5, r0
 800a77c:	6980      	ldr	r0, [r0, #24]
 800a77e:	220c      	movs	r2, #12
 800a780:	7046      	strb	r6, [r0, #1]
 800a782:	7004      	strb	r4, [r0, #0]
 800a784:	7084      	strb	r4, [r0, #2]
 800a786:	70c4      	strb	r4, [r0, #3]
 800a788:	491c      	ldr	r1, [pc, #112]	; (800a7fc <E131Bridge::FillDataPacket()+0x88>)
 800a78a:	3004      	adds	r0, #4
 800a78c:	f7ff ffe7 	bl	800a75e <memcpy.isra.0>
 800a790:	2304      	movs	r3, #4
 800a792:	4632      	mov	r2, r6
 800a794:	2602      	movs	r6, #2
 800a796:	69a8      	ldr	r0, [r5, #24]
 800a798:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a79c:	7543      	strb	r3, [r0, #21]
 800a79e:	7484      	strb	r4, [r0, #18]
 800a7a0:	74c4      	strb	r4, [r0, #19]
 800a7a2:	7504      	strb	r4, [r0, #20]
 800a7a4:	3016      	adds	r0, #22
 800a7a6:	f7ff ffda 	bl	800a75e <memcpy.isra.0>
 800a7aa:	69a8      	ldr	r0, [r5, #24]
 800a7ac:	2240      	movs	r2, #64	; 0x40
 800a7ae:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a7b2:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a7b6:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a7ba:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a7be:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a7c2:	302c      	adds	r0, #44	; 0x2c
 800a7c4:	f7ff ffcb 	bl	800a75e <memcpy.isra.0>
 800a7c8:	22a1      	movs	r2, #161	; 0xa1
 800a7ca:	69ab      	ldr	r3, [r5, #24]
 800a7cc:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a7d0:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a7d4:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a7d8:	69ab      	ldr	r3, [r5, #24]
 800a7da:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a7de:	69ab      	ldr	r3, [r5, #24]
 800a7e0:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a7e4:	2201      	movs	r2, #1
 800a7e6:	69ab      	ldr	r3, [r5, #24]
 800a7e8:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a7ec:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a7f0:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a7f4:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a7f8:	bd70      	pop	{r4, r5, r6, pc}
 800a7fa:	bf00      	nop
 800a7fc:	08016ccf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sl, fp, sp, lr}

0800a800 <E131Bridge::HandleDmxIn()>:
 800a800:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a804:	4604      	mov	r4, r0
 800a806:	4605      	mov	r5, r0
 800a808:	2600      	movs	r6, #0
 800a80a:	4f37      	ldr	r7, [pc, #220]	; (800a8e8 <E131Bridge::HandleDmxIn()+0xe8>)
 800a80c:	f895 3622 	ldrb.w	r3, [r5, #1570]	; 0x622
 800a810:	2b00      	cmp	r3, #0
 800a812:	d050      	beq.n	800a8b6 <E131Bridge::HandleDmxIn()+0xb6>
 800a814:	6960      	ldr	r0, [r4, #20]
 800a816:	4631      	mov	r1, r6
 800a818:	6803      	ldr	r3, [r0, #0]
 800a81a:	aa02      	add	r2, sp, #8
 800a81c:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800a820:	ab03      	add	r3, sp, #12
 800a822:	47c0      	blx	r8
 800a824:	4601      	mov	r1, r0
 800a826:	2800      	cmp	r0, #0
 800a828:	d04d      	beq.n	800a8c6 <E131Bridge::HandleDmxIn()+0xc6>
 800a82a:	9b02      	ldr	r3, [sp, #8]
 800a82c:	69a0      	ldr	r0, [r4, #24]
 800a82e:	b29b      	uxth	r3, r3
 800a830:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800a834:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a838:	ba52      	rev16	r2, r2
 800a83a:	8202      	strh	r2, [r0, #16]
 800a83c:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800a840:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a844:	ba52      	rev16	r2, r2
 800a846:	84c2      	strh	r2, [r0, #38]	; 0x26
 800a848:	f895 2629 	ldrb.w	r2, [r5, #1577]	; 0x629
 800a84c:	330a      	adds	r3, #10
 800a84e:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800a852:	f895 2628 	ldrb.w	r2, [r5, #1576]	; 0x628
 800a856:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a85a:	1c50      	adds	r0, r2, #1
 800a85c:	f885 0628 	strb.w	r0, [r5, #1576]	; 0x628
 800a860:	69a0      	ldr	r0, [r4, #24]
 800a862:	ba5b      	rev16	r3, r3
 800a864:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800a868:	f8b5 2620 	ldrh.w	r2, [r5, #1568]	; 0x620
 800a86c:	69a0      	ldr	r0, [r4, #24]
 800a86e:	ba52      	rev16	r2, r2
 800a870:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800a874:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a878:	9a02      	ldr	r2, [sp, #8]
 800a87a:	307d      	adds	r0, #125	; 0x7d
 800a87c:	f7ff ff6f 	bl	800a75e <memcpy.isra.0>
 800a880:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a884:	69a1      	ldr	r1, [r4, #24]
 800a886:	ba53      	rev16	r3, r2
 800a888:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a88c:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a890:	327d      	adds	r2, #125	; 0x7d
 800a892:	9300      	str	r3, [sp, #0]
 800a894:	f8d5 3624 	ldr.w	r3, [r5, #1572]	; 0x624
 800a898:	b292      	uxth	r2, r2
 800a89a:	7820      	ldrb	r0, [r4, #0]
 800a89c:	f004 ff84 	bl	800f7a8 <udp_send>
 800a8a0:	2301      	movs	r3, #1
 800a8a2:	683a      	ldr	r2, [r7, #0]
 800a8a4:	40b3      	lsls	r3, r6
 800a8a6:	4313      	orrs	r3, r2
 800a8a8:	603b      	str	r3, [r7, #0]
 800a8aa:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a8ae:	f043 0301 	orr.w	r3, r3, #1
 800a8b2:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a8b6:	3601      	adds	r6, #1
 800a8b8:	2e04      	cmp	r6, #4
 800a8ba:	f105 050c 	add.w	r5, r5, #12
 800a8be:	d1a5      	bne.n	800a80c <E131Bridge::HandleDmxIn()+0xc>
 800a8c0:	b004      	add	sp, #16
 800a8c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a8c6:	9b03      	ldr	r3, [sp, #12]
 800a8c8:	2b00      	cmp	r3, #0
 800a8ca:	d1f4      	bne.n	800a8b6 <E131Bridge::HandleDmxIn()+0xb6>
 800a8cc:	2301      	movs	r3, #1
 800a8ce:	fa03 f206 	lsl.w	r2, r3, r6
 800a8d2:	683b      	ldr	r3, [r7, #0]
 800a8d4:	ea23 0302 	bic.w	r3, r3, r2
 800a8d8:	603b      	str	r3, [r7, #0]
 800a8da:	2b00      	cmp	r3, #0
 800a8dc:	d1eb      	bne.n	800a8b6 <E131Bridge::HandleDmxIn()+0xb6>
 800a8de:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a8e2:	f023 0301 	bic.w	r3, r3, #1
 800a8e6:	e7e4      	b.n	800a8b2 <E131Bridge::HandleDmxIn()+0xb2>
 800a8e8:	20001944 	andcs	r1, r0, r4, asr #18

0800a8ec <E131Bridge::HandleSynchronization()>:
 800a8ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a8f0:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a8f4:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a8f8:	ba5b      	rev16	r3, r3
 800a8fa:	b29b      	uxth	r3, r3
 800a8fc:	429a      	cmp	r2, r3
 800a8fe:	4604      	mov	r4, r0
 800a900:	d00a      	beq.n	800a918 <E131Bridge::HandleSynchronization()+0x2c>
 800a902:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a906:	429a      	cmp	r2, r3
 800a908:	d006      	beq.n	800a918 <E131Bridge::HandleSynchronization()+0x2c>
 800a90a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a90e:	4b23      	ldr	r3, [pc, #140]	; (800a99c <E131Bridge::HandleSynchronization()+0xb0>)
 800a910:	2102      	movs	r1, #2
 800a912:	6818      	ldr	r0, [r3, #0]
 800a914:	f008 b966 	b.w	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 800a918:	2500      	movs	r5, #0
 800a91a:	4627      	mov	r7, r4
 800a91c:	46a9      	mov	r9, r5
 800a91e:	68e3      	ldr	r3, [r4, #12]
 800a920:	4e1f      	ldr	r6, [pc, #124]	; (800a9a0 <E131Bridge::HandleSynchronization()+0xb4>)
 800a922:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800a9a4 <E131Bridge::HandleSynchronization()+0xb8>
 800a926:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a92a:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800a92e:	b323      	cbz	r3, 800a97a <E131Bridge::HandleSynchronization()+0x8e>
 800a930:	f8d8 3000 	ldr.w	r3, [r8]
 800a934:	6860      	ldr	r0, [r4, #4]
 800a936:	07da      	lsls	r2, r3, #31
 800a938:	bf5c      	itt	pl
 800a93a:	2301      	movpl	r3, #1
 800a93c:	f8c8 3000 	strpl.w	r3, [r8]
 800a940:	6803      	ldr	r3, [r0, #0]
 800a942:	4629      	mov	r1, r5
 800a944:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800a948:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a94c:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a950:	47d0      	blx	sl
 800a952:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800a956:	b93b      	cbnz	r3, 800a968 <E131Bridge::HandleSynchronization()+0x7c>
 800a958:	6860      	ldr	r0, [r4, #4]
 800a95a:	4629      	mov	r1, r5
 800a95c:	6803      	ldr	r3, [r0, #0]
 800a95e:	689b      	ldr	r3, [r3, #8]
 800a960:	4798      	blx	r3
 800a962:	2301      	movs	r3, #1
 800a964:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800a968:	f8d8 3000 	ldr.w	r3, [r8]
 800a96c:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800a970:	07db      	lsls	r3, r3, #31
 800a972:	bf5c      	itt	pl
 800a974:	2301      	movpl	r3, #1
 800a976:	f8c8 3000 	strpl.w	r3, [r8]
 800a97a:	3501      	adds	r5, #1
 800a97c:	2d04      	cmp	r5, #4
 800a97e:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800a982:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800a986:	d1d0      	bne.n	800a92a <E131Bridge::HandleSynchronization()+0x3e>
 800a988:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a98a:	b120      	cbz	r0, 800a996 <E131Bridge::HandleSynchronization()+0xaa>
 800a98c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a990:	6803      	ldr	r3, [r0, #0]
 800a992:	689b      	ldr	r3, [r3, #8]
 800a994:	4718      	bx	r3
 800a996:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a99a:	bf00      	nop
 800a99c:	20012588 	andcs	r2, r1, r8, lsl #11
 800a9a0:	20000130 	andcs	r0, r0, r0, lsr r1
 800a9a4:	2000012c 	andcs	r0, r0, ip, lsr #2

0800a9a8 <E131Bridge::Print()>:
 800a9a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9ac:	2500      	movs	r5, #0
 800a9ae:	4604      	mov	r4, r0
 800a9b0:	b08c      	sub	sp, #48	; 0x30
 800a9b2:	a902      	add	r1, sp, #8
 800a9b4:	3024      	adds	r0, #36	; 0x24
 800a9b6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a9ba:	f001 fddd 	bl	800c578 <uuid_unparse>
 800a9be:	482c      	ldr	r0, [pc, #176]	; (800aa70 <E131Bridge::Print()+0xc8>)
 800a9c0:	f008 fe4e 	bl	8013660 <printf>
 800a9c4:	4b2b      	ldr	r3, [pc, #172]	; (800aa74 <E131Bridge::Print()+0xcc>)
 800a9c6:	482c      	ldr	r0, [pc, #176]	; (800aa78 <E131Bridge::Print()+0xd0>)
 800a9c8:	7819      	ldrb	r1, [r3, #0]
 800a9ca:	785a      	ldrb	r2, [r3, #1]
 800a9cc:	f008 fe48 	bl	8013660 <printf>
 800a9d0:	482a      	ldr	r0, [pc, #168]	; (800aa7c <E131Bridge::Print()+0xd4>)
 800a9d2:	a902      	add	r1, sp, #8
 800a9d4:	f008 fe44 	bl	8013660 <printf>
 800a9d8:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a9dc:	b303      	cbz	r3, 800aa20 <E131Bridge::Print()+0x78>
 800a9de:	4828      	ldr	r0, [pc, #160]	; (800aa80 <E131Bridge::Print()+0xd8>)
 800a9e0:	f008 fe3e 	bl	8013660 <printf>
 800a9e4:	4e27      	ldr	r6, [pc, #156]	; (800aa84 <E131Bridge::Print()+0xdc>)
 800a9e6:	4f28      	ldr	r7, [pc, #160]	; (800aa88 <E131Bridge::Print()+0xe0>)
 800a9e8:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800aa8c <E131Bridge::Print()+0xe4>
 800a9ec:	2301      	movs	r3, #1
 800a9ee:	4629      	mov	r1, r5
 800a9f0:	4620      	mov	r0, r4
 800a9f2:	f10d 0206 	add.w	r2, sp, #6
 800a9f6:	f7ff fabb 	bl	8009f70 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a9fa:	b170      	cbz	r0, 800aa1a <E131Bridge::Print()+0x72>
 800a9fc:	2344      	movs	r3, #68	; 0x44
 800a9fe:	436b      	muls	r3, r5
 800aa00:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800aa04:	58d3      	ldr	r3, [r2, r3]
 800aa06:	4629      	mov	r1, r5
 800aa08:	2b00      	cmp	r3, #0
 800aa0a:	bf0c      	ite	eq
 800aa0c:	4633      	moveq	r3, r6
 800aa0e:	463b      	movne	r3, r7
 800aa10:	4640      	mov	r0, r8
 800aa12:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aa16:	f008 fe23 	bl	8013660 <printf>
 800aa1a:	3501      	adds	r5, #1
 800aa1c:	2d04      	cmp	r5, #4
 800aa1e:	d1e5      	bne.n	800a9ec <E131Bridge::Print()+0x44>
 800aa20:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800aa24:	b1d3      	cbz	r3, 800aa5c <E131Bridge::Print()+0xb4>
 800aa26:	481a      	ldr	r0, [pc, #104]	; (800aa90 <E131Bridge::Print()+0xe8>)
 800aa28:	f008 fe1a 	bl	8013660 <printf>
 800aa2c:	2500      	movs	r5, #0
 800aa2e:	4e19      	ldr	r6, [pc, #100]	; (800aa94 <E131Bridge::Print()+0xec>)
 800aa30:	2300      	movs	r3, #0
 800aa32:	4629      	mov	r1, r5
 800aa34:	4620      	mov	r0, r4
 800aa36:	f10d 0206 	add.w	r2, sp, #6
 800aa3a:	f7ff fa99 	bl	8009f70 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800aa3e:	b150      	cbz	r0, 800aa56 <E131Bridge::Print()+0xae>
 800aa40:	230c      	movs	r3, #12
 800aa42:	436b      	muls	r3, r5
 800aa44:	f204 6229 	addw	r2, r4, #1577	; 0x629
 800aa48:	5cd3      	ldrb	r3, [r2, r3]
 800aa4a:	4629      	mov	r1, r5
 800aa4c:	4630      	mov	r0, r6
 800aa4e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800aa52:	f008 fe05 	bl	8013660 <printf>
 800aa56:	3501      	adds	r5, #1
 800aa58:	2d04      	cmp	r5, #4
 800aa5a:	d1e9      	bne.n	800aa30 <E131Bridge::Print()+0x88>
 800aa5c:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800aa60:	b113      	cbz	r3, 800aa68 <E131Bridge::Print()+0xc0>
 800aa62:	480d      	ldr	r0, [pc, #52]	; (800aa98 <E131Bridge::Print()+0xf0>)
 800aa64:	f008 fdfc 	bl	8013660 <printf>
 800aa68:	b00c      	add	sp, #48	; 0x30
 800aa6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aa6e:	bf00      	nop
 800aa70:	08016b44 	stmdaeq	r1, {r2, r6, r8, r9, fp, sp, lr}
 800aa74:	08016cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp, sp, lr}
 800aa78:	08016b4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, fp, sp, lr}
 800aa7c:	08016b5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}
 800aa80:	08016b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, sp, lr}
 800aa84:	08016b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, sp, lr}
 800aa88:	08016b40 	stmdaeq	r1, {r6, r8, r9, fp, sp, lr}
 800aa8c:	08016b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, sp, lr}
 800aa90:	08016b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, sp, lr}
 800aa94:	08016b9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, fp, sp, lr}
 800aa98:	08016bbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, fp, sp, lr}

0800aa9c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800aa9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa9e:	88c5      	ldrh	r5, [r0, #6]
 800aaa0:	8886      	ldrh	r6, [r0, #4]
 800aaa2:	42b5      	cmp	r5, r6
 800aaa4:	d216      	bcs.n	800aad4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800aaa6:	4604      	mov	r4, r0
 800aaa8:	6800      	ldr	r0, [r0, #0]
 800aaaa:	4428      	add	r0, r5
 800aaac:	1b75      	subs	r5, r6, r5
 800aaae:	7a26      	ldrb	r6, [r4, #8]
 800aab0:	b923      	cbnz	r3, 800aabc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800aab2:	b926      	cbnz	r6, 800aabe <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800aab4:	9200      	str	r2, [sp, #0]
 800aab6:	460b      	mov	r3, r1
 800aab8:	4a09      	ldr	r2, [pc, #36]	; (800aae0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800aaba:	e003      	b.n	800aac4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800aabc:	b166      	cbz	r6, 800aad8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800aabe:	460b      	mov	r3, r1
 800aac0:	9200      	str	r2, [sp, #0]
 800aac2:	4a08      	ldr	r2, [pc, #32]	; (800aae4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800aac4:	4629      	mov	r1, r5
 800aac6:	f008 fdf3 	bl	80136b0 <snprintf>
 800aaca:	4285      	cmp	r5, r0
 800aacc:	bfa2      	ittt	ge
 800aace:	88e3      	ldrhge	r3, [r4, #6]
 800aad0:	181b      	addge	r3, r3, r0
 800aad2:	80e3      	strhge	r3, [r4, #6]
 800aad4:	b002      	add	sp, #8
 800aad6:	bd70      	pop	{r4, r5, r6, pc}
 800aad8:	9200      	str	r2, [sp, #0]
 800aada:	460b      	mov	r3, r1
 800aadc:	4a02      	ldr	r2, [pc, #8]	; (800aae8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800aade:	e7f1      	b.n	800aac4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800aae0:	08015d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, ip, lr}
 800aae4:	08015d79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, fp, ip, lr}
 800aae8:	08015d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, ip, lr}

0800aaec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800aaec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aaee:	460b      	mov	r3, r1
 800aaf0:	8885      	ldrh	r5, [r0, #4]
 800aaf2:	88c1      	ldrh	r1, [r0, #6]
 800aaf4:	42a9      	cmp	r1, r5
 800aaf6:	d214      	bcs.n	800ab22 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800aaf8:	4604      	mov	r4, r0
 800aafa:	6800      	ldr	r0, [r0, #0]
 800aafc:	1a6d      	subs	r5, r5, r1
 800aafe:	4408      	add	r0, r1
 800ab00:	7a21      	ldrb	r1, [r4, #8]
 800ab02:	b91a      	cbnz	r2, 800ab0c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800ab04:	b919      	cbnz	r1, 800ab0e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800ab06:	4a0a      	ldr	r2, [pc, #40]	; (800ab30 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800ab08:	9100      	str	r1, [sp, #0]
 800ab0a:	e002      	b.n	800ab12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ab0c:	b159      	cbz	r1, 800ab26 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800ab0e:	9200      	str	r2, [sp, #0]
 800ab10:	4a08      	ldr	r2, [pc, #32]	; (800ab34 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800ab12:	4629      	mov	r1, r5
 800ab14:	f008 fdcc 	bl	80136b0 <snprintf>
 800ab18:	4285      	cmp	r5, r0
 800ab1a:	bfa2      	ittt	ge
 800ab1c:	88e3      	ldrhge	r3, [r4, #6]
 800ab1e:	181b      	addge	r3, r3, r0
 800ab20:	80e3      	strhge	r3, [r4, #6]
 800ab22:	b003      	add	sp, #12
 800ab24:	bd30      	pop	{r4, r5, pc}
 800ab26:	2201      	movs	r2, #1
 800ab28:	9200      	str	r2, [sp, #0]
 800ab2a:	4a03      	ldr	r2, [pc, #12]	; (800ab38 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800ab2c:	e7f1      	b.n	800ab12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800ab2e:	bf00      	nop
 800ab30:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 800ab34:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 800ab38:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

0800ab3c <E131Params::E131Params(E131ParamsStore*)>:
 800ab3c:	b510      	push	{r4, lr}
 800ab3e:	221a      	movs	r2, #26
 800ab40:	4604      	mov	r4, r0
 800ab42:	f840 1b04 	str.w	r1, [r0], #4
 800ab46:	2100      	movs	r1, #0
 800ab48:	f008 fa5a 	bl	8013000 <memset>
 800ab4c:	2300      	movs	r3, #0
 800ab4e:	2201      	movs	r2, #1
 800ab50:	7323      	strb	r3, [r4, #12]
 800ab52:	72e2      	strb	r2, [r4, #11]
 800ab54:	73a3      	strb	r3, [r4, #14]
 800ab56:	2202      	movs	r2, #2
 800ab58:	7423      	strb	r3, [r4, #16]
 800ab5a:	74a3      	strb	r3, [r4, #18]
 800ab5c:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800ab60:	7362      	strb	r2, [r4, #13]
 800ab62:	83e3      	strh	r3, [r4, #30]
 800ab64:	2203      	movs	r2, #3
 800ab66:	f246 4364 	movw	r3, #25700	; 0x6464
 800ab6a:	73e2      	strb	r2, [r4, #15]
 800ab6c:	8423      	strh	r3, [r4, #32]
 800ab6e:	2204      	movs	r2, #4
 800ab70:	2364      	movs	r3, #100	; 0x64
 800ab72:	4620      	mov	r0, r4
 800ab74:	7462      	strb	r2, [r4, #17]
 800ab76:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800ab7a:	bd10      	pop	{r4, pc}

0800ab7c <E131Params::Load()>:
 800ab7c:	b508      	push	{r3, lr}
 800ab7e:	2300      	movs	r3, #0
 800ab80:	4601      	mov	r1, r0
 800ab82:	6043      	str	r3, [r0, #4]
 800ab84:	6800      	ldr	r0, [r0, #0]
 800ab86:	b120      	cbz	r0, 800ab92 <E131Params::Load()+0x16>
 800ab88:	6803      	ldr	r3, [r0, #0]
 800ab8a:	3104      	adds	r1, #4
 800ab8c:	68db      	ldr	r3, [r3, #12]
 800ab8e:	4798      	blx	r3
 800ab90:	2001      	movs	r0, #1
 800ab92:	bd08      	pop	{r3, pc}

0800ab94 <E131Params::Load(char const*, unsigned int)>:
 800ab94:	6803      	ldr	r3, [r0, #0]
 800ab96:	b1d3      	cbz	r3, 800abce <E131Params::Load(char const*, unsigned int)+0x3a>
 800ab98:	2300      	movs	r3, #0
 800ab9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ab9c:	460d      	mov	r5, r1
 800ab9e:	4616      	mov	r6, r2
 800aba0:	4604      	mov	r4, r0
 800aba2:	6043      	str	r3, [r0, #4]
 800aba4:	4602      	mov	r2, r0
 800aba6:	490a      	ldr	r1, [pc, #40]	; (800abd0 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800aba8:	4668      	mov	r0, sp
 800abaa:	f007 fac7 	bl	801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800abae:	4632      	mov	r2, r6
 800abb0:	4629      	mov	r1, r5
 800abb2:	4668      	mov	r0, sp
 800abb4:	f007 fac6 	bl	8012144 <ReadConfigFile::Read(char const*, unsigned int)>
 800abb8:	4621      	mov	r1, r4
 800abba:	f851 0b04 	ldr.w	r0, [r1], #4
 800abbe:	6803      	ldr	r3, [r0, #0]
 800abc0:	689b      	ldr	r3, [r3, #8]
 800abc2:	4798      	blx	r3
 800abc4:	4668      	mov	r0, sp
 800abc6:	f007 fabc 	bl	8012142 <ReadConfigFile::~ReadConfigFile()>
 800abca:	b002      	add	sp, #8
 800abcc:	bd70      	pop	{r4, r5, r6, pc}
 800abce:	4770      	bx	lr
 800abd0:	0800ad9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, sp, pc}

0800abd4 <E131Params::callbackFunction(char const*)>:
 800abd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abd8:	4604      	mov	r4, r0
 800abda:	460e      	mov	r6, r1
 800abdc:	2500      	movs	r5, #0
 800abde:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800ad84 <E131Params::callbackFunction(char const*)+0x1b0>
 800abe2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800ad88 <E131Params::callbackFunction(char const*)+0x1b4>
 800abe6:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800ad8c <E131Params::callbackFunction(char const*)+0x1b8>
 800abea:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800ad90 <E131Params::callbackFunction(char const*)+0x1bc>
 800abee:	b087      	sub	sp, #28
 800abf0:	4649      	mov	r1, r9
 800abf2:	4630      	mov	r0, r6
 800abf4:	f10d 0202 	add.w	r2, sp, #2
 800abf8:	f007 fb94 	bl	8012324 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800abfc:	b9c8      	cbnz	r0, 800ac32 <E131Params::callbackFunction(char const*)+0x5e>
 800abfe:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800ac02:	2110      	movs	r1, #16
 800ac04:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800ac08:	6863      	ldr	r3, [r4, #4]
 800ac0a:	1e42      	subs	r2, r0, #1
 800ac0c:	b292      	uxth	r2, r2
 800ac0e:	42b2      	cmp	r2, r6
 800ac10:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800ac14:	fa01 f105 	lsl.w	r1, r1, r5
 800ac18:	bf85      	ittet	hi
 800ac1a:	1912      	addhi	r2, r2, r4
 800ac1c:	3501      	addhi	r5, #1
 800ac1e:	1912      	addls	r2, r2, r4
 800ac20:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800ac24:	bf8e      	itee	hi
 800ac26:	438b      	bichi	r3, r1
 800ac28:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800ac2c:	430b      	orrls	r3, r1
 800ac2e:	6063      	str	r3, [r4, #4]
 800ac30:	e05e      	b.n	800acf0 <E131Params::callbackFunction(char const*)+0x11c>
 800ac32:	2712      	movs	r7, #18
 800ac34:	2303      	movs	r3, #3
 800ac36:	436f      	muls	r7, r5
 800ac38:	9301      	str	r3, [sp, #4]
 800ac3a:	4630      	mov	r0, r6
 800ac3c:	ab01      	add	r3, sp, #4
 800ac3e:	aa02      	add	r2, sp, #8
 800ac40:	eb0a 0107 	add.w	r1, sl, r7
 800ac44:	f007 fab2 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ac48:	b9f8      	cbnz	r0, 800ac8a <E131Params::callbackFunction(char const*)+0xb6>
 800ac4a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ac4e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800ac52:	40ab      	lsls	r3, r5
 800ac54:	f041 0120 	orr.w	r1, r1, #32
 800ac58:	296c      	cmp	r1, #108	; 0x6c
 800ac5a:	6862      	ldr	r2, [r4, #4]
 800ac5c:	4425      	add	r5, r4
 800ac5e:	d10f      	bne.n	800ac80 <E131Params::callbackFunction(char const*)+0xac>
 800ac60:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800ac64:	f041 0120 	orr.w	r1, r1, #32
 800ac68:	2974      	cmp	r1, #116	; 0x74
 800ac6a:	d109      	bne.n	800ac80 <E131Params::callbackFunction(char const*)+0xac>
 800ac6c:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800ac70:	f041 0120 	orr.w	r1, r1, #32
 800ac74:	2970      	cmp	r1, #112	; 0x70
 800ac76:	d103      	bne.n	800ac80 <E131Params::callbackFunction(char const*)+0xac>
 800ac78:	2101      	movs	r1, #1
 800ac7a:	7529      	strb	r1, [r5, #20]
 800ac7c:	4313      	orrs	r3, r2
 800ac7e:	e7d6      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ac80:	2100      	movs	r1, #0
 800ac82:	ea22 0303 	bic.w	r3, r2, r3
 800ac86:	7529      	strb	r1, [r5, #20]
 800ac88:	e7d1      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ac8a:	2305      	movs	r3, #5
 800ac8c:	4630      	mov	r0, r6
 800ac8e:	9301      	str	r3, [sp, #4]
 800ac90:	aa02      	add	r2, sp, #8
 800ac92:	ab01      	add	r3, sp, #4
 800ac94:	eb0b 0107 	add.w	r1, fp, r7
 800ac98:	f007 fa88 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ac9c:	bb58      	cbnz	r0, 800acf6 <E131Params::callbackFunction(char const*)+0x122>
 800ac9e:	2301      	movs	r3, #1
 800aca0:	7fa2      	ldrb	r2, [r4, #30]
 800aca2:	40ab      	lsls	r3, r5
 800aca4:	ea22 0303 	bic.w	r3, r2, r3
 800aca8:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800acac:	77a3      	strb	r3, [r4, #30]
 800acae:	f042 0220 	orr.w	r2, r2, #32
 800acb2:	2a69      	cmp	r2, #105	; 0x69
 800acb4:	d117      	bne.n	800ace6 <E131Params::callbackFunction(char const*)+0x112>
 800acb6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800acba:	f042 0220 	orr.w	r2, r2, #32
 800acbe:	2a6e      	cmp	r2, #110	; 0x6e
 800acc0:	d111      	bne.n	800ace6 <E131Params::callbackFunction(char const*)+0x112>
 800acc2:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800acc6:	f042 0220 	orr.w	r2, r2, #32
 800acca:	2a70      	cmp	r2, #112	; 0x70
 800accc:	d10b      	bne.n	800ace6 <E131Params::callbackFunction(char const*)+0x112>
 800acce:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800acd2:	f042 0220 	orr.w	r2, r2, #32
 800acd6:	2a75      	cmp	r2, #117	; 0x75
 800acd8:	d105      	bne.n	800ace6 <E131Params::callbackFunction(char const*)+0x112>
 800acda:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800acde:	f042 0220 	orr.w	r2, r2, #32
 800ace2:	2a74      	cmp	r2, #116	; 0x74
 800ace4:	d004      	beq.n	800acf0 <E131Params::callbackFunction(char const*)+0x11c>
 800ace6:	2201      	movs	r2, #1
 800ace8:	fa02 f505 	lsl.w	r5, r2, r5
 800acec:	432b      	orrs	r3, r5
 800acee:	77a3      	strb	r3, [r4, #30]
 800acf0:	b007      	add	sp, #28
 800acf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acf6:	4641      	mov	r1, r8
 800acf8:	4630      	mov	r0, r6
 800acfa:	f10d 0201 	add.w	r2, sp, #1
 800acfe:	f007 fb58 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ad02:	b998      	cbnz	r0, 800ad2c <E131Params::callbackFunction(char const*)+0x158>
 800ad04:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ad08:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800ad0c:	40aa      	lsls	r2, r5
 800ad0e:	1e48      	subs	r0, r1, #1
 800ad10:	b2c0      	uxtb	r0, r0
 800ad12:	28c7      	cmp	r0, #199	; 0xc7
 800ad14:	6863      	ldr	r3, [r4, #4]
 800ad16:	4425      	add	r5, r4
 800ad18:	d803      	bhi.n	800ad22 <E131Params::callbackFunction(char const*)+0x14e>
 800ad1a:	2964      	cmp	r1, #100	; 0x64
 800ad1c:	d001      	beq.n	800ad22 <E131Params::callbackFunction(char const*)+0x14e>
 800ad1e:	77e9      	strb	r1, [r5, #31]
 800ad20:	e7ac      	b.n	800ac7c <E131Params::callbackFunction(char const*)+0xa8>
 800ad22:	2164      	movs	r1, #100	; 0x64
 800ad24:	ea23 0302 	bic.w	r3, r3, r2
 800ad28:	77e9      	strb	r1, [r5, #31]
 800ad2a:	e780      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ad2c:	3501      	adds	r5, #1
 800ad2e:	2d04      	cmp	r5, #4
 800ad30:	f109 0910 	add.w	r9, r9, #16
 800ad34:	f108 0812 	add.w	r8, r8, #18
 800ad38:	f47f af5a 	bne.w	800abf0 <E131Params::callbackFunction(char const*)+0x1c>
 800ad3c:	4630      	mov	r0, r6
 800ad3e:	4915      	ldr	r1, [pc, #84]	; (800ad94 <E131Params::callbackFunction(char const*)+0x1c0>)
 800ad40:	f10d 0201 	add.w	r2, sp, #1
 800ad44:	f007 fb35 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ad48:	b948      	cbnz	r0, 800ad5e <E131Params::callbackFunction(char const*)+0x18a>
 800ad4a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ad4e:	6863      	ldr	r3, [r4, #4]
 800ad50:	b112      	cbz	r2, 800ad58 <E131Params::callbackFunction(char const*)+0x184>
 800ad52:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800ad56:	e76a      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ad58:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800ad5c:	e767      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ad5e:	4630      	mov	r0, r6
 800ad60:	490d      	ldr	r1, [pc, #52]	; (800ad98 <E131Params::callbackFunction(char const*)+0x1c4>)
 800ad62:	f10d 0201 	add.w	r2, sp, #1
 800ad66:	f007 fb24 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ad6a:	2800      	cmp	r0, #0
 800ad6c:	d1c0      	bne.n	800acf0 <E131Params::callbackFunction(char const*)+0x11c>
 800ad6e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ad72:	6863      	ldr	r3, [r4, #4]
 800ad74:	b112      	cbz	r2, 800ad7c <E131Params::callbackFunction(char const*)+0x1a8>
 800ad76:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800ad7a:	e758      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ad7c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ad80:	e755      	b.n	800ac2e <E131Params::callbackFunction(char const*)+0x5a>
 800ad82:	bf00      	nop
 800ad84:	08017b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp, lr}
 800ad88:	08016c7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, fp, sp, lr}
 800ad8c:	08017c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, ip, sp, lr}
 800ad90:	08017ccb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, fp, ip, sp, lr}
 800ad94:	08016c5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, sp, lr}
 800ad98:	08016c46 	stmdaeq	r1, {r1, r2, r6, sl, fp, sp, lr}

0800ad9c <E131Params::staticCallbackFunction(void*, char const*)>:
 800ad9c:	f7ff bf1a 	b.w	800abd4 <E131Params::callbackFunction(char const*)>

0800ada0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800ada0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ada4:	4604      	mov	r4, r0
 800ada6:	4615      	mov	r5, r2
 800ada8:	461e      	mov	r6, r3
 800adaa:	b086      	sub	sp, #24
 800adac:	3004      	adds	r0, #4
 800adae:	2900      	cmp	r1, #0
 800adb0:	d045      	beq.n	800ae3e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800adb2:	221f      	movs	r2, #31
 800adb4:	f008 f90d 	bl	8012fd2 <memmove>
 800adb8:	4633      	mov	r3, r6
 800adba:	462a      	mov	r2, r5
 800adbc:	4978      	ldr	r1, [pc, #480]	; (800afa0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800adbe:	a803      	add	r0, sp, #12
 800adc0:	f007 f91c 	bl	8011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800adc4:	2500      	movs	r5, #0
 800adc6:	4e77      	ldr	r6, [pc, #476]	; (800afa4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800adc8:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800afa8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800adcc:	4f77      	ldr	r7, [pc, #476]	; (800afac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800adce:	7fa3      	ldrb	r3, [r4, #30]
 800add0:	4631      	mov	r1, r6
 800add2:	412b      	asrs	r3, r5
 800add4:	f013 0f01 	tst.w	r3, #1
 800add8:	ea6f 0303 	mvn.w	r3, r3
 800addc:	bf0c      	ite	eq
 800adde:	4642      	moveq	r2, r8
 800ade0:	463a      	movne	r2, r7
 800ade2:	f003 0301 	and.w	r3, r3, #1
 800ade6:	a803      	add	r0, sp, #12
 800ade8:	3501      	adds	r5, #1
 800adea:	f7ff fe57 	bl	800aa9c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800adee:	2d04      	cmp	r5, #4
 800adf0:	f106 0612 	add.w	r6, r6, #18
 800adf4:	d1eb      	bne.n	800adce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800adf6:	2600      	movs	r6, #0
 800adf8:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800afb0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800adfc:	4f6d      	ldr	r7, [pc, #436]	; (800afb4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800adfe:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800afb8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800ae02:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800afbc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800ae06:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ae0a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ae0e:	42ab      	cmp	r3, r5
 800ae10:	d22c      	bcs.n	800ae6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800ae12:	2110      	movs	r1, #16
 800ae14:	9803      	ldr	r0, [sp, #12]
 800ae16:	1aed      	subs	r5, r5, r3
 800ae18:	4418      	add	r0, r3
 800ae1a:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800ae1e:	f8b3 200b 	ldrh.w	r2, [r3, #11]
 800ae22:	6863      	ldr	r3, [r4, #4]
 800ae24:	40b1      	lsls	r1, r6
 800ae26:	ea31 0303 	bics.w	r3, r1, r3
 800ae2a:	f89d c014 	ldrb.w	ip, [sp, #20]
 800ae2e:	d00d      	beq.n	800ae4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800ae30:	f1bc 0f00 	cmp.w	ip, #0
 800ae34:	d10d      	bne.n	800ae52 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb2>
 800ae36:	9200      	str	r2, [sp, #0]
 800ae38:	4653      	mov	r3, sl
 800ae3a:	464a      	mov	r2, r9
 800ae3c:	e00c      	b.n	800ae58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800ae3e:	6823      	ldr	r3, [r4, #0]
 800ae40:	4601      	mov	r1, r0
 800ae42:	681a      	ldr	r2, [r3, #0]
 800ae44:	4618      	mov	r0, r3
 800ae46:	68d2      	ldr	r2, [r2, #12]
 800ae48:	4790      	blx	r2
 800ae4a:	e7b5      	b.n	800adb8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800ae4c:	f1bc 0f00 	cmp.w	ip, #0
 800ae50:	d05d      	beq.n	800af0e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16e>
 800ae52:	9200      	str	r2, [sp, #0]
 800ae54:	4653      	mov	r3, sl
 800ae56:	463a      	mov	r2, r7
 800ae58:	4629      	mov	r1, r5
 800ae5a:	f008 fc29 	bl	80136b0 <snprintf>
 800ae5e:	4285      	cmp	r5, r0
 800ae60:	bfa2      	ittt	ge
 800ae62:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ae66:	18c0      	addge	r0, r0, r3
 800ae68:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ae6c:	3601      	adds	r6, #1
 800ae6e:	2e04      	cmp	r6, #4
 800ae70:	f10a 0a10 	add.w	sl, sl, #16
 800ae74:	d1c7      	bne.n	800ae06 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800ae76:	4952      	ldr	r1, [pc, #328]	; (800afc0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800ae78:	a803      	add	r0, sp, #12
 800ae7a:	f007 f945 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800ae7e:	2500      	movs	r5, #0
 800ae80:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800ae84:	4e4f      	ldr	r6, [pc, #316]	; (800afc4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800ae86:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800afc8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800ae8a:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800afcc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800ae8e:	f104 0714 	add.w	r7, r4, #20
 800ae92:	6861      	ldr	r1, [r4, #4]
 800ae94:	fa0a f305 	lsl.w	r3, sl, r5
 800ae98:	f817 2b01 	ldrb.w	r2, [r7], #1
 800ae9c:	438b      	bics	r3, r1
 800ae9e:	bf0c      	ite	eq
 800aea0:	2301      	moveq	r3, #1
 800aea2:	2300      	movne	r3, #0
 800aea4:	4631      	mov	r1, r6
 800aea6:	2a00      	cmp	r2, #0
 800aea8:	bf0c      	ite	eq
 800aeaa:	464a      	moveq	r2, r9
 800aeac:	4642      	movne	r2, r8
 800aeae:	a803      	add	r0, sp, #12
 800aeb0:	3501      	adds	r5, #1
 800aeb2:	f7ff fdf3 	bl	800aa9c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800aeb6:	2d04      	cmp	r5, #4
 800aeb8:	f106 0612 	add.w	r6, r6, #18
 800aebc:	d1e9      	bne.n	800ae92 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 800aebe:	4944      	ldr	r1, [pc, #272]	; (800afd0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800aec0:	a803      	add	r0, sp, #12
 800aec2:	f007 f921 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800aec6:	2600      	movs	r6, #0
 800aec8:	f8df a108 	ldr.w	sl, [pc, #264]	; 800afd4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800aecc:	4f39      	ldr	r7, [pc, #228]	; (800afb4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800aece:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800afb8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800aed2:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800afbc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800aed6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800aeda:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aede:	42ab      	cmp	r3, r5
 800aee0:	d229      	bcs.n	800af36 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800aee2:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800aee6:	9803      	ldr	r0, [sp, #12]
 800aee8:	1aed      	subs	r5, r5, r3
 800aeea:	4418      	add	r0, r3
 800aeec:	f104 031f 	add.w	r3, r4, #31
 800aef0:	5d9a      	ldrb	r2, [r3, r6]
 800aef2:	6863      	ldr	r3, [r4, #4]
 800aef4:	40b1      	lsls	r1, r6
 800aef6:	ea31 0303 	bics.w	r3, r1, r3
 800aefa:	f89d c014 	ldrb.w	ip, [sp, #20]
 800aefe:	d00a      	beq.n	800af16 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800af00:	f1bc 0f00 	cmp.w	ip, #0
 800af04:	d10a      	bne.n	800af1c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800af06:	9200      	str	r2, [sp, #0]
 800af08:	4653      	mov	r3, sl
 800af0a:	464a      	mov	r2, r9
 800af0c:	e009      	b.n	800af22 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800af0e:	9200      	str	r2, [sp, #0]
 800af10:	4653      	mov	r3, sl
 800af12:	4642      	mov	r2, r8
 800af14:	e7a0      	b.n	800ae58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800af16:	f1bc 0f00 	cmp.w	ip, #0
 800af1a:	d03d      	beq.n	800af98 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800af1c:	9200      	str	r2, [sp, #0]
 800af1e:	4653      	mov	r3, sl
 800af20:	463a      	mov	r2, r7
 800af22:	4629      	mov	r1, r5
 800af24:	f008 fbc4 	bl	80136b0 <snprintf>
 800af28:	4285      	cmp	r5, r0
 800af2a:	bfa2      	ittt	ge
 800af2c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800af30:	18c0      	addge	r0, r0, r3
 800af32:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800af36:	3601      	adds	r6, #1
 800af38:	2e04      	cmp	r6, #4
 800af3a:	f10a 0a12 	add.w	sl, sl, #18
 800af3e:	d1ca      	bne.n	800aed6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x136>
 800af40:	4925      	ldr	r1, [pc, #148]	; (800afd8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800af42:	a803      	add	r0, sp, #12
 800af44:	f007 f8e0 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800af48:	6862      	ldr	r2, [r4, #4]
 800af4a:	4924      	ldr	r1, [pc, #144]	; (800afdc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800af4c:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800af50:	a803      	add	r0, sp, #12
 800af52:	f7ff fdcb 	bl	800aaec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af56:	6862      	ldr	r2, [r4, #4]
 800af58:	4921      	ldr	r1, [pc, #132]	; (800afe0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800af5a:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800af5e:	a803      	add	r0, sp, #12
 800af60:	f7ff fdc4 	bl	800aaec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800af64:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800af68:	b17b      	cbz	r3, 800af8a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800af6a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af6e:	9b03      	ldr	r3, [sp, #12]
 800af70:	4413      	add	r3, r2
 800af72:	227d      	movs	r2, #125	; 0x7d
 800af74:	f803 2c01 	strb.w	r2, [r3, #-1]
 800af78:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af7c:	9903      	ldr	r1, [sp, #12]
 800af7e:	54ca      	strb	r2, [r1, r3]
 800af80:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800af84:	3301      	adds	r3, #1
 800af86:	f8ad 3012 	strh.w	r3, [sp, #18]
 800af8a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800af8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800af90:	601a      	str	r2, [r3, #0]
 800af92:	b006      	add	sp, #24
 800af94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800af98:	9200      	str	r2, [sp, #0]
 800af9a:	4653      	mov	r3, sl
 800af9c:	4642      	mov	r2, r8
 800af9e:	e7c0      	b.n	800af22 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800afa0:	08016cc6 	stmdaeq	r1, {r1, r2, r6, r7, sl, fp, sp, lr}
 800afa4:	08017ccb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, fp, ip, sp, lr}
 800afa8:	08016c16 	stmdaeq	r1, {r1, r2, r4, sl, fp, sp, lr}
 800afac:	08016c1c 	stmdaeq	r1, {r2, r3, r4, sl, fp, sp, lr}
 800afb0:	08017b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp, lr}
 800afb4:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 800afb8:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}
 800afbc:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 800afc0:	08016c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, sp, lr}
 800afc4:	08017c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, ip, sp, lr}
 800afc8:	08016c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, sp, lr}
 800afcc:	08016c27 	stmdaeq	r1, {r0, r1, r2, r5, sl, fp, sp, lr}
 800afd0:	08016c36 	stmdaeq	r1, {r1, r2, r4, r5, sl, fp, sp, lr}
 800afd4:	08016c7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, fp, sp, lr}
 800afd8:	08016c40 	stmdaeq	r1, {r6, sl, fp, sp, lr}
 800afdc:	08016c5c 	stmdaeq	r1, {r2, r3, r4, r6, sl, fp, sp, lr}
 800afe0:	08016c46 	stmdaeq	r1, {r1, r2, r6, sl, fp, sp, lr}

0800afe4 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800afe4:	b513      	push	{r0, r1, r4, lr}
 800afe6:	6804      	ldr	r4, [r0, #0]
 800afe8:	b914      	cbnz	r4, 800aff0 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800afea:	601c      	str	r4, [r3, #0]
 800afec:	b002      	add	sp, #8
 800afee:	bd10      	pop	{r4, pc}
 800aff0:	9300      	str	r3, [sp, #0]
 800aff2:	4613      	mov	r3, r2
 800aff4:	460a      	mov	r2, r1
 800aff6:	2100      	movs	r1, #0
 800aff8:	f7ff fed2 	bl	800ada0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800affc:	e7f6      	b.n	800afec <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800affe <E131Params::Set(E131Bridge*)>:
 800affe:	6843      	ldr	r3, [r0, #4]
 800b000:	2b00      	cmp	r3, #0
 800b002:	d034      	beq.n	800b06e <E131Params::Set(E131Bridge*)+0x70>
 800b004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b008:	2300      	movs	r3, #0
 800b00a:	f44f 7680 	mov.w	r6, #256	; 0x100
 800b00e:	f04f 0e44 	mov.w	lr, #68	; 0x44
 800b012:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 800b016:	f100 0214 	add.w	r2, r0, #20
 800b01a:	f201 5c4c 	addw	ip, r1, #1356	; 0x54c
 800b01e:	6845      	ldr	r5, [r0, #4]
 800b020:	fa06 f403 	lsl.w	r4, r6, r3
 800b024:	43ac      	bics	r4, r5
 800b026:	bf02      	ittt	eq
 800b028:	fb0e f403 	muleq.w	r4, lr, r3
 800b02c:	f892 8000 	ldrbeq.w	r8, [r2]
 800b030:	f84c 8004 	streq.w	r8, [ip, r4]
 800b034:	fa07 f403 	lsl.w	r4, r7, r3
 800b038:	43ac      	bics	r4, r5
 800b03a:	d106      	bne.n	800b04a <E131Params::Set(E131Bridge*)+0x4c>
 800b03c:	7ad5      	ldrb	r5, [r2, #11]
 800b03e:	1e6c      	subs	r4, r5, #1
 800b040:	b2e4      	uxtb	r4, r4
 800b042:	2cc7      	cmp	r4, #199	; 0xc7
 800b044:	bf98      	it	ls
 800b046:	f881 5629 	strbls.w	r5, [r1, #1577]	; 0x629
 800b04a:	3301      	adds	r3, #1
 800b04c:	2b04      	cmp	r3, #4
 800b04e:	f102 0201 	add.w	r2, r2, #1
 800b052:	d1e4      	bne.n	800b01e <E131Params::Set(E131Bridge*)+0x20>
 800b054:	6843      	ldr	r3, [r0, #4]
 800b056:	04da      	lsls	r2, r3, #19
 800b058:	bf44      	itt	mi
 800b05a:	2201      	movmi	r2, #1
 800b05c:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800b060:	049b      	lsls	r3, r3, #18
 800b062:	bf44      	itt	mi
 800b064:	2301      	movmi	r3, #1
 800b066:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800b06a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b06e:	4770      	bx	lr

0800b070 <E131Params::Dump()>:
 800b070:	4770      	bx	lr

0800b072 <LLRPDevice::~LLRPDevice()>:
 800b072:	4770      	bx	lr

0800b074 <LLRPDevice::CopyUID(unsigned char*)>:
 800b074:	4770      	bx	lr

0800b076 <LLRPDevice::CopyCID(unsigned char*)>:
 800b076:	4770      	bx	lr

0800b078 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800b078:	2000      	movs	r0, #0
 800b07a:	4770      	bx	lr

0800b07c <LLRPDevice::~LLRPDevice()>:
 800b07c:	b510      	push	{r4, lr}
 800b07e:	4604      	mov	r4, r0
 800b080:	f007 fe90 	bl	8012da4 <operator delete(void*)>
 800b084:	4620      	mov	r0, r4
 800b086:	bd10      	pop	{r4, pc}

0800b088 <memcpy.isra.0>:
 800b088:	3801      	subs	r0, #1
 800b08a:	440a      	add	r2, r1
 800b08c:	4291      	cmp	r1, r2
 800b08e:	d004      	beq.n	800b09a <memcpy.isra.0+0x12>
 800b090:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b094:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b098:	e7f8      	b.n	800b08c <memcpy.isra.0+0x4>
 800b09a:	4770      	bx	lr

0800b09c <LLRPDevice::LLRPDevice()>:
 800b09c:	b513      	push	{r0, r1, r4, lr}
 800b09e:	4604      	mov	r4, r0
 800b0a0:	4b09      	ldr	r3, [pc, #36]	; (800b0c8 <LLRPDevice::LLRPDevice()+0x2c>)
 800b0a2:	a901      	add	r1, sp, #4
 800b0a4:	6003      	str	r3, [r0, #0]
 800b0a6:	4809      	ldr	r0, [pc, #36]	; (800b0cc <LLRPDevice::LLRPDevice()+0x30>)
 800b0a8:	f007 fe9a 	bl	8012de0 <inet_aton>
 800b0ac:	9a01      	ldr	r2, [sp, #4]
 800b0ae:	4b08      	ldr	r3, [pc, #32]	; (800b0d0 <LLRPDevice::LLRPDevice()+0x34>)
 800b0b0:	a901      	add	r1, sp, #4
 800b0b2:	4808      	ldr	r0, [pc, #32]	; (800b0d4 <LLRPDevice::LLRPDevice()+0x38>)
 800b0b4:	601a      	str	r2, [r3, #0]
 800b0b6:	f007 fe93 	bl	8012de0 <inet_aton>
 800b0ba:	4620      	mov	r0, r4
 800b0bc:	4b06      	ldr	r3, [pc, #24]	; (800b0d8 <LLRPDevice::LLRPDevice()+0x3c>)
 800b0be:	9a01      	ldr	r2, [sp, #4]
 800b0c0:	601a      	str	r2, [r3, #0]
 800b0c2:	b002      	add	sp, #8
 800b0c4:	bd10      	pop	{r4, pc}
 800b0c6:	bf00      	nop
 800b0c8:	08016d8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, sp, lr}
 800b0cc:	08016cdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, fp, sp, lr}
 800b0d0:	2000194c 	andcs	r1, r0, ip, asr #18
 800b0d4:	08016ced 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl, fp, sp, lr}
 800b0d8:	20001950 	andcs	r1, r0, r0, asr r9

0800b0dc <LLRPDevice::HandleRequestMessage()>:
 800b0dc:	b570      	push	{r4, r5, r6, lr}
 800b0de:	4b23      	ldr	r3, [pc, #140]	; (800b16c <LLRPDevice::HandleRequestMessage()+0x90>)
 800b0e0:	b086      	sub	sp, #24
 800b0e2:	681c      	ldr	r4, [r3, #0]
 800b0e4:	4605      	mov	r5, r0
 800b0e6:	f104 0617 	add.w	r6, r4, #23
 800b0ea:	2210      	movs	r2, #16
 800b0ec:	4631      	mov	r1, r6
 800b0ee:	a802      	add	r0, sp, #8
 800b0f0:	f7ff ffca 	bl	800b088 <memcpy.isra.0>
 800b0f4:	2343      	movs	r3, #67	; 0x43
 800b0f6:	74a3      	strb	r3, [r4, #18]
 800b0f8:	682b      	ldr	r3, [r5, #0]
 800b0fa:	4631      	mov	r1, r6
 800b0fc:	4628      	mov	r0, r5
 800b0fe:	68db      	ldr	r3, [r3, #12]
 800b100:	4798      	blx	r3
 800b102:	232c      	movs	r3, #44	; 0x2c
 800b104:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b108:	2300      	movs	r3, #0
 800b10a:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800b10e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800b112:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b116:	2302      	movs	r3, #2
 800b118:	2210      	movs	r2, #16
 800b11a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800b11e:	a902      	add	r1, sp, #8
 800b120:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b124:	f7ff ffb0 	bl	800b088 <memcpy.isra.0>
 800b128:	2311      	movs	r3, #17
 800b12a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b12e:	2301      	movs	r3, #1
 800b130:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b134:	682b      	ldr	r3, [r5, #0]
 800b136:	4628      	mov	r0, r5
 800b138:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800b13c:	689b      	ldr	r3, [r3, #8]
 800b13e:	4798      	blx	r3
 800b140:	4b0b      	ldr	r3, [pc, #44]	; (800b170 <LLRPDevice::HandleRequestMessage()+0x94>)
 800b142:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800b146:	6818      	ldr	r0, [r3, #0]
 800b148:	f005 f804 	bl	8010154 <Network::MacAddressCopyTo(unsigned char*)>
 800b14c:	23ff      	movs	r3, #255	; 0xff
 800b14e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800b152:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b156:	4807      	ldr	r0, [pc, #28]	; (800b174 <LLRPDevice::HandleRequestMessage()+0x98>)
 800b158:	9300      	str	r3, [sp, #0]
 800b15a:	4b07      	ldr	r3, [pc, #28]	; (800b178 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800b15c:	2253      	movs	r2, #83	; 0x53
 800b15e:	4621      	mov	r1, r4
 800b160:	681b      	ldr	r3, [r3, #0]
 800b162:	7800      	ldrb	r0, [r0, #0]
 800b164:	f004 fb20 	bl	800f7a8 <udp_send>
 800b168:	b006      	add	sp, #24
 800b16a:	bd70      	pop	{r4, r5, r6, pc}
 800b16c:	20001954 	andcs	r1, r0, r4, asr r9
 800b170:	20011ec0 	andcs	r1, r1, r0, asr #29
 800b174:	20000000 	andcs	r0, r0, r0
 800b178:	20001950 	andcs	r1, r0, r0, asr r9

0800b17c <LLRPDevice::HandleRdmCommand()>:
 800b17c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b180:	4b22      	ldr	r3, [pc, #136]	; (800b20c <LLRPDevice::HandleRdmCommand()+0x90>)
 800b182:	b086      	sub	sp, #24
 800b184:	681c      	ldr	r4, [r3, #0]
 800b186:	6803      	ldr	r3, [r0, #0]
 800b188:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800b18c:	4649      	mov	r1, r9
 800b18e:	691b      	ldr	r3, [r3, #16]
 800b190:	4607      	mov	r7, r0
 800b192:	4798      	blx	r3
 800b194:	4605      	mov	r5, r0
 800b196:	2800      	cmp	r0, #0
 800b198:	d034      	beq.n	800b204 <LLRPDevice::HandleRdmCommand()+0x88>
 800b19a:	7803      	ldrb	r3, [r0, #0]
 800b19c:	2bcc      	cmp	r3, #204	; 0xcc
 800b19e:	d131      	bne.n	800b204 <LLRPDevice::HandleRdmCommand()+0x88>
 800b1a0:	f104 0a17 	add.w	sl, r4, #23
 800b1a4:	2210      	movs	r2, #16
 800b1a6:	4651      	mov	r1, sl
 800b1a8:	a802      	add	r0, sp, #8
 800b1aa:	f7ff ff6d 	bl	800b088 <memcpy.isra.0>
 800b1ae:	78ae      	ldrb	r6, [r5, #2]
 800b1b0:	4651      	mov	r1, sl
 800b1b2:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800b1b6:	fa5f f888 	uxtb.w	r8, r8
 800b1ba:	f884 8012 	strb.w	r8, [r4, #18]
 800b1be:	683b      	ldr	r3, [r7, #0]
 800b1c0:	4638      	mov	r0, r7
 800b1c2:	68db      	ldr	r3, [r3, #12]
 800b1c4:	4798      	blx	r3
 800b1c6:	f106 0320 	add.w	r3, r6, #32
 800b1ca:	2210      	movs	r2, #16
 800b1cc:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b1d0:	a902      	add	r1, sp, #8
 800b1d2:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b1d6:	f7ff ff57 	bl	800b088 <memcpy.isra.0>
 800b1da:	1d73      	adds	r3, r6, #5
 800b1dc:	1c72      	adds	r2, r6, #1
 800b1de:	4648      	mov	r0, r9
 800b1e0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b1e4:	b2d2      	uxtb	r2, r2
 800b1e6:	1c69      	adds	r1, r5, #1
 800b1e8:	f7ff ff4e 	bl	800b088 <memcpy.isra.0>
 800b1ec:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b1f0:	4807      	ldr	r0, [pc, #28]	; (800b210 <LLRPDevice::HandleRdmCommand()+0x94>)
 800b1f2:	9300      	str	r3, [sp, #0]
 800b1f4:	4b07      	ldr	r3, [pc, #28]	; (800b214 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b1f6:	4621      	mov	r1, r4
 800b1f8:	681b      	ldr	r3, [r3, #0]
 800b1fa:	7800      	ldrb	r0, [r0, #0]
 800b1fc:	f108 0210 	add.w	r2, r8, #16
 800b200:	f004 fad2 	bl	800f7a8 <udp_send>
 800b204:	b006      	add	sp, #24
 800b206:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b20a:	bf00      	nop
 800b20c:	20001954 	andcs	r1, r0, r4, asr r9
 800b210:	20000000 	andcs	r0, r0, r0
 800b214:	20001950 	andcs	r1, r0, r0, asr r9

0800b218 <LLRPDevice::Run()>:
 800b218:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b21a:	4604      	mov	r4, r0
 800b21c:	4d0e      	ldr	r5, [pc, #56]	; (800b258 <LLRPDevice::Run()+0x40>)
 800b21e:	480f      	ldr	r0, [pc, #60]	; (800b25c <LLRPDevice::Run()+0x44>)
 800b220:	4629      	mov	r1, r5
 800b222:	4a0f      	ldr	r2, [pc, #60]	; (800b260 <LLRPDevice::Run()+0x48>)
 800b224:	7800      	ldrb	r0, [r0, #0]
 800b226:	f10d 0306 	add.w	r3, sp, #6
 800b22a:	f004 fa97 	bl	800f75c <udp_recv2>
 800b22e:	2841      	cmp	r0, #65	; 0x41
 800b230:	d908      	bls.n	800b244 <LLRPDevice::Run()+0x2c>
 800b232:	682b      	ldr	r3, [r5, #0]
 800b234:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800b238:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b23c:	ba1a      	rev	r2, r3
 800b23e:	d003      	beq.n	800b248 <LLRPDevice::Run()+0x30>
 800b240:	2a03      	cmp	r2, #3
 800b242:	d005      	beq.n	800b250 <LLRPDevice::Run()+0x38>
 800b244:	b003      	add	sp, #12
 800b246:	bd30      	pop	{r4, r5, pc}
 800b248:	4620      	mov	r0, r4
 800b24a:	f7ff ff47 	bl	800b0dc <LLRPDevice::HandleRequestMessage()>
 800b24e:	e7f9      	b.n	800b244 <LLRPDevice::Run()+0x2c>
 800b250:	4620      	mov	r0, r4
 800b252:	f7ff ff93 	bl	800b17c <LLRPDevice::HandleRdmCommand()>
 800b256:	e7f5      	b.n	800b244 <LLRPDevice::Run()+0x2c>
 800b258:	20001954 	andcs	r1, r0, r4, asr r9
 800b25c:	20000000 	andcs	r0, r0, r0
 800b260:	20001948 	andcs	r1, r0, r8, asr #18

0800b264 <LLRPDevice::Print()>:
 800b264:	b507      	push	{r0, r1, r2, lr}
 800b266:	4811      	ldr	r0, [pc, #68]	; (800b2ac <LLRPDevice::Print()+0x48>)
 800b268:	f008 f9fa 	bl	8013660 <printf>
 800b26c:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800b270:	480f      	ldr	r0, [pc, #60]	; (800b2b0 <LLRPDevice::Print()+0x4c>)
 800b272:	f008 f9f5 	bl	8013660 <printf>
 800b276:	4b0f      	ldr	r3, [pc, #60]	; (800b2b4 <LLRPDevice::Print()+0x50>)
 800b278:	480f      	ldr	r0, [pc, #60]	; (800b2b8 <LLRPDevice::Print()+0x54>)
 800b27a:	6819      	ldr	r1, [r3, #0]
 800b27c:	0e0b      	lsrs	r3, r1, #24
 800b27e:	9300      	str	r3, [sp, #0]
 800b280:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b284:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b288:	b2c9      	uxtb	r1, r1
 800b28a:	f008 f9e9 	bl	8013660 <printf>
 800b28e:	4b0b      	ldr	r3, [pc, #44]	; (800b2bc <LLRPDevice::Print()+0x58>)
 800b290:	480b      	ldr	r0, [pc, #44]	; (800b2c0 <LLRPDevice::Print()+0x5c>)
 800b292:	6819      	ldr	r1, [r3, #0]
 800b294:	0e0b      	lsrs	r3, r1, #24
 800b296:	9300      	str	r3, [sp, #0]
 800b298:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b29c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b2a0:	b2c9      	uxtb	r1, r1
 800b2a2:	f008 f9dd 	bl	8013660 <printf>
 800b2a6:	b003      	add	sp, #12
 800b2a8:	f85d fb04 	ldr.w	pc, [sp], #4
 800b2ac:	08016cfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, lr}
 800b2b0:	08016d18 	stmdaeq	r1, {r3, r4, r8, sl, fp, sp, lr}
 800b2b4:	2000194c 	andcs	r1, r0, ip, asr #18
 800b2b8:	08016d36 	stmdaeq	r1, {r1, r2, r4, r5, r8, sl, fp, sp, lr}
 800b2bc:	20001950 	andcs	r1, r0, r0, asr r9
 800b2c0:	08016d5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp, sp, lr}

0800b2c4 <RDMNetDevice::Print()>:
 800b2c4:	2300      	movs	r3, #0
 800b2c6:	b510      	push	{r4, lr}
 800b2c8:	4604      	mov	r4, r0
 800b2ca:	b08a      	sub	sp, #40	; 0x28
 800b2cc:	4669      	mov	r1, sp
 800b2ce:	480a      	ldr	r0, [pc, #40]	; (800b2f8 <RDMNetDevice::Print()+0x34>)
 800b2d0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b2d4:	f001 f950 	bl	800c578 <uuid_unparse>
 800b2d8:	4808      	ldr	r0, [pc, #32]	; (800b2fc <RDMNetDevice::Print()+0x38>)
 800b2da:	f008 f9c1 	bl	8013660 <printf>
 800b2de:	4669      	mov	r1, sp
 800b2e0:	4807      	ldr	r0, [pc, #28]	; (800b300 <RDMNetDevice::Print()+0x3c>)
 800b2e2:	f008 f9bd 	bl	8013660 <printf>
 800b2e6:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800b2ea:	f7ff ffbb 	bl	800b264 <LLRPDevice::Print()>
 800b2ee:	4620      	mov	r0, r4
 800b2f0:	f000 fa64 	bl	800b7bc <RDMDeviceResponder::Print()>
 800b2f4:	b00a      	add	sp, #40	; 0x28
 800b2f6:	bd10      	pop	{r4, pc}
 800b2f8:	20001a57 	andcs	r1, r0, r7, asr sl
 800b2fc:	08016da0 	stmdaeq	r1, {r5, r7, r8, sl, fp, sp, lr}
 800b300:	08016da8 	stmdaeq	r1, {r3, r5, r7, r8, sl, fp, sp, lr}

0800b304 <RDMSensors::RDMSensors()>:
 800b304:	2200      	movs	r2, #0
 800b306:	6002      	str	r2, [r0, #0]
 800b308:	7102      	strb	r2, [r0, #4]
 800b30a:	4a01      	ldr	r2, [pc, #4]	; (800b310 <RDMSensors::RDMSensors()+0xc>)
 800b30c:	6010      	str	r0, [r2, #0]
 800b30e:	4770      	bx	lr
 800b310:	20001a68 	andcs	r1, r0, r8, ror #20

0800b314 <RDMSensors::~RDMSensors()>:
 800b314:	b570      	push	{r4, r5, r6, lr}
 800b316:	2500      	movs	r5, #0
 800b318:	4604      	mov	r4, r0
 800b31a:	462e      	mov	r6, r5
 800b31c:	7923      	ldrb	r3, [r4, #4]
 800b31e:	6820      	ldr	r0, [r4, #0]
 800b320:	42ab      	cmp	r3, r5
 800b322:	d90a      	bls.n	800b33a <RDMSensors::~RDMSensors()+0x26>
 800b324:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b328:	b128      	cbz	r0, 800b336 <RDMSensors::~RDMSensors()+0x22>
 800b32a:	6803      	ldr	r3, [r0, #0]
 800b32c:	685b      	ldr	r3, [r3, #4]
 800b32e:	4798      	blx	r3
 800b330:	6823      	ldr	r3, [r4, #0]
 800b332:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800b336:	3501      	adds	r5, #1
 800b338:	e7f0      	b.n	800b31c <RDMSensors::~RDMSensors()+0x8>
 800b33a:	b108      	cbz	r0, 800b340 <RDMSensors::~RDMSensors()+0x2c>
 800b33c:	f007 fd34 	bl	8012da8 <operator delete[](void*)>
 800b340:	4620      	mov	r0, r4
 800b342:	bd70      	pop	{r4, r5, r6, pc}

0800b344 <RDMSubDevices::RDMSubDevices()>:
 800b344:	2200      	movs	r2, #0
 800b346:	6002      	str	r2, [r0, #0]
 800b348:	8082      	strh	r2, [r0, #4]
 800b34a:	4a01      	ldr	r2, [pc, #4]	; (800b350 <RDMSubDevices::RDMSubDevices()+0xc>)
 800b34c:	6010      	str	r0, [r2, #0]
 800b34e:	4770      	bx	lr
 800b350:	20001a6c 	andcs	r1, r0, ip, ror #20

0800b354 <RDMSubDevices::~RDMSubDevices()>:
 800b354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b356:	2500      	movs	r5, #0
 800b358:	4604      	mov	r4, r0
 800b35a:	462f      	mov	r7, r5
 800b35c:	88a3      	ldrh	r3, [r4, #4]
 800b35e:	6820      	ldr	r0, [r4, #0]
 800b360:	42ab      	cmp	r3, r5
 800b362:	d90a      	bls.n	800b37a <RDMSubDevices::~RDMSubDevices()+0x26>
 800b364:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b368:	00ae      	lsls	r6, r5, #2
 800b36a:	b110      	cbz	r0, 800b372 <RDMSubDevices::~RDMSubDevices()+0x1e>
 800b36c:	6803      	ldr	r3, [r0, #0]
 800b36e:	685b      	ldr	r3, [r3, #4]
 800b370:	4798      	blx	r3
 800b372:	6823      	ldr	r3, [r4, #0]
 800b374:	3501      	adds	r5, #1
 800b376:	519f      	str	r7, [r3, r6]
 800b378:	e7f0      	b.n	800b35c <RDMSubDevices::~RDMSubDevices()+0x8>
 800b37a:	b108      	cbz	r0, 800b380 <RDMSubDevices::~RDMSubDevices()+0x2c>
 800b37c:	f007 fd14 	bl	8012da8 <operator delete[](void*)>
 800b380:	4620      	mov	r0, r4
 800b382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800b384 <RDMSubDevices::GetInfo(unsigned short)>:
 800b384:	6803      	ldr	r3, [r0, #0]
 800b386:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b38a:	3901      	subs	r1, #1
 800b38c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800b390:	3010      	adds	r0, #16
 800b392:	4770      	bx	lr

0800b394 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800b394:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800b398:	6800      	ldr	r0, [r0, #0]
 800b39a:	3b01      	subs	r3, #1
 800b39c:	4611      	mov	r1, r2
 800b39e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800b3a2:	f000 b82f 	b.w	800b404 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800b3a6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800b3a6:	b410      	push	{r4}
 800b3a8:	460c      	mov	r4, r1
 800b3aa:	6800      	ldr	r0, [r0, #0]
 800b3ac:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800b3b0:	3c01      	subs	r4, #1
 800b3b2:	4611      	mov	r1, r2
 800b3b4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b3b8:	461a      	mov	r2, r3
 800b3ba:	bc10      	pop	{r4}
 800b3bc:	f000 b837 	b.w	800b42e <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800b3c0 <RDMSubDevices::GetFactoryDefaults()>:
 800b3c0:	b538      	push	{r3, r4, r5, lr}
 800b3c2:	4605      	mov	r5, r0
 800b3c4:	2400      	movs	r4, #0
 800b3c6:	88ab      	ldrh	r3, [r5, #4]
 800b3c8:	42a3      	cmp	r3, r4
 800b3ca:	d90a      	bls.n	800b3e2 <RDMSubDevices::GetFactoryDefaults()+0x22>
 800b3cc:	682b      	ldr	r3, [r5, #0]
 800b3ce:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b3d2:	b908      	cbnz	r0, 800b3d8 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800b3d4:	3401      	adds	r4, #1
 800b3d6:	e7f6      	b.n	800b3c6 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800b3d8:	f000 f85e 	bl	800b498 <RDMSubDevice::GetFactoryDefaults()>
 800b3dc:	2800      	cmp	r0, #0
 800b3de:	d1f9      	bne.n	800b3d4 <RDMSubDevices::GetFactoryDefaults()+0x14>
 800b3e0:	bd38      	pop	{r3, r4, r5, pc}
 800b3e2:	2001      	movs	r0, #1
 800b3e4:	e7fc      	b.n	800b3e0 <RDMSubDevices::GetFactoryDefaults()+0x20>

0800b3e6 <RDMSubDevices::SetFactoryDefaults()>:
 800b3e6:	b538      	push	{r3, r4, r5, lr}
 800b3e8:	4605      	mov	r5, r0
 800b3ea:	2400      	movs	r4, #0
 800b3ec:	88ab      	ldrh	r3, [r5, #4]
 800b3ee:	42a3      	cmp	r3, r4
 800b3f0:	d907      	bls.n	800b402 <RDMSubDevices::SetFactoryDefaults()+0x1c>
 800b3f2:	682b      	ldr	r3, [r5, #0]
 800b3f4:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b3f8:	b108      	cbz	r0, 800b3fe <RDMSubDevices::SetFactoryDefaults()+0x18>
 800b3fa:	f000 f827 	bl	800b44c <RDMSubDevice::SetFactoryDefaults()>
 800b3fe:	3401      	adds	r4, #1
 800b400:	e7f4      	b.n	800b3ec <RDMSubDevices::SetFactoryDefaults()+0x6>
 800b402:	bd38      	pop	{r3, r4, r5, pc}

0800b404 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800b404:	f100 0316 	add.w	r3, r0, #22
 800b408:	600b      	str	r3, [r1, #0]
 800b40a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b40e:	710b      	strb	r3, [r1, #4]
 800b410:	4770      	bx	lr

0800b412 <RDMSubDevice::SetLabel(char const*)>:
 800b412:	2300      	movs	r3, #0
 800b414:	b510      	push	{r4, lr}
 800b416:	f100 0216 	add.w	r2, r0, #22
 800b41a:	5ccc      	ldrb	r4, [r1, r3]
 800b41c:	b124      	cbz	r4, 800b428 <RDMSubDevice::SetLabel(char const*)+0x16>
 800b41e:	3301      	adds	r3, #1
 800b420:	2b20      	cmp	r3, #32
 800b422:	f802 4b01 	strb.w	r4, [r2], #1
 800b426:	d1f8      	bne.n	800b41a <RDMSubDevice::SetLabel(char const*)+0x8>
 800b428:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b42c:	bd10      	pop	{r4, pc}

0800b42e <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800b42e:	2300      	movs	r3, #0
 800b430:	b530      	push	{r4, r5, lr}
 800b432:	f100 0416 	add.w	r4, r0, #22
 800b436:	429a      	cmp	r2, r3
 800b438:	d905      	bls.n	800b446 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800b43a:	5ccd      	ldrb	r5, [r1, r3]
 800b43c:	3301      	adds	r3, #1
 800b43e:	2b20      	cmp	r3, #32
 800b440:	f804 5b01 	strb.w	r5, [r4], #1
 800b444:	d1f7      	bne.n	800b436 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800b446:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b44a:	bd30      	pop	{r4, r5, pc}

0800b44c <RDMSubDevice::SetFactoryDefaults()>:
 800b44c:	7a03      	ldrb	r3, [r0, #8]
 800b44e:	b510      	push	{r4, lr}
 800b450:	b94b      	cbnz	r3, 800b466 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800b452:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800b456:	f7ff ffdc 	bl	800b412 <RDMSubDevice::SetLabel(char const*)>
 800b45a:	8983      	ldrh	r3, [r0, #12]
 800b45c:	8243      	strh	r3, [r0, #18]
 800b45e:	7b83      	ldrb	r3, [r0, #14]
 800b460:	7503      	strb	r3, [r0, #20]
 800b462:	2301      	movs	r3, #1
 800b464:	7203      	strb	r3, [r0, #8]
 800b466:	bd10      	pop	{r4, pc}

0800b468 <RDMSubDevice::CalculateChecksum()>:
 800b468:	4602      	mov	r2, r0
 800b46a:	b510      	push	{r4, lr}
 800b46c:	8a43      	ldrh	r3, [r0, #18]
 800b46e:	7d00      	ldrb	r0, [r0, #20]
 800b470:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800b474:	4403      	add	r3, r0
 800b476:	b298      	uxth	r0, r3
 800b478:	f102 0316 	add.w	r3, r2, #22
 800b47c:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b480:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b484:	32ea      	adds	r2, #234	; 0xea
 800b486:	18d1      	adds	r1, r2, r3
 800b488:	428c      	cmp	r4, r1
 800b48a:	d904      	bls.n	800b496 <RDMSubDevice::CalculateChecksum()+0x2e>
 800b48c:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b490:	4408      	add	r0, r1
 800b492:	b280      	uxth	r0, r0
 800b494:	e7f7      	b.n	800b486 <RDMSubDevice::CalculateChecksum()+0x1e>
 800b496:	bd10      	pop	{r4, pc}

0800b498 <RDMSubDevice::GetFactoryDefaults()>:
 800b498:	7a03      	ldrb	r3, [r0, #8]
 800b49a:	b510      	push	{r4, lr}
 800b49c:	4604      	mov	r4, r0
 800b49e:	b133      	cbz	r3, 800b4ae <RDMSubDevice::GetFactoryDefaults()+0x16>
 800b4a0:	f7ff ffe2 	bl	800b468 <RDMSubDevice::CalculateChecksum()>
 800b4a4:	8963      	ldrh	r3, [r4, #10]
 800b4a6:	4283      	cmp	r3, r0
 800b4a8:	bf1c      	itt	ne
 800b4aa:	2300      	movne	r3, #0
 800b4ac:	7223      	strbne	r3, [r4, #8]
 800b4ae:	7a20      	ldrb	r0, [r4, #8]
 800b4b0:	bd10      	pop	{r4, pc}

0800b4b2 <memcpy.isra.0>:
 800b4b2:	f007 bd83 	b.w	8012fbc <memcpy>
	...

0800b4b8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800b4b8:	b510      	push	{r4, lr}
 800b4ba:	6001      	str	r1, [r0, #0]
 800b4bc:	2100      	movs	r1, #0
 800b4be:	4604      	mov	r4, r0
 800b4c0:	6041      	str	r1, [r0, #4]
 800b4c2:	2220      	movs	r2, #32
 800b4c4:	3008      	adds	r0, #8
 800b4c6:	f007 fd9b 	bl	8013000 <memset>
 800b4ca:	4b03      	ldr	r3, [pc, #12]	; (800b4d8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800b4cc:	4620      	mov	r0, r4
 800b4ce:	62a3      	str	r3, [r4, #40]	; 0x28
 800b4d0:	237f      	movs	r3, #127	; 0x7f
 800b4d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b4d6:	bd10      	pop	{r4, pc}
 800b4d8:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800b4dc <RDMDeviceParams::Load()>:
 800b4dc:	4601      	mov	r1, r0
 800b4de:	6800      	ldr	r0, [r0, #0]
 800b4e0:	b130      	cbz	r0, 800b4f0 <RDMDeviceParams::Load()+0x14>
 800b4e2:	b508      	push	{r3, lr}
 800b4e4:	6803      	ldr	r3, [r0, #0]
 800b4e6:	3104      	adds	r1, #4
 800b4e8:	68db      	ldr	r3, [r3, #12]
 800b4ea:	4798      	blx	r3
 800b4ec:	2001      	movs	r0, #1
 800b4ee:	bd08      	pop	{r3, pc}
 800b4f0:	4770      	bx	lr

0800b4f2 <RDMDeviceParams::Set(RDMDevice*)>:
 800b4f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b4f4:	6843      	ldr	r3, [r0, #4]
 800b4f6:	460c      	mov	r4, r1
 800b4f8:	07d9      	lsls	r1, r3, #31
 800b4fa:	4605      	mov	r5, r0
 800b4fc:	d518      	bpl.n	800b530 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b4fe:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800b502:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800b506:	2e20      	cmp	r6, #32
 800b508:	bf28      	it	cs
 800b50a:	2620      	movcs	r6, #32
 800b50c:	f100 0108 	add.w	r1, r0, #8
 800b510:	b1e3      	cbz	r3, 800b54c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800b512:	f104 070a 	add.w	r7, r4, #10
 800b516:	4638      	mov	r0, r7
 800b518:	4632      	mov	r2, r6
 800b51a:	f7ff ffca 	bl	800b4b2 <memcpy.isra.0>
 800b51e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800b520:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800b524:	b120      	cbz	r0, 800b530 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b526:	6803      	ldr	r3, [r0, #0]
 800b528:	4632      	mov	r2, r6
 800b52a:	4639      	mov	r1, r7
 800b52c:	689b      	ldr	r3, [r3, #8]
 800b52e:	4798      	blx	r3
 800b530:	686b      	ldr	r3, [r5, #4]
 800b532:	079a      	lsls	r2, r3, #30
 800b534:	bf44      	itt	mi
 800b536:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800b53a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800b53e:	075b      	lsls	r3, r3, #29
 800b540:	bf44      	itt	mi
 800b542:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800b546:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800b54a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b54c:	4632      	mov	r2, r6
 800b54e:	f104 0053 	add.w	r0, r4, #83	; 0x53
 800b552:	f7ff ffae 	bl	800b4b2 <memcpy.isra.0>
 800b556:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 800b55a:	e7e9      	b.n	800b530 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800b55c <RDMDeviceParams::Dump()>:
 800b55c:	4770      	bx	lr

0800b55e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b55e:	4770      	bx	lr

0800b560 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b560:	4770      	bx	lr
	...

0800b564 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b564:	b510      	push	{r4, lr}
 800b566:	4604      	mov	r4, r0
 800b568:	4b05      	ldr	r3, [pc, #20]	; (800b580 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800b56a:	f840 3b8c 	str.w	r3, [r0], #140
 800b56e:	f7ff fef1 	bl	800b354 <RDMSubDevices::~RDMSubDevices()>
 800b572:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800b576:	f7ff fecd 	bl	800b314 <RDMSensors::~RDMSensors()>
 800b57a:	4620      	mov	r0, r4
 800b57c:	bd10      	pop	{r4, pc}
 800b57e:	bf00      	nop
 800b580:	08016e8c 	stmdaeq	r1, {r2, r3, r7, r9, sl, fp, sp, lr}

0800b584 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b584:	b510      	push	{r4, lr}
 800b586:	4604      	mov	r4, r0
 800b588:	f7ff ffec 	bl	800b564 <RDMDeviceResponder::~RDMDeviceResponder()>
 800b58c:	4620      	mov	r0, r4
 800b58e:	f007 fc09 	bl	8012da4 <operator delete(void*)>
 800b592:	4620      	mov	r0, r4
 800b594:	bd10      	pop	{r4, pc}

0800b596 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800b596:	b470      	push	{r4, r5, r6}
 800b598:	790a      	ldrb	r2, [r1, #4]
 800b59a:	680b      	ldr	r3, [r1, #0]
 800b59c:	2a20      	cmp	r2, #32
 800b59e:	bf28      	it	cs
 800b5a0:	2220      	movcs	r2, #32
 800b5a2:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 800b5a6:	189c      	adds	r4, r3, r2
 800b5a8:	b189      	cbz	r1, 800b5ce <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800b5aa:	f100 010a 	add.w	r1, r0, #10
 800b5ae:	460d      	mov	r5, r1
 800b5b0:	42a3      	cmp	r3, r4
 800b5b2:	d004      	beq.n	800b5be <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x28>
 800b5b4:	f813 6b01 	ldrb.w	r6, [r3], #1
 800b5b8:	f805 6b01 	strb.w	r6, [r5], #1
 800b5bc:	e7f8      	b.n	800b5b0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800b5be:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800b5c2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800b5c4:	b170      	cbz	r0, 800b5e4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4e>
 800b5c6:	bc70      	pop	{r4, r5, r6}
 800b5c8:	6803      	ldr	r3, [r0, #0]
 800b5ca:	689b      	ldr	r3, [r3, #8]
 800b5cc:	4718      	bx	r3
 800b5ce:	f100 0153 	add.w	r1, r0, #83	; 0x53
 800b5d2:	42a3      	cmp	r3, r4
 800b5d4:	d004      	beq.n	800b5e0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 800b5d6:	f813 5b01 	ldrb.w	r5, [r3], #1
 800b5da:	f801 5b01 	strb.w	r5, [r1], #1
 800b5de:	e7f8      	b.n	800b5d2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>
 800b5e0:	f880 2073 	strb.w	r2, [r0, #115]	; 0x73
 800b5e4:	bc70      	pop	{r4, r5, r6}
 800b5e6:	4770      	bx	lr

0800b5e8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800b5e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b5ea:	4604      	mov	r4, r0
 800b5ec:	1d07      	adds	r7, r0, #4
 800b5ee:	4638      	mov	r0, r7
 800b5f0:	460e      	mov	r6, r1
 800b5f2:	4615      	mov	r5, r2
 800b5f4:	f000 fec4 	bl	800c380 <RDMDevice::RDMDevice()>
 800b5f8:	4620      	mov	r0, r4
 800b5fa:	4b27      	ldr	r3, [pc, #156]	; (800b698 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb0>)
 800b5fc:	f840 3b80 	str.w	r3, [r0], #128
 800b600:	f000 fcce 	bl	800bfa0 <RDMIdentify::RDMIdentify()>
 800b604:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800b608:	f7ff fe7c 	bl	800b304 <RDMSensors::RDMSensors()>
 800b60c:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800b610:	f7ff fe98 	bl	800b344 <RDMSubDevices::RDMSubDevices()>
 800b614:	4b21      	ldr	r3, [pc, #132]	; (800b69c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb4>)
 800b616:	2200      	movs	r2, #0
 800b618:	601c      	str	r4, [r3, #0]
 800b61a:	2365      	movs	r3, #101	; 0x65
 800b61c:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800b620:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800b624:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800b628:	2301      	movs	r3, #1
 800b62a:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800b62e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800b632:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800b636:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800b63a:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800b63e:	428b      	cmp	r3, r1
 800b640:	d002      	beq.n	800b648 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x60>
 800b642:	f803 2b01 	strb.w	r2, [r3], #1
 800b646:	e7fa      	b.n	800b63e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x56>
 800b648:	2200      	movs	r2, #0
 800b64a:	f104 01c3 	add.w	r1, r4, #195	; 0xc3
 800b64e:	428b      	cmp	r3, r1
 800b650:	d002      	beq.n	800b658 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x70>
 800b652:	f803 2b01 	strb.w	r2, [r3], #1
 800b656:	e7fa      	b.n	800b64e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x66>
 800b658:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800b65c:	f7fd f89a 	bl	8008794 <RDMSoftwareVersion::GetVersion()>
 800b660:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800b664:	f7fd f89a 	bl	800879c <RDMSoftwareVersion::GetVersionLength()>
 800b668:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800b66c:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800b670:	681b      	ldr	r3, [r3, #0]
 800b672:	685b      	ldr	r3, [r3, #4]
 800b674:	b91b      	cbnz	r3, 800b67e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x96>
 800b676:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b67a:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800b67e:	4b08      	ldr	r3, [pc, #32]	; (800b6a0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb8>)
 800b680:	4638      	mov	r0, r7
 800b682:	9300      	str	r3, [sp, #0]
 800b684:	231c      	movs	r3, #28
 800b686:	4669      	mov	r1, sp
 800b688:	f88d 3004 	strb.w	r3, [sp, #4]
 800b68c:	f7ff ff83 	bl	800b596 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b690:	4620      	mov	r0, r4
 800b692:	b003      	add	sp, #12
 800b694:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b696:	bf00      	nop
 800b698:	08016e8c 	stmdaeq	r1, {r2, r3, r7, r9, sl, fp, sp, lr}
 800b69c:	20001a70 	andcs	r1, r0, r0, ror sl
 800b6a0:	08016e67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, fp, sp, lr}

0800b6a4 <RDMDeviceResponder::Init()>:
 800b6a4:	2301      	movs	r3, #1
 800b6a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b6a8:	4604      	mov	r4, r0
 800b6aa:	f06f 050d 	mvn.w	r5, #13
 800b6ae:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800b6b2:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800b6b6:	9300      	str	r3, [sp, #0]
 800b6b8:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800b6bc:	4669      	mov	r1, sp
 800b6be:	3004      	adds	r0, #4
 800b6c0:	f88d 3004 	strb.w	r3, [sp, #4]
 800b6c4:	f7ff ff67 	bl	800b596 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b6c8:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800b6cc:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b6d0:	f104 020e 	add.w	r2, r4, #14
 800b6d4:	1b2d      	subs	r5, r5, r4
 800b6d6:	18a9      	adds	r1, r5, r2
 800b6d8:	4288      	cmp	r0, r1
 800b6da:	d904      	bls.n	800b6e6 <RDMDeviceResponder::Init()+0x42>
 800b6dc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b6e0:	440b      	add	r3, r1
 800b6e2:	b29b      	uxth	r3, r3
 800b6e4:	e7f7      	b.n	800b6d6 <RDMDeviceResponder::Init()+0x32>
 800b6e6:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800b6ea:	f7fd f859 	bl	80087a0 <RDMSoftwareVersion::GetVersionId()>
 800b6ee:	2201      	movs	r2, #1
 800b6f0:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800b6f4:	2200      	movs	r2, #0
 800b6f6:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800b6fa:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800b6fe:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800b702:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800b706:	0a1a      	lsrs	r2, r3, #8
 800b708:	0e03      	lsrs	r3, r0, #24
 800b70a:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800b70e:	0c03      	lsrs	r3, r0, #16
 800b710:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800b714:	0a03      	lsrs	r3, r0, #8
 800b716:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b71a:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800b71e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800b722:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800b726:	681b      	ldr	r3, [r3, #0]
 800b728:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800b72c:	685d      	ldr	r5, [r3, #4]
 800b72e:	bb05      	cbnz	r5, 800b772 <RDMDeviceResponder::Init()+0xce>
 800b730:	f8b4 30c8 	ldrh.w	r3, [r4, #200]	; 0xc8
 800b734:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800b738:	0a1a      	lsrs	r2, r3, #8
 800b73a:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800b73e:	f884 20ab 	strb.w	r2, [r4, #171]	; 0xab
 800b742:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
 800b746:	2301      	movs	r3, #1
 800b748:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b74c:	0a33      	lsrs	r3, r6, #8
 800b74e:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800b752:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800b756:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800b75a:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800b75e:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800b762:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800b766:	428b      	cmp	r3, r1
 800b768:	d01e      	beq.n	800b7a8 <RDMDeviceResponder::Init()+0x104>
 800b76a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b76e:	749a      	strb	r2, [r3, #18]
 800b770:	e7f9      	b.n	800b766 <RDMDeviceResponder::Init()+0xc2>
 800b772:	682b      	ldr	r3, [r5, #0]
 800b774:	4628      	mov	r0, r5
 800b776:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b778:	4798      	blx	r3
 800b77a:	0a00      	lsrs	r0, r0, #8
 800b77c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b780:	682b      	ldr	r3, [r5, #0]
 800b782:	4628      	mov	r0, r5
 800b784:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b786:	4798      	blx	r3
 800b788:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b78c:	682b      	ldr	r3, [r5, #0]
 800b78e:	4628      	mov	r0, r5
 800b790:	6a1b      	ldr	r3, [r3, #32]
 800b792:	4798      	blx	r3
 800b794:	0a00      	lsrs	r0, r0, #8
 800b796:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800b79a:	682b      	ldr	r3, [r5, #0]
 800b79c:	4628      	mov	r0, r5
 800b79e:	6a1b      	ldr	r3, [r3, #32]
 800b7a0:	4798      	blx	r3
 800b7a2:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800b7a6:	e7ce      	b.n	800b746 <RDMDeviceResponder::Init()+0xa2>
 800b7a8:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800b7ac:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800b7b0:	4413      	add	r3, r2
 800b7b2:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800b7b6:	b002      	add	sp, #8
 800b7b8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800b7bc <RDMDeviceResponder::Print()>:
 800b7bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b7be:	4604      	mov	r4, r0
 800b7c0:	3004      	adds	r0, #4
 800b7c2:	f000 fe53 	bl	800c46c <RDMDevice::Print()>
 800b7c6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800b7ca:	481d      	ldr	r0, [pc, #116]	; (800b840 <RDMDeviceResponder::Print()+0x84>)
 800b7cc:	681d      	ldr	r5, [r3, #0]
 800b7ce:	f895 6028 	ldrb.w	r6, [r5, #40]	; 0x28
 800b7d2:	f007 ff45 	bl	8013660 <printf>
 800b7d6:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800b7da:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800b7de:	4819      	ldr	r0, [pc, #100]	; (800b844 <RDMDeviceResponder::Print()+0x88>)
 800b7e0:	f007 ff3e 	bl	8013660 <printf>
 800b7e4:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800b7e8:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800b7ec:	4816      	ldr	r0, [pc, #88]	; (800b848 <RDMDeviceResponder::Print()+0x8c>)
 800b7ee:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b7f2:	f007 ff35 	bl	8013660 <printf>
 800b7f6:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b7fa:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800b7fe:	3508      	adds	r5, #8
 800b800:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b804:	4811      	ldr	r0, [pc, #68]	; (800b84c <RDMDeviceResponder::Print()+0x90>)
 800b806:	f007 ff2b 	bl	8013660 <printf>
 800b80a:	4633      	mov	r3, r6
 800b80c:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800b810:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800b814:	9500      	str	r5, [sp, #0]
 800b816:	480e      	ldr	r0, [pc, #56]	; (800b850 <RDMDeviceResponder::Print()+0x94>)
 800b818:	f007 ff22 	bl	8013660 <printf>
 800b81c:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800b820:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800b824:	480b      	ldr	r0, [pc, #44]	; (800b854 <RDMDeviceResponder::Print()+0x98>)
 800b826:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b82a:	f007 ff19 	bl	8013660 <printf>
 800b82e:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800b832:	4809      	ldr	r0, [pc, #36]	; (800b858 <RDMDeviceResponder::Print()+0x9c>)
 800b834:	b002      	add	sp, #8
 800b836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b83a:	f007 bf11 	b.w	8013660 <printf>
 800b83e:	bf00      	nop
 800b840:	08016db3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, sl, fp, sp, lr}
 800b844:	08016dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, sp, lr}
 800b848:	08016de9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, fp, sp, lr}
 800b84c:	08016e01 	stmdaeq	r1, {r0, r9, sl, fp, sp, lr}
 800b850:	08016e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, sp, lr}
 800b854:	08016e37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, fp, sp, lr}
 800b858:	08016e4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}

0800b85c <memcmp>:
 800b85c:	b510      	push	{r4, lr}
 800b85e:	3901      	subs	r1, #1
 800b860:	4402      	add	r2, r0
 800b862:	4290      	cmp	r0, r2
 800b864:	d008      	beq.n	800b878 <memcmp+0x1c>
 800b866:	7803      	ldrb	r3, [r0, #0]
 800b868:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b86c:	42a3      	cmp	r3, r4
 800b86e:	d001      	beq.n	800b874 <memcmp+0x18>
 800b870:	1b18      	subs	r0, r3, r4
 800b872:	bd10      	pop	{r4, pc}
 800b874:	3001      	adds	r0, #1
 800b876:	e7f4      	b.n	800b862 <memcmp+0x6>
 800b878:	2000      	movs	r0, #0
 800b87a:	e7fa      	b.n	800b872 <memcmp+0x16>

0800b87c <memcpy.isra.0>:
 800b87c:	3801      	subs	r0, #1
 800b87e:	440a      	add	r2, r1
 800b880:	4291      	cmp	r1, r2
 800b882:	d004      	beq.n	800b88e <memcpy.isra.0+0x12>
 800b884:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b888:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b88c:	e7f8      	b.n	800b880 <memcpy.isra.0+0x4>
 800b88e:	4770      	bx	lr

0800b890 <RDMDeviceResponder::SetFactoryDefaults()>:
 800b890:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b892:	4604      	mov	r4, r0
 800b894:	f06f 050d 	mvn.w	r5, #13
 800b898:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800b89c:	9300      	str	r3, [sp, #0]
 800b89e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800b8a2:	4669      	mov	r1, sp
 800b8a4:	3004      	adds	r0, #4
 800b8a6:	f88d 3004 	strb.w	r3, [sp, #4]
 800b8aa:	f7ff fe74 	bl	800b596 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b8ae:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800b8b2:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b8b6:	f104 020e 	add.w	r2, r4, #14
 800b8ba:	1b2d      	subs	r5, r5, r4
 800b8bc:	18a9      	adds	r1, r5, r2
 800b8be:	4288      	cmp	r0, r1
 800b8c0:	d904      	bls.n	800b8cc <RDMDeviceResponder::SetFactoryDefaults()+0x3c>
 800b8c2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b8c6:	440b      	add	r3, r1
 800b8c8:	b29b      	uxth	r3, r3
 800b8ca:	e7f7      	b.n	800b8bc <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800b8cc:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800b8d0:	2301      	movs	r3, #1
 800b8d2:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b8d6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800b8da:	681b      	ldr	r3, [r3, #0]
 800b8dc:	685d      	ldr	r5, [r3, #4]
 800b8de:	682b      	ldr	r3, [r5, #0]
 800b8e0:	4628      	mov	r0, r5
 800b8e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b8e4:	4798      	blx	r3
 800b8e6:	0a00      	lsrs	r0, r0, #8
 800b8e8:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b8ec:	682b      	ldr	r3, [r5, #0]
 800b8ee:	4628      	mov	r0, r5
 800b8f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b8f2:	4798      	blx	r3
 800b8f4:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b8f8:	682b      	ldr	r3, [r5, #0]
 800b8fa:	4628      	mov	r0, r5
 800b8fc:	6a1b      	ldr	r3, [r3, #32]
 800b8fe:	4798      	blx	r3
 800b900:	0a00      	lsrs	r0, r0, #8
 800b902:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800b906:	682b      	ldr	r3, [r5, #0]
 800b908:	4628      	mov	r0, r5
 800b90a:	6a1b      	ldr	r3, [r3, #32]
 800b90c:	4798      	blx	r3
 800b90e:	6823      	ldr	r3, [r4, #0]
 800b910:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800b914:	4629      	mov	r1, r5
 800b916:	689b      	ldr	r3, [r3, #8]
 800b918:	4620      	mov	r0, r4
 800b91a:	4798      	blx	r3
 800b91c:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800b920:	1e6b      	subs	r3, r5, #1
 800b922:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b926:	d217      	bcs.n	800b958 <RDMDeviceResponder::SetFactoryDefaults()+0xc8>
 800b928:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800b92c:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800b930:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800b934:	3b01      	subs	r3, #1
 800b936:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b93a:	4629      	mov	r1, r5
 800b93c:	6858      	ldr	r0, [r3, #4]
 800b93e:	6803      	ldr	r3, [r0, #0]
 800b940:	69db      	ldr	r3, [r3, #28]
 800b942:	4798      	blx	r3
 800b944:	b120      	cbz	r0, 800b950 <RDMDeviceResponder::SetFactoryDefaults()+0xc0>
 800b946:	0a2b      	lsrs	r3, r5, #8
 800b948:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800b94c:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800b950:	6823      	ldr	r3, [r4, #0]
 800b952:	4620      	mov	r0, r4
 800b954:	68db      	ldr	r3, [r3, #12]
 800b956:	4798      	blx	r3
 800b958:	2213      	movs	r2, #19
 800b95a:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800b95e:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800b962:	f7ff ff8b 	bl	800b87c <memcpy.isra.0>
 800b966:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800b96a:	f7ff fd3c 	bl	800b3e6 <RDMSubDevices::SetFactoryDefaults()>
 800b96e:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800b972:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800b976:	f8d4 00cc 	ldr.w	r0, [r4, #204]	; 0xcc
 800b97a:	4413      	add	r3, r2
 800b97c:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800b980:	2301      	movs	r3, #1
 800b982:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800b986:	b128      	cbz	r0, 800b994 <RDMDeviceResponder::SetFactoryDefaults()+0x104>
 800b988:	6803      	ldr	r3, [r0, #0]
 800b98a:	689b      	ldr	r3, [r3, #8]
 800b98c:	b003      	add	sp, #12
 800b98e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b992:	4718      	bx	r3
 800b994:	b003      	add	sp, #12
 800b996:	bd30      	pop	{r4, r5, pc}

0800b998 <RDMHandler::RDMHandler(bool)>:
 800b998:	2200      	movs	r2, #0
 800b99a:	7001      	strb	r1, [r0, #0]
 800b99c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b9a0:	7042      	strb	r2, [r0, #1]
 800b9a2:	4770      	bx	lr

0800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>:
 800b9a4:	6883      	ldr	r3, [r0, #8]
 800b9a6:	75da      	strb	r2, [r3, #23]
 800b9a8:	3318      	adds	r3, #24
 800b9aa:	440a      	add	r2, r1
 800b9ac:	4291      	cmp	r1, r2
 800b9ae:	d004      	beq.n	800b9ba <RDMHandler::HandleString(char const*, unsigned int)+0x16>
 800b9b0:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b9b4:	f803 0b01 	strb.w	r0, [r3], #1
 800b9b8:	e7f8      	b.n	800b9ac <RDMHandler::HandleString(char const*, unsigned int)+0x8>
 800b9ba:	4770      	bx	lr

0800b9bc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800b9bc:	b570      	push	{r4, r5, r6, lr}
 800b9be:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800b9c2:	25cc      	movs	r5, #204	; 0xcc
 800b9c4:	701d      	strb	r5, [r3, #0]
 800b9c6:	7825      	ldrb	r5, [r4, #0]
 800b9c8:	705d      	strb	r5, [r3, #1]
 800b9ca:	7ba5      	ldrb	r5, [r4, #14]
 800b9cc:	73dd      	strb	r5, [r3, #15]
 800b9ce:	2500      	movs	r5, #0
 800b9d0:	745d      	strb	r5, [r3, #17]
 800b9d2:	7c65      	ldrb	r5, [r4, #17]
 800b9d4:	749d      	strb	r5, [r3, #18]
 800b9d6:	7ca5      	ldrb	r5, [r4, #18]
 800b9d8:	74dd      	strb	r5, [r3, #19]
 800b9da:	7ce5      	ldrb	r5, [r4, #19]
 800b9dc:	3501      	adds	r5, #1
 800b9de:	751d      	strb	r5, [r3, #20]
 800b9e0:	7d25      	ldrb	r5, [r4, #20]
 800b9e2:	755d      	strb	r5, [r3, #21]
 800b9e4:	7d65      	ldrb	r5, [r4, #21]
 800b9e6:	759d      	strb	r5, [r3, #22]
 800b9e8:	b119      	cbz	r1, 800b9f2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800b9ea:	1e4d      	subs	r5, r1, #1
 800b9ec:	2d01      	cmp	r5, #1
 800b9ee:	d921      	bls.n	800ba34 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800b9f0:	bd70      	pop	{r4, r5, r6, pc}
 800b9f2:	7dda      	ldrb	r2, [r3, #23]
 800b9f4:	7419      	strb	r1, [r3, #16]
 800b9f6:	3218      	adds	r2, #24
 800b9f8:	709a      	strb	r2, [r3, #2]
 800b9fa:	4a16      	ldr	r2, [pc, #88]	; (800ba54 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x98>)
 800b9fc:	f104 0108 	add.w	r1, r4, #8
 800ba00:	6812      	ldr	r2, [r2, #0]
 800ba02:	1cdd      	adds	r5, r3, #3
 800ba04:	3204      	adds	r2, #4
 800ba06:	340e      	adds	r4, #14
 800ba08:	f811 6b01 	ldrb.w	r6, [r1], #1
 800ba0c:	f805 6b01 	strb.w	r6, [r5], #1
 800ba10:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ba14:	42a1      	cmp	r1, r4
 800ba16:	716e      	strb	r6, [r5, #5]
 800ba18:	d1f6      	bne.n	800ba08 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4c>
 800ba1a:	2200      	movs	r2, #0
 800ba1c:	7899      	ldrb	r1, [r3, #2]
 800ba1e:	4613      	mov	r3, r2
 800ba20:	6884      	ldr	r4, [r0, #8]
 800ba22:	4291      	cmp	r1, r2
 800ba24:	eb04 0502 	add.w	r5, r4, r2
 800ba28:	d90d      	bls.n	800ba46 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800ba2a:	5ca5      	ldrb	r5, [r4, r2]
 800ba2c:	3201      	adds	r2, #1
 800ba2e:	442b      	add	r3, r5
 800ba30:	b29b      	uxth	r3, r3
 800ba32:	e7f6      	b.n	800ba22 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x66>
 800ba34:	7419      	strb	r1, [r3, #16]
 800ba36:	2102      	movs	r1, #2
 800ba38:	251a      	movs	r5, #26
 800ba3a:	75d9      	strb	r1, [r3, #23]
 800ba3c:	0a11      	lsrs	r1, r2, #8
 800ba3e:	709d      	strb	r5, [r3, #2]
 800ba40:	7619      	strb	r1, [r3, #24]
 800ba42:	765a      	strb	r2, [r3, #25]
 800ba44:	e7d9      	b.n	800b9fa <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800ba46:	0a1a      	lsrs	r2, r3, #8
 800ba48:	702a      	strb	r2, [r5, #0]
 800ba4a:	6882      	ldr	r2, [r0, #8]
 800ba4c:	440a      	add	r2, r1
 800ba4e:	7053      	strb	r3, [r2, #1]
 800ba50:	e7ce      	b.n	800b9f0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800ba52:	bf00      	nop
 800ba54:	20001a70 	andcs	r1, r0, r0, ror sl

0800ba58 <RDMHandler::RespondMessageAck()>:
 800ba58:	6843      	ldr	r3, [r0, #4]
 800ba5a:	7d9a      	ldrb	r2, [r3, #22]
 800ba5c:	b90a      	cbnz	r2, 800ba62 <RDMHandler::RespondMessageAck()+0xa>
 800ba5e:	2218      	movs	r2, #24
 800ba60:	705a      	strb	r2, [r3, #1]
 800ba62:	2200      	movs	r2, #0
 800ba64:	4611      	mov	r1, r2
 800ba66:	f7ff bfa9 	b.w	800b9bc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800ba6c <RDMHandler::GetDeviceInfo(unsigned short)>:
 800ba6c:	b538      	push	{r3, r4, r5, lr}
 800ba6e:	4b18      	ldr	r3, [pc, #96]	; (800bad0 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800ba70:	4605      	mov	r5, r0
 800ba72:	681c      	ldr	r4, [r3, #0]
 800ba74:	b349      	cbz	r1, 800baca <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800ba76:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800ba7a:	f7ff fc83 	bl	800b384 <RDMSubDevices::GetInfo(unsigned short)>
 800ba7e:	b1b8      	cbz	r0, 800bab0 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800ba80:	8803      	ldrh	r3, [r0, #0]
 800ba82:	0a1b      	lsrs	r3, r3, #8
 800ba84:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800ba88:	8803      	ldrh	r3, [r0, #0]
 800ba8a:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800ba8e:	7903      	ldrb	r3, [r0, #4]
 800ba90:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800ba94:	7943      	ldrb	r3, [r0, #5]
 800ba96:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800ba9a:	8843      	ldrh	r3, [r0, #2]
 800ba9c:	0a1b      	lsrs	r3, r3, #8
 800ba9e:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800baa2:	8843      	ldrh	r3, [r0, #2]
 800baa4:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800baa8:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800baac:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800bab0:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800bab4:	2213      	movs	r2, #19
 800bab6:	68a8      	ldr	r0, [r5, #8]
 800bab8:	75c2      	strb	r2, [r0, #23]
 800baba:	3018      	adds	r0, #24
 800babc:	f7ff fede 	bl	800b87c <memcpy.isra.0>
 800bac0:	4628      	mov	r0, r5
 800bac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bac6:	f7ff bfc7 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800baca:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800bace:	e7f1      	b.n	800bab4 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800bad0:	20001a70 	andcs	r1, r0, r0, ror sl

0800bad4 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800bad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bad6:	2301      	movs	r3, #1
 800bad8:	6886      	ldr	r6, [r0, #8]
 800bada:	4605      	mov	r5, r0
 800badc:	75f3      	strb	r3, [r6, #23]
 800bade:	4b1c      	ldr	r3, [pc, #112]	; (800bb50 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800bae0:	681c      	ldr	r4, [r3, #0]
 800bae2:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800bae6:	b37b      	cbz	r3, 800bb48 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800bae8:	f06f 0c0d 	mvn.w	ip, #13
 800baec:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800baf0:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800baf4:	f894 702e 	ldrb.w	r7, [r4, #46]	; 0x2e
 800baf8:	f104 020e 	add.w	r2, r4, #14
 800bafc:	ebac 0c04 	sub.w	ip, ip, r4
 800bb00:	eb0c 0002 	add.w	r0, ip, r2
 800bb04:	42b8      	cmp	r0, r7
 800bb06:	d204      	bcs.n	800bb12 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800bb08:	f812 0b01 	ldrb.w	r0, [r2], #1
 800bb0c:	4403      	add	r3, r0
 800bb0e:	b29b      	uxth	r3, r3
 800bb10:	e7f6      	b.n	800bb00 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800bb12:	4299      	cmp	r1, r3
 800bb14:	d008      	beq.n	800bb28 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800bb16:	2300      	movs	r3, #0
 800bb18:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800bb1c:	7633      	strb	r3, [r6, #24]
 800bb1e:	4628      	mov	r0, r5
 800bb20:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb24:	f7ff bf98 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bb28:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800bb2c:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800bb30:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800bb34:	440b      	add	r3, r1
 800bb36:	429a      	cmp	r2, r3
 800bb38:	d1ed      	bne.n	800bb16 <RDMHandler::GetFactoryDefaults(unsigned short)+0x42>
 800bb3a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800bb3e:	f7ff fc3f 	bl	800b3c0 <RDMSubDevices::GetFactoryDefaults()>
 800bb42:	4603      	mov	r3, r0
 800bb44:	2800      	cmp	r0, #0
 800bb46:	d0e7      	beq.n	800bb18 <RDMHandler::GetFactoryDefaults(unsigned short)+0x44>
 800bb48:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800bb4c:	e7e6      	b.n	800bb1c <RDMHandler::GetFactoryDefaults(unsigned short)+0x48>
 800bb4e:	bf00      	nop
 800bb50:	20001a70 	andcs	r1, r0, r0, ror sl

0800bb54 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800bb54:	b510      	push	{r4, lr}
 800bb56:	4604      	mov	r4, r0
 800bb58:	220e      	movs	r2, #14
 800bb5a:	4904      	ldr	r1, [pc, #16]	; (800bb6c <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800bb5c:	f7ff ff22 	bl	800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>
 800bb60:	4620      	mov	r0, r4
 800bb62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb66:	f7ff bf77 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bb6a:	bf00      	nop
 800bb6c:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}

0800bb70 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800bb70:	b510      	push	{r4, lr}
 800bb72:	4604      	mov	r4, r0
 800bb74:	4b05      	ldr	r3, [pc, #20]	; (800bb8c <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800bb76:	6819      	ldr	r1, [r3, #0]
 800bb78:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800bb7c:	312f      	adds	r1, #47	; 0x2f
 800bb7e:	f7ff ff11 	bl	800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>
 800bb82:	4620      	mov	r0, r4
 800bb84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb88:	f7ff bf66 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bb8c:	20001a70 	andcs	r1, r0, r0, ror sl

0800bb90 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800bb90:	4b0d      	ldr	r3, [pc, #52]	; (800bbc8 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800bb92:	b513      	push	{r0, r1, r4, lr}
 800bb94:	4604      	mov	r4, r0
 800bb96:	6818      	ldr	r0, [r3, #0]
 800bb98:	b171      	cbz	r1, 800bbb8 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800bb9a:	466a      	mov	r2, sp
 800bb9c:	308c      	adds	r0, #140	; 0x8c
 800bb9e:	f7ff fbf9 	bl	800b394 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800bba2:	4620      	mov	r0, r4
 800bba4:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800bba8:	9900      	ldr	r1, [sp, #0]
 800bbaa:	f7ff fefb 	bl	800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>
 800bbae:	4620      	mov	r0, r4
 800bbb0:	f7ff ff52 	bl	800ba58 <RDMHandler::RespondMessageAck()>
 800bbb4:	b002      	add	sp, #8
 800bbb6:	bd10      	pop	{r4, pc}
 800bbb8:	f100 030e 	add.w	r3, r0, #14
 800bbbc:	9300      	str	r3, [sp, #0]
 800bbbe:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800bbc2:	f88d 3004 	strb.w	r3, [sp, #4]
 800bbc6:	e7ec      	b.n	800bba2 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800bbc8:	20001a70 	andcs	r1, r0, r0, ror sl

0800bbcc <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800bbcc:	2201      	movs	r2, #1
 800bbce:	6883      	ldr	r3, [r0, #8]
 800bbd0:	75da      	strb	r2, [r3, #23]
 800bbd2:	4a02      	ldr	r2, [pc, #8]	; (800bbdc <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bbd4:	7812      	ldrb	r2, [r2, #0]
 800bbd6:	761a      	strb	r2, [r3, #24]
 800bbd8:	f7ff bf3e 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bbdc:	20001a74 	andcs	r1, r0, r4, ror sl

0800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>:
 800bbe0:	460a      	mov	r2, r1
 800bbe2:	2102      	movs	r1, #2
 800bbe4:	f7ff beea 	b.w	800b9bc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bbe8 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800bbe8:	b510      	push	{r4, lr}
 800bbea:	6843      	ldr	r3, [r0, #4]
 800bbec:	4604      	mov	r4, r0
 800bbee:	7d9a      	ldrb	r2, [r3, #22]
 800bbf0:	2a01      	cmp	r2, #1
 800bbf2:	d004      	beq.n	800bbfe <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bbf4:	2101      	movs	r1, #1
 800bbf6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bbfa:	f7ff bff1 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bbfe:	7ddb      	ldrb	r3, [r3, #23]
 800bc00:	2b01      	cmp	r3, #1
 800bc02:	d003      	beq.n	800bc0c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bc04:	2bff      	cmp	r3, #255	; 0xff
 800bc06:	d001      	beq.n	800bc0c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bc08:	2106      	movs	r1, #6
 800bc0a:	e7f4      	b.n	800bbf6 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bc0c:	2100      	movs	r1, #0
 800bc0e:	68a2      	ldr	r2, [r4, #8]
 800bc10:	2bff      	cmp	r3, #255	; 0xff
 800bc12:	75d1      	strb	r1, [r2, #23]
 800bc14:	d102      	bne.n	800bc1c <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bc16:	2104      	movs	r1, #4
 800bc18:	4620      	mov	r0, r4
 800bc1a:	e7ec      	b.n	800bbf6 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bc1c:	4b03      	ldr	r3, [pc, #12]	; (800bc2c <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bc1e:	6818      	ldr	r0, [r3, #0]
 800bc20:	f007 f882 	bl	8012d28 <Hardware::Reboot()>
 800bc24:	2800      	cmp	r0, #0
 800bc26:	d0f6      	beq.n	800bc16 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bc28:	bd10      	pop	{r4, pc}
 800bc2a:	bf00      	nop
 800bc2c:	2001258c 	andcs	r2, r1, ip, lsl #11

0800bc30 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bc30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc32:	6843      	ldr	r3, [r0, #4]
 800bc34:	460d      	mov	r5, r1
 800bc36:	7d99      	ldrb	r1, [r3, #22]
 800bc38:	4604      	mov	r4, r0
 800bc3a:	2901      	cmp	r1, #1
 800bc3c:	d004      	beq.n	800bc48 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bc3e:	2101      	movs	r1, #1
 800bc40:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bc44:	f7ff bfcc 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc48:	7ddb      	ldrb	r3, [r3, #23]
 800bc4a:	2b01      	cmp	r3, #1
 800bc4c:	d901      	bls.n	800bc52 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bc4e:	2106      	movs	r1, #6
 800bc50:	e7f6      	b.n	800bc40 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bc52:	4a12      	ldr	r2, [pc, #72]	; (800bc9c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bc54:	4f12      	ldr	r7, [pc, #72]	; (800bca0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bc56:	6816      	ldr	r6, [r2, #0]
 800bc58:	4a12      	ldr	r2, [pc, #72]	; (800bca4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bc5a:	6810      	ldr	r0, [r2, #0]
 800bc5c:	4a12      	ldr	r2, [pc, #72]	; (800bca8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bc5e:	b983      	cbnz	r3, 800bc82 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800bc60:	2102      	movs	r1, #2
 800bc62:	7013      	strb	r3, [r2, #0]
 800bc64:	f006 ffbe 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 800bc68:	7839      	ldrb	r1, [r7, #0]
 800bc6a:	b111      	cbz	r1, 800bc72 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bc6c:	4630      	mov	r0, r6
 800bc6e:	f000 f99e 	bl	800bfae <RDMIdentify::Off(rdm::identify::Mode)>
 800bc72:	b98d      	cbnz	r5, 800bc98 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800bc74:	68a3      	ldr	r3, [r4, #8]
 800bc76:	4620      	mov	r0, r4
 800bc78:	75dd      	strb	r5, [r3, #23]
 800bc7a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bc7e:	f7ff beeb 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bc82:	7011      	strb	r1, [r2, #0]
 800bc84:	2104      	movs	r1, #4
 800bc86:	f006 ffad 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 800bc8a:	7839      	ldrb	r1, [r7, #0]
 800bc8c:	2900      	cmp	r1, #0
 800bc8e:	d0f0      	beq.n	800bc72 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bc90:	4630      	mov	r0, r6
 800bc92:	f000 f98b 	bl	800bfac <RDMIdentify::On(rdm::identify::Mode)>
 800bc96:	e7ec      	b.n	800bc72 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bc98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bc9a:	bf00      	nop
 800bc9c:	20001a78 	andcs	r1, r0, r8, ror sl
 800bca0:	20001a75 	andcs	r1, r0, r5, ror sl
 800bca4:	20012588 	andcs	r2, r1, r8, lsl #11
 800bca8:	20001a74 	andcs	r1, r0, r4, ror sl

0800bcac <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800bcac:	b538      	push	{r3, r4, r5, lr}
 800bcae:	6843      	ldr	r3, [r0, #4]
 800bcb0:	4604      	mov	r4, r0
 800bcb2:	7d9b      	ldrb	r3, [r3, #22]
 800bcb4:	460d      	mov	r5, r1
 800bcb6:	b123      	cbz	r3, 800bcc2 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800bcb8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bcbc:	2101      	movs	r1, #1
 800bcbe:	f7ff bf8f 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bcc2:	4b06      	ldr	r3, [pc, #24]	; (800bcdc <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800bcc4:	6818      	ldr	r0, [r3, #0]
 800bcc6:	f7ff fde3 	bl	800b890 <RDMDeviceResponder::SetFactoryDefaults()>
 800bcca:	b935      	cbnz	r5, 800bcda <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800bccc:	68a3      	ldr	r3, [r4, #8]
 800bcce:	4620      	mov	r0, r4
 800bcd0:	75dd      	strb	r5, [r3, #23]
 800bcd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bcd6:	f7ff bebf 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bcda:	bd38      	pop	{r3, r4, r5, pc}
 800bcdc:	20001a70 	andcs	r1, r0, r0, ror sl

0800bce0 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800bce0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bce2:	6845      	ldr	r5, [r0, #4]
 800bce4:	460e      	mov	r6, r1
 800bce6:	7dab      	ldrb	r3, [r5, #22]
 800bce8:	4604      	mov	r4, r0
 800bcea:	2b20      	cmp	r3, #32
 800bcec:	4611      	mov	r1, r2
 800bcee:	d905      	bls.n	800bcfc <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800bcf0:	2101      	movs	r1, #1
 800bcf2:	b002      	add	sp, #8
 800bcf4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcf8:	f7ff bf72 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bcfc:	4a0d      	ldr	r2, [pc, #52]	; (800bd34 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800bcfe:	6810      	ldr	r0, [r2, #0]
 800bd00:	f105 0217 	add.w	r2, r5, #23
 800bd04:	b159      	cbz	r1, 800bd1e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800bd06:	308c      	adds	r0, #140	; 0x8c
 800bd08:	f7ff fb4d 	bl	800b3a6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800bd0c:	b97e      	cbnz	r6, 800bd2e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800bd0e:	4620      	mov	r0, r4
 800bd10:	68a3      	ldr	r3, [r4, #8]
 800bd12:	75de      	strb	r6, [r3, #23]
 800bd14:	b002      	add	sp, #8
 800bd16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd1a:	f7ff be9d 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bd1e:	4669      	mov	r1, sp
 800bd20:	3004      	adds	r0, #4
 800bd22:	9200      	str	r2, [sp, #0]
 800bd24:	f88d 3004 	strb.w	r3, [sp, #4]
 800bd28:	f7ff fc35 	bl	800b596 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bd2c:	e7ee      	b.n	800bd0c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800bd2e:	b002      	add	sp, #8
 800bd30:	bd70      	pop	{r4, r5, r6, pc}
 800bd32:	bf00      	nop
 800bd34:	20001a70 	andcs	r1, r0, r0, ror sl

0800bd38 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800bd38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd3c:	4616      	mov	r6, r2
 800bd3e:	2700      	movs	r7, #0
 800bd40:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800bd44:	2c20      	cmp	r4, #32
 800bd46:	46be      	mov	lr, r7
 800bd48:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800bd4c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800bd50:	d004      	beq.n	800bd5c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800bd52:	2105      	movs	r1, #5
 800bd54:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd58:	f7ff bf42 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bd5c:	4c2d      	ldr	r4, [pc, #180]	; (800be14 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800bd5e:	6824      	ldr	r4, [r4, #0]
 800bd60:	88a4      	ldrh	r4, [r4, #4]
 800bd62:	4294      	cmp	r4, r2
 800bd64:	d205      	bcs.n	800bd72 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bd66:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800bd6a:	42a2      	cmp	r2, r4
 800bd6c:	d001      	beq.n	800bd72 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bd6e:	2109      	movs	r1, #9
 800bd70:	e7f0      	b.n	800bd54 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bd72:	f04f 0c14 	mov.w	ip, #20
 800bd76:	2400      	movs	r4, #0
 800bd78:	4d27      	ldr	r5, [pc, #156]	; (800be18 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800bd7a:	f8b5 9000 	ldrh.w	r9, [r5]
 800bd7e:	4599      	cmp	r9, r3
 800bd80:	bf02      	ittt	eq
 800bd82:	462c      	moveq	r4, r5
 800bd84:	7daf      	ldrbeq	r7, [r5, #22]
 800bd86:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800bd8a:	f1bc 0c01 	subs.w	ip, ip, #1
 800bd8e:	f105 0518 	add.w	r5, r5, #24
 800bd92:	d1f2      	bne.n	800bd7a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800bd94:	b90c      	cbnz	r4, 800bd9a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800bd96:	2100      	movs	r1, #0
 800bd98:	e7dc      	b.n	800bd54 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bd9a:	7803      	ldrb	r3, [r0, #0]
 800bd9c:	b19b      	cbz	r3, 800bdc6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800bd9e:	2f00      	cmp	r7, #0
 800bda0:	d0f9      	beq.n	800bd96 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bda2:	2e20      	cmp	r6, #32
 800bda4:	d121      	bne.n	800bdea <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800bda6:	2900      	cmp	r1, #0
 800bda8:	d131      	bne.n	800be0e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800bdaa:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bdae:	429a      	cmp	r2, r3
 800bdb0:	d0dd      	beq.n	800bd6e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800bdb2:	6863      	ldr	r3, [r4, #4]
 800bdb4:	b913      	cbnz	r3, 800bdbc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800bdb6:	68a1      	ldr	r1, [r4, #8]
 800bdb8:	07cd      	lsls	r5, r1, #31
 800bdba:	d5ca      	bpl.n	800bd52 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bdbc:	7d21      	ldrb	r1, [r4, #20]
 800bdbe:	4541      	cmp	r1, r8
 800bdc0:	d005      	beq.n	800bdce <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800bdc2:	2101      	movs	r1, #1
 800bdc4:	e7c6      	b.n	800bd54 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bdc6:	f1be 0f00 	cmp.w	lr, #0
 800bdca:	d1ea      	bne.n	800bda2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800bdcc:	e7e3      	b.n	800bd96 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bdce:	68a1      	ldr	r1, [r4, #8]
 800bdd0:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800bdd4:	104d      	asrs	r5, r1, #1
 800bdd6:	07c9      	lsls	r1, r1, #31
 800bdd8:	bf48      	it	mi
 800bdda:	5941      	ldrmi	r1, [r0, r5]
 800bddc:	4620      	mov	r0, r4
 800bdde:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bde2:	bf48      	it	mi
 800bde4:	58cb      	ldrmi	r3, [r1, r3]
 800bde6:	4611      	mov	r1, r2
 800bde8:	4718      	bx	r3
 800bdea:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800bdee:	f003 0401 	and.w	r4, r3, #1
 800bdf2:	b90d      	cbnz	r5, 800bdf8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800bdf4:	2c00      	cmp	r4, #0
 800bdf6:	d0ac      	beq.n	800bd52 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bdf8:	105e      	asrs	r6, r3, #1
 800bdfa:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800bdfe:	b10c      	cbz	r4, 800be04 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800be00:	5980      	ldr	r0, [r0, r6]
 800be02:	5945      	ldr	r5, [r0, r5]
 800be04:	4618      	mov	r0, r3
 800be06:	462b      	mov	r3, r5
 800be08:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be0c:	4718      	bx	r3
 800be0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be12:	bf00      	nop
 800be14:	20001a6c 	andcs	r1, r0, ip, ror #20
 800be18:	08016ea4 	stmdaeq	r1, {r2, r5, r7, r9, sl, fp, sp, lr}

0800be1c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800be1c:	23ff      	movs	r3, #255	; 0xff
 800be1e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be22:	7013      	strb	r3, [r2, #0]
 800be24:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800be28:	7d0b      	ldrb	r3, [r1, #20]
 800be2a:	f891 8015 	ldrb.w	r8, [r1, #21]
 800be2e:	f101 0b02 	add.w	fp, r1, #2
 800be32:	eb08 2803 	add.w	r8, r8, r3, lsl #8
 800be36:	4b57      	ldr	r3, [pc, #348]	; (800bf94 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x178>)
 800be38:	4607      	mov	r7, r0
 800be3a:	460d      	mov	r5, r1
 800be3c:	4614      	mov	r4, r2
 800be3e:	4956      	ldr	r1, [pc, #344]	; (800bf98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800be40:	2206      	movs	r2, #6
 800be42:	4658      	mov	r0, fp
 800be44:	f8d3 9000 	ldr.w	r9, [r3]
 800be48:	f7ff fd08 	bl	800b85c <memcmp>
 800be4c:	f109 0604 	add.w	r6, r9, #4
 800be50:	4682      	mov	sl, r0
 800be52:	2202      	movs	r2, #2
 800be54:	4631      	mov	r1, r6
 800be56:	4658      	mov	r0, fp
 800be58:	fa1f f888 	uxth.w	r8, r8
 800be5c:	f7ff fcfe 	bl	800b85c <memcmp>
 800be60:	b928      	cbnz	r0, 800be6e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x52>
 800be62:	2204      	movs	r2, #4
 800be64:	494c      	ldr	r1, [pc, #304]	; (800bf98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800be66:	18a8      	adds	r0, r5, r2
 800be68:	f7ff fcf8 	bl	800b85c <memcmp>
 800be6c:	b160      	cbz	r0, 800be88 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800be6e:	4631      	mov	r1, r6
 800be70:	2206      	movs	r2, #6
 800be72:	4658      	mov	r0, fp
 800be74:	f7ff fcf2 	bl	800b85c <memcmp>
 800be78:	4601      	mov	r1, r0
 800be7a:	b130      	cbz	r0, 800be8a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800be7c:	f1ba 0f00 	cmp.w	sl, #0
 800be80:	d04a      	beq.n	800bf18 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfc>
 800be82:	b003      	add	sp, #12
 800be84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be88:	2101      	movs	r1, #1
 800be8a:	2301      	movs	r3, #1
 800be8c:	7cea      	ldrb	r2, [r5, #19]
 800be8e:	2a10      	cmp	r2, #16
 800be90:	d16e      	bne.n	800bf70 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x154>
 800be92:	f1b8 0f01 	cmp.w	r8, #1
 800be96:	d142      	bne.n	800bf1e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x102>
 800be98:	787b      	ldrb	r3, [r7, #1]
 800be9a:	2b00      	cmp	r3, #0
 800be9c:	d1f1      	bne.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800be9e:	2206      	movs	r2, #6
 800bea0:	4631      	mov	r1, r6
 800bea2:	f105 0017 	add.w	r0, r5, #23
 800bea6:	f7ff fcd9 	bl	800b85c <memcmp>
 800beaa:	2800      	cmp	r0, #0
 800beac:	dce9      	bgt.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800beae:	2206      	movs	r2, #6
 800beb0:	4630      	mov	r0, r6
 800beb2:	f105 011d 	add.w	r1, r5, #29
 800beb6:	f7ff fcd1 	bl	800b85c <memcmp>
 800beba:	2800      	cmp	r0, #0
 800bebc:	dce1      	bgt.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bebe:	23fe      	movs	r3, #254	; 0xfe
 800bec0:	7023      	strb	r3, [r4, #0]
 800bec2:	7063      	strb	r3, [r4, #1]
 800bec4:	70a3      	strb	r3, [r4, #2]
 800bec6:	70e3      	strb	r3, [r4, #3]
 800bec8:	7123      	strb	r3, [r4, #4]
 800beca:	7163      	strb	r3, [r4, #5]
 800becc:	71a3      	strb	r3, [r4, #6]
 800bece:	23aa      	movs	r3, #170	; 0xaa
 800bed0:	4622      	mov	r2, r4
 800bed2:	71e3      	strb	r3, [r4, #7]
 800bed4:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800bed8:	f109 090a 	add.w	r9, r9, #10
 800bedc:	7831      	ldrb	r1, [r6, #0]
 800bede:	3202      	adds	r2, #2
 800bee0:	f061 0155 	orn	r1, r1, #85	; 0x55
 800bee4:	7191      	strb	r1, [r2, #6]
 800bee6:	f816 1b01 	ldrb.w	r1, [r6], #1
 800beea:	f041 0155 	orr.w	r1, r1, #85	; 0x55
 800beee:	71d1      	strb	r1, [r2, #7]
 800bef0:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800bef4:	454e      	cmp	r6, r9
 800bef6:	440b      	add	r3, r1
 800bef8:	b29b      	uxth	r3, r3
 800befa:	d1ef      	bne.n	800bedc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc0>
 800befc:	0a1a      	lsrs	r2, r3, #8
 800befe:	f062 0155 	orn	r1, r2, #85	; 0x55
 800bf02:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800bf06:	7562      	strb	r2, [r4, #21]
 800bf08:	f063 0255 	orn	r2, r3, #85	; 0x55
 800bf0c:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800bf10:	7521      	strb	r1, [r4, #20]
 800bf12:	75a2      	strb	r2, [r4, #22]
 800bf14:	75e3      	strb	r3, [r4, #23]
 800bf16:	e7b4      	b.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf18:	4651      	mov	r1, sl
 800bf1a:	4653      	mov	r3, sl
 800bf1c:	e7b6      	b.n	800be8c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800bf1e:	f1b8 0f03 	cmp.w	r8, #3
 800bf22:	d118      	bne.n	800bf56 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13a>
 800bf24:	7daa      	ldrb	r2, [r5, #22]
 800bf26:	2a00      	cmp	r2, #0
 800bf28:	d1ab      	bne.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf2a:	707a      	strb	r2, [r7, #1]
 800bf2c:	f1ba 0f00 	cmp.w	sl, #0
 800bf30:	d0a7      	beq.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf32:	2b00      	cmp	r3, #0
 800bf34:	d0a5      	beq.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf36:	2302      	movs	r3, #2
 800bf38:	75e3      	strb	r3, [r4, #23]
 800bf3a:	4b18      	ldr	r3, [pc, #96]	; (800bf9c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800bf3c:	7622      	strb	r2, [r4, #24]
 800bf3e:	681b      	ldr	r3, [r3, #0]
 800bf40:	7662      	strb	r2, [r4, #25]
 800bf42:	889b      	ldrh	r3, [r3, #4]
 800bf44:	b10b      	cbz	r3, 800bf4a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x12e>
 800bf46:	2302      	movs	r3, #2
 800bf48:	7663      	strb	r3, [r4, #25]
 800bf4a:	4638      	mov	r0, r7
 800bf4c:	b003      	add	sp, #12
 800bf4e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf52:	f7ff bd81 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bf56:	f1b8 0f02 	cmp.w	r8, #2
 800bf5a:	d192      	bne.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf5c:	7daa      	ldrb	r2, [r5, #22]
 800bf5e:	2a00      	cmp	r2, #0
 800bf60:	d18f      	bne.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf62:	2101      	movs	r1, #1
 800bf64:	7079      	strb	r1, [r7, #1]
 800bf66:	2b00      	cmp	r3, #0
 800bf68:	d08b      	beq.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf6a:	f884 8017 	strb.w	r8, [r4, #23]
 800bf6e:	e7e4      	b.n	800bf3a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x11e>
 800bf70:	7c68      	ldrb	r0, [r5, #17]
 800bf72:	7cab      	ldrb	r3, [r5, #18]
 800bf74:	f1ba 0f00 	cmp.w	sl, #0
 800bf78:	eb03 2300 	add.w	r3, r3, r0, lsl #8
 800bf7c:	b29b      	uxth	r3, r3
 800bf7e:	9301      	str	r3, [sp, #4]
 800bf80:	7dab      	ldrb	r3, [r5, #22]
 800bf82:	bf08      	it	eq
 800bf84:	2101      	moveq	r1, #1
 800bf86:	9300      	str	r3, [sp, #0]
 800bf88:	4638      	mov	r0, r7
 800bf8a:	4643      	mov	r3, r8
 800bf8c:	f7ff fed4 	bl	800bd38 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800bf90:	e777      	b.n	800be82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800bf92:	bf00      	nop
 800bf94:	20001a70 	andcs	r1, r0, r0, ror sl
 800bf98:	08016e9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, fp, sp, lr}
 800bf9c:	20001a6c 	andcs	r1, r0, ip, ror #20

0800bfa0 <RDMIdentify::RDMIdentify()>:
 800bfa0:	4b01      	ldr	r3, [pc, #4]	; (800bfa8 <RDMIdentify::RDMIdentify()+0x8>)
 800bfa2:	6018      	str	r0, [r3, #0]
 800bfa4:	4770      	bx	lr
 800bfa6:	bf00      	nop
 800bfa8:	20001a78 	andcs	r1, r0, r8, ror sl

0800bfac <RDMIdentify::On(rdm::identify::Mode)>:
 800bfac:	4770      	bx	lr

0800bfae <RDMIdentify::Off(rdm::identify::Mode)>:
 800bfae:	4770      	bx	lr

0800bfb0 <memcpy.constprop.0.isra.0>:
 800bfb0:	3801      	subs	r0, #1
 800bfb2:	1d0a      	adds	r2, r1, #4
 800bfb4:	4291      	cmp	r1, r2
 800bfb6:	d004      	beq.n	800bfc2 <memcpy.constprop.0.isra.0+0x12>
 800bfb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bfbc:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bfc0:	e7f8      	b.n	800bfb4 <memcpy.constprop.0.isra.0+0x4>
 800bfc2:	4770      	bx	lr

0800bfc4 <RDMHandler::GetInterfaceList(unsigned short)>:
 800bfc4:	4a08      	ldr	r2, [pc, #32]	; (800bfe8 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800bfc6:	6883      	ldr	r3, [r0, #8]
 800bfc8:	6812      	ldr	r2, [r2, #0]
 800bfca:	6852      	ldr	r2, [r2, #4]
 800bfcc:	0e11      	lsrs	r1, r2, #24
 800bfce:	7619      	strb	r1, [r3, #24]
 800bfd0:	0c11      	lsrs	r1, r2, #16
 800bfd2:	7659      	strb	r1, [r3, #25]
 800bfd4:	76da      	strb	r2, [r3, #27]
 800bfd6:	0a11      	lsrs	r1, r2, #8
 800bfd8:	2200      	movs	r2, #0
 800bfda:	771a      	strb	r2, [r3, #28]
 800bfdc:	2206      	movs	r2, #6
 800bfde:	7699      	strb	r1, [r3, #26]
 800bfe0:	775a      	strb	r2, [r3, #29]
 800bfe2:	75da      	strb	r2, [r3, #23]
 800bfe4:	f7ff bd38 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800bfe8:	20011ec0 	andcs	r1, r1, r0, asr #29

0800bfec <RDMHandler::GetInterfaceName(unsigned short)>:
 800bfec:	b538      	push	{r3, r4, r5, lr}
 800bfee:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bff2:	4604      	mov	r4, r0
 800bff4:	3117      	adds	r1, #23
 800bff6:	f105 0018 	add.w	r0, r5, #24
 800bffa:	f7ff ffd9 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800bffe:	4a0d      	ldr	r2, [pc, #52]	; (800c034 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800c000:	f105 001c 	add.w	r0, r5, #28
 800c004:	6813      	ldr	r3, [r2, #0]
 800c006:	33a2      	adds	r3, #162	; 0xa2
 800c008:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c00c:	f800 1b01 	strb.w	r1, [r0], #1
 800c010:	2900      	cmp	r1, #0
 800c012:	d1f9      	bne.n	800c008 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800c014:	6812      	ldr	r2, [r2, #0]
 800c016:	32a2      	adds	r2, #162	; 0xa2
 800c018:	4611      	mov	r1, r2
 800c01a:	460b      	mov	r3, r1
 800c01c:	7818      	ldrb	r0, [r3, #0]
 800c01e:	3101      	adds	r1, #1
 800c020:	2800      	cmp	r0, #0
 800c022:	d1fa      	bne.n	800c01a <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800c024:	1a9b      	subs	r3, r3, r2
 800c026:	3304      	adds	r3, #4
 800c028:	75eb      	strb	r3, [r5, #23]
 800c02a:	4620      	mov	r0, r4
 800c02c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c030:	f7ff bd12 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c034:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c038 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800c038:	b538      	push	{r3, r4, r5, lr}
 800c03a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c03e:	4604      	mov	r4, r0
 800c040:	3117      	adds	r1, #23
 800c042:	f105 0018 	add.w	r0, r5, #24
 800c046:	f7ff ffb3 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c04a:	4b06      	ldr	r3, [pc, #24]	; (800c064 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800c04c:	f105 011c 	add.w	r1, r5, #28
 800c050:	6818      	ldr	r0, [r3, #0]
 800c052:	f004 f87f 	bl	8010154 <Network::MacAddressCopyTo(unsigned char*)>
 800c056:	230a      	movs	r3, #10
 800c058:	75eb      	strb	r3, [r5, #23]
 800c05a:	4620      	mov	r0, r4
 800c05c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c060:	f7ff bcfa 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c064:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c068 <RDMHandler::GetDHCPMode(unsigned short)>:
 800c068:	b538      	push	{r3, r4, r5, lr}
 800c06a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c06e:	4604      	mov	r4, r0
 800c070:	3117      	adds	r1, #23
 800c072:	f105 0018 	add.w	r0, r5, #24
 800c076:	f7ff ff9b 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c07a:	4b05      	ldr	r3, [pc, #20]	; (800c090 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800c07c:	4620      	mov	r0, r4
 800c07e:	681b      	ldr	r3, [r3, #0]
 800c080:	785b      	ldrb	r3, [r3, #1]
 800c082:	772b      	strb	r3, [r5, #28]
 800c084:	2305      	movs	r3, #5
 800c086:	75eb      	strb	r3, [r5, #23]
 800c088:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c08c:	f7ff bce4 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c090:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c094 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800c094:	4b10      	ldr	r3, [pc, #64]	; (800c0d8 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800c096:	b510      	push	{r4, lr}
 800c098:	681b      	ldr	r3, [r3, #0]
 800c09a:	4604      	mov	r4, r0
 800c09c:	781a      	ldrb	r2, [r3, #0]
 800c09e:	b922      	cbnz	r2, 800c0aa <RDMHandler::SetDHCPMode(bool, unsigned short)+0x16>
 800c0a0:	210b      	movs	r1, #11
 800c0a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0a6:	f7ff bd9b 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c0aa:	6842      	ldr	r2, [r0, #4]
 800c0ac:	7ed2      	ldrb	r2, [r2, #27]
 800c0ae:	2a01      	cmp	r2, #1
 800c0b0:	d109      	bne.n	800c0c6 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800c0b2:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800c0b6:	f042 0204 	orr.w	r2, r2, #4
 800c0ba:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c0be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0c2:	f7ff bcc9 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c0c6:	b92a      	cbnz	r2, 800c0d4 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800c0c8:	4618      	mov	r0, r3
 800c0ca:	4611      	mov	r1, r2
 800c0cc:	f004 fa5c 	bl	8010588 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c0d0:	4620      	mov	r0, r4
 800c0d2:	e7f4      	b.n	800c0be <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c0d4:	2106      	movs	r1, #6
 800c0d6:	e7e4      	b.n	800c0a2 <RDMHandler::SetDHCPMode(bool, unsigned short)+0xe>
 800c0d8:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c0dc <RDMHandler::GetNameServers(unsigned short)>:
 800c0dc:	6842      	ldr	r2, [r0, #4]
 800c0de:	7dd2      	ldrb	r2, [r2, #23]
 800c0e0:	2a02      	cmp	r2, #2
 800c0e2:	d902      	bls.n	800c0ea <RDMHandler::GetNameServers(unsigned short)+0xe>
 800c0e4:	2106      	movs	r1, #6
 800c0e6:	f7ff bd7b 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c0ea:	2200      	movs	r2, #0
 800c0ec:	6883      	ldr	r3, [r0, #8]
 800c0ee:	765a      	strb	r2, [r3, #25]
 800c0f0:	769a      	strb	r2, [r3, #26]
 800c0f2:	76da      	strb	r2, [r3, #27]
 800c0f4:	771a      	strb	r2, [r3, #28]
 800c0f6:	2205      	movs	r2, #5
 800c0f8:	75da      	strb	r2, [r3, #23]
 800c0fa:	f7ff bcad 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
	...

0800c100 <RDMHandler::GetZeroconf(unsigned short)>:
 800c100:	b538      	push	{r3, r4, r5, lr}
 800c102:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c106:	4604      	mov	r4, r0
 800c108:	3117      	adds	r1, #23
 800c10a:	f105 0018 	add.w	r0, r5, #24
 800c10e:	f7ff ff4f 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c112:	4b06      	ldr	r3, [pc, #24]	; (800c12c <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800c114:	681a      	ldr	r2, [r3, #0]
 800c116:	7893      	ldrb	r3, [r2, #2]
 800c118:	b103      	cbz	r3, 800c11c <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800c11a:	78d3      	ldrb	r3, [r2, #3]
 800c11c:	772b      	strb	r3, [r5, #28]
 800c11e:	2305      	movs	r3, #5
 800c120:	75eb      	strb	r3, [r5, #23]
 800c122:	4620      	mov	r0, r4
 800c124:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c128:	f7ff bc96 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c12c:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c130 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c130:	4b10      	ldr	r3, [pc, #64]	; (800c174 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c132:	b510      	push	{r4, lr}
 800c134:	681b      	ldr	r3, [r3, #0]
 800c136:	4604      	mov	r4, r0
 800c138:	789a      	ldrb	r2, [r3, #2]
 800c13a:	b922      	cbnz	r2, 800c146 <RDMHandler::SetZeroconf(bool, unsigned short)+0x16>
 800c13c:	210b      	movs	r1, #11
 800c13e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c142:	f7ff bd4d 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c146:	6842      	ldr	r2, [r0, #4]
 800c148:	7ed2      	ldrb	r2, [r2, #27]
 800c14a:	2a01      	cmp	r2, #1
 800c14c:	d109      	bne.n	800c162 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c14e:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800c152:	f042 0208 	orr.w	r2, r2, #8
 800c156:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c15a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c15e:	f7ff bc7b 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c162:	b92a      	cbnz	r2, 800c170 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c164:	4618      	mov	r0, r3
 800c166:	4611      	mov	r1, r2
 800c168:	f004 fa0e 	bl	8010588 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c16c:	4620      	mov	r0, r4
 800c16e:	e7f4      	b.n	800c15a <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c170:	2106      	movs	r1, #6
 800c172:	e7e4      	b.n	800c13e <RDMHandler::SetZeroconf(bool, unsigned short)+0xe>
 800c174:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c178 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c178:	4b09      	ldr	r3, [pc, #36]	; (800c1a0 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c17a:	b510      	push	{r4, lr}
 800c17c:	681b      	ldr	r3, [r3, #0]
 800c17e:	4604      	mov	r4, r0
 800c180:	785a      	ldrb	r2, [r3, #1]
 800c182:	b922      	cbnz	r2, 800c18e <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c188:	210b      	movs	r1, #11
 800c18a:	f7ff bd29 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c18e:	4618      	mov	r0, r3
 800c190:	f004 f9b0 	bl	80104f4 <Network::EnableDhcp()>
 800c194:	4620      	mov	r0, r4
 800c196:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c19a:	f7ff bc5d 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c19e:	bf00      	nop
 800c1a0:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c1a4 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c1a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1a6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1aa:	4e0f      	ldr	r6, [pc, #60]	; (800c1e8 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800c1ac:	4604      	mov	r4, r0
 800c1ae:	6833      	ldr	r3, [r6, #0]
 800c1b0:	f105 0018 	add.w	r0, r5, #24
 800c1b4:	691b      	ldr	r3, [r3, #16]
 800c1b6:	3117      	adds	r1, #23
 800c1b8:	9301      	str	r3, [sp, #4]
 800c1ba:	f7ff fef9 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c1be:	a901      	add	r1, sp, #4
 800c1c0:	f105 001c 	add.w	r0, r5, #28
 800c1c4:	f7ff fef4 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c1c8:	6836      	ldr	r6, [r6, #0]
 800c1ca:	69b0      	ldr	r0, [r6, #24]
 800c1cc:	f7fb fd0a 	bl	8007be4 <__popcountsi2>
 800c1d0:	f885 0020 	strb.w	r0, [r5, #32]
 800c1d4:	7873      	ldrb	r3, [r6, #1]
 800c1d6:	4620      	mov	r0, r4
 800c1d8:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800c1dc:	230a      	movs	r3, #10
 800c1de:	75eb      	strb	r3, [r5, #23]
 800c1e0:	f7ff fc3a 	bl	800ba58 <RDMHandler::RespondMessageAck()>
 800c1e4:	b002      	add	sp, #8
 800c1e6:	bd70      	pop	{r4, r5, r6, pc}
 800c1e8:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c1ec <RDMHandler::GetStaticAddress(unsigned short)>:
 800c1ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1ee:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1f2:	4e0e      	ldr	r6, [pc, #56]	; (800c22c <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800c1f4:	4604      	mov	r4, r0
 800c1f6:	6833      	ldr	r3, [r6, #0]
 800c1f8:	f105 0018 	add.w	r0, r5, #24
 800c1fc:	691b      	ldr	r3, [r3, #16]
 800c1fe:	3117      	adds	r1, #23
 800c200:	9301      	str	r3, [sp, #4]
 800c202:	f7ff fed5 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c206:	a901      	add	r1, sp, #4
 800c208:	f105 001c 	add.w	r0, r5, #28
 800c20c:	f7ff fed0 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c210:	6833      	ldr	r3, [r6, #0]
 800c212:	6998      	ldr	r0, [r3, #24]
 800c214:	f7fb fce6 	bl	8007be4 <__popcountsi2>
 800c218:	2309      	movs	r3, #9
 800c21a:	f885 0020 	strb.w	r0, [r5, #32]
 800c21e:	75eb      	strb	r3, [r5, #23]
 800c220:	4620      	mov	r0, r4
 800c222:	f7ff fc19 	bl	800ba58 <RDMHandler::RespondMessageAck()>
 800c226:	b002      	add	sp, #8
 800c228:	bd70      	pop	{r4, r5, r6, pc}
 800c22a:	bf00      	nop
 800c22c:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c230 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c230:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c232:	6845      	ldr	r5, [r0, #4]
 800c234:	4604      	mov	r4, r0
 800c236:	7dab      	ldrb	r3, [r5, #22]
 800c238:	2b09      	cmp	r3, #9
 800c23a:	d005      	beq.n	800c248 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c23c:	2101      	movs	r1, #1
 800c23e:	b003      	add	sp, #12
 800c240:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c244:	f7ff bccc 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c248:	f105 011b 	add.w	r1, r5, #27
 800c24c:	a801      	add	r0, sp, #4
 800c24e:	f7ff feaf 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c252:	4b09      	ldr	r3, [pc, #36]	; (800c278 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800c254:	7fea      	ldrb	r2, [r5, #31]
 800c256:	6818      	ldr	r0, [r3, #0]
 800c258:	9901      	ldr	r1, [sp, #4]
 800c25a:	b132      	cbz	r2, 800c26a <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3a>
 800c25c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c260:	f1c2 0220 	rsb	r2, r2, #32
 800c264:	fa03 f202 	lsl.w	r2, r3, r2
 800c268:	ba12      	rev	r2, r2
 800c26a:	f004 f98d 	bl	8010588 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c26e:	4620      	mov	r0, r4
 800c270:	f7ff fbf2 	bl	800ba58 <RDMHandler::RespondMessageAck()>
 800c274:	b003      	add	sp, #12
 800c276:	bd30      	pop	{r4, r5, pc}
 800c278:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c27c <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c27c:	4b08      	ldr	r3, [pc, #32]	; (800c2a0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c27e:	b510      	push	{r4, lr}
 800c280:	4604      	mov	r4, r0
 800c282:	6818      	ldr	r0, [r3, #0]
 800c284:	f004 f98d 	bl	80105a2 <Network::ApplyQueuedConfig()>
 800c288:	b120      	cbz	r0, 800c294 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c28a:	4620      	mov	r0, r4
 800c28c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c290:	f7ff bbe2 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c294:	4620      	mov	r0, r4
 800c296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c29a:	2101      	movs	r1, #1
 800c29c:	f7ff bca0 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c2a0:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c2a4 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c2a4:	4b0c      	ldr	r3, [pc, #48]	; (800c2d8 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800c2a6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2a8:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c2ac:	681b      	ldr	r3, [r3, #0]
 800c2ae:	4604      	mov	r4, r0
 800c2b0:	695b      	ldr	r3, [r3, #20]
 800c2b2:	f105 0018 	add.w	r0, r5, #24
 800c2b6:	3117      	adds	r1, #23
 800c2b8:	9301      	str	r3, [sp, #4]
 800c2ba:	f7ff fe79 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c2be:	a901      	add	r1, sp, #4
 800c2c0:	f105 001c 	add.w	r0, r5, #28
 800c2c4:	f7ff fe74 	bl	800bfb0 <memcpy.constprop.0.isra.0>
 800c2c8:	2308      	movs	r3, #8
 800c2ca:	4620      	mov	r0, r4
 800c2cc:	75eb      	strb	r3, [r5, #23]
 800c2ce:	f7ff fbc3 	bl	800ba58 <RDMHandler::RespondMessageAck()>
 800c2d2:	b003      	add	sp, #12
 800c2d4:	bd30      	pop	{r4, r5, pc}
 800c2d6:	bf00      	nop
 800c2d8:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c2dc <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c2dc:	210b      	movs	r1, #11
 800c2de:	f7ff bc7f 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c2e4 <RDMHandler::GetHostName(unsigned short)>:
 800c2e4:	4b0a      	ldr	r3, [pc, #40]	; (800c310 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800c2e6:	b510      	push	{r4, lr}
 800c2e8:	6819      	ldr	r1, [r3, #0]
 800c2ea:	4604      	mov	r4, r0
 800c2ec:	311c      	adds	r1, #28
 800c2ee:	460b      	mov	r3, r1
 800c2f0:	461a      	mov	r2, r3
 800c2f2:	7810      	ldrb	r0, [r2, #0]
 800c2f4:	3301      	adds	r3, #1
 800c2f6:	2800      	cmp	r0, #0
 800c2f8:	d1fa      	bne.n	800c2f0 <RDMHandler::GetHostName(unsigned short)+0xc>
 800c2fa:	1a52      	subs	r2, r2, r1
 800c2fc:	4620      	mov	r0, r4
 800c2fe:	b292      	uxth	r2, r2
 800c300:	f7ff fb50 	bl	800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c304:	4620      	mov	r0, r4
 800c306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c30a:	f7ff bba5 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c30e:	bf00      	nop
 800c310:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c314 <RDMHandler::SetHostName(bool, unsigned short)>:
 800c314:	b510      	push	{r4, lr}
 800c316:	6841      	ldr	r1, [r0, #4]
 800c318:	4604      	mov	r4, r0
 800c31a:	7d8b      	ldrb	r3, [r1, #22]
 800c31c:	2b3f      	cmp	r3, #63	; 0x3f
 800c31e:	d904      	bls.n	800c32a <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c320:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c324:	2102      	movs	r1, #2
 800c326:	f7ff bc5b 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c32a:	2200      	movs	r2, #0
 800c32c:	440b      	add	r3, r1
 800c32e:	75da      	strb	r2, [r3, #23]
 800c330:	4b04      	ldr	r3, [pc, #16]	; (800c344 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c332:	3117      	adds	r1, #23
 800c334:	6818      	ldr	r0, [r3, #0]
 800c336:	f004 f89b 	bl	8010470 <Network::SetHostName(char const*)>
 800c33a:	4620      	mov	r0, r4
 800c33c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c340:	f7ff bb8a 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c344:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c348 <RDMHandler::GetDomainName(unsigned short)>:
 800c348:	4b0a      	ldr	r3, [pc, #40]	; (800c374 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800c34a:	b510      	push	{r4, lr}
 800c34c:	6819      	ldr	r1, [r3, #0]
 800c34e:	4604      	mov	r4, r0
 800c350:	315c      	adds	r1, #92	; 0x5c
 800c352:	460b      	mov	r3, r1
 800c354:	461a      	mov	r2, r3
 800c356:	7810      	ldrb	r0, [r2, #0]
 800c358:	3301      	adds	r3, #1
 800c35a:	2800      	cmp	r0, #0
 800c35c:	d1fa      	bne.n	800c354 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c35e:	1a52      	subs	r2, r2, r1
 800c360:	4620      	mov	r0, r4
 800c362:	b292      	uxth	r2, r2
 800c364:	f7ff fb1e 	bl	800b9a4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c368:	4620      	mov	r0, r4
 800c36a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c36e:	f7ff bb73 	b.w	800ba58 <RDMHandler::RespondMessageAck()>
 800c372:	bf00      	nop
 800c374:	20011ec0 	andcs	r1, r1, r0, asr #29

0800c378 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c378:	210b      	movs	r1, #11
 800c37a:	f7ff bc31 	b.w	800bbe0 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c380 <RDMDevice::RDMDevice()>:
 800c380:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c382:	4b35      	ldr	r3, [pc, #212]	; (800c458 <RDMDevice::RDMDevice()+0xd8>)
 800c384:	4a35      	ldr	r2, [pc, #212]	; (800c45c <RDMDevice::RDMDevice()+0xdc>)
 800c386:	7859      	ldrb	r1, [r3, #1]
 800c388:	4604      	mov	r4, r0
 800c38a:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 800c38e:	7818      	ldrb	r0, [r3, #0]
 800c390:	2300      	movs	r3, #0
 800c392:	4615      	mov	r5, r2
 800c394:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 800c398:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800c39c:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800c3a0:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 800c3a4:	67a3      	str	r3, [r4, #120]	; 0x78
 800c3a6:	4613      	mov	r3, r2
 800c3a8:	781e      	ldrb	r6, [r3, #0]
 800c3aa:	3201      	adds	r2, #1
 800c3ac:	2e00      	cmp	r6, #0
 800c3ae:	d1fa      	bne.n	800c3a6 <RDMDevice::RDMDevice()+0x26>
 800c3b0:	1b5b      	subs	r3, r3, r5
 800c3b2:	2b20      	cmp	r3, #32
 800c3b4:	bf28      	it	cs
 800c3b6:	2320      	movcs	r3, #32
 800c3b8:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800c3bc:	462e      	mov	r6, r5
 800c3be:	461a      	mov	r2, r3
 800c3c0:	4f26      	ldr	r7, [pc, #152]	; (800c45c <RDMDevice::RDMDevice()+0xdc>)
 800c3c2:	3a01      	subs	r2, #1
 800c3c4:	d304      	bcc.n	800c3d0 <RDMDevice::RDMDevice()+0x50>
 800c3c6:	f817 cb01 	ldrb.w	ip, [r7], #1
 800c3ca:	f806 cb01 	strb.w	ip, [r6], #1
 800c3ce:	e7f8      	b.n	800c3c2 <RDMDevice::RDMDevice()+0x42>
 800c3d0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c3d4:	4b22      	ldr	r3, [pc, #136]	; (800c460 <RDMDevice::RDMDevice()+0xe0>)
 800c3d6:	7020      	strb	r0, [r4, #0]
 800c3d8:	7061      	strb	r1, [r4, #1]
 800c3da:	6818      	ldr	r0, [r3, #0]
 800c3dc:	4669      	mov	r1, sp
 800c3de:	f003 feb9 	bl	8010154 <Network::MacAddressCopyTo(unsigned char*)>
 800c3e2:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c3e6:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c3ea:	70a3      	strb	r3, [r4, #2]
 800c3ec:	7263      	strb	r3, [r4, #9]
 800c3ee:	4b1d      	ldr	r3, [pc, #116]	; (800c464 <RDMDevice::RDMDevice()+0xe4>)
 800c3f0:	70e2      	strb	r2, [r4, #3]
 800c3f2:	7222      	strb	r2, [r4, #8]
 800c3f4:	461a      	mov	r2, r3
 800c3f6:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c3fa:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c3fe:	7121      	strb	r1, [r4, #4]
 800c400:	7160      	strb	r0, [r4, #5]
 800c402:	71a0      	strb	r0, [r4, #6]
 800c404:	71e1      	strb	r1, [r4, #7]
 800c406:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c40a:	2900      	cmp	r1, #0
 800c40c:	d1fb      	bne.n	800c406 <RDMDevice::RDMDevice()+0x86>
 800c40e:	1a9b      	subs	r3, r3, r2
 800c410:	2b20      	cmp	r3, #32
 800c412:	bf28      	it	cs
 800c414:	2320      	movcs	r3, #32
 800c416:	461a      	mov	r2, r3
 800c418:	4912      	ldr	r1, [pc, #72]	; (800c464 <RDMDevice::RDMDevice()+0xe4>)
 800c41a:	3a01      	subs	r2, #1
 800c41c:	d304      	bcc.n	800c428 <RDMDevice::RDMDevice()+0xa8>
 800c41e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c422:	f805 0b01 	strb.w	r0, [r5], #1
 800c426:	e7f8      	b.n	800c41a <RDMDevice::RDMDevice()+0x9a>
 800c428:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c42c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800c430:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c432:	2319      	movs	r3, #25
 800c434:	4a0c      	ldr	r2, [pc, #48]	; (800c468 <RDMDevice::RDMDevice()+0xe8>)
 800c436:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800c43a:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800c43e:	f104 0353 	add.w	r3, r4, #83	; 0x53
 800c442:	4298      	cmp	r0, r3
 800c444:	d004      	beq.n	800c450 <RDMDevice::RDMDevice()+0xd0>
 800c446:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c44a:	f803 1b01 	strb.w	r1, [r3], #1
 800c44e:	e7f8      	b.n	800c442 <RDMDevice::RDMDevice()+0xc2>
 800c450:	4620      	mov	r0, r4
 800c452:	b003      	add	sp, #12
 800c454:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c456:	bf00      	nop
 800c458:	08017186 	stmdaeq	r1, {r1, r2, r7, r8, ip, sp, lr}
 800c45c:	08017188 	stmdaeq	r1, {r3, r7, r8, ip, sp, lr}
 800c460:	20011ec0 	andcs	r1, r1, r0, asr #29
 800c464:	08017084 	stmdaeq	r1, {r2, r7, ip, sp, lr}
 800c468:	0801716c 	stmdaeq	r1, {r2, r3, r5, r6, r8, ip, sp, lr}

0800c46c <RDMDevice::Print()>:
 800c46c:	b513      	push	{r0, r1, r4, lr}
 800c46e:	4604      	mov	r4, r0
 800c470:	4818      	ldr	r0, [pc, #96]	; (800c4d4 <RDMDevice::Print()+0x68>)
 800c472:	f007 f8f5 	bl	8013660 <printf>
 800c476:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800c47a:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800c47e:	4816      	ldr	r0, [pc, #88]	; (800c4d8 <RDMDevice::Print()+0x6c>)
 800c480:	f007 f8ee 	bl	8013660 <printf>
 800c484:	7862      	ldrb	r2, [r4, #1]
 800c486:	7821      	ldrb	r1, [r4, #0]
 800c488:	4814      	ldr	r0, [pc, #80]	; (800c4dc <RDMDevice::Print()+0x70>)
 800c48a:	f007 f8e9 	bl	8013660 <printf>
 800c48e:	79a3      	ldrb	r3, [r4, #6]
 800c490:	7a22      	ldrb	r2, [r4, #8]
 800c492:	7a61      	ldrb	r1, [r4, #9]
 800c494:	9300      	str	r3, [sp, #0]
 800c496:	4812      	ldr	r0, [pc, #72]	; (800c4e0 <RDMDevice::Print()+0x74>)
 800c498:	79e3      	ldrb	r3, [r4, #7]
 800c49a:	f007 f8e1 	bl	8013660 <printf>
 800c49e:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800c4a2:	f104 020a 	add.w	r2, r4, #10
 800c4a6:	480f      	ldr	r0, [pc, #60]	; (800c4e4 <RDMDevice::Print()+0x78>)
 800c4a8:	f007 f8da 	bl	8013660 <printf>
 800c4ac:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800c4b0:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800c4b4:	0a09      	lsrs	r1, r1, #8
 800c4b6:	480c      	ldr	r0, [pc, #48]	; (800c4e8 <RDMDevice::Print()+0x7c>)
 800c4b8:	f007 f8d2 	bl	8013660 <printf>
 800c4bc:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800c4c0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800c4c4:	4809      	ldr	r0, [pc, #36]	; (800c4ec <RDMDevice::Print()+0x80>)
 800c4c6:	0a09      	lsrs	r1, r1, #8
 800c4c8:	b002      	add	sp, #8
 800c4ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4ce:	f007 b8c7 	b.w	8013660 <printf>
 800c4d2:	bf00      	nop
 800c4d4:	08017098 	stmdaeq	r1, {r3, r4, r7, ip, sp, lr}
 800c4d8:	080170b2 	stmdaeq	r1, {r1, r4, r5, r7, ip, sp, lr}
 800c4dc:	080170cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, ip, sp, lr}
 800c4e0:	080170ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, ip, sp, lr}
 800c4e4:	08017113 	stmdaeq	r1, {r0, r1, r4, r8, ip, sp, lr}
 800c4e8:	0801712e 	stmdaeq	r1, {r1, r2, r3, r5, r8, ip, sp, lr}
 800c4ec:	0801714d 	stmdaeq	r1, {r0, r2, r3, r6, r8, ip, sp, lr}

0800c4f0 <uuid_unparse_x>:
 800c4f0:	4603      	mov	r3, r0
 800c4f2:	b530      	push	{r4, r5, lr}
 800c4f4:	4608      	mov	r0, r1
 800c4f6:	4611      	mov	r1, r2
 800c4f8:	681a      	ldr	r2, [r3, #0]
 800c4fa:	b08f      	sub	sp, #60	; 0x3c
 800c4fc:	ba12      	rev	r2, r2
 800c4fe:	920a      	str	r2, [sp, #40]	; 0x28
 800c500:	889a      	ldrh	r2, [r3, #4]
 800c502:	891c      	ldrh	r4, [r3, #8]
 800c504:	ba52      	rev16	r2, r2
 800c506:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c50a:	88da      	ldrh	r2, [r3, #6]
 800c50c:	ba64      	rev16	r4, r4
 800c50e:	ba52      	rev16	r2, r2
 800c510:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800c514:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800c518:	f103 020a 	add.w	r2, r3, #10
 800c51c:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800c520:	3310      	adds	r3, #16
 800c522:	4293      	cmp	r3, r2
 800c524:	d122      	bne.n	800c56c <uuid_unparse_x+0x7c>
 800c526:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800c52a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c52e:	9208      	str	r2, [sp, #32]
 800c530:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800c534:	0a1b      	lsrs	r3, r3, #8
 800c536:	9207      	str	r2, [sp, #28]
 800c538:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800c53c:	9301      	str	r3, [sp, #4]
 800c53e:	9206      	str	r2, [sp, #24]
 800c540:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800c544:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800c548:	9205      	str	r2, [sp, #20]
 800c54a:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800c54e:	9300      	str	r3, [sp, #0]
 800c550:	9204      	str	r2, [sp, #16]
 800c552:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800c556:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c55a:	9203      	str	r2, [sp, #12]
 800c55c:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800c560:	9202      	str	r2, [sp, #8]
 800c562:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c564:	f007 f88c 	bl	8013680 <sprintf>
 800c568:	b00f      	add	sp, #60	; 0x3c
 800c56a:	bd30      	pop	{r4, r5, pc}
 800c56c:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c570:	f804 5b01 	strb.w	r5, [r4], #1
 800c574:	e7d5      	b.n	800c522 <uuid_unparse_x+0x32>
	...

0800c578 <uuid_unparse>:
 800c578:	4a01      	ldr	r2, [pc, #4]	; (800c580 <uuid_unparse+0x8>)
 800c57a:	f7ff bfb9 	b.w	800c4f0 <uuid_unparse_x>
 800c57e:	bf00      	nop
 800c580:	080171a4 	stmdaeq	r1, {r2, r5, r7, r8, ip, sp, lr}

0800c584 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800c584:	2000      	movs	r0, #0
 800c586:	4770      	bx	lr

0800c588 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800c588:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c58c:	4770      	bx	lr

0800c58e <WS28xxDmxMulti::GetDmxFootprint()>:
 800c58e:	2000      	movs	r0, #0
 800c590:	4770      	bx	lr

0800c592 <WS28xxDmxMulti::Start(unsigned int)>:
 800c592:	b538      	push	{r3, r4, r5, lr}
 800c594:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c596:	4604      	mov	r4, r0
 800c598:	460d      	mov	r5, r1
 800c59a:	b923      	cbnz	r3, 800c5a6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c59c:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800c59e:	b110      	cbz	r0, 800c5a6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c5a0:	6803      	ldr	r3, [r0, #0]
 800c5a2:	689b      	ldr	r3, [r3, #8]
 800c5a4:	4798      	blx	r3
 800c5a6:	2301      	movs	r3, #1
 800c5a8:	fa03 f105 	lsl.w	r1, r3, r5
 800c5ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c5ae:	430b      	orrs	r3, r1
 800c5b0:	6323      	str	r3, [r4, #48]	; 0x30
 800c5b2:	bd38      	pop	{r3, r4, r5, pc}

0800c5b4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c5b4:	b538      	push	{r3, r4, r5, lr}
 800c5b6:	4b06      	ldr	r3, [pc, #24]	; (800c5d0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800c5b8:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c5ba:	4604      	mov	r4, r0
 800c5bc:	6003      	str	r3, [r0, #0]
 800c5be:	b12d      	cbz	r5, 800c5cc <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800c5c0:	4628      	mov	r0, r5
 800c5c2:	f001 fb45 	bl	800dc50 <WS28xxMulti::~WS28xxMulti()>
 800c5c6:	4628      	mov	r0, r5
 800c5c8:	f006 fbec 	bl	8012da4 <operator delete(void*)>
 800c5cc:	4620      	mov	r0, r4
 800c5ce:	bd38      	pop	{r3, r4, r5, pc}
 800c5d0:	08017228 	stmdaeq	r1, {r3, r5, r9, ip, sp, lr}

0800c5d4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c5d4:	b510      	push	{r4, lr}
 800c5d6:	4604      	mov	r4, r0
 800c5d8:	f7ff ffec 	bl	800c5b4 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800c5dc:	4620      	mov	r0, r4
 800c5de:	f006 fbe1 	bl	8012da4 <operator delete(void*)>
 800c5e2:	4620      	mov	r0, r4
 800c5e4:	bd10      	pop	{r4, pc}

0800c5e6 <WS28xxDmxMulti::Blackout(bool)>:
 800c5e6:	b538      	push	{r3, r4, r5, lr}
 800c5e8:	4604      	mov	r4, r0
 800c5ea:	460d      	mov	r5, r1
 800c5ec:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800c5f0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c5f2:	f001 fc01 	bl	800ddf8 <WS28xxMulti::IsUpdating()>
 800c5f6:	2800      	cmp	r0, #0
 800c5f8:	d1fa      	bne.n	800c5f0 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800c5fa:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c5fc:	b11d      	cbz	r5, 800c606 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800c5fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c602:	f001 bbc1 	b.w	800dd88 <WS28xxMulti::Blackout()>
 800c606:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c60a:	f001 bb49 	b.w	800dca0 <WS28xxMulti::Update()>

0800c60e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c60e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c612:	69c4      	ldr	r4, [r0, #28]
 800c614:	b087      	sub	sp, #28
 800c616:	fbb1 faf4 	udiv	sl, r1, r4
 800c61a:	fb04 141a 	mls	r4, r4, sl, r1
 800c61e:	461f      	mov	r7, r3
 800c620:	4605      	mov	r5, r0
 800c622:	4691      	mov	r9, r2
 800c624:	6a03      	ldr	r3, [r0, #32]
 800c626:	6946      	ldr	r6, [r0, #20]
 800c628:	9104      	str	r1, [sp, #16]
 800c62a:	2c03      	cmp	r4, #3
 800c62c:	d83e      	bhi.n	800c6ac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9e>
 800c62e:	e8df f004 	tbb	[pc, r4]
 800c632:	3d3b3602 	ldccc	6, cr3, [fp, #-8]!
 800c636:	fbb7 f3f3 	udiv	r3, r7, r3
 800c63a:	429e      	cmp	r6, r3
 800c63c:	bf28      	it	cs
 800c63e:	461e      	movcs	r6, r3
 800c640:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c642:	f001 fbd9 	bl	800ddf8 <WS28xxMulti::IsUpdating()>
 800c646:	2800      	cmp	r0, #0
 800c648:	d1fa      	bne.n	800c640 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800c64a:	6a2b      	ldr	r3, [r5, #32]
 800c64c:	46c8      	mov	r8, r9
 800c64e:	2b03      	cmp	r3, #3
 800c650:	d031      	beq.n	800c6b6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa8>
 800c652:	42b4      	cmp	r4, r6
 800c654:	d256      	bcs.n	800c704 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800c656:	eba8 0309 	sub.w	r3, r8, r9
 800c65a:	429f      	cmp	r7, r3
 800c65c:	d952      	bls.n	800c704 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800c65e:	f04f 0b00 	mov.w	fp, #0
 800c662:	69ab      	ldr	r3, [r5, #24]
 800c664:	f898 f000 	pld	[r8]
 800c668:	4363      	muls	r3, r4
 800c66a:	9305      	str	r3, [sp, #20]
 800c66c:	69ab      	ldr	r3, [r5, #24]
 800c66e:	fa1f f28b 	uxth.w	r2, fp
 800c672:	429a      	cmp	r2, r3
 800c674:	f10b 0b01 	add.w	fp, fp, #1
 800c678:	d240      	bcs.n	800c6fc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xee>
 800c67a:	f898 3003 	ldrb.w	r3, [r8, #3]
 800c67e:	9905      	ldr	r1, [sp, #20]
 800c680:	9302      	str	r3, [sp, #8]
 800c682:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c686:	440a      	add	r2, r1
 800c688:	9301      	str	r3, [sp, #4]
 800c68a:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c68e:	4651      	mov	r1, sl
 800c690:	9300      	str	r3, [sp, #0]
 800c692:	f898 3000 	ldrb.w	r3, [r8]
 800c696:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c698:	f001 fc58 	bl	800df4c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c69c:	e7e6      	b.n	800c66c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5e>
 800c69e:	6844      	ldr	r4, [r0, #4]
 800c6a0:	fbb7 f3f3 	udiv	r3, r7, r3
 800c6a4:	4423      	add	r3, r4
 800c6a6:	e7c8      	b.n	800c63a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2c>
 800c6a8:	6884      	ldr	r4, [r0, #8]
 800c6aa:	e7f9      	b.n	800c6a0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800c6ac:	68c4      	ldr	r4, [r0, #12]
 800c6ae:	e7f7      	b.n	800c6a0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800c6b0:	3401      	adds	r4, #1
 800c6b2:	f108 0803 	add.w	r8, r8, #3
 800c6b6:	42b4      	cmp	r4, r6
 800c6b8:	d224      	bcs.n	800c704 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800c6ba:	eba8 0309 	sub.w	r3, r8, r9
 800c6be:	429f      	cmp	r7, r3
 800c6c0:	d920      	bls.n	800c704 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800c6c2:	f04f 0b00 	mov.w	fp, #0
 800c6c6:	69ab      	ldr	r3, [r5, #24]
 800c6c8:	f898 f000 	pld	[r8]
 800c6cc:	4363      	muls	r3, r4
 800c6ce:	9305      	str	r3, [sp, #20]
 800c6d0:	69ab      	ldr	r3, [r5, #24]
 800c6d2:	fa1f f28b 	uxth.w	r2, fp
 800c6d6:	4293      	cmp	r3, r2
 800c6d8:	f10b 0b01 	add.w	fp, fp, #1
 800c6dc:	d9e8      	bls.n	800c6b0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa2>
 800c6de:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c6e2:	9905      	ldr	r1, [sp, #20]
 800c6e4:	9301      	str	r3, [sp, #4]
 800c6e6:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c6ea:	440a      	add	r2, r1
 800c6ec:	9300      	str	r3, [sp, #0]
 800c6ee:	4651      	mov	r1, sl
 800c6f0:	f898 3000 	ldrb.w	r3, [r8]
 800c6f4:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c6f6:	f001 fbc3 	bl	800de80 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800c6fa:	e7e9      	b.n	800c6d0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800c6fc:	3401      	adds	r4, #1
 800c6fe:	f108 0804 	add.w	r8, r8, #4
 800c702:	e7a6      	b.n	800c652 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c704:	692b      	ldr	r3, [r5, #16]
 800c706:	9a04      	ldr	r2, [sp, #16]
 800c708:	4293      	cmp	r3, r2
 800c70a:	d105      	bne.n	800c718 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x10a>
 800c70c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c70e:	b007      	add	sp, #28
 800c710:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c714:	f001 bac4 	b.w	800dca0 <WS28xxMulti::Update()>
 800c718:	b007      	add	sp, #28
 800c71a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800c720 <WS28xxDmxMulti::Print()>:
 800c720:	b510      	push	{r4, lr}
 800c722:	4604      	mov	r4, r0
 800c724:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c726:	f001 fa99 	bl	800dc5c <WS28xxMulti::Print()>
 800c72a:	4807      	ldr	r0, [pc, #28]	; (800c748 <WS28xxDmxMulti::Print()+0x28>)
 800c72c:	f006 ff98 	bl	8013660 <printf>
 800c730:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c732:	4806      	ldr	r0, [pc, #24]	; (800c74c <WS28xxDmxMulti::Print()+0x2c>)
 800c734:	f006 ff94 	bl	8013660 <printf>
 800c738:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800c73c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c740:	4803      	ldr	r0, [pc, #12]	; (800c750 <WS28xxDmxMulti::Print()+0x30>)
 800c742:	f006 bf8d 	b.w	8013660 <printf>
 800c746:	bf00      	nop
 800c748:	080171d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, ip, sp, lr}
 800c74c:	080171eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, ip, sp, lr}
 800c750:	080171fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, ip, sp, lr}

0800c754 <WS28xxDmxMulti::Stop(unsigned int)>:
 800c754:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c756:	b570      	push	{r4, r5, r6, lr}
 800c758:	40cb      	lsrs	r3, r1
 800c75a:	07db      	lsls	r3, r3, #31
 800c75c:	4604      	mov	r4, r0
 800c75e:	460d      	mov	r5, r1
 800c760:	d50b      	bpl.n	800c77a <WS28xxDmxMulti::Stop(unsigned int)+0x26>
 800c762:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c766:	4a0a      	ldr	r2, [pc, #40]	; (800c790 <WS28xxDmxMulti::Stop(unsigned int)+0x3c>)
 800c768:	f7ff ff51 	bl	800c60e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>
 800c76c:	2301      	movs	r3, #1
 800c76e:	fa03 f505 	lsl.w	r5, r3, r5
 800c772:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c774:	ea23 0305 	bic.w	r3, r3, r5
 800c778:	6323      	str	r3, [r4, #48]	; 0x30
 800c77a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c77c:	b933      	cbnz	r3, 800c78c <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800c77e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800c780:	b120      	cbz	r0, 800c78c <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800c782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c786:	6803      	ldr	r3, [r0, #0]
 800c788:	68db      	ldr	r3, [r3, #12]
 800c78a:	4718      	bx	r3
 800c78c:	bd70      	pop	{r4, r5, r6, pc}
 800c78e:	bf00      	nop
 800c790:	20001a7c 	andcs	r1, r0, ip, ror sl

0800c794 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800c794:	4b16      	ldr	r3, [pc, #88]	; (800c7f0 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x5c>)
 800c796:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c798:	6003      	str	r3, [r0, #0]
 800c79a:	2300      	movs	r3, #0
 800c79c:	460d      	mov	r5, r1
 800c79e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800c7a2:	6303      	str	r3, [r0, #48]	; 0x30
 800c7a4:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 800c7a8:	f100 031c 	add.w	r3, r0, #28
 800c7ac:	9301      	str	r3, [sp, #4]
 800c7ae:	f100 0314 	add.w	r3, r0, #20
 800c7b2:	f100 0220 	add.w	r2, r0, #32
 800c7b6:	4604      	mov	r4, r0
 800c7b8:	2108      	movs	r1, #8
 800c7ba:	9300      	str	r3, [sp, #0]
 800c7bc:	1d03      	adds	r3, r0, #4
 800c7be:	4628      	mov	r0, r5
 800c7c0:	f000 fbd6 	bl	800cf70 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800c7c4:	2010      	movs	r0, #16
 800c7c6:	f006 faf1 	bl	8012dac <operator new(unsigned int)>
 800c7ca:	4606      	mov	r6, r0
 800c7cc:	4629      	mov	r1, r5
 800c7ce:	f001 f8cd 	bl	800d96c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800c7d2:	4630      	mov	r0, r6
 800c7d4:	62a6      	str	r6, [r4, #40]	; 0x28
 800c7d6:	f001 fad7 	bl	800dd88 <WS28xxMulti::Blackout()>
 800c7da:	69ab      	ldr	r3, [r5, #24]
 800c7dc:	4628      	mov	r0, r5
 800c7de:	61a3      	str	r3, [r4, #24]
 800c7e0:	696b      	ldr	r3, [r5, #20]
 800c7e2:	6263      	str	r3, [r4, #36]	; 0x24
 800c7e4:	f000 fc1c 	bl	800d020 <PixelDmxConfiguration::Dump()>
 800c7e8:	4620      	mov	r0, r4
 800c7ea:	b002      	add	sp, #8
 800c7ec:	bd70      	pop	{r4, r5, r6, pc}
 800c7ee:	bf00      	nop
 800c7f0:	08017228 	stmdaeq	r1, {r3, r5, r9, ip, sp, lr}

0800c7f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c7f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c7f6:	88c5      	ldrh	r5, [r0, #6]
 800c7f8:	8886      	ldrh	r6, [r0, #4]
 800c7fa:	42b5      	cmp	r5, r6
 800c7fc:	d216      	bcs.n	800c82c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c7fe:	4604      	mov	r4, r0
 800c800:	6800      	ldr	r0, [r0, #0]
 800c802:	4428      	add	r0, r5
 800c804:	1b75      	subs	r5, r6, r5
 800c806:	7a26      	ldrb	r6, [r4, #8]
 800c808:	b923      	cbnz	r3, 800c814 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c80a:	b926      	cbnz	r6, 800c816 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c80c:	9200      	str	r2, [sp, #0]
 800c80e:	460b      	mov	r3, r1
 800c810:	4a09      	ldr	r2, [pc, #36]	; (800c838 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c812:	e003      	b.n	800c81c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c814:	b166      	cbz	r6, 800c830 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c816:	460b      	mov	r3, r1
 800c818:	9200      	str	r2, [sp, #0]
 800c81a:	4a08      	ldr	r2, [pc, #32]	; (800c83c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c81c:	4629      	mov	r1, r5
 800c81e:	f006 ff47 	bl	80136b0 <snprintf>
 800c822:	4285      	cmp	r5, r0
 800c824:	bfa2      	ittt	ge
 800c826:	88e3      	ldrhge	r3, [r4, #6]
 800c828:	181b      	addge	r3, r3, r0
 800c82a:	80e3      	strhge	r3, [r4, #6]
 800c82c:	b002      	add	sp, #8
 800c82e:	bd70      	pop	{r4, r5, r6, pc}
 800c830:	9200      	str	r2, [sp, #0]
 800c832:	460b      	mov	r3, r1
 800c834:	4a02      	ldr	r2, [pc, #8]	; (800c840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c836:	e7f1      	b.n	800c81c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c838:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 800c83c:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 800c840:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

0800c844 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c844:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c846:	88c5      	ldrh	r5, [r0, #6]
 800c848:	8886      	ldrh	r6, [r0, #4]
 800c84a:	42b5      	cmp	r5, r6
 800c84c:	d216      	bcs.n	800c87c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c84e:	4604      	mov	r4, r0
 800c850:	6800      	ldr	r0, [r0, #0]
 800c852:	4428      	add	r0, r5
 800c854:	1b75      	subs	r5, r6, r5
 800c856:	7a26      	ldrb	r6, [r4, #8]
 800c858:	b923      	cbnz	r3, 800c864 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c85a:	b926      	cbnz	r6, 800c866 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c85c:	9200      	str	r2, [sp, #0]
 800c85e:	460b      	mov	r3, r1
 800c860:	4a09      	ldr	r2, [pc, #36]	; (800c888 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c862:	e003      	b.n	800c86c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c864:	b166      	cbz	r6, 800c880 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c866:	460b      	mov	r3, r1
 800c868:	9200      	str	r2, [sp, #0]
 800c86a:	4a08      	ldr	r2, [pc, #32]	; (800c88c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c86c:	4629      	mov	r1, r5
 800c86e:	f006 ff1f 	bl	80136b0 <snprintf>
 800c872:	4285      	cmp	r5, r0
 800c874:	bfa2      	ittt	ge
 800c876:	88e3      	ldrhge	r3, [r4, #6]
 800c878:	181b      	addge	r3, r3, r0
 800c87a:	80e3      	strhge	r3, [r4, #6]
 800c87c:	b002      	add	sp, #8
 800c87e:	bd70      	pop	{r4, r5, r6, pc}
 800c880:	9200      	str	r2, [sp, #0]
 800c882:	460b      	mov	r3, r1
 800c884:	4a02      	ldr	r2, [pc, #8]	; (800c890 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c886:	e7f1      	b.n	800c86c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c888:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 800c88c:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 800c890:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

0800c894 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c894:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c896:	88c5      	ldrh	r5, [r0, #6]
 800c898:	8886      	ldrh	r6, [r0, #4]
 800c89a:	42b5      	cmp	r5, r6
 800c89c:	d216      	bcs.n	800c8cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c89e:	4604      	mov	r4, r0
 800c8a0:	6800      	ldr	r0, [r0, #0]
 800c8a2:	4428      	add	r0, r5
 800c8a4:	1b75      	subs	r5, r6, r5
 800c8a6:	7a26      	ldrb	r6, [r4, #8]
 800c8a8:	b923      	cbnz	r3, 800c8b4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c8aa:	b926      	cbnz	r6, 800c8b6 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c8ac:	9200      	str	r2, [sp, #0]
 800c8ae:	460b      	mov	r3, r1
 800c8b0:	4a09      	ldr	r2, [pc, #36]	; (800c8d8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c8b2:	e003      	b.n	800c8bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c8b4:	b166      	cbz	r6, 800c8d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c8b6:	460b      	mov	r3, r1
 800c8b8:	9200      	str	r2, [sp, #0]
 800c8ba:	4a08      	ldr	r2, [pc, #32]	; (800c8dc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c8bc:	4629      	mov	r1, r5
 800c8be:	f006 fef7 	bl	80136b0 <snprintf>
 800c8c2:	4285      	cmp	r5, r0
 800c8c4:	bfa2      	ittt	ge
 800c8c6:	88e3      	ldrhge	r3, [r4, #6]
 800c8c8:	181b      	addge	r3, r3, r0
 800c8ca:	80e3      	strhge	r3, [r4, #6]
 800c8cc:	b002      	add	sp, #8
 800c8ce:	bd70      	pop	{r4, r5, r6, pc}
 800c8d0:	9200      	str	r2, [sp, #0]
 800c8d2:	460b      	mov	r3, r1
 800c8d4:	4a02      	ldr	r2, [pc, #8]	; (800c8e0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c8d6:	e7f1      	b.n	800c8bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c8d8:	08015d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, ip, lr}
 800c8dc:	08015d79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, fp, ip, lr}
 800c8e0:	08015d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, ip, lr}

0800c8e4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c8e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c8e8:	4699      	mov	r9, r3
 800c8ea:	8885      	ldrh	r5, [r0, #4]
 800c8ec:	88c3      	ldrh	r3, [r0, #6]
 800c8ee:	4604      	mov	r4, r0
 800c8f0:	42ab      	cmp	r3, r5
 800c8f2:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c8f6:	d227      	bcs.n	800c948 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c8f8:	6826      	ldr	r6, [r4, #0]
 800c8fa:	4610      	mov	r0, r2
 800c8fc:	460f      	mov	r7, r1
 800c8fe:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c902:	441e      	add	r6, r3
 800c904:	1aed      	subs	r5, r5, r3
 800c906:	f7fa fdb3 	bl	8007470 <__aeabi_f2d>
 800c90a:	f1b9 0f00 	cmp.w	r9, #0
 800c90e:	d109      	bne.n	800c924 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c910:	f1ba 0f00 	cmp.w	sl, #0
 800c914:	d109      	bne.n	800c92a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c916:	463b      	mov	r3, r7
 800c918:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c91c:	4a0f      	ldr	r2, [pc, #60]	; (800c95c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c91e:	f8cd 8000 	str.w	r8, [sp]
 800c922:	e008      	b.n	800c936 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c924:	f1ba 0f00 	cmp.w	sl, #0
 800c928:	d011      	beq.n	800c94e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c92a:	463b      	mov	r3, r7
 800c92c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c930:	4a0b      	ldr	r2, [pc, #44]	; (800c960 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c932:	f8cd 8000 	str.w	r8, [sp]
 800c936:	4629      	mov	r1, r5
 800c938:	4630      	mov	r0, r6
 800c93a:	f006 feb9 	bl	80136b0 <snprintf>
 800c93e:	4285      	cmp	r5, r0
 800c940:	bfa2      	ittt	ge
 800c942:	88e3      	ldrhge	r3, [r4, #6]
 800c944:	181b      	addge	r3, r3, r0
 800c946:	80e3      	strhge	r3, [r4, #6]
 800c948:	b004      	add	sp, #16
 800c94a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c94e:	463b      	mov	r3, r7
 800c950:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c954:	4a03      	ldr	r2, [pc, #12]	; (800c964 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c956:	f8cd 8000 	str.w	r8, [sp]
 800c95a:	e7ec      	b.n	800c936 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c95c:	0801725f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
 800c960:	08017254 	stmdaeq	r1, {r2, r4, r6, r9, ip, sp, lr}
 800c964:	08017260 	stmdaeq	r1, {r5, r6, r9, ip, sp, lr}

0800c968 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800c968:	2200      	movs	r2, #0
 800c96a:	6001      	str	r1, [r0, #0]
 800c96c:	4910      	ldr	r1, [pc, #64]	; (800c9b0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 800c96e:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 800c972:	e9c0 2101 	strd	r2, r1, [r0, #4]
 800c976:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800c97a:	81c1      	strh	r1, [r0, #14]
 800c97c:	213d      	movs	r1, #61	; 0x3d
 800c97e:	8201      	strh	r1, [r0, #16]
 800c980:	f240 11ff 	movw	r1, #511	; 0x1ff
 800c984:	8241      	strh	r1, [r0, #18]
 800c986:	2101      	movs	r1, #1
 800c988:	7541      	strb	r1, [r0, #21]
 800c98a:	2106      	movs	r1, #6
 800c98c:	75c1      	strb	r1, [r0, #23]
 800c98e:	4909      	ldr	r1, [pc, #36]	; (800c9b4 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 800c990:	7302      	strb	r2, [r0, #12]
 800c992:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800c996:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800c99a:	6201      	str	r1, [r0, #32]
 800c99c:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800c9a0:	6241      	str	r1, [r0, #36]	; 0x24
 800c9a2:	211d      	movs	r1, #29
 800c9a4:	7582      	strb	r2, [r0, #22]
 800c9a6:	8501      	strh	r1, [r0, #40]	; 0x28
 800c9a8:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800c9ac:	4770      	bx	lr
 800c9ae:	bf00      	nop
 800c9b0:	0100aa03 	tsteq	r0, r3, lsl #20
 800c9b4:	00090005 	andeq	r0, r9, r5

0800c9b8 <WS28xxDmxParams::Load()>:
 800c9b8:	b508      	push	{r3, lr}
 800c9ba:	2300      	movs	r3, #0
 800c9bc:	4601      	mov	r1, r0
 800c9be:	6043      	str	r3, [r0, #4]
 800c9c0:	6800      	ldr	r0, [r0, #0]
 800c9c2:	b120      	cbz	r0, 800c9ce <WS28xxDmxParams::Load()+0x16>
 800c9c4:	6803      	ldr	r3, [r0, #0]
 800c9c6:	3104      	adds	r1, #4
 800c9c8:	68db      	ldr	r3, [r3, #12]
 800c9ca:	4798      	blx	r3
 800c9cc:	2001      	movs	r0, #1
 800c9ce:	bd08      	pop	{r3, pc}

0800c9d0 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800c9d0:	6803      	ldr	r3, [r0, #0]
 800c9d2:	b1d3      	cbz	r3, 800ca0a <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800c9d4:	2300      	movs	r3, #0
 800c9d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c9d8:	460d      	mov	r5, r1
 800c9da:	4616      	mov	r6, r2
 800c9dc:	4604      	mov	r4, r0
 800c9de:	6043      	str	r3, [r0, #4]
 800c9e0:	4602      	mov	r2, r0
 800c9e2:	490a      	ldr	r1, [pc, #40]	; (800ca0c <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800c9e4:	4668      	mov	r0, sp
 800c9e6:	f005 fba9 	bl	801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c9ea:	4632      	mov	r2, r6
 800c9ec:	4629      	mov	r1, r5
 800c9ee:	4668      	mov	r0, sp
 800c9f0:	f005 fba8 	bl	8012144 <ReadConfigFile::Read(char const*, unsigned int)>
 800c9f4:	4621      	mov	r1, r4
 800c9f6:	f851 0b04 	ldr.w	r0, [r1], #4
 800c9fa:	6803      	ldr	r3, [r0, #0]
 800c9fc:	689b      	ldr	r3, [r3, #8]
 800c9fe:	4798      	blx	r3
 800ca00:	4668      	mov	r0, sp
 800ca02:	f005 fb9e 	bl	8012142 <ReadConfigFile::~ReadConfigFile()>
 800ca06:	b002      	add	sp, #8
 800ca08:	bd70      	pop	{r4, r5, r6, pc}
 800ca0a:	4770      	bx	lr
 800ca0c:	0800cc75 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, fp, lr, pc}

0800ca10 <WS28xxDmxParams::callbackFunction(char const*)>:
 800ca10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca14:	2308      	movs	r3, #8
 800ca16:	460d      	mov	r5, r1
 800ca18:	b088      	sub	sp, #32
 800ca1a:	4604      	mov	r4, r0
 800ca1c:	9302      	str	r3, [sp, #8]
 800ca1e:	4628      	mov	r0, r5
 800ca20:	4988      	ldr	r1, [pc, #544]	; (800cc44 <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800ca22:	446b      	add	r3, sp
 800ca24:	aa04      	add	r2, sp, #16
 800ca26:	f005 fbc1 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ca2a:	b9a0      	cbnz	r0, 800ca56 <WS28xxDmxParams::callbackFunction(char const*)+0x46>
 800ca2c:	9b02      	ldr	r3, [sp, #8]
 800ca2e:	3320      	adds	r3, #32
 800ca30:	446b      	add	r3, sp
 800ca32:	f803 0c10 	strb.w	r0, [r3, #-16]
 800ca36:	a804      	add	r0, sp, #16
 800ca38:	f000 fe76 	bl	800d728 <PixelType::GetType(char const*)>
 800ca3c:	280e      	cmp	r0, #14
 800ca3e:	bf08      	it	eq
 800ca40:	2203      	moveq	r2, #3
 800ca42:	6863      	ldr	r3, [r4, #4]
 800ca44:	bf19      	ittee	ne
 800ca46:	7220      	strbne	r0, [r4, #8]
 800ca48:	f043 0301 	orrne.w	r3, r3, #1
 800ca4c:	7222      	strbeq	r2, [r4, #8]
 800ca4e:	f023 0301 	biceq.w	r3, r3, #1
 800ca52:	6063      	str	r3, [r4, #4]
 800ca54:	e033      	b.n	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800ca56:	4628      	mov	r0, r5
 800ca58:	497b      	ldr	r1, [pc, #492]	; (800cc48 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800ca5a:	f10d 0202 	add.w	r2, sp, #2
 800ca5e:	f005 fc61 	bl	8012324 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ca62:	b990      	cbnz	r0, 800ca8a <WS28xxDmxParams::callbackFunction(char const*)+0x7a>
 800ca64:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800ca68:	6863      	ldr	r3, [r4, #4]
 800ca6a:	1e51      	subs	r1, r2, #1
 800ca6c:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800ca70:	bf2d      	iteet	cs
 800ca72:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800ca76:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800ca7a:	f043 0302 	orrcc.w	r3, r3, #2
 800ca7e:	7262      	strbcs	r2, [r4, #9]
 800ca80:	bf24      	itt	cs
 800ca82:	72a0      	strbcs	r0, [r4, #10]
 800ca84:	f023 0302 	biccs.w	r3, r3, #2
 800ca88:	e7e3      	b.n	800ca52 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800ca8a:	2303      	movs	r3, #3
 800ca8c:	4628      	mov	r0, r5
 800ca8e:	9302      	str	r3, [sp, #8]
 800ca90:	496e      	ldr	r1, [pc, #440]	; (800cc4c <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800ca92:	ab02      	add	r3, sp, #8
 800ca94:	aa04      	add	r2, sp, #16
 800ca96:	f005 fb89 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ca9a:	b998      	cbnz	r0, 800cac4 <WS28xxDmxParams::callbackFunction(char const*)+0xb4>
 800ca9c:	9b02      	ldr	r3, [sp, #8]
 800ca9e:	3320      	adds	r3, #32
 800caa0:	446b      	add	r3, sp
 800caa2:	f803 0c10 	strb.w	r0, [r3, #-16]
 800caa6:	a804      	add	r0, sp, #16
 800caa8:	f000 fe70 	bl	800d78c <PixelType::GetMap(char const*)>
 800caac:	6863      	ldr	r3, [r4, #4]
 800caae:	2806      	cmp	r0, #6
 800cab0:	bf14      	ite	ne
 800cab2:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800cab6:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800caba:	6063      	str	r3, [r4, #4]
 800cabc:	75e0      	strb	r0, [r4, #23]
 800cabe:	b008      	add	sp, #32
 800cac0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cac4:	4628      	mov	r0, r5
 800cac6:	4962      	ldr	r1, [pc, #392]	; (800cc50 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800cac8:	aa01      	add	r2, sp, #4
 800caca:	f005 fb88 	bl	80121de <Sscan::Float(char const*, char const*, float&)>
 800cace:	b960      	cbnz	r0, 800caea <WS28xxDmxParams::callbackFunction(char const*)+0xda>
 800cad0:	9801      	ldr	r0, [sp, #4]
 800cad2:	f000 fecb 	bl	800d86c <PixelType::ConvertTxH(float)>
 800cad6:	6863      	ldr	r3, [r4, #4]
 800cad8:	b120      	cbz	r0, 800cae4 <WS28xxDmxParams::callbackFunction(char const*)+0xd4>
 800cada:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cade:	6063      	str	r3, [r4, #4]
 800cae0:	7620      	strb	r0, [r4, #24]
 800cae2:	e7ec      	b.n	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800cae4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cae8:	e7f9      	b.n	800cade <WS28xxDmxParams::callbackFunction(char const*)+0xce>
 800caea:	4628      	mov	r0, r5
 800caec:	4959      	ldr	r1, [pc, #356]	; (800cc54 <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800caee:	aa01      	add	r2, sp, #4
 800caf0:	f005 fb75 	bl	80121de <Sscan::Float(char const*, char const*, float&)>
 800caf4:	b960      	cbnz	r0, 800cb10 <WS28xxDmxParams::callbackFunction(char const*)+0x100>
 800caf6:	9801      	ldr	r0, [sp, #4]
 800caf8:	f000 feb8 	bl	800d86c <PixelType::ConvertTxH(float)>
 800cafc:	6863      	ldr	r3, [r4, #4]
 800cafe:	b120      	cbz	r0, 800cb0a <WS28xxDmxParams::callbackFunction(char const*)+0xfa>
 800cb00:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800cb04:	6063      	str	r3, [r4, #4]
 800cb06:	7660      	strb	r0, [r4, #25]
 800cb08:	e7d9      	b.n	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800cb0a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cb0e:	e7f9      	b.n	800cb04 <WS28xxDmxParams::callbackFunction(char const*)+0xf4>
 800cb10:	4628      	mov	r0, r5
 800cb12:	4951      	ldr	r1, [pc, #324]	; (800cc58 <WS28xxDmxParams::callbackFunction(char const*)+0x248>)
 800cb14:	f10d 0202 	add.w	r2, sp, #2
 800cb18:	f005 fc04 	bl	8012324 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cb1c:	b998      	cbnz	r0, 800cb46 <WS28xxDmxParams::callbackFunction(char const*)+0x136>
 800cb1e:	f240 25a6 	movw	r5, #678	; 0x2a6
 800cb22:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800cb26:	6863      	ldr	r3, [r4, #4]
 800cb28:	1e8a      	subs	r2, r1, #2
 800cb2a:	b292      	uxth	r2, r2
 800cb2c:	42aa      	cmp	r2, r5
 800cb2e:	bf81      	itttt	hi
 800cb30:	2201      	movhi	r2, #1
 800cb32:	75a0      	strbhi	r0, [r4, #22]
 800cb34:	7562      	strbhi	r2, [r4, #21]
 800cb36:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800cb3a:	bf9c      	itt	ls
 800cb3c:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800cb40:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800cb44:	e785      	b.n	800ca52 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800cb46:	4628      	mov	r0, r5
 800cb48:	4944      	ldr	r1, [pc, #272]	; (800cc5c <WS28xxDmxParams::callbackFunction(char const*)+0x24c>)
 800cb4a:	aa03      	add	r2, sp, #12
 800cb4c:	f005 fc08 	bl	8012360 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800cb50:	b960      	cbnz	r0, 800cb6c <WS28xxDmxParams::callbackFunction(char const*)+0x15c>
 800cb52:	9a03      	ldr	r2, [sp, #12]
 800cb54:	4942      	ldr	r1, [pc, #264]	; (800cc60 <WS28xxDmxParams::callbackFunction(char const*)+0x250>)
 800cb56:	6863      	ldr	r3, [r4, #4]
 800cb58:	428a      	cmp	r2, r1
 800cb5a:	bf14      	ite	ne
 800cb5c:	f043 0310 	orrne.w	r3, r3, #16
 800cb60:	f023 0310 	biceq.w	r3, r3, #16
 800cb64:	6063      	str	r3, [r4, #4]
 800cb66:	f8c4 200e 	str.w	r2, [r4, #14]
 800cb6a:	e7a8      	b.n	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800cb6c:	4628      	mov	r0, r5
 800cb6e:	493d      	ldr	r1, [pc, #244]	; (800cc64 <WS28xxDmxParams::callbackFunction(char const*)+0x254>)
 800cb70:	f10d 0201 	add.w	r2, sp, #1
 800cb74:	f005 fc1d 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cb78:	b988      	cbnz	r0, 800cb9e <WS28xxDmxParams::callbackFunction(char const*)+0x18e>
 800cb7a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cb7e:	6863      	ldr	r3, [r4, #4]
 800cb80:	1e4a      	subs	r2, r1, #1
 800cb82:	b2d2      	uxtb	r2, r2
 800cb84:	2afd      	cmp	r2, #253	; 0xfd
 800cb86:	bf83      	ittte	hi
 800cb88:	f023 0320 	bichi.w	r3, r3, #32
 800cb8c:	6063      	strhi	r3, [r4, #4]
 800cb8e:	23ff      	movhi	r3, #255	; 0xff
 800cb90:	f043 0320 	orrls.w	r3, r3, #32
 800cb94:	bf9a      	itte	ls
 800cb96:	6063      	strls	r3, [r4, #4]
 800cb98:	74a1      	strbls	r1, [r4, #18]
 800cb9a:	74a3      	strbhi	r3, [r4, #18]
 800cb9c:	e78f      	b.n	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800cb9e:	2600      	movs	r6, #0
 800cba0:	f04f 0812 	mov.w	r8, #18
 800cba4:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800cba8:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800cc68 <WS28xxDmxParams::callbackFunction(char const*)+0x258>
 800cbac:	f104 071a 	add.w	r7, r4, #26
 800cbb0:	4628      	mov	r0, r5
 800cbb2:	fb08 9106 	mla	r1, r8, r6, r9
 800cbb6:	f10d 0202 	add.w	r2, sp, #2
 800cbba:	f005 fbb3 	bl	8012324 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cbbe:	b940      	cbnz	r0, 800cbd2 <WS28xxDmxParams::callbackFunction(char const*)+0x1c2>
 800cbc0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800cbc4:	6863      	ldr	r3, [r4, #4]
 800cbc6:	fa0a f206 	lsl.w	r2, sl, r6
 800cbca:	b1e9      	cbz	r1, 800cc08 <WS28xxDmxParams::callbackFunction(char const*)+0x1f8>
 800cbcc:	8039      	strh	r1, [r7, #0]
 800cbce:	4313      	orrs	r3, r2
 800cbd0:	6063      	str	r3, [r4, #4]
 800cbd2:	3601      	adds	r6, #1
 800cbd4:	2e08      	cmp	r6, #8
 800cbd6:	f107 0702 	add.w	r7, r7, #2
 800cbda:	d1e9      	bne.n	800cbb0 <WS28xxDmxParams::callbackFunction(char const*)+0x1a0>
 800cbdc:	4628      	mov	r0, r5
 800cbde:	4923      	ldr	r1, [pc, #140]	; (800cc6c <WS28xxDmxParams::callbackFunction(char const*)+0x25c>)
 800cbe0:	f10d 0201 	add.w	r2, sp, #1
 800cbe4:	f005 fbe5 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cbe8:	b9a0      	cbnz	r0, 800cc14 <WS28xxDmxParams::callbackFunction(char const*)+0x204>
 800cbea:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cbee:	6863      	ldr	r3, [r4, #4]
 800cbf0:	1e91      	subs	r1, r2, #2
 800cbf2:	2906      	cmp	r1, #6
 800cbf4:	bf8d      	iteet	hi
 800cbf6:	2201      	movhi	r2, #1
 800cbf8:	74e2      	strbls	r2, [r4, #19]
 800cbfa:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800cbfe:	74e2      	strbhi	r2, [r4, #19]
 800cc00:	bf88      	it	hi
 800cc02:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800cc06:	e724      	b.n	800ca52 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800cc08:	00b1      	lsls	r1, r6, #2
 800cc0a:	3101      	adds	r1, #1
 800cc0c:	8039      	strh	r1, [r7, #0]
 800cc0e:	ea23 0302 	bic.w	r3, r3, r2
 800cc12:	e7dd      	b.n	800cbd0 <WS28xxDmxParams::callbackFunction(char const*)+0x1c0>
 800cc14:	4628      	mov	r0, r5
 800cc16:	4916      	ldr	r1, [pc, #88]	; (800cc70 <WS28xxDmxParams::callbackFunction(char const*)+0x260>)
 800cc18:	f10d 0201 	add.w	r2, sp, #1
 800cc1c:	f005 fbc9 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cc20:	2800      	cmp	r0, #0
 800cc22:	f47f af4c 	bne.w	800cabe <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800cc26:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cc2a:	6863      	ldr	r3, [r4, #4]
 800cc2c:	1e51      	subs	r1, r2, #1
 800cc2e:	2904      	cmp	r1, #4
 800cc30:	bf99      	ittee	ls
 800cc32:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800cc36:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800cc3a:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800cc3e:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800cc42:	e706      	b.n	800ca52 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800cc44:	08017b2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, fp, ip, sp, lr}
 800cc48:	08017b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, sp, lr}
 800cc4c:	08017b1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, fp, ip, sp, lr}
 800cc50:	08017b42 	stmdaeq	r1, {r1, r6, r8, r9, fp, ip, sp, lr}
 800cc54:	08017b4a 	stmdaeq	r1, {r1, r3, r6, r8, r9, fp, ip, sp, lr}
 800cc58:	08017afd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr}
 800cc5c:	08017aee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, fp, ip, sp, lr}
 800cc60:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800cc64:	08017b0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, fp, ip, sp, lr}
 800cc68:	08017bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 800cc6c:	08017ae3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, fp, ip, sp, lr}
 800cc70:	08017b8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, fp, ip, sp, lr}

0800cc74 <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800cc74:	f7ff becc 	b.w	800ca10 <WS28xxDmxParams::callbackFunction(char const*)>

0800cc78 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800cc78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc7c:	4604      	mov	r4, r0
 800cc7e:	4615      	mov	r5, r2
 800cc80:	461e      	mov	r6, r3
 800cc82:	b086      	sub	sp, #24
 800cc84:	3004      	adds	r0, #4
 800cc86:	2900      	cmp	r1, #0
 800cc88:	f000 808e 	beq.w	800cda8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x130>
 800cc8c:	2227      	movs	r2, #39	; 0x27
 800cc8e:	f006 f9a0 	bl	8012fd2 <memmove>
 800cc92:	4633      	mov	r3, r6
 800cc94:	462a      	mov	r2, r5
 800cc96:	497b      	ldr	r1, [pc, #492]	; (800ce84 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800cc98:	a803      	add	r0, sp, #12
 800cc9a:	f005 f9af 	bl	8011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cc9e:	7a20      	ldrb	r0, [r4, #8]
 800cca0:	f000 fd36 	bl	800d710 <PixelType::GetType(pixel::Type)>
 800cca4:	6863      	ldr	r3, [r4, #4]
 800cca6:	4602      	mov	r2, r0
 800cca8:	4977      	ldr	r1, [pc, #476]	; (800ce88 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800ccaa:	f003 0301 	and.w	r3, r3, #1
 800ccae:	a803      	add	r0, sp, #12
 800ccb0:	f7ff fdf0 	bl	800c894 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ccb4:	6863      	ldr	r3, [r4, #4]
 800ccb6:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800ccba:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800ccbe:	4973      	ldr	r1, [pc, #460]	; (800ce8c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800ccc0:	a803      	add	r0, sp, #12
 800ccc2:	f7ff fdbf 	bl	800c844 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ccc6:	4972      	ldr	r1, [pc, #456]	; (800ce90 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800ccc8:	a803      	add	r0, sp, #12
 800ccca:	f005 fa1d 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800ccce:	6863      	ldr	r3, [r4, #4]
 800ccd0:	059e      	lsls	r6, r3, #22
 800ccd2:	d403      	bmi.n	800ccdc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x64>
 800ccd4:	7a20      	ldrb	r0, [r4, #8]
 800ccd6:	f000 f9a4 	bl	800d022 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800ccda:	75e0      	strb	r0, [r4, #23]
 800ccdc:	7de0      	ldrb	r0, [r4, #23]
 800ccde:	f000 fd8b 	bl	800d7f8 <PixelType::GetMap(pixel::Map)>
 800cce2:	6863      	ldr	r3, [r4, #4]
 800cce4:	4602      	mov	r2, r0
 800cce6:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800ccea:	496a      	ldr	r1, [pc, #424]	; (800ce94 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800ccec:	a803      	add	r0, sp, #12
 800ccee:	f7ff fdd1 	bl	800c894 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ccf2:	6863      	ldr	r3, [r4, #4]
 800ccf4:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800ccf8:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800ccfc:	d011      	beq.n	800cd22 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800ccfe:	f10d 020b 	add.w	r2, sp, #11
 800cd02:	7a20      	ldrb	r0, [r4, #8]
 800cd04:	f10d 010a 	add.w	r1, sp, #10
 800cd08:	f000 f99a 	bl	800d040 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cd0c:	6863      	ldr	r3, [r4, #4]
 800cd0e:	055d      	lsls	r5, r3, #21
 800cd10:	bf5c      	itt	pl
 800cd12:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800cd16:	7622      	strbpl	r2, [r4, #24]
 800cd18:	0518      	lsls	r0, r3, #20
 800cd1a:	bf5c      	itt	pl
 800cd1c:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800cd20:	7663      	strbpl	r3, [r4, #25]
 800cd22:	495d      	ldr	r1, [pc, #372]	; (800ce98 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800cd24:	a803      	add	r0, sp, #12
 800cd26:	f005 f9ef 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800cd2a:	7e20      	ldrb	r0, [r4, #24]
 800cd2c:	f000 fd70 	bl	800d810 <PixelType::ConvertTxH(unsigned char)>
 800cd30:	2502      	movs	r5, #2
 800cd32:	6863      	ldr	r3, [r4, #4]
 800cd34:	4602      	mov	r2, r0
 800cd36:	4959      	ldr	r1, [pc, #356]	; (800ce9c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800cd38:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800cd3c:	9500      	str	r5, [sp, #0]
 800cd3e:	a803      	add	r0, sp, #12
 800cd40:	f7ff fdd0 	bl	800c8e4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cd44:	7e60      	ldrb	r0, [r4, #25]
 800cd46:	f000 fd63 	bl	800d810 <PixelType::ConvertTxH(unsigned char)>
 800cd4a:	6863      	ldr	r3, [r4, #4]
 800cd4c:	4602      	mov	r2, r0
 800cd4e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800cd52:	4953      	ldr	r1, [pc, #332]	; (800cea0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800cd54:	9500      	str	r5, [sp, #0]
 800cd56:	a803      	add	r0, sp, #12
 800cd58:	f7ff fdc4 	bl	800c8e4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cd5c:	4951      	ldr	r1, [pc, #324]	; (800cea4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800cd5e:	a803      	add	r0, sp, #12
 800cd60:	f005 f9d2 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800cd64:	6863      	ldr	r3, [r4, #4]
 800cd66:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800cd6a:	494f      	ldr	r1, [pc, #316]	; (800cea8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800cd6c:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800cd70:	a803      	add	r0, sp, #12
 800cd72:	f7ff fd67 	bl	800c844 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cd76:	494d      	ldr	r1, [pc, #308]	; (800ceac <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800cd78:	a803      	add	r0, sp, #12
 800cd7a:	f005 f9c5 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800cd7e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800cd82:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cd86:	42a9      	cmp	r1, r5
 800cd88:	d224      	bcs.n	800cdd4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15c>
 800cd8a:	9803      	ldr	r0, [sp, #12]
 800cd8c:	1a6d      	subs	r5, r5, r1
 800cd8e:	4408      	add	r0, r1
 800cd90:	6861      	ldr	r1, [r4, #4]
 800cd92:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cd96:	06c9      	lsls	r1, r1, #27
 800cd98:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800cd9c:	d40b      	bmi.n	800cdb6 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13e>
 800cd9e:	b962      	cbnz	r2, 800cdba <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x142>
 800cda0:	9300      	str	r3, [sp, #0]
 800cda2:	4a43      	ldr	r2, [pc, #268]	; (800ceb0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800cda4:	4b43      	ldr	r3, [pc, #268]	; (800ceb4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800cda6:	e00b      	b.n	800cdc0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800cda8:	6823      	ldr	r3, [r4, #0]
 800cdaa:	4601      	mov	r1, r0
 800cdac:	681a      	ldr	r2, [r3, #0]
 800cdae:	4618      	mov	r0, r3
 800cdb0:	68d2      	ldr	r2, [r2, #12]
 800cdb2:	4790      	blx	r2
 800cdb4:	e76d      	b.n	800cc92 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1a>
 800cdb6:	2a00      	cmp	r2, #0
 800cdb8:	d05f      	beq.n	800ce7a <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x202>
 800cdba:	9300      	str	r3, [sp, #0]
 800cdbc:	4a3e      	ldr	r2, [pc, #248]	; (800ceb8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800cdbe:	4b3d      	ldr	r3, [pc, #244]	; (800ceb4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800cdc0:	4629      	mov	r1, r5
 800cdc2:	f006 fc75 	bl	80136b0 <snprintf>
 800cdc6:	4285      	cmp	r5, r0
 800cdc8:	bfa2      	ittt	ge
 800cdca:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cdce:	18c0      	addge	r0, r0, r3
 800cdd0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cdd4:	4939      	ldr	r1, [pc, #228]	; (800cebc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800cdd6:	a803      	add	r0, sp, #12
 800cdd8:	f005 f996 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800cddc:	6863      	ldr	r3, [r4, #4]
 800cdde:	7ca2      	ldrb	r2, [r4, #18]
 800cde0:	4937      	ldr	r1, [pc, #220]	; (800cec0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x248>)
 800cde2:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800cde6:	a803      	add	r0, sp, #12
 800cde8:	f7ff fd04 	bl	800c7f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cdec:	2500      	movs	r5, #0
 800cdee:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800cdf2:	4e34      	ldr	r6, [pc, #208]	; (800cec4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x24c>)
 800cdf4:	f104 071a 	add.w	r7, r4, #26
 800cdf8:	6862      	ldr	r2, [r4, #4]
 800cdfa:	fa08 f305 	lsl.w	r3, r8, r5
 800cdfe:	4393      	bics	r3, r2
 800ce00:	bf0c      	ite	eq
 800ce02:	2301      	moveq	r3, #1
 800ce04:	2300      	movne	r3, #0
 800ce06:	4631      	mov	r1, r6
 800ce08:	f837 2b02 	ldrh.w	r2, [r7], #2
 800ce0c:	a803      	add	r0, sp, #12
 800ce0e:	3501      	adds	r5, #1
 800ce10:	f7ff fd18 	bl	800c844 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ce14:	2d08      	cmp	r5, #8
 800ce16:	f106 0612 	add.w	r6, r6, #18
 800ce1a:	d1ed      	bne.n	800cdf8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x180>
 800ce1c:	6863      	ldr	r3, [r4, #4]
 800ce1e:	7ce2      	ldrb	r2, [r4, #19]
 800ce20:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800ce24:	4928      	ldr	r1, [pc, #160]	; (800cec8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x250>)
 800ce26:	a803      	add	r0, sp, #12
 800ce28:	f7ff fce4 	bl	800c7f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ce2c:	4927      	ldr	r1, [pc, #156]	; (800cecc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800ce2e:	a803      	add	r0, sp, #12
 800ce30:	f005 f96a 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 800ce34:	6863      	ldr	r3, [r4, #4]
 800ce36:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800ce3a:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800ce3e:	4924      	ldr	r1, [pc, #144]	; (800ced0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x258>)
 800ce40:	a803      	add	r0, sp, #12
 800ce42:	f7ff fcd7 	bl	800c7f4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ce46:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ce4a:	b17b      	cbz	r3, 800ce6c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 800ce4c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ce50:	9b03      	ldr	r3, [sp, #12]
 800ce52:	4413      	add	r3, r2
 800ce54:	227d      	movs	r2, #125	; 0x7d
 800ce56:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ce5a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ce5e:	9903      	ldr	r1, [sp, #12]
 800ce60:	54ca      	strb	r2, [r1, r3]
 800ce62:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ce66:	3301      	adds	r3, #1
 800ce68:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ce6c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ce70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ce72:	601a      	str	r2, [r3, #0]
 800ce74:	b006      	add	sp, #24
 800ce76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce7a:	9300      	str	r3, [sp, #0]
 800ce7c:	4a15      	ldr	r2, [pc, #84]	; (800ced4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ce7e:	4b0d      	ldr	r3, [pc, #52]	; (800ceb4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800ce80:	e79e      	b.n	800cdc0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800ce82:	bf00      	nop
 800ce84:	08017b52 	stmdaeq	r1, {r1, r4, r6, r8, r9, fp, ip, sp, lr}
 800ce88:	08017b2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, fp, ip, sp, lr}
 800ce8c:	08017b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, sp, lr}
 800ce90:	08017269 	stmdaeq	r1, {r0, r3, r5, r6, r9, ip, sp, lr}
 800ce94:	08017b1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, fp, ip, sp, lr}
 800ce98:	0801727d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, ip, sp, lr}
 800ce9c:	08017b42 	stmdaeq	r1, {r1, r6, r8, r9, fp, ip, sp, lr}
 800cea0:	08017b4a 	stmdaeq	r1, {r1, r3, r6, r8, r9, fp, ip, sp, lr}
 800cea4:	08017293 	stmdaeq	r1, {r0, r1, r4, r7, r9, ip, sp, lr}
 800cea8:	08017afd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr}
 800ceac:	0801729c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, sp, lr}
 800ceb0:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 800ceb4:	08017aee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, fp, ip, sp, lr}
 800ceb8:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 800cebc:	080172ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r9, ip, sp, lr}
 800cec0:	08017b0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, fp, ip, sp, lr}
 800cec4:	08017bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 800cec8:	08017ae3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, fp, ip, sp, lr}
 800cecc:	080172bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, ip, sp, lr}
 800ced0:	08017b8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, fp, ip, sp, lr}
 800ced4:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

0800ced8 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800ced8:	b513      	push	{r0, r1, r4, lr}
 800ceda:	6804      	ldr	r4, [r0, #0]
 800cedc:	b914      	cbnz	r4, 800cee4 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800cede:	601c      	str	r4, [r3, #0]
 800cee0:	b002      	add	sp, #8
 800cee2:	bd10      	pop	{r4, pc}
 800cee4:	9300      	str	r3, [sp, #0]
 800cee6:	4613      	mov	r3, r2
 800cee8:	460a      	mov	r2, r1
 800ceea:	2100      	movs	r1, #0
 800ceec:	f7ff fec4 	bl	800cc78 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800cef0:	e7f6      	b.n	800cee0 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800cef2 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800cef2:	6843      	ldr	r3, [r0, #4]
 800cef4:	07da      	lsls	r2, r3, #31
 800cef6:	bf44      	itt	mi
 800cef8:	7a02      	ldrbmi	r2, [r0, #8]
 800cefa:	600a      	strmi	r2, [r1, #0]
 800cefc:	079a      	lsls	r2, r3, #30
 800cefe:	d505      	bpl.n	800cf0c <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800cf00:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800cf04:	2a00      	cmp	r2, #0
 800cf06:	bf08      	it	eq
 800cf08:	22aa      	moveq	r2, #170	; 0xaa
 800cf0a:	604a      	str	r2, [r1, #4]
 800cf0c:	059a      	lsls	r2, r3, #22
 800cf0e:	bf44      	itt	mi
 800cf10:	7dc2      	ldrbmi	r2, [r0, #23]
 800cf12:	608a      	strmi	r2, [r1, #8]
 800cf14:	055a      	lsls	r2, r3, #21
 800cf16:	bf44      	itt	mi
 800cf18:	7e02      	ldrbmi	r2, [r0, #24]
 800cf1a:	740a      	strbmi	r2, [r1, #16]
 800cf1c:	051a      	lsls	r2, r3, #20
 800cf1e:	bf44      	itt	mi
 800cf20:	7e42      	ldrbmi	r2, [r0, #25]
 800cf22:	744a      	strbmi	r2, [r1, #17]
 800cf24:	06da      	lsls	r2, r3, #27
 800cf26:	bf44      	itt	mi
 800cf28:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800cf2c:	60ca      	strmi	r2, [r1, #12]
 800cf2e:	069a      	lsls	r2, r3, #26
 800cf30:	bf44      	itt	mi
 800cf32:	7c82      	ldrbmi	r2, [r0, #18]
 800cf34:	748a      	strbmi	r2, [r1, #18]
 800cf36:	075a      	lsls	r2, r3, #29
 800cf38:	d50f      	bpl.n	800cf5a <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x68>
 800cf3a:	7ac2      	ldrb	r2, [r0, #11]
 800cf3c:	b510      	push	{r4, lr}
 800cf3e:	7b04      	ldrb	r4, [r0, #12]
 800cf40:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800cf44:	838a      	strh	r2, [r1, #28]
 800cf46:	05da      	lsls	r2, r3, #23
 800cf48:	bf44      	itt	mi
 800cf4a:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cf4e:	618a      	strmi	r2, [r1, #24]
 800cf50:	065c      	lsls	r4, r3, #25
 800cf52:	bf44      	itt	mi
 800cf54:	7cc3      	ldrbmi	r3, [r0, #19]
 800cf56:	614b      	strmi	r3, [r1, #20]
 800cf58:	bd10      	pop	{r4, pc}
 800cf5a:	05da      	lsls	r2, r3, #23
 800cf5c:	bf44      	itt	mi
 800cf5e:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cf62:	618a      	strmi	r2, [r1, #24]
 800cf64:	065b      	lsls	r3, r3, #25
 800cf66:	bf44      	itt	mi
 800cf68:	7cc3      	ldrbmi	r3, [r0, #19]
 800cf6a:	614b      	strmi	r3, [r1, #20]
 800cf6c:	4770      	bx	lr

0800cf6e <WS28xxDmxParams::Dump()>:
 800cf6e:	4770      	bx	lr

0800cf70 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800cf70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf74:	460e      	mov	r6, r1
 800cf76:	4611      	mov	r1, r2
 800cf78:	4604      	mov	r4, r0
 800cf7a:	4690      	mov	r8, r2
 800cf7c:	461d      	mov	r5, r3
 800cf7e:	9f06      	ldr	r7, [sp, #24]
 800cf80:	f000 f86c 	bl	800d05c <PixelConfiguration::Validate(unsigned int&)>
 800cf84:	2e01      	cmp	r6, #1
 800cf86:	d009      	beq.n	800cf9c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800cf88:	7ce2      	ldrb	r2, [r4, #19]
 800cf8a:	b93a      	cbnz	r2, 800cf9c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800cf8c:	2e04      	cmp	r6, #4
 800cf8e:	d13f      	bne.n	800d010 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa0>
 800cf90:	2303      	movs	r3, #3
 800cf92:	6023      	str	r3, [r4, #0]
 800cf94:	4641      	mov	r1, r8
 800cf96:	4620      	mov	r0, r4
 800cf98:	f000 f860 	bl	800d05c <PixelConfiguration::Validate(unsigned int&)>
 800cf9c:	6823      	ldr	r3, [r4, #0]
 800cf9e:	2b07      	cmp	r3, #7
 800cfa0:	bf0d      	iteet	eq
 800cfa2:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800cfa6:	f44f 73aa 	movne.w	r3, #340	; 0x154
 800cfaa:	22aa      	movne	r2, #170	; 0xaa
 800cfac:	2180      	moveq	r1, #128	; 0x80
 800cfae:	bf15      	itete	ne
 800cfb0:	e9c5 2300 	strdne	r2, r3, [r5]
 800cfb4:	e9c5 1300 	strdeq	r1, r3, [r5]
 800cfb8:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800cfbc:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800cfc0:	69a2      	ldr	r2, [r4, #24]
 800cfc2:	60ab      	str	r3, [r5, #8]
 800cfc4:	6863      	ldr	r3, [r4, #4]
 800cfc6:	b10a      	cbz	r2, 800cfcc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 800cfc8:	429a      	cmp	r2, r3
 800cfca:	d900      	bls.n	800cfce <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 800cfcc:	61a3      	str	r3, [r4, #24]
 800cfce:	69a2      	ldr	r2, [r4, #24]
 800cfd0:	fbb3 f3f2 	udiv	r3, r3, r2
 800cfd4:	603b      	str	r3, [r7, #0]
 800cfd6:	6963      	ldr	r3, [r4, #20]
 800cfd8:	682a      	ldr	r2, [r5, #0]
 800cfda:	42b3      	cmp	r3, r6
 800cfdc:	bf94      	ite	ls
 800cfde:	6163      	strls	r3, [r4, #20]
 800cfe0:	6166      	strhi	r6, [r4, #20]
 800cfe2:	1c53      	adds	r3, r2, #1
 800cfe4:	683a      	ldr	r2, [r7, #0]
 800cfe6:	2e01      	cmp	r6, #1
 800cfe8:	fbb2 f2f3 	udiv	r2, r2, r3
 800cfec:	9b07      	ldr	r3, [sp, #28]
 800cfee:	f102 0201 	add.w	r2, r2, #1
 800cff2:	601a      	str	r2, [r3, #0]
 800cff4:	bf09      	itett	eq
 800cff6:	682a      	ldreq	r2, [r5, #0]
 800cff8:	6963      	ldrne	r3, [r4, #20]
 800cffa:	1c53      	addeq	r3, r2, #1
 800cffc:	683a      	ldreq	r2, [r7, #0]
 800cffe:	bf16      	itet	ne
 800d000:	435a      	mulne	r2, r3
 800d002:	fbb2 f2f3 	udiveq	r2, r2, r3
 800d006:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800d00a:	60ea      	str	r2, [r5, #12]
 800d00c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d010:	6823      	ldr	r3, [r4, #0]
 800d012:	2b00      	cmp	r3, #0
 800d014:	d0be      	beq.n	800cf94 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800d016:	3b0b      	subs	r3, #11
 800d018:	2b01      	cmp	r3, #1
 800d01a:	bf88      	it	hi
 800d01c:	6022      	strhi	r2, [r4, #0]
 800d01e:	e7b9      	b.n	800cf94 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800d020 <PixelDmxConfiguration::Dump()>:
 800d020:	4770      	bx	lr

0800d022 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800d022:	f020 0308 	bic.w	r3, r0, #8
 800d026:	2b01      	cmp	r3, #1
 800d028:	d006      	beq.n	800d038 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800d02a:	2808      	cmp	r0, #8
 800d02c:	d006      	beq.n	800d03c <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800d02e:	280a      	cmp	r0, #10
 800d030:	bf14      	ite	ne
 800d032:	2002      	movne	r0, #2
 800d034:	2005      	moveq	r0, #5
 800d036:	4770      	bx	lr
 800d038:	2000      	movs	r0, #0
 800d03a:	4770      	bx	lr
 800d03c:	2004      	movs	r0, #4
 800d03e:	4770      	bx	lr

0800d040 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800d040:	23c0      	movs	r3, #192	; 0xc0
 800d042:	2803      	cmp	r0, #3
 800d044:	700b      	strb	r3, [r1, #0]
 800d046:	d006      	beq.n	800d056 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800d048:	3808      	subs	r0, #8
 800d04a:	2803      	cmp	r0, #3
 800d04c:	bf34      	ite	cc
 800d04e:	23fc      	movcc	r3, #252	; 0xfc
 800d050:	23f0      	movcs	r3, #240	; 0xf0
 800d052:	7013      	strb	r3, [r2, #0]
 800d054:	4770      	bx	lr
 800d056:	23f8      	movs	r3, #248	; 0xf8
 800d058:	e7fb      	b.n	800d052 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800d05c <PixelConfiguration::Validate(unsigned int&)>:
 800d05c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d05e:	4604      	mov	r4, r0
 800d060:	2329      	movs	r3, #41	; 0x29
 800d062:	460e      	mov	r6, r1
 800d064:	4a36      	ldr	r2, [pc, #216]	; (800d140 <PixelConfiguration::Validate(unsigned int&)+0xe4>)
 800d066:	4937      	ldr	r1, [pc, #220]	; (800d144 <PixelConfiguration::Validate(unsigned int&)+0xe8>)
 800d068:	4837      	ldr	r0, [pc, #220]	; (800d148 <PixelConfiguration::Validate(unsigned int&)+0xec>)
 800d06a:	f006 faf9 	bl	8013660 <printf>
 800d06e:	6825      	ldr	r5, [r4, #0]
 800d070:	6863      	ldr	r3, [r4, #4]
 800d072:	2d07      	cmp	r5, #7
 800d074:	d12a      	bne.n	800d0cc <PixelConfiguration::Validate(unsigned int&)+0x70>
 800d076:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d07a:	bf28      	it	cs
 800d07c:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800d080:	6063      	str	r3, [r4, #4]
 800d082:	2304      	movs	r3, #4
 800d084:	6033      	str	r3, [r6, #0]
 800d086:	2201      	movs	r2, #1
 800d088:	68a3      	ldr	r3, [r4, #8]
 800d08a:	74e2      	strb	r2, [r4, #19]
 800d08c:	2b06      	cmp	r3, #6
 800d08e:	d103      	bne.n	800d098 <PixelConfiguration::Validate(unsigned int&)+0x3c>
 800d090:	4628      	mov	r0, r5
 800d092:	f7ff ffc6 	bl	800d022 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800d096:	60a0      	str	r0, [r4, #8]
 800d098:	7c63      	ldrb	r3, [r4, #17]
 800d09a:	7c22      	ldrb	r2, [r4, #16]
 800d09c:	4628      	mov	r0, r5
 800d09e:	429a      	cmp	r2, r3
 800d0a0:	bf28      	it	cs
 800d0a2:	2300      	movcs	r3, #0
 800d0a4:	f10d 0207 	add.w	r2, sp, #7
 800d0a8:	bf28      	it	cs
 800d0aa:	8223      	strhcs	r3, [r4, #16]
 800d0ac:	f10d 0106 	add.w	r1, sp, #6
 800d0b0:	f7ff ffc6 	bl	800d040 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800d0b4:	7c23      	ldrb	r3, [r4, #16]
 800d0b6:	b913      	cbnz	r3, 800d0be <PixelConfiguration::Validate(unsigned int&)+0x62>
 800d0b8:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800d0bc:	7423      	strb	r3, [r4, #16]
 800d0be:	7c63      	ldrb	r3, [r4, #17]
 800d0c0:	b913      	cbnz	r3, 800d0c8 <PixelConfiguration::Validate(unsigned int&)+0x6c>
 800d0c2:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d0c6:	7463      	strb	r3, [r4, #17]
 800d0c8:	4b20      	ldr	r3, [pc, #128]	; (800d14c <PixelConfiguration::Validate(unsigned int&)+0xf0>)
 800d0ca:	e021      	b.n	800d110 <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800d0cc:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800d0d0:	bf28      	it	cs
 800d0d2:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800d0d6:	6063      	str	r3, [r4, #4]
 800d0d8:	2303      	movs	r3, #3
 800d0da:	6033      	str	r3, [r6, #0]
 800d0dc:	f1a5 030b 	sub.w	r3, r5, #11
 800d0e0:	2b01      	cmp	r3, #1
 800d0e2:	d806      	bhi.n	800d0f2 <PixelConfiguration::Validate(unsigned int&)+0x96>
 800d0e4:	7ca3      	ldrb	r3, [r4, #18]
 800d0e6:	2b1f      	cmp	r3, #31
 800d0e8:	d825      	bhi.n	800d136 <PixelConfiguration::Validate(unsigned int&)+0xda>
 800d0ea:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800d0ee:	74a3      	strb	r3, [r4, #18]
 800d0f0:	e000      	b.n	800d0f4 <PixelConfiguration::Validate(unsigned int&)+0x98>
 800d0f2:	bb15      	cbnz	r5, 800d13a <PixelConfiguration::Validate(unsigned int&)+0xde>
 800d0f4:	f44f 427f 	mov.w	r2, #65280	; 0xff00
 800d0f8:	2300      	movs	r3, #0
 800d0fa:	8222      	strh	r2, [r4, #16]
 800d0fc:	68a2      	ldr	r2, [r4, #8]
 800d0fe:	74e3      	strb	r3, [r4, #19]
 800d100:	2a06      	cmp	r2, #6
 800d102:	bf08      	it	eq
 800d104:	60a3      	streq	r3, [r4, #8]
 800d106:	2d0d      	cmp	r5, #13
 800d108:	68e3      	ldr	r3, [r4, #12]
 800d10a:	d110      	bne.n	800d12e <PixelConfiguration::Validate(unsigned int&)+0xd2>
 800d10c:	b913      	cbnz	r3, 800d114 <PixelConfiguration::Validate(unsigned int&)+0xb8>
 800d10e:	4b10      	ldr	r3, [pc, #64]	; (800d150 <PixelConfiguration::Validate(unsigned int&)+0xf4>)
 800d110:	60e3      	str	r3, [r4, #12]
 800d112:	e003      	b.n	800d11c <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800d114:	4a0f      	ldr	r2, [pc, #60]	; (800d154 <PixelConfiguration::Validate(unsigned int&)+0xf8>)
 800d116:	4293      	cmp	r3, r2
 800d118:	d900      	bls.n	800d11c <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800d11a:	60e2      	str	r2, [r4, #12]
 800d11c:	236c      	movs	r3, #108	; 0x6c
 800d11e:	4a08      	ldr	r2, [pc, #32]	; (800d140 <PixelConfiguration::Validate(unsigned int&)+0xe4>)
 800d120:	4908      	ldr	r1, [pc, #32]	; (800d144 <PixelConfiguration::Validate(unsigned int&)+0xe8>)
 800d122:	480d      	ldr	r0, [pc, #52]	; (800d158 <PixelConfiguration::Validate(unsigned int&)+0xfc>)
 800d124:	b002      	add	sp, #8
 800d126:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d12a:	f006 ba99 	b.w	8013660 <printf>
 800d12e:	2b00      	cmp	r3, #0
 800d130:	d0ed      	beq.n	800d10e <PixelConfiguration::Validate(unsigned int&)+0xb2>
 800d132:	4a0a      	ldr	r2, [pc, #40]	; (800d15c <PixelConfiguration::Validate(unsigned int&)+0x100>)
 800d134:	e7ef      	b.n	800d116 <PixelConfiguration::Validate(unsigned int&)+0xba>
 800d136:	23ff      	movs	r3, #255	; 0xff
 800d138:	e7d9      	b.n	800d0ee <PixelConfiguration::Validate(unsigned int&)+0x92>
 800d13a:	2d0d      	cmp	r5, #13
 800d13c:	d0da      	beq.n	800d0f4 <PixelConfiguration::Validate(unsigned int&)+0x98>
 800d13e:	e7a2      	b.n	800d086 <PixelConfiguration::Validate(unsigned int&)+0x2a>
 800d140:	080172c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, ip, sp, lr}
 800d144:	080172d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, ip, sp, lr}
 800d148:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 800d14c:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800d150:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d154:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800d158:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}
 800d15c:	017d7840 	cmneq	sp, r0, asr #16

0800d160 <PixelConfiguration::Dump()>:
 800d160:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d162:	4604      	mov	r4, r0
 800d164:	6800      	ldr	r0, [r0, #0]
 800d166:	f000 fad3 	bl	800d710 <PixelType::GetType(pixel::Type)>
 800d16a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800d16e:	4601      	mov	r1, r0
 800d170:	480f      	ldr	r0, [pc, #60]	; (800d1b0 <PixelConfiguration::Dump()+0x50>)
 800d172:	f006 fa75 	bl	8013660 <printf>
 800d176:	68a0      	ldr	r0, [r4, #8]
 800d178:	7c25      	ldrb	r5, [r4, #16]
 800d17a:	7c66      	ldrb	r6, [r4, #17]
 800d17c:	f000 fb3c 	bl	800d7f8 <PixelType::GetMap(pixel::Map)>
 800d180:	68a2      	ldr	r2, [r4, #8]
 800d182:	4603      	mov	r3, r0
 800d184:	9200      	str	r2, [sp, #0]
 800d186:	4629      	mov	r1, r5
 800d188:	4632      	mov	r2, r6
 800d18a:	480a      	ldr	r0, [pc, #40]	; (800d1b4 <PixelConfiguration::Dump()+0x54>)
 800d18c:	f006 fa68 	bl	8013660 <printf>
 800d190:	6823      	ldr	r3, [r4, #0]
 800d192:	3b0b      	subs	r3, #11
 800d194:	2b01      	cmp	r3, #1
 800d196:	d803      	bhi.n	800d1a0 <PixelConfiguration::Dump()+0x40>
 800d198:	7ca1      	ldrb	r1, [r4, #18]
 800d19a:	4807      	ldr	r0, [pc, #28]	; (800d1b8 <PixelConfiguration::Dump()+0x58>)
 800d19c:	f006 fa60 	bl	8013660 <printf>
 800d1a0:	68e1      	ldr	r1, [r4, #12]
 800d1a2:	4806      	ldr	r0, [pc, #24]	; (800d1bc <PixelConfiguration::Dump()+0x5c>)
 800d1a4:	b002      	add	sp, #8
 800d1a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d1aa:	f006 ba59 	b.w	8013660 <printf>
 800d1ae:	bf00      	nop
 800d1b0:	080172ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, ip, sp, lr}
 800d1b4:	08017305 	stmdaeq	r1, {r0, r2, r8, r9, ip, sp, lr}
 800d1b8:	08017324 	stmdaeq	r1, {r2, r5, r8, r9, ip, sp, lr}
 800d1bc:	0801733a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, ip, sp, lr}

0800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800d1c0:	b507      	push	{r0, r1, r2, lr}
 800d1c2:	b2d3      	uxtb	r3, r2
 800d1c4:	9301      	str	r3, [sp, #4]
 800d1c6:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800d1ca:	9300      	str	r3, [sp, #0]
 800d1cc:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800d1d0:	460a      	mov	r2, r1
 800d1d2:	4601      	mov	r1, r0
 800d1d4:	4803      	ldr	r0, [pc, #12]	; (800d1e4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>)
 800d1d6:	6800      	ldr	r0, [r0, #0]
 800d1d8:	f000 fe52 	bl	800de80 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800d1dc:	b003      	add	sp, #12
 800d1de:	f85d fb04 	ldr.w	pc, [sp], #4
 800d1e2:	bf00      	nop
 800d1e4:	20001d88 	andcs	r1, r0, r8, lsl #27

0800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800d1e8:	b570      	push	{r4, r5, r6, lr}
 800d1ea:	4605      	mov	r5, r0
 800d1ec:	2400      	movs	r4, #0
 800d1ee:	4e06      	ldr	r6, [pc, #24]	; (800d208 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800d1f0:	6833      	ldr	r3, [r6, #0]
 800d1f2:	42a3      	cmp	r3, r4
 800d1f4:	d906      	bls.n	800d204 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>
 800d1f6:	4621      	mov	r1, r4
 800d1f8:	2200      	movs	r2, #0
 800d1fa:	4628      	mov	r0, r5
 800d1fc:	f7ff ffe0 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d200:	3401      	adds	r4, #1
 800d202:	e7f5      	b.n	800d1f0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800d204:	bd70      	pop	{r4, r5, r6, pc}
 800d206:	bf00      	nop
 800d208:	20001d84 	andcs	r1, r0, r4, lsl #27

0800d20c <PixelPatterns::PixelPatterns(unsigned int)>:
 800d20c:	4b12      	ldr	r3, [pc, #72]	; (800d258 <PixelPatterns::PixelPatterns(unsigned int)+0x4c>)
 800d20e:	b570      	push	{r4, r5, r6, lr}
 800d210:	681b      	ldr	r3, [r3, #0]
 800d212:	4e12      	ldr	r6, [pc, #72]	; (800d25c <PixelPatterns::PixelPatterns(unsigned int)+0x50>)
 800d214:	4605      	mov	r5, r0
 800d216:	460c      	mov	r4, r1
 800d218:	6033      	str	r3, [r6, #0]
 800d21a:	b92b      	cbnz	r3, 800d228 <PixelPatterns::PixelPatterns(unsigned int)+0x1c>
 800d21c:	213e      	movs	r1, #62	; 0x3e
 800d21e:	4b10      	ldr	r3, [pc, #64]	; (800d260 <PixelPatterns::PixelPatterns(unsigned int)+0x54>)
 800d220:	4a10      	ldr	r2, [pc, #64]	; (800d264 <PixelPatterns::PixelPatterns(unsigned int)+0x58>)
 800d222:	4811      	ldr	r0, [pc, #68]	; (800d268 <PixelPatterns::PixelPatterns(unsigned int)+0x5c>)
 800d224:	f005 fdc6 	bl	8012db4 <__assert_func>
 800d228:	2c08      	cmp	r4, #8
 800d22a:	bf28      	it	cs
 800d22c:	2408      	movcs	r4, #8
 800d22e:	4b0f      	ldr	r3, [pc, #60]	; (800d26c <PixelPatterns::PixelPatterns(unsigned int)+0x60>)
 800d230:	2100      	movs	r1, #0
 800d232:	601c      	str	r4, [r3, #0]
 800d234:	6833      	ldr	r3, [r6, #0]
 800d236:	685a      	ldr	r2, [r3, #4]
 800d238:	4b0d      	ldr	r3, [pc, #52]	; (800d270 <PixelPatterns::PixelPatterns(unsigned int)+0x64>)
 800d23a:	601a      	str	r2, [r3, #0]
 800d23c:	2208      	movs	r2, #8
 800d23e:	4b0d      	ldr	r3, [pc, #52]	; (800d274 <PixelPatterns::PixelPatterns(unsigned int)+0x68>)
 800d240:	6818      	ldr	r0, [r3, #0]
 800d242:	4b0d      	ldr	r3, [pc, #52]	; (800d278 <PixelPatterns::PixelPatterns(unsigned int)+0x6c>)
 800d244:	3a01      	subs	r2, #1
 800d246:	61d9      	str	r1, [r3, #28]
 800d248:	6018      	str	r0, [r3, #0]
 800d24a:	6199      	str	r1, [r3, #24]
 800d24c:	f103 0320 	add.w	r3, r3, #32
 800d250:	d1f8      	bne.n	800d244 <PixelPatterns::PixelPatterns(unsigned int)+0x38>
 800d252:	4628      	mov	r0, r5
 800d254:	bd70      	pop	{r4, r5, r6, pc}
 800d256:	bf00      	nop
 800d258:	200095a4 	andcs	r9, r0, r4, lsr #11
 800d25c:	20001d88 	andcs	r1, r0, r8, lsl #27
 800d260:	08017348 	stmdaeq	r1, {r3, r6, r8, r9, ip, sp, lr}
 800d264:	0801735d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, ip, sp, lr}
 800d268:	0801736b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
 800d26c:	20001d7c 	andcs	r1, r0, ip, ror sp
 800d270:	20001d84 	andcs	r1, r0, r4, lsl #27
 800d274:	200125a8 	andcs	r2, r1, r8, lsr #11
 800d278:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d27c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d27c:	b5e0      	push	{r5, r6, r7, lr}
 800d27e:	4608      	mov	r0, r1
 800d280:	460d      	mov	r5, r1
 800d282:	4617      	mov	r7, r2
 800d284:	461e      	mov	r6, r3
 800d286:	f7ff ffaf 	bl	800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d28a:	2301      	movs	r3, #1
 800d28c:	4905      	ldr	r1, [pc, #20]	; (800d2a4 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800d28e:	22ff      	movs	r2, #255	; 0xff
 800d290:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d294:	61cb      	str	r3, [r1, #28]
 800d296:	2300      	movs	r3, #0
 800d298:	604f      	str	r7, [r1, #4]
 800d29a:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d29e:	618e      	str	r6, [r1, #24]
 800d2a0:	bde0      	pop	{r5, r6, r7, pc}
 800d2a2:	bf00      	nop
 800d2a4:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d2a8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d2a8:	b5e0      	push	{r5, r6, r7, lr}
 800d2aa:	4608      	mov	r0, r1
 800d2ac:	460d      	mov	r5, r1
 800d2ae:	461e      	mov	r6, r3
 800d2b0:	4617      	mov	r7, r2
 800d2b2:	f7ff ff99 	bl	800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d2b6:	2302      	movs	r3, #2
 800d2b8:	4907      	ldr	r1, [pc, #28]	; (800d2d8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d2ba:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d2be:	61cb      	str	r3, [r1, #28]
 800d2c0:	9b04      	ldr	r3, [sp, #16]
 800d2c2:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d2c6:	604b      	str	r3, [r1, #4]
 800d2c8:	4b04      	ldr	r3, [pc, #16]	; (800d2dc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d2ca:	681b      	ldr	r3, [r3, #0]
 800d2cc:	610b      	str	r3, [r1, #16]
 800d2ce:	2300      	movs	r3, #0
 800d2d0:	614b      	str	r3, [r1, #20]
 800d2d2:	9b05      	ldr	r3, [sp, #20]
 800d2d4:	618b      	str	r3, [r1, #24]
 800d2d6:	bde0      	pop	{r5, r6, r7, pc}
 800d2d8:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d2dc:	20001d84 	andcs	r1, r0, r4, lsl #27

0800d2e0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d2e0:	b5e0      	push	{r5, r6, r7, lr}
 800d2e2:	4608      	mov	r0, r1
 800d2e4:	460d      	mov	r5, r1
 800d2e6:	461f      	mov	r7, r3
 800d2e8:	4616      	mov	r6, r2
 800d2ea:	f7ff ff7d 	bl	800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d2ee:	2303      	movs	r3, #3
 800d2f0:	4906      	ldr	r1, [pc, #24]	; (800d30c <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d2f2:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d2f6:	61cb      	str	r3, [r1, #28]
 800d2f8:	4b05      	ldr	r3, [pc, #20]	; (800d310 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d2fa:	604f      	str	r7, [r1, #4]
 800d2fc:	681b      	ldr	r3, [r3, #0]
 800d2fe:	608e      	str	r6, [r1, #8]
 800d300:	610b      	str	r3, [r1, #16]
 800d302:	2300      	movs	r3, #0
 800d304:	614b      	str	r3, [r1, #20]
 800d306:	9b04      	ldr	r3, [sp, #16]
 800d308:	618b      	str	r3, [r1, #24]
 800d30a:	bde0      	pop	{r5, r6, r7, pc}
 800d30c:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d310:	20001d84 	andcs	r1, r0, r4, lsl #27

0800d314 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d314:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d316:	4608      	mov	r0, r1
 800d318:	460d      	mov	r5, r1
 800d31a:	461f      	mov	r7, r3
 800d31c:	4616      	mov	r6, r2
 800d31e:	f7ff ff63 	bl	800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d322:	2304      	movs	r3, #4
 800d324:	4c12      	ldr	r4, [pc, #72]	; (800d370 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d326:	4913      	ldr	r1, [pc, #76]	; (800d374 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d328:	6820      	ldr	r0, [r4, #0]
 800d32a:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d32e:	61cb      	str	r3, [r1, #28]
 800d330:	1e43      	subs	r3, r0, #1
 800d332:	005b      	lsls	r3, r3, #1
 800d334:	b29b      	uxth	r3, r3
 800d336:	610b      	str	r3, [r1, #16]
 800d338:	2300      	movs	r3, #0
 800d33a:	4d0f      	ldr	r5, [pc, #60]	; (800d378 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800d33c:	614b      	str	r3, [r1, #20]
 800d33e:	682b      	ldr	r3, [r5, #0]
 800d340:	604f      	str	r7, [r1, #4]
 800d342:	608e      	str	r6, [r1, #8]
 800d344:	b993      	cbnz	r3, 800d36c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800d346:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d34a:	4298      	cmp	r0, r3
 800d34c:	bf2c      	ite	cs
 800d34e:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d352:	0080      	lslcc	r0, r0, #2
 800d354:	f005 fd2c 	bl	8012db0 <operator new[](unsigned int)>
 800d358:	2300      	movs	r3, #0
 800d35a:	461a      	mov	r2, r3
 800d35c:	6821      	ldr	r1, [r4, #0]
 800d35e:	6028      	str	r0, [r5, #0]
 800d360:	4299      	cmp	r1, r3
 800d362:	d903      	bls.n	800d36c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800d364:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 800d368:	3301      	adds	r3, #1
 800d36a:	e7f9      	b.n	800d360 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4c>
 800d36c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d36e:	bf00      	nop
 800d370:	20001d84 	andcs	r1, r0, r4, lsl #27
 800d374:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d378:	20001d80 	andcs	r1, r0, r0, lsl #27

0800d37c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d37c:	b5e0      	push	{r5, r6, r7, lr}
 800d37e:	4608      	mov	r0, r1
 800d380:	460d      	mov	r5, r1
 800d382:	461e      	mov	r6, r3
 800d384:	4617      	mov	r7, r2
 800d386:	f7ff ff2f 	bl	800d1e8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d38a:	2305      	movs	r3, #5
 800d38c:	4907      	ldr	r1, [pc, #28]	; (800d3ac <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d38e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d392:	61cb      	str	r3, [r1, #28]
 800d394:	9b05      	ldr	r3, [sp, #20]
 800d396:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d39a:	604b      	str	r3, [r1, #4]
 800d39c:	9b04      	ldr	r3, [sp, #16]
 800d39e:	610b      	str	r3, [r1, #16]
 800d3a0:	2300      	movs	r3, #0
 800d3a2:	614b      	str	r3, [r1, #20]
 800d3a4:	9b06      	ldr	r3, [sp, #24]
 800d3a6:	618b      	str	r3, [r1, #24]
 800d3a8:	bde0      	pop	{r5, r6, r7, pc}
 800d3aa:	bf00      	nop
 800d3ac:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d3b0 <PixelPatterns::Wheel(unsigned char)>:
 800d3b0:	43c9      	mvns	r1, r1
 800d3b2:	b2c9      	uxtb	r1, r1
 800d3b4:	2954      	cmp	r1, #84	; 0x54
 800d3b6:	d809      	bhi.n	800d3cc <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d3b8:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800d3bc:	3801      	subs	r0, #1
 800d3be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d3c2:	b2c3      	uxtb	r3, r0
 800d3c4:	b2c8      	uxtb	r0, r1
 800d3c6:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800d3ca:	4770      	bx	lr
 800d3cc:	29a9      	cmp	r1, #169	; 0xa9
 800d3ce:	d80b      	bhi.n	800d3e8 <PixelPatterns::Wheel(unsigned char)+0x38>
 800d3d0:	3955      	subs	r1, #85	; 0x55
 800d3d2:	b2c9      	uxtb	r1, r1
 800d3d4:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800d3d8:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800d3dc:	b2c3      	uxtb	r3, r0
 800d3de:	1e48      	subs	r0, r1, #1
 800d3e0:	b2c0      	uxtb	r0, r0
 800d3e2:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800d3e6:	4770      	bx	lr
 800d3e8:	3156      	adds	r1, #86	; 0x56
 800d3ea:	b2c9      	uxtb	r1, r1
 800d3ec:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800d3f0:	3801      	subs	r0, #1
 800d3f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d3f6:	b2c3      	uxtb	r3, r0
 800d3f8:	b2c8      	uxtb	r0, r1
 800d3fa:	0400      	lsls	r0, r0, #16
 800d3fc:	e7f1      	b.n	800d3e2 <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800d400 <PixelPatterns::Increment(unsigned int)>:
 800d400:	4a0d      	ldr	r2, [pc, #52]	; (800d438 <PixelPatterns::Increment(unsigned int)+0x38>)
 800d402:	b510      	push	{r4, lr}
 800d404:	014c      	lsls	r4, r1, #5
 800d406:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d40a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d40e:	b930      	cbnz	r0, 800d41e <PixelPatterns::Increment(unsigned int)+0x1e>
 800d410:	690a      	ldr	r2, [r1, #16]
 800d412:	3301      	adds	r3, #1
 800d414:	4293      	cmp	r3, r2
 800d416:	bf18      	it	ne
 800d418:	4618      	movne	r0, r3
 800d41a:	6148      	str	r0, [r1, #20]
 800d41c:	bd10      	pop	{r4, pc}
 800d41e:	b92b      	cbnz	r3, 800d42c <PixelPatterns::Increment(unsigned int)+0x2c>
 800d420:	4422      	add	r2, r4
 800d422:	6913      	ldr	r3, [r2, #16]
 800d424:	3b01      	subs	r3, #1
 800d426:	b29b      	uxth	r3, r3
 800d428:	6153      	str	r3, [r2, #20]
 800d42a:	e7f7      	b.n	800d41c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d42c:	3b01      	subs	r3, #1
 800d42e:	614b      	str	r3, [r1, #20]
 800d430:	2b00      	cmp	r3, #0
 800d432:	d1f3      	bne.n	800d41c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d434:	e7f4      	b.n	800d420 <PixelPatterns::Increment(unsigned int)+0x20>
 800d436:	bf00      	nop
 800d438:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d43c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d43c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d440:	4605      	mov	r5, r0
 800d442:	460c      	mov	r4, r1
 800d444:	2700      	movs	r7, #0
 800d446:	4b11      	ldr	r3, [pc, #68]	; (800d48c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800d448:	f8df 9044 	ldr.w	r9, [pc, #68]	; 800d490 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800d44c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d450:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800d454:	f8d9 3000 	ldr.w	r3, [r9]
 800d458:	b2be      	uxth	r6, r7
 800d45a:	42b3      	cmp	r3, r6
 800d45c:	f107 0701 	add.w	r7, r7, #1
 800d460:	d90d      	bls.n	800d47e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x42>
 800d462:	0231      	lsls	r1, r6, #8
 800d464:	fbb1 f1f3 	udiv	r1, r1, r3
 800d468:	4441      	add	r1, r8
 800d46a:	4628      	mov	r0, r5
 800d46c:	b2c9      	uxtb	r1, r1
 800d46e:	f7ff ff9f 	bl	800d3b0 <PixelPatterns::Wheel(unsigned char)>
 800d472:	4631      	mov	r1, r6
 800d474:	4602      	mov	r2, r0
 800d476:	4620      	mov	r0, r4
 800d478:	f7ff fea2 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d47c:	e7ea      	b.n	800d454 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d47e:	4621      	mov	r1, r4
 800d480:	4628      	mov	r0, r5
 800d482:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d486:	f7ff bfbb 	b.w	800d400 <PixelPatterns::Increment(unsigned int)>
 800d48a:	bf00      	nop
 800d48c:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d490:	20001d84 	andcs	r1, r0, r4, lsl #27

0800d494 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d494:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d498:	4605      	mov	r5, r0
 800d49a:	460c      	mov	r4, r1
 800d49c:	f04f 0b00 	mov.w	fp, #0
 800d4a0:	4b12      	ldr	r3, [pc, #72]	; (800d4ec <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d4a2:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800d4f0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d4a6:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d4aa:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800d4ae:	f8df a044 	ldr.w	sl, [pc, #68]	; 800d4f4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800d4b2:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800d4b6:	f8d9 3000 	ldr.w	r3, [r9]
 800d4ba:	fa1f f18b 	uxth.w	r1, fp
 800d4be:	428b      	cmp	r3, r1
 800d4c0:	d90e      	bls.n	800d4e0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4c>
 800d4c2:	eb08 0301 	add.w	r3, r8, r1
 800d4c6:	fb0a f303 	mul.w	r3, sl, r3
 800d4ca:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d4ce:	bf94      	ite	ls
 800d4d0:	4632      	movls	r2, r6
 800d4d2:	463a      	movhi	r2, r7
 800d4d4:	4620      	mov	r0, r4
 800d4d6:	f7ff fe73 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d4da:	f10b 0b01 	add.w	fp, fp, #1
 800d4de:	e7ea      	b.n	800d4b6 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800d4e0:	4621      	mov	r1, r4
 800d4e2:	4628      	mov	r0, r5
 800d4e4:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4e8:	f7ff bf8a 	b.w	800d400 <PixelPatterns::Increment(unsigned int)>
 800d4ec:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d4f0:	20001d84 	andcs	r1, r0, r4, lsl #27
 800d4f4:	aaaaaaab 	bge	6ab7fa8 <_Min_Heap_Size+0x6ab5fa8>

0800d4f8 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d4f8:	b538      	push	{r3, r4, r5, lr}
 800d4fa:	460c      	mov	r4, r1
 800d4fc:	4605      	mov	r5, r0
 800d4fe:	4b07      	ldr	r3, [pc, #28]	; (800d51c <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800d500:	4620      	mov	r0, r4
 800d502:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d506:	6959      	ldr	r1, [r3, #20]
 800d508:	689a      	ldr	r2, [r3, #8]
 800d50a:	f7ff fe59 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d50e:	4621      	mov	r1, r4
 800d510:	4628      	mov	r0, r5
 800d512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d516:	f7ff bf73 	b.w	800d400 <PixelPatterns::Increment(unsigned int)>
 800d51a:	bf00      	nop
 800d51c:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d520 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d524:	468a      	mov	sl, r1
 800d526:	f04f 0900 	mov.w	r9, #0
 800d52a:	4b27      	ldr	r3, [pc, #156]	; (800d5c8 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d52c:	b085      	sub	sp, #20
 800d52e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d532:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800d536:	689d      	ldr	r5, [r3, #8]
 800d538:	f8df b090 	ldr.w	fp, [pc, #144]	; 800d5cc <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d53c:	00b3      	lsls	r3, r6, #2
 800d53e:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d5d0 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d542:	9002      	str	r0, [sp, #8]
 800d544:	9301      	str	r3, [sp, #4]
 800d546:	1bbf      	subs	r7, r7, r6
 800d548:	f8db 2000 	ldr.w	r2, [fp]
 800d54c:	fa1f f489 	uxth.w	r4, r9
 800d550:	42a2      	cmp	r2, r4
 800d552:	d932      	bls.n	800d5ba <PixelPatterns::ScannerUpdate(unsigned int)+0x9a>
 800d554:	42a6      	cmp	r6, r4
 800d556:	d10b      	bne.n	800d570 <PixelPatterns::ScannerUpdate(unsigned int)+0x50>
 800d558:	462a      	mov	r2, r5
 800d55a:	4631      	mov	r1, r6
 800d55c:	4650      	mov	r0, sl
 800d55e:	f7ff fe2f 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d562:	f8d8 2000 	ldr.w	r2, [r8]
 800d566:	9b01      	ldr	r3, [sp, #4]
 800d568:	50d5      	str	r5, [r2, r3]
 800d56a:	f109 0901 	add.w	r9, r9, #1
 800d56e:	e7eb      	b.n	800d548 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800d570:	42a7      	cmp	r7, r4
 800d572:	d109      	bne.n	800d588 <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800d574:	462a      	mov	r2, r5
 800d576:	4639      	mov	r1, r7
 800d578:	4650      	mov	r0, sl
 800d57a:	f7ff fe21 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d57e:	f8d8 2000 	ldr.w	r2, [r8]
 800d582:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800d586:	e7f0      	b.n	800d56a <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800d588:	f8d8 2000 	ldr.w	r2, [r8]
 800d58c:	4650      	mov	r0, sl
 800d58e:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800d592:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800d596:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800d59a:	0212      	lsls	r2, r2, #8
 800d59c:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800d5a0:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800d5a4:	430a      	orrs	r2, r1
 800d5a6:	4621      	mov	r1, r4
 800d5a8:	9203      	str	r2, [sp, #12]
 800d5aa:	f7ff fe09 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d5ae:	f8d8 1000 	ldr.w	r1, [r8]
 800d5b2:	9a03      	ldr	r2, [sp, #12]
 800d5b4:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800d5b8:	e7d7      	b.n	800d56a <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800d5ba:	4651      	mov	r1, sl
 800d5bc:	9802      	ldr	r0, [sp, #8]
 800d5be:	b005      	add	sp, #20
 800d5c0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5c4:	f7ff bf1c 	b.w	800d400 <PixelPatterns::Increment(unsigned int)>
 800d5c8:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d5cc:	20001d84 	andcs	r1, r0, r4, lsl #27
 800d5d0:	20001d80 	andcs	r1, r0, r0, lsl #27

0800d5d4 <PixelPatterns::FadeUpdate(unsigned int)>:
 800d5d4:	4b22      	ldr	r3, [pc, #136]	; (800d660 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>)
 800d5d6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5da:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d5de:	4604      	mov	r4, r0
 800d5e0:	e9d3 0704 	ldrd	r0, r7, [r3, #16]
 800d5e4:	460d      	mov	r5, r1
 800d5e6:	e9d3 2102 	ldrd	r2, r1, [r3, #8]
 800d5ea:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800d5ee:	437b      	muls	r3, r7
 800d5f0:	1bc6      	subs	r6, r0, r7
 800d5f2:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 800d5f6:	fb06 330c 	mla	r3, r6, ip, r3
 800d5fa:	fbb3 f3f0 	udiv	r3, r3, r0
 800d5fe:	021b      	lsls	r3, r3, #8
 800d600:	fa1f fc83 	uxth.w	ip, r3
 800d604:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800d608:	437b      	muls	r3, r7
 800d60a:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 800d60e:	fb06 330e 	mla	r3, r6, lr, r3
 800d612:	fbb3 f3f0 	udiv	r3, r3, r0
 800d616:	041b      	lsls	r3, r3, #16
 800d618:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800d61c:	ea4c 0303 	orr.w	r3, ip, r3
 800d620:	fa5f fc82 	uxtb.w	ip, r2
 800d624:	b2ca      	uxtb	r2, r1
 800d626:	437a      	muls	r2, r7
 800d628:	fb06 220c 	mla	r2, r6, ip, r2
 800d62c:	fbb2 f2f0 	udiv	r2, r2, r0
 800d630:	2700      	movs	r7, #0
 800d632:	b2d2      	uxtb	r2, r2
 800d634:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800d664 <PixelPatterns::FadeUpdate(unsigned int)+0x90>
 800d638:	ea43 0602 	orr.w	r6, r3, r2
 800d63c:	f8d8 3000 	ldr.w	r3, [r8]
 800d640:	42bb      	cmp	r3, r7
 800d642:	d906      	bls.n	800d652 <PixelPatterns::FadeUpdate(unsigned int)+0x7e>
 800d644:	4639      	mov	r1, r7
 800d646:	4632      	mov	r2, r6
 800d648:	4628      	mov	r0, r5
 800d64a:	f7ff fdb9 	bl	800d1c0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d64e:	3701      	adds	r7, #1
 800d650:	e7f4      	b.n	800d63c <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 800d652:	4629      	mov	r1, r5
 800d654:	4620      	mov	r0, r4
 800d656:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d65a:	f7ff bed1 	b.w	800d400 <PixelPatterns::Increment(unsigned int)>
 800d65e:	bf00      	nop
 800d660:	20001c7c 	andcs	r1, r0, ip, ror ip
 800d664:	20001d84 	andcs	r1, r0, r4, lsl #27

0800d668 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800d668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d66a:	4b12      	ldr	r3, [pc, #72]	; (800d6b4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800d66c:	014e      	lsls	r6, r1, #5
 800d66e:	599c      	ldr	r4, [r3, r6]
 800d670:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800d674:	686f      	ldr	r7, [r5, #4]
 800d676:	1b14      	subs	r4, r2, r4
 800d678:	42bc      	cmp	r4, r7
 800d67a:	d319      	bcc.n	800d6b0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d67c:	519a      	str	r2, [r3, r6]
 800d67e:	69eb      	ldr	r3, [r5, #28]
 800d680:	3b01      	subs	r3, #1
 800d682:	2b04      	cmp	r3, #4
 800d684:	d814      	bhi.n	800d6b0 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d686:	e8df f003 	tbb	[pc, r3]
 800d68a:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800d68e:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800d692:	fed4 2001 	cdp2	0, 13, cr2, cr4, cr1, {0}
 800d696:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d698:	f7ff fefc 	bl	800d494 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800d69c:	e7fa      	b.n	800d694 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d69e:	f7ff ff2b 	bl	800d4f8 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800d6a2:	e7f7      	b.n	800d694 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d6a4:	f7ff ff3c 	bl	800d520 <PixelPatterns::ScannerUpdate(unsigned int)>
 800d6a8:	e7f4      	b.n	800d694 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d6aa:	f7ff ff93 	bl	800d5d4 <PixelPatterns::FadeUpdate(unsigned int)>
 800d6ae:	e7f1      	b.n	800d694 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d6b0:	2000      	movs	r0, #0
 800d6b2:	e7f0      	b.n	800d696 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800d6b4:	20001c7c 	andcs	r1, r0, ip, ror ip

0800d6b8 <PixelPatterns::Run()>:
 800d6b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d6bc:	4f11      	ldr	r7, [pc, #68]	; (800d704 <PixelPatterns::Run()+0x4c>)
 800d6be:	4605      	mov	r5, r0
 800d6c0:	6838      	ldr	r0, [r7, #0]
 800d6c2:	f000 fb99 	bl	800ddf8 <WS28xxMulti::IsUpdating()>
 800d6c6:	4604      	mov	r4, r0
 800d6c8:	b9c8      	cbnz	r0, 800d6fe <PixelPatterns::Run()+0x46>
 800d6ca:	4606      	mov	r6, r0
 800d6cc:	4b0e      	ldr	r3, [pc, #56]	; (800d708 <PixelPatterns::Run()+0x50>)
 800d6ce:	f8df 903c 	ldr.w	r9, [pc, #60]	; 800d70c <PixelPatterns::Run()+0x54>
 800d6d2:	f8d3 8000 	ldr.w	r8, [r3]
 800d6d6:	f8d9 3000 	ldr.w	r3, [r9]
 800d6da:	b2f1      	uxtb	r1, r6
 800d6dc:	428b      	cmp	r3, r1
 800d6de:	f106 0601 	add.w	r6, r6, #1
 800d6e2:	d906      	bls.n	800d6f2 <PixelPatterns::Run()+0x3a>
 800d6e4:	4642      	mov	r2, r8
 800d6e6:	4628      	mov	r0, r5
 800d6e8:	f7ff ffbe 	bl	800d668 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800d6ec:	4304      	orrs	r4, r0
 800d6ee:	b2e4      	uxtb	r4, r4
 800d6f0:	e7f1      	b.n	800d6d6 <PixelPatterns::Run()+0x1e>
 800d6f2:	b124      	cbz	r4, 800d6fe <PixelPatterns::Run()+0x46>
 800d6f4:	6838      	ldr	r0, [r7, #0]
 800d6f6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d6fa:	f000 bad1 	b.w	800dca0 <WS28xxMulti::Update()>
 800d6fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d702:	bf00      	nop
 800d704:	20001d88 	andcs	r1, r0, r8, lsl #27
 800d708:	200125a8 	andcs	r2, r1, r8, lsr #11
 800d70c:	20001d7c 	andcs	r1, r0, ip, ror sp

0800d710 <PixelType::GetType(pixel::Type)>:
 800d710:	280d      	cmp	r0, #13
 800d712:	bfda      	itte	le
 800d714:	4b02      	ldrle	r3, [pc, #8]	; (800d720 <PixelType::GetType(pixel::Type)+0x10>)
 800d716:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800d71a:	4802      	ldrgt	r0, [pc, #8]	; (800d724 <PixelType::GetType(pixel::Type)+0x14>)
 800d71c:	4770      	bx	lr
 800d71e:	bf00      	nop
 800d720:	080173df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, sp, lr}
 800d724:	08017381 	stmdaeq	r1, {r0, r7, r8, r9, ip, sp, lr}

0800d728 <PixelType::GetType(char const*)>:
 800d728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d72a:	4604      	mov	r4, r0
 800d72c:	b928      	cbnz	r0, 800d73a <PixelType::GetType(char const*)+0x12>
 800d72e:	213c      	movs	r1, #60	; 0x3c
 800d730:	4b12      	ldr	r3, [pc, #72]	; (800d77c <PixelType::GetType(char const*)+0x54>)
 800d732:	4a13      	ldr	r2, [pc, #76]	; (800d780 <PixelType::GetType(char const*)+0x58>)
 800d734:	4813      	ldr	r0, [pc, #76]	; (800d784 <PixelType::GetType(char const*)+0x5c>)
 800d736:	f005 fb3d 	bl	8012db4 <__assert_func>
 800d73a:	2000      	movs	r0, #0
 800d73c:	4912      	ldr	r1, [pc, #72]	; (800d788 <PixelType::GetType(char const*)+0x60>)
 800d73e:	1e66      	subs	r6, r4, #1
 800d740:	1e4d      	subs	r5, r1, #1
 800d742:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800d746:	461f      	mov	r7, r3
 800d748:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800d74c:	2a19      	cmp	r2, #25
 800d74e:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800d752:	bf98      	it	ls
 800d754:	f103 0720 	addls.w	r7, r3, #32
 800d758:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800d75c:	f1bc 0f19 	cmp.w	ip, #25
 800d760:	bf98      	it	ls
 800d762:	3220      	addls	r2, #32
 800d764:	42ba      	cmp	r2, r7
 800d766:	d102      	bne.n	800d76e <PixelType::GetType(char const*)+0x46>
 800d768:	2b00      	cmp	r3, #0
 800d76a:	d1ea      	bne.n	800d742 <PixelType::GetType(char const*)+0x1a>
 800d76c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d76e:	3001      	adds	r0, #1
 800d770:	280e      	cmp	r0, #14
 800d772:	f101 0108 	add.w	r1, r1, #8
 800d776:	d1e2      	bne.n	800d73e <PixelType::GetType(char const*)+0x16>
 800d778:	e7f8      	b.n	800d76c <PixelType::GetType(char const*)+0x44>
 800d77a:	bf00      	nop
 800d77c:	08017389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp, lr}
 800d780:	0801739c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, ip, sp, lr}
 800d784:	080173a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip, sp, lr}
 800d788:	080173df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, sp, lr}

0800d78c <PixelType::GetMap(char const*)>:
 800d78c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d78e:	4604      	mov	r4, r0
 800d790:	b928      	cbnz	r0, 800d79e <PixelType::GetMap(char const*)+0x12>
 800d792:	2148      	movs	r1, #72	; 0x48
 800d794:	4b14      	ldr	r3, [pc, #80]	; (800d7e8 <PixelType::GetMap(char const*)+0x5c>)
 800d796:	4a15      	ldr	r2, [pc, #84]	; (800d7ec <PixelType::GetMap(char const*)+0x60>)
 800d798:	4815      	ldr	r0, [pc, #84]	; (800d7f0 <PixelType::GetMap(char const*)+0x64>)
 800d79a:	f005 fb0b 	bl	8012db4 <__assert_func>
 800d79e:	2000      	movs	r0, #0
 800d7a0:	4b14      	ldr	r3, [pc, #80]	; (800d7f4 <PixelType::GetMap(char const*)+0x68>)
 800d7a2:	1e5d      	subs	r5, r3, #1
 800d7a4:	1e66      	subs	r6, r4, #1
 800d7a6:	f103 0c02 	add.w	ip, r3, #2
 800d7aa:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800d7ae:	4617      	mov	r7, r2
 800d7b0:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800d7b4:	2919      	cmp	r1, #25
 800d7b6:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800d7ba:	bf98      	it	ls
 800d7bc:	f102 0720 	addls.w	r7, r2, #32
 800d7c0:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800d7c4:	f1be 0f19 	cmp.w	lr, #25
 800d7c8:	bf98      	it	ls
 800d7ca:	3120      	addls	r1, #32
 800d7cc:	42b9      	cmp	r1, r7
 800d7ce:	d005      	beq.n	800d7dc <PixelType::GetMap(char const*)+0x50>
 800d7d0:	3001      	adds	r0, #1
 800d7d2:	2806      	cmp	r0, #6
 800d7d4:	f103 0304 	add.w	r3, r3, #4
 800d7d8:	d1e3      	bne.n	800d7a2 <PixelType::GetMap(char const*)+0x16>
 800d7da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d7dc:	2a00      	cmp	r2, #0
 800d7de:	d0fc      	beq.n	800d7da <PixelType::GetMap(char const*)+0x4e>
 800d7e0:	45ac      	cmp	ip, r5
 800d7e2:	d1e2      	bne.n	800d7aa <PixelType::GetMap(char const*)+0x1e>
 800d7e4:	e7f9      	b.n	800d7da <PixelType::GetMap(char const*)+0x4e>
 800d7e6:	bf00      	nop
 800d7e8:	08017389 	stmdaeq	r1, {r0, r3, r7, r8, r9, ip, sp, lr}
 800d7ec:	080173b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, ip, sp, lr}
 800d7f0:	080173a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip, sp, lr}
 800d7f4:	080173c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, ip, sp, lr}

0800d7f8 <PixelType::GetMap(pixel::Map)>:
 800d7f8:	2805      	cmp	r0, #5
 800d7fa:	bfda      	itte	le
 800d7fc:	4b02      	ldrle	r3, [pc, #8]	; (800d808 <PixelType::GetMap(pixel::Map)+0x10>)
 800d7fe:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800d802:	4802      	ldrgt	r0, [pc, #8]	; (800d80c <PixelType::GetMap(pixel::Map)+0x14>)
 800d804:	4770      	bx	lr
 800d806:	bf00      	nop
 800d808:	080173c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, ip, sp, lr}
 800d80c:	080173bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, ip, sp, lr}

0800d810 <PixelType::ConvertTxH(unsigned char)>:
 800d810:	28f0      	cmp	r0, #240	; 0xf0
 800d812:	d010      	beq.n	800d836 <PixelType::ConvertTxH(unsigned char)+0x26>
 800d814:	d807      	bhi.n	800d826 <PixelType::ConvertTxH(unsigned char)+0x16>
 800d816:	28c0      	cmp	r0, #192	; 0xc0
 800d818:	d00f      	beq.n	800d83a <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d81a:	28e0      	cmp	r0, #224	; 0xe0
 800d81c:	d00f      	beq.n	800d83e <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d81e:	2880      	cmp	r0, #128	; 0x80
 800d820:	d113      	bne.n	800d84a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d822:	480b      	ldr	r0, [pc, #44]	; (800d850 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d824:	4770      	bx	lr
 800d826:	28fc      	cmp	r0, #252	; 0xfc
 800d828:	d00b      	beq.n	800d842 <PixelType::ConvertTxH(unsigned char)+0x32>
 800d82a:	28fe      	cmp	r0, #254	; 0xfe
 800d82c:	d00b      	beq.n	800d846 <PixelType::ConvertTxH(unsigned char)+0x36>
 800d82e:	28f8      	cmp	r0, #248	; 0xf8
 800d830:	d10b      	bne.n	800d84a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d832:	4808      	ldr	r0, [pc, #32]	; (800d854 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d834:	4770      	bx	lr
 800d836:	4808      	ldr	r0, [pc, #32]	; (800d858 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d838:	4770      	bx	lr
 800d83a:	4808      	ldr	r0, [pc, #32]	; (800d85c <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d83c:	4770      	bx	lr
 800d83e:	4808      	ldr	r0, [pc, #32]	; (800d860 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d840:	4770      	bx	lr
 800d842:	4808      	ldr	r0, [pc, #32]	; (800d864 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d844:	4770      	bx	lr
 800d846:	4808      	ldr	r0, [pc, #32]	; (800d868 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d848:	4770      	bx	lr
 800d84a:	2000      	movs	r0, #0
 800d84c:	4770      	bx	lr
 800d84e:	bf00      	nop
 800d850:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d854:	3f480000 	svccc	0x00480000
 800d858:	3f200000 	svccc	0x00200000
 800d85c:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d860:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d864:	3f700000 	svccc	0x00700000
 800d868:	3f8c0000 	svccc	0x008c0000

0800d86c <PixelType::ConvertTxH(float)>:
 800d86c:	b510      	push	{r4, lr}
 800d86e:	491d      	ldr	r1, [pc, #116]	; (800d8e4 <PixelType::ConvertTxH(float)+0x78>)
 800d870:	4604      	mov	r4, r0
 800d872:	f7fa f951 	bl	8007b18 <__aeabi_fcmplt>
 800d876:	bb30      	cbnz	r0, 800d8c6 <PixelType::ConvertTxH(float)+0x5a>
 800d878:	4620      	mov	r0, r4
 800d87a:	491b      	ldr	r1, [pc, #108]	; (800d8e8 <PixelType::ConvertTxH(float)+0x7c>)
 800d87c:	f7fa f94c 	bl	8007b18 <__aeabi_fcmplt>
 800d880:	bb18      	cbnz	r0, 800d8ca <PixelType::ConvertTxH(float)+0x5e>
 800d882:	4620      	mov	r0, r4
 800d884:	4919      	ldr	r1, [pc, #100]	; (800d8ec <PixelType::ConvertTxH(float)+0x80>)
 800d886:	f7fa f947 	bl	8007b18 <__aeabi_fcmplt>
 800d88a:	bb00      	cbnz	r0, 800d8ce <PixelType::ConvertTxH(float)+0x62>
 800d88c:	4620      	mov	r0, r4
 800d88e:	4918      	ldr	r1, [pc, #96]	; (800d8f0 <PixelType::ConvertTxH(float)+0x84>)
 800d890:	f7fa f942 	bl	8007b18 <__aeabi_fcmplt>
 800d894:	b9e8      	cbnz	r0, 800d8d2 <PixelType::ConvertTxH(float)+0x66>
 800d896:	4620      	mov	r0, r4
 800d898:	4916      	ldr	r1, [pc, #88]	; (800d8f4 <PixelType::ConvertTxH(float)+0x88>)
 800d89a:	f7fa f93d 	bl	8007b18 <__aeabi_fcmplt>
 800d89e:	b9d0      	cbnz	r0, 800d8d6 <PixelType::ConvertTxH(float)+0x6a>
 800d8a0:	4620      	mov	r0, r4
 800d8a2:	4915      	ldr	r1, [pc, #84]	; (800d8f8 <PixelType::ConvertTxH(float)+0x8c>)
 800d8a4:	f7fa f938 	bl	8007b18 <__aeabi_fcmplt>
 800d8a8:	b9b8      	cbnz	r0, 800d8da <PixelType::ConvertTxH(float)+0x6e>
 800d8aa:	4620      	mov	r0, r4
 800d8ac:	4913      	ldr	r1, [pc, #76]	; (800d8fc <PixelType::ConvertTxH(float)+0x90>)
 800d8ae:	f7fa f933 	bl	8007b18 <__aeabi_fcmplt>
 800d8b2:	b9a0      	cbnz	r0, 800d8de <PixelType::ConvertTxH(float)+0x72>
 800d8b4:	4620      	mov	r0, r4
 800d8b6:	4912      	ldr	r1, [pc, #72]	; (800d900 <PixelType::ConvertTxH(float)+0x94>)
 800d8b8:	f7fa f92e 	bl	8007b18 <__aeabi_fcmplt>
 800d8bc:	2800      	cmp	r0, #0
 800d8be:	bf14      	ite	ne
 800d8c0:	20fe      	movne	r0, #254	; 0xfe
 800d8c2:	2000      	moveq	r0, #0
 800d8c4:	bd10      	pop	{r4, pc}
 800d8c6:	2000      	movs	r0, #0
 800d8c8:	e7fc      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8ca:	2080      	movs	r0, #128	; 0x80
 800d8cc:	e7fa      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8ce:	20c0      	movs	r0, #192	; 0xc0
 800d8d0:	e7f8      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8d2:	20e0      	movs	r0, #224	; 0xe0
 800d8d4:	e7f6      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8d6:	20f0      	movs	r0, #240	; 0xf0
 800d8d8:	e7f4      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8da:	20f8      	movs	r0, #248	; 0xf8
 800d8dc:	e7f2      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8de:	20fc      	movs	r0, #252	; 0xfc
 800d8e0:	e7f0      	b.n	800d8c4 <PixelType::ConvertTxH(float)+0x58>
 800d8e2:	bf00      	nop
 800d8e4:	3da00000 	stccc	0, cr0, [r0]
 800d8e8:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d8ec:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d8f0:	3f0c0000 	svccc	0x000c0000
 800d8f4:	3f340000 	svccc	0x00340000
 800d8f8:	3f5c0000 	svccc	0x005c0000
 800d8fc:	3f820000 	svccc	0x00820000
 800d900:	3f960000 	svccc	0x00960000

0800d904 <TIMER4_IRQHandler>:
 800d904:	f3bf 8f5f 	dmb	sy
 800d908:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d90c:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	; 0xc10
 800d910:	0791      	lsls	r1, r2, #30
 800d912:	d521      	bpl.n	800d958 <TIMER4_IRQHandler+0x54>
 800d914:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
 800d918:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800d91c:	f021 0101 	bic.w	r1, r1, #1
 800d920:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800d924:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d928:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800d92c:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d930:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d934:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d938:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d93c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d940:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800d944:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d948:	2103      	movs	r1, #3
 800d94a:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 800d94e:	f8c3 1814 	str.w	r1, [r3, #2068]	; 0x814
 800d952:	2100      	movs	r1, #0
 800d954:	4b04      	ldr	r3, [pc, #16]	; (800d968 <TIMER4_IRQHandler+0x64>)
 800d956:	7019      	strb	r1, [r3, #0]
 800d958:	43d2      	mvns	r2, r2
 800d95a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d95e:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800d962:	f3bf 8f5f 	dmb	sy
 800d966:	4770      	bx	lr
 800d968:	20001d90 	mulcs	r0, r0, sp

0800d96c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800d96c:	2203      	movs	r2, #3
 800d96e:	23aa      	movs	r3, #170	; 0xaa
 800d970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d974:	e9c0 2300 	strd	r2, r3, [r0]
 800d978:	460c      	mov	r4, r1
 800d97a:	2300      	movs	r3, #0
 800d97c:	2106      	movs	r1, #6
 800d97e:	4ea0      	ldr	r6, [pc, #640]	; (800dc00 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x294>)
 800d980:	e9c0 1302 	strd	r1, r3, [r0, #8]
 800d984:	4605      	mov	r5, r0
 800d986:	2358      	movs	r3, #88	; 0x58
 800d988:	4a9e      	ldr	r2, [pc, #632]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800d98a:	499f      	ldr	r1, [pc, #636]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800d98c:	489f      	ldr	r0, [pc, #636]	; (800dc0c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2a0>)
 800d98e:	b08f      	sub	sp, #60	; 0x3c
 800d990:	f005 fe66 	bl	8013660 <printf>
 800d994:	6833      	ldr	r3, [r6, #0]
 800d996:	b12b      	cbz	r3, 800d9a4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x38>
 800d998:	215a      	movs	r1, #90	; 0x5a
 800d99a:	4b9d      	ldr	r3, [pc, #628]	; (800dc10 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2a4>)
 800d99c:	4a99      	ldr	r2, [pc, #612]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800d99e:	489a      	ldr	r0, [pc, #616]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800d9a0:	f005 fa08 	bl	8012db4 <__assert_func>
 800d9a4:	a902      	add	r1, sp, #8
 800d9a6:	4620      	mov	r0, r4
 800d9a8:	6035      	str	r5, [r6, #0]
 800d9aa:	f7ff fb57 	bl	800d05c <PixelConfiguration::Validate(unsigned int&)>
 800d9ae:	4620      	mov	r0, r4
 800d9b0:	f7ff fbd6 	bl	800d160 <PixelConfiguration::Dump()>
 800d9b4:	6823      	ldr	r3, [r4, #0]
 800d9b6:	68a2      	ldr	r2, [r4, #8]
 800d9b8:	602b      	str	r3, [r5, #0]
 800d9ba:	60aa      	str	r2, [r5, #8]
 800d9bc:	6863      	ldr	r3, [r4, #4]
 800d9be:	9a02      	ldr	r2, [sp, #8]
 800d9c0:	606b      	str	r3, [r5, #4]
 800d9c2:	4353      	muls	r3, r2
 800d9c4:	00db      	lsls	r3, r3, #3
 800d9c6:	f503 6280 	add.w	r2, r3, #1024	; 0x400
 800d9ca:	0a92      	lsrs	r2, r2, #10
 800d9cc:	e9cd 3200 	strd	r3, r2, [sp]
 800d9d0:	498c      	ldr	r1, [pc, #560]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800d9d2:	4a8d      	ldr	r2, [pc, #564]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800d9d4:	60eb      	str	r3, [r5, #12]
 800d9d6:	488f      	ldr	r0, [pc, #572]	; (800dc14 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2a8>)
 800d9d8:	2368      	movs	r3, #104	; 0x68
 800d9da:	f005 fe41 	bl	8013660 <printf>
 800d9de:	7c20      	ldrb	r0, [r4, #16]
 800d9e0:	f7fa f900 	bl	8007be4 <__popcountsi2>
 800d9e4:	2696      	movs	r6, #150	; 0x96
 800d9e6:	fb06 f700 	mul.w	r7, r6, r0
 800d9ea:	7c60      	ldrb	r0, [r4, #17]
 800d9ec:	f7fa f8fa 	bl	8007be4 <__popcountsi2>
 800d9f0:	4346      	muls	r6, r0
 800d9f2:	08ff      	lsrs	r7, r7, #3
 800d9f4:	08f6      	lsrs	r6, r6, #3
 800d9f6:	e9cd 7600 	strd	r7, r6, [sp]
 800d9fa:	236d      	movs	r3, #109	; 0x6d
 800d9fc:	4a82      	ldr	r2, [pc, #520]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800d9fe:	4981      	ldr	r1, [pc, #516]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800da00:	4885      	ldr	r0, [pc, #532]	; (800dc18 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2ac>)
 800da02:	f005 fe2d 	bl	8013660 <printf>
 800da06:	f240 6006 	movw	r0, #1542	; 0x606
 800da0a:	f006 fda8 	bl	801455e <rcu_periph_clock_enable>
 800da0e:	2303      	movs	r3, #3
 800da10:	2110      	movs	r1, #16
 800da12:	461a      	mov	r2, r3
 800da14:	4881      	ldr	r0, [pc, #516]	; (800dc1c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2b0>)
 800da16:	f006 fc6b 	bl	80142f0 <gpio_init>
 800da1a:	f04f 0895 	mov.w	r8, #149	; 0x95
 800da1e:	2203      	movs	r2, #3
 800da20:	2400      	movs	r4, #0
 800da22:	4b7f      	ldr	r3, [pc, #508]	; (800dc20 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2b4>)
 800da24:	4977      	ldr	r1, [pc, #476]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800da26:	f8c3 2814 	str.w	r2, [r3, #2068]	; 0x814
 800da2a:	487e      	ldr	r0, [pc, #504]	; (800dc24 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2b8>)
 800da2c:	4a76      	ldr	r2, [pc, #472]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800da2e:	237f      	movs	r3, #127	; 0x7f
 800da30:	f8cd 8000 	str.w	r8, [sp]
 800da34:	f005 fe14 	bl	8013660 <printf>
 800da38:	f240 600d 	movw	r0, #1549	; 0x60d
 800da3c:	f006 fd8f 	bl	801455e <rcu_periph_clock_enable>
 800da40:	4879      	ldr	r0, [pc, #484]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da42:	f006 feef 	bl	8014824 <timer_deinit>
 800da46:	4b79      	ldr	r3, [pc, #484]	; (800dc2c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c0>)
 800da48:	a903      	add	r1, sp, #12
 800da4a:	f8c3 4424 	str.w	r4, [r3, #1060]	; 0x424
 800da4e:	4876      	ldr	r0, [pc, #472]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da50:	f8cd 8014 	str.w	r8, [sp, #20]
 800da54:	9403      	str	r4, [sp, #12]
 800da56:	f8ad 4010 	strh.w	r4, [sp, #16]
 800da5a:	f8ad 4018 	strh.w	r4, [sp, #24]
 800da5e:	f006 ff87 	bl	8014970 <timer_init>
 800da62:	4621      	mov	r1, r4
 800da64:	4870      	ldr	r0, [pc, #448]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da66:	f007 f835 	bl	8014ad4 <timer_master_slave_mode_config>
 800da6a:	2130      	movs	r1, #48	; 0x30
 800da6c:	486e      	ldr	r0, [pc, #440]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da6e:	f007 f821 	bl	8014ab4 <timer_master_output_trigger_source_select>
 800da72:	4621      	mov	r1, r4
 800da74:	2210      	movs	r2, #16
 800da76:	486c      	ldr	r0, [pc, #432]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da78:	f006 ffe0 	bl	8014a3c <timer_channel_output_mode_config>
 800da7c:	2210      	movs	r2, #16
 800da7e:	2101      	movs	r1, #1
 800da80:	4869      	ldr	r0, [pc, #420]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da82:	f006 ffdb 	bl	8014a3c <timer_channel_output_mode_config>
 800da86:	2210      	movs	r2, #16
 800da88:	2102      	movs	r1, #2
 800da8a:	4867      	ldr	r0, [pc, #412]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da8c:	f006 ffd6 	bl	8014a3c <timer_channel_output_mode_config>
 800da90:	4622      	mov	r2, r4
 800da92:	4621      	mov	r1, r4
 800da94:	4864      	ldr	r0, [pc, #400]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800da96:	f006 fff7 	bl	8014a88 <timer_channel_output_pulse_value_config>
 800da9a:	b2ba      	uxth	r2, r7
 800da9c:	2101      	movs	r1, #1
 800da9e:	4862      	ldr	r0, [pc, #392]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800daa0:	f006 fff2 	bl	8014a88 <timer_channel_output_pulse_value_config>
 800daa4:	b2b2      	uxth	r2, r6
 800daa6:	2102      	movs	r1, #2
 800daa8:	485f      	ldr	r0, [pc, #380]	; (800dc28 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2bc>)
 800daaa:	f006 ffed 	bl	8014a88 <timer_channel_output_pulse_value_config>
 800daae:	f240 7003 	movw	r0, #1795	; 0x703
 800dab2:	f006 fd54 	bl	801455e <rcu_periph_clock_enable>
 800dab6:	485e      	ldr	r0, [pc, #376]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800dab8:	f006 feb4 	bl	8014824 <timer_deinit>
 800dabc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dac0:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 800dac4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dac8:	a903      	add	r1, sp, #12
 800daca:	4859      	ldr	r0, [pc, #356]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800dacc:	9305      	str	r3, [sp, #20]
 800dace:	9403      	str	r4, [sp, #12]
 800dad0:	f8ad 4010 	strh.w	r4, [sp, #16]
 800dad4:	f8ad 4018 	strh.w	r4, [sp, #24]
 800dad8:	f006 ff4a 	bl	8014970 <timer_init>
 800dadc:	4621      	mov	r1, r4
 800dade:	4854      	ldr	r0, [pc, #336]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800dae0:	f006 fff8 	bl	8014ad4 <timer_master_slave_mode_config>
 800dae4:	2107      	movs	r1, #7
 800dae6:	4852      	ldr	r0, [pc, #328]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800dae8:	f006 ffec 	bl	8014ac4 <timer_slave_mode_select>
 800daec:	2130      	movs	r1, #48	; 0x30
 800daee:	4850      	ldr	r0, [pc, #320]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800daf0:	f006 ffd8 	bl	8014aa4 <timer_input_trigger_source_select>
 800daf4:	4621      	mov	r1, r4
 800daf6:	2210      	movs	r2, #16
 800daf8:	484d      	ldr	r0, [pc, #308]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800dafa:	f006 ff9f 	bl	8014a3c <timer_channel_output_mode_config>
 800dafe:	68ea      	ldr	r2, [r5, #12]
 800db00:	4621      	mov	r1, r4
 800db02:	3201      	adds	r2, #1
 800db04:	b292      	uxth	r2, r2
 800db06:	484a      	ldr	r0, [pc, #296]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800db08:	f006 ffbe 	bl	8014a88 <timer_channel_output_pulse_value_config>
 800db0c:	2102      	movs	r1, #2
 800db0e:	4848      	ldr	r0, [pc, #288]	; (800dc30 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c4>)
 800db10:	f006 ffed 	bl	8014aee <timer_interrupt_enable>
 800db14:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800db18:	f44f 7800 	mov.w	r8, #512	; 0x200
 800db1c:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800db20:	2601      	movs	r6, #1
 800db22:	f44f 6a00 	mov.w	sl, #2048	; 0x800
 800db26:	4b43      	ldr	r3, [pc, #268]	; (800dc34 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2c8>)
 800db28:	f240 5001 	movw	r0, #1281	; 0x501
 800db2c:	f883 4332 	strb.w	r4, [r3, #818]	; 0x332
 800db30:	605a      	str	r2, [r3, #4]
 800db32:	f006 fd14 	bl	801455e <rcu_periph_clock_enable>
 800db36:	2102      	movs	r1, #2
 800db38:	483f      	ldr	r0, [pc, #252]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db3a:	f006 faeb 	bl	8014114 <dma_deinit>
 800db3e:	f8df b0fc 	ldr.w	fp, [pc, #252]	; 800dc3c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2d0>
 800db42:	4b3f      	ldr	r3, [pc, #252]	; (800dc40 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2d4>)
 800db44:	aa07      	add	r2, sp, #28
 800db46:	2102      	movs	r1, #2
 800db48:	483b      	ldr	r0, [pc, #236]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db4a:	e9cd 3807 	strd	r3, r8, [sp, #28]
 800db4e:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800db52:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800db56:	970c      	str	r7, [sp, #48]	; 0x30
 800db58:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 800db5c:	f88d 6036 	strb.w	r6, [sp, #54]	; 0x36
 800db60:	f006 faf6 	bl	8014150 <dma_init>
 800db64:	2102      	movs	r1, #2
 800db66:	4834      	ldr	r0, [pc, #208]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db68:	f006 fb23 	bl	80141b2 <dma_circulation_disable>
 800db6c:	2102      	movs	r1, #2
 800db6e:	4832      	ldr	r0, [pc, #200]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db70:	f006 fb27 	bl	80141c2 <dma_memory_to_memory_disable>
 800db74:	2104      	movs	r1, #4
 800db76:	4830      	ldr	r0, [pc, #192]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db78:	f006 facc 	bl	8014114 <dma_deinit>
 800db7c:	4b31      	ldr	r3, [pc, #196]	; (800dc44 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2d8>)
 800db7e:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 800dc48 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2dc>
 800db82:	9309      	str	r3, [sp, #36]	; 0x24
 800db84:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800db88:	930a      	str	r3, [sp, #40]	; 0x28
 800db8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800db8e:	aa07      	add	r2, sp, #28
 800db90:	2104      	movs	r1, #4
 800db92:	4829      	ldr	r0, [pc, #164]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800db94:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800db98:	e9cd 9807 	strd	r9, r8, [sp, #28]
 800db9c:	970c      	str	r7, [sp, #48]	; 0x30
 800db9e:	f88d 6036 	strb.w	r6, [sp, #54]	; 0x36
 800dba2:	f006 fad5 	bl	8014150 <dma_init>
 800dba6:	2104      	movs	r1, #4
 800dba8:	4823      	ldr	r0, [pc, #140]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbaa:	f006 fb02 	bl	80141b2 <dma_circulation_disable>
 800dbae:	2104      	movs	r1, #4
 800dbb0:	4821      	ldr	r0, [pc, #132]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbb2:	f006 fb06 	bl	80141c2 <dma_memory_to_memory_disable>
 800dbb6:	4621      	mov	r1, r4
 800dbb8:	481f      	ldr	r0, [pc, #124]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbba:	f006 faab 	bl	8014114 <dma_deinit>
 800dbbe:	aa07      	add	r2, sp, #28
 800dbc0:	4621      	mov	r1, r4
 800dbc2:	481d      	ldr	r0, [pc, #116]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbc4:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
 800dbc8:	e9cd 9807 	strd	r9, r8, [sp, #28]
 800dbcc:	970c      	str	r7, [sp, #48]	; 0x30
 800dbce:	f8ad 4034 	strh.w	r4, [sp, #52]	; 0x34
 800dbd2:	f88d 6036 	strb.w	r6, [sp, #54]	; 0x36
 800dbd6:	f006 fabb 	bl	8014150 <dma_init>
 800dbda:	4621      	mov	r1, r4
 800dbdc:	4816      	ldr	r0, [pc, #88]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbde:	f006 fae8 	bl	80141b2 <dma_circulation_disable>
 800dbe2:	4621      	mov	r1, r4
 800dbe4:	4814      	ldr	r0, [pc, #80]	; (800dc38 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2cc>)
 800dbe6:	f006 faec 	bl	80141c2 <dma_memory_to_memory_disable>
 800dbea:	23f4      	movs	r3, #244	; 0xf4
 800dbec:	4a05      	ldr	r2, [pc, #20]	; (800dc04 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x298>)
 800dbee:	4906      	ldr	r1, [pc, #24]	; (800dc08 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x29c>)
 800dbf0:	4816      	ldr	r0, [pc, #88]	; (800dc4c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x2e0>)
 800dbf2:	f005 fd35 	bl	8013660 <printf>
 800dbf6:	4628      	mov	r0, r5
 800dbf8:	b00f      	add	sp, #60	; 0x3c
 800dbfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbfe:	bf00      	nop
 800dc00:	200095a4 	andcs	r9, r0, r4, lsr #11
 800dc04:	0801744f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, ip, sp, lr}
 800dc08:	0801745b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, ip, sp, lr}
 800dc0c:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 800dc10:	08017474 	stmdaeq	r1, {r2, r4, r5, r6, sl, ip, sp, lr}
 800dc14:	08017487 	stmdaeq	r1, {r0, r1, r2, r7, sl, ip, sp, lr}
 800dc18:	080174ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp, lr}
 800dc1c:	40011800 	andmi	r1, r1, r0, lsl #16
 800dc20:	40011000 	andmi	r1, r1, r0
 800dc24:	080174d1 	stmdaeq	r1, {r0, r4, r6, r7, sl, ip, sp, lr}
 800dc28:	40013400 	andmi	r3, r1, r0, lsl #8
 800dc2c:	40013000 	andmi	r3, r1, r0
 800dc30:	40000c00 	andmi	r0, r0, r0, lsl #24
 800dc34:	e000e100 	and	lr, r0, r0, lsl #2
 800dc38:	40020400 	andmi	r0, r2, r0, lsl #8
 800dc3c:	08017584 	stmdaeq	r1, {r2, r7, r8, sl, ip, sp, lr}
 800dc40:	40011810 	andmi	r1, r1, r0, lsl r8
 800dc44:	20001da0 	andcs	r1, r0, r0, lsr #27
 800dc48:	40011814 	andmi	r1, r1, r4, lsl r8
 800dc4c:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}

0800dc50 <WS28xxMulti::~WS28xxMulti()>:
 800dc50:	2200      	movs	r2, #0
 800dc52:	4b01      	ldr	r3, [pc, #4]	; (800dc58 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800dc54:	601a      	str	r2, [r3, #0]
 800dc56:	4770      	bx	lr
 800dc58:	200095a4 	andcs	r9, r0, r4, lsr #11

0800dc5c <WS28xxMulti::Print()>:
 800dc5c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dc5e:	4604      	mov	r4, r0
 800dc60:	480c      	ldr	r0, [pc, #48]	; (800dc94 <WS28xxMulti::Print()+0x38>)
 800dc62:	f005 fcfd 	bl	8013660 <printf>
 800dc66:	6820      	ldr	r0, [r4, #0]
 800dc68:	f7ff fd52 	bl	800d710 <PixelType::GetType(pixel::Type)>
 800dc6c:	4605      	mov	r5, r0
 800dc6e:	68a0      	ldr	r0, [r4, #8]
 800dc70:	6826      	ldr	r6, [r4, #0]
 800dc72:	f7ff fdc1 	bl	800d7f8 <PixelType::GetMap(pixel::Map)>
 800dc76:	68a2      	ldr	r2, [r4, #8]
 800dc78:	4603      	mov	r3, r0
 800dc7a:	4629      	mov	r1, r5
 800dc7c:	9200      	str	r2, [sp, #0]
 800dc7e:	4806      	ldr	r0, [pc, #24]	; (800dc98 <WS28xxMulti::Print()+0x3c>)
 800dc80:	4632      	mov	r2, r6
 800dc82:	f005 fced 	bl	8013660 <printf>
 800dc86:	6861      	ldr	r1, [r4, #4]
 800dc88:	4804      	ldr	r0, [pc, #16]	; (800dc9c <WS28xxMulti::Print()+0x40>)
 800dc8a:	b002      	add	sp, #8
 800dc8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc90:	f005 bce6 	b.w	8013660 <printf>
 800dc94:	080174fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, ip, sp, lr}
 800dc98:	0801750d 	stmdaeq	r1, {r0, r2, r3, r8, sl, ip, sp, lr}
 800dc9c:	0801752b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, ip, sp, lr}

0800dca0 <WS28xxMulti::Update()>:
 800dca0:	2201      	movs	r2, #1
 800dca2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dca4:	4e32      	ldr	r6, [pc, #200]	; (800dd70 <WS28xxMulti::Update()+0xd0>)
 800dca6:	4b33      	ldr	r3, [pc, #204]	; (800dd74 <WS28xxMulti::Update()+0xd4>)
 800dca8:	4605      	mov	r5, r0
 800dcaa:	4630      	mov	r0, r6
 800dcac:	701a      	strb	r2, [r3, #0]
 800dcae:	2700      	movs	r7, #0
 800dcb0:	f006 febb 	bl	8014a2a <timer_disable>
 800dcb4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dcb8:	4c2f      	ldr	r4, [pc, #188]	; (800dd78 <WS28xxMulti::Update()+0xd8>)
 800dcba:	f8c3 7c24 	str.w	r7, [r3, #3108]	; 0xc24
 800dcbe:	4620      	mov	r0, r4
 800dcc0:	f006 feb3 	bl	8014a2a <timer_disable>
 800dcc4:	4b2d      	ldr	r3, [pc, #180]	; (800dd7c <WS28xxMulti::Update()+0xdc>)
 800dcc6:	492e      	ldr	r1, [pc, #184]	; (800dd80 <WS28xxMulti::Update()+0xe0>)
 800dcc8:	f8c3 7424 	str.w	r7, [r3, #1060]	; 0x424
 800dccc:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 800dcd0:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800dcd4:	4620      	mov	r0, r4
 800dcd6:	f022 0201 	bic.w	r2, r2, #1
 800dcda:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800dcde:	f8c3 143c 	str.w	r1, [r3, #1084]	; 0x43c
 800dce2:	89aa      	ldrh	r2, [r5, #12]
 800dce4:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
 800dce8:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800dcec:	f042 0201 	orr.w	r2, r2, #1
 800dcf0:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800dcf4:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800dcf8:	f022 0201 	bic.w	r2, r2, #1
 800dcfc:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800dd00:	4a20      	ldr	r2, [pc, #128]	; (800dd84 <WS28xxMulti::Update()+0xe4>)
 800dd02:	f8c3 2464 	str.w	r2, [r3, #1124]	; 0x464
 800dd06:	68ea      	ldr	r2, [r5, #12]
 800dd08:	3201      	adds	r2, #1
 800dd0a:	b292      	uxth	r2, r2
 800dd0c:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 800dd10:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800dd14:	f042 0201 	orr.w	r2, r2, #1
 800dd18:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800dd1c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800dd20:	f022 0201 	bic.w	r2, r2, #1
 800dd24:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800dd28:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
 800dd2c:	68ea      	ldr	r2, [r5, #12]
 800dd2e:	f44f 7100 	mov.w	r1, #512	; 0x200
 800dd32:	3201      	adds	r2, #1
 800dd34:	b292      	uxth	r2, r2
 800dd36:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800dd3a:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800dd3e:	f042 0201 	orr.w	r2, r2, #1
 800dd42:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800dd46:	f006 fe75 	bl	8014a34 <timer_dma_enable>
 800dd4a:	4620      	mov	r0, r4
 800dd4c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800dd50:	f006 fe70 	bl	8014a34 <timer_dma_enable>
 800dd54:	4620      	mov	r0, r4
 800dd56:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800dd5a:	f006 fe6b 	bl	8014a34 <timer_dma_enable>
 800dd5e:	4630      	mov	r0, r6
 800dd60:	f006 fe5e 	bl	8014a20 <timer_enable>
 800dd64:	4620      	mov	r0, r4
 800dd66:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800dd6a:	f006 be59 	b.w	8014a20 <timer_enable>
 800dd6e:	bf00      	nop
 800dd70:	40000c00 	andmi	r0, r0, r0, lsl #24
 800dd74:	20001d90 	mulcs	r0, r0, sp
 800dd78:	40013400 	andmi	r3, r1, r0, lsl #8
 800dd7c:	40013000 	andmi	r3, r1, r0
 800dd80:	08017584 	stmdaeq	r1, {r2, r7, r8, sl, ip, sp, lr}
 800dd84:	20001da0 	andcs	r1, r0, r0, lsr #27

0800dd88 <WS28xxMulti::Blackout()>:
 800dd88:	b570      	push	{r4, r5, r6, lr}
 800dd8a:	f44f 7391 	mov.w	r3, #290	; 0x122
 800dd8e:	4604      	mov	r4, r0
 800dd90:	4a13      	ldr	r2, [pc, #76]	; (800dde0 <WS28xxMulti::Blackout()+0x58>)
 800dd92:	4914      	ldr	r1, [pc, #80]	; (800dde4 <WS28xxMulti::Blackout()+0x5c>)
 800dd94:	4814      	ldr	r0, [pc, #80]	; (800dde8 <WS28xxMulti::Blackout()+0x60>)
 800dd96:	f005 fc63 	bl	8013660 <printf>
 800dd9a:	4d14      	ldr	r5, [pc, #80]	; (800ddec <WS28xxMulti::Blackout()+0x64>)
 800dd9c:	f3bf 8f5f 	dmb	sy
 800dda0:	782a      	ldrb	r2, [r5, #0]
 800dda2:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800dda6:	2a00      	cmp	r2, #0
 800dda8:	d1f8      	bne.n	800dd9c <WS28xxMulti::Blackout()+0x14>
 800ddaa:	2003      	movs	r0, #3
 800ddac:	f643 4101 	movw	r1, #15361	; 0x3c01
 800ddb0:	4a0f      	ldr	r2, [pc, #60]	; (800ddf0 <WS28xxMulti::Blackout()+0x68>)
 800ddb2:	3301      	adds	r3, #1
 800ddb4:	428b      	cmp	r3, r1
 800ddb6:	f822 0b02 	strh.w	r0, [r2], #2
 800ddba:	d1fa      	bne.n	800ddb2 <WS28xxMulti::Blackout()+0x2a>
 800ddbc:	4620      	mov	r0, r4
 800ddbe:	f7ff ff6f 	bl	800dca0 <WS28xxMulti::Update()>
 800ddc2:	f3bf 8f5f 	dmb	sy
 800ddc6:	782b      	ldrb	r3, [r5, #0]
 800ddc8:	2b00      	cmp	r3, #0
 800ddca:	d1fa      	bne.n	800ddc2 <WS28xxMulti::Blackout()+0x3a>
 800ddcc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddd0:	f44f 7398 	mov.w	r3, #304	; 0x130
 800ddd4:	4a02      	ldr	r2, [pc, #8]	; (800dde0 <WS28xxMulti::Blackout()+0x58>)
 800ddd6:	4903      	ldr	r1, [pc, #12]	; (800dde4 <WS28xxMulti::Blackout()+0x5c>)
 800ddd8:	4806      	ldr	r0, [pc, #24]	; (800ddf4 <WS28xxMulti::Blackout()+0x6c>)
 800ddda:	f005 bc41 	b.w	8013660 <printf>
 800ddde:	bf00      	nop
 800dde0:	0801753a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, lr}
 800dde4:	0801745b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, ip, sp, lr}
 800dde8:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 800ddec:	20001d90 	mulcs	r0, r0, sp
 800ddf0:	20001da0 	andcs	r1, r0, r0, lsr #27
 800ddf4:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}

0800ddf8 <WS28xxMulti::IsUpdating()>:
 800ddf8:	f3bf 8f5f 	dmb	sy
 800ddfc:	4b01      	ldr	r3, [pc, #4]	; (800de04 <WS28xxMulti::IsUpdating()+0xc>)
 800ddfe:	7818      	ldrb	r0, [r3, #0]
 800de00:	4770      	bx	lr
 800de02:	bf00      	nop
 800de04:	20001d90 	mulcs	r0, r0, sp

0800de08 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800de08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de0a:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800de0e:	2400      	movs	r4, #0
 800de10:	2501      	movs	r5, #1
 800de12:	4f19      	ldr	r7, [pc, #100]	; (800de78 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 800de14:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800de18:	4818      	ldr	r0, [pc, #96]	; (800de7c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800de1a:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800de1e:	b2c9      	uxtb	r1, r1
 800de20:	4438      	add	r0, r7
 800de22:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800de26:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800de2a:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800de2e:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800de32:	f89d e014 	ldrb.w	lr, [sp, #20]
 800de36:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800de3a:	0092      	lsls	r2, r2, #2
 800de3c:	0089      	lsls	r1, r1, #2
 800de3e:	ea13 0f0c 	tst.w	r3, ip
 800de42:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800de46:	bf16      	itet	ne
 800de48:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800de4c:	6005      	streq	r5, [r0, #0]
 800de4e:	6004      	strne	r4, [r0, #0]
 800de50:	ea1e 0f0c 	tst.w	lr, ip
 800de54:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800de58:	bf16      	itet	ne
 800de5a:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800de5e:	6005      	streq	r5, [r0, #0]
 800de60:	6004      	strne	r4, [r0, #0]
 800de62:	ea16 0f0c 	tst.w	r6, ip
 800de66:	bf0c      	ite	eq
 800de68:	6015      	streq	r5, [r2, #0]
 800de6a:	6014      	strne	r4, [r2, #0]
 800de6c:	3240      	adds	r2, #64	; 0x40
 800de6e:	4291      	cmp	r1, r2
 800de70:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800de74:	d1e3      	bne.n	800de3e <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x36>
 800de76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de78:	20001da2 	andcs	r1, r0, r2, lsr #27
 800de7c:	e1100020 	tst	r0, r0, lsr #32

0800de80 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800de80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de84:	2907      	cmp	r1, #7
 800de86:	460d      	mov	r5, r1
 800de88:	4604      	mov	r4, r0
 800de8a:	4616      	mov	r6, r2
 800de8c:	461f      	mov	r7, r3
 800de8e:	f89d 8020 	ldrb.w	r8, [sp, #32]
 800de92:	f89d 9024 	ldrb.w	r9, [sp, #36]	; 0x24
 800de96:	d840      	bhi.n	800df1a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x9a>
 800de98:	68e3      	ldr	r3, [r4, #12]
 800de9a:	ebb6 0fd3 	cmp.w	r6, r3, lsr #3
 800de9e:	d234      	bcs.n	800df0a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x8a>
 800dea0:	68a3      	ldr	r3, [r4, #8]
 800dea2:	2b05      	cmp	r3, #5
 800dea4:	d841      	bhi.n	800df2a <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xaa>
 800dea6:	e8df f003 	tbb	[pc, r3]
 800deaa:	291e120e 	ldmdbcs	lr, {r1, r2, r3, r9, ip}
 800deae:	464b032c 	strbmi	r0, [fp], -ip, lsr #6
 800deb2:	9709      	str	r7, [sp, #36]	; 0x24
 800deb4:	4632      	mov	r2, r6
 800deb6:	4629      	mov	r1, r5
 800deb8:	4620      	mov	r0, r4
 800deba:	f8cd 8020 	str.w	r8, [sp, #32]
 800debe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dec2:	f7ff bfa1 	b.w	800de08 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800dec6:	463b      	mov	r3, r7
 800dec8:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800decc:	e7f2      	b.n	800deb4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 800dece:	463b      	mov	r3, r7
 800ded0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800ded4:	4632      	mov	r2, r6
 800ded6:	4629      	mov	r1, r5
 800ded8:	4620      	mov	r0, r4
 800deda:	f8cd 9020 	str.w	r9, [sp, #32]
 800dede:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dee2:	f7ff bf91 	b.w	800de08 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800dee6:	4643      	mov	r3, r8
 800dee8:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800deec:	4632      	mov	r2, r6
 800deee:	4629      	mov	r1, r5
 800def0:	4620      	mov	r0, r4
 800def2:	9708      	str	r7, [sp, #32]
 800def4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800def8:	f7ff bf86 	b.w	800de08 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800defc:	4643      	mov	r3, r8
 800defe:	9709      	str	r7, [sp, #36]	; 0x24
 800df00:	e7e8      	b.n	800ded4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x54>
 800df02:	464b      	mov	r3, r9
 800df04:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800df08:	e7f0      	b.n	800deec <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x6c>
 800df0a:	f240 1163 	movw	r1, #355	; 0x163
 800df0e:	4b0a      	ldr	r3, [pc, #40]	; (800df38 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb8>)
 800df10:	4a0a      	ldr	r2, [pc, #40]	; (800df3c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>)
 800df12:	480b      	ldr	r0, [pc, #44]	; (800df40 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xc0>)
 800df14:	f004 ff4e 	bl	8012db4 <__assert_func>
 800df18:	e7c2      	b.n	800dea0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x20>
 800df1a:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800df1e:	4b09      	ldr	r3, [pc, #36]	; (800df44 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xc4>)
 800df20:	4a06      	ldr	r2, [pc, #24]	; (800df3c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>)
 800df22:	4807      	ldr	r0, [pc, #28]	; (800df40 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xc0>)
 800df24:	f004 ff46 	bl	8012db4 <__assert_func>
 800df28:	e7b6      	b.n	800de98 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x18>
 800df2a:	f240 1179 	movw	r1, #377	; 0x179
 800df2e:	4b06      	ldr	r3, [pc, #24]	; (800df48 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xc8>)
 800df30:	4a02      	ldr	r2, [pc, #8]	; (800df3c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>)
 800df32:	4803      	ldr	r0, [pc, #12]	; (800df40 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xc0>)
 800df34:	f004 ff3e 	bl	8012db4 <__assert_func>
 800df38:	08017560 	stmdaeq	r1, {r5, r6, r8, sl, ip, sp, lr}
 800df3c:	08017554 	stmdaeq	r1, {r2, r4, r6, r8, sl, ip, sp, lr}
 800df40:	0801745b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, ip, sp, lr}
 800df44:	08017544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp, lr}
 800df48:	08017580 	stmdaeq	r1, {r7, r8, sl, ip, sp, lr}

0800df4c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800df4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800df50:	2907      	cmp	r1, #7
 800df52:	4688      	mov	r8, r1
 800df54:	4682      	mov	sl, r0
 800df56:	4691      	mov	r9, r2
 800df58:	461c      	mov	r4, r3
 800df5a:	f89d 5020 	ldrb.w	r5, [sp, #32]
 800df5e:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 800df62:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 800df66:	d83d      	bhi.n	800dfe4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x98>
 800df68:	f8da 300c 	ldr.w	r3, [sl, #12]
 800df6c:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 800df70:	d244      	bcs.n	800dffc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xb0>
 800df72:	2180      	movs	r1, #128	; 0x80
 800df74:	2300      	movs	r3, #0
 800df76:	f04f 0c01 	mov.w	ip, #1
 800df7a:	4a24      	ldr	r2, [pc, #144]	; (800e00c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xc0>)
 800df7c:	fa5f f088 	uxtb.w	r0, r8
 800df80:	eb02 1989 	add.w	r9, r2, r9, lsl #6
 800df84:	4a22      	ldr	r2, [pc, #136]	; (800e010 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xc4>)
 800df86:	444a      	add	r2, r9
 800df88:	eb00 02c2 	add.w	r2, r0, r2, lsl #3
 800df8c:	f100 6008 	add.w	r0, r0, #142606336	; 0x8800000
 800df90:	f500 7000 	add.w	r0, r0, #512	; 0x200
 800df94:	eb00 00c9 	add.w	r0, r0, r9, lsl #3
 800df98:	0092      	lsls	r2, r2, #2
 800df9a:	0080      	lsls	r0, r0, #2
 800df9c:	f5a2 6ec0 	sub.w	lr, r2, #1536	; 0x600
 800dfa0:	420d      	tst	r5, r1
 800dfa2:	bf0c      	ite	eq
 800dfa4:	f8ce c000 	streq.w	ip, [lr]
 800dfa8:	f8ce 3000 	strne.w	r3, [lr]
 800dfac:	f5a2 6e80 	sub.w	lr, r2, #1024	; 0x400
 800dfb0:	420c      	tst	r4, r1
 800dfb2:	bf0c      	ite	eq
 800dfb4:	f8ce c000 	streq.w	ip, [lr]
 800dfb8:	f8ce 3000 	strne.w	r3, [lr]
 800dfbc:	420e      	tst	r6, r1
 800dfbe:	f5a2 7e00 	sub.w	lr, r2, #512	; 0x200
 800dfc2:	bf0c      	ite	eq
 800dfc4:	f8ce c000 	streq.w	ip, [lr]
 800dfc8:	f8ce 3000 	strne.w	r3, [lr]
 800dfcc:	420f      	tst	r7, r1
 800dfce:	bf0c      	ite	eq
 800dfd0:	f8c2 c000 	streq.w	ip, [r2]
 800dfd4:	6013      	strne	r3, [r2, #0]
 800dfd6:	3240      	adds	r2, #64	; 0x40
 800dfd8:	4290      	cmp	r0, r2
 800dfda:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800dfde:	d1dd      	bne.n	800df9c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x50>
 800dfe0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dfe4:	4b0b      	ldr	r3, [pc, #44]	; (800e014 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xc8>)
 800dfe6:	f44f 71c1 	mov.w	r1, #386	; 0x182
 800dfea:	4a0b      	ldr	r2, [pc, #44]	; (800e018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xcc>)
 800dfec:	480b      	ldr	r0, [pc, #44]	; (800e01c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xd0>)
 800dfee:	f004 fee1 	bl	8012db4 <__assert_func>
 800dff2:	f8da 300c 	ldr.w	r3, [sl, #12]
 800dff6:	ebb9 0fd3 	cmp.w	r9, r3, lsr #3
 800dffa:	d3ba      	bcc.n	800df72 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x26>
 800dffc:	f240 1183 	movw	r1, #387	; 0x183
 800e000:	4b07      	ldr	r3, [pc, #28]	; (800e020 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xd4>)
 800e002:	4a05      	ldr	r2, [pc, #20]	; (800e018 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xcc>)
 800e004:	4805      	ldr	r0, [pc, #20]	; (800e01c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0xd0>)
 800e006:	f004 fed5 	bl	8012db4 <__assert_func>
 800e00a:	e7b2      	b.n	800df72 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x26>
 800e00c:	20001da2 	andcs	r1, r0, r2, lsr #27
 800e010:	e1100030 	tst	r0, r0, lsr r0
 800e014:	08017544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp, lr}
 800e018:	08017554 	stmdaeq	r1, {r2, r4, r6, r8, sl, ip, sp, lr}
 800e01c:	0801745b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, ip, sp, lr}
 800e020:	08017560 	stmdaeq	r1, {r5, r6, r8, sl, ip, sp, lr}

0800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e024:	2300      	movs	r3, #0
 800e026:	2020      	movs	r0, #32
 800e028:	b510      	push	{r4, lr}
 800e02a:	4a04      	ldr	r2, [pc, #16]	; (800e03c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e02c:	428b      	cmp	r3, r1
 800e02e:	d004      	beq.n	800e03a <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800e030:	f852 4b04 	ldr.w	r4, [r2], #4
 800e034:	3301      	adds	r3, #1
 800e036:	4420      	add	r0, r4
 800e038:	e7f8      	b.n	800e02c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e03a:	bd10      	pop	{r4, pc}
 800e03c:	08017588 	stmdaeq	r1, {r3, r7, r8, sl, ip, sp, lr}

0800e040 <SpiFlashStore::Init()>:
 800e040:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e044:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800e168 <SpiFlashStore::Init()+0x128>
 800e048:	4607      	mov	r7, r0
 800e04a:	b085      	sub	sp, #20
 800e04c:	f8d8 0000 	ldr.w	r0, [r8]
 800e050:	f000 fc2c 	bl	800e8ac <FlashRom::GetSectorSize()>
 800e054:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e058:	4605      	mov	r5, r0
 800e05a:	f040 8083 	bne.w	800e164 <SpiFlashStore::Init()+0x124>
 800e05e:	f8d8 0000 	ldr.w	r0, [r8]
 800e062:	f000 fc1b 	bl	800e89c <FlashRom::GetSize()>
 800e066:	4b41      	ldr	r3, [pc, #260]	; (800e16c <SpiFlashStore::Init()+0x12c>)
 800e068:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e06c:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e070:	6019      	str	r1, [r3, #0]
 800e072:	2e00      	cmp	r6, #0
 800e074:	d176      	bne.n	800e164 <SpiFlashStore::Init()+0x124>
 800e076:	4c3e      	ldr	r4, [pc, #248]	; (800e170 <SpiFlashStore::Init()+0x130>)
 800e078:	ab03      	add	r3, sp, #12
 800e07a:	9300      	str	r3, [sp, #0]
 800e07c:	462a      	mov	r2, r5
 800e07e:	4623      	mov	r3, r4
 800e080:	f8d8 0000 	ldr.w	r0, [r8]
 800e084:	f000 fc15 	bl	800e8b2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e088:	7823      	ldrb	r3, [r4, #0]
 800e08a:	2b41      	cmp	r3, #65	; 0x41
 800e08c:	bf1c      	itt	ne
 800e08e:	2341      	movne	r3, #65	; 0x41
 800e090:	7023      	strbne	r3, [r4, #0]
 800e092:	7863      	ldrb	r3, [r4, #1]
 800e094:	bf14      	ite	ne
 800e096:	4635      	movne	r5, r6
 800e098:	2501      	moveq	r5, #1
 800e09a:	2b76      	cmp	r3, #118	; 0x76
 800e09c:	bf1c      	itt	ne
 800e09e:	2376      	movne	r3, #118	; 0x76
 800e0a0:	7063      	strbne	r3, [r4, #1]
 800e0a2:	78a3      	ldrb	r3, [r4, #2]
 800e0a4:	bf18      	it	ne
 800e0a6:	2500      	movne	r5, #0
 800e0a8:	2b56      	cmp	r3, #86	; 0x56
 800e0aa:	bf1c      	itt	ne
 800e0ac:	2356      	movne	r3, #86	; 0x56
 800e0ae:	70a3      	strbne	r3, [r4, #2]
 800e0b0:	78e3      	ldrb	r3, [r4, #3]
 800e0b2:	bf18      	it	ne
 800e0b4:	2500      	movne	r5, #0
 800e0b6:	2b10      	cmp	r3, #16
 800e0b8:	d01c      	beq.n	800e0f4 <SpiFlashStore::Init()+0xb4>
 800e0ba:	2310      	movs	r3, #16
 800e0bc:	70e3      	strb	r3, [r4, #3]
 800e0be:	2201      	movs	r2, #1
 800e0c0:	2500      	movs	r5, #0
 800e0c2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e0c6:	4b2b      	ldr	r3, [pc, #172]	; (800e174 <SpiFlashStore::Init()+0x134>)
 800e0c8:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800e178 <SpiFlashStore::Init()+0x138>
 800e0cc:	701a      	strb	r2, [r3, #0]
 800e0ce:	4631      	mov	r1, r6
 800e0d0:	4638      	mov	r0, r7
 800e0d2:	f7ff ffa7 	bl	800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e0d6:	1823      	adds	r3, r4, r0
 800e0d8:	5425      	strb	r5, [r4, r0]
 800e0da:	705d      	strb	r5, [r3, #1]
 800e0dc:	709d      	strb	r5, [r3, #2]
 800e0de:	70dd      	strb	r5, [r3, #3]
 800e0e0:	f858 3b04 	ldr.w	r3, [r8], #4
 800e0e4:	1d02      	adds	r2, r0, #4
 800e0e6:	4403      	add	r3, r0
 800e0e8:	4293      	cmp	r3, r2
 800e0ea:	d931      	bls.n	800e150 <SpiFlashStore::Init()+0x110>
 800e0ec:	f804 9002 	strb.w	r9, [r4, r2]
 800e0f0:	3201      	adds	r2, #1
 800e0f2:	e7f9      	b.n	800e0e8 <SpiFlashStore::Init()+0xa8>
 800e0f4:	2d00      	cmp	r5, #0
 800e0f6:	d0e2      	beq.n	800e0be <SpiFlashStore::Init()+0x7e>
 800e0f8:	f04f 0900 	mov.w	r9, #0
 800e0fc:	46c8      	mov	r8, r9
 800e0fe:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800e17c <SpiFlashStore::Init()+0x13c>
 800e102:	f8da b000 	ldr.w	fp, [sl]
 800e106:	4631      	mov	r1, r6
 800e108:	4638      	mov	r0, r7
 800e10a:	f7ff ff8b 	bl	800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e10e:	5c23      	ldrb	r3, [r4, r0]
 800e110:	2bff      	cmp	r3, #255	; 0xff
 800e112:	d114      	bne.n	800e13e <SpiFlashStore::Init()+0xfe>
 800e114:	1823      	adds	r3, r4, r0
 800e116:	785a      	ldrb	r2, [r3, #1]
 800e118:	2aff      	cmp	r2, #255	; 0xff
 800e11a:	d110      	bne.n	800e13e <SpiFlashStore::Init()+0xfe>
 800e11c:	789a      	ldrb	r2, [r3, #2]
 800e11e:	2aff      	cmp	r2, #255	; 0xff
 800e120:	d10d      	bne.n	800e13e <SpiFlashStore::Init()+0xfe>
 800e122:	78da      	ldrb	r2, [r3, #3]
 800e124:	2aff      	cmp	r2, #255	; 0xff
 800e126:	d10a      	bne.n	800e13e <SpiFlashStore::Init()+0xfe>
 800e128:	46a9      	mov	r9, r5
 800e12a:	f04f 0b01 	mov.w	fp, #1
 800e12e:	f804 8000 	strb.w	r8, [r4, r0]
 800e132:	f883 8001 	strb.w	r8, [r3, #1]
 800e136:	f883 8002 	strb.w	r8, [r3, #2]
 800e13a:	f883 8003 	strb.w	r8, [r3, #3]
 800e13e:	3601      	adds	r6, #1
 800e140:	2e1c      	cmp	r6, #28
 800e142:	d1e0      	bne.n	800e106 <SpiFlashStore::Init()+0xc6>
 800e144:	f1b9 0f00 	cmp.w	r9, #0
 800e148:	d008      	beq.n	800e15c <SpiFlashStore::Init()+0x11c>
 800e14a:	f8ca b000 	str.w	fp, [sl]
 800e14e:	e005      	b.n	800e15c <SpiFlashStore::Init()+0x11c>
 800e150:	3601      	adds	r6, #1
 800e152:	2e1c      	cmp	r6, #28
 800e154:	d1bb      	bne.n	800e0ce <SpiFlashStore::Init()+0x8e>
 800e156:	2501      	movs	r5, #1
 800e158:	4b08      	ldr	r3, [pc, #32]	; (800e17c <SpiFlashStore::Init()+0x13c>)
 800e15a:	601d      	str	r5, [r3, #0]
 800e15c:	4628      	mov	r0, r5
 800e15e:	b005      	add	sp, #20
 800e160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e164:	2500      	movs	r5, #0
 800e166:	e7f9      	b.n	800e15c <SpiFlashStore::Init()+0x11c>
 800e168:	2000a5dc 	ldrdcs	sl, [r0], -ip
 800e16c:	2000a5ac 	andcs	sl, r0, ip, lsr #11
 800e170:	200095ac 	andcs	r9, r0, ip, lsr #11
 800e174:	2000a5c0 	andcs	sl, r0, r0, asr #11
 800e178:	08017588 	stmdaeq	r1, {r3, r7, r8, sl, ip, sp, lr}
 800e17c:	2000a5b8 			; <UNDEFINED> instruction: 0x2000a5b8

0800e180 <SpiFlashStore::SpiFlashStore()>:
 800e180:	b538      	push	{r3, r4, r5, lr}
 800e182:	4b0d      	ldr	r3, [pc, #52]	; (800e1b8 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e184:	4604      	mov	r4, r0
 800e186:	6018      	str	r0, [r3, #0]
 800e188:	4b0c      	ldr	r3, [pc, #48]	; (800e1bc <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e18a:	4d0d      	ldr	r5, [pc, #52]	; (800e1c0 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e18c:	681b      	ldr	r3, [r3, #0]
 800e18e:	781b      	ldrb	r3, [r3, #0]
 800e190:	b113      	cbz	r3, 800e198 <SpiFlashStore::SpiFlashStore()+0x18>
 800e192:	f7ff ff55 	bl	800e040 <SpiFlashStore::Init()>
 800e196:	7028      	strb	r0, [r5, #0]
 800e198:	782b      	ldrb	r3, [r5, #0]
 800e19a:	b153      	cbz	r3, 800e1b2 <SpiFlashStore::SpiFlashStore()+0x32>
 800e19c:	2320      	movs	r3, #32
 800e19e:	2200      	movs	r2, #0
 800e1a0:	4908      	ldr	r1, [pc, #32]	; (800e1c4 <SpiFlashStore::SpiFlashStore()+0x44>)
 800e1a2:	f851 0b04 	ldr.w	r0, [r1], #4
 800e1a6:	3201      	adds	r2, #1
 800e1a8:	2a1c      	cmp	r2, #28
 800e1aa:	4403      	add	r3, r0
 800e1ac:	d1f9      	bne.n	800e1a2 <SpiFlashStore::SpiFlashStore()+0x22>
 800e1ae:	4a06      	ldr	r2, [pc, #24]	; (800e1c8 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e1b0:	6013      	str	r3, [r2, #0]
 800e1b2:	4620      	mov	r0, r4
 800e1b4:	bd38      	pop	{r3, r4, r5, pc}
 800e1b6:	bf00      	nop
 800e1b8:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc
 800e1bc:	2000a5dc 	ldrdcs	sl, [r0], -ip
 800e1c0:	2000a5b0 			; <UNDEFINED> instruction: 0x2000a5b0
 800e1c4:	08017588 	stmdaeq	r1, {r3, r7, r8, sl, ip, sp, lr}
 800e1c8:	2000a5b4 			; <UNDEFINED> instruction: 0x2000a5b4

0800e1cc <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e1cc:	b508      	push	{r3, lr}
 800e1ce:	f7ff ff29 	bl	800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e1d2:	2300      	movs	r3, #0
 800e1d4:	4904      	ldr	r1, [pc, #16]	; (800e1e8 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e1d6:	1842      	adds	r2, r0, r1
 800e1d8:	540b      	strb	r3, [r1, r0]
 800e1da:	7053      	strb	r3, [r2, #1]
 800e1dc:	7093      	strb	r3, [r2, #2]
 800e1de:	70d3      	strb	r3, [r2, #3]
 800e1e0:	2201      	movs	r2, #1
 800e1e2:	4b02      	ldr	r3, [pc, #8]	; (800e1ec <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e1e4:	601a      	str	r2, [r3, #0]
 800e1e6:	bd08      	pop	{r3, pc}
 800e1e8:	200095ac 	andcs	r9, r0, ip, lsr #11
 800e1ec:	2000a5b8 			; <UNDEFINED> instruction: 0x2000a5b8

0800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e1f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1f4:	461c      	mov	r4, r3
 800e1f6:	4b19      	ldr	r3, [pc, #100]	; (800e25c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e1f8:	4615      	mov	r5, r2
 800e1fa:	781f      	ldrb	r7, [r3, #0]
 800e1fc:	9e07      	ldr	r6, [sp, #28]
 800e1fe:	b35f      	cbz	r7, 800e258 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e200:	f7ff ff10 	bl	800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e204:	f04f 0c00 	mov.w	ip, #0
 800e208:	4a15      	ldr	r2, [pc, #84]	; (800e260 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e20a:	1941      	adds	r1, r0, r5
 800e20c:	1e63      	subs	r3, r4, #1
 800e20e:	9c06      	ldr	r4, [sp, #24]
 800e210:	4411      	add	r1, r2
 800e212:	440c      	add	r4, r1
 800e214:	42a1      	cmp	r1, r4
 800e216:	d00a      	beq.n	800e22e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800e218:	f891 8000 	ldrb.w	r8, [r1]
 800e21c:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e220:	3101      	adds	r1, #1
 800e222:	45f0      	cmp	r8, lr
 800e224:	bf1c      	itt	ne
 800e226:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e22a:	46bc      	movne	ip, r7
 800e22c:	e7f2      	b.n	800e214 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e22e:	f1bc 0f00 	cmp.w	ip, #0
 800e232:	d011      	beq.n	800e258 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e234:	4b0b      	ldr	r3, [pc, #44]	; (800e264 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e236:	6819      	ldr	r1, [r3, #0]
 800e238:	b109      	cbz	r1, 800e23e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800e23a:	2906      	cmp	r1, #6
 800e23c:	d101      	bne.n	800e242 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e23e:	2101      	movs	r1, #1
 800e240:	6019      	str	r1, [r3, #0]
 800e242:	4b09      	ldr	r3, [pc, #36]	; (800e268 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e244:	6819      	ldr	r1, [r3, #0]
 800e246:	4b09      	ldr	r3, [pc, #36]	; (800e26c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e248:	6019      	str	r1, [r3, #0]
 800e24a:	b12d      	cbz	r5, 800e258 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e24c:	b126      	cbz	r6, 800e258 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e24e:	9b08      	ldr	r3, [sp, #32]
 800e250:	4418      	add	r0, r3
 800e252:	5813      	ldr	r3, [r2, r0]
 800e254:	4333      	orrs	r3, r6
 800e256:	5013      	str	r3, [r2, r0]
 800e258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e25c:	2000a5b0 			; <UNDEFINED> instruction: 0x2000a5b0
 800e260:	200095ac 	andcs	r9, r0, ip, lsr #11
 800e264:	2000a5b8 			; <UNDEFINED> instruction: 0x2000a5b8
 800e268:	200125a8 	andcs	r2, r1, r8, lsr #11
 800e26c:	200095a8 	andcs	r9, r0, r8, lsr #11

0800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800e270:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e274:	461d      	mov	r5, r3
 800e276:	4b15      	ldr	r3, [pc, #84]	; (800e2cc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800e278:	b085      	sub	sp, #20
 800e27a:	781b      	ldrb	r3, [r3, #0]
 800e27c:	4607      	mov	r7, r0
 800e27e:	4688      	mov	r8, r1
 800e280:	4614      	mov	r4, r2
 800e282:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800e286:	b1eb      	cbz	r3, 800e2c4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e288:	f7ff fecc 	bl	800e024 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e28c:	4910      	ldr	r1, [pc, #64]	; (800e2d0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800e28e:	4a11      	ldr	r2, [pc, #68]	; (800e2d4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800e290:	7809      	ldrb	r1, [r1, #0]
 800e292:	eb00 0309 	add.w	r3, r0, r9
 800e296:	189e      	adds	r6, r3, r2
 800e298:	b951      	cbnz	r1, 800e2b0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e29a:	589b      	ldr	r3, [r3, r2]
 800e29c:	b143      	cbz	r3, 800e2b0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e29e:	3c01      	subs	r4, #1
 800e2a0:	4435      	add	r5, r6
 800e2a2:	42b5      	cmp	r5, r6
 800e2a4:	d00e      	beq.n	800e2c4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e2a6:	f816 3b01 	ldrb.w	r3, [r6], #1
 800e2aa:	f804 3f01 	strb.w	r3, [r4, #1]!
 800e2ae:	e7f8      	b.n	800e2a2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800e2b0:	2300      	movs	r3, #0
 800e2b2:	464a      	mov	r2, r9
 800e2b4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e2b8:	4641      	mov	r1, r8
 800e2ba:	4623      	mov	r3, r4
 800e2bc:	4638      	mov	r0, r7
 800e2be:	9500      	str	r5, [sp, #0]
 800e2c0:	f7ff ff96 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e2c4:	b005      	add	sp, #20
 800e2c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e2ca:	bf00      	nop
 800e2cc:	2000a5b0 			; <UNDEFINED> instruction: 0x2000a5b0
 800e2d0:	2000a5c0 	andcs	sl, r0, r0, asr #11
 800e2d4:	200095ac 	andcs	r9, r0, ip, lsr #11

0800e2d8 <SpiFlashStore::Flash()>:
 800e2d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e2da:	4c25      	ldr	r4, [pc, #148]	; (800e370 <SpiFlashStore::Flash()+0x98>)
 800e2dc:	6820      	ldr	r0, [r4, #0]
 800e2de:	2800      	cmp	r0, #0
 800e2e0:	d043      	beq.n	800e36a <SpiFlashStore::Flash()+0x92>
 800e2e2:	3801      	subs	r0, #1
 800e2e4:	2805      	cmp	r0, #5
 800e2e6:	d831      	bhi.n	800e34c <SpiFlashStore::Flash()+0x74>
 800e2e8:	e8df f000 	tbb	[pc, r0]
 800e2ec:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e2f0:	4b203025 	blmi	881a38c <_sidata+0x802054>
 800e2f4:	681a      	ldr	r2, [r3, #0]
 800e2f6:	4b20      	ldr	r3, [pc, #128]	; (800e378 <SpiFlashStore::Flash()+0xa0>)
 800e2f8:	601a      	str	r2, [r3, #0]
 800e2fa:	2302      	movs	r3, #2
 800e2fc:	6023      	str	r3, [r4, #0]
 800e2fe:	2001      	movs	r0, #1
 800e300:	e033      	b.n	800e36a <SpiFlashStore::Flash()+0x92>
 800e302:	4b1c      	ldr	r3, [pc, #112]	; (800e374 <SpiFlashStore::Flash()+0x9c>)
 800e304:	4a1c      	ldr	r2, [pc, #112]	; (800e378 <SpiFlashStore::Flash()+0xa0>)
 800e306:	681b      	ldr	r3, [r3, #0]
 800e308:	6812      	ldr	r2, [r2, #0]
 800e30a:	1a9b      	subs	r3, r3, r2
 800e30c:	2b63      	cmp	r3, #99	; 0x63
 800e30e:	d9f6      	bls.n	800e2fe <SpiFlashStore::Flash()+0x26>
 800e310:	2303      	movs	r3, #3
 800e312:	e7f3      	b.n	800e2fc <SpiFlashStore::Flash()+0x24>
 800e314:	4919      	ldr	r1, [pc, #100]	; (800e37c <SpiFlashStore::Flash()+0xa4>)
 800e316:	481a      	ldr	r0, [pc, #104]	; (800e380 <SpiFlashStore::Flash()+0xa8>)
 800e318:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e31c:	6809      	ldr	r1, [r1, #0]
 800e31e:	6800      	ldr	r0, [r0, #0]
 800e320:	ab03      	add	r3, sp, #12
 800e322:	f000 fad5 	bl	800e8d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e326:	2800      	cmp	r0, #0
 800e328:	d0e9      	beq.n	800e2fe <SpiFlashStore::Flash()+0x26>
 800e32a:	4b12      	ldr	r3, [pc, #72]	; (800e374 <SpiFlashStore::Flash()+0x9c>)
 800e32c:	681a      	ldr	r2, [r3, #0]
 800e32e:	4b12      	ldr	r3, [pc, #72]	; (800e378 <SpiFlashStore::Flash()+0xa0>)
 800e330:	601a      	str	r2, [r3, #0]
 800e332:	2305      	movs	r3, #5
 800e334:	e7e2      	b.n	800e2fc <SpiFlashStore::Flash()+0x24>
 800e336:	4b0f      	ldr	r3, [pc, #60]	; (800e374 <SpiFlashStore::Flash()+0x9c>)
 800e338:	4a0f      	ldr	r2, [pc, #60]	; (800e378 <SpiFlashStore::Flash()+0xa0>)
 800e33a:	681b      	ldr	r3, [r3, #0]
 800e33c:	6812      	ldr	r2, [r2, #0]
 800e33e:	1a9b      	subs	r3, r3, r2
 800e340:	2b63      	cmp	r3, #99	; 0x63
 800e342:	d9dc      	bls.n	800e2fe <SpiFlashStore::Flash()+0x26>
 800e344:	2304      	movs	r3, #4
 800e346:	e7d9      	b.n	800e2fc <SpiFlashStore::Flash()+0x24>
 800e348:	2306      	movs	r3, #6
 800e34a:	e7d7      	b.n	800e2fc <SpiFlashStore::Flash()+0x24>
 800e34c:	ab03      	add	r3, sp, #12
 800e34e:	4a0d      	ldr	r2, [pc, #52]	; (800e384 <SpiFlashStore::Flash()+0xac>)
 800e350:	490a      	ldr	r1, [pc, #40]	; (800e37c <SpiFlashStore::Flash()+0xa4>)
 800e352:	480b      	ldr	r0, [pc, #44]	; (800e380 <SpiFlashStore::Flash()+0xa8>)
 800e354:	9300      	str	r3, [sp, #0]
 800e356:	6812      	ldr	r2, [r2, #0]
 800e358:	4b0b      	ldr	r3, [pc, #44]	; (800e388 <SpiFlashStore::Flash()+0xb0>)
 800e35a:	6809      	ldr	r1, [r1, #0]
 800e35c:	6800      	ldr	r0, [r0, #0]
 800e35e:	f000 fb57 	bl	800ea10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e362:	2800      	cmp	r0, #0
 800e364:	d0cb      	beq.n	800e2fe <SpiFlashStore::Flash()+0x26>
 800e366:	2000      	movs	r0, #0
 800e368:	6020      	str	r0, [r4, #0]
 800e36a:	b004      	add	sp, #16
 800e36c:	bd10      	pop	{r4, pc}
 800e36e:	bf00      	nop
 800e370:	2000a5b8 			; <UNDEFINED> instruction: 0x2000a5b8
 800e374:	200125a8 	andcs	r2, r1, r8, lsr #11
 800e378:	200095a8 	andcs	r9, r0, r8, lsr #11
 800e37c:	2000a5ac 	andcs	sl, r0, ip, lsr #11
 800e380:	2000a5dc 	ldrdcs	sl, [r0], -ip
 800e384:	2000a5b4 			; <UNDEFINED> instruction: 0x2000a5b4
 800e388:	200095ac 	andcs	r9, r0, ip, lsr #11

0800e38c <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e38c:	4770      	bx	lr
	...

0800e390 <StoreDisplayUdf::Copy(TDisplayUdfParams*)>:
 800e390:	2300      	movs	r3, #0
 800e392:	b507      	push	{r0, r1, r2, lr}
 800e394:	4805      	ldr	r0, [pc, #20]	; (800e3ac <StoreDisplayUdf::Copy(TDisplayUdfParams*)+0x1c>)
 800e396:	9300      	str	r3, [sp, #0]
 800e398:	460a      	mov	r2, r1
 800e39a:	2322      	movs	r3, #34	; 0x22
 800e39c:	210f      	movs	r1, #15
 800e39e:	6800      	ldr	r0, [r0, #0]
 800e3a0:	f7ff ff66 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e3a4:	b003      	add	sp, #12
 800e3a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3aa:	bf00      	nop
 800e3ac:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e3b0 <StoreDisplayUdf::Update(TDisplayUdfParams const*)>:
 800e3b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e3b2:	2200      	movs	r2, #0
 800e3b4:	460b      	mov	r3, r1
 800e3b6:	2122      	movs	r1, #34	; 0x22
 800e3b8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e3bc:	4804      	ldr	r0, [pc, #16]	; (800e3d0 <StoreDisplayUdf::Update(TDisplayUdfParams const*)+0x20>)
 800e3be:	9100      	str	r1, [sp, #0]
 800e3c0:	6800      	ldr	r0, [r0, #0]
 800e3c2:	210f      	movs	r1, #15
 800e3c4:	f7ff ff14 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e3c8:	b005      	add	sp, #20
 800e3ca:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3ce:	bf00      	nop
 800e3d0:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e3d4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e3d4:	b510      	push	{r4, lr}
 800e3d6:	4604      	mov	r4, r0
 800e3d8:	f004 fce4 	bl	8012da4 <operator delete(void*)>
 800e3dc:	4620      	mov	r0, r4
 800e3de:	bd10      	pop	{r4, pc}

0800e3e0 <StoreDisplayUdf::StoreDisplayUdf()>:
 800e3e0:	4a02      	ldr	r2, [pc, #8]	; (800e3ec <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e3e2:	6002      	str	r2, [r0, #0]
 800e3e4:	4a02      	ldr	r2, [pc, #8]	; (800e3f0 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e3e6:	6010      	str	r0, [r2, #0]
 800e3e8:	4770      	bx	lr
 800e3ea:	bf00      	nop
 800e3ec:	08017600 	stmdaeq	r1, {r9, sl, ip, sp, lr}
 800e3f0:	2000a5c4 	andcs	sl, r0, r4, asr #11

0800e3f4 <StoreE131::~StoreE131()>:
 800e3f4:	4770      	bx	lr
	...

0800e3f8 <StoreE131::Copy(e131params::Params*)>:
 800e3f8:	2300      	movs	r3, #0
 800e3fa:	b507      	push	{r0, r1, r2, lr}
 800e3fc:	4805      	ldr	r0, [pc, #20]	; (800e414 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800e3fe:	9300      	str	r3, [sp, #0]
 800e400:	460a      	mov	r2, r1
 800e402:	231f      	movs	r3, #31
 800e404:	2104      	movs	r1, #4
 800e406:	6800      	ldr	r0, [r0, #0]
 800e408:	f7ff ff32 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e40c:	b003      	add	sp, #12
 800e40e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e412:	bf00      	nop
 800e414:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e418 <StoreE131::Update(e131params::Params const*)>:
 800e418:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e41a:	2200      	movs	r2, #0
 800e41c:	460b      	mov	r3, r1
 800e41e:	211f      	movs	r1, #31
 800e420:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e424:	4804      	ldr	r0, [pc, #16]	; (800e438 <StoreE131::Update(e131params::Params const*)+0x20>)
 800e426:	9100      	str	r1, [sp, #0]
 800e428:	6800      	ldr	r0, [r0, #0]
 800e42a:	2104      	movs	r1, #4
 800e42c:	f7ff fee0 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e430:	b005      	add	sp, #20
 800e432:	f85d fb04 	ldr.w	pc, [sp], #4
 800e436:	bf00      	nop
 800e438:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e43c <StoreE131::~StoreE131()>:
 800e43c:	b510      	push	{r4, lr}
 800e43e:	4604      	mov	r4, r0
 800e440:	f004 fcb0 	bl	8012da4 <operator delete(void*)>
 800e444:	4620      	mov	r0, r4
 800e446:	bd10      	pop	{r4, pc}

0800e448 <StoreE131::StoreE131()>:
 800e448:	4a02      	ldr	r2, [pc, #8]	; (800e454 <StoreE131::StoreE131()+0xc>)
 800e44a:	6002      	str	r2, [r0, #0]
 800e44c:	4a02      	ldr	r2, [pc, #8]	; (800e458 <StoreE131::StoreE131()+0x10>)
 800e44e:	6010      	str	r0, [r2, #0]
 800e450:	4770      	bx	lr
 800e452:	bf00      	nop
 800e454:	08017618 	stmdaeq	r1, {r3, r4, r9, sl, ip, sp, lr}
 800e458:	2000a5c8 	andcs	sl, r0, r8, asr #11

0800e45c <StoreNetwork::~StoreNetwork()>:
 800e45c:	4770      	bx	lr

0800e45e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e45e:	3804      	subs	r0, #4
 800e460:	4770      	bx	lr
	...

0800e464 <StoreNetwork::Update(TNetworkParams const*)>:
 800e464:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e466:	2200      	movs	r2, #0
 800e468:	460b      	mov	r3, r1
 800e46a:	215e      	movs	r1, #94	; 0x5e
 800e46c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e470:	4804      	ldr	r0, [pc, #16]	; (800e484 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800e472:	9100      	str	r1, [sp, #0]
 800e474:	6800      	ldr	r0, [r0, #0]
 800e476:	4611      	mov	r1, r2
 800e478:	f7ff feba 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e47c:	b005      	add	sp, #20
 800e47e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e482:	bf00      	nop
 800e484:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e488 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e488:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e48a:	2308      	movs	r3, #8
 800e48c:	9105      	str	r1, [sp, #20]
 800e48e:	2100      	movs	r1, #0
 800e490:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e494:	2304      	movs	r3, #4
 800e496:	4805      	ldr	r0, [pc, #20]	; (800e4ac <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e498:	9300      	str	r3, [sp, #0]
 800e49a:	220c      	movs	r2, #12
 800e49c:	6800      	ldr	r0, [r0, #0]
 800e49e:	ab05      	add	r3, sp, #20
 800e4a0:	f7ff fea6 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e4a4:	b007      	add	sp, #28
 800e4a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4aa:	bf00      	nop
 800e4ac:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e4b0 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e4b0:	f1a0 0004 	sub.w	r0, r0, #4
 800e4b4:	e7e8      	b.n	800e488 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e4b6:	bf00      	nop

0800e4b8 <StoreNetwork::SaveNetMask(unsigned int)>:
 800e4b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e4ba:	2304      	movs	r3, #4
 800e4bc:	9105      	str	r1, [sp, #20]
 800e4be:	2100      	movs	r1, #0
 800e4c0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e4c4:	4804      	ldr	r0, [pc, #16]	; (800e4d8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e4c6:	9300      	str	r3, [sp, #0]
 800e4c8:	2208      	movs	r2, #8
 800e4ca:	6800      	ldr	r0, [r0, #0]
 800e4cc:	ab05      	add	r3, sp, #20
 800e4ce:	f7ff fe8f 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e4d2:	b007      	add	sp, #28
 800e4d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4d8:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e4dc <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e4dc:	f1a0 0004 	sub.w	r0, r0, #4
 800e4e0:	e7ea      	b.n	800e4b8 <StoreNetwork::SaveNetMask(unsigned int)>
 800e4e2:	bf00      	nop

0800e4e4 <StoreNetwork::SaveIp(unsigned int)>:
 800e4e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e4e6:	2302      	movs	r3, #2
 800e4e8:	9105      	str	r1, [sp, #20]
 800e4ea:	2100      	movs	r1, #0
 800e4ec:	2204      	movs	r2, #4
 800e4ee:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e4f2:	4804      	ldr	r0, [pc, #16]	; (800e504 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e4f4:	9200      	str	r2, [sp, #0]
 800e4f6:	6800      	ldr	r0, [r0, #0]
 800e4f8:	ab05      	add	r3, sp, #20
 800e4fa:	f7ff fe79 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e4fe:	b007      	add	sp, #28
 800e500:	f85d fb04 	ldr.w	pc, [sp], #4
 800e504:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e508 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e508:	f1a0 0004 	sub.w	r0, r0, #4
 800e50c:	e7ea      	b.n	800e4e4 <StoreNetwork::SaveIp(unsigned int)>
 800e50e:	bf00      	nop

0800e510 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e510:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e512:	460b      	mov	r3, r1
 800e514:	2020      	movs	r0, #32
 800e516:	2100      	movs	r1, #0
 800e518:	2a40      	cmp	r2, #64	; 0x40
 800e51a:	bf28      	it	cs
 800e51c:	2240      	movcs	r2, #64	; 0x40
 800e51e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e522:	4804      	ldr	r0, [pc, #16]	; (800e534 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e524:	9200      	str	r2, [sp, #0]
 800e526:	6800      	ldr	r0, [r0, #0]
 800e528:	2215      	movs	r2, #21
 800e52a:	f7ff fe61 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e52e:	b005      	add	sp, #20
 800e530:	f85d fb04 	ldr.w	pc, [sp], #4
 800e534:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e538 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e538:	f1a0 0004 	sub.w	r0, r0, #4
 800e53c:	e7e8      	b.n	800e510 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e53e:	bf00      	nop

0800e540 <StoreNetwork::~StoreNetwork()>:
 800e540:	b510      	push	{r4, lr}
 800e542:	4604      	mov	r4, r0
 800e544:	f004 fc2e 	bl	8012da4 <operator delete(void*)>
 800e548:	4620      	mov	r0, r4
 800e54a:	bd10      	pop	{r4, pc}

0800e54c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e54c:	f1a0 0004 	sub.w	r0, r0, #4
 800e550:	e7f6      	b.n	800e540 <StoreNetwork::~StoreNetwork()>
	...

0800e554 <StoreNetwork::Copy(TNetworkParams*)>:
 800e554:	b507      	push	{r0, r1, r2, lr}
 800e556:	460a      	mov	r2, r1
 800e558:	2100      	movs	r1, #0
 800e55a:	4804      	ldr	r0, [pc, #16]	; (800e56c <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800e55c:	9100      	str	r1, [sp, #0]
 800e55e:	235e      	movs	r3, #94	; 0x5e
 800e560:	6800      	ldr	r0, [r0, #0]
 800e562:	f7ff fe85 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e566:	b003      	add	sp, #12
 800e568:	f85d fb04 	ldr.w	pc, [sp], #4
 800e56c:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e570 <StoreNetwork::StoreNetwork()>:
 800e570:	4a03      	ldr	r2, [pc, #12]	; (800e580 <StoreNetwork::StoreNetwork()+0x10>)
 800e572:	6002      	str	r2, [r0, #0]
 800e574:	322c      	adds	r2, #44	; 0x2c
 800e576:	6042      	str	r2, [r0, #4]
 800e578:	4a02      	ldr	r2, [pc, #8]	; (800e584 <StoreNetwork::StoreNetwork()+0x14>)
 800e57a:	6010      	str	r0, [r2, #0]
 800e57c:	4770      	bx	lr
 800e57e:	bf00      	nop
 800e580:	08017630 	stmdaeq	r1, {r4, r5, r9, sl, ip, sp, lr}
 800e584:	2000a5cc 	andcs	sl, r0, ip, asr #11

0800e588 <StoreRDMDevice::~StoreRDMDevice()>:
 800e588:	4770      	bx	lr

0800e58a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800e58a:	3804      	subs	r0, #4
 800e58c:	4770      	bx	lr
	...

0800e590 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800e590:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e592:	2200      	movs	r2, #0
 800e594:	460b      	mov	r3, r1
 800e596:	2129      	movs	r1, #41	; 0x29
 800e598:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e59c:	4804      	ldr	r0, [pc, #16]	; (800e5b0 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800e59e:	9100      	str	r1, [sp, #0]
 800e5a0:	6800      	ldr	r0, [r0, #0]
 800e5a2:	210b      	movs	r1, #11
 800e5a4:	f7ff fe24 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5a8:	b005      	add	sp, #20
 800e5aa:	f85d fb04 	ldr.w	pc, [sp], #4
 800e5ae:	bf00      	nop
 800e5b0:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e5b4 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800e5b4:	b570      	push	{r4, r5, r6, lr}
 800e5b6:	2401      	movs	r4, #1
 800e5b8:	2600      	movs	r6, #0
 800e5ba:	4d0c      	ldr	r5, [pc, #48]	; (800e5ec <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800e5bc:	b086      	sub	sp, #24
 800e5be:	460b      	mov	r3, r1
 800e5c0:	6828      	ldr	r0, [r5, #0]
 800e5c2:	f88d 2017 	strb.w	r2, [sp, #23]
 800e5c6:	9200      	str	r2, [sp, #0]
 800e5c8:	210b      	movs	r1, #11
 800e5ca:	2204      	movs	r2, #4
 800e5cc:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800e5d0:	f7ff fe0e 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5d4:	2224      	movs	r2, #36	; 0x24
 800e5d6:	210b      	movs	r1, #11
 800e5d8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800e5dc:	6828      	ldr	r0, [r5, #0]
 800e5de:	9400      	str	r4, [sp, #0]
 800e5e0:	f10d 0317 	add.w	r3, sp, #23
 800e5e4:	f7ff fe04 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e5e8:	b006      	add	sp, #24
 800e5ea:	bd70      	pop	{r4, r5, r6, pc}
 800e5ec:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e5f0 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800e5f0:	f1a0 0004 	sub.w	r0, r0, #4
 800e5f4:	e7de      	b.n	800e5b4 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800e5f6:	bf00      	nop

0800e5f8 <StoreRDMDevice::~StoreRDMDevice()>:
 800e5f8:	b510      	push	{r4, lr}
 800e5fa:	4604      	mov	r4, r0
 800e5fc:	f004 fbd2 	bl	8012da4 <operator delete(void*)>
 800e600:	4620      	mov	r0, r4
 800e602:	bd10      	pop	{r4, pc}

0800e604 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800e604:	f1a0 0004 	sub.w	r0, r0, #4
 800e608:	e7f6      	b.n	800e5f8 <StoreRDMDevice::~StoreRDMDevice()>
	...

0800e60c <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800e60c:	2300      	movs	r3, #0
 800e60e:	b507      	push	{r0, r1, r2, lr}
 800e610:	4805      	ldr	r0, [pc, #20]	; (800e628 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800e612:	9300      	str	r3, [sp, #0]
 800e614:	460a      	mov	r2, r1
 800e616:	2329      	movs	r3, #41	; 0x29
 800e618:	210b      	movs	r1, #11
 800e61a:	6800      	ldr	r0, [r0, #0]
 800e61c:	f7ff fe28 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e620:	b003      	add	sp, #12
 800e622:	f85d fb04 	ldr.w	pc, [sp], #4
 800e626:	bf00      	nop
 800e628:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e62c <StoreRDMDevice::StoreRDMDevice()>:
 800e62c:	4a03      	ldr	r2, [pc, #12]	; (800e63c <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800e62e:	6002      	str	r2, [r0, #0]
 800e630:	321c      	adds	r2, #28
 800e632:	6042      	str	r2, [r0, #4]
 800e634:	4a02      	ldr	r2, [pc, #8]	; (800e640 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800e636:	6010      	str	r0, [r2, #0]
 800e638:	4770      	bx	lr
 800e63a:	bf00      	nop
 800e63c:	08017680 	stmdaeq	r1, {r7, r9, sl, ip, sp, lr}
 800e640:	2000a5d0 	ldrdcs	sl, [r0], -r0

0800e644 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e644:	4770      	bx	lr
	...

0800e648 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800e648:	2300      	movs	r3, #0
 800e64a:	b507      	push	{r0, r1, r2, lr}
 800e64c:	4805      	ldr	r0, [pc, #20]	; (800e664 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800e64e:	9300      	str	r3, [sp, #0]
 800e650:	460a      	mov	r2, r1
 800e652:	2320      	movs	r3, #32
 800e654:	210c      	movs	r1, #12
 800e656:	6800      	ldr	r0, [r0, #0]
 800e658:	f7ff fe0a 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e65c:	b003      	add	sp, #12
 800e65e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e662:	bf00      	nop
 800e664:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e668 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800e668:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e66a:	2200      	movs	r2, #0
 800e66c:	460b      	mov	r3, r1
 800e66e:	2120      	movs	r1, #32
 800e670:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e674:	4804      	ldr	r0, [pc, #16]	; (800e688 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800e676:	9100      	str	r1, [sp, #0]
 800e678:	6800      	ldr	r0, [r0, #0]
 800e67a:	210c      	movs	r1, #12
 800e67c:	f7ff fdb8 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e680:	b005      	add	sp, #20
 800e682:	f85d fb04 	ldr.w	pc, [sp], #4
 800e686:	bf00      	nop
 800e688:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e68c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e68c:	b510      	push	{r4, lr}
 800e68e:	4604      	mov	r4, r0
 800e690:	f004 fb88 	bl	8012da4 <operator delete(void*)>
 800e694:	4620      	mov	r0, r4
 800e696:	bd10      	pop	{r4, pc}

0800e698 <StoreRemoteConfig::StoreRemoteConfig()>:
 800e698:	4a02      	ldr	r2, [pc, #8]	; (800e6a4 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800e69a:	6002      	str	r2, [r0, #0]
 800e69c:	4a02      	ldr	r2, [pc, #8]	; (800e6a8 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800e69e:	6010      	str	r0, [r2, #0]
 800e6a0:	4770      	bx	lr
 800e6a2:	bf00      	nop
 800e6a4:	080176b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, ip, sp, lr}
 800e6a8:	2000a5d4 	ldrdcs	sl, [r0], -r4

0800e6ac <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e6ac:	4770      	bx	lr

0800e6ae <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e6ae:	3804      	subs	r0, #4
 800e6b0:	4770      	bx	lr
	...

0800e6b4 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800e6b4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e6b6:	2200      	movs	r2, #0
 800e6b8:	460b      	mov	r3, r1
 800e6ba:	2127      	movs	r1, #39	; 0x27
 800e6bc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e6c0:	4804      	ldr	r0, [pc, #16]	; (800e6d4 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800e6c2:	9100      	str	r1, [sp, #0]
 800e6c4:	6800      	ldr	r0, [r0, #0]
 800e6c6:	2103      	movs	r1, #3
 800e6c8:	f7ff fd92 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e6cc:	b005      	add	sp, #20
 800e6ce:	f85d fb04 	ldr.w	pc, [sp], #4
 800e6d2:	bf00      	nop
 800e6d4:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e6d8 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800e6d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e6da:	2304      	movs	r3, #4
 800e6dc:	2200      	movs	r2, #0
 800e6de:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e6e2:	2302      	movs	r3, #2
 800e6e4:	4806      	ldr	r0, [pc, #24]	; (800e700 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800e6e6:	9300      	str	r3, [sp, #0]
 800e6e8:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e6ec:	2207      	movs	r2, #7
 800e6ee:	2103      	movs	r1, #3
 800e6f0:	6800      	ldr	r0, [r0, #0]
 800e6f2:	f10d 0316 	add.w	r3, sp, #22
 800e6f6:	f7ff fd7b 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e6fa:	b007      	add	sp, #28
 800e6fc:	f85d fb04 	ldr.w	pc, [sp], #4
 800e700:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e704 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800e704:	f1a0 0004 	sub.w	r0, r0, #4
 800e708:	e7e6      	b.n	800e6d8 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800e70a:	bf00      	nop

0800e70c <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800e70c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e70e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800e712:	2200      	movs	r2, #0
 800e714:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e718:	2301      	movs	r3, #1
 800e71a:	4807      	ldr	r0, [pc, #28]	; (800e738 <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800e71c:	9300      	str	r3, [sp, #0]
 800e71e:	f88d 1017 	strb.w	r1, [sp, #23]
 800e722:	2226      	movs	r2, #38	; 0x26
 800e724:	2103      	movs	r1, #3
 800e726:	6800      	ldr	r0, [r0, #0]
 800e728:	f10d 0317 	add.w	r3, sp, #23
 800e72c:	f7ff fd60 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e730:	b007      	add	sp, #28
 800e732:	f85d fb04 	ldr.w	pc, [sp], #4
 800e736:	bf00      	nop
 800e738:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e73c <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800e73c:	f1a0 0004 	sub.w	r0, r0, #4
 800e740:	e7e4      	b.n	800e70c <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800e742:	bf00      	nop

0800e744 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800e744:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e746:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e74a:	2200      	movs	r2, #0
 800e74c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e750:	2301      	movs	r3, #1
 800e752:	4807      	ldr	r0, [pc, #28]	; (800e770 <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800e754:	9300      	str	r3, [sp, #0]
 800e756:	f88d 1017 	strb.w	r1, [sp, #23]
 800e75a:	2213      	movs	r2, #19
 800e75c:	2103      	movs	r1, #3
 800e75e:	6800      	ldr	r0, [r0, #0]
 800e760:	f10d 0317 	add.w	r3, sp, #23
 800e764:	f7ff fd44 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e768:	b007      	add	sp, #28
 800e76a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e76e:	bf00      	nop
 800e770:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e774 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800e774:	f1a0 0004 	sub.w	r0, r0, #4
 800e778:	e7e4      	b.n	800e744 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800e77a:	bf00      	nop

0800e77c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800e77c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e77e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e782:	2200      	movs	r2, #0
 800e784:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e788:	2302      	movs	r3, #2
 800e78a:	4807      	ldr	r0, [pc, #28]	; (800e7a8 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800e78c:	9300      	str	r3, [sp, #0]
 800e78e:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e792:	2211      	movs	r2, #17
 800e794:	2103      	movs	r1, #3
 800e796:	6800      	ldr	r0, [r0, #0]
 800e798:	f10d 0316 	add.w	r3, sp, #22
 800e79c:	f7ff fd28 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e7a0:	b007      	add	sp, #28
 800e7a2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7a6:	bf00      	nop
 800e7a8:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e7ac <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800e7ac:	f1a0 0004 	sub.w	r0, r0, #4
 800e7b0:	e7e4      	b.n	800e77c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800e7b2:	bf00      	nop

0800e7b4 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800e7b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7b6:	2302      	movs	r3, #2
 800e7b8:	2200      	movs	r2, #0
 800e7ba:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e7be:	4807      	ldr	r0, [pc, #28]	; (800e7dc <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800e7c0:	9300      	str	r3, [sp, #0]
 800e7c2:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e7c6:	2205      	movs	r2, #5
 800e7c8:	2103      	movs	r1, #3
 800e7ca:	6800      	ldr	r0, [r0, #0]
 800e7cc:	f10d 0316 	add.w	r3, sp, #22
 800e7d0:	f7ff fd0e 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e7d4:	b007      	add	sp, #28
 800e7d6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7da:	bf00      	nop
 800e7dc:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e7e0 <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800e7e0:	f1a0 0004 	sub.w	r0, r0, #4
 800e7e4:	e7e6      	b.n	800e7b4 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800e7e6:	bf00      	nop

0800e7e8 <StoreWS28xxDmx::SaveType(unsigned char)>:
 800e7e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e7ea:	2301      	movs	r3, #1
 800e7ec:	2200      	movs	r2, #0
 800e7ee:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800e7f2:	4807      	ldr	r0, [pc, #28]	; (800e810 <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800e7f4:	9300      	str	r3, [sp, #0]
 800e7f6:	f88d 1017 	strb.w	r1, [sp, #23]
 800e7fa:	2204      	movs	r2, #4
 800e7fc:	2103      	movs	r1, #3
 800e7fe:	6800      	ldr	r0, [r0, #0]
 800e800:	f10d 0317 	add.w	r3, sp, #23
 800e804:	f7ff fcf4 	bl	800e1f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e808:	b007      	add	sp, #28
 800e80a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e80e:	bf00      	nop
 800e810:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e814 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800e814:	f1a0 0004 	sub.w	r0, r0, #4
 800e818:	e7e6      	b.n	800e7e8 <StoreWS28xxDmx::SaveType(unsigned char)>
 800e81a:	bf00      	nop

0800e81c <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e81c:	b510      	push	{r4, lr}
 800e81e:	4604      	mov	r4, r0
 800e820:	f004 fac0 	bl	8012da4 <operator delete(void*)>
 800e824:	4620      	mov	r0, r4
 800e826:	bd10      	pop	{r4, pc}

0800e828 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800e828:	f1a0 0004 	sub.w	r0, r0, #4
 800e82c:	e7f6      	b.n	800e81c <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800e830 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800e830:	2300      	movs	r3, #0
 800e832:	b507      	push	{r0, r1, r2, lr}
 800e834:	4805      	ldr	r0, [pc, #20]	; (800e84c <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800e836:	9300      	str	r3, [sp, #0]
 800e838:	460a      	mov	r2, r1
 800e83a:	2327      	movs	r3, #39	; 0x27
 800e83c:	2103      	movs	r1, #3
 800e83e:	6800      	ldr	r0, [r0, #0]
 800e840:	f7ff fd16 	bl	800e270 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800e844:	b003      	add	sp, #12
 800e846:	f85d fb04 	ldr.w	pc, [sp], #4
 800e84a:	bf00      	nop
 800e84c:	2000a5bc 			; <UNDEFINED> instruction: 0x2000a5bc

0800e850 <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800e850:	4a03      	ldr	r2, [pc, #12]	; (800e860 <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800e852:	6002      	str	r2, [r0, #0]
 800e854:	3230      	adds	r2, #48	; 0x30
 800e856:	6042      	str	r2, [r0, #4]
 800e858:	4a02      	ldr	r2, [pc, #8]	; (800e864 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800e85a:	6010      	str	r0, [r2, #0]
 800e85c:	4770      	bx	lr
 800e85e:	bf00      	nop
 800e860:	080176c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, ip, sp, lr}
 800e864:	2000a5d8 	ldrdcs	sl, [r0], -r8

0800e868 <FlashRom::FlashRom()>:
 800e868:	4b08      	ldr	r3, [pc, #32]	; (800e88c <FlashRom::FlashRom()+0x24>)
 800e86a:	b510      	push	{r4, lr}
 800e86c:	6018      	str	r0, [r3, #0]
 800e86e:	2301      	movs	r3, #1
 800e870:	4604      	mov	r4, r0
 800e872:	7003      	strb	r3, [r0, #0]
 800e874:	4b06      	ldr	r3, [pc, #24]	; (800e890 <FlashRom::FlashRom()+0x28>)
 800e876:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e87a:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e87e:	4905      	ldr	r1, [pc, #20]	; (800e894 <FlashRom::FlashRom()+0x2c>)
 800e880:	029b      	lsls	r3, r3, #10
 800e882:	4805      	ldr	r0, [pc, #20]	; (800e898 <FlashRom::FlashRom()+0x30>)
 800e884:	f004 feec 	bl	8013660 <printf>
 800e888:	4620      	mov	r0, r4
 800e88a:	bd10      	pop	{r4, pc}
 800e88c:	2000a5dc 	ldrdcs	sl, [r0], -ip
 800e890:	1ffff700 	svcne	0x00fff700
 800e894:	08017718 	stmdaeq	r1, {r3, r4, r8, r9, sl, ip, sp, lr}
 800e898:	0801771d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, ip, sp, lr}

0800e89c <FlashRom::GetSize()>:
 800e89c:	4b02      	ldr	r3, [pc, #8]	; (800e8a8 <FlashRom::GetSize()+0xc>)
 800e89e:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800e8a2:	0280      	lsls	r0, r0, #10
 800e8a4:	4770      	bx	lr
 800e8a6:	bf00      	nop
 800e8a8:	1ffff700 	svcne	0x00fff700

0800e8ac <FlashRom::GetSectorSize()>:
 800e8ac:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800e8b0:	4770      	bx	lr

0800e8b2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800e8b2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e8b6:	441a      	add	r2, r3
 800e8b8:	4293      	cmp	r3, r2
 800e8ba:	d004      	beq.n	800e8c6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800e8bc:	f851 0b04 	ldr.w	r0, [r1], #4
 800e8c0:	f843 0b04 	str.w	r0, [r3], #4
 800e8c4:	e7f8      	b.n	800e8b8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800e8c6:	2200      	movs	r2, #0
 800e8c8:	9b00      	ldr	r3, [sp, #0]
 800e8ca:	2001      	movs	r0, #1
 800e8cc:	601a      	str	r2, [r3, #0]
 800e8ce:	4770      	bx	lr

0800e8d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800e8d0:	2000      	movs	r0, #0
 800e8d2:	b538      	push	{r3, r4, r5, lr}
 800e8d4:	4c47      	ldr	r4, [pc, #284]	; (800e9f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800e8d6:	6018      	str	r0, [r3, #0]
 800e8d8:	6823      	ldr	r3, [r4, #0]
 800e8da:	2b04      	cmp	r3, #4
 800e8dc:	f200 8082 	bhi.w	800e9e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e8e0:	e8df f003 	tbb	[pc, r3]
 800e8e4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800e8e8:	4b430080 	blmi	90ceaf0 <_sidata+0x10b67b8>
 800e8ec:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800e8f0:	6019      	str	r1, [r3, #0]
 800e8f2:	4b42      	ldr	r3, [pc, #264]	; (800e9fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e8f4:	601a      	str	r2, [r3, #0]
 800e8f6:	4b42      	ldr	r3, [pc, #264]	; (800ea00 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800e8f8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800e8fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e900:	4b40      	ldr	r3, [pc, #256]	; (800ea04 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e902:	d807      	bhi.n	800e914 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800e904:	2201      	movs	r2, #1
 800e906:	701a      	strb	r2, [r3, #0]
 800e908:	f005 fc64 	bl	80141d4 <fmc_bank0_unlock>
 800e90c:	2301      	movs	r3, #1
 800e90e:	6023      	str	r3, [r4, #0]
 800e910:	2000      	movs	r0, #0
 800e912:	e026      	b.n	800e962 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e914:	4a3c      	ldr	r2, [pc, #240]	; (800ea08 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800e916:	4291      	cmp	r1, r2
 800e918:	d3f4      	bcc.n	800e904 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800e91a:	2200      	movs	r2, #0
 800e91c:	701a      	strb	r2, [r3, #0]
 800e91e:	f005 fc67 	bl	80141f0 <fmc_bank1_unlock>
 800e922:	e7f3      	b.n	800e90c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e924:	4d37      	ldr	r5, [pc, #220]	; (800ea04 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e926:	782b      	ldrb	r3, [r5, #0]
 800e928:	b15b      	cbz	r3, 800e942 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800e92a:	f005 fc7f 	bl	801422c <fmc_bank0_state_get>
 800e92e:	2801      	cmp	r0, #1
 800e930:	d0ee      	beq.n	800e910 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800e932:	7829      	ldrb	r1, [r5, #0]
 800e934:	4b35      	ldr	r3, [pc, #212]	; (800ea0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e936:	b939      	cbnz	r1, 800e948 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800e938:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e93a:	f022 0202 	bic.w	r2, r2, #2
 800e93e:	651a      	str	r2, [r3, #80]	; 0x50
 800e940:	e006      	b.n	800e950 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800e942:	f005 fc87 	bl	8014254 <fmc_bank1_state_get>
 800e946:	e7f2      	b.n	800e92e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800e948:	691a      	ldr	r2, [r3, #16]
 800e94a:	f022 0202 	bic.w	r2, r2, #2
 800e94e:	611a      	str	r2, [r3, #16]
 800e950:	4b2a      	ldr	r3, [pc, #168]	; (800e9fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e952:	681b      	ldr	r3, [r3, #0]
 800e954:	b94b      	cbnz	r3, 800e96a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800e956:	b129      	cbz	r1, 800e964 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800e958:	f005 fc58 	bl	801420c <fmc_bank0_lock>
 800e95c:	2300      	movs	r3, #0
 800e95e:	2001      	movs	r0, #1
 800e960:	6023      	str	r3, [r4, #0]
 800e962:	bd38      	pop	{r3, r4, r5, pc}
 800e964:	f005 fc5a 	bl	801421c <fmc_bank1_lock>
 800e968:	e7f8      	b.n	800e95c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800e96a:	2302      	movs	r3, #2
 800e96c:	e7cf      	b.n	800e90e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800e96e:	4923      	ldr	r1, [pc, #140]	; (800e9fc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800e970:	680b      	ldr	r3, [r1, #0]
 800e972:	2b00      	cmp	r3, #0
 800e974:	d0ca      	beq.n	800e90c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e976:	4b23      	ldr	r3, [pc, #140]	; (800ea04 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e978:	4a1f      	ldr	r2, [pc, #124]	; (800e9f8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800e97a:	7818      	ldrb	r0, [r3, #0]
 800e97c:	4b23      	ldr	r3, [pc, #140]	; (800ea0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e97e:	b190      	cbz	r0, 800e9a6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800e980:	6918      	ldr	r0, [r3, #16]
 800e982:	f040 0002 	orr.w	r0, r0, #2
 800e986:	6118      	str	r0, [r3, #16]
 800e988:	6810      	ldr	r0, [r2, #0]
 800e98a:	6158      	str	r0, [r3, #20]
 800e98c:	6918      	ldr	r0, [r3, #16]
 800e98e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800e992:	6118      	str	r0, [r3, #16]
 800e994:	680b      	ldr	r3, [r1, #0]
 800e996:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800e99a:	600b      	str	r3, [r1, #0]
 800e99c:	6813      	ldr	r3, [r2, #0]
 800e99e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800e9a2:	6013      	str	r3, [r2, #0]
 800e9a4:	e7b2      	b.n	800e90c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800e9a6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800e9a8:	f040 0002 	orr.w	r0, r0, #2
 800e9ac:	6518      	str	r0, [r3, #80]	; 0x50
 800e9ae:	6810      	ldr	r0, [r2, #0]
 800e9b0:	6558      	str	r0, [r3, #84]	; 0x54
 800e9b2:	69dd      	ldr	r5, [r3, #28]
 800e9b4:	07ad      	lsls	r5, r5, #30
 800e9b6:	bf48      	it	mi
 800e9b8:	6158      	strmi	r0, [r3, #20]
 800e9ba:	4814      	ldr	r0, [pc, #80]	; (800ea0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e9bc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800e9be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e9c2:	6503      	str	r3, [r0, #80]	; 0x50
 800e9c4:	680b      	ldr	r3, [r1, #0]
 800e9c6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800e9ca:	600b      	str	r3, [r1, #0]
 800e9cc:	6813      	ldr	r3, [r2, #0]
 800e9ce:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800e9d2:	e7e6      	b.n	800e9a2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800e9d4:	4b0b      	ldr	r3, [pc, #44]	; (800ea04 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800e9d6:	781a      	ldrb	r2, [r3, #0]
 800e9d8:	4b0c      	ldr	r3, [pc, #48]	; (800ea0c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800e9da:	b132      	cbz	r2, 800e9ea <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800e9dc:	691a      	ldr	r2, [r3, #16]
 800e9de:	f022 0201 	bic.w	r2, r2, #1
 800e9e2:	611a      	str	r2, [r3, #16]
 800e9e4:	2000      	movs	r0, #0
 800e9e6:	6020      	str	r0, [r4, #0]
 800e9e8:	e7bb      	b.n	800e962 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800e9ea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800e9ec:	f022 0201 	bic.w	r2, r2, #1
 800e9f0:	651a      	str	r2, [r3, #80]	; 0x50
 800e9f2:	e7f7      	b.n	800e9e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800e9f4:	2000a5e4 	andcs	sl, r0, r4, ror #11
 800e9f8:	2000a5e8 	andcs	sl, r0, r8, ror #11
 800e9fc:	2000a5f4 	strdcs	sl, [r0], -r4
 800ea00:	1ffff700 	svcne	0x00fff700
 800ea04:	2000a5f0 	strdcs	sl, [r0], -r0
 800ea08:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ea0c:	40022000 	andmi	r2, r2, r0

0800ea10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800ea10:	b570      	push	{r4, r5, r6, lr}
 800ea12:	2400      	movs	r4, #0
 800ea14:	9804      	ldr	r0, [sp, #16]
 800ea16:	6004      	str	r4, [r0, #0]
 800ea18:	4c48      	ldr	r4, [pc, #288]	; (800eb3c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800ea1a:	6820      	ldr	r0, [r4, #0]
 800ea1c:	2804      	cmp	r0, #4
 800ea1e:	d848      	bhi.n	800eab2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800ea20:	e8df f000 	tbb	[pc, r0]
 800ea24:	22847c03 	addcs	r7, r4, #768	; 0x300
 800ea28:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800ea2c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ea30:	6001      	str	r1, [r0, #0]
 800ea32:	4844      	ldr	r0, [pc, #272]	; (800eb44 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ea34:	6003      	str	r3, [r0, #0]
 800ea36:	4b44      	ldr	r3, [pc, #272]	; (800eb48 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ea38:	601a      	str	r2, [r3, #0]
 800ea3a:	4b44      	ldr	r3, [pc, #272]	; (800eb4c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800ea3c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ea40:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ea44:	4b42      	ldr	r3, [pc, #264]	; (800eb50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ea46:	d807      	bhi.n	800ea58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800ea48:	2201      	movs	r2, #1
 800ea4a:	701a      	strb	r2, [r3, #0]
 800ea4c:	f005 fbc2 	bl	80141d4 <fmc_bank0_unlock>
 800ea50:	2303      	movs	r3, #3
 800ea52:	6023      	str	r3, [r4, #0]
 800ea54:	2000      	movs	r0, #0
 800ea56:	e026      	b.n	800eaa6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ea58:	4a3e      	ldr	r2, [pc, #248]	; (800eb54 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800ea5a:	4291      	cmp	r1, r2
 800ea5c:	d3f4      	bcc.n	800ea48 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800ea5e:	2200      	movs	r2, #0
 800ea60:	701a      	strb	r2, [r3, #0]
 800ea62:	f005 fbc5 	bl	80141f0 <fmc_bank1_unlock>
 800ea66:	e7f3      	b.n	800ea50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ea68:	4d39      	ldr	r5, [pc, #228]	; (800eb50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ea6a:	782b      	ldrb	r3, [r5, #0]
 800ea6c:	b15b      	cbz	r3, 800ea86 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800ea6e:	f005 fbdd 	bl	801422c <fmc_bank0_state_get>
 800ea72:	2801      	cmp	r0, #1
 800ea74:	d0ee      	beq.n	800ea54 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800ea76:	7829      	ldrb	r1, [r5, #0]
 800ea78:	4b37      	ldr	r3, [pc, #220]	; (800eb58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ea7a:	b939      	cbnz	r1, 800ea8c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800ea7c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ea7e:	f022 0201 	bic.w	r2, r2, #1
 800ea82:	651a      	str	r2, [r3, #80]	; 0x50
 800ea84:	e006      	b.n	800ea94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800ea86:	f005 fbe5 	bl	8014254 <fmc_bank1_state_get>
 800ea8a:	e7f2      	b.n	800ea72 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800ea8c:	691a      	ldr	r2, [r3, #16]
 800ea8e:	f022 0201 	bic.w	r2, r2, #1
 800ea92:	611a      	str	r2, [r3, #16]
 800ea94:	4b2c      	ldr	r3, [pc, #176]	; (800eb48 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ea96:	681b      	ldr	r3, [r3, #0]
 800ea98:	b94b      	cbnz	r3, 800eaae <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800ea9a:	b129      	cbz	r1, 800eaa8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800ea9c:	f005 fbb6 	bl	801420c <fmc_bank0_lock>
 800eaa0:	2300      	movs	r3, #0
 800eaa2:	2001      	movs	r0, #1
 800eaa4:	6023      	str	r3, [r4, #0]
 800eaa6:	bd70      	pop	{r4, r5, r6, pc}
 800eaa8:	f005 fbb8 	bl	801421c <fmc_bank1_lock>
 800eaac:	e7f8      	b.n	800eaa0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800eaae:	2304      	movs	r3, #4
 800eab0:	e7cf      	b.n	800ea52 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800eab2:	4a25      	ldr	r2, [pc, #148]	; (800eb48 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800eab4:	6813      	ldr	r3, [r2, #0]
 800eab6:	2b03      	cmp	r3, #3
 800eab8:	d91a      	bls.n	800eaf0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800eaba:	4b25      	ldr	r3, [pc, #148]	; (800eb50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eabc:	7819      	ldrb	r1, [r3, #0]
 800eabe:	4b26      	ldr	r3, [pc, #152]	; (800eb58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eac0:	b189      	cbz	r1, 800eae6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800eac2:	6919      	ldr	r1, [r3, #16]
 800eac4:	f041 0101 	orr.w	r1, r1, #1
 800eac8:	6119      	str	r1, [r3, #16]
 800eaca:	4d1e      	ldr	r5, [pc, #120]	; (800eb44 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eacc:	481c      	ldr	r0, [pc, #112]	; (800eb40 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800eace:	6829      	ldr	r1, [r5, #0]
 800ead0:	6803      	ldr	r3, [r0, #0]
 800ead2:	f851 6b04 	ldr.w	r6, [r1], #4
 800ead6:	f843 6b04 	str.w	r6, [r3], #4
 800eada:	6003      	str	r3, [r0, #0]
 800eadc:	6813      	ldr	r3, [r2, #0]
 800eade:	6029      	str	r1, [r5, #0]
 800eae0:	3b04      	subs	r3, #4
 800eae2:	6013      	str	r3, [r2, #0]
 800eae4:	e7b4      	b.n	800ea50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eae6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800eae8:	f041 0101 	orr.w	r1, r1, #1
 800eaec:	6519      	str	r1, [r3, #80]	; 0x50
 800eaee:	e7ec      	b.n	800eaca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800eaf0:	2b00      	cmp	r3, #0
 800eaf2:	d0ad      	beq.n	800ea50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eaf4:	4b16      	ldr	r3, [pc, #88]	; (800eb50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eaf6:	781a      	ldrb	r2, [r3, #0]
 800eaf8:	4b17      	ldr	r3, [pc, #92]	; (800eb58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eafa:	b152      	cbz	r2, 800eb12 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800eafc:	691a      	ldr	r2, [r3, #16]
 800eafe:	f042 0201 	orr.w	r2, r2, #1
 800eb02:	611a      	str	r2, [r3, #16]
 800eb04:	4a0f      	ldr	r2, [pc, #60]	; (800eb44 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eb06:	4b0e      	ldr	r3, [pc, #56]	; (800eb40 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800eb08:	6812      	ldr	r2, [r2, #0]
 800eb0a:	681b      	ldr	r3, [r3, #0]
 800eb0c:	6812      	ldr	r2, [r2, #0]
 800eb0e:	601a      	str	r2, [r3, #0]
 800eb10:	e79e      	b.n	800ea50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eb12:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eb14:	f042 0201 	orr.w	r2, r2, #1
 800eb18:	651a      	str	r2, [r3, #80]	; 0x50
 800eb1a:	e7f3      	b.n	800eb04 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800eb1c:	4b0c      	ldr	r3, [pc, #48]	; (800eb50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eb1e:	781a      	ldrb	r2, [r3, #0]
 800eb20:	4b0d      	ldr	r3, [pc, #52]	; (800eb58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eb22:	b132      	cbz	r2, 800eb32 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800eb24:	691a      	ldr	r2, [r3, #16]
 800eb26:	f022 0202 	bic.w	r2, r2, #2
 800eb2a:	611a      	str	r2, [r3, #16]
 800eb2c:	2000      	movs	r0, #0
 800eb2e:	6020      	str	r0, [r4, #0]
 800eb30:	e7b9      	b.n	800eaa6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800eb32:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eb34:	f022 0202 	bic.w	r2, r2, #2
 800eb38:	651a      	str	r2, [r3, #80]	; 0x50
 800eb3a:	e7f7      	b.n	800eb2c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800eb3c:	2000a5e4 	andcs	sl, r0, r4, ror #11
 800eb40:	2000a5e0 	andcs	sl, r0, r0, ror #11
 800eb44:	2000a5ec 	andcs	sl, r0, ip, ror #11
 800eb48:	2000a5f4 	strdcs	sl, [r0], -r4
 800eb4c:	1ffff700 	svcne	0x00fff700
 800eb50:	2000a5f0 	strdcs	sl, [r0], -r0
 800eb54:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800eb58:	40022000 	andmi	r2, r2, r0

0800eb5c <net_init>:
 800eb5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb60:	460c      	mov	r4, r1
 800eb62:	4616      	mov	r6, r2
 800eb64:	9f06      	ldr	r7, [sp, #24]
 800eb66:	4a22      	ldr	r2, [pc, #136]	; (800ebf0 <net_init+0x94>)
 800eb68:	461d      	mov	r5, r3
 800eb6a:	1e43      	subs	r3, r0, #1
 800eb6c:	3005      	adds	r0, #5
 800eb6e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800eb72:	4283      	cmp	r3, r0
 800eb74:	f802 1b01 	strb.w	r1, [r2], #1
 800eb78:	d1f9      	bne.n	800eb6e <net_init+0x12>
 800eb7a:	4623      	mov	r3, r4
 800eb7c:	4a1d      	ldr	r2, [pc, #116]	; (800ebf4 <net_init+0x98>)
 800eb7e:	f104 010c 	add.w	r1, r4, #12
 800eb82:	f813 0b01 	ldrb.w	r0, [r3], #1
 800eb86:	428b      	cmp	r3, r1
 800eb88:	f802 0b01 	strb.w	r0, [r2], #1
 800eb8c:	d1f9      	bne.n	800eb82 <net_init+0x26>
 800eb8e:	f04f 0800 	mov.w	r8, #0
 800eb92:	4918      	ldr	r1, [pc, #96]	; (800ebf4 <net_init+0x98>)
 800eb94:	4816      	ldr	r0, [pc, #88]	; (800ebf0 <net_init+0x94>)
 800eb96:	f002 fd50 	bl	801163a <ip_init>
 800eb9a:	4815      	ldr	r0, [pc, #84]	; (800ebf0 <net_init+0x94>)
 800eb9c:	f000 f8d0 	bl	800ed40 <rfc3927_init>
 800eba0:	f887 8000 	strb.w	r8, [r7]
 800eba4:	782b      	ldrb	r3, [r5, #0]
 800eba6:	b163      	cbz	r3, 800ebc2 <net_init+0x66>
 800eba8:	4632      	mov	r2, r6
 800ebaa:	4912      	ldr	r1, [pc, #72]	; (800ebf4 <net_init+0x98>)
 800ebac:	4810      	ldr	r0, [pc, #64]	; (800ebf0 <net_init+0x94>)
 800ebae:	f002 fa55 	bl	801105c <dhcp_client>
 800ebb2:	4540      	cmp	r0, r8
 800ebb4:	da05      	bge.n	800ebc2 <net_init+0x66>
 800ebb6:	480f      	ldr	r0, [pc, #60]	; (800ebf4 <net_init+0x98>)
 800ebb8:	f885 8000 	strb.w	r8, [r5]
 800ebbc:	f000 f8cc 	bl	800ed58 <rfc3927>
 800ebc0:	7038      	strb	r0, [r7, #0]
 800ebc2:	490c      	ldr	r1, [pc, #48]	; (800ebf4 <net_init+0x98>)
 800ebc4:	480a      	ldr	r0, [pc, #40]	; (800ebf0 <net_init+0x94>)
 800ebc6:	f002 f859 	bl	8010c7c <arp_init>
 800ebca:	480a      	ldr	r0, [pc, #40]	; (800ebf4 <net_init+0x98>)
 800ebcc:	f002 fd2c 	bl	8011628 <ip_set_ip>
 800ebd0:	f000 fa2a 	bl	800f028 <tcp_init>
 800ebd4:	4a07      	ldr	r2, [pc, #28]	; (800ebf4 <net_init+0x98>)
 800ebd6:	1e63      	subs	r3, r4, #1
 800ebd8:	340b      	adds	r4, #11
 800ebda:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ebde:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ebe2:	429c      	cmp	r4, r3
 800ebe4:	d1f9      	bne.n	800ebda <net_init+0x7e>
 800ebe6:	782a      	ldrb	r2, [r5, #0]
 800ebe8:	4b03      	ldr	r3, [pc, #12]	; (800ebf8 <net_init+0x9c>)
 800ebea:	701a      	strb	r2, [r3, #0]
 800ebec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ebf0:	2000a604 	andcs	sl, r0, r4, lsl #12
 800ebf4:	2000a5f8 	strdcs	sl, [r0], -r8
 800ebf8:	2000a60a 	andcs	sl, r0, sl, lsl #12

0800ebfc <net_shutdown>:
 800ebfc:	b508      	push	{r3, lr}
 800ebfe:	f002 fd27 	bl	8011650 <ip_shutdown>
 800ec02:	4b04      	ldr	r3, [pc, #16]	; (800ec14 <net_shutdown+0x18>)
 800ec04:	781b      	ldrb	r3, [r3, #0]
 800ec06:	b11b      	cbz	r3, 800ec10 <net_shutdown+0x14>
 800ec08:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ec0c:	f002 bb2e 	b.w	801126c <dhcp_client_release>
 800ec10:	bd08      	pop	{r3, pc}
 800ec12:	bf00      	nop
 800ec14:	2000a60a 	andcs	sl, r0, sl, lsl #12

0800ec18 <net_set_ip>:
 800ec18:	b510      	push	{r4, lr}
 800ec1a:	4c05      	ldr	r4, [pc, #20]	; (800ec30 <net_set_ip+0x18>)
 800ec1c:	6020      	str	r0, [r4, #0]
 800ec1e:	4621      	mov	r1, r4
 800ec20:	4804      	ldr	r0, [pc, #16]	; (800ec34 <net_set_ip+0x1c>)
 800ec22:	f002 f82b 	bl	8010c7c <arp_init>
 800ec26:	4620      	mov	r0, r4
 800ec28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec2c:	f002 bcfc 	b.w	8011628 <ip_set_ip>
 800ec30:	2000a5f8 	strdcs	sl, [r0], -r8
 800ec34:	2000a604 	andcs	sl, r0, r4, lsl #12

0800ec38 <net_set_dhcp>:
 800ec38:	b570      	push	{r4, r5, r6, lr}
 800ec3a:	2400      	movs	r4, #0
 800ec3c:	4605      	mov	r5, r0
 800ec3e:	7014      	strb	r4, [r2, #0]
 800ec40:	4616      	mov	r6, r2
 800ec42:	4810      	ldr	r0, [pc, #64]	; (800ec84 <net_set_dhcp+0x4c>)
 800ec44:	460a      	mov	r2, r1
 800ec46:	4910      	ldr	r1, [pc, #64]	; (800ec88 <net_set_dhcp+0x50>)
 800ec48:	f002 fa08 	bl	801105c <dhcp_client>
 800ec4c:	42a0      	cmp	r0, r4
 800ec4e:	da17      	bge.n	800ec80 <net_set_dhcp+0x48>
 800ec50:	480d      	ldr	r0, [pc, #52]	; (800ec88 <net_set_dhcp+0x50>)
 800ec52:	f000 f881 	bl	800ed58 <rfc3927>
 800ec56:	7030      	strb	r0, [r6, #0]
 800ec58:	490b      	ldr	r1, [pc, #44]	; (800ec88 <net_set_dhcp+0x50>)
 800ec5a:	480a      	ldr	r0, [pc, #40]	; (800ec84 <net_set_dhcp+0x4c>)
 800ec5c:	f002 f80e 	bl	8010c7c <arp_init>
 800ec60:	4809      	ldr	r0, [pc, #36]	; (800ec88 <net_set_dhcp+0x50>)
 800ec62:	f002 fce1 	bl	8011628 <ip_set_ip>
 800ec66:	4a08      	ldr	r2, [pc, #32]	; (800ec88 <net_set_dhcp+0x50>)
 800ec68:	1e6b      	subs	r3, r5, #1
 800ec6a:	350b      	adds	r5, #11
 800ec6c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ec70:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ec74:	42ab      	cmp	r3, r5
 800ec76:	d1f9      	bne.n	800ec6c <net_set_dhcp+0x34>
 800ec78:	4b04      	ldr	r3, [pc, #16]	; (800ec8c <net_set_dhcp+0x54>)
 800ec7a:	4620      	mov	r0, r4
 800ec7c:	701c      	strb	r4, [r3, #0]
 800ec7e:	bd70      	pop	{r4, r5, r6, pc}
 800ec80:	2401      	movs	r4, #1
 800ec82:	e7e9      	b.n	800ec58 <net_set_dhcp+0x20>
 800ec84:	2000a604 	andcs	sl, r0, r4, lsl #12
 800ec88:	2000a5f8 	strdcs	sl, [r0], -r8
 800ec8c:	2000a60a 	andcs	sl, r0, sl, lsl #12

0800ec90 <net_dhcp_release>:
 800ec90:	b508      	push	{r3, lr}
 800ec92:	f002 faeb 	bl	801126c <dhcp_client_release>
 800ec96:	2200      	movs	r2, #0
 800ec98:	4b01      	ldr	r3, [pc, #4]	; (800eca0 <net_dhcp_release+0x10>)
 800ec9a:	701a      	strb	r2, [r3, #0]
 800ec9c:	bd08      	pop	{r3, pc}
 800ec9e:	bf00      	nop
 800eca0:	2000a60a 	andcs	sl, r0, sl, lsl #12

0800eca4 <net_set_zeroconf>:
 800eca4:	b538      	push	{r3, r4, r5, lr}
 800eca6:	4604      	mov	r4, r0
 800eca8:	480c      	ldr	r0, [pc, #48]	; (800ecdc <net_set_zeroconf+0x38>)
 800ecaa:	f000 f855 	bl	800ed58 <rfc3927>
 800ecae:	4605      	mov	r5, r0
 800ecb0:	b190      	cbz	r0, 800ecd8 <net_set_zeroconf+0x34>
 800ecb2:	490a      	ldr	r1, [pc, #40]	; (800ecdc <net_set_zeroconf+0x38>)
 800ecb4:	480a      	ldr	r0, [pc, #40]	; (800ece0 <net_set_zeroconf+0x3c>)
 800ecb6:	f001 ffe1 	bl	8010c7c <arp_init>
 800ecba:	4808      	ldr	r0, [pc, #32]	; (800ecdc <net_set_zeroconf+0x38>)
 800ecbc:	f002 fcb4 	bl	8011628 <ip_set_ip>
 800ecc0:	4a06      	ldr	r2, [pc, #24]	; (800ecdc <net_set_zeroconf+0x38>)
 800ecc2:	1e63      	subs	r3, r4, #1
 800ecc4:	340b      	adds	r4, #11
 800ecc6:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ecca:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ecce:	42a3      	cmp	r3, r4
 800ecd0:	d1f9      	bne.n	800ecc6 <net_set_zeroconf+0x22>
 800ecd2:	2200      	movs	r2, #0
 800ecd4:	4b03      	ldr	r3, [pc, #12]	; (800ece4 <net_set_zeroconf+0x40>)
 800ecd6:	701a      	strb	r2, [r3, #0]
 800ecd8:	4628      	mov	r0, r5
 800ecda:	bd38      	pop	{r3, r4, r5, pc}
 800ecdc:	2000a5f8 	strdcs	sl, [r0], -r8
 800ece0:	2000a604 	andcs	sl, r0, r4, lsl #12
 800ece4:	2000a60a 	andcs	sl, r0, sl, lsl #12

0800ece8 <net_handle>:
 800ece8:	b510      	push	{r4, lr}
 800ecea:	4c0c      	ldr	r4, [pc, #48]	; (800ed1c <net_handle+0x34>)
 800ecec:	4620      	mov	r0, r4
 800ecee:	f006 f8bb 	bl	8014e68 <emac_eth_recv>
 800ecf2:	2800      	cmp	r0, #0
 800ecf4:	dd07      	ble.n	800ed06 <net_handle+0x1e>
 800ecf6:	6820      	ldr	r0, [r4, #0]
 800ecf8:	8983      	ldrh	r3, [r0, #12]
 800ecfa:	2b08      	cmp	r3, #8
 800ecfc:	d107      	bne.n	800ed0e <net_handle+0x26>
 800ecfe:	f002 fcae 	bl	801165e <ip_handle>
 800ed02:	f006 f8c5 	bl	8014e90 <emac_free_pkt>
 800ed06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed0a:	f000 b809 	b.w	800ed20 <net_timers_run>
 800ed0e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800ed12:	d1f6      	bne.n	800ed02 <net_handle+0x1a>
 800ed14:	f002 f838 	bl	8010d88 <arp_handle>
 800ed18:	e7f3      	b.n	800ed02 <net_handle+0x1a>
 800ed1a:	bf00      	nop
 800ed1c:	2000a60c 	andcs	sl, r0, ip, lsl #12

0800ed20 <net_timers_run>:
 800ed20:	4b05      	ldr	r3, [pc, #20]	; (800ed38 <net_timers_run+0x18>)
 800ed22:	4a06      	ldr	r2, [pc, #24]	; (800ed3c <net_timers_run+0x1c>)
 800ed24:	681b      	ldr	r3, [r3, #0]
 800ed26:	6811      	ldr	r1, [r2, #0]
 800ed28:	4299      	cmp	r1, r3
 800ed2a:	d803      	bhi.n	800ed34 <net_timers_run+0x14>
 800ed2c:	3364      	adds	r3, #100	; 0x64
 800ed2e:	6013      	str	r3, [r2, #0]
 800ed30:	f002 bbdc 	b.w	80114ec <igmp_timer>
 800ed34:	4770      	bx	lr
 800ed36:	bf00      	nop
 800ed38:	200125a8 	andcs	r2, r1, r8, lsr #11
 800ed3c:	2000a610 	andcs	sl, r0, r0, lsl r6

0800ed40 <rfc3927_init>:
 800ed40:	4b04      	ldr	r3, [pc, #16]	; (800ed54 <rfc3927_init+0x14>)
 800ed42:	1d82      	adds	r2, r0, #6
 800ed44:	4290      	cmp	r0, r2
 800ed46:	d100      	bne.n	800ed4a <rfc3927_init+0xa>
 800ed48:	4770      	bx	lr
 800ed4a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800ed4e:	f803 1b01 	strb.w	r1, [r3], #1
 800ed52:	e7f7      	b.n	800ed44 <rfc3927_init+0x4>
 800ed54:	2000a614 	andcs	sl, r0, r4, lsl r6

0800ed58 <rfc3927>:
 800ed58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed5c:	4605      	mov	r5, r0
 800ed5e:	26ff      	movs	r6, #255	; 0xff
 800ed60:	4b18      	ldr	r3, [pc, #96]	; (800edc4 <rfc3927+0x6c>)
 800ed62:	4f19      	ldr	r7, [pc, #100]	; (800edc8 <rfc3927+0x70>)
 800ed64:	791a      	ldrb	r2, [r3, #4]
 800ed66:	78dc      	ldrb	r4, [r3, #3]
 800ed68:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800edcc <rfc3927+0x74>
 800ed6c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800ed70:	f8d7 9000 	ldr.w	r9, [r7]
 800ed74:	f8df b058 	ldr.w	fp, [pc, #88]	; 800edd0 <rfc3927+0x78>
 800ed78:	f8df a058 	ldr.w	sl, [pc, #88]	; 800edd4 <rfc3927+0x7c>
 800ed7c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800ed80:	4659      	mov	r1, fp
 800ed82:	4620      	mov	r0, r4
 800ed84:	f002 f84e 	bl	8010e24 <arp_cache_lookup>
 800ed88:	b938      	cbnz	r0, 800ed9a <rfc3927+0x42>
 800ed8a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ed8e:	2001      	movs	r0, #1
 800ed90:	602c      	str	r4, [r5, #0]
 800ed92:	60ac      	str	r4, [r5, #8]
 800ed94:	606b      	str	r3, [r5, #4]
 800ed96:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed9a:	ba24      	rev	r4, r4
 800ed9c:	3401      	adds	r4, #1
 800ed9e:	3e01      	subs	r6, #1
 800eda0:	ba24      	rev	r4, r4
 800eda2:	b2b6      	uxth	r6, r6
 800eda4:	4554      	cmp	r4, sl
 800eda6:	bf08      	it	eq
 800eda8:	4644      	moveq	r4, r8
 800edaa:	b12e      	cbz	r6, 800edb8 <rfc3927+0x60>
 800edac:	683b      	ldr	r3, [r7, #0]
 800edae:	eba3 0309 	sub.w	r3, r3, r9
 800edb2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800edb6:	d3e3      	bcc.n	800ed80 <rfc3927+0x28>
 800edb8:	2000      	movs	r0, #0
 800edba:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800edbe:	6028      	str	r0, [r5, #0]
 800edc0:	e7e9      	b.n	800ed96 <rfc3927+0x3e>
 800edc2:	bf00      	nop
 800edc4:	2000a614 	andcs	sl, r0, r4, lsl r6
 800edc8:	200125a8 	andcs	r2, r1, r8, lsr #11
 800edcc:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800edd0:	2000a61c 	andcs	sl, r0, ip, lsl r6
 800edd4:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800edd8 <_init_tcb>:
 800edd8:	b510      	push	{r4, lr}
 800edda:	4603      	mov	r3, r0
 800eddc:	2400      	movs	r4, #0
 800edde:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800ede2:	4293      	cmp	r3, r2
 800ede4:	d10d      	bne.n	800ee02 <_init_tcb+0x2a>
 800ede6:	4b08      	ldr	r3, [pc, #32]	; (800ee08 <_init_tcb+0x30>)
 800ede8:	f640 3268 	movw	r2, #2920	; 0xb68
 800edec:	681b      	ldr	r3, [r3, #0]
 800edee:	8702      	strh	r2, [r0, #56]	; 0x38
 800edf0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800edf4:	6283      	str	r3, [r0, #40]	; 0x28
 800edf6:	6243      	str	r3, [r0, #36]	; 0x24
 800edf8:	2301      	movs	r3, #1
 800edfa:	8001      	strh	r1, [r0, #0]
 800edfc:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800ee00:	bd10      	pop	{r4, pc}
 800ee02:	f803 4b01 	strb.w	r4, [r3], #1
 800ee06:	e7ec      	b.n	800ede2 <_init_tcb+0xa>
 800ee08:	200125a8 	andcs	r2, r1, r8, lsr #11

0800ee0c <memcpy.isra.0>:
 800ee0c:	3801      	subs	r0, #1
 800ee0e:	440a      	add	r2, r1
 800ee10:	4291      	cmp	r1, r2
 800ee12:	d100      	bne.n	800ee16 <memcpy.isra.0+0xa>
 800ee14:	4770      	bx	lr
 800ee16:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ee1a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ee1e:	e7f7      	b.n	800ee10 <memcpy.isra.0+0x4>

0800ee20 <_bswap32>:
 800ee20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ee22:	2204      	movs	r2, #4
 800ee24:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800ee28:	4629      	mov	r1, r5
 800ee2a:	4604      	mov	r4, r0
 800ee2c:	eb0d 0002 	add.w	r0, sp, r2
 800ee30:	f7ff ffec 	bl	800ee0c <memcpy.isra.0>
 800ee34:	2204      	movs	r2, #4
 800ee36:	9b01      	ldr	r3, [sp, #4]
 800ee38:	eb0d 0102 	add.w	r1, sp, r2
 800ee3c:	ba1b      	rev	r3, r3
 800ee3e:	4628      	mov	r0, r5
 800ee40:	9301      	str	r3, [sp, #4]
 800ee42:	f7ff ffe3 	bl	800ee0c <memcpy.isra.0>
 800ee46:	2204      	movs	r2, #4
 800ee48:	3426      	adds	r4, #38	; 0x26
 800ee4a:	eb0d 0002 	add.w	r0, sp, r2
 800ee4e:	4621      	mov	r1, r4
 800ee50:	f7ff ffdc 	bl	800ee0c <memcpy.isra.0>
 800ee54:	2204      	movs	r2, #4
 800ee56:	9b01      	ldr	r3, [sp, #4]
 800ee58:	4620      	mov	r0, r4
 800ee5a:	ba1b      	rev	r3, r3
 800ee5c:	eb0d 0102 	add.w	r1, sp, r2
 800ee60:	9301      	str	r3, [sp, #4]
 800ee62:	f7ff ffd3 	bl	800ee0c <memcpy.isra.0>
 800ee66:	b003      	add	sp, #12
 800ee68:	bd30      	pop	{r4, r5, pc}
	...

0800ee6c <_tcp_send_package>:
 800ee6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ee70:	7a0b      	ldrb	r3, [r1, #8]
 800ee72:	4605      	mov	r5, r0
 800ee74:	f013 0f02 	tst.w	r3, #2
 800ee78:	bf0c      	ite	eq
 800ee7a:	f04f 0905 	moveq.w	r9, #5
 800ee7e:	f04f 0906 	movne.w	r9, #6
 800ee82:	f04f 0800 	mov.w	r8, #0
 800ee86:	4c4b      	ldr	r4, [pc, #300]	; (800efb4 <_tcp_send_package+0x148>)
 800ee88:	460f      	mov	r7, r1
 800ee8a:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800ee8c:	f100 0108 	add.w	r1, r0, #8
 800ee90:	2206      	movs	r2, #6
 800ee92:	4620      	mov	r0, r4
 800ee94:	f7ff ffba 	bl	800ee0c <memcpy.isra.0>
 800ee98:	4a47      	ldr	r2, [pc, #284]	; (800efb8 <_tcp_send_package+0x14c>)
 800ee9a:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800ee9e:	8813      	ldrh	r3, [r2, #0]
 800eea0:	b2b6      	uxth	r6, r6
 800eea2:	1c59      	adds	r1, r3, #1
 800eea4:	8263      	strh	r3, [r4, #18]
 800eea6:	f105 0a04 	add.w	sl, r5, #4
 800eeaa:	f106 0314 	add.w	r3, r6, #20
 800eeae:	ba5b      	rev16	r3, r3
 800eeb0:	8011      	strh	r1, [r2, #0]
 800eeb2:	f104 001e 	add.w	r0, r4, #30
 800eeb6:	2204      	movs	r2, #4
 800eeb8:	4651      	mov	r1, sl
 800eeba:	8223      	strh	r3, [r4, #16]
 800eebc:	f7ff ffa6 	bl	800ee0c <memcpy.isra.0>
 800eec0:	2114      	movs	r1, #20
 800eec2:	f104 000e 	add.w	r0, r4, #14
 800eec6:	f884 8018 	strb.w	r8, [r4, #24]
 800eeca:	f884 8019 	strb.w	r8, [r4, #25]
 800eece:	f002 fbdf 	bl	8011690 <net_chksum>
 800eed2:	882b      	ldrh	r3, [r5, #0]
 800eed4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800eed8:	8463      	strh	r3, [r4, #34]	; 0x22
 800eeda:	886b      	ldrh	r3, [r5, #2]
 800eedc:	8320      	strh	r0, [r4, #24]
 800eede:	84a3      	strh	r3, [r4, #36]	; 0x24
 800eee0:	683b      	ldr	r3, [r7, #0]
 800eee2:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800eee4:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800eee8:	687b      	ldr	r3, [r7, #4]
 800eeea:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800eeee:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800eef2:	7a3b      	ldrb	r3, [r7, #8]
 800eef4:	8622      	strh	r2, [r4, #48]	; 0x30
 800eef6:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800eefa:	079b      	lsls	r3, r3, #30
 800eefc:	bf48      	it	mi
 800eefe:	2302      	movmi	r3, #2
 800ef00:	8baa      	ldrh	r2, [r5, #28]
 800ef02:	bf44      	itt	mi
 800ef04:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800ef08:	2304      	movmi	r3, #4
 800ef0a:	86a2      	strh	r2, [r4, #52]	; 0x34
 800ef0c:	bf41      	itttt	mi
 800ef0e:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800ef12:	4622      	movmi	r2, r4
 800ef14:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800ef18:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800ef1c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800ef1e:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800ef22:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800ef26:	bf58      	it	pl
 800ef28:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800ef2c:	2b00      	cmp	r3, #0
 800ef2e:	d13f      	bne.n	800efb0 <_tcp_send_package+0x144>
 800ef30:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800ef32:	4820      	ldr	r0, [pc, #128]	; (800efb4 <_tcp_send_package+0x148>)
 800ef34:	ba5b      	rev16	r3, r3
 800ef36:	8463      	strh	r3, [r4, #34]	; 0x22
 800ef38:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800ef3a:	ba5b      	rev16	r3, r3
 800ef3c:	84a3      	strh	r3, [r4, #36]	; 0x24
 800ef3e:	f7ff ff6f 	bl	800ee20 <_bswap32>
 800ef42:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ef44:	a801      	add	r0, sp, #4
 800ef46:	ba5b      	rev16	r3, r3
 800ef48:	8623      	strh	r3, [r4, #48]	; 0x30
 800ef4a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800ef4c:	220c      	movs	r2, #12
 800ef4e:	ba5b      	rev16	r3, r3
 800ef50:	491a      	ldr	r1, [pc, #104]	; (800efbc <_tcp_send_package+0x150>)
 800ef52:	86a3      	strh	r3, [r4, #52]	; 0x34
 800ef54:	f7ff ff5a 	bl	800ee0c <memcpy.isra.0>
 800ef58:	2204      	movs	r2, #4
 800ef5a:	4919      	ldr	r1, [pc, #100]	; (800efc0 <_tcp_send_package+0x154>)
 800ef5c:	4817      	ldr	r0, [pc, #92]	; (800efbc <_tcp_send_package+0x150>)
 800ef5e:	f7ff ff55 	bl	800ee0c <memcpy.isra.0>
 800ef62:	2204      	movs	r2, #4
 800ef64:	4651      	mov	r1, sl
 800ef66:	4817      	ldr	r0, [pc, #92]	; (800efc4 <_tcp_send_package+0x158>)
 800ef68:	f7ff ff50 	bl	800ee0c <memcpy.isra.0>
 800ef6c:	2300      	movs	r3, #0
 800ef6e:	77a3      	strb	r3, [r4, #30]
 800ef70:	2306      	movs	r3, #6
 800ef72:	f106 010c 	add.w	r1, r6, #12
 800ef76:	77e3      	strb	r3, [r4, #31]
 800ef78:	4810      	ldr	r0, [pc, #64]	; (800efbc <_tcp_send_package+0x150>)
 800ef7a:	ba73      	rev16	r3, r6
 800ef7c:	8423      	strh	r3, [r4, #32]
 800ef7e:	f002 fb87 	bl	8011690 <net_chksum>
 800ef82:	a901      	add	r1, sp, #4
 800ef84:	4605      	mov	r5, r0
 800ef86:	220c      	movs	r2, #12
 800ef88:	480c      	ldr	r0, [pc, #48]	; (800efbc <_tcp_send_package+0x150>)
 800ef8a:	f7ff ff3f 	bl	800ee0c <memcpy.isra.0>
 800ef8e:	4809      	ldr	r0, [pc, #36]	; (800efb4 <_tcp_send_package+0x148>)
 800ef90:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800ef94:	8665      	strh	r5, [r4, #50]	; 0x32
 800ef96:	b004      	add	sp, #16
 800ef98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ef9c:	f005 bf7c 	b.w	8014e98 <emac_eth_send>
 800efa0:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800efa2:	5cc9      	ldrb	r1, [r1, r3]
 800efa4:	54d1      	strb	r1, [r2, r3]
 800efa6:	3301      	adds	r3, #1
 800efa8:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800efaa:	4299      	cmp	r1, r3
 800efac:	d8f8      	bhi.n	800efa0 <_tcp_send_package+0x134>
 800efae:	e7bf      	b.n	800ef30 <_tcp_send_package+0xc4>
 800efb0:	2300      	movs	r3, #0
 800efb2:	e7f9      	b.n	800efa8 <_tcp_send_package+0x13c>
 800efb4:	2000b1d8 	ldrdcs	fp, [r0], -r8
 800efb8:	2000a622 	andcs	sl, r0, r2, lsr #12
 800efbc:	2000b1ee 	andcs	fp, r0, lr, ror #3
 800efc0:	2000a5f8 	strdcs	sl, [r0], -r8
 800efc4:	2000b1f2 	strdcs	fp, [r0], -r2

0800efc8 <_send_reset>:
 800efc8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800efca:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800efce:	4604      	mov	r4, r0
 800efd0:	075a      	lsls	r2, r3, #29
 800efd2:	460e      	mov	r6, r1
 800efd4:	d421      	bmi.n	800f01a <_send_reset+0x52>
 800efd6:	2204      	movs	r2, #4
 800efd8:	f013 0310 	ands.w	r3, r3, #16
 800efdc:	f88d 200c 	strb.w	r2, [sp, #12]
 800efe0:	d01d      	beq.n	800f01e <_send_reset+0x56>
 800efe2:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800efe6:	4668      	mov	r0, sp
 800efe8:	f7ff ff10 	bl	800ee0c <memcpy.isra.0>
 800efec:	9b00      	ldr	r3, [sp, #0]
 800efee:	9301      	str	r3, [sp, #4]
 800eff0:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800eff4:	4668      	mov	r0, sp
 800eff6:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800effa:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800effe:	07db      	lsls	r3, r3, #31
 800f000:	f04f 0204 	mov.w	r2, #4
 800f004:	bf48      	it	mi
 800f006:	3501      	addmi	r5, #1
 800f008:	f7ff ff00 	bl	800ee0c <memcpy.isra.0>
 800f00c:	9b00      	ldr	r3, [sp, #0]
 800f00e:	4630      	mov	r0, r6
 800f010:	441d      	add	r5, r3
 800f012:	a901      	add	r1, sp, #4
 800f014:	9502      	str	r5, [sp, #8]
 800f016:	f7ff ff29 	bl	800ee6c <_tcp_send_package>
 800f01a:	b004      	add	sp, #16
 800f01c:	bd70      	pop	{r4, r5, r6, pc}
 800f01e:	9301      	str	r3, [sp, #4]
 800f020:	2314      	movs	r3, #20
 800f022:	f88d 300c 	strb.w	r3, [sp, #12]
 800f026:	e7e3      	b.n	800eff0 <_send_reset+0x28>

0800f028 <tcp_init>:
 800f028:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f02a:	2206      	movs	r2, #6
 800f02c:	4c0e      	ldr	r4, [pc, #56]	; (800f068 <tcp_init+0x40>)
 800f02e:	490f      	ldr	r1, [pc, #60]	; (800f06c <tcp_init+0x44>)
 800f030:	18a0      	adds	r0, r4, r2
 800f032:	f7ff feeb 	bl	800ee0c <memcpy.isra.0>
 800f036:	2308      	movs	r3, #8
 800f038:	2204      	movs	r2, #4
 800f03a:	2500      	movs	r5, #0
 800f03c:	7323      	strb	r3, [r4, #12]
 800f03e:	4b0c      	ldr	r3, [pc, #48]	; (800f070 <tcp_init+0x48>)
 800f040:	eb0d 0102 	add.w	r1, sp, r2
 800f044:	681b      	ldr	r3, [r3, #0]
 800f046:	f104 001a 	add.w	r0, r4, #26
 800f04a:	9301      	str	r3, [sp, #4]
 800f04c:	7365      	strb	r5, [r4, #13]
 800f04e:	f7ff fedd 	bl	800ee0c <memcpy.isra.0>
 800f052:	2345      	movs	r3, #69	; 0x45
 800f054:	73a3      	strb	r3, [r4, #14]
 800f056:	2340      	movs	r3, #64	; 0x40
 800f058:	7523      	strb	r3, [r4, #20]
 800f05a:	75a3      	strb	r3, [r4, #22]
 800f05c:	2306      	movs	r3, #6
 800f05e:	73e5      	strb	r5, [r4, #15]
 800f060:	7565      	strb	r5, [r4, #21]
 800f062:	75e3      	strb	r3, [r4, #23]
 800f064:	b003      	add	sp, #12
 800f066:	bd30      	pop	{r4, r5, pc}
 800f068:	2000b1d8 	ldrdcs	fp, [r0], -r8
 800f06c:	2000a604 	andcs	sl, r0, r4, lsl #12
 800f070:	2000a5f8 	strdcs	sl, [r0], -r8

0800f074 <tcp_handle>:
 800f074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f078:	4605      	mov	r5, r0
 800f07a:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 800f07c:	b085      	sub	sp, #20
 800f07e:	ba5b      	rev16	r3, r3
 800f080:	8443      	strh	r3, [r0, #34]	; 0x22
 800f082:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800f084:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 800f088:	ba5b      	rev16	r3, r3
 800f08a:	8483      	strh	r3, [r0, #36]	; 0x24
 800f08c:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800f090:	f7ff fec6 	bl	800ee20 <_bswap32>
 800f094:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 800f096:	4ca6      	ldr	r4, [pc, #664]	; (800f330 <tcp_handle+0x2bc>)
 800f098:	ba5b      	rev16	r3, r3
 800f09a:	862b      	strh	r3, [r5, #48]	; 0x30
 800f09c:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800f09e:	8822      	ldrh	r2, [r4, #0]
 800f0a0:	ba5b      	rev16	r3, r3
 800f0a2:	86ab      	strh	r3, [r5, #52]	; 0x34
 800f0a4:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 800f0a6:	429a      	cmp	r2, r3
 800f0a8:	d14d      	bne.n	800f146 <tcp_handle+0xd2>
 800f0aa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f0ae:	2b01      	cmp	r3, #1
 800f0b0:	d00d      	beq.n	800f0ce <tcp_handle+0x5a>
 800f0b2:	2204      	movs	r2, #4
 800f0b4:	4668      	mov	r0, sp
 800f0b6:	f105 011a 	add.w	r1, r5, #26
 800f0ba:	f7ff fea7 	bl	800ee0c <memcpy.isra.0>
 800f0be:	8862      	ldrh	r2, [r4, #2]
 800f0c0:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800f0c2:	429a      	cmp	r2, r3
 800f0c4:	d13f      	bne.n	800f146 <tcp_handle+0xd2>
 800f0c6:	6862      	ldr	r2, [r4, #4]
 800f0c8:	9b00      	ldr	r3, [sp, #0]
 800f0ca:	429a      	cmp	r2, r3
 800f0cc:	d13b      	bne.n	800f146 <tcp_handle+0xd2>
 800f0ce:	2204      	movs	r2, #4
 800f0d0:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800f0d4:	eb0d 0002 	add.w	r0, sp, r2
 800f0d8:	f7ff fe98 	bl	800ee0c <memcpy.isra.0>
 800f0dc:	2204      	movs	r2, #4
 800f0de:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800f0e2:	eb0d 0002 	add.w	r0, sp, r2
 800f0e6:	9e01      	ldr	r6, [sp, #4]
 800f0e8:	f7ff fe90 	bl	800ee0c <memcpy.isra.0>
 800f0ec:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f0f0:	9f01      	ldr	r7, [sp, #4]
 800f0f2:	2a01      	cmp	r2, #1
 800f0f4:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800f0f8:	d01b      	beq.n	800f132 <tcp_handle+0xbe>
 800f0fa:	1ed3      	subs	r3, r2, #3
 800f0fc:	2b07      	cmp	r3, #7
 800f0fe:	d822      	bhi.n	800f146 <tcp_handle+0xd2>
 800f100:	ea4f 1318 	mov.w	r3, r8, lsr #4
 800f104:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800f108:	fa9b fb9b 	rev16.w	fp, fp
 800f10c:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800f110:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800f112:	44d8      	add	r8, fp
 800f114:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800f118:	ea4f 0983 	mov.w	r9, r3, lsl #2
 800f11c:	fa1f f888 	uxth.w	r8, r8
 800f120:	2900      	cmp	r1, #0
 800f122:	d142      	bne.n	800f1aa <tcp_handle+0x136>
 800f124:	f1b8 0f00 	cmp.w	r8, #0
 800f128:	d16b      	bne.n	800f202 <tcp_handle+0x18e>
 800f12a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f12c:	42bb      	cmp	r3, r7
 800f12e:	d168      	bne.n	800f202 <tcp_handle+0x18e>
 800f130:	e048      	b.n	800f1c4 <tcp_handle+0x150>
 800f132:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f136:	075a      	lsls	r2, r3, #29
 800f138:	d405      	bmi.n	800f146 <tcp_handle+0xd2>
 800f13a:	06d8      	lsls	r0, r3, #27
 800f13c:	d506      	bpl.n	800f14c <tcp_handle+0xd8>
 800f13e:	4628      	mov	r0, r5
 800f140:	497b      	ldr	r1, [pc, #492]	; (800f330 <tcp_handle+0x2bc>)
 800f142:	f7ff ff41 	bl	800efc8 <_send_reset>
 800f146:	b005      	add	sp, #20
 800f148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f14c:	0799      	lsls	r1, r3, #30
 800f14e:	d5fa      	bpl.n	800f146 <tcp_handle+0xd2>
 800f150:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800f154:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800f158:	4668      	mov	r0, sp
 800f15a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800f15e:	f105 011a 	add.w	r1, r5, #26
 800f162:	2204      	movs	r2, #4
 800f164:	8063      	strh	r3, [r4, #2]
 800f166:	f7ff fe51 	bl	800ee0c <memcpy.isra.0>
 800f16a:	2206      	movs	r2, #6
 800f16c:	9b00      	ldr	r3, [sp, #0]
 800f16e:	18a9      	adds	r1, r5, r2
 800f170:	4870      	ldr	r0, [pc, #448]	; (800f334 <tcp_handle+0x2c0>)
 800f172:	6063      	str	r3, [r4, #4]
 800f174:	f7ff fe4a 	bl	800ee0c <memcpy.isra.0>
 800f178:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f17a:	1c7b      	adds	r3, r7, #1
 800f17c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f180:	6363      	str	r3, [r4, #52]	; 0x34
 800f182:	2312      	movs	r3, #18
 800f184:	486a      	ldr	r0, [pc, #424]	; (800f330 <tcp_handle+0x2bc>)
 800f186:	a901      	add	r1, sp, #4
 800f188:	f88d 300c 	strb.w	r3, [sp, #12]
 800f18c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800f190:	63e7      	str	r7, [r4, #60]	; 0x3c
 800f192:	f8c4 a018 	str.w	sl, [r4, #24]
 800f196:	f7ff fe69 	bl	800ee6c <_tcp_send_package>
 800f19a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f19c:	1c5a      	adds	r2, r3, #1
 800f19e:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800f1a2:	2303      	movs	r3, #3
 800f1a4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f1a8:	e7cd      	b.n	800f146 <tcp_handle+0xd2>
 800f1aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f1ac:	eba3 0c07 	sub.w	ip, r3, r7
 800f1b0:	f1b8 0f00 	cmp.w	r8, #0
 800f1b4:	d10d      	bne.n	800f1d2 <tcp_handle+0x15e>
 800f1b6:	f1bc 0f00 	cmp.w	ip, #0
 800f1ba:	dc22      	bgt.n	800f202 <tcp_handle+0x18e>
 800f1bc:	1afb      	subs	r3, r7, r3
 800f1be:	1a5b      	subs	r3, r3, r1
 800f1c0:	2b00      	cmp	r3, #0
 800f1c2:	da1e      	bge.n	800f202 <tcp_handle+0x18e>
 800f1c4:	0743      	lsls	r3, r0, #29
 800f1c6:	d530      	bpl.n	800f22a <tcp_handle+0x1b6>
 800f1c8:	8821      	ldrh	r1, [r4, #0]
 800f1ca:	4859      	ldr	r0, [pc, #356]	; (800f330 <tcp_handle+0x2bc>)
 800f1cc:	f7ff fe04 	bl	800edd8 <_init_tcb>
 800f1d0:	e7b9      	b.n	800f146 <tcp_handle+0xd2>
 800f1d2:	f1bc 0f00 	cmp.w	ip, #0
 800f1d6:	dc06      	bgt.n	800f1e6 <tcp_handle+0x172>
 800f1d8:	eba7 0c03 	sub.w	ip, r7, r3
 800f1dc:	ebac 0c01 	sub.w	ip, ip, r1
 800f1e0:	f1bc 0f00 	cmp.w	ip, #0
 800f1e4:	dbee      	blt.n	800f1c4 <tcp_handle+0x150>
 800f1e6:	eb08 0c07 	add.w	ip, r8, r7
 800f1ea:	f103 0e01 	add.w	lr, r3, #1
 800f1ee:	ebae 0e0c 	sub.w	lr, lr, ip
 800f1f2:	f1be 0f00 	cmp.w	lr, #0
 800f1f6:	dc04      	bgt.n	800f202 <tcp_handle+0x18e>
 800f1f8:	43db      	mvns	r3, r3
 800f1fa:	1a5b      	subs	r3, r3, r1
 800f1fc:	eb13 0f0c 	cmn.w	r3, ip
 800f200:	d4e0      	bmi.n	800f1c4 <tcp_handle+0x150>
 800f202:	0742      	lsls	r2, r0, #29
 800f204:	d505      	bpl.n	800f212 <tcp_handle+0x19e>
 800f206:	8821      	ldrh	r1, [r4, #0]
 800f208:	4849      	ldr	r0, [pc, #292]	; (800f330 <tcp_handle+0x2bc>)
 800f20a:	f7ff fde5 	bl	800edd8 <_init_tcb>
 800f20e:	2301      	movs	r3, #1
 800f210:	e7c8      	b.n	800f1a4 <tcp_handle+0x130>
 800f212:	6963      	ldr	r3, [r4, #20]
 800f214:	9301      	str	r3, [sp, #4]
 800f216:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f218:	9302      	str	r3, [sp, #8]
 800f21a:	2310      	movs	r3, #16
 800f21c:	4844      	ldr	r0, [pc, #272]	; (800f330 <tcp_handle+0x2bc>)
 800f21e:	a901      	add	r1, sp, #4
 800f220:	f88d 300c 	strb.w	r3, [sp, #12]
 800f224:	f7ff fe22 	bl	800ee6c <_tcp_send_package>
 800f228:	e78d      	b.n	800f146 <tcp_handle+0xd2>
 800f22a:	0781      	lsls	r1, r0, #30
 800f22c:	d505      	bpl.n	800f23a <tcp_handle+0x1c6>
 800f22e:	2a03      	cmp	r2, #3
 800f230:	d0ed      	beq.n	800f20e <tcp_handle+0x19a>
 800f232:	4628      	mov	r0, r5
 800f234:	493e      	ldr	r1, [pc, #248]	; (800f330 <tcp_handle+0x2bc>)
 800f236:	f7ff fec7 	bl	800efc8 <_send_reset>
 800f23a:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f23e:	06da      	lsls	r2, r3, #27
 800f240:	d581      	bpl.n	800f146 <tcp_handle+0xd2>
 800f242:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f246:	3b03      	subs	r3, #3
 800f248:	2b07      	cmp	r3, #7
 800f24a:	d818      	bhi.n	800f27e <tcp_handle+0x20a>
 800f24c:	e8df f003 	tbb	[pc, r3]
 800f250:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 800f254:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800f258:	6923      	ldr	r3, [r4, #16]
 800f25a:	1b9b      	subs	r3, r3, r6
 800f25c:	2b00      	cmp	r3, #0
 800f25e:	dc0a      	bgt.n	800f276 <tcp_handle+0x202>
 800f260:	6963      	ldr	r3, [r4, #20]
 800f262:	1af3      	subs	r3, r6, r3
 800f264:	2b00      	cmp	r3, #0
 800f266:	dc06      	bgt.n	800f276 <tcp_handle+0x202>
 800f268:	2304      	movs	r3, #4
 800f26a:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800f26e:	f8c4 a018 	str.w	sl, [r4, #24]
 800f272:	6126      	str	r6, [r4, #16]
 800f274:	e796      	b.n	800f1a4 <tcp_handle+0x130>
 800f276:	4628      	mov	r0, r5
 800f278:	492d      	ldr	r1, [pc, #180]	; (800f330 <tcp_handle+0x2bc>)
 800f27a:	f7ff fea5 	bl	800efc8 <_send_reset>
 800f27e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f282:	3b04      	subs	r3, #4
 800f284:	2b02      	cmp	r3, #2
 800f286:	d830      	bhi.n	800f2ea <tcp_handle+0x276>
 800f288:	f1b8 0f00 	cmp.w	r8, #0
 800f28c:	d02d      	beq.n	800f2ea <tcp_handle+0x276>
 800f28e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f290:	42bb      	cmp	r3, r7
 800f292:	f040 8092 	bne.w	800f3ba <tcp_handle+0x346>
 800f296:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800f29a:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800f338 <tcp_handle+0x2c4>
 800f29e:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800f2a2:	f8ba 7000 	ldrh.w	r7, [sl]
 800f2a6:	4642      	mov	r2, r8
 800f2a8:	435f      	muls	r7, r3
 800f2aa:	1d38      	adds	r0, r7, #4
 800f2ac:	4449      	add	r1, r9
 800f2ae:	4450      	add	r0, sl
 800f2b0:	f7ff fdac 	bl	800ee0c <memcpy.isra.0>
 800f2b4:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f2b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f2b8:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800f2bc:	8722      	strh	r2, [r4, #56]	; 0x38
 800f2be:	6962      	ldr	r2, [r4, #20]
 800f2c0:	4443      	add	r3, r8
 800f2c2:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f2c6:	6363      	str	r3, [r4, #52]	; 0x34
 800f2c8:	2310      	movs	r3, #16
 800f2ca:	4457      	add	r7, sl
 800f2cc:	4818      	ldr	r0, [pc, #96]	; (800f330 <tcp_handle+0x2bc>)
 800f2ce:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800f2d2:	a901      	add	r1, sp, #4
 800f2d4:	f88d 300c 	strb.w	r3, [sp, #12]
 800f2d8:	f7ff fdc8 	bl	800ee6c <_tcp_send_package>
 800f2dc:	f8ba 3000 	ldrh.w	r3, [sl]
 800f2e0:	3301      	adds	r3, #1
 800f2e2:	f003 0301 	and.w	r3, r3, #1
 800f2e6:	f8aa 3000 	strh.w	r3, [sl]
 800f2ea:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f2ee:	2b02      	cmp	r3, #2
 800f2f0:	f67f af29 	bls.w	800f146 <tcp_handle+0xd2>
 800f2f4:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f2f8:	07db      	lsls	r3, r3, #31
 800f2fa:	f57f af24 	bpl.w	800f146 <tcp_handle+0xd2>
 800f2fe:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f300:	6962      	ldr	r2, [r4, #20]
 800f302:	3301      	adds	r3, #1
 800f304:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f308:	6363      	str	r3, [r4, #52]	; 0x34
 800f30a:	2310      	movs	r3, #16
 800f30c:	4808      	ldr	r0, [pc, #32]	; (800f330 <tcp_handle+0x2bc>)
 800f30e:	a901      	add	r1, sp, #4
 800f310:	f88d 300c 	strb.w	r3, [sp, #12]
 800f314:	f7ff fdaa 	bl	800ee6c <_tcp_send_package>
 800f318:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f31c:	2b05      	cmp	r3, #5
 800f31e:	d054      	beq.n	800f3ca <tcp_handle+0x356>
 800f320:	d84e      	bhi.n	800f3c0 <tcp_handle+0x34c>
 800f322:	3b03      	subs	r3, #3
 800f324:	2b01      	cmp	r3, #1
 800f326:	f63f af0e 	bhi.w	800f146 <tcp_handle+0xd2>
 800f32a:	2307      	movs	r3, #7
 800f32c:	e73a      	b.n	800f1a4 <tcp_handle+0x130>
 800f32e:	bf00      	nop
 800f330:	2000b194 	mulcs	r0, r4, r1
 800f334:	2000b19c 	mulcs	r0, ip, r1
 800f338:	2000a624 	andcs	sl, r0, r4, lsr #12
 800f33c:	6923      	ldr	r3, [r4, #16]
 800f33e:	1b99      	subs	r1, r3, r6
 800f340:	d513      	bpl.n	800f36a <tcp_handle+0x2f6>
 800f342:	6962      	ldr	r2, [r4, #20]
 800f344:	1ab2      	subs	r2, r6, r2
 800f346:	2a00      	cmp	r2, #0
 800f348:	dc0f      	bgt.n	800f36a <tcp_handle+0x2f6>
 800f34a:	6126      	str	r6, [r4, #16]
 800f34c:	6a23      	ldr	r3, [r4, #32]
 800f34e:	1bda      	subs	r2, r3, r7
 800f350:	2a00      	cmp	r2, #0
 800f352:	db05      	blt.n	800f360 <tcp_handle+0x2ec>
 800f354:	42bb      	cmp	r3, r7
 800f356:	d192      	bne.n	800f27e <tcp_handle+0x20a>
 800f358:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f35a:	1b9b      	subs	r3, r3, r6
 800f35c:	2b00      	cmp	r3, #0
 800f35e:	dc8e      	bgt.n	800f27e <tcp_handle+0x20a>
 800f360:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800f364:	f8c4 a018 	str.w	sl, [r4, #24]
 800f368:	e789      	b.n	800f27e <tcp_handle+0x20a>
 800f36a:	1af3      	subs	r3, r6, r3
 800f36c:	2b00      	cmp	r3, #0
 800f36e:	dc06      	bgt.n	800f37e <tcp_handle+0x30a>
 800f370:	2900      	cmp	r1, #0
 800f372:	dc84      	bgt.n	800f27e <tcp_handle+0x20a>
 800f374:	6963      	ldr	r3, [r4, #20]
 800f376:	1af3      	subs	r3, r6, r3
 800f378:	2b00      	cmp	r3, #0
 800f37a:	dc80      	bgt.n	800f27e <tcp_handle+0x20a>
 800f37c:	e7e6      	b.n	800f34c <tcp_handle+0x2d8>
 800f37e:	6963      	ldr	r3, [r4, #20]
 800f380:	1b9a      	subs	r2, r3, r6
 800f382:	2a00      	cmp	r2, #0
 800f384:	f6bf af7b 	bge.w	800f27e <tcp_handle+0x20a>
 800f388:	e744      	b.n	800f214 <tcp_handle+0x1a0>
 800f38a:	6963      	ldr	r3, [r4, #20]
 800f38c:	42b3      	cmp	r3, r6
 800f38e:	f47f af76 	bne.w	800f27e <tcp_handle+0x20a>
 800f392:	8821      	ldrh	r1, [r4, #0]
 800f394:	480f      	ldr	r0, [pc, #60]	; (800f3d4 <tcp_handle+0x360>)
 800f396:	f7ff fd1f 	bl	800edd8 <_init_tcb>
 800f39a:	e770      	b.n	800f27e <tcp_handle+0x20a>
 800f39c:	6963      	ldr	r3, [r4, #20]
 800f39e:	42b3      	cmp	r3, r6
 800f3a0:	f47f af6d 	bne.w	800f27e <tcp_handle+0x20a>
 800f3a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f3a6:	480b      	ldr	r0, [pc, #44]	; (800f3d4 <tcp_handle+0x360>)
 800f3a8:	9302      	str	r3, [sp, #8]
 800f3aa:	2310      	movs	r3, #16
 800f3ac:	a901      	add	r1, sp, #4
 800f3ae:	9601      	str	r6, [sp, #4]
 800f3b0:	f88d 300c 	strb.w	r3, [sp, #12]
 800f3b4:	f7ff fd5a 	bl	800ee6c <_tcp_send_package>
 800f3b8:	e761      	b.n	800f27e <tcp_handle+0x20a>
 800f3ba:	6962      	ldr	r2, [r4, #20]
 800f3bc:	9201      	str	r2, [sp, #4]
 800f3be:	e72b      	b.n	800f218 <tcp_handle+0x1a4>
 800f3c0:	2b06      	cmp	r3, #6
 800f3c2:	f47f aec0 	bne.w	800f146 <tcp_handle+0xd2>
 800f3c6:	230a      	movs	r3, #10
 800f3c8:	e6ec      	b.n	800f1a4 <tcp_handle+0x130>
 800f3ca:	6963      	ldr	r3, [r4, #20]
 800f3cc:	42b3      	cmp	r3, r6
 800f3ce:	d0fa      	beq.n	800f3c6 <tcp_handle+0x352>
 800f3d0:	2308      	movs	r3, #8
 800f3d2:	e6e7      	b.n	800f1a4 <tcp_handle+0x130>
 800f3d4:	2000b194 	mulcs	r0, r4, r1

0800f3d8 <tcp_begin>:
 800f3d8:	b508      	push	{r3, lr}
 800f3da:	4b0a      	ldr	r3, [pc, #40]	; (800f404 <tcp_begin+0x2c>)
 800f3dc:	4601      	mov	r1, r0
 800f3de:	881a      	ldrh	r2, [r3, #0]
 800f3e0:	4282      	cmp	r2, r0
 800f3e2:	d102      	bne.n	800f3ea <tcp_begin+0x12>
 800f3e4:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f3e8:	b130      	cbz	r0, 800f3f8 <tcp_begin+0x20>
 800f3ea:	b12a      	cbz	r2, 800f3f8 <tcp_begin+0x20>
 800f3ec:	4806      	ldr	r0, [pc, #24]	; (800f408 <tcp_begin+0x30>)
 800f3ee:	f003 fb79 	bl	8012ae4 <console_error>
 800f3f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f3f6:	bd08      	pop	{r3, pc}
 800f3f8:	4802      	ldr	r0, [pc, #8]	; (800f404 <tcp_begin+0x2c>)
 800f3fa:	8019      	strh	r1, [r3, #0]
 800f3fc:	f7ff fcec 	bl	800edd8 <_init_tcb>
 800f400:	2000      	movs	r0, #0
 800f402:	e7f8      	b.n	800f3f6 <tcp_begin+0x1e>
 800f404:	2000b194 	mulcs	r0, r4, r1
 800f408:	0801774d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, ip, sp, lr}

0800f40c <tcp_write>:
 800f40c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f410:	429a      	cmp	r2, r3
 800f412:	bf28      	it	cs
 800f414:	461a      	movcs	r2, r3
 800f416:	2344      	movs	r3, #68	; 0x44
 800f418:	b530      	push	{r4, r5, lr}
 800f41a:	4c0d      	ldr	r4, [pc, #52]	; (800f450 <tcp_write+0x44>)
 800f41c:	b085      	sub	sp, #20
 800f41e:	fb03 4400 	mla	r4, r3, r0, r4
 800f422:	6963      	ldr	r3, [r4, #20]
 800f424:	4615      	mov	r5, r2
 800f426:	9301      	str	r3, [sp, #4]
 800f428:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f42a:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f42c:	9302      	str	r3, [sp, #8]
 800f42e:	2318      	movs	r3, #24
 800f430:	8622      	strh	r2, [r4, #48]	; 0x30
 800f432:	4620      	mov	r0, r4
 800f434:	a901      	add	r1, sp, #4
 800f436:	f88d 300c 	strb.w	r3, [sp, #12]
 800f43a:	f7ff fd17 	bl	800ee6c <_tcp_send_package>
 800f43e:	2300      	movs	r3, #0
 800f440:	6962      	ldr	r2, [r4, #20]
 800f442:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f444:	442a      	add	r2, r5
 800f446:	8623      	strh	r3, [r4, #48]	; 0x30
 800f448:	6162      	str	r2, [r4, #20]
 800f44a:	b005      	add	sp, #20
 800f44c:	bd30      	pop	{r4, r5, pc}
 800f44e:	bf00      	nop
 800f450:	2000b194 	mulcs	r0, r4, r1

0800f454 <tcp_read>:
 800f454:	2344      	movs	r3, #68	; 0x44
 800f456:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f458:	4c1c      	ldr	r4, [pc, #112]	; (800f4cc <tcp_read+0x78>)
 800f45a:	b085      	sub	sp, #20
 800f45c:	fb03 4400 	mla	r4, r3, r0, r4
 800f460:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f464:	2b07      	cmp	r3, #7
 800f466:	d112      	bne.n	800f48e <tcp_read+0x3a>
 800f468:	6963      	ldr	r3, [r4, #20]
 800f46a:	4620      	mov	r0, r4
 800f46c:	9301      	str	r3, [sp, #4]
 800f46e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f470:	a901      	add	r1, sp, #4
 800f472:	9302      	str	r3, [sp, #8]
 800f474:	2311      	movs	r3, #17
 800f476:	f88d 300c 	strb.w	r3, [sp, #12]
 800f47a:	f7ff fcf7 	bl	800ee6c <_tcp_send_package>
 800f47e:	2309      	movs	r3, #9
 800f480:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f484:	6963      	ldr	r3, [r4, #20]
 800f486:	3301      	adds	r3, #1
 800f488:	6163      	str	r3, [r4, #20]
 800f48a:	2000      	movs	r0, #0
 800f48c:	e01b      	b.n	800f4c6 <tcp_read+0x72>
 800f48e:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f492:	4358      	muls	r0, r3
 800f494:	4a0e      	ldr	r2, [pc, #56]	; (800f4d0 <tcp_read+0x7c>)
 800f496:	1817      	adds	r7, r2, r0
 800f498:	887b      	ldrh	r3, [r7, #2]
 800f49a:	5a15      	ldrh	r5, [r2, r0]
 800f49c:	429d      	cmp	r5, r3
 800f49e:	d0f4      	beq.n	800f48a <tcp_read+0x36>
 800f4a0:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f4a4:	435d      	muls	r5, r3
 800f4a6:	1d06      	adds	r6, r0, #4
 800f4a8:	442e      	add	r6, r5
 800f4aa:	4416      	add	r6, r2
 800f4ac:	4428      	add	r0, r5
 800f4ae:	600e      	str	r6, [r1, #0]
 800f4b0:	4402      	add	r2, r0
 800f4b2:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f4b6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f4b8:	3301      	adds	r3, #1
 800f4ba:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f4be:	f003 0301 	and.w	r3, r3, #1
 800f4c2:	8722      	strh	r2, [r4, #56]	; 0x38
 800f4c4:	807b      	strh	r3, [r7, #2]
 800f4c6:	b005      	add	sp, #20
 800f4c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4ca:	bf00      	nop
 800f4cc:	2000b194 	mulcs	r0, r4, r1
 800f4d0:	2000a624 	andcs	sl, r0, r4, lsr #12

0800f4d4 <memcpy.isra.0>:
 800f4d4:	3801      	subs	r0, #1
 800f4d6:	440a      	add	r2, r1
 800f4d8:	4291      	cmp	r1, r2
 800f4da:	d100      	bne.n	800f4de <memcpy.isra.0+0xa>
 800f4dc:	4770      	bx	lr
 800f4de:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f4e2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f4e6:	e7f7      	b.n	800f4d8 <memcpy.isra.0+0x4>

0800f4e8 <net_memcpy>:
 800f4e8:	ea41 0300 	orr.w	r3, r1, r0
 800f4ec:	079b      	lsls	r3, r3, #30
 800f4ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4f0:	d115      	bne.n	800f51e <net_memcpy+0x36>
 800f4f2:	f022 0303 	bic.w	r3, r2, #3
 800f4f6:	1f04      	subs	r4, r0, #4
 800f4f8:	0895      	lsrs	r5, r2, #2
 800f4fa:	18ce      	adds	r6, r1, r3
 800f4fc:	42b1      	cmp	r1, r6
 800f4fe:	d109      	bne.n	800f514 <net_memcpy+0x2c>
 800f500:	f06f 0403 	mvn.w	r4, #3
 800f504:	fb04 2205 	mla	r2, r4, r5, r2
 800f508:	4403      	add	r3, r0
 800f50a:	3b01      	subs	r3, #1
 800f50c:	440a      	add	r2, r1
 800f50e:	4291      	cmp	r1, r2
 800f510:	d107      	bne.n	800f522 <net_memcpy+0x3a>
 800f512:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f514:	f851 7b04 	ldr.w	r7, [r1], #4
 800f518:	f844 7f04 	str.w	r7, [r4, #4]!
 800f51c:	e7ee      	b.n	800f4fc <net_memcpy+0x14>
 800f51e:	4603      	mov	r3, r0
 800f520:	e7f3      	b.n	800f50a <net_memcpy+0x22>
 800f522:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f526:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f52a:	e7f0      	b.n	800f50e <net_memcpy+0x26>

0800f52c <udp_set_ip>:
 800f52c:	2204      	movs	r2, #4
 800f52e:	b513      	push	{r0, r1, r4, lr}
 800f530:	4604      	mov	r4, r0
 800f532:	6803      	ldr	r3, [r0, #0]
 800f534:	eb0d 0102 	add.w	r1, sp, r2
 800f538:	4808      	ldr	r0, [pc, #32]	; (800f55c <udp_set_ip+0x30>)
 800f53a:	9301      	str	r3, [sp, #4]
 800f53c:	f7ff ffca 	bl	800f4d4 <memcpy.isra.0>
 800f540:	6862      	ldr	r2, [r4, #4]
 800f542:	4b07      	ldr	r3, [pc, #28]	; (800f560 <udp_set_ip+0x34>)
 800f544:	43d1      	mvns	r1, r2
 800f546:	6019      	str	r1, [r3, #0]
 800f548:	6823      	ldr	r3, [r4, #0]
 800f54a:	4013      	ands	r3, r2
 800f54c:	4a05      	ldr	r2, [pc, #20]	; (800f564 <udp_set_ip+0x38>)
 800f54e:	6013      	str	r3, [r2, #0]
 800f550:	68a2      	ldr	r2, [r4, #8]
 800f552:	4b05      	ldr	r3, [pc, #20]	; (800f568 <udp_set_ip+0x3c>)
 800f554:	601a      	str	r2, [r3, #0]
 800f556:	b002      	add	sp, #8
 800f558:	bd10      	pop	{r4, pc}
 800f55a:	bf00      	nop
 800f55c:	200114ae 	andcs	r1, r1, lr, lsr #9
 800f560:	2000b7c4 	andcs	fp, r0, r4, asr #15
 800f564:	2000b7cc 	andcs	fp, r0, ip, asr #15
 800f568:	2000b7c8 	andcs	fp, r0, r8, asr #15

0800f56c <udp_init>:
 800f56c:	b570      	push	{r4, r5, r6, lr}
 800f56e:	2200      	movs	r2, #0
 800f570:	2508      	movs	r5, #8
 800f572:	460e      	mov	r6, r1
 800f574:	4b12      	ldr	r3, [pc, #72]	; (800f5c0 <udp_init+0x54>)
 800f576:	4913      	ldr	r1, [pc, #76]	; (800f5c4 <udp_init+0x58>)
 800f578:	3d01      	subs	r5, #1
 800f57a:	801a      	strh	r2, [r3, #0]
 800f57c:	805a      	strh	r2, [r3, #2]
 800f57e:	f841 2b04 	str.w	r2, [r1], #4
 800f582:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800f586:	d1f7      	bne.n	800f578 <udp_init+0xc>
 800f588:	2206      	movs	r2, #6
 800f58a:	4c0f      	ldr	r4, [pc, #60]	; (800f5c8 <udp_init+0x5c>)
 800f58c:	4b0f      	ldr	r3, [pc, #60]	; (800f5cc <udp_init+0x60>)
 800f58e:	4601      	mov	r1, r0
 800f590:	18a0      	adds	r0, r4, r2
 800f592:	801d      	strh	r5, [r3, #0]
 800f594:	f7ff ff9e 	bl	800f4d4 <memcpy.isra.0>
 800f598:	2308      	movs	r3, #8
 800f59a:	7323      	strb	r3, [r4, #12]
 800f59c:	2345      	movs	r3, #69	; 0x45
 800f59e:	73a3      	strb	r3, [r4, #14]
 800f5a0:	2340      	movs	r3, #64	; 0x40
 800f5a2:	7523      	strb	r3, [r4, #20]
 800f5a4:	75a3      	strb	r3, [r4, #22]
 800f5a6:	2311      	movs	r3, #17
 800f5a8:	4630      	mov	r0, r6
 800f5aa:	7365      	strb	r5, [r4, #13]
 800f5ac:	73e5      	strb	r5, [r4, #15]
 800f5ae:	7565      	strb	r5, [r4, #21]
 800f5b0:	75e3      	strb	r3, [r4, #23]
 800f5b2:	f7ff ffbb 	bl	800f52c <udp_set_ip>
 800f5b6:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 800f5ba:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800f5be:	bd70      	pop	{r4, r5, r6, pc}
 800f5c0:	2000b7f4 	strdcs	fp, [r0], -r4
 800f5c4:	2000b7d4 	ldrdcs	fp, [r0], -r4
 800f5c8:	20011494 	mulcs	r1, r4, r4
 800f5cc:	2000b7d0 	ldrdcs	fp, [r0], -r0

0800f5d0 <udp_shutdown>:
 800f5d0:	4770      	bx	lr
	...

0800f5d4 <udp_handle>:
 800f5d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f5d8:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800f5da:	4607      	mov	r7, r0
 800f5dc:	ba5b      	rev16	r3, r3
 800f5de:	b29b      	uxth	r3, r3
 800f5e0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800f5e4:	2a01      	cmp	r2, #1
 800f5e6:	d904      	bls.n	800f5f2 <udp_handle+0x1e>
 800f5e8:	2b7b      	cmp	r3, #123	; 0x7b
 800f5ea:	d002      	beq.n	800f5f2 <udp_handle+0x1e>
 800f5ec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800f5f0:	d308      	bcc.n	800f604 <udp_handle+0x30>
 800f5f2:	2400      	movs	r4, #0
 800f5f4:	4a1f      	ldr	r2, [pc, #124]	; (800f674 <udp_handle+0xa0>)
 800f5f6:	f852 1b04 	ldr.w	r1, [r2], #4
 800f5fa:	4299      	cmp	r1, r3
 800f5fc:	d005      	beq.n	800f60a <udp_handle+0x36>
 800f5fe:	3401      	adds	r4, #1
 800f600:	2c08      	cmp	r4, #8
 800f602:	d1f8      	bne.n	800f5f6 <udp_handle+0x22>
 800f604:	b002      	add	sp, #8
 800f606:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f60a:	f640 3394 	movw	r3, #2964	; 0xb94
 800f60e:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800f610:	435c      	muls	r4, r3
 800f612:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f616:	ba76      	rev16	r6, r6
 800f618:	3e08      	subs	r6, #8
 800f61a:	b2b6      	uxth	r6, r6
 800f61c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f620:	bf28      	it	cs
 800f622:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800f626:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800f678 <udp_handle+0xa4>
 800f62a:	1d20      	adds	r0, r4, #4
 800f62c:	f838 5004 	ldrh.w	r5, [r8, r4]
 800f630:	4632      	mov	r2, r6
 800f632:	435d      	muls	r5, r3
 800f634:	4428      	add	r0, r5
 800f636:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800f63a:	4440      	add	r0, r8
 800f63c:	f7ff ff4a 	bl	800f4d4 <memcpy.isra.0>
 800f640:	2204      	movs	r2, #4
 800f642:	f107 011a 	add.w	r1, r7, #26
 800f646:	eb0d 0002 	add.w	r0, sp, r2
 800f64a:	f7ff ff43 	bl	800f4d4 <memcpy.isra.0>
 800f64e:	9a01      	ldr	r2, [sp, #4]
 800f650:	192b      	adds	r3, r5, r4
 800f652:	4443      	add	r3, r8
 800f654:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800f658:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800f65a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800f65e:	ba52      	rev16	r2, r2
 800f660:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800f664:	f838 3004 	ldrh.w	r3, [r8, r4]
 800f668:	3301      	adds	r3, #1
 800f66a:	f003 0301 	and.w	r3, r3, #1
 800f66e:	f828 3004 	strh.w	r3, [r8, r4]
 800f672:	e7c7      	b.n	800f604 <udp_handle+0x30>
 800f674:	2000b7d4 	ldrdcs	fp, [r0], -r4
 800f678:	2000b7f4 	strdcs	fp, [r0], -r4

0800f67c <udp_bind>:
 800f67c:	4a0a      	ldr	r2, [pc, #40]	; (800f6a8 <udp_bind+0x2c>)
 800f67e:	4603      	mov	r3, r0
 800f680:	b510      	push	{r4, lr}
 800f682:	2000      	movs	r0, #0
 800f684:	4614      	mov	r4, r2
 800f686:	f852 1b04 	ldr.w	r1, [r2], #4
 800f68a:	4299      	cmp	r1, r3
 800f68c:	d008      	beq.n	800f6a0 <udp_bind+0x24>
 800f68e:	b141      	cbz	r1, 800f6a2 <udp_bind+0x26>
 800f690:	3001      	adds	r0, #1
 800f692:	2808      	cmp	r0, #8
 800f694:	d1f7      	bne.n	800f686 <udp_bind+0xa>
 800f696:	4805      	ldr	r0, [pc, #20]	; (800f6ac <udp_bind+0x30>)
 800f698:	f003 fa24 	bl	8012ae4 <console_error>
 800f69c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f6a0:	bd10      	pop	{r4, pc}
 800f6a2:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f6a6:	e7fb      	b.n	800f6a0 <udp_bind+0x24>
 800f6a8:	2000b7d4 	ldrdcs	fp, [r0], -r4
 800f6ac:	0801776d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}

0800f6b0 <udp_unbind>:
 800f6b0:	4a0c      	ldr	r2, [pc, #48]	; (800f6e4 <udp_unbind+0x34>)
 800f6b2:	2300      	movs	r3, #0
 800f6b4:	4611      	mov	r1, r2
 800f6b6:	b510      	push	{r4, lr}
 800f6b8:	f852 4b04 	ldr.w	r4, [r2], #4
 800f6bc:	4284      	cmp	r4, r0
 800f6be:	d108      	bne.n	800f6d2 <udp_unbind+0x22>
 800f6c0:	2000      	movs	r0, #0
 800f6c2:	f640 3294 	movw	r2, #2964	; 0xb94
 800f6c6:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f6ca:	4353      	muls	r3, r2
 800f6cc:	4a06      	ldr	r2, [pc, #24]	; (800f6e8 <udp_unbind+0x38>)
 800f6ce:	5098      	str	r0, [r3, r2]
 800f6d0:	bd10      	pop	{r4, pc}
 800f6d2:	3301      	adds	r3, #1
 800f6d4:	2b08      	cmp	r3, #8
 800f6d6:	d1ef      	bne.n	800f6b8 <udp_unbind+0x8>
 800f6d8:	4804      	ldr	r0, [pc, #16]	; (800f6ec <udp_unbind+0x3c>)
 800f6da:	f003 fa03 	bl	8012ae4 <console_error>
 800f6de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f6e2:	e7f5      	b.n	800f6d0 <udp_unbind+0x20>
 800f6e4:	2000b7d4 	ldrdcs	fp, [r0], -r4
 800f6e8:	2000b7f4 	strdcs	fp, [r0], -r4
 800f6ec:	08017772 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}

0800f6f0 <udp_recv>:
 800f6f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6f4:	4604      	mov	r4, r0
 800f6f6:	4698      	mov	r8, r3
 800f6f8:	f640 3394 	movw	r3, #2964	; 0xb94
 800f6fc:	435c      	muls	r4, r3
 800f6fe:	4608      	mov	r0, r1
 800f700:	4915      	ldr	r1, [pc, #84]	; (800f758 <udp_recv+0x68>)
 800f702:	190f      	adds	r7, r1, r4
 800f704:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f708:	5b0b      	ldrh	r3, [r1, r4]
 800f70a:	4563      	cmp	r3, ip
 800f70c:	d021      	beq.n	800f752 <udp_recv+0x62>
 800f70e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f712:	fb03 fc0c 	mul.w	ip, r3, ip
 800f716:	eb0c 0604 	add.w	r6, ip, r4
 800f71a:	440e      	add	r6, r1
 800f71c:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f720:	3404      	adds	r4, #4
 800f722:	4295      	cmp	r5, r2
 800f724:	bf28      	it	cs
 800f726:	4615      	movcs	r5, r2
 800f728:	4464      	add	r4, ip
 800f72a:	462a      	mov	r2, r5
 800f72c:	4421      	add	r1, r4
 800f72e:	f7ff fedb 	bl	800f4e8 <net_memcpy>
 800f732:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f736:	f8c8 3000 	str.w	r3, [r8]
 800f73a:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f73e:	9b06      	ldr	r3, [sp, #24]
 800f740:	801a      	strh	r2, [r3, #0]
 800f742:	887b      	ldrh	r3, [r7, #2]
 800f744:	3301      	adds	r3, #1
 800f746:	f003 0301 	and.w	r3, r3, #1
 800f74a:	807b      	strh	r3, [r7, #2]
 800f74c:	4628      	mov	r0, r5
 800f74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f752:	2500      	movs	r5, #0
 800f754:	e7fa      	b.n	800f74c <udp_recv+0x5c>
 800f756:	bf00      	nop
 800f758:	2000b7f4 	strdcs	fp, [r0], -r4

0800f75c <udp_recv2>:
 800f75c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f75e:	f640 3594 	movw	r5, #2964	; 0xb94
 800f762:	4368      	muls	r0, r5
 800f764:	4c0f      	ldr	r4, [pc, #60]	; (800f7a4 <udp_recv2+0x48>)
 800f766:	1827      	adds	r7, r4, r0
 800f768:	887d      	ldrh	r5, [r7, #2]
 800f76a:	5a26      	ldrh	r6, [r4, r0]
 800f76c:	42ae      	cmp	r6, r5
 800f76e:	d017      	beq.n	800f7a0 <udp_recv2+0x44>
 800f770:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f774:	fb0c f505 	mul.w	r5, ip, r5
 800f778:	1d06      	adds	r6, r0, #4
 800f77a:	442e      	add	r6, r5
 800f77c:	4405      	add	r5, r0
 800f77e:	4426      	add	r6, r4
 800f780:	442c      	add	r4, r5
 800f782:	600e      	str	r6, [r1, #0]
 800f784:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f788:	6011      	str	r1, [r2, #0]
 800f78a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f78e:	801a      	strh	r2, [r3, #0]
 800f790:	887b      	ldrh	r3, [r7, #2]
 800f792:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f796:	3301      	adds	r3, #1
 800f798:	f003 0301 	and.w	r3, r3, #1
 800f79c:	807b      	strh	r3, [r7, #2]
 800f79e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7a0:	2000      	movs	r0, #0
 800f7a2:	e7fc      	b.n	800f79e <udp_recv2+0x42>
 800f7a4:	2000b7f4 	strdcs	fp, [r0], -r4

0800f7a8 <udp_send>:
 800f7a8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f7ac:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800f8e4 <udp_send+0x13c>
 800f7b0:	461c      	mov	r4, r3
 800f7b2:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f7b6:	4607      	mov	r7, r0
 800f7b8:	4688      	mov	r8, r1
 800f7ba:	4616      	mov	r6, r2
 800f7bc:	2b00      	cmp	r3, #0
 800f7be:	f000 808e 	beq.w	800f8de <udp_send+0x136>
 800f7c2:	1c63      	adds	r3, r4, #1
 800f7c4:	d144      	bne.n	800f850 <udp_send+0xa8>
 800f7c6:	4848      	ldr	r0, [pc, #288]	; (800f8e8 <udp_send+0x140>)
 800f7c8:	2107      	movs	r1, #7
 800f7ca:	4602      	mov	r2, r0
 800f7cc:	23ff      	movs	r3, #255	; 0xff
 800f7ce:	e001      	b.n	800f7d4 <udp_send+0x2c>
 800f7d0:	f800 3b01 	strb.w	r3, [r0], #1
 800f7d4:	3901      	subs	r1, #1
 800f7d6:	d1fb      	bne.n	800f7d0 <udp_send+0x28>
 800f7d8:	7793      	strb	r3, [r2, #30]
 800f7da:	77d3      	strb	r3, [r2, #31]
 800f7dc:	f882 3020 	strb.w	r3, [r2, #32]
 800f7e0:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 800f7e4:	2500      	movs	r5, #0
 800f7e6:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f8ec <udp_send+0x144>
 800f7ea:	4c3f      	ldr	r4, [pc, #252]	; (800f8e8 <udp_send+0x140>)
 800f7ec:	f8ba 3000 	ldrh.w	r3, [sl]
 800f7f0:	2114      	movs	r1, #20
 800f7f2:	8263      	strh	r3, [r4, #18]
 800f7f4:	f106 031c 	add.w	r3, r6, #28
 800f7f8:	ba5b      	rev16	r3, r3
 800f7fa:	f104 000e 	add.w	r0, r4, #14
 800f7fe:	8223      	strh	r3, [r4, #16]
 800f800:	7625      	strb	r5, [r4, #24]
 800f802:	7665      	strb	r5, [r4, #25]
 800f804:	f001 ff44 	bl	8011690 <net_chksum>
 800f808:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f80c:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f810:	ba5b      	rev16	r3, r3
 800f812:	8463      	strh	r3, [r4, #34]	; 0x22
 800f814:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f818:	4632      	mov	r2, r6
 800f81a:	ba5b      	rev16	r3, r3
 800f81c:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f81e:	f106 0308 	add.w	r3, r6, #8
 800f822:	ba5b      	rev16	r3, r3
 800f824:	bf28      	it	cs
 800f826:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f82a:	4641      	mov	r1, r8
 800f82c:	8320      	strh	r0, [r4, #24]
 800f82e:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f832:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f834:	f7ff fe58 	bl	800f4e8 <net_memcpy>
 800f838:	4620      	mov	r0, r4
 800f83a:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f83e:	f005 fb2b 	bl	8014e98 <emac_eth_send>
 800f842:	f8ba 3000 	ldrh.w	r3, [sl]
 800f846:	4628      	mov	r0, r5
 800f848:	3301      	adds	r3, #1
 800f84a:	f8aa 3000 	strh.w	r3, [sl]
 800f84e:	e037      	b.n	800f8c0 <udp_send+0x118>
 800f850:	4b27      	ldr	r3, [pc, #156]	; (800f8f0 <udp_send+0x148>)
 800f852:	681b      	ldr	r3, [r3, #0]
 800f854:	43a3      	bics	r3, r4
 800f856:	d10f      	bne.n	800f878 <udp_send+0xd0>
 800f858:	2307      	movs	r3, #7
 800f85a:	21ff      	movs	r1, #255	; 0xff
 800f85c:	4a22      	ldr	r2, [pc, #136]	; (800f8e8 <udp_send+0x140>)
 800f85e:	e001      	b.n	800f864 <udp_send+0xbc>
 800f860:	f802 1b01 	strb.w	r1, [r2], #1
 800f864:	3b01      	subs	r3, #1
 800f866:	d1fb      	bne.n	800f860 <udp_send+0xb8>
 800f868:	2204      	movs	r2, #4
 800f86a:	4822      	ldr	r0, [pc, #136]	; (800f8f4 <udp_send+0x14c>)
 800f86c:	eb0d 0102 	add.w	r1, sp, r2
 800f870:	9401      	str	r4, [sp, #4]
 800f872:	f7ff fe2f 	bl	800f4d4 <memcpy.isra.0>
 800f876:	e7b5      	b.n	800f7e4 <udp_send+0x3c>
 800f878:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f87c:	2be0      	cmp	r3, #224	; 0xe0
 800f87e:	d10e      	bne.n	800f89e <udp_send+0xf6>
 800f880:	491d      	ldr	r1, [pc, #116]	; (800f8f8 <udp_send+0x150>)
 800f882:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f886:	70cb      	strb	r3, [r1, #3]
 800f888:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f88c:	710b      	strb	r3, [r1, #4]
 800f88e:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f892:	2206      	movs	r2, #6
 800f894:	4814      	ldr	r0, [pc, #80]	; (800f8e8 <udp_send+0x140>)
 800f896:	714b      	strb	r3, [r1, #5]
 800f898:	f7ff fe1c 	bl	800f4d4 <memcpy.isra.0>
 800f89c:	e7e4      	b.n	800f868 <udp_send+0xc0>
 800f89e:	4b17      	ldr	r3, [pc, #92]	; (800f8fc <udp_send+0x154>)
 800f8a0:	681b      	ldr	r3, [r3, #0]
 800f8a2:	43a3      	bics	r3, r4
 800f8a4:	d00f      	beq.n	800f8c6 <udp_send+0x11e>
 800f8a6:	4d16      	ldr	r5, [pc, #88]	; (800f900 <udp_send+0x158>)
 800f8a8:	490f      	ldr	r1, [pc, #60]	; (800f8e8 <udp_send+0x140>)
 800f8aa:	6828      	ldr	r0, [r5, #0]
 800f8ac:	f001 faba 	bl	8010e24 <arp_cache_lookup>
 800f8b0:	682b      	ldr	r3, [r5, #0]
 800f8b2:	4298      	cmp	r0, r3
 800f8b4:	d0d8      	beq.n	800f868 <udp_send+0xc0>
 800f8b6:	4813      	ldr	r0, [pc, #76]	; (800f904 <udp_send+0x15c>)
 800f8b8:	f003 f914 	bl	8012ae4 <console_error>
 800f8bc:	f06f 0002 	mvn.w	r0, #2
 800f8c0:	b002      	add	sp, #8
 800f8c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8c6:	4620      	mov	r0, r4
 800f8c8:	4907      	ldr	r1, [pc, #28]	; (800f8e8 <udp_send+0x140>)
 800f8ca:	f001 faab 	bl	8010e24 <arp_cache_lookup>
 800f8ce:	42a0      	cmp	r0, r4
 800f8d0:	d0ca      	beq.n	800f868 <udp_send+0xc0>
 800f8d2:	480d      	ldr	r0, [pc, #52]	; (800f908 <udp_send+0x160>)
 800f8d4:	f003 f906 	bl	8012ae4 <console_error>
 800f8d8:	f06f 0001 	mvn.w	r0, #1
 800f8dc:	e7f0      	b.n	800f8c0 <udp_send+0x118>
 800f8de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f8e2:	e7ed      	b.n	800f8c0 <udp_send+0x118>
 800f8e4:	2000b7d4 	ldrdcs	fp, [r0], -r4
 800f8e8:	20011494 	mulcs	r1, r4, r4
 800f8ec:	2000b7d0 	ldrdcs	fp, [r0], -r0
 800f8f0:	2000b7c4 	andcs	fp, r0, r4, asr #15
 800f8f4:	200114b2 			; <UNDEFINED> instruction: 0x200114b2
 800f8f8:	20000004 	andcs	r0, r0, r4
 800f8fc:	2000b7cc 	andcs	fp, r0, ip, asr #15
 800f900:	2000b7c8 	andcs	fp, r0, r8, asr #15
 800f904:	0801777a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 800f908:	080177a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp, lr}

0800f90c <strlen>:
 800f90c:	4603      	mov	r3, r0
 800f90e:	461a      	mov	r2, r3
 800f910:	7811      	ldrb	r1, [r2, #0]
 800f912:	3301      	adds	r3, #1
 800f914:	2900      	cmp	r1, #0
 800f916:	d1fa      	bne.n	800f90e <strlen+0x2>
 800f918:	1a10      	subs	r0, r2, r0
 800f91a:	4770      	bx	lr

0800f91c <strcmp>:
 800f91c:	1e43      	subs	r3, r0, #1
 800f91e:	3901      	subs	r1, #1
 800f920:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f924:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f928:	4290      	cmp	r0, r2
 800f92a:	d102      	bne.n	800f932 <strcmp+0x16>
 800f92c:	2800      	cmp	r0, #0
 800f92e:	d1f7      	bne.n	800f920 <strcmp+0x4>
 800f930:	4770      	bx	lr
 800f932:	1a80      	subs	r0, r0, r2
 800f934:	4770      	bx	lr

0800f936 <strcpy.isra.0>:
 800f936:	3801      	subs	r0, #1
 800f938:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f93c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f940:	2b00      	cmp	r3, #0
 800f942:	d1f9      	bne.n	800f938 <strcpy.isra.0+0x2>
 800f944:	4770      	bx	lr

0800f946 <strcat.isra.0>:
 800f946:	b538      	push	{r3, r4, r5, lr}
 800f948:	4604      	mov	r4, r0
 800f94a:	460d      	mov	r5, r1
 800f94c:	f7ff ffde 	bl	800f90c <strlen>
 800f950:	4629      	mov	r1, r5
 800f952:	4420      	add	r0, r4
 800f954:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f958:	f7ff bfed 	b.w	800f936 <strcpy.isra.0>

0800f95c <MDNS::MDNS()>:
 800f95c:	b513      	push	{r0, r1, r4, lr}
 800f95e:	4604      	mov	r4, r0
 800f960:	a901      	add	r1, sp, #4
 800f962:	4804      	ldr	r0, [pc, #16]	; (800f974 <MDNS::MDNS()+0x18>)
 800f964:	f003 fa3c 	bl	8012de0 <inet_aton>
 800f968:	4620      	mov	r0, r4
 800f96a:	4b03      	ldr	r3, [pc, #12]	; (800f978 <MDNS::MDNS()+0x1c>)
 800f96c:	9a01      	ldr	r2, [sp, #4]
 800f96e:	601a      	str	r2, [r3, #0]
 800f970:	b002      	add	sp, #8
 800f972:	bd10      	pop	{r4, pc}
 800f974:	080177c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, ip, sp, lr}
 800f978:	20011a88 	andcs	r1, r1, r8, lsl #21

0800f97c <MDNS::SetName(char const*)>:
 800f97c:	b538      	push	{r3, r4, r5, lr}
 800f97e:	4d0b      	ldr	r5, [pc, #44]	; (800f9ac <MDNS::SetName(char const*)+0x30>)
 800f980:	460c      	mov	r4, r1
 800f982:	6828      	ldr	r0, [r5, #0]
 800f984:	b108      	cbz	r0, 800f98a <MDNS::SetName(char const*)+0xe>
 800f986:	f003 fa0f 	bl	8012da8 <operator delete[](void*)>
 800f98a:	4620      	mov	r0, r4
 800f98c:	f7ff ffbe 	bl	800f90c <strlen>
 800f990:	3007      	adds	r0, #7
 800f992:	f003 fa0d 	bl	8012db0 <operator new[](unsigned int)>
 800f996:	4621      	mov	r1, r4
 800f998:	6028      	str	r0, [r5, #0]
 800f99a:	f7ff ffcc 	bl	800f936 <strcpy.isra.0>
 800f99e:	6828      	ldr	r0, [r5, #0]
 800f9a0:	4903      	ldr	r1, [pc, #12]	; (800f9b0 <MDNS::SetName(char const*)+0x34>)
 800f9a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f9a6:	f7ff bfce 	b.w	800f946 <strcat.isra.0>
 800f9aa:	bf00      	nop
 800f9ac:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8
 800f9b0:	080177d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp, lr}

0800f9b4 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f9b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f9b8:	f04f 0e00 	mov.w	lr, #0
 800f9bc:	262e      	movs	r6, #46	; 0x2e
 800f9be:	4675      	mov	r5, lr
 800f9c0:	4694      	mov	ip, r2
 800f9c2:	4f1d      	ldr	r7, [pc, #116]	; (800fa38 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800f9c4:	4a1d      	ldr	r2, [pc, #116]	; (800fa3c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800f9c6:	780b      	ldrb	r3, [r1, #0]
 800f9c8:	1c68      	adds	r0, r5, #1
 800f9ca:	b383      	cbz	r3, 800fa2e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800f9cc:	2b3f      	cmp	r3, #63	; 0x3f
 800f9ce:	d91d      	bls.n	800fa0c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800f9d0:	f1be 0f00 	cmp.w	lr, #0
 800f9d4:	bf08      	it	eq
 800f9d6:	4605      	moveq	r5, r0
 800f9d8:	2000      	movs	r0, #0
 800f9da:	7849      	ldrb	r1, [r1, #1]
 800f9dc:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800f9e0:	430b      	orrs	r3, r1
 800f9e2:	6811      	ldr	r1, [r2, #0]
 800f9e4:	5ccc      	ldrb	r4, [r1, r3]
 800f9e6:	3301      	adds	r3, #1
 800f9e8:	440b      	add	r3, r1
 800f9ea:	42a0      	cmp	r0, r4
 800f9ec:	5c19      	ldrb	r1, [r3, r0]
 800f9ee:	d309      	bcc.n	800fa04 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800f9f0:	f04f 0e01 	mov.w	lr, #1
 800f9f4:	1919      	adds	r1, r3, r4
 800f9f6:	4464      	add	r4, ip
 800f9f8:	780b      	ldrb	r3, [r1, #0]
 800f9fa:	b10b      	cbz	r3, 800fa00 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800f9fc:	f804 6b01 	strb.w	r6, [r4], #1
 800fa00:	46a4      	mov	ip, r4
 800fa02:	e7e0      	b.n	800f9c6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800fa04:	f80c 1000 	strb.w	r1, [ip, r0]
 800fa08:	3001      	adds	r0, #1
 800fa0a:	e7ee      	b.n	800f9ea <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800fa0c:	4688      	mov	r8, r1
 800fa0e:	eb0c 0403 	add.w	r4, ip, r3
 800fa12:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800fa16:	f80c 9b01 	strb.w	r9, [ip], #1
 800fa1a:	4564      	cmp	r4, ip
 800fa1c:	d1f9      	bne.n	800fa12 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800fa1e:	f103 0c01 	add.w	ip, r3, #1
 800fa22:	4461      	add	r1, ip
 800fa24:	f1be 0f00 	cmp.w	lr, #0
 800fa28:	d1e6      	bne.n	800f9f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800fa2a:	18c5      	adds	r5, r0, r3
 800fa2c:	e7e4      	b.n	800f9f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800fa2e:	f88c 3000 	strb.w	r3, [ip]
 800fa32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa36:	bf00      	nop
 800fa38:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800fa3c:	20011ebc 			; <UNDEFINED> instruction: 0x20011ebc

0800fa40 <MDNS::FindFirstDotFromRight(char const*) const>:
 800fa40:	b510      	push	{r4, lr}
 800fa42:	4608      	mov	r0, r1
 800fa44:	460c      	mov	r4, r1
 800fa46:	f7ff ff61 	bl	800f90c <strlen>
 800fa4a:	4420      	add	r0, r4
 800fa4c:	42a0      	cmp	r0, r4
 800fa4e:	d903      	bls.n	800fa58 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800fa50:	f810 3901 	ldrb.w	r3, [r0], #-1
 800fa54:	2b2e      	cmp	r3, #46	; 0x2e
 800fa56:	d1f9      	bne.n	800fa4c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800fa58:	3001      	adds	r0, #1
 800fa5a:	bd10      	pop	{r4, pc}

0800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>:
 800fa5c:	4610      	mov	r0, r2
 800fa5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa60:	460f      	mov	r7, r1
 800fa62:	1c44      	adds	r4, r0, #1
 800fa64:	463d      	mov	r5, r7
 800fa66:	f817 6b01 	ldrb.w	r6, [r7], #1
 800fa6a:	b126      	cbz	r6, 800fa76 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800fa6c:	2e2e      	cmp	r6, #46	; 0x2e
 800fa6e:	d002      	beq.n	800fa76 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800fa70:	f804 6b01 	strb.w	r6, [r4], #1
 800fa74:	e7f6      	b.n	800fa64 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800fa76:	1a69      	subs	r1, r5, r1
 800fa78:	7001      	strb	r1, [r0, #0]
 800fa7a:	7829      	ldrb	r1, [r5, #0]
 800fa7c:	b921      	cbnz	r1, 800fa88 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800fa7e:	b10b      	cbz	r3, 800fa84 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800fa80:	f804 1b01 	strb.w	r1, [r4], #1
 800fa84:	1aa0      	subs	r0, r4, r2
 800fa86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa88:	4620      	mov	r0, r4
 800fa8a:	1c69      	adds	r1, r5, #1
 800fa8c:	e7e8      	b.n	800fa60 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800fa90 <MDNS::CreateAnswerLocalIpAddress()>:
 800fa90:	2384      	movs	r3, #132	; 0x84
 800fa92:	b510      	push	{r4, lr}
 800fa94:	4c0f      	ldr	r4, [pc, #60]	; (800fad4 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800fa96:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800fa9a:	80e3      	strh	r3, [r4, #6]
 800fa9c:	2300      	movs	r3, #0
 800fa9e:	490e      	ldr	r1, [pc, #56]	; (800fad8 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800faa0:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800faa4:	6809      	ldr	r1, [r1, #0]
 800faa6:	f104 0210 	add.w	r2, r4, #16
 800faaa:	2301      	movs	r3, #1
 800faac:	f7ff ffd6 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fab0:	490a      	ldr	r1, [pc, #40]	; (800fadc <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800fab2:	1813      	adds	r3, r2, r0
 800fab4:	5011      	str	r1, [r2, r0]
 800fab6:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800faba:	605a      	str	r2, [r3, #4]
 800fabc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800fac0:	811a      	strh	r2, [r3, #8]
 800fac2:	4a07      	ldr	r2, [pc, #28]	; (800fae0 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800fac4:	6812      	ldr	r2, [r2, #0]
 800fac6:	6912      	ldr	r2, [r2, #16]
 800fac8:	f8c3 200a 	str.w	r2, [r3, #10]
 800facc:	1b1b      	subs	r3, r3, r4
 800face:	330a      	adds	r3, #10
 800fad0:	6023      	str	r3, [r4, #0]
 800fad2:	bd10      	pop	{r4, pc}
 800fad4:	20011a8c 	andcs	r1, r1, ip, lsl #21
 800fad8:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8
 800fadc:	01800100 	orreq	r0, r0, r0, lsl #2
 800fae0:	20011ec0 	andcs	r1, r1, r0, asr #29

0800fae4 <MDNS::Start()>:
 800fae4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fae6:	4c1e      	ldr	r4, [pc, #120]	; (800fb60 <MDNS::Start()+0x7c>)
 800fae8:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800faec:	4605      	mov	r5, r0
 800faee:	6820      	ldr	r0, [r4, #0]
 800faf0:	f000 fb2a 	bl	8010148 <Network::Begin(unsigned short)>
 800faf4:	4e1b      	ldr	r6, [pc, #108]	; (800fb64 <MDNS::Start()+0x80>)
 800faf6:	4f1c      	ldr	r7, [pc, #112]	; (800fb68 <MDNS::Start()+0x84>)
 800faf8:	4601      	mov	r1, r0
 800fafa:	6030      	str	r0, [r6, #0]
 800fafc:	683a      	ldr	r2, [r7, #0]
 800fafe:	6820      	ldr	r0, [r4, #0]
 800fb00:	f000 fb33 	bl	801016a <Network::JoinGroup(int, unsigned int)>
 800fb04:	4b19      	ldr	r3, [pc, #100]	; (800fb6c <MDNS::Start()+0x88>)
 800fb06:	681b      	ldr	r3, [r3, #0]
 800fb08:	b923      	cbnz	r3, 800fb14 <MDNS::Start()+0x30>
 800fb0a:	6821      	ldr	r1, [r4, #0]
 800fb0c:	4628      	mov	r0, r5
 800fb0e:	311c      	adds	r1, #28
 800fb10:	f7ff ff34 	bl	800f97c <MDNS::SetName(char const*)>
 800fb14:	4628      	mov	r0, r5
 800fb16:	f7ff ffbb 	bl	800fa90 <MDNS::CreateAnswerLocalIpAddress()>
 800fb1a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fb1e:	4914      	ldr	r1, [pc, #80]	; (800fb70 <MDNS::Start()+0x8c>)
 800fb20:	7830      	ldrb	r0, [r6, #0]
 800fb22:	f851 2b04 	ldr.w	r2, [r1], #4
 800fb26:	9300      	str	r3, [sp, #0]
 800fb28:	b292      	uxth	r2, r2
 800fb2a:	683b      	ldr	r3, [r7, #0]
 800fb2c:	f7ff fe3c 	bl	800f7a8 <udp_send>
 800fb30:	223f      	movs	r2, #63	; 0x3f
 800fb32:	6820      	ldr	r0, [r4, #0]
 800fb34:	4c0f      	ldr	r4, [pc, #60]	; (800fb74 <MDNS::Start()+0x90>)
 800fb36:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800fb3a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800fb3e:	b929      	cbnz	r1, 800fb4c <MDNS::Start()+0x68>
 800fb40:	441a      	add	r2, r3
 800fb42:	4293      	cmp	r3, r2
 800fb44:	d006      	beq.n	800fb54 <MDNS::Start()+0x70>
 800fb46:	f803 1b01 	strb.w	r1, [r3], #1
 800fb4a:	e7fa      	b.n	800fb42 <MDNS::Start()+0x5e>
 800fb4c:	3a01      	subs	r2, #1
 800fb4e:	f803 1b01 	strb.w	r1, [r3], #1
 800fb52:	d1f2      	bne.n	800fb3a <MDNS::Start()+0x56>
 800fb54:	2300      	movs	r3, #0
 800fb56:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800fb5a:	b003      	add	sp, #12
 800fb5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb5e:	bf00      	nop
 800fb60:	20011ec0 	andcs	r1, r1, r0, asr #29
 800fb64:	2000000c 	andcs	r0, r0, ip
 800fb68:	20011a88 	andcs	r1, r1, r8, lsl #21
 800fb6c:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8
 800fb70:	20011a8c 	andcs	r1, r1, ip, lsl #21
 800fb74:	080177d0 	stmdaeq	r1, {r4, r6, r7, r8, r9, sl, ip, sp, lr}

0800fb78 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800fb78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb7c:	4c1b      	ldr	r4, [pc, #108]	; (800fbec <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800fb7e:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800fb82:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800fb86:	2300      	movs	r3, #0
 800fb88:	f854 100c 	ldr.w	r1, [r4, ip]
 800fb8c:	4607      	mov	r7, r0
 800fb8e:	f7ff ff65 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb92:	2301      	movs	r3, #1
 800fb94:	7bac      	ldrb	r4, [r5, #14]
 800fb96:	4616      	mov	r6, r2
 800fb98:	4915      	ldr	r1, [pc, #84]	; (800fbf0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800fb9a:	4402      	add	r2, r0
 800fb9c:	4815      	ldr	r0, [pc, #84]	; (800fbf4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800fb9e:	429c      	cmp	r4, r3
 800fba0:	bf18      	it	ne
 800fba2:	4601      	movne	r1, r0
 800fba4:	4638      	mov	r0, r7
 800fba6:	f7ff ff59 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fbaa:	4b13      	ldr	r3, [pc, #76]	; (800fbf8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800fbac:	1814      	adds	r4, r2, r0
 800fbae:	5013      	str	r3, [r2, r0]
 800fbb0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fbb4:	6063      	str	r3, [r4, #4]
 800fbb6:	4b11      	ldr	r3, [pc, #68]	; (800fbfc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800fbb8:	f8d3 8000 	ldr.w	r8, [r3]
 800fbbc:	4640      	mov	r0, r8
 800fbbe:	f7ff fea5 	bl	800f90c <strlen>
 800fbc2:	f100 0308 	add.w	r3, r0, #8
 800fbc6:	ba5b      	rev16	r3, r3
 800fbc8:	8123      	strh	r3, [r4, #8]
 800fbca:	2300      	movs	r3, #0
 800fbcc:	f8c4 300a 	str.w	r3, [r4, #10]
 800fbd0:	89ab      	ldrh	r3, [r5, #12]
 800fbd2:	f104 0210 	add.w	r2, r4, #16
 800fbd6:	ba5b      	rev16	r3, r3
 800fbd8:	81e3      	strh	r3, [r4, #14]
 800fbda:	4641      	mov	r1, r8
 800fbdc:	2301      	movs	r3, #1
 800fbde:	4638      	mov	r0, r7
 800fbe0:	f7ff ff3c 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fbe4:	4410      	add	r0, r2
 800fbe6:	1b80      	subs	r0, r0, r6
 800fbe8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fbec:	20011c90 	mulcs	r1, r0, ip
 800fbf0:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 800fbf4:	080177e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800fbf8:	01802100 	orreq	r2, r0, r0, lsl #2
 800fbfc:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8

0800fc00 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800fc00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc04:	4e19      	ldr	r6, [pc, #100]	; (800fc6c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800fc06:	010f      	lsls	r7, r1, #4
 800fc08:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800fc0c:	2300      	movs	r3, #0
 800fc0e:	59f1      	ldr	r1, [r6, r7]
 800fc10:	4604      	mov	r4, r0
 800fc12:	f7ff ff23 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc16:	2301      	movs	r3, #1
 800fc18:	7bae      	ldrb	r6, [r5, #14]
 800fc1a:	4690      	mov	r8, r2
 800fc1c:	4914      	ldr	r1, [pc, #80]	; (800fc70 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800fc1e:	4402      	add	r2, r0
 800fc20:	4814      	ldr	r0, [pc, #80]	; (800fc74 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800fc22:	429e      	cmp	r6, r3
 800fc24:	bf18      	it	ne
 800fc26:	4601      	movne	r1, r0
 800fc28:	4620      	mov	r0, r4
 800fc2a:	f7ff ff17 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc2e:	4b12      	ldr	r3, [pc, #72]	; (800fc78 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800fc30:	1816      	adds	r6, r2, r0
 800fc32:	5013      	str	r3, [r2, r0]
 800fc34:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fc38:	68a8      	ldr	r0, [r5, #8]
 800fc3a:	6073      	str	r3, [r6, #4]
 800fc3c:	f106 040b 	add.w	r4, r6, #11
 800fc40:	b938      	cbnz	r0, 800fc52 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800fc42:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fc46:	72b0      	strb	r0, [r6, #10]
 800fc48:	8133      	strh	r3, [r6, #8]
 800fc4a:	eba4 0008 	sub.w	r0, r4, r8
 800fc4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc52:	f7ff fe5b 	bl	800f90c <strlen>
 800fc56:	4607      	mov	r7, r0
 800fc58:	1c43      	adds	r3, r0, #1
 800fc5a:	72b0      	strb	r0, [r6, #10]
 800fc5c:	ba5b      	rev16	r3, r3
 800fc5e:	4620      	mov	r0, r4
 800fc60:	68a9      	ldr	r1, [r5, #8]
 800fc62:	8133      	strh	r3, [r6, #8]
 800fc64:	f7ff fe67 	bl	800f936 <strcpy.isra.0>
 800fc68:	443c      	add	r4, r7
 800fc6a:	e7ee      	b.n	800fc4a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800fc6c:	20011c90 	mulcs	r1, r0, ip
 800fc70:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 800fc74:	080177e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800fc78:	01801000 	orreq	r1, r0, r0

0800fc7c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800fc7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fc80:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fce4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800fc84:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800fc88:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800fc8c:	6869      	ldr	r1, [r5, #4]
 800fc8e:	2301      	movs	r3, #1
 800fc90:	4607      	mov	r7, r0
 800fc92:	f7ff fee3 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc96:	4b14      	ldr	r3, [pc, #80]	; (800fce8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800fc98:	f858 8009 	ldr.w	r8, [r8, r9]
 800fc9c:	5013      	str	r3, [r2, r0]
 800fc9e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fca2:	1816      	adds	r6, r2, r0
 800fca4:	6073      	str	r3, [r6, #4]
 800fca6:	4640      	mov	r0, r8
 800fca8:	4614      	mov	r4, r2
 800fcaa:	f7ff fe2f 	bl	800f90c <strlen>
 800fcae:	f100 030d 	add.w	r3, r0, #13
 800fcb2:	ba5b      	rev16	r3, r3
 800fcb4:	4641      	mov	r1, r8
 800fcb6:	8133      	strh	r3, [r6, #8]
 800fcb8:	f106 020a 	add.w	r2, r6, #10
 800fcbc:	2300      	movs	r3, #0
 800fcbe:	4638      	mov	r0, r7
 800fcc0:	f7ff fecc 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fcc4:	2301      	movs	r3, #1
 800fcc6:	4402      	add	r2, r0
 800fcc8:	7bad      	ldrb	r5, [r5, #14]
 800fcca:	4808      	ldr	r0, [pc, #32]	; (800fcec <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800fccc:	4908      	ldr	r1, [pc, #32]	; (800fcf0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800fcce:	429d      	cmp	r5, r3
 800fcd0:	bf18      	it	ne
 800fcd2:	4601      	movne	r1, r0
 800fcd4:	4638      	mov	r0, r7
 800fcd6:	f7ff fec1 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fcda:	4410      	add	r0, r2
 800fcdc:	1b00      	subs	r0, r0, r4
 800fcde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fce2:	bf00      	nop
 800fce4:	20011c90 	mulcs	r1, r0, ip
 800fce8:	01000c00 	tsteq	r0, r0, lsl #24
 800fcec:	080177e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800fcf0:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}

0800fcf4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800fcf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fcf6:	460f      	mov	r7, r1
 800fcf8:	2301      	movs	r3, #1
 800fcfa:	490f      	ldr	r1, [pc, #60]	; (800fd38 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800fcfc:	4606      	mov	r6, r0
 800fcfe:	f7ff fead 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fd02:	4b0e      	ldr	r3, [pc, #56]	; (800fd3c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800fd04:	490e      	ldr	r1, [pc, #56]	; (800fd40 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800fd06:	5013      	str	r3, [r2, r0]
 800fd08:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fd0c:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800fd10:	684f      	ldr	r7, [r1, #4]
 800fd12:	1815      	adds	r5, r2, r0
 800fd14:	606b      	str	r3, [r5, #4]
 800fd16:	4638      	mov	r0, r7
 800fd18:	4614      	mov	r4, r2
 800fd1a:	f7ff fdf7 	bl	800f90c <strlen>
 800fd1e:	1c83      	adds	r3, r0, #2
 800fd20:	ba5b      	rev16	r3, r3
 800fd22:	812b      	strh	r3, [r5, #8]
 800fd24:	f105 020a 	add.w	r2, r5, #10
 800fd28:	2301      	movs	r3, #1
 800fd2a:	4639      	mov	r1, r7
 800fd2c:	4630      	mov	r0, r6
 800fd2e:	f7ff fe95 	bl	800fa5c <MDNS::WriteDnsName(char const*, char*, bool)>
 800fd32:	4410      	add	r0, r2
 800fd34:	1b00      	subs	r0, r0, r4
 800fd36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fd38:	080177d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800fd3c:	01000c00 	tsteq	r0, r0, lsl #24
 800fd40:	20011c90 	mulcs	r1, r0, ip

0800fd44 <MDNS::CreateMDNSMessage(unsigned int)>:
 800fd44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd46:	2384      	movs	r3, #132	; 0x84
 800fd48:	4d19      	ldr	r5, [pc, #100]	; (800fdb0 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800fd4a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800fd4e:	80eb      	strh	r3, [r5, #6]
 800fd50:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fd54:	f105 0410 	add.w	r4, r5, #16
 800fd58:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800fd5c:	4622      	mov	r2, r4
 800fd5e:	4606      	mov	r6, r0
 800fd60:	460f      	mov	r7, r1
 800fd62:	f7ff ff09 	bl	800fb78 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800fd66:	4404      	add	r4, r0
 800fd68:	4622      	mov	r2, r4
 800fd6a:	4639      	mov	r1, r7
 800fd6c:	4630      	mov	r0, r6
 800fd6e:	f7ff ff47 	bl	800fc00 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800fd72:	4404      	add	r4, r0
 800fd74:	4622      	mov	r2, r4
 800fd76:	4639      	mov	r1, r7
 800fd78:	4630      	mov	r0, r6
 800fd7a:	f7ff ffbb 	bl	800fcf4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800fd7e:	4404      	add	r4, r0
 800fd80:	4622      	mov	r2, r4
 800fd82:	4639      	mov	r1, r7
 800fd84:	4630      	mov	r0, r6
 800fd86:	f7ff ff79 	bl	800fc7c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800fd8a:	4b0a      	ldr	r3, [pc, #40]	; (800fdb4 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800fd8c:	4404      	add	r4, r0
 800fd8e:	f853 2b10 	ldr.w	r2, [r3], #16
 800fd92:	1e60      	subs	r0, r4, #1
 800fd94:	3a0c      	subs	r2, #12
 800fd96:	4611      	mov	r1, r2
 800fd98:	3901      	subs	r1, #1
 800fd9a:	d304      	bcc.n	800fda6 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800fd9c:	f813 6b01 	ldrb.w	r6, [r3], #1
 800fda0:	f800 6f01 	strb.w	r6, [r0, #1]!
 800fda4:	e7f8      	b.n	800fd98 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800fda6:	4414      	add	r4, r2
 800fda8:	4a03      	ldr	r2, [pc, #12]	; (800fdb8 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800fdaa:	1aa4      	subs	r4, r4, r2
 800fdac:	602c      	str	r4, [r5, #0]
 800fdae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fdb0:	20011cb4 			; <UNDEFINED> instruction: 0x20011cb4
 800fdb4:	20011a8c 	andcs	r1, r1, ip, lsl #21
 800fdb8:	20011cb8 			; <UNDEFINED> instruction: 0x20011cb8

0800fdbc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800fdbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fdc0:	4d3f      	ldr	r5, [pc, #252]	; (800fec0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 800fdc2:	b085      	sub	sp, #20
 800fdc4:	682c      	ldr	r4, [r5, #0]
 800fdc6:	4680      	mov	r8, r0
 800fdc8:	460f      	mov	r7, r1
 800fdca:	4616      	mov	r6, r2
 800fdcc:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800fdd0:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800fdd4:	b11c      	cbz	r4, 800fdde <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800fdd6:	692a      	ldr	r2, [r5, #16]
 800fdd8:	2a00      	cmp	r2, #0
 800fdda:	d16d      	bne.n	800feb8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 800fddc:	2401      	movs	r4, #1
 800fdde:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800fde2:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800fde6:	8193      	strh	r3, [r2, #12]
 800fde8:	f882 b00e 	strb.w	fp, [r2, #14]
 800fdec:	2f00      	cmp	r7, #0
 800fdee:	d153      	bne.n	800fe98 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 800fdf0:	4630      	mov	r0, r6
 800fdf2:	f7ff fd8b 	bl	800f90c <strlen>
 800fdf6:	4f33      	ldr	r7, [pc, #204]	; (800fec4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800fdf8:	683b      	ldr	r3, [r7, #0]
 800fdfa:	331c      	adds	r3, #28
 800fdfc:	4418      	add	r0, r3
 800fdfe:	f7ff fd85 	bl	800f90c <strlen>
 800fe02:	3001      	adds	r0, #1
 800fe04:	f002 ffd4 	bl	8012db0 <operator new[](unsigned int)>
 800fe08:	6839      	ldr	r1, [r7, #0]
 800fe0a:	f845 0009 	str.w	r0, [r5, r9]
 800fe0e:	311c      	adds	r1, #28
 800fe10:	f7ff fd91 	bl	800f936 <strcpy.isra.0>
 800fe14:	f855 0009 	ldr.w	r0, [r5, r9]
 800fe18:	4631      	mov	r1, r6
 800fe1a:	f7ff fd94 	bl	800f946 <strcat.isra.0>
 800fe1e:	4631      	mov	r1, r6
 800fe20:	4640      	mov	r0, r8
 800fe22:	f7ff fe0d 	bl	800fa40 <MDNS::FindFirstDotFromRight(char const*) const>
 800fe26:	eb05 0709 	add.w	r7, r5, r9
 800fe2a:	4605      	mov	r5, r0
 800fe2c:	f7ff fd6e 	bl	800f90c <strlen>
 800fe30:	300d      	adds	r0, #13
 800fe32:	f002 ffbd 	bl	8012db0 <operator new[](unsigned int)>
 800fe36:	4629      	mov	r1, r5
 800fe38:	6078      	str	r0, [r7, #4]
 800fe3a:	f7ff fd7c 	bl	800f936 <strcpy.isra.0>
 800fe3e:	4922      	ldr	r1, [pc, #136]	; (800fec8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fe40:	6878      	ldr	r0, [r7, #4]
 800fe42:	f7ff fd80 	bl	800f946 <strcat.isra.0>
 800fe46:	4921      	ldr	r1, [pc, #132]	; (800fecc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800fe48:	4b21      	ldr	r3, [pc, #132]	; (800fed0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800fe4a:	6878      	ldr	r0, [r7, #4]
 800fe4c:	f1bb 0f01 	cmp.w	fp, #1
 800fe50:	bf18      	it	ne
 800fe52:	4619      	movne	r1, r3
 800fe54:	f7ff fd77 	bl	800f946 <strcat.isra.0>
 800fe58:	f1ba 0f00 	cmp.w	sl, #0
 800fe5c:	d009      	beq.n	800fe72 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 800fe5e:	4650      	mov	r0, sl
 800fe60:	f7ff fd54 	bl	800f90c <strlen>
 800fe64:	3001      	adds	r0, #1
 800fe66:	f002 ffa3 	bl	8012db0 <operator new[](unsigned int)>
 800fe6a:	4651      	mov	r1, sl
 800fe6c:	60b8      	str	r0, [r7, #8]
 800fe6e:	f7ff fd62 	bl	800f936 <strcpy.isra.0>
 800fe72:	4621      	mov	r1, r4
 800fe74:	4640      	mov	r0, r8
 800fe76:	f7ff ff65 	bl	800fd44 <MDNS::CreateMDNSMessage(unsigned int)>
 800fe7a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fe7e:	4915      	ldr	r1, [pc, #84]	; (800fed4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800fe80:	4815      	ldr	r0, [pc, #84]	; (800fed8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800fe82:	f851 2b04 	ldr.w	r2, [r1], #4
 800fe86:	9300      	str	r3, [sp, #0]
 800fe88:	4b14      	ldr	r3, [pc, #80]	; (800fedc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800fe8a:	7800      	ldrb	r0, [r0, #0]
 800fe8c:	681b      	ldr	r3, [r3, #0]
 800fe8e:	b292      	uxth	r2, r2
 800fe90:	f7ff fc8a 	bl	800f7a8 <udp_send>
 800fe94:	2001      	movs	r0, #1
 800fe96:	e010      	b.n	800feba <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800fe98:	4638      	mov	r0, r7
 800fe9a:	f7ff fd37 	bl	800f90c <strlen>
 800fe9e:	9003      	str	r0, [sp, #12]
 800fea0:	4630      	mov	r0, r6
 800fea2:	f7ff fd33 	bl	800f90c <strlen>
 800fea6:	9b03      	ldr	r3, [sp, #12]
 800fea8:	4418      	add	r0, r3
 800feaa:	3001      	adds	r0, #1
 800feac:	f002 ff80 	bl	8012db0 <operator new[](unsigned int)>
 800feb0:	4639      	mov	r1, r7
 800feb2:	f845 0009 	str.w	r0, [r5, r9]
 800feb6:	e7ab      	b.n	800fe10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 800feb8:	2000      	movs	r0, #0
 800feba:	b005      	add	sp, #20
 800febc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fec0:	20011c90 	mulcs	r1, r0, ip
 800fec4:	20011ec0 	andcs	r1, r1, r0, asr #29
 800fec8:	08015da7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, fp, ip, lr}
 800fecc:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 800fed0:	080177e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800fed4:	20011cb4 			; <UNDEFINED> instruction: 0x20011cb4
 800fed8:	2000000c 	andcs	r0, r0, ip
 800fedc:	20011a88 	andcs	r1, r1, r8, lsl #21

0800fee0 <MDNS::HandleRequest(unsigned short)>:
 800fee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fee4:	4605      	mov	r5, r0
 800fee6:	2700      	movs	r7, #0
 800fee8:	f04f 080c 	mov.w	r8, #12
 800feec:	b0c5      	sub	sp, #276	; 0x114
 800feee:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800ffb4 <MDNS::HandleRequest(unsigned short)+0xd4>
 800fef2:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800ffb8 <MDNS::HandleRequest(unsigned short)+0xd8>
 800fef6:	9103      	str	r1, [sp, #12]
 800fef8:	9b03      	ldr	r3, [sp, #12]
 800fefa:	42bb      	cmp	r3, r7
 800fefc:	d956      	bls.n	800ffac <MDNS::HandleRequest(unsigned short)+0xcc>
 800fefe:	f8da 1000 	ldr.w	r1, [sl]
 800ff02:	aa04      	add	r2, sp, #16
 800ff04:	4441      	add	r1, r8
 800ff06:	4628      	mov	r0, r5
 800ff08:	f7ff fd54 	bl	800f9b4 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800ff0c:	f8da 2000 	ldr.w	r2, [sl]
 800ff10:	4440      	add	r0, r8
 800ff12:	1813      	adds	r3, r2, r0
 800ff14:	885b      	ldrh	r3, [r3, #2]
 800ff16:	f100 0804 	add.w	r8, r0, #4
 800ff1a:	ba5b      	rev16	r3, r3
 800ff1c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ff20:	2b01      	cmp	r3, #1
 800ff22:	d13e      	bne.n	800ffa2 <MDNS::HandleRequest(unsigned short)+0xc2>
 800ff24:	5a14      	ldrh	r4, [r2, r0]
 800ff26:	4b25      	ldr	r3, [pc, #148]	; (800ffbc <MDNS::HandleRequest(unsigned short)+0xdc>)
 800ff28:	ba64      	rev16	r4, r4
 800ff2a:	6818      	ldr	r0, [r3, #0]
 800ff2c:	a904      	add	r1, sp, #16
 800ff2e:	b2a4      	uxth	r4, r4
 800ff30:	f7ff fcf4 	bl	800f91c <strcmp>
 800ff34:	b970      	cbnz	r0, 800ff54 <MDNS::HandleRequest(unsigned short)+0x74>
 800ff36:	2c01      	cmp	r4, #1
 800ff38:	d10c      	bne.n	800ff54 <MDNS::HandleRequest(unsigned short)+0x74>
 800ff3a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ff3e:	4920      	ldr	r1, [pc, #128]	; (800ffc0 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ff40:	4820      	ldr	r0, [pc, #128]	; (800ffc4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ff42:	f851 2b04 	ldr.w	r2, [r1], #4
 800ff46:	9300      	str	r3, [sp, #0]
 800ff48:	4b1f      	ldr	r3, [pc, #124]	; (800ffc8 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800ff4a:	7800      	ldrb	r0, [r0, #0]
 800ff4c:	681b      	ldr	r3, [r3, #0]
 800ff4e:	b292      	uxth	r2, r2
 800ff50:	f7ff fc2a 	bl	800f7a8 <udp_send>
 800ff54:	481d      	ldr	r0, [pc, #116]	; (800ffcc <MDNS::HandleRequest(unsigned short)+0xec>)
 800ff56:	a904      	add	r1, sp, #16
 800ff58:	f7ff fce0 	bl	800f91c <strcmp>
 800ff5c:	f04f 0900 	mov.w	r9, #0
 800ff60:	4e1b      	ldr	r6, [pc, #108]	; (800ffd0 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800ff62:	9002      	str	r0, [sp, #8]
 800ff64:	6833      	ldr	r3, [r6, #0]
 800ff66:	b1c3      	cbz	r3, 800ff9a <MDNS::HandleRequest(unsigned short)+0xba>
 800ff68:	9b02      	ldr	r3, [sp, #8]
 800ff6a:	b123      	cbz	r3, 800ff76 <MDNS::HandleRequest(unsigned short)+0x96>
 800ff6c:	6870      	ldr	r0, [r6, #4]
 800ff6e:	a904      	add	r1, sp, #16
 800ff70:	f7ff fcd4 	bl	800f91c <strcmp>
 800ff74:	b988      	cbnz	r0, 800ff9a <MDNS::HandleRequest(unsigned short)+0xba>
 800ff76:	2c0c      	cmp	r4, #12
 800ff78:	d10f      	bne.n	800ff9a <MDNS::HandleRequest(unsigned short)+0xba>
 800ff7a:	4649      	mov	r1, r9
 800ff7c:	4628      	mov	r0, r5
 800ff7e:	f7ff fee1 	bl	800fd44 <MDNS::CreateMDNSMessage(unsigned int)>
 800ff82:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ff86:	480f      	ldr	r0, [pc, #60]	; (800ffc4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ff88:	9300      	str	r3, [sp, #0]
 800ff8a:	4b0f      	ldr	r3, [pc, #60]	; (800ffc8 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800ff8c:	f8bb 2000 	ldrh.w	r2, [fp]
 800ff90:	681b      	ldr	r3, [r3, #0]
 800ff92:	4910      	ldr	r1, [pc, #64]	; (800ffd4 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800ff94:	7800      	ldrb	r0, [r0, #0]
 800ff96:	f7ff fc07 	bl	800f7a8 <udp_send>
 800ff9a:	3610      	adds	r6, #16
 800ff9c:	f1b9 0f00 	cmp.w	r9, #0
 800ffa0:	d001      	beq.n	800ffa6 <MDNS::HandleRequest(unsigned short)+0xc6>
 800ffa2:	3701      	adds	r7, #1
 800ffa4:	e7a8      	b.n	800fef8 <MDNS::HandleRequest(unsigned short)+0x18>
 800ffa6:	f04f 0901 	mov.w	r9, #1
 800ffaa:	e7db      	b.n	800ff64 <MDNS::HandleRequest(unsigned short)+0x84>
 800ffac:	b045      	add	sp, #276	; 0x114
 800ffae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ffb2:	bf00      	nop
 800ffb4:	20011ebc 			; <UNDEFINED> instruction: 0x20011ebc
 800ffb8:	20011cb4 			; <UNDEFINED> instruction: 0x20011cb4
 800ffbc:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8
 800ffc0:	20011a8c 	andcs	r1, r1, ip, lsl #21
 800ffc4:	2000000c 	andcs	r0, r0, ip
 800ffc8:	20011a88 	andcs	r1, r1, r8, lsl #21
 800ffcc:	080177d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800ffd0:	20011c90 	mulcs	r1, r0, ip
 800ffd4:	20011cb8 			; <UNDEFINED> instruction: 0x20011cb8

0800ffd8 <MDNS::Parse()>:
 800ffd8:	4b08      	ldr	r3, [pc, #32]	; (800fffc <MDNS::Parse()+0x24>)
 800ffda:	681a      	ldr	r2, [r3, #0]
 800ffdc:	8853      	ldrh	r3, [r2, #2]
 800ffde:	ba5b      	rev16	r3, r3
 800ffe0:	b299      	uxth	r1, r3
 800ffe2:	041b      	lsls	r3, r3, #16
 800ffe4:	d408      	bmi.n	800fff8 <MDNS::Parse()+0x20>
 800ffe6:	0b8b      	lsrs	r3, r1, #14
 800ffe8:	d106      	bne.n	800fff8 <MDNS::Parse()+0x20>
 800ffea:	8891      	ldrh	r1, [r2, #4]
 800ffec:	b28b      	uxth	r3, r1
 800ffee:	b11b      	cbz	r3, 800fff8 <MDNS::Parse()+0x20>
 800fff0:	ba49      	rev16	r1, r1
 800fff2:	b289      	uxth	r1, r1
 800fff4:	f7ff bf74 	b.w	800fee0 <MDNS::HandleRequest(unsigned short)>
 800fff8:	4770      	bx	lr
 800fffa:	bf00      	nop
 800fffc:	20011ebc 			; <UNDEFINED> instruction: 0x20011ebc

08010000 <MDNS::Run()>:
 8010000:	b538      	push	{r3, r4, r5, lr}
 8010002:	4d0c      	ldr	r5, [pc, #48]	; (8010034 <MDNS::Run()+0x34>)
 8010004:	4604      	mov	r4, r0
 8010006:	480c      	ldr	r0, [pc, #48]	; (8010038 <MDNS::Run()+0x38>)
 8010008:	462b      	mov	r3, r5
 801000a:	4a0c      	ldr	r2, [pc, #48]	; (801003c <MDNS::Run()+0x3c>)
 801000c:	490c      	ldr	r1, [pc, #48]	; (8010040 <MDNS::Run()+0x40>)
 801000e:	7800      	ldrb	r0, [r0, #0]
 8010010:	f7ff fba4 	bl	800f75c <udp_recv2>
 8010014:	4b0b      	ldr	r3, [pc, #44]	; (8010044 <MDNS::Run()+0x44>)
 8010016:	882a      	ldrh	r2, [r5, #0]
 8010018:	8018      	strh	r0, [r3, #0]
 801001a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801001e:	429a      	cmp	r2, r3
 8010020:	d106      	bne.n	8010030 <MDNS::Run()+0x30>
 8010022:	280c      	cmp	r0, #12
 8010024:	d904      	bls.n	8010030 <MDNS::Run()+0x30>
 8010026:	4620      	mov	r0, r4
 8010028:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801002c:	f7ff bfd4 	b.w	800ffd8 <MDNS::Parse()>
 8010030:	bd38      	pop	{r3, r4, r5, pc}
 8010032:	bf00      	nop
 8010034:	20011a84 	andcs	r1, r1, r4, lsl #21
 8010038:	2000000c 	andcs	r0, r0, ip
 801003c:	20011a80 	andcs	r1, r1, r0, lsl #21
 8010040:	20011ebc 			; <UNDEFINED> instruction: 0x20011ebc
 8010044:	20011cb0 			; <UNDEFINED> instruction: 0x20011cb0

08010048 <MDNS::Print()>:
 8010048:	b510      	push	{r4, lr}
 801004a:	4816      	ldr	r0, [pc, #88]	; (80100a4 <MDNS::Print()+0x5c>)
 801004c:	f003 fb08 	bl	8013660 <printf>
 8010050:	4b15      	ldr	r3, [pc, #84]	; (80100a8 <MDNS::Print()+0x60>)
 8010052:	681b      	ldr	r3, [r3, #0]
 8010054:	3301      	adds	r3, #1
 8010056:	d104      	bne.n	8010062 <MDNS::Print()+0x1a>
 8010058:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801005c:	4813      	ldr	r0, [pc, #76]	; (80100ac <MDNS::Print()+0x64>)
 801005e:	f003 baff 	b.w	8013660 <printf>
 8010062:	4b13      	ldr	r3, [pc, #76]	; (80100b0 <MDNS::Print()+0x68>)
 8010064:	4c13      	ldr	r4, [pc, #76]	; (80100b4 <MDNS::Print()+0x6c>)
 8010066:	6819      	ldr	r1, [r3, #0]
 8010068:	4813      	ldr	r0, [pc, #76]	; (80100b8 <MDNS::Print()+0x70>)
 801006a:	f003 faf9 	bl	8013660 <printf>
 801006e:	6823      	ldr	r3, [r4, #0]
 8010070:	b14b      	cbz	r3, 8010086 <MDNS::Print()+0x3e>
 8010072:	4a12      	ldr	r2, [pc, #72]	; (80100bc <MDNS::Print()+0x74>)
 8010074:	68a3      	ldr	r3, [r4, #8]
 8010076:	6861      	ldr	r1, [r4, #4]
 8010078:	2b00      	cmp	r3, #0
 801007a:	bf08      	it	eq
 801007c:	4613      	moveq	r3, r2
 801007e:	4810      	ldr	r0, [pc, #64]	; (80100c0 <MDNS::Print()+0x78>)
 8010080:	89a2      	ldrh	r2, [r4, #12]
 8010082:	f003 faed 	bl	8013660 <printf>
 8010086:	6923      	ldr	r3, [r4, #16]
 8010088:	b15b      	cbz	r3, 80100a2 <MDNS::Print()+0x5a>
 801008a:	69a3      	ldr	r3, [r4, #24]
 801008c:	4a0b      	ldr	r2, [pc, #44]	; (80100bc <MDNS::Print()+0x74>)
 801008e:	6961      	ldr	r1, [r4, #20]
 8010090:	2b00      	cmp	r3, #0
 8010092:	bf08      	it	eq
 8010094:	4613      	moveq	r3, r2
 8010096:	480a      	ldr	r0, [pc, #40]	; (80100c0 <MDNS::Print()+0x78>)
 8010098:	8ba2      	ldrh	r2, [r4, #28]
 801009a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801009e:	f003 badf 	b.w	8013660 <printf>
 80100a2:	bd10      	pop	{r4, pc}
 80100a4:	080177f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 80100a8:	2000000c 	andcs	r0, r0, ip
 80100ac:	080177fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 80100b0:	20011eb8 			; <UNDEFINED> instruction: 0x20011eb8
 80100b4:	20011c90 	mulcs	r1, r0, ip
 80100b8:	08017808 	stmdaeq	r1, {r3, fp, ip, sp, lr}
 80100bc:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 80100c0:	08017814 	stmdaeq	r1, {r2, r4, fp, ip, sp, lr}

080100c4 <strncpy.constprop.0.isra.0>:
 80100c4:	233f      	movs	r3, #63	; 0x3f
 80100c6:	3901      	subs	r1, #1
 80100c8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80100cc:	b92a      	cbnz	r2, 80100da <strncpy.constprop.0.isra.0+0x16>
 80100ce:	4403      	add	r3, r0
 80100d0:	4298      	cmp	r0, r3
 80100d2:	d007      	beq.n	80100e4 <strncpy.constprop.0.isra.0+0x20>
 80100d4:	f800 2b01 	strb.w	r2, [r0], #1
 80100d8:	e7fa      	b.n	80100d0 <strncpy.constprop.0.isra.0+0xc>
 80100da:	3b01      	subs	r3, #1
 80100dc:	f800 2b01 	strb.w	r2, [r0], #1
 80100e0:	d1f2      	bne.n	80100c8 <strncpy.constprop.0.isra.0+0x4>
 80100e2:	4770      	bx	lr
 80100e4:	4770      	bx	lr
	...

080100e8 <Network::Network()>:
 80100e8:	4a11      	ldr	r2, [pc, #68]	; (8010130 <Network::Network()+0x48>)
 80100ea:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80100ee:	6010      	str	r0, [r2, #0]
 80100f0:	2201      	movs	r2, #1
 80100f2:	2300      	movs	r3, #0
 80100f4:	e9c0 1200 	strd	r1, r2, [r0]
 80100f8:	2200      	movs	r2, #0
 80100fa:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 80100fe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8010102:	490c      	ldr	r1, [pc, #48]	; (8010134 <Network::Network()+0x4c>)
 8010104:	60c2      	str	r2, [r0, #12]
 8010106:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 801010a:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 801010e:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 8010112:	6083      	str	r3, [r0, #8]
 8010114:	6183      	str	r3, [r0, #24]
 8010116:	7703      	strb	r3, [r0, #28]
 8010118:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 801011c:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 8010120:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010124:	f802 3b01 	strb.w	r3, [r2], #1
 8010128:	2b00      	cmp	r3, #0
 801012a:	d1f9      	bne.n	8010120 <Network::Network()+0x38>
 801012c:	4770      	bx	lr
 801012e:	bf00      	nop
 8010130:	20011ec0 	andcs	r1, r1, r0, asr #29
 8010134:	0801781f 	stmdaeq	r1, {r0, r1, r2, r3, r4, fp, ip, sp, lr}

08010138 <Network::Shutdown()>:
 8010138:	b508      	push	{r3, lr}
 801013a:	30b8      	adds	r0, #184	; 0xb8
 801013c:	f001 fea4 	bl	8011e88 <NetworkDisplay::ShowShutdown()>
 8010140:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010144:	f7fe bd5a 	b.w	800ebfc <net_shutdown>

08010148 <Network::Begin(unsigned short)>:
 8010148:	4608      	mov	r0, r1
 801014a:	f7ff ba97 	b.w	800f67c <udp_bind>

0801014e <Network::End(unsigned short)>:
 801014e:	4608      	mov	r0, r1
 8010150:	f7ff baae 	b.w	800f6b0 <udp_unbind>

08010154 <Network::MacAddressCopyTo(unsigned char*)>:
 8010154:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8010158:	3901      	subs	r1, #1
 801015a:	30a2      	adds	r0, #162	; 0xa2
 801015c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010160:	4283      	cmp	r3, r0
 8010162:	f801 2f01 	strb.w	r2, [r1, #1]!
 8010166:	d1f9      	bne.n	801015c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8010168:	4770      	bx	lr

0801016a <Network::JoinGroup(int, unsigned int)>:
 801016a:	4610      	mov	r0, r2
 801016c:	f001 b9d8 	b.w	8011520 <igmp_join>

08010170 <Network::LeaveGroup(int, unsigned int)>:
 8010170:	4610      	mov	r0, r2
 8010172:	f001 ba01 	b.w	8011578 <igmp_leave>

08010176 <Network::SetDefaultIp()>:
 8010176:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 801017a:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 801017e:	041b      	lsls	r3, r3, #16
 8010180:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8010184:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8010188:	3302      	adds	r3, #2
 801018a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 801018e:	22ff      	movs	r2, #255	; 0xff
 8010190:	6103      	str	r3, [r0, #16]
 8010192:	e9c0 3205 	strd	r3, r2, [r0, #20]
 8010196:	4770      	bx	lr

08010198 <Network::Init(NetworkParamsStore*)>:
 8010198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801019c:	b0a3      	sub	sp, #140	; 0x8c
 801019e:	4604      	mov	r4, r0
 80101a0:	a809      	add	r0, sp, #36	; 0x24
 80101a2:	f000 fac7 	bl	8010734 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80101a6:	a809      	add	r0, sp, #36	; 0x24
 80101a8:	f000 fad0 	bl	801074c <NetworkParams::Load()>
 80101ac:	b110      	cbz	r0, 80101b4 <Network::Init(NetworkParamsStore*)+0x1c>
 80101ae:	a809      	add	r0, sp, #36	; 0x24
 80101b0:	f000 fd23 	bl	8010bfa <NetworkParams::Dump()>
 80101b4:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80101b8:	4628      	mov	r0, r5
 80101ba:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 80101be:	f001 fe4b 	bl	8011e58 <NetworkDisplay::ShowEmacStart()>
 80101c2:	4638      	mov	r0, r7
 80101c4:	f004 fd66 	bl	8014c94 <emac_start>
 80101c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80101ca:	f104 061c 	add.w	r6, r4, #28
 80101ce:	9306      	str	r3, [sp, #24]
 80101d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80101d2:	9307      	str	r3, [sp, #28]
 80101d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80101d6:	9308      	str	r3, [sp, #32]
 80101d8:	f89d 303c 	ldrb.w	r3, [sp, #60]	; 0x3c
 80101dc:	7063      	strb	r3, [r4, #1]
 80101de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80101e0:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 80101e4:	bf18      	it	ne
 80101e6:	f8dd 207d 	ldrne.w	r2, [sp, #125]	; 0x7d
 80101ea:	061b      	lsls	r3, r3, #24
 80101ec:	bf54      	ite	pl
 80101ee:	2300      	movpl	r3, #0
 80101f0:	f8dd 3081 	ldrmi.w	r3, [sp, #129]	; 0x81
 80101f4:	60a2      	str	r2, [r4, #8]
 80101f6:	60e3      	str	r3, [r4, #12]
 80101f8:	f89d 303d 	ldrb.w	r3, [sp, #61]	; 0x3d
 80101fc:	2b00      	cmp	r3, #0
 80101fe:	d15f      	bne.n	80102c0 <Network::Init(NetworkParamsStore*)+0x128>
 8010200:	4632      	mov	r2, r6
 8010202:	4875      	ldr	r0, [pc, #468]	; (80103d8 <Network::Init(NetworkParamsStore*)+0x240>)
 8010204:	f810 1b01 	ldrb.w	r1, [r0], #1
 8010208:	f103 0c01 	add.w	ip, r3, #1
 801020c:	b119      	cbz	r1, 8010216 <Network::Init(NetworkParamsStore*)+0x7e>
 801020e:	4663      	mov	r3, ip
 8010210:	f802 1b01 	strb.w	r1, [r2], #1
 8010214:	e7f6      	b.n	8010204 <Network::Init(NetworkParamsStore*)+0x6c>
 8010216:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 801021a:	18e1      	adds	r1, r4, r3
 801021c:	0910      	lsrs	r0, r2, #4
 801021e:	2a9f      	cmp	r2, #159	; 0x9f
 8010220:	f002 020f 	and.w	r2, r2, #15
 8010224:	bf94      	ite	ls
 8010226:	3030      	addls	r0, #48	; 0x30
 8010228:	3037      	addhi	r0, #55	; 0x37
 801022a:	2a09      	cmp	r2, #9
 801022c:	bf94      	ite	ls
 801022e:	3230      	addls	r2, #48	; 0x30
 8010230:	3237      	addhi	r2, #55	; 0x37
 8010232:	44a4      	add	ip, r4
 8010234:	7708      	strb	r0, [r1, #28]
 8010236:	f88c 201c 	strb.w	r2, [ip, #28]
 801023a:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 801023e:	f103 0802 	add.w	r8, r3, #2
 8010242:	0910      	lsrs	r0, r2, #4
 8010244:	2a9f      	cmp	r2, #159	; 0x9f
 8010246:	f002 020f 	and.w	r2, r2, #15
 801024a:	bf94      	ite	ls
 801024c:	3030      	addls	r0, #48	; 0x30
 801024e:	3037      	addhi	r0, #55	; 0x37
 8010250:	f103 0e03 	add.w	lr, r3, #3
 8010254:	2a09      	cmp	r2, #9
 8010256:	eb04 0c08 	add.w	ip, r4, r8
 801025a:	f88c 001c 	strb.w	r0, [ip, #28]
 801025e:	bf94      	ite	ls
 8010260:	3230      	addls	r2, #48	; 0x30
 8010262:	3237      	addhi	r2, #55	; 0x37
 8010264:	eb04 000e 	add.w	r0, r4, lr
 8010268:	7702      	strb	r2, [r0, #28]
 801026a:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 801026e:	f103 0c04 	add.w	ip, r3, #4
 8010272:	0910      	lsrs	r0, r2, #4
 8010274:	2a9f      	cmp	r2, #159	; 0x9f
 8010276:	f002 020f 	and.w	r2, r2, #15
 801027a:	bf94      	ite	ls
 801027c:	3030      	addls	r0, #48	; 0x30
 801027e:	3037      	addhi	r0, #55	; 0x37
 8010280:	3305      	adds	r3, #5
 8010282:	2a09      	cmp	r2, #9
 8010284:	4423      	add	r3, r4
 8010286:	44a4      	add	ip, r4
 8010288:	bf94      	ite	ls
 801028a:	3230      	addls	r2, #48	; 0x30
 801028c:	3237      	addhi	r2, #55	; 0x37
 801028e:	f88c 001c 	strb.w	r0, [ip, #28]
 8010292:	771a      	strb	r2, [r3, #28]
 8010294:	2300      	movs	r3, #0
 8010296:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 801029a:	7863      	ldrb	r3, [r4, #1]
 801029c:	b95b      	cbnz	r3, 80102b6 <Network::Init(NetworkParamsStore*)+0x11e>
 801029e:	9b06      	ldr	r3, [sp, #24]
 80102a0:	b9bb      	cbnz	r3, 80102d2 <Network::Init(NetworkParamsStore*)+0x13a>
 80102a2:	4620      	mov	r0, r4
 80102a4:	f7ff ff67 	bl	8010176 <Network::SetDefaultIp()>
 80102a8:	6923      	ldr	r3, [r4, #16]
 80102aa:	69a2      	ldr	r2, [r4, #24]
 80102ac:	9306      	str	r3, [sp, #24]
 80102ae:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80102b2:	7863      	ldrb	r3, [r4, #1]
 80102b4:	b1a3      	cbz	r3, 80102e0 <Network::Init(NetworkParamsStore*)+0x148>
 80102b6:	2101      	movs	r1, #1
 80102b8:	4628      	mov	r0, r5
 80102ba:	f001 fdeb 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80102be:	e00f      	b.n	80102e0 <Network::Init(NetworkParamsStore*)+0x148>
 80102c0:	4630      	mov	r0, r6
 80102c2:	f10d 013d 	add.w	r1, sp, #61	; 0x3d
 80102c6:	f7ff fefd 	bl	80100c4 <strncpy.constprop.0.isra.0>
 80102ca:	2300      	movs	r3, #0
 80102cc:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 80102d0:	e7e3      	b.n	801029a <Network::Init(NetworkParamsStore*)+0x102>
 80102d2:	69a1      	ldr	r1, [r4, #24]
 80102d4:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 80102d8:	4053      	eors	r3, r2
 80102da:	420b      	tst	r3, r1
 80102dc:	d000      	beq.n	80102e0 <Network::Init(NetworkParamsStore*)+0x148>
 80102de:	9208      	str	r2, [sp, #32]
 80102e0:	1ce3      	adds	r3, r4, #3
 80102e2:	f104 0901 	add.w	r9, r4, #1
 80102e6:	9302      	str	r3, [sp, #8]
 80102e8:	9300      	str	r3, [sp, #0]
 80102ea:	4632      	mov	r2, r6
 80102ec:	464b      	mov	r3, r9
 80102ee:	4638      	mov	r0, r7
 80102f0:	a906      	add	r1, sp, #24
 80102f2:	f7fe fc33 	bl	800eb5c <net_init>
 80102f6:	78e3      	ldrb	r3, [r4, #3]
 80102f8:	b11b      	cbz	r3, 8010302 <Network::Init(NetworkParamsStore*)+0x16a>
 80102fa:	2104      	movs	r1, #4
 80102fc:	4628      	mov	r0, r5
 80102fe:	f001 fdc9 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010302:	f89d 303c 	ldrb.w	r3, [sp, #60]	; 0x3c
 8010306:	f89d a085 	ldrb.w	sl, [sp, #133]	; 0x85
 801030a:	9304      	str	r3, [sp, #16]
 801030c:	233c      	movs	r3, #60	; 0x3c
 801030e:	fb03 f30a 	mul.w	r3, r3, sl
 8010312:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80103dc <Network::Init(NetworkParamsStore*)+0x244>
 8010316:	f8df b0c8 	ldr.w	fp, [pc, #200]	; 80103e0 <Network::Init(NetworkParamsStore*)+0x248>
 801031a:	9303      	str	r3, [sp, #12]
 801031c:	78e3      	ldrb	r3, [r4, #3]
 801031e:	b95b      	cbnz	r3, 8010338 <Network::Init(NetworkParamsStore*)+0x1a0>
 8010320:	9b06      	ldr	r3, [sp, #24]
 8010322:	4628      	mov	r0, r5
 8010324:	6123      	str	r3, [r4, #16]
 8010326:	9b07      	ldr	r3, [sp, #28]
 8010328:	61a3      	str	r3, [r4, #24]
 801032a:	9b08      	ldr	r3, [sp, #32]
 801032c:	6163      	str	r3, [r4, #20]
 801032e:	f001 fd99 	bl	8011e64 <NetworkDisplay::ShowIp()>
 8010332:	b023      	add	sp, #140	; 0x8c
 8010334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010338:	f1ba 0f00 	cmp.w	sl, #0
 801033c:	d0f0      	beq.n	8010320 <Network::Init(NetworkParamsStore*)+0x188>
 801033e:	9b04      	ldr	r3, [sp, #16]
 8010340:	2b00      	cmp	r3, #0
 8010342:	d0ed      	beq.n	8010320 <Network::Init(NetworkParamsStore*)+0x188>
 8010344:	2104      	movs	r1, #4
 8010346:	f8d8 0000 	ldr.w	r0, [r8]
 801034a:	f002 fc4b 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 801034e:	2103      	movs	r1, #3
 8010350:	4628      	mov	r0, r5
 8010352:	f001 fd9f 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010356:	2000      	movs	r0, #0
 8010358:	f003 fad4 	bl	8013904 <time>
 801035c:	9005      	str	r0, [sp, #20]
 801035e:	2000      	movs	r0, #0
 8010360:	f003 fad0 	bl	8013904 <time>
 8010364:	9b05      	ldr	r3, [sp, #20]
 8010366:	1ac0      	subs	r0, r0, r3
 8010368:	9b03      	ldr	r3, [sp, #12]
 801036a:	4298      	cmp	r0, r3
 801036c:	da1a      	bge.n	80103a4 <Network::Init(NetworkParamsStore*)+0x20c>
 801036e:	f8d8 3000 	ldr.w	r3, [r8]
 8010372:	491c      	ldr	r1, [pc, #112]	; (80103e4 <Network::Init(NetworkParamsStore*)+0x24c>)
 8010374:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010378:	f1bc 0f00 	cmp.w	ip, #0
 801037c:	d0ef      	beq.n	801035e <Network::Init(NetworkParamsStore*)+0x1c6>
 801037e:	6808      	ldr	r0, [r1, #0]
 8010380:	695a      	ldr	r2, [r3, #20]
 8010382:	1a80      	subs	r0, r0, r2
 8010384:	4584      	cmp	ip, r0
 8010386:	d8ea      	bhi.n	801035e <Network::Init(NetworkParamsStore*)+0x1c6>
 8010388:	6808      	ldr	r0, [r1, #0]
 801038a:	6158      	str	r0, [r3, #20]
 801038c:	6918      	ldr	r0, [r3, #16]
 801038e:	2801      	cmp	r0, #1
 8010390:	f080 0201 	eor.w	r2, r0, #1
 8010394:	611a      	str	r2, [r3, #16]
 8010396:	bf16      	itet	ne
 8010398:	2301      	movne	r3, #1
 801039a:	f8cb 0014 	streq.w	r0, [fp, #20]
 801039e:	f8cb 3010 	strne.w	r3, [fp, #16]
 80103a2:	e7dc      	b.n	801035e <Network::Init(NetworkParamsStore*)+0x1c6>
 80103a4:	2101      	movs	r1, #1
 80103a6:	4628      	mov	r0, r5
 80103a8:	f001 fd74 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80103ac:	2101      	movs	r1, #1
 80103ae:	f8d8 0000 	ldr.w	r0, [r8]
 80103b2:	f002 fc17 	bl	8012be4 <LedBlink::SetMode(ledblink::Mode)>
 80103b6:	2301      	movs	r3, #1
 80103b8:	7063      	strb	r3, [r4, #1]
 80103ba:	2300      	movs	r3, #0
 80103bc:	70e3      	strb	r3, [r4, #3]
 80103be:	9b02      	ldr	r3, [sp, #8]
 80103c0:	4632      	mov	r2, r6
 80103c2:	9300      	str	r3, [sp, #0]
 80103c4:	4638      	mov	r0, r7
 80103c6:	464b      	mov	r3, r9
 80103c8:	a906      	add	r1, sp, #24
 80103ca:	f7fe fbc7 	bl	800eb5c <net_init>
 80103ce:	7863      	ldrb	r3, [r4, #1]
 80103d0:	2b00      	cmp	r3, #0
 80103d2:	d0a3      	beq.n	801031c <Network::Init(NetworkParamsStore*)+0x184>
 80103d4:	e7a4      	b.n	8010320 <Network::Init(NetworkParamsStore*)+0x188>
 80103d6:	bf00      	nop
 80103d8:	08017824 	stmdaeq	r1, {r2, r5, fp, ip, sp, lr}
 80103dc:	20012588 	andcs	r2, r1, r8, lsl #11
 80103e0:	40011000 	andmi	r1, r1, r0
 80103e4:	200125a8 	andcs	r2, r1, r8, lsr #11

080103e8 <Network::SetIp(unsigned int)>:
 80103e8:	7843      	ldrb	r3, [r0, #1]
 80103ea:	b570      	push	{r4, r5, r6, lr}
 80103ec:	4604      	mov	r4, r0
 80103ee:	460d      	mov	r5, r1
 80103f0:	2600      	movs	r6, #0
 80103f2:	b113      	cbz	r3, 80103fa <Network::SetIp(unsigned int)+0x12>
 80103f4:	7046      	strb	r6, [r0, #1]
 80103f6:	f7fe fc4b 	bl	800ec90 <net_dhcp_release>
 80103fa:	70e6      	strb	r6, [r4, #3]
 80103fc:	b975      	cbnz	r5, 801041c <Network::SetIp(unsigned int)+0x34>
 80103fe:	4620      	mov	r0, r4
 8010400:	f7ff feb9 	bl	8010176 <Network::SetDefaultIp()>
 8010404:	6920      	ldr	r0, [r4, #16]
 8010406:	f7fe fc07 	bl	800ec18 <net_set_ip>
 801040a:	34b8      	adds	r4, #184	; 0xb8
 801040c:	4620      	mov	r0, r4
 801040e:	f001 fd29 	bl	8011e64 <NetworkDisplay::ShowIp()>
 8010412:	4620      	mov	r0, r4
 8010414:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010418:	f001 bd2a 	b.w	8011e70 <NetworkDisplay::ShowNetMask()>
 801041c:	4628      	mov	r0, r5
 801041e:	f7fe fbfb 	bl	800ec18 <net_set_ip>
 8010422:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010426:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801042a:	2800      	cmp	r0, #0
 801042c:	d0ed      	beq.n	801040a <Network::SetIp(unsigned int)+0x22>
 801042e:	6803      	ldr	r3, [r0, #0]
 8010430:	4629      	mov	r1, r5
 8010432:	689b      	ldr	r3, [r3, #8]
 8010434:	4798      	blx	r3
 8010436:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801043a:	2100      	movs	r1, #0
 801043c:	6803      	ldr	r3, [r0, #0]
 801043e:	699b      	ldr	r3, [r3, #24]
 8010440:	4798      	blx	r3
 8010442:	e7e2      	b.n	801040a <Network::SetIp(unsigned int)+0x22>

08010444 <Network::SetNetmask(unsigned int)>:
 8010444:	6982      	ldr	r2, [r0, #24]
 8010446:	b510      	push	{r4, lr}
 8010448:	428a      	cmp	r2, r1
 801044a:	4604      	mov	r4, r0
 801044c:	d00f      	beq.n	801046e <Network::SetNetmask(unsigned int)+0x2a>
 801044e:	6181      	str	r1, [r0, #24]
 8010450:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8010454:	b110      	cbz	r0, 801045c <Network::SetNetmask(unsigned int)+0x18>
 8010456:	6803      	ldr	r3, [r0, #0]
 8010458:	68db      	ldr	r3, [r3, #12]
 801045a:	4798      	blx	r3
 801045c:	34b8      	adds	r4, #184	; 0xb8
 801045e:	4620      	mov	r0, r4
 8010460:	f001 fd00 	bl	8011e64 <NetworkDisplay::ShowIp()>
 8010464:	4620      	mov	r0, r4
 8010466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801046a:	f001 bd01 	b.w	8011e70 <NetworkDisplay::ShowNetMask()>
 801046e:	bd10      	pop	{r4, pc}

08010470 <Network::SetHostName(char const*)>:
 8010470:	b570      	push	{r4, r5, r6, lr}
 8010472:	4604      	mov	r4, r0
 8010474:	f100 051c 	add.w	r5, r0, #28
 8010478:	4628      	mov	r0, r5
 801047a:	f7ff fe23 	bl	80100c4 <strncpy.constprop.0.isra.0>
 801047e:	2300      	movs	r3, #0
 8010480:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010484:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010488:	b158      	cbz	r0, 80104a2 <Network::SetHostName(char const*)+0x32>
 801048a:	6803      	ldr	r3, [r0, #0]
 801048c:	695e      	ldr	r6, [r3, #20]
 801048e:	462b      	mov	r3, r5
 8010490:	461a      	mov	r2, r3
 8010492:	7811      	ldrb	r1, [r2, #0]
 8010494:	3301      	adds	r3, #1
 8010496:	2900      	cmp	r1, #0
 8010498:	d1fa      	bne.n	8010490 <Network::SetHostName(char const*)+0x20>
 801049a:	1b52      	subs	r2, r2, r5
 801049c:	4629      	mov	r1, r5
 801049e:	b292      	uxth	r2, r2
 80104a0:	47b0      	blx	r6
 80104a2:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 80104a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104aa:	f001 bce7 	b.w	8011e7c <NetworkDisplay::ShowHostName()>

080104ae <Network::SetZeroconf()>:
 80104ae:	b530      	push	{r4, r5, lr}
 80104b0:	b085      	sub	sp, #20
 80104b2:	4604      	mov	r4, r0
 80104b4:	a801      	add	r0, sp, #4
 80104b6:	f7fe fbf5 	bl	800eca4 <net_set_zeroconf>
 80104ba:	70e0      	strb	r0, [r4, #3]
 80104bc:	b170      	cbz	r0, 80104dc <Network::SetZeroconf()+0x2e>
 80104be:	9b01      	ldr	r3, [sp, #4]
 80104c0:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 80104c4:	6123      	str	r3, [r4, #16]
 80104c6:	9b02      	ldr	r3, [sp, #8]
 80104c8:	61a3      	str	r3, [r4, #24]
 80104ca:	9b03      	ldr	r3, [sp, #12]
 80104cc:	6163      	str	r3, [r4, #20]
 80104ce:	2300      	movs	r3, #0
 80104d0:	7063      	strb	r3, [r4, #1]
 80104d2:	b118      	cbz	r0, 80104dc <Network::SetZeroconf()+0x2e>
 80104d4:	6803      	ldr	r3, [r0, #0]
 80104d6:	2101      	movs	r1, #1
 80104d8:	699b      	ldr	r3, [r3, #24]
 80104da:	4798      	blx	r3
 80104dc:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80104e0:	4628      	mov	r0, r5
 80104e2:	f001 fcbf 	bl	8011e64 <NetworkDisplay::ShowIp()>
 80104e6:	4628      	mov	r0, r5
 80104e8:	f001 fcc2 	bl	8011e70 <NetworkDisplay::ShowNetMask()>
 80104ec:	78e0      	ldrb	r0, [r4, #3]
 80104ee:	b005      	add	sp, #20
 80104f0:	bd30      	pop	{r4, r5, pc}
	...

080104f4 <Network::EnableDhcp()>:
 80104f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104f6:	4e23      	ldr	r6, [pc, #140]	; (8010584 <Network::EnableDhcp()+0x90>)
 80104f8:	4604      	mov	r4, r0
 80104fa:	6833      	ldr	r3, [r6, #0]
 80104fc:	b085      	sub	sp, #20
 80104fe:	791f      	ldrb	r7, [r3, #4]
 8010500:	b137      	cbz	r7, 8010510 <Network::EnableDhcp()+0x1c>
 8010502:	2200      	movs	r2, #0
 8010504:	2104      	movs	r1, #4
 8010506:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801050a:	711a      	strb	r2, [r3, #4]
 801050c:	f003 fec6 	bl	801429c <fwdgt_config>
 8010510:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010514:	2101      	movs	r1, #1
 8010516:	4628      	mov	r0, r5
 8010518:	f001 fcbc 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801051c:	1ce2      	adds	r2, r4, #3
 801051e:	f104 011c 	add.w	r1, r4, #28
 8010522:	a801      	add	r0, sp, #4
 8010524:	f7fe fb88 	bl	800ec38 <net_set_dhcp>
 8010528:	78e3      	ldrb	r3, [r4, #3]
 801052a:	7060      	strb	r0, [r4, #1]
 801052c:	b343      	cbz	r3, 8010580 <Network::EnableDhcp()+0x8c>
 801052e:	2104      	movs	r1, #4
 8010530:	4628      	mov	r0, r5
 8010532:	f001 fcaf 	bl	8011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010536:	b16f      	cbz	r7, 8010554 <Network::EnableDhcp()+0x60>
 8010538:	2102      	movs	r1, #2
 801053a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801053e:	6836      	ldr	r6, [r6, #0]
 8010540:	f003 feac 	bl	801429c <fwdgt_config>
 8010544:	2801      	cmp	r0, #1
 8010546:	bf0c      	ite	eq
 8010548:	2301      	moveq	r3, #1
 801054a:	2300      	movne	r3, #0
 801054c:	7133      	strb	r3, [r6, #4]
 801054e:	d101      	bne.n	8010554 <Network::EnableDhcp()+0x60>
 8010550:	f003 fe94 	bl	801427c <fwdgt_enable>
 8010554:	9b01      	ldr	r3, [sp, #4]
 8010556:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801055a:	6123      	str	r3, [r4, #16]
 801055c:	9b02      	ldr	r3, [sp, #8]
 801055e:	61a3      	str	r3, [r4, #24]
 8010560:	9b03      	ldr	r3, [sp, #12]
 8010562:	6163      	str	r3, [r4, #20]
 8010564:	b118      	cbz	r0, 801056e <Network::EnableDhcp()+0x7a>
 8010566:	6803      	ldr	r3, [r0, #0]
 8010568:	7861      	ldrb	r1, [r4, #1]
 801056a:	699b      	ldr	r3, [r3, #24]
 801056c:	4798      	blx	r3
 801056e:	4628      	mov	r0, r5
 8010570:	f001 fc78 	bl	8011e64 <NetworkDisplay::ShowIp()>
 8010574:	4628      	mov	r0, r5
 8010576:	f001 fc7b 	bl	8011e70 <NetworkDisplay::ShowNetMask()>
 801057a:	7860      	ldrb	r0, [r4, #1]
 801057c:	b005      	add	sp, #20
 801057e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010580:	2102      	movs	r1, #2
 8010582:	e7d5      	b.n	8010530 <Network::EnableDhcp()+0x3c>
 8010584:	2001258c 	andcs	r2, r1, ip, lsl #11

08010588 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8010588:	b109      	cbz	r1, 801058e <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801058a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 801058e:	b10a      	cbz	r2, 8010594 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8010590:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 8010594:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8010598:	f043 0303 	orr.w	r3, r3, #3
 801059c:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 80105a0:	4770      	bx	lr

080105a2 <Network::ApplyQueuedConfig()>:
 80105a2:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 80105a6:	b510      	push	{r4, lr}
 80105a8:	4604      	mov	r4, r0
 80105aa:	b3c3      	cbz	r3, 801061e <Network::ApplyQueuedConfig()+0x7c>
 80105ac:	079a      	lsls	r2, r3, #30
 80105ae:	d01a      	beq.n	80105e6 <Network::ApplyQueuedConfig()+0x44>
 80105b0:	079b      	lsls	r3, r3, #30
 80105b2:	d509      	bpl.n	80105c8 <Network::ApplyQueuedConfig()+0x26>
 80105b4:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 80105b8:	f7ff ff44 	bl	8010444 <Network::SetNetmask(unsigned int)>
 80105bc:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105c0:	f023 0302 	bic.w	r3, r3, #2
 80105c4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105c8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105cc:	07d9      	lsls	r1, r3, #31
 80105ce:	d50a      	bpl.n	80105e6 <Network::ApplyQueuedConfig()+0x44>
 80105d0:	4620      	mov	r0, r4
 80105d2:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 80105d6:	f7ff ff07 	bl	80103e8 <Network::SetIp(unsigned int)>
 80105da:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105de:	f023 0301 	bic.w	r3, r3, #1
 80105e2:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105e6:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105ea:	075a      	lsls	r2, r3, #29
 80105ec:	d508      	bpl.n	8010600 <Network::ApplyQueuedConfig()+0x5e>
 80105ee:	4620      	mov	r0, r4
 80105f0:	f7ff ff80 	bl	80104f4 <Network::EnableDhcp()>
 80105f4:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105f8:	f023 0304 	bic.w	r3, r3, #4
 80105fc:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010600:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010604:	071b      	lsls	r3, r3, #28
 8010606:	d508      	bpl.n	801061a <Network::ApplyQueuedConfig()+0x78>
 8010608:	4620      	mov	r0, r4
 801060a:	f7ff ff50 	bl	80104ae <Network::SetZeroconf()>
 801060e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010612:	f023 0308 	bic.w	r3, r3, #8
 8010616:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 801061a:	2001      	movs	r0, #1
 801061c:	e000      	b.n	8010620 <Network::ApplyQueuedConfig()+0x7e>
 801061e:	4618      	mov	r0, r3
 8010620:	bd10      	pop	{r4, pc}
	...

08010624 <Network::Print()>:
 8010624:	b530      	push	{r4, r5, lr}
 8010626:	4604      	mov	r4, r0
 8010628:	b085      	sub	sp, #20
 801062a:	4832      	ldr	r0, [pc, #200]	; (80106f4 <Network::Print()+0xd0>)
 801062c:	f003 f818 	bl	8013660 <printf>
 8010630:	f104 011c 	add.w	r1, r4, #28
 8010634:	4830      	ldr	r0, [pc, #192]	; (80106f8 <Network::Print()+0xd4>)
 8010636:	f003 f813 	bl	8013660 <printf>
 801063a:	6861      	ldr	r1, [r4, #4]
 801063c:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 8010640:	482e      	ldr	r0, [pc, #184]	; (80106fc <Network::Print()+0xd8>)
 8010642:	f003 f80d 	bl	8013660 <printf>
 8010646:	69a0      	ldr	r0, [r4, #24]
 8010648:	f7f7 facc 	bl	8007be4 <__popcountsi2>
 801064c:	6925      	ldr	r5, [r4, #16]
 801064e:	9001      	str	r0, [sp, #4]
 8010650:	0e2b      	lsrs	r3, r5, #24
 8010652:	9300      	str	r3, [sp, #0]
 8010654:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8010658:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801065c:	b2e9      	uxtb	r1, r5
 801065e:	4828      	ldr	r0, [pc, #160]	; (8010700 <Network::Print()+0xdc>)
 8010660:	f002 fffe 	bl	8013660 <printf>
 8010664:	69a1      	ldr	r1, [r4, #24]
 8010666:	4827      	ldr	r0, [pc, #156]	; (8010704 <Network::Print()+0xe0>)
 8010668:	0e0b      	lsrs	r3, r1, #24
 801066a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801066e:	9300      	str	r3, [sp, #0]
 8010670:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010674:	b2c9      	uxtb	r1, r1
 8010676:	f002 fff3 	bl	8013660 <printf>
 801067a:	6961      	ldr	r1, [r4, #20]
 801067c:	4822      	ldr	r0, [pc, #136]	; (8010708 <Network::Print()+0xe4>)
 801067e:	0e0b      	lsrs	r3, r1, #24
 8010680:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010684:	9300      	str	r3, [sp, #0]
 8010686:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801068a:	b2c9      	uxtb	r1, r1
 801068c:	f002 ffe8 	bl	8013660 <printf>
 8010690:	69a3      	ldr	r3, [r4, #24]
 8010692:	6921      	ldr	r1, [r4, #16]
 8010694:	481d      	ldr	r0, [pc, #116]	; (801070c <Network::Print()+0xe8>)
 8010696:	ea61 0103 	orn	r1, r1, r3
 801069a:	0e0b      	lsrs	r3, r1, #24
 801069c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80106a0:	9300      	str	r3, [sp, #0]
 80106a2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80106a6:	b2c9      	uxtb	r1, r1
 80106a8:	f002 ffda 	bl	8013660 <printf>
 80106ac:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 80106b0:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 80106b4:	9302      	str	r3, [sp, #8]
 80106b6:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 80106ba:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 80106be:	9301      	str	r3, [sp, #4]
 80106c0:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 80106c4:	4812      	ldr	r0, [pc, #72]	; (8010710 <Network::Print()+0xec>)
 80106c6:	9300      	str	r3, [sp, #0]
 80106c8:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 80106cc:	f002 ffc8 	bl	8013660 <printf>
 80106d0:	4b10      	ldr	r3, [pc, #64]	; (8010714 <Network::Print()+0xf0>)
 80106d2:	681b      	ldr	r3, [r3, #0]
 80106d4:	78da      	ldrb	r2, [r3, #3]
 80106d6:	b952      	cbnz	r2, 80106ee <Network::Print()+0xca>
 80106d8:	785b      	ldrb	r3, [r3, #1]
 80106da:	2b00      	cmp	r3, #0
 80106dc:	bf14      	ite	ne
 80106de:	2144      	movne	r1, #68	; 0x44
 80106e0:	2153      	moveq	r1, #83	; 0x53
 80106e2:	480d      	ldr	r0, [pc, #52]	; (8010718 <Network::Print()+0xf4>)
 80106e4:	b005      	add	sp, #20
 80106e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80106ea:	f002 bfb9 	b.w	8013660 <printf>
 80106ee:	215a      	movs	r1, #90	; 0x5a
 80106f0:	e7f7      	b.n	80106e2 <Network::Print()+0xbe>
 80106f2:	bf00      	nop
 80106f4:	08017830 	stmdaeq	r1, {r4, r5, fp, ip, sp, lr}
 80106f8:	08017839 	stmdaeq	r1, {r0, r3, r4, r5, fp, ip, sp, lr}
 80106fc:	0801784a 	stmdaeq	r1, {r1, r3, r6, fp, ip, sp, lr}
 8010700:	0801785f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}
 8010704:	0801787c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip, sp, lr}
 8010708:	08017896 	stmdaeq	r1, {r1, r2, r4, r7, fp, ip, sp, lr}
 801070c:	080178b0 	stmdaeq	r1, {r4, r5, r7, fp, ip, sp, lr}
 8010710:	080178ca 	stmdaeq	r1, {r1, r3, r6, r7, fp, ip, sp, lr}
 8010714:	20011ec0 	andcs	r1, r1, r0, asr #29
 8010718:	080178f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, fp, ip, sp, lr}

0801071c <Network::TcpBegin(unsigned short)>:
 801071c:	4608      	mov	r0, r1
 801071e:	f7fe be5b 	b.w	800f3d8 <tcp_begin>

08010722 <Network::TcpRead(int, unsigned char const**)>:
 8010722:	4608      	mov	r0, r1
 8010724:	4611      	mov	r1, r2
 8010726:	f7fe be95 	b.w	800f454 <tcp_read>

0801072a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 801072a:	4608      	mov	r0, r1
 801072c:	4611      	mov	r1, r2
 801072e:	461a      	mov	r2, r3
 8010730:	f7fe be6c 	b.w	800f40c <tcp_write>

08010734 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8010734:	b510      	push	{r4, lr}
 8010736:	225e      	movs	r2, #94	; 0x5e
 8010738:	4604      	mov	r4, r0
 801073a:	f840 1b04 	str.w	r1, [r0], #4
 801073e:	2100      	movs	r1, #0
 8010740:	f002 fc5e 	bl	8013000 <memset>
 8010744:	2301      	movs	r3, #1
 8010746:	4620      	mov	r0, r4
 8010748:	7623      	strb	r3, [r4, #24]
 801074a:	bd10      	pop	{r4, pc}

0801074c <NetworkParams::Load()>:
 801074c:	b508      	push	{r3, lr}
 801074e:	2300      	movs	r3, #0
 8010750:	4601      	mov	r1, r0
 8010752:	6043      	str	r3, [r0, #4]
 8010754:	6800      	ldr	r0, [r0, #0]
 8010756:	b120      	cbz	r0, 8010762 <NetworkParams::Load()+0x16>
 8010758:	6803      	ldr	r3, [r0, #0]
 801075a:	3104      	adds	r1, #4
 801075c:	68db      	ldr	r3, [r3, #12]
 801075e:	4798      	blx	r3
 8010760:	2001      	movs	r0, #1
 8010762:	bd08      	pop	{r3, pc}

08010764 <NetworkParams::Load(char const*, unsigned int)>:
 8010764:	6803      	ldr	r3, [r0, #0]
 8010766:	b1d3      	cbz	r3, 801079e <NetworkParams::Load(char const*, unsigned int)+0x3a>
 8010768:	2300      	movs	r3, #0
 801076a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801076c:	460d      	mov	r5, r1
 801076e:	4616      	mov	r6, r2
 8010770:	4604      	mov	r4, r0
 8010772:	6043      	str	r3, [r0, #4]
 8010774:	4602      	mov	r2, r0
 8010776:	490a      	ldr	r1, [pc, #40]	; (80107a0 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8010778:	4668      	mov	r0, sp
 801077a:	f001 fcdf 	bl	801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801077e:	4632      	mov	r2, r6
 8010780:	4629      	mov	r1, r5
 8010782:	4668      	mov	r0, sp
 8010784:	f001 fcde 	bl	8012144 <ReadConfigFile::Read(char const*, unsigned int)>
 8010788:	4621      	mov	r1, r4
 801078a:	f851 0b04 	ldr.w	r0, [r1], #4
 801078e:	6803      	ldr	r3, [r0, #0]
 8010790:	689b      	ldr	r3, [r3, #8]
 8010792:	4798      	blx	r3
 8010794:	4668      	mov	r0, sp
 8010796:	f001 fcd4 	bl	8012142 <ReadConfigFile::~ReadConfigFile()>
 801079a:	b002      	add	sp, #8
 801079c:	bd70      	pop	{r4, r5, r6, pc}
 801079e:	4770      	bx	lr
 80107a0:	08010931 	stmdaeq	r1, {r0, r4, r5, r8, fp}

080107a4 <NetworkParams::callbackFunction(char const*)>:
 80107a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80107a6:	460d      	mov	r5, r1
 80107a8:	4604      	mov	r4, r0
 80107aa:	4959      	ldr	r1, [pc, #356]	; (8010910 <NetworkParams::callbackFunction(char const*)+0x16c>)
 80107ac:	4628      	mov	r0, r5
 80107ae:	f10d 0203 	add.w	r2, sp, #3
 80107b2:	f001 fdfe 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80107b6:	b978      	cbnz	r0, 80107d8 <NetworkParams::callbackFunction(char const*)+0x34>
 80107b8:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80107bc:	6863      	ldr	r3, [r4, #4]
 80107be:	b142      	cbz	r2, 80107d2 <NetworkParams::callbackFunction(char const*)+0x2e>
 80107c0:	f023 0301 	bic.w	r3, r3, #1
 80107c4:	3a00      	subs	r2, #0
 80107c6:	bf18      	it	ne
 80107c8:	2201      	movne	r2, #1
 80107ca:	6063      	str	r3, [r4, #4]
 80107cc:	7622      	strb	r2, [r4, #24]
 80107ce:	b004      	add	sp, #16
 80107d0:	bd70      	pop	{r4, r5, r6, pc}
 80107d2:	f043 0301 	orr.w	r3, r3, #1
 80107d6:	e7f5      	b.n	80107c4 <NetworkParams::callbackFunction(char const*)+0x20>
 80107d8:	4628      	mov	r0, r5
 80107da:	494e      	ldr	r1, [pc, #312]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x170>)
 80107dc:	f10d 0203 	add.w	r2, sp, #3
 80107e0:	f001 fde7 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80107e4:	b980      	cbnz	r0, 8010808 <NetworkParams::callbackFunction(char const*)+0x64>
 80107e6:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80107ea:	6863      	ldr	r3, [r4, #4]
 80107ec:	1e51      	subs	r1, r2, #1
 80107ee:	2904      	cmp	r1, #4
 80107f0:	bf97      	itett	ls
 80107f2:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 80107f6:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 80107fa:	6063      	strls	r3, [r4, #4]
 80107fc:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8010800:	bf84      	itt	hi
 8010802:	6063      	strhi	r3, [r4, #4]
 8010804:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 8010808:	4628      	mov	r0, r5
 801080a:	4943      	ldr	r1, [pc, #268]	; (8010918 <NetworkParams::callbackFunction(char const*)+0x174>)
 801080c:	aa01      	add	r2, sp, #4
 801080e:	f001 fd49 	bl	80122a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010812:	b9c8      	cbnz	r0, 8010848 <NetworkParams::callbackFunction(char const*)+0xa4>
 8010814:	9b01      	ldr	r3, [sp, #4]
 8010816:	b2d9      	uxtb	r1, r3
 8010818:	29ac      	cmp	r1, #172	; 0xac
 801081a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801081e:	d009      	beq.n	8010834 <NetworkParams::callbackFunction(char const*)+0x90>
 8010820:	29c0      	cmp	r1, #192	; 0xc0
 8010822:	d00b      	beq.n	801083c <NetworkParams::callbackFunction(char const*)+0x98>
 8010824:	290a      	cmp	r1, #10
 8010826:	d10c      	bne.n	8010842 <NetworkParams::callbackFunction(char const*)+0x9e>
 8010828:	60a3      	str	r3, [r4, #8]
 801082a:	6863      	ldr	r3, [r4, #4]
 801082c:	f043 0302 	orr.w	r3, r3, #2
 8010830:	6063      	str	r3, [r4, #4]
 8010832:	e7cc      	b.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 8010834:	3a10      	subs	r2, #16
 8010836:	2a0f      	cmp	r2, #15
 8010838:	d8c9      	bhi.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 801083a:	e7f5      	b.n	8010828 <NetworkParams::callbackFunction(char const*)+0x84>
 801083c:	2aa8      	cmp	r2, #168	; 0xa8
 801083e:	d1c6      	bne.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 8010840:	e7f2      	b.n	8010828 <NetworkParams::callbackFunction(char const*)+0x84>
 8010842:	2b00      	cmp	r3, #0
 8010844:	d0f0      	beq.n	8010828 <NetworkParams::callbackFunction(char const*)+0x84>
 8010846:	e7c2      	b.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 8010848:	4628      	mov	r0, r5
 801084a:	4934      	ldr	r1, [pc, #208]	; (801091c <NetworkParams::callbackFunction(char const*)+0x178>)
 801084c:	aa01      	add	r2, sp, #4
 801084e:	f001 fd29 	bl	80122a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010852:	b960      	cbnz	r0, 801086e <NetworkParams::callbackFunction(char const*)+0xca>
 8010854:	9b01      	ldr	r3, [sp, #4]
 8010856:	2b00      	cmp	r3, #0
 8010858:	d0b9      	beq.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 801085a:	ba1a      	rev	r2, r3
 801085c:	43d1      	mvns	r1, r2
 801085e:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8010862:	d1b4      	bne.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 8010864:	60e3      	str	r3, [r4, #12]
 8010866:	6863      	ldr	r3, [r4, #4]
 8010868:	f043 0304 	orr.w	r3, r3, #4
 801086c:	e7e0      	b.n	8010830 <NetworkParams::callbackFunction(char const*)+0x8c>
 801086e:	4628      	mov	r0, r5
 8010870:	492b      	ldr	r1, [pc, #172]	; (8010920 <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010872:	aa01      	add	r2, sp, #4
 8010874:	f001 fd16 	bl	80122a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010878:	b928      	cbnz	r0, 8010886 <NetworkParams::callbackFunction(char const*)+0xe2>
 801087a:	9b01      	ldr	r3, [sp, #4]
 801087c:	6123      	str	r3, [r4, #16]
 801087e:	6863      	ldr	r3, [r4, #4]
 8010880:	f043 0308 	orr.w	r3, r3, #8
 8010884:	e7d4      	b.n	8010830 <NetworkParams::callbackFunction(char const*)+0x8c>
 8010886:	233f      	movs	r3, #63	; 0x3f
 8010888:	4628      	mov	r0, r5
 801088a:	9302      	str	r3, [sp, #8]
 801088c:	4925      	ldr	r1, [pc, #148]	; (8010924 <NetworkParams::callbackFunction(char const*)+0x180>)
 801088e:	ab02      	add	r3, sp, #8
 8010890:	f104 0219 	add.w	r2, r4, #25
 8010894:	f001 fc8a 	bl	80121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8010898:	b930      	cbnz	r0, 80108a8 <NetworkParams::callbackFunction(char const*)+0x104>
 801089a:	9b02      	ldr	r3, [sp, #8]
 801089c:	4423      	add	r3, r4
 801089e:	7658      	strb	r0, [r3, #25]
 80108a0:	6863      	ldr	r3, [r4, #4]
 80108a2:	f043 0320 	orr.w	r3, r3, #32
 80108a6:	e7c3      	b.n	8010830 <NetworkParams::callbackFunction(char const*)+0x8c>
 80108a8:	4628      	mov	r0, r5
 80108aa:	491f      	ldr	r1, [pc, #124]	; (8010928 <NetworkParams::callbackFunction(char const*)+0x184>)
 80108ac:	aa01      	add	r2, sp, #4
 80108ae:	f001 fcf9 	bl	80122a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80108b2:	b958      	cbnz	r0, 80108cc <NetworkParams::callbackFunction(char const*)+0x128>
 80108b4:	9a01      	ldr	r2, [sp, #4]
 80108b6:	6863      	ldr	r3, [r4, #4]
 80108b8:	b12a      	cbz	r2, 80108c6 <NetworkParams::callbackFunction(char const*)+0x122>
 80108ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80108be:	6063      	str	r3, [r4, #4]
 80108c0:	f8c4 2059 	str.w	r2, [r4, #89]	; 0x59
 80108c4:	e783      	b.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 80108c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80108ca:	e7f8      	b.n	80108be <NetworkParams::callbackFunction(char const*)+0x11a>
 80108cc:	4628      	mov	r0, r5
 80108ce:	4917      	ldr	r1, [pc, #92]	; (801092c <NetworkParams::callbackFunction(char const*)+0x188>)
 80108d0:	aa03      	add	r2, sp, #12
 80108d2:	f001 fc84 	bl	80121de <Sscan::Float(char const*, char const*, float&)>
 80108d6:	2800      	cmp	r0, #0
 80108d8:	f47f af79 	bne.w	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 80108dc:	9e03      	ldr	r6, [sp, #12]
 80108de:	6865      	ldr	r5, [r4, #4]
 80108e0:	4630      	mov	r0, r6
 80108e2:	f7f7 f941 	bl	8007b68 <__aeabi_f2iz>
 80108e6:	300c      	adds	r0, #12
 80108e8:	281a      	cmp	r0, #26
 80108ea:	d80a      	bhi.n	8010902 <NetworkParams::callbackFunction(char const*)+0x15e>
 80108ec:	2100      	movs	r1, #0
 80108ee:	4630      	mov	r0, r6
 80108f0:	f7f7 f908 	bl	8007b04 <__aeabi_fcmpeq>
 80108f4:	b928      	cbnz	r0, 8010902 <NetworkParams::callbackFunction(char const*)+0x15e>
 80108f6:	f8c4 605d 	str.w	r6, [r4, #93]	; 0x5d
 80108fa:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 80108fe:	6065      	str	r5, [r4, #4]
 8010900:	e765      	b.n	80107ce <NetworkParams::callbackFunction(char const*)+0x2a>
 8010902:	2300      	movs	r3, #0
 8010904:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8010908:	f8c4 305d 	str.w	r3, [r4, #93]	; 0x5d
 801090c:	e7f7      	b.n	80108fe <NetworkParams::callbackFunction(char const*)+0x15a>
 801090e:	bf00      	nop
 8010910:	08017973 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8010914:	08017951 	stmdaeq	r1, {r0, r4, r6, r8, fp, ip, sp, lr}
 8010918:	0801791c 	stmdaeq	r1, {r2, r3, r4, r8, fp, ip, sp, lr}
 801091c:	0801796a 	stmdaeq	r1, {r1, r3, r5, r6, r8, fp, ip, sp, lr}
 8010920:	08017941 	stmdaeq	r1, {r0, r6, r8, fp, ip, sp, lr}
 8010924:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8010928:	08017927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip, sp, lr}
 801092c:	08017932 	stmdaeq	r1, {r1, r4, r5, r8, fp, ip, sp, lr}

08010930 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8010930:	f7ff bf38 	b.w	80107a4 <NetworkParams::callbackFunction(char const*)>

08010934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 8010934:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010936:	4604      	mov	r4, r0
 8010938:	4615      	mov	r5, r2
 801093a:	461e      	mov	r6, r3
 801093c:	b089      	sub	sp, #36	; 0x24
 801093e:	3004      	adds	r0, #4
 8010940:	2900      	cmp	r1, #0
 8010942:	d040      	beq.n	80109c6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x92>
 8010944:	225e      	movs	r2, #94	; 0x5e
 8010946:	f002 fb44 	bl	8012fd2 <memmove>
 801094a:	462a      	mov	r2, r5
 801094c:	4633      	mov	r3, r6
 801094e:	498f      	ldr	r1, [pc, #572]	; (8010b8c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8010950:	a805      	add	r0, sp, #20
 8010952:	f001 fb53 	bl	8011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8010956:	6863      	ldr	r3, [r4, #4]
 8010958:	f104 0519 	add.w	r5, r4, #25
 801095c:	0798      	lsls	r0, r3, #30
 801095e:	bf5f      	itttt	pl
 8010960:	4a8b      	ldrpl	r2, [pc, #556]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 8010962:	6812      	ldrpl	r2, [r2, #0]
 8010964:	6912      	ldrpl	r2, [r2, #16]
 8010966:	60a2      	strpl	r2, [r4, #8]
 8010968:	0759      	lsls	r1, r3, #29
 801096a:	bf5f      	itttt	pl
 801096c:	4a88      	ldrpl	r2, [pc, #544]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801096e:	6812      	ldrpl	r2, [r2, #0]
 8010970:	6992      	ldrpl	r2, [r2, #24]
 8010972:	60e2      	strpl	r2, [r4, #12]
 8010974:	071a      	lsls	r2, r3, #28
 8010976:	bf5f      	itttt	pl
 8010978:	4a85      	ldrpl	r2, [pc, #532]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801097a:	6812      	ldrpl	r2, [r2, #0]
 801097c:	6952      	ldrpl	r2, [r2, #20]
 801097e:	6122      	strpl	r2, [r4, #16]
 8010980:	069b      	lsls	r3, r3, #26
 8010982:	d40c      	bmi.n	801099e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x6a>
 8010984:	4628      	mov	r0, r5
 8010986:	223f      	movs	r2, #63	; 0x3f
 8010988:	4b81      	ldr	r3, [pc, #516]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801098a:	681b      	ldr	r3, [r3, #0]
 801098c:	331b      	adds	r3, #27
 801098e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8010992:	b9f9      	cbnz	r1, 80109d4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa0>
 8010994:	f002 fb34 	bl	8013000 <memset>
 8010998:	2300      	movs	r3, #0
 801099a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 801099e:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80109a2:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 80109a6:	42b1      	cmp	r1, r6
 80109a8:	d227      	bcs.n	80109fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc6>
 80109aa:	9805      	ldr	r0, [sp, #20]
 80109ac:	1a76      	subs	r6, r6, r1
 80109ae:	4408      	add	r0, r1
 80109b0:	6861      	ldr	r1, [r4, #4]
 80109b2:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80109b6:	07cf      	lsls	r7, r1, #31
 80109b8:	7e23      	ldrb	r3, [r4, #24]
 80109ba:	d410      	bmi.n	80109de <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xaa>
 80109bc:	b982      	cbnz	r2, 80109e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 80109be:	9300      	str	r3, [sp, #0]
 80109c0:	4a74      	ldr	r2, [pc, #464]	; (8010b94 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 80109c2:	4b75      	ldr	r3, [pc, #468]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 80109c4:	e00f      	b.n	80109e6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xb2>
 80109c6:	6823      	ldr	r3, [r4, #0]
 80109c8:	4601      	mov	r1, r0
 80109ca:	681a      	ldr	r2, [r3, #0]
 80109cc:	4618      	mov	r0, r3
 80109ce:	68d2      	ldr	r2, [r2, #12]
 80109d0:	4790      	blx	r2
 80109d2:	e7ba      	b.n	801094a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x16>
 80109d4:	3a01      	subs	r2, #1
 80109d6:	f800 1b01 	strb.w	r1, [r0], #1
 80109da:	d1d8      	bne.n	801098e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x5a>
 80109dc:	e7dc      	b.n	8010998 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x64>
 80109de:	b30a      	cbz	r2, 8010a24 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf0>
 80109e0:	9300      	str	r3, [sp, #0]
 80109e2:	4a6e      	ldr	r2, [pc, #440]	; (8010b9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80109e4:	4b6c      	ldr	r3, [pc, #432]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 80109e6:	4631      	mov	r1, r6
 80109e8:	f002 fe62 	bl	80136b0 <snprintf>
 80109ec:	4286      	cmp	r6, r0
 80109ee:	bfa2      	ittt	ge
 80109f0:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 80109f4:	18c0      	addge	r0, r0, r3
 80109f6:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80109fa:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80109fe:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8010a02:	42b1      	cmp	r1, r6
 8010a04:	d221      	bcs.n	8010a4a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x116>
 8010a06:	9805      	ldr	r0, [sp, #20]
 8010a08:	1a76      	subs	r6, r6, r1
 8010a0a:	4408      	add	r0, r1
 8010a0c:	6861      	ldr	r1, [r4, #4]
 8010a0e:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8010a12:	05c9      	lsls	r1, r1, #23
 8010a14:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010a18:	d408      	bmi.n	8010a2c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf8>
 8010a1a:	b94a      	cbnz	r2, 8010a30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 8010a1c:	9300      	str	r3, [sp, #0]
 8010a1e:	4a5d      	ldr	r2, [pc, #372]	; (8010b94 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8010a20:	4b5f      	ldr	r3, [pc, #380]	; (8010ba0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8010a22:	e008      	b.n	8010a36 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x102>
 8010a24:	9300      	str	r3, [sp, #0]
 8010a26:	4a5f      	ldr	r2, [pc, #380]	; (8010ba4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8010a28:	4b5b      	ldr	r3, [pc, #364]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8010a2a:	e7dc      	b.n	80109e6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xb2>
 8010a2c:	2a00      	cmp	r2, #0
 8010a2e:	d03c      	beq.n	8010aaa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x176>
 8010a30:	9300      	str	r3, [sp, #0]
 8010a32:	4a5a      	ldr	r2, [pc, #360]	; (8010b9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 8010a34:	4b5a      	ldr	r3, [pc, #360]	; (8010ba0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8010a36:	4631      	mov	r1, r6
 8010a38:	f002 fe3a 	bl	80136b0 <snprintf>
 8010a3c:	4286      	cmp	r6, r0
 8010a3e:	bfa2      	ittt	ge
 8010a40:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8010a44:	18c0      	addge	r0, r0, r3
 8010a46:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8010a4a:	4957      	ldr	r1, [pc, #348]	; (8010ba8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8010a4c:	a805      	add	r0, sp, #20
 8010a4e:	f001 fb5b 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 8010a52:	6863      	ldr	r3, [r4, #4]
 8010a54:	68a2      	ldr	r2, [r4, #8]
 8010a56:	4955      	ldr	r1, [pc, #340]	; (8010bac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 8010a58:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8010a5c:	a805      	add	r0, sp, #20
 8010a5e:	f001 fb0f 	bl	8012080 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a62:	6863      	ldr	r3, [r4, #4]
 8010a64:	68e2      	ldr	r2, [r4, #12]
 8010a66:	4952      	ldr	r1, [pc, #328]	; (8010bb0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 8010a68:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8010a6c:	a805      	add	r0, sp, #20
 8010a6e:	f001 fb07 	bl	8012080 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a72:	6863      	ldr	r3, [r4, #4]
 8010a74:	494f      	ldr	r1, [pc, #316]	; (8010bb4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 8010a76:	6922      	ldr	r2, [r4, #16]
 8010a78:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010a7c:	a805      	add	r0, sp, #20
 8010a7e:	f001 faff 	bl	8012080 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a82:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8010a86:	f8bd 6018 	ldrh.w	r6, [sp, #24]
 8010a8a:	42b1      	cmp	r1, r6
 8010a8c:	d220      	bcs.n	8010ad0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19c>
 8010a8e:	6862      	ldr	r2, [r4, #4]
 8010a90:	9805      	ldr	r0, [sp, #20]
 8010a92:	0692      	lsls	r2, r2, #26
 8010a94:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010a98:	4408      	add	r0, r1
 8010a9a:	eba6 0601 	sub.w	r6, r6, r1
 8010a9e:	d408      	bmi.n	8010ab2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17e>
 8010aa0:	b94b      	cbnz	r3, 8010ab6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x182>
 8010aa2:	4b45      	ldr	r3, [pc, #276]	; (8010bb8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8010aa4:	4a45      	ldr	r2, [pc, #276]	; (8010bbc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8010aa6:	9500      	str	r5, [sp, #0]
 8010aa8:	e008      	b.n	8010abc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 8010aaa:	9300      	str	r3, [sp, #0]
 8010aac:	4a3d      	ldr	r2, [pc, #244]	; (8010ba4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8010aae:	4b3c      	ldr	r3, [pc, #240]	; (8010ba0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8010ab0:	e7c1      	b.n	8010a36 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x102>
 8010ab2:	2b00      	cmp	r3, #0
 8010ab4:	d035      	beq.n	8010b22 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ee>
 8010ab6:	4b40      	ldr	r3, [pc, #256]	; (8010bb8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8010ab8:	4a41      	ldr	r2, [pc, #260]	; (8010bc0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8010aba:	9500      	str	r5, [sp, #0]
 8010abc:	4631      	mov	r1, r6
 8010abe:	f002 fdf7 	bl	80136b0 <snprintf>
 8010ac2:	4286      	cmp	r6, r0
 8010ac4:	bfa2      	ittt	ge
 8010ac6:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8010aca:	18c0      	addge	r0, r0, r3
 8010acc:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8010ad0:	493c      	ldr	r1, [pc, #240]	; (8010bc4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8010ad2:	a805      	add	r0, sp, #20
 8010ad4:	f001 fb18 	bl	8012108 <PropertiesBuilder::AddComment(char const*)>
 8010ad8:	6863      	ldr	r3, [r4, #4]
 8010ada:	f8d4 2059 	ldr.w	r2, [r4, #89]	; 0x59
 8010ade:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8010ae2:	4939      	ldr	r1, [pc, #228]	; (8010bc8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 8010ae4:	a805      	add	r0, sp, #20
 8010ae6:	f001 facb 	bl	8012080 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010aea:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010aee:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8010af2:	42ab      	cmp	r3, r5
 8010af4:	d22a      	bcs.n	8010b4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x218>
 8010af6:	9f05      	ldr	r7, [sp, #20]
 8010af8:	f8d4 005d 	ldr.w	r0, [r4, #93]	; 0x5d
 8010afc:	441f      	add	r7, r3
 8010afe:	1aed      	subs	r5, r5, r3
 8010b00:	f7f6 fcb6 	bl	8007470 <__aeabi_f2d>
 8010b04:	6863      	ldr	r3, [r4, #4]
 8010b06:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010b0a:	f013 0f80 	tst.w	r3, #128	; 0x80
 8010b0e:	f04f 0301 	mov.w	r3, #1
 8010b12:	d10a      	bne.n	8010b2a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 8010b14:	b956      	cbnz	r6, 8010b2c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>
 8010b16:	9300      	str	r3, [sp, #0]
 8010b18:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b1c:	4b2b      	ldr	r3, [pc, #172]	; (8010bcc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 8010b1e:	4a2c      	ldr	r2, [pc, #176]	; (8010bd0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8010b20:	e009      	b.n	8010b36 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x202>
 8010b22:	4b25      	ldr	r3, [pc, #148]	; (8010bb8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8010b24:	4a2b      	ldr	r2, [pc, #172]	; (8010bd4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8010b26:	9500      	str	r5, [sp, #0]
 8010b28:	e7c8      	b.n	8010abc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x188>
 8010b2a:	b346      	cbz	r6, 8010b7e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x24a>
 8010b2c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b30:	9300      	str	r3, [sp, #0]
 8010b32:	4a29      	ldr	r2, [pc, #164]	; (8010bd8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 8010b34:	4b25      	ldr	r3, [pc, #148]	; (8010bcc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 8010b36:	4629      	mov	r1, r5
 8010b38:	4638      	mov	r0, r7
 8010b3a:	f002 fdb9 	bl	80136b0 <snprintf>
 8010b3e:	4285      	cmp	r5, r0
 8010b40:	bfa2      	ittt	ge
 8010b42:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8010b46:	18c0      	addge	r0, r0, r3
 8010b48:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8010b4c:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010b50:	b17b      	cbz	r3, 8010b72 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x23e>
 8010b52:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010b56:	9b05      	ldr	r3, [sp, #20]
 8010b58:	4413      	add	r3, r2
 8010b5a:	227d      	movs	r2, #125	; 0x7d
 8010b5c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8010b60:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b64:	9905      	ldr	r1, [sp, #20]
 8010b66:	54ca      	strb	r2, [r1, r3]
 8010b68:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b6c:	3301      	adds	r3, #1
 8010b6e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b72:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010b76:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b78:	601a      	str	r2, [r3, #0]
 8010b7a:	b009      	add	sp, #36	; 0x24
 8010b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b7e:	9300      	str	r3, [sp, #0]
 8010b80:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b84:	4b11      	ldr	r3, [pc, #68]	; (8010bcc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 8010b86:	4a15      	ldr	r2, [pc, #84]	; (8010bdc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 8010b88:	e7d5      	b.n	8010b36 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x202>
 8010b8a:	bf00      	nop
 8010b8c:	0801797c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, ip, sp, lr}
 8010b90:	20011ec0 	andcs	r1, r1, r0, asr #29
 8010b94:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 8010b98:	08017973 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8010b9c:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 8010ba0:	08017951 	stmdaeq	r1, {r0, r4, r6, r8, fp, ip, sp, lr}
 8010ba4:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}
 8010ba8:	08017907 	stmdaeq	r1, {r0, r1, r2, r8, fp, ip, sp, lr}
 8010bac:	0801791c 	stmdaeq	r1, {r2, r3, r4, r8, fp, ip, sp, lr}
 8010bb0:	0801796a 	stmdaeq	r1, {r1, r3, r5, r6, r8, fp, ip, sp, lr}
 8010bb4:	08017941 	stmdaeq	r1, {r0, r6, r8, fp, ip, sp, lr}
 8010bb8:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8010bbc:	08015d84 	stmdaeq	r1, {r2, r7, r8, sl, fp, ip, lr}
 8010bc0:	08015d79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, fp, ip, lr}
 8010bc4:	08017911 	stmdaeq	r1, {r0, r4, r8, fp, ip, sp, lr}
 8010bc8:	08017927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip, sp, lr}
 8010bcc:	08017932 	stmdaeq	r1, {r1, r4, r5, r8, fp, ip, sp, lr}
 8010bd0:	0801725f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, ip, sp, lr}
 8010bd4:	08015d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, ip, lr}
 8010bd8:	08017254 	stmdaeq	r1, {r2, r4, r6, r9, ip, sp, lr}
 8010bdc:	08017260 	stmdaeq	r1, {r5, r6, r9, ip, sp, lr}

08010be0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8010be0:	b513      	push	{r0, r1, r4, lr}
 8010be2:	6804      	ldr	r4, [r0, #0]
 8010be4:	b914      	cbnz	r4, 8010bec <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8010be6:	601c      	str	r4, [r3, #0]
 8010be8:	b002      	add	sp, #8
 8010bea:	bd10      	pop	{r4, pc}
 8010bec:	9300      	str	r3, [sp, #0]
 8010bee:	4613      	mov	r3, r2
 8010bf0:	460a      	mov	r2, r1
 8010bf2:	2100      	movs	r1, #0
 8010bf4:	f7ff fe9e 	bl	8010934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 8010bf8:	e7f6      	b.n	8010be8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08010bfa <NetworkParams::Dump()>:
 8010bfa:	4770      	bx	lr

08010bfc <memcpy.isra.0>:
 8010bfc:	3801      	subs	r0, #1
 8010bfe:	440a      	add	r2, r1
 8010c00:	4291      	cmp	r1, r2
 8010c02:	d100      	bne.n	8010c06 <memcpy.isra.0+0xa>
 8010c04:	4770      	bx	lr
 8010c06:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010c0a:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010c0e:	e7f7      	b.n	8010c00 <memcpy.isra.0+0x4>

08010c10 <arp_announce>:
 8010c10:	4803      	ldr	r0, [pc, #12]	; (8010c20 <arp_announce+0x10>)
 8010c12:	69c3      	ldr	r3, [r0, #28]
 8010c14:	b113      	cbz	r3, 8010c1c <arp_announce+0xc>
 8010c16:	212a      	movs	r1, #42	; 0x2a
 8010c18:	f004 b93e 	b.w	8014e98 <emac_eth_send>
 8010c1c:	4770      	bx	lr
 8010c1e:	bf00      	nop
 8010c20:	20011ec4 	andcs	r1, r1, r4, asr #29

08010c24 <arp_handle_request>:
 8010c24:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c26:	2204      	movs	r2, #4
 8010c28:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010c2c:	4604      	mov	r4, r0
 8010c2e:	eb0d 0002 	add.w	r0, sp, r2
 8010c32:	f7ff ffe3 	bl	8010bfc <memcpy.isra.0>
 8010c36:	4b0d      	ldr	r3, [pc, #52]	; (8010c6c <arp_handle_request+0x48>)
 8010c38:	9a01      	ldr	r2, [sp, #4]
 8010c3a:	69db      	ldr	r3, [r3, #28]
 8010c3c:	429a      	cmp	r2, r3
 8010c3e:	d113      	bne.n	8010c68 <arp_handle_request+0x44>
 8010c40:	2206      	movs	r2, #6
 8010c42:	4d0b      	ldr	r5, [pc, #44]	; (8010c70 <arp_handle_request+0x4c>)
 8010c44:	18a1      	adds	r1, r4, r2
 8010c46:	4628      	mov	r0, r5
 8010c48:	f7ff ffd8 	bl	8010bfc <memcpy.isra.0>
 8010c4c:	f104 0116 	add.w	r1, r4, #22
 8010c50:	f105 0020 	add.w	r0, r5, #32
 8010c54:	2206      	movs	r2, #6
 8010c56:	f7ff ffd1 	bl	8010bfc <memcpy.isra.0>
 8010c5a:	69e3      	ldr	r3, [r4, #28]
 8010c5c:	212a      	movs	r1, #42	; 0x2a
 8010c5e:	4628      	mov	r0, r5
 8010c60:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8010c64:	f004 f918 	bl	8014e98 <emac_eth_send>
 8010c68:	b003      	add	sp, #12
 8010c6a:	bd30      	pop	{r4, r5, pc}
 8010c6c:	20011ec4 	andcs	r1, r1, r4, asr #29
 8010c70:	20011ef0 	strdcs	r1, [r1], -r0

08010c74 <arp_handle_reply>:
 8010c74:	69c1      	ldr	r1, [r0, #28]
 8010c76:	3016      	adds	r0, #22
 8010c78:	f000 b8ac 	b.w	8010dd4 <arp_cache_update>

08010c7c <arp_init>:
 8010c7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c80:	4604      	mov	r4, r0
 8010c82:	460d      	mov	r5, r1
 8010c84:	f000 f88c 	bl	8010da0 <arp_cache_init>
 8010c88:	2206      	movs	r2, #6
 8010c8a:	4621      	mov	r1, r4
 8010c8c:	482e      	ldr	r0, [pc, #184]	; (8010d48 <arp_init+0xcc>)
 8010c8e:	682f      	ldr	r7, [r5, #0]
 8010c90:	f7ff ffb4 	bl	8010bfc <memcpy.isra.0>
 8010c94:	4b2d      	ldr	r3, [pc, #180]	; (8010d4c <arp_init+0xd0>)
 8010c96:	2507      	movs	r5, #7
 8010c98:	461e      	mov	r6, r3
 8010c9a:	22ff      	movs	r2, #255	; 0xff
 8010c9c:	3d01      	subs	r5, #1
 8010c9e:	d146      	bne.n	8010d2e <arp_init+0xb2>
 8010ca0:	4b2b      	ldr	r3, [pc, #172]	; (8010d50 <arp_init+0xd4>)
 8010ca2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8010d54 <arp_init+0xd8>
 8010ca6:	2206      	movs	r2, #6
 8010ca8:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8010cac:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010cb0:	4621      	mov	r1, r4
 8010cb2:	4829      	ldr	r0, [pc, #164]	; (8010d58 <arp_init+0xdc>)
 8010cb4:	82b3      	strh	r3, [r6, #20]
 8010cb6:	f7ff ffa1 	bl	8010bfc <memcpy.isra.0>
 8010cba:	2307      	movs	r3, #7
 8010cbc:	4a27      	ldr	r2, [pc, #156]	; (8010d5c <arp_init+0xe0>)
 8010cbe:	61f7      	str	r7, [r6, #28]
 8010cc0:	3b01      	subs	r3, #1
 8010cc2:	d137      	bne.n	8010d34 <arp_init+0xb8>
 8010cc4:	2206      	movs	r2, #6
 8010cc6:	4621      	mov	r1, r4
 8010cc8:	4825      	ldr	r0, [pc, #148]	; (8010d60 <arp_init+0xe4>)
 8010cca:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8010cce:	f7ff ff95 	bl	8010bfc <memcpy.isra.0>
 8010cd2:	4a24      	ldr	r2, [pc, #144]	; (8010d64 <arp_init+0xe8>)
 8010cd4:	2306      	movs	r3, #6
 8010cd6:	4615      	mov	r5, r2
 8010cd8:	21ff      	movs	r1, #255	; 0xff
 8010cda:	3b01      	subs	r3, #1
 8010cdc:	d22d      	bcs.n	8010d3a <arp_init+0xbe>
 8010cde:	4b1c      	ldr	r3, [pc, #112]	; (8010d50 <arp_init+0xd4>)
 8010ce0:	2206      	movs	r2, #6
 8010ce2:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8010ce6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010cea:	4621      	mov	r1, r4
 8010cec:	481e      	ldr	r0, [pc, #120]	; (8010d68 <arp_init+0xec>)
 8010cee:	82ab      	strh	r3, [r5, #20]
 8010cf0:	f7ff ff84 	bl	8010bfc <memcpy.isra.0>
 8010cf4:	2307      	movs	r3, #7
 8010cf6:	2100      	movs	r1, #0
 8010cf8:	4a1c      	ldr	r2, [pc, #112]	; (8010d6c <arp_init+0xf0>)
 8010cfa:	61ef      	str	r7, [r5, #28]
 8010cfc:	3b01      	subs	r3, #1
 8010cfe:	d11f      	bne.n	8010d40 <arp_init+0xc4>
 8010d00:	2206      	movs	r2, #6
 8010d02:	4d1b      	ldr	r5, [pc, #108]	; (8010d70 <arp_init+0xf4>)
 8010d04:	4621      	mov	r1, r4
 8010d06:	18a8      	adds	r0, r5, r2
 8010d08:	f7ff ff78 	bl	8010bfc <memcpy.isra.0>
 8010d0c:	4b10      	ldr	r3, [pc, #64]	; (8010d50 <arp_init+0xd4>)
 8010d0e:	4621      	mov	r1, r4
 8010d10:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8010d14:	f44f 7300 	mov.w	r3, #512	; 0x200
 8010d18:	f105 0016 	add.w	r0, r5, #22
 8010d1c:	2206      	movs	r2, #6
 8010d1e:	82ab      	strh	r3, [r5, #20]
 8010d20:	f7ff ff6c 	bl	8010bfc <memcpy.isra.0>
 8010d24:	61ef      	str	r7, [r5, #28]
 8010d26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010d2a:	f7ff bf71 	b.w	8010c10 <arp_announce>
 8010d2e:	f803 2b01 	strb.w	r2, [r3], #1
 8010d32:	e7b3      	b.n	8010c9c <arp_init+0x20>
 8010d34:	f802 5b01 	strb.w	r5, [r2], #1
 8010d38:	e7c2      	b.n	8010cc0 <arp_init+0x44>
 8010d3a:	f802 1b01 	strb.w	r1, [r2], #1
 8010d3e:	e7cc      	b.n	8010cda <arp_init+0x5e>
 8010d40:	f802 1b01 	strb.w	r1, [r2], #1
 8010d44:	e7da      	b.n	8010cfc <arp_init+0x80>
 8010d46:	bf00      	nop
 8010d48:	20011eca 	andcs	r1, r1, sl, asr #29
 8010d4c:	20011ec4 	andcs	r1, r1, r4, asr #29
 8010d50:	01000608 	tsteq	r0, r8, lsl #12
 8010d54:	04060008 	streq	r0, [r6], #-8
 8010d58:	20011eda 	ldrdcs	r1, [r1], -sl
 8010d5c:	20011ee4 	andcs	r1, r1, r4, ror #29
 8010d60:	20011f22 	andcs	r1, r1, r2, lsr #30
 8010d64:	20011f1c 	andcs	r1, r1, ip, lsl pc
 8010d68:	20011f32 	andcs	r1, r1, r2, lsr pc
 8010d6c:	20011f3c 	andcs	r1, r1, ip, lsr pc
 8010d70:	20011ef0 	strdcs	r1, [r1], -r0

08010d74 <arp_send_request>:
 8010d74:	4b03      	ldr	r3, [pc, #12]	; (8010d84 <arp_send_request+0x10>)
 8010d76:	212a      	movs	r1, #42	; 0x2a
 8010d78:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8010d7c:	4618      	mov	r0, r3
 8010d7e:	f004 b88b 	b.w	8014e98 <emac_eth_send>
 8010d82:	bf00      	nop
 8010d84:	20011f1c 	andcs	r1, r1, ip, lsl pc

08010d88 <arp_handle>:
 8010d88:	8a83      	ldrh	r3, [r0, #20]
 8010d8a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8010d8e:	d003      	beq.n	8010d98 <arp_handle+0x10>
 8010d90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010d94:	d002      	beq.n	8010d9c <arp_handle+0x14>
 8010d96:	4770      	bx	lr
 8010d98:	f7ff bf44 	b.w	8010c24 <arp_handle_request>
 8010d9c:	f7ff bf6a 	b.w	8010c74 <arp_handle_reply>

08010da0 <arp_cache_init>:
 8010da0:	2300      	movs	r3, #0
 8010da2:	4618      	mov	r0, r3
 8010da4:	4a09      	ldr	r2, [pc, #36]	; (8010dcc <arp_cache_init+0x2c>)
 8010da6:	b510      	push	{r4, lr}
 8010da8:	8013      	strh	r3, [r2, #0]
 8010daa:	4a09      	ldr	r2, [pc, #36]	; (8010dd0 <arp_cache_init+0x30>)
 8010dac:	4611      	mov	r1, r2
 8010dae:	f842 0c04 	str.w	r0, [r2, #-4]
 8010db2:	1d94      	adds	r4, r2, #6
 8010db4:	42a1      	cmp	r1, r4
 8010db6:	d105      	bne.n	8010dc4 <arp_cache_init+0x24>
 8010db8:	3303      	adds	r3, #3
 8010dba:	2b60      	cmp	r3, #96	; 0x60
 8010dbc:	f102 020c 	add.w	r2, r2, #12
 8010dc0:	d1f4      	bne.n	8010dac <arp_cache_init+0xc>
 8010dc2:	bd10      	pop	{r4, pc}
 8010dc4:	f801 0b01 	strb.w	r0, [r1], #1
 8010dc8:	e7f4      	b.n	8010db4 <arp_cache_init+0x14>
 8010dca:	bf00      	nop
 8010dcc:	200120c8 	andcs	r2, r1, r8, asr #1
 8010dd0:	20011f4c 	andcs	r1, r1, ip, asr #30

08010dd4 <arp_cache_update>:
 8010dd4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dd6:	4e11      	ldr	r6, [pc, #68]	; (8010e1c <arp_cache_update+0x48>)
 8010dd8:	8833      	ldrh	r3, [r6, #0]
 8010dda:	2b20      	cmp	r3, #32
 8010ddc:	d018      	beq.n	8010e10 <arp_cache_update+0x3c>
 8010dde:	2400      	movs	r4, #0
 8010de0:	220c      	movs	r2, #12
 8010de2:	4d0f      	ldr	r5, [pc, #60]	; (8010e20 <arp_cache_update+0x4c>)
 8010de4:	b2a7      	uxth	r7, r4
 8010de6:	42bb      	cmp	r3, r7
 8010de8:	d80b      	bhi.n	8010e02 <arp_cache_update+0x2e>
 8010dea:	fb02 5203 	mla	r2, r2, r3, r5
 8010dee:	1d84      	adds	r4, r0, #6
 8010df0:	3203      	adds	r2, #3
 8010df2:	42a0      	cmp	r0, r4
 8010df4:	d10d      	bne.n	8010e12 <arp_cache_update+0x3e>
 8010df6:	220c      	movs	r2, #12
 8010df8:	435a      	muls	r2, r3
 8010dfa:	3301      	adds	r3, #1
 8010dfc:	50a9      	str	r1, [r5, r2]
 8010dfe:	8033      	strh	r3, [r6, #0]
 8010e00:	e006      	b.n	8010e10 <arp_cache_update+0x3c>
 8010e02:	3401      	adds	r4, #1
 8010e04:	fb02 5704 	mla	r7, r2, r4, r5
 8010e08:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8010e0c:	428f      	cmp	r7, r1
 8010e0e:	d1e9      	bne.n	8010de4 <arp_cache_update+0x10>
 8010e10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e12:	f810 7b01 	ldrb.w	r7, [r0], #1
 8010e16:	f802 7f01 	strb.w	r7, [r2, #1]!
 8010e1a:	e7ea      	b.n	8010df2 <arp_cache_update+0x1e>
 8010e1c:	200120c8 	andcs	r2, r1, r8, asr #1
 8010e20:	20011f48 	andcs	r1, r1, r8, asr #30

08010e24 <arp_cache_lookup>:
 8010e24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010e28:	2200      	movs	r2, #0
 8010e2a:	4606      	mov	r6, r0
 8010e2c:	460c      	mov	r4, r1
 8010e2e:	200c      	movs	r0, #12
 8010e30:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8010eb8 <arp_cache_lookup+0x94>
 8010e34:	fb00 f302 	mul.w	r3, r0, r2
 8010e38:	f853 1008 	ldr.w	r1, [r3, r8]
 8010e3c:	42b1      	cmp	r1, r6
 8010e3e:	d10d      	bne.n	8010e5c <arp_cache_lookup+0x38>
 8010e40:	3304      	adds	r3, #4
 8010e42:	4443      	add	r3, r8
 8010e44:	3c01      	subs	r4, #1
 8010e46:	1d9a      	adds	r2, r3, #6
 8010e48:	4293      	cmp	r3, r2
 8010e4a:	d102      	bne.n	8010e52 <arp_cache_lookup+0x2e>
 8010e4c:	4630      	mov	r0, r6
 8010e4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010e52:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010e56:	f804 1f01 	strb.w	r1, [r4, #1]!
 8010e5a:	e7f5      	b.n	8010e48 <arp_cache_lookup+0x24>
 8010e5c:	b111      	cbz	r1, 8010e64 <arp_cache_lookup+0x40>
 8010e5e:	3201      	adds	r2, #1
 8010e60:	2a20      	cmp	r2, #32
 8010e62:	d1e7      	bne.n	8010e34 <arp_cache_lookup+0x10>
 8010e64:	2704      	movs	r7, #4
 8010e66:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010ebc <arp_cache_lookup+0x98>
 8010e6a:	f8ba 5000 	ldrh.w	r5, [sl]
 8010e6e:	3f01      	subs	r7, #1
 8010e70:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010e74:	d101      	bne.n	8010e7a <arp_cache_lookup+0x56>
 8010e76:	463e      	mov	r6, r7
 8010e78:	e7e8      	b.n	8010e4c <arp_cache_lookup+0x28>
 8010e7a:	4630      	mov	r0, r6
 8010e7c:	f7ff ff7a 	bl	8010d74 <arp_send_request>
 8010e80:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8010e84:	f1b9 0901 	subs.w	r9, r9, #1
 8010e88:	f8ba 3000 	ldrh.w	r3, [sl]
 8010e8c:	d011      	beq.n	8010eb2 <arp_cache_lookup+0x8e>
 8010e8e:	429d      	cmp	r5, r3
 8010e90:	d00c      	beq.n	8010eac <arp_cache_lookup+0x88>
 8010e92:	230c      	movs	r3, #12
 8010e94:	fb03 8505 	mla	r5, r3, r5, r8
 8010e98:	3c01      	subs	r4, #1
 8010e9a:	1d2b      	adds	r3, r5, #4
 8010e9c:	350a      	adds	r5, #10
 8010e9e:	42ab      	cmp	r3, r5
 8010ea0:	d0d4      	beq.n	8010e4c <arp_cache_lookup+0x28>
 8010ea2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010ea6:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010eaa:	e7f8      	b.n	8010e9e <arp_cache_lookup+0x7a>
 8010eac:	f7fd ff1c 	bl	800ece8 <net_handle>
 8010eb0:	e7e8      	b.n	8010e84 <arp_cache_lookup+0x60>
 8010eb2:	429d      	cmp	r5, r3
 8010eb4:	d0db      	beq.n	8010e6e <arp_cache_lookup+0x4a>
 8010eb6:	e7ec      	b.n	8010e92 <arp_cache_lookup+0x6e>
 8010eb8:	20011f48 	andcs	r1, r1, r8, asr #30
 8010ebc:	200120c8 	andcs	r2, r1, r8, asr #1

08010ec0 <_parse_response>:
 8010ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ec4:	460c      	mov	r4, r1
 8010ec6:	4e5b      	ldr	r6, [pc, #364]	; (8011034 <_parse_response+0x174>)
 8010ec8:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 8010ecc:	6837      	ldr	r7, [r6, #0]
 8010ece:	b2c5      	uxtb	r5, r0
 8010ed0:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8010ed4:	f7fd ff08 	bl	800ece8 <net_handle>
 8010ed8:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010edc:	4628      	mov	r0, r5
 8010ede:	f8cd 8000 	str.w	r8, [sp]
 8010ee2:	ab0a      	add	r3, sp, #40	; 0x28
 8010ee4:	a90b      	add	r1, sp, #44	; 0x2c
 8010ee6:	f7fe fc03 	bl	800f6f0 <udp_recv>
 8010eea:	2800      	cmp	r0, #0
 8010eec:	d05f      	beq.n	8010fae <_parse_response+0xee>
 8010eee:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8010ef2:	2b43      	cmp	r3, #67	; 0x43
 8010ef4:	d15b      	bne.n	8010fae <_parse_response+0xee>
 8010ef6:	aa12      	add	r2, sp, #72	; 0x48
 8010ef8:	1e63      	subs	r3, r4, #1
 8010efa:	1d61      	adds	r1, r4, #5
 8010efc:	428b      	cmp	r3, r1
 8010efe:	d150      	bne.n	8010fa2 <_parse_response+0xe2>
 8010f00:	2100      	movs	r1, #0
 8010f02:	ab0b      	add	r3, sp, #44	; 0x2c
 8010f04:	181c      	adds	r4, r3, r0
 8010f06:	4608      	mov	r0, r1
 8010f08:	4b4b      	ldr	r3, [pc, #300]	; (8011038 <_parse_response+0x178>)
 8010f0a:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8010f0e:	781a      	ldrb	r2, [r3, #0]
 8010f10:	f893 b001 	ldrb.w	fp, [r3, #1]
 8010f14:	f893 c002 	ldrb.w	ip, [r3, #2]
 8010f18:	78dd      	ldrb	r5, [r3, #3]
 8010f1a:	4b48      	ldr	r3, [pc, #288]	; (801103c <_parse_response+0x17c>)
 8010f1c:	9207      	str	r2, [sp, #28]
 8010f1e:	781a      	ldrb	r2, [r3, #0]
 8010f20:	789f      	ldrb	r7, [r3, #2]
 8010f22:	78de      	ldrb	r6, [r3, #3]
 8010f24:	9206      	str	r2, [sp, #24]
 8010f26:	785a      	ldrb	r2, [r3, #1]
 8010f28:	4b45      	ldr	r3, [pc, #276]	; (8011040 <_parse_response+0x180>)
 8010f2a:	9203      	str	r2, [sp, #12]
 8010f2c:	f893 a000 	ldrb.w	sl, [r3]
 8010f30:	f893 9001 	ldrb.w	r9, [r3, #1]
 8010f34:	f893 8002 	ldrb.w	r8, [r3, #2]
 8010f38:	f893 e003 	ldrb.w	lr, [r3, #3]
 8010f3c:	ab47      	add	r3, sp, #284	; 0x11c
 8010f3e:	42a3      	cmp	r3, r4
 8010f40:	d33f      	bcc.n	8010fc2 <_parse_response+0x102>
 8010f42:	9b04      	ldr	r3, [sp, #16]
 8010f44:	b143      	cbz	r3, 8010f58 <_parse_response+0x98>
 8010f46:	4b3e      	ldr	r3, [pc, #248]	; (8011040 <_parse_response+0x180>)
 8010f48:	f883 a000 	strb.w	sl, [r3]
 8010f4c:	f883 9001 	strb.w	r9, [r3, #1]
 8010f50:	f883 8002 	strb.w	r8, [r3, #2]
 8010f54:	f883 e003 	strb.w	lr, [r3, #3]
 8010f58:	9b05      	ldr	r3, [sp, #20]
 8010f5a:	b133      	cbz	r3, 8010f6a <_parse_response+0xaa>
 8010f5c:	4b37      	ldr	r3, [pc, #220]	; (801103c <_parse_response+0x17c>)
 8010f5e:	9a06      	ldr	r2, [sp, #24]
 8010f60:	709f      	strb	r7, [r3, #2]
 8010f62:	701a      	strb	r2, [r3, #0]
 8010f64:	9a03      	ldr	r2, [sp, #12]
 8010f66:	70de      	strb	r6, [r3, #3]
 8010f68:	705a      	strb	r2, [r3, #1]
 8010f6a:	b139      	cbz	r1, 8010f7c <_parse_response+0xbc>
 8010f6c:	4b32      	ldr	r3, [pc, #200]	; (8011038 <_parse_response+0x178>)
 8010f6e:	9a07      	ldr	r2, [sp, #28]
 8010f70:	f883 b001 	strb.w	fp, [r3, #1]
 8010f74:	701a      	strb	r2, [r3, #0]
 8010f76:	f883 c002 	strb.w	ip, [r3, #2]
 8010f7a:	70dd      	strb	r5, [r3, #3]
 8010f7c:	2802      	cmp	r0, #2
 8010f7e:	d10c      	bne.n	8010f9a <_parse_response+0xda>
 8010f80:	4b30      	ldr	r3, [pc, #192]	; (8011044 <_parse_response+0x184>)
 8010f82:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 8010f86:	701a      	strb	r2, [r3, #0]
 8010f88:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 8010f8c:	705a      	strb	r2, [r3, #1]
 8010f8e:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 8010f92:	709a      	strb	r2, [r3, #2]
 8010f94:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 8010f98:	70da      	strb	r2, [r3, #3]
 8010f9a:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 8010f9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fa2:	f812 cb01 	ldrb.w	ip, [r2], #1
 8010fa6:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8010faa:	45e6      	cmp	lr, ip
 8010fac:	d0a6      	beq.n	8010efc <_parse_response+0x3c>
 8010fae:	6833      	ldr	r3, [r6, #0]
 8010fb0:	1bdb      	subs	r3, r3, r7
 8010fb2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010fb6:	d38b      	bcc.n	8010ed0 <_parse_response+0x10>
 8010fb8:	2800      	cmp	r0, #0
 8010fba:	d1a1      	bne.n	8010f00 <_parse_response+0x40>
 8010fbc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010fc0:	e7eb      	b.n	8010f9a <_parse_response+0xda>
 8010fc2:	781a      	ldrb	r2, [r3, #0]
 8010fc4:	2a35      	cmp	r2, #53	; 0x35
 8010fc6:	d011      	beq.n	8010fec <_parse_response+0x12c>
 8010fc8:	d808      	bhi.n	8010fdc <_parse_response+0x11c>
 8010fca:	2a01      	cmp	r2, #1
 8010fcc:	d011      	beq.n	8010ff2 <_parse_response+0x132>
 8010fce:	2a03      	cmp	r2, #3
 8010fd0:	d01a      	beq.n	8011008 <_parse_response+0x148>
 8010fd2:	b14a      	cbz	r2, 8010fe8 <_parse_response+0x128>
 8010fd4:	1c9a      	adds	r2, r3, #2
 8010fd6:	785b      	ldrb	r3, [r3, #1]
 8010fd8:	4413      	add	r3, r2
 8010fda:	e7b0      	b.n	8010f3e <_parse_response+0x7e>
 8010fdc:	2a36      	cmp	r2, #54	; 0x36
 8010fde:	d01f      	beq.n	8011020 <_parse_response+0x160>
 8010fe0:	2aff      	cmp	r2, #255	; 0xff
 8010fe2:	d1f7      	bne.n	8010fd4 <_parse_response+0x114>
 8010fe4:	4623      	mov	r3, r4
 8010fe6:	e7aa      	b.n	8010f3e <_parse_response+0x7e>
 8010fe8:	3301      	adds	r3, #1
 8010fea:	e7a8      	b.n	8010f3e <_parse_response+0x7e>
 8010fec:	7898      	ldrb	r0, [r3, #2]
 8010fee:	3303      	adds	r3, #3
 8010ff0:	e7a5      	b.n	8010f3e <_parse_response+0x7e>
 8010ff2:	f893 a002 	ldrb.w	sl, [r3, #2]
 8010ff6:	f893 9003 	ldrb.w	r9, [r3, #3]
 8010ffa:	f893 8004 	ldrb.w	r8, [r3, #4]
 8010ffe:	f893 e005 	ldrb.w	lr, [r3, #5]
 8011002:	9204      	str	r2, [sp, #16]
 8011004:	3306      	adds	r3, #6
 8011006:	e79a      	b.n	8010f3e <_parse_response+0x7e>
 8011008:	789a      	ldrb	r2, [r3, #2]
 801100a:	791f      	ldrb	r7, [r3, #4]
 801100c:	9206      	str	r2, [sp, #24]
 801100e:	78da      	ldrb	r2, [r3, #3]
 8011010:	795e      	ldrb	r6, [r3, #5]
 8011012:	9203      	str	r2, [sp, #12]
 8011014:	785a      	ldrb	r2, [r3, #1]
 8011016:	4413      	add	r3, r2
 8011018:	2201      	movs	r2, #1
 801101a:	3302      	adds	r3, #2
 801101c:	9205      	str	r2, [sp, #20]
 801101e:	e78e      	b.n	8010f3e <_parse_response+0x7e>
 8011020:	789a      	ldrb	r2, [r3, #2]
 8011022:	f893 b003 	ldrb.w	fp, [r3, #3]
 8011026:	f893 c004 	ldrb.w	ip, [r3, #4]
 801102a:	795d      	ldrb	r5, [r3, #5]
 801102c:	2101      	movs	r1, #1
 801102e:	9207      	str	r2, [sp, #28]
 8011030:	3306      	adds	r3, #6
 8011032:	e784      	b.n	8010f3e <_parse_response+0x7e>
 8011034:	200125a8 	andcs	r2, r1, r8, lsr #11
 8011038:	200122fc 	strdcs	r2, [r1], -ip
 801103c:	200120cc 	andcs	r2, r1, ip, asr #1
 8011040:	200120d4 	ldrdcs	r2, [r1], -r4
 8011044:	200120d0 	ldrdcs	r2, [r1], -r0

08011048 <memcpy.isra.0>:
 8011048:	3801      	subs	r0, #1
 801104a:	440a      	add	r2, r1
 801104c:	4291      	cmp	r1, r2
 801104e:	d100      	bne.n	8011052 <memcpy.isra.0+0xa>
 8011050:	4770      	bx	lr
 8011052:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011056:	f800 3f01 	strb.w	r3, [r0, #1]!
 801105a:	e7f7      	b.n	801104c <memcpy.isra.0+0x4>

0801105c <dhcp_client>:
 801105c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011060:	b087      	sub	sp, #28
 8011062:	9203      	str	r2, [sp, #12]
 8011064:	4a77      	ldr	r2, [pc, #476]	; (8011244 <dhcp_client+0x1e8>)
 8011066:	460f      	mov	r7, r1
 8011068:	4605      	mov	r5, r0
 801106a:	f44f 7309 	mov.w	r3, #548	; 0x224
 801106e:	4614      	mov	r4, r2
 8011070:	2100      	movs	r1, #0
 8011072:	3b01      	subs	r3, #1
 8011074:	f802 1b01 	strb.w	r1, [r2], #1
 8011078:	d1fb      	bne.n	8011072 <dhcp_client+0x16>
 801107a:	f240 1301 	movw	r3, #257	; 0x101
 801107e:	2206      	movs	r2, #6
 8011080:	4629      	mov	r1, r5
 8011082:	4871      	ldr	r0, [pc, #452]	; (8011248 <dhcp_client+0x1ec>)
 8011084:	8023      	strh	r3, [r4, #0]
 8011086:	70a2      	strb	r2, [r4, #2]
 8011088:	f7ff ffde 	bl	8011048 <memcpy.isra.0>
 801108c:	4b6f      	ldr	r3, [pc, #444]	; (801124c <dhcp_client+0x1f0>)
 801108e:	2044      	movs	r0, #68	; 0x44
 8011090:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8011094:	f240 1335 	movw	r3, #309	; 0x135
 8011098:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 801109c:	f7fe faee 	bl	800f67c <udp_bind>
 80110a0:	1e06      	subs	r6, r0, #0
 80110a2:	f2c0 80c9 	blt.w	8011238 <dhcp_client+0x1dc>
 80110a6:	f04f 0915 	mov.w	r9, #21
 80110aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011244 <dhcp_client+0x1e8>
 80110ae:	f1b9 0901 	subs.w	r9, r9, #1
 80110b2:	d11f      	bne.n	80110f4 <dhcp_client+0x98>
 80110b4:	464c      	mov	r4, r9
 80110b6:	2044      	movs	r0, #68	; 0x44
 80110b8:	f7fe fafa 	bl	800f6b0 <udp_unbind>
 80110bc:	2c00      	cmp	r4, #0
 80110be:	f000 80be 	beq.w	801123e <dhcp_client+0x1e2>
 80110c2:	2204      	movs	r2, #4
 80110c4:	4962      	ldr	r1, [pc, #392]	; (8011250 <dhcp_client+0x1f4>)
 80110c6:	a805      	add	r0, sp, #20
 80110c8:	f7ff ffbe 	bl	8011048 <memcpy.isra.0>
 80110cc:	9b05      	ldr	r3, [sp, #20]
 80110ce:	2204      	movs	r2, #4
 80110d0:	4960      	ldr	r1, [pc, #384]	; (8011254 <dhcp_client+0x1f8>)
 80110d2:	603b      	str	r3, [r7, #0]
 80110d4:	a805      	add	r0, sp, #20
 80110d6:	f7ff ffb7 	bl	8011048 <memcpy.isra.0>
 80110da:	9b05      	ldr	r3, [sp, #20]
 80110dc:	a805      	add	r0, sp, #20
 80110de:	60bb      	str	r3, [r7, #8]
 80110e0:	2204      	movs	r2, #4
 80110e2:	495d      	ldr	r1, [pc, #372]	; (8011258 <dhcp_client+0x1fc>)
 80110e4:	f7ff ffb0 	bl	8011048 <memcpy.isra.0>
 80110e8:	2000      	movs	r0, #0
 80110ea:	9b05      	ldr	r3, [sp, #20]
 80110ec:	607b      	str	r3, [r7, #4]
 80110ee:	b007      	add	sp, #28
 80110f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80110f4:	f643 5301 	movw	r3, #15617	; 0x3d01
 80110f8:	f240 1807 	movw	r8, #263	; 0x107
 80110fc:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011100:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011104:	782b      	ldrb	r3, [r5, #0]
 8011106:	4a55      	ldr	r2, [pc, #340]	; (801125c <dhcp_client+0x200>)
 8011108:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 801110c:	786b      	ldrb	r3, [r5, #1]
 801110e:	fa5f fb86 	uxtb.w	fp, r6
 8011112:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011116:	78ab      	ldrb	r3, [r5, #2]
 8011118:	4651      	mov	r1, sl
 801111a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801111e:	78eb      	ldrb	r3, [r5, #3]
 8011120:	4658      	mov	r0, fp
 8011122:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011126:	792b      	ldrb	r3, [r5, #4]
 8011128:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 801112c:	796b      	ldrb	r3, [r5, #5]
 801112e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011132:	4b4b      	ldr	r3, [pc, #300]	; (8011260 <dhcp_client+0x204>)
 8011134:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8011138:	23ff      	movs	r3, #255	; 0xff
 801113a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 801113e:	2343      	movs	r3, #67	; 0x43
 8011140:	f240 1205 	movw	r2, #261	; 0x105
 8011144:	9300      	str	r3, [sp, #0]
 8011146:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801114a:	f7fe fb2d 	bl	800f7a8 <udp_send>
 801114e:	4629      	mov	r1, r5
 8011150:	4630      	mov	r0, r6
 8011152:	f7ff feb5 	bl	8010ec0 <_parse_response>
 8011156:	2802      	cmp	r0, #2
 8011158:	d1a9      	bne.n	80110ae <dhcp_client+0x52>
 801115a:	f643 5303 	movw	r3, #15619	; 0x3d03
 801115e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011162:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011166:	782b      	ldrb	r3, [r5, #0]
 8011168:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8011264 <dhcp_client+0x208>
 801116c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011170:	786b      	ldrb	r3, [r5, #1]
 8011172:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011176:	78ab      	ldrb	r3, [r5, #2]
 8011178:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801117c:	78eb      	ldrb	r3, [r5, #3]
 801117e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011182:	792b      	ldrb	r3, [r5, #4]
 8011184:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011188:	796b      	ldrb	r3, [r5, #5]
 801118a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801118e:	f240 4332 	movw	r3, #1074	; 0x432
 8011192:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8011196:	4b2e      	ldr	r3, [pc, #184]	; (8011250 <dhcp_client+0x1f4>)
 8011198:	881a      	ldrh	r2, [r3, #0]
 801119a:	885b      	ldrh	r3, [r3, #2]
 801119c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 80111a0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 80111a4:	f240 4336 	movw	r3, #1078	; 0x436
 80111a8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 80111ac:	4b2e      	ldr	r3, [pc, #184]	; (8011268 <dhcp_client+0x20c>)
 80111ae:	221e      	movs	r2, #30
 80111b0:	681b      	ldr	r3, [r3, #0]
 80111b2:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 80111b6:	230c      	movs	r3, #12
 80111b8:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 80111bc:	9b03      	ldr	r3, [sp, #12]
 80111be:	1e58      	subs	r0, r3, #1
 80111c0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 80111c4:	f1a2 0e1e 	sub.w	lr, r2, #30
 80111c8:	1c51      	adds	r1, r2, #1
 80111ca:	bb8b      	cbnz	r3, 8011230 <dhcp_client+0x1d4>
 80111cc:	2037      	movs	r0, #55	; 0x37
 80111ce:	18a3      	adds	r3, r4, r2
 80111d0:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 80111d4:	2006      	movs	r0, #6
 80111d6:	4421      	add	r1, r4
 80111d8:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 80111dc:	2103      	movs	r1, #3
 80111de:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 80111e2:	210f      	movs	r1, #15
 80111e4:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 80111e8:	213a      	movs	r1, #58	; 0x3a
 80111ea:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 80111ee:	213b      	movs	r1, #59	; 0x3b
 80111f0:	f04f 0801 	mov.w	r8, #1
 80111f4:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 80111f8:	21ff      	movs	r1, #255	; 0xff
 80111fa:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80111fe:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8011202:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8011206:	2343      	movs	r3, #67	; 0x43
 8011208:	32f5      	adds	r2, #245	; 0xf5
 801120a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801120e:	4651      	mov	r1, sl
 8011210:	9300      	str	r3, [sp, #0]
 8011212:	b292      	uxth	r2, r2
 8011214:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011218:	4658      	mov	r0, fp
 801121a:	f7fe fac5 	bl	800f7a8 <udp_send>
 801121e:	4629      	mov	r1, r5
 8011220:	4630      	mov	r0, r6
 8011222:	f7ff fe4d 	bl	8010ec0 <_parse_response>
 8011226:	2805      	cmp	r0, #5
 8011228:	f47f af41 	bne.w	80110ae <dhcp_client+0x52>
 801122c:	4644      	mov	r4, r8
 801122e:	e742      	b.n	80110b6 <dhcp_client+0x5a>
 8011230:	460a      	mov	r2, r1
 8011232:	f80c 3b01 	strb.w	r3, [ip], #1
 8011236:	e7c3      	b.n	80111c0 <dhcp_client+0x164>
 8011238:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801123c:	e757      	b.n	80110ee <dhcp_client+0x92>
 801123e:	f06f 0001 	mvn.w	r0, #1
 8011242:	e754      	b.n	80110ee <dhcp_client+0x92>
 8011244:	200120d8 	ldrdcs	r2, [r1], -r8
 8011248:	200120f4 	strdcs	r2, [r1], -r4
 801124c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8011250:	200120d0 	ldrdcs	r2, [r1], -r0
 8011254:	200120cc 	andcs	r2, r1, ip, asr #1
 8011258:	200120d4 	ldrdcs	r2, [r1], -r4
 801125c:	03010637 	movweq	r0, #5687	; 0x1637
 8011260:	3b3a0f06 	blcc	8e94e80 <_sidata+0xe7cb48>
 8011264:	200121e2 	andcs	r2, r1, r2, ror #3
 8011268:	200122fc 	strdcs	r2, [r1], -ip

0801126c <dhcp_client_release>:
 801126c:	b507      	push	{r0, r1, r2, lr}
 801126e:	2044      	movs	r0, #68	; 0x44
 8011270:	f7fe fa04 	bl	800f67c <udp_bind>
 8011274:	f243 6307 	movw	r3, #13831	; 0x3607
 8011278:	4911      	ldr	r1, [pc, #68]	; (80112c0 <dhcp_client_release+0x54>)
 801127a:	b2c0      	uxtb	r0, r0
 801127c:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8011280:	2304      	movs	r3, #4
 8011282:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8011286:	4b0f      	ldr	r3, [pc, #60]	; (80112c4 <dhcp_client_release+0x58>)
 8011288:	781a      	ldrb	r2, [r3, #0]
 801128a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 801128e:	785a      	ldrb	r2, [r3, #1]
 8011290:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8011294:	789a      	ldrb	r2, [r3, #2]
 8011296:	78db      	ldrb	r3, [r3, #3]
 8011298:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 801129c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80112a0:	23ff      	movs	r3, #255	; 0xff
 80112a2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80112a6:	2343      	movs	r3, #67	; 0x43
 80112a8:	22fa      	movs	r2, #250	; 0xfa
 80112aa:	9300      	str	r3, [sp, #0]
 80112ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80112b0:	f7fe fa7a 	bl	800f7a8 <udp_send>
 80112b4:	2044      	movs	r0, #68	; 0x44
 80112b6:	b003      	add	sp, #12
 80112b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80112bc:	f7fe b9f8 	b.w	800f6b0 <udp_unbind>
 80112c0:	200120d8 	ldrdcs	r2, [r1], -r8
 80112c4:	200122fc 	strdcs	r2, [r1], -ip

080112c8 <memcpy.isra.0>:
 80112c8:	3801      	subs	r0, #1
 80112ca:	440a      	add	r2, r1
 80112cc:	4291      	cmp	r1, r2
 80112ce:	d100      	bne.n	80112d2 <memcpy.isra.0+0xa>
 80112d0:	4770      	bx	lr
 80112d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80112d6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80112da:	e7f7      	b.n	80112cc <memcpy.isra.0+0x4>

080112dc <_send_report>:
 80112dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80112de:	491c      	ldr	r1, [pc, #112]	; (8011350 <_send_report+0x74>)
 80112e0:	4c1c      	ldr	r4, [pc, #112]	; (8011354 <_send_report+0x78>)
 80112e2:	f3c0 2306 	ubfx	r3, r0, #8, #7
 80112e6:	9001      	str	r0, [sp, #4]
 80112e8:	70cb      	strb	r3, [r1, #3]
 80112ea:	f3c0 4307 	ubfx	r3, r0, #16, #8
 80112ee:	f3c0 6007 	ubfx	r0, r0, #24, #8
 80112f2:	710b      	strb	r3, [r1, #4]
 80112f4:	7148      	strb	r0, [r1, #5]
 80112f6:	2206      	movs	r2, #6
 80112f8:	4620      	mov	r0, r4
 80112fa:	f7ff ffe5 	bl	80112c8 <memcpy.isra.0>
 80112fe:	2204      	movs	r2, #4
 8011300:	2700      	movs	r7, #0
 8011302:	4d15      	ldr	r5, [pc, #84]	; (8011358 <_send_report+0x7c>)
 8011304:	eb0d 0102 	add.w	r1, sp, r2
 8011308:	882b      	ldrh	r3, [r5, #0]
 801130a:	f104 001e 	add.w	r0, r4, #30
 801130e:	f104 060e 	add.w	r6, r4, #14
 8011312:	8263      	strh	r3, [r4, #18]
 8011314:	f7ff ffd8 	bl	80112c8 <memcpy.isra.0>
 8011318:	2118      	movs	r1, #24
 801131a:	4630      	mov	r0, r6
 801131c:	8327      	strh	r7, [r4, #24]
 801131e:	f000 f9b7 	bl	8011690 <net_chksum>
 8011322:	2204      	movs	r2, #4
 8011324:	8320      	strh	r0, [r4, #24]
 8011326:	eb0d 0102 	add.w	r1, sp, r2
 801132a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801132e:	f7ff ffcb 	bl	80112c8 <memcpy.isra.0>
 8011332:	2120      	movs	r1, #32
 8011334:	4630      	mov	r0, r6
 8011336:	8527      	strh	r7, [r4, #40]	; 0x28
 8011338:	f000 f9aa 	bl	8011690 <net_chksum>
 801133c:	212e      	movs	r1, #46	; 0x2e
 801133e:	8520      	strh	r0, [r4, #40]	; 0x28
 8011340:	4620      	mov	r0, r4
 8011342:	f003 fda9 	bl	8014e98 <emac_eth_send>
 8011346:	882b      	ldrh	r3, [r5, #0]
 8011348:	3301      	adds	r3, #1
 801134a:	802b      	strh	r3, [r5, #0]
 801134c:	b003      	add	sp, #12
 801134e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011350:	20012458 	andcs	r2, r1, r8, asr r4
 8011354:	20012460 	andcs	r2, r1, r0, ror #8
 8011358:	20012420 	andcs	r2, r1, r0, lsr #8

0801135c <igmp_set_ip>:
 801135c:	b507      	push	{r0, r1, r2, lr}
 801135e:	2204      	movs	r2, #4
 8011360:	6803      	ldr	r3, [r0, #0]
 8011362:	eb0d 0102 	add.w	r1, sp, r2
 8011366:	4806      	ldr	r0, [pc, #24]	; (8011380 <igmp_set_ip+0x24>)
 8011368:	9301      	str	r3, [sp, #4]
 801136a:	f7ff ffad 	bl	80112c8 <memcpy.isra.0>
 801136e:	2204      	movs	r2, #4
 8011370:	4804      	ldr	r0, [pc, #16]	; (8011384 <igmp_set_ip+0x28>)
 8011372:	eb0d 0102 	add.w	r1, sp, r2
 8011376:	f7ff ffa7 	bl	80112c8 <memcpy.isra.0>
 801137a:	b003      	add	sp, #12
 801137c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011380:	2001247a 	andcs	r2, r1, sl, ror r4
 8011384:	20012442 	andcs	r2, r1, r2, asr #8

08011388 <igmp_init>:
 8011388:	2200      	movs	r2, #0
 801138a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801138e:	4605      	mov	r5, r0
 8011390:	4608      	mov	r0, r1
 8011392:	4611      	mov	r1, r2
 8011394:	4b23      	ldr	r3, [pc, #140]	; (8011424 <igmp_init+0x9c>)
 8011396:	f103 0408 	add.w	r4, r3, #8
 801139a:	42a3      	cmp	r3, r4
 801139c:	d13e      	bne.n	801141c <igmp_init+0x94>
 801139e:	3201      	adds	r2, #1
 80113a0:	2a24      	cmp	r2, #36	; 0x24
 80113a2:	d1f8      	bne.n	8011396 <igmp_init+0xe>
 80113a4:	2600      	movs	r6, #0
 80113a6:	4b20      	ldr	r3, [pc, #128]	; (8011428 <igmp_init+0xa0>)
 80113a8:	4c20      	ldr	r4, [pc, #128]	; (801142c <igmp_init+0xa4>)
 80113aa:	601e      	str	r6, [r3, #0]
 80113ac:	4b20      	ldr	r3, [pc, #128]	; (8011430 <igmp_init+0xa8>)
 80113ae:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 80113b2:	801e      	strh	r6, [r3, #0]
 80113b4:	f7ff ffd2 	bl	801135c <igmp_set_ip>
 80113b8:	2201      	movs	r2, #1
 80113ba:	4b1e      	ldr	r3, [pc, #120]	; (8011434 <igmp_init+0xac>)
 80113bc:	4629      	mov	r1, r5
 80113be:	801a      	strh	r2, [r3, #0]
 80113c0:	225e      	movs	r2, #94	; 0x5e
 80113c2:	709a      	strb	r2, [r3, #2]
 80113c4:	2206      	movs	r2, #6
 80113c6:	18a0      	adds	r0, r4, r2
 80113c8:	f7ff ff7e 	bl	80112c8 <memcpy.isra.0>
 80113cc:	f240 4394 	movw	r3, #1172	; 0x494
 80113d0:	8463      	strh	r3, [r4, #34]	; 0x22
 80113d2:	2316      	movs	r3, #22
 80113d4:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011438 <igmp_init+0xb0>
 80113d8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 801143c <igmp_init+0xb4>
 80113dc:	84e3      	strh	r3, [r4, #38]	; 0x26
 80113de:	f8c4 9014 	str.w	r9, [r4, #20]
 80113e2:	4b17      	ldr	r3, [pc, #92]	; (8011440 <igmp_init+0xb8>)
 80113e4:	f8c4 800c 	str.w	r8, [r4, #12]
 80113e8:	8227      	strh	r7, [r4, #16]
 80113ea:	84a6      	strh	r6, [r4, #36]	; 0x24
 80113ec:	4c15      	ldr	r4, [pc, #84]	; (8011444 <igmp_init+0xbc>)
 80113ee:	2206      	movs	r2, #6
 80113f0:	6023      	str	r3, [r4, #0]
 80113f2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80113f6:	18a0      	adds	r0, r4, r2
 80113f8:	80a3      	strh	r3, [r4, #4]
 80113fa:	4629      	mov	r1, r5
 80113fc:	f7ff ff64 	bl	80112c8 <memcpy.isra.0>
 8011400:	23e0      	movs	r3, #224	; 0xe0
 8011402:	83e3      	strh	r3, [r4, #30]
 8011404:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8011408:	4a0f      	ldr	r2, [pc, #60]	; (8011448 <igmp_init+0xc0>)
 801140a:	f8c4 9014 	str.w	r9, [r4, #20]
 801140e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8011412:	f8c4 800c 	str.w	r8, [r4, #12]
 8011416:	8227      	strh	r7, [r4, #16]
 8011418:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801141c:	f803 1b01 	strb.w	r1, [r3], #1
 8011420:	e7bb      	b.n	801139a <igmp_init+0x12>
 8011422:	bf00      	nop
 8011424:	20012300 	andcs	r2, r1, r0, lsl #6
 8011428:	20012424 	andcs	r2, r1, r4, lsr #8
 801142c:	20012460 	andcs	r2, r1, r0, ror #8
 8011430:	20012420 	andcs	r2, r1, r0, lsr #8
 8011434:	20012458 	andcs	r2, r1, r8, asr r4
 8011438:	02010040 	andeq	r0, r1, #64	; 0x40
 801143c:	00460008 	subeq	r0, r6, r8
 8011440:	005e0001 	subseq	r0, lr, r1
 8011444:	20012428 	andcs	r2, r1, r8, lsr #8
 8011448:	04940200 	ldreq	r0, [r4], #512	; 0x200

0801144c <igmp_handle>:
 801144c:	7b83      	ldrb	r3, [r0, #14]
 801144e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011452:	2b45      	cmp	r3, #69	; 0x45
 8011454:	d116      	bne.n	8011484 <igmp_handle+0x38>
 8011456:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 801145a:	2b11      	cmp	r3, #17
 801145c:	d112      	bne.n	8011484 <igmp_handle+0x38>
 801145e:	4b20      	ldr	r3, [pc, #128]	; (80114e0 <igmp_handle+0x94>)
 8011460:	f100 051e 	add.w	r5, r0, #30
 8011464:	9300      	str	r3, [sp, #0]
 8011466:	466a      	mov	r2, sp
 8011468:	462b      	mov	r3, r5
 801146a:	f100 0622 	add.w	r6, r0, #34	; 0x22
 801146e:	42b3      	cmp	r3, r6
 8011470:	d10b      	bne.n	801148a <igmp_handle+0x3e>
 8011472:	2401      	movs	r4, #1
 8011474:	2100      	movs	r1, #0
 8011476:	f04f 0c01 	mov.w	ip, #1
 801147a:	4b1a      	ldr	r3, [pc, #104]	; (80114e4 <igmp_handle+0x98>)
 801147c:	4a1a      	ldr	r2, [pc, #104]	; (80114e8 <igmp_handle+0x9c>)
 801147e:	681f      	ldr	r7, [r3, #0]
 8011480:	428f      	cmp	r7, r1
 8011482:	d10a      	bne.n	801149a <igmp_handle+0x4e>
 8011484:	b003      	add	sp, #12
 8011486:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801148a:	f813 4b01 	ldrb.w	r4, [r3], #1
 801148e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8011492:	428c      	cmp	r4, r1
 8011494:	d0eb      	beq.n	801146e <igmp_handle+0x22>
 8011496:	2400      	movs	r4, #0
 8011498:	e7ec      	b.n	8011474 <igmp_handle+0x28>
 801149a:	6813      	ldr	r3, [r2, #0]
 801149c:	9301      	str	r3, [sp, #4]
 801149e:	b924      	cbnz	r4, 80114aa <igmp_handle+0x5e>
 80114a0:	462b      	mov	r3, r5
 80114a2:	f10d 0e04 	add.w	lr, sp, #4
 80114a6:	42b3      	cmp	r3, r6
 80114a8:	d10e      	bne.n	80114c8 <igmp_handle+0x7c>
 80114aa:	f892 e005 	ldrb.w	lr, [r2, #5]
 80114ae:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 80114b2:	f1be 0f01 	cmp.w	lr, #1
 80114b6:	d110      	bne.n	80114da <igmp_handle+0x8e>
 80114b8:	f892 e004 	ldrb.w	lr, [r2, #4]
 80114bc:	459e      	cmp	lr, r3
 80114be:	d909      	bls.n	80114d4 <igmp_handle+0x88>
 80114c0:	085b      	lsrs	r3, r3, #1
 80114c2:	3301      	adds	r3, #1
 80114c4:	7113      	strb	r3, [r2, #4]
 80114c6:	e005      	b.n	80114d4 <igmp_handle+0x88>
 80114c8:	f813 9b01 	ldrb.w	r9, [r3], #1
 80114cc:	f81e 8b01 	ldrb.w	r8, [lr], #1
 80114d0:	45c1      	cmp	r9, r8
 80114d2:	d0e8      	beq.n	80114a6 <igmp_handle+0x5a>
 80114d4:	3101      	adds	r1, #1
 80114d6:	3208      	adds	r2, #8
 80114d8:	e7d2      	b.n	8011480 <igmp_handle+0x34>
 80114da:	f882 c005 	strb.w	ip, [r2, #5]
 80114de:	e7ef      	b.n	80114c0 <igmp_handle+0x74>
 80114e0:	010000e0 	smlatteq	r0, r0, r0, r0
 80114e4:	20012424 	andcs	r2, r1, r4, lsr #8
 80114e8:	20012300 	andcs	r2, r1, r0, lsl #6

080114ec <igmp_timer>:
 80114ec:	b570      	push	{r4, r5, r6, lr}
 80114ee:	2500      	movs	r5, #0
 80114f0:	2602      	movs	r6, #2
 80114f2:	4c0a      	ldr	r4, [pc, #40]	; (801151c <igmp_timer+0x30>)
 80114f4:	7963      	ldrb	r3, [r4, #5]
 80114f6:	2b01      	cmp	r3, #1
 80114f8:	d109      	bne.n	801150e <igmp_timer+0x22>
 80114fa:	7923      	ldrb	r3, [r4, #4]
 80114fc:	b13b      	cbz	r3, 801150e <igmp_timer+0x22>
 80114fe:	3b01      	subs	r3, #1
 8011500:	b2db      	uxtb	r3, r3
 8011502:	7123      	strb	r3, [r4, #4]
 8011504:	b91b      	cbnz	r3, 801150e <igmp_timer+0x22>
 8011506:	6820      	ldr	r0, [r4, #0]
 8011508:	f7ff fee8 	bl	80112dc <_send_report>
 801150c:	7166      	strb	r6, [r4, #5]
 801150e:	3501      	adds	r5, #1
 8011510:	2d24      	cmp	r5, #36	; 0x24
 8011512:	f104 0408 	add.w	r4, r4, #8
 8011516:	d1ed      	bne.n	80114f4 <igmp_timer+0x8>
 8011518:	bd70      	pop	{r4, r5, r6, pc}
 801151a:	bf00      	nop
 801151c:	20012300 	andcs	r2, r1, r0, lsl #6

08011520 <igmp_join>:
 8011520:	b538      	push	{r3, r4, r5, lr}
 8011522:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8011526:	2be0      	cmp	r3, #224	; 0xe0
 8011528:	d11b      	bne.n	8011562 <igmp_join+0x42>
 801152a:	4911      	ldr	r1, [pc, #68]	; (8011570 <igmp_join+0x50>)
 801152c:	680c      	ldr	r4, [r1, #0]
 801152e:	2c24      	cmp	r4, #36	; 0x24
 8011530:	d01a      	beq.n	8011568 <igmp_join+0x48>
 8011532:	2300      	movs	r3, #0
 8011534:	4a0f      	ldr	r2, [pc, #60]	; (8011574 <igmp_join+0x54>)
 8011536:	429c      	cmp	r4, r3
 8011538:	dc0d      	bgt.n	8011556 <igmp_join+0x36>
 801153a:	f44f 7381 	mov.w	r3, #258	; 0x102
 801153e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8011542:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8011546:	8093      	strh	r3, [r2, #4]
 8011548:	1c63      	adds	r3, r4, #1
 801154a:	600b      	str	r3, [r1, #0]
 801154c:	f7ff fec6 	bl	80112dc <_send_report>
 8011550:	4623      	mov	r3, r4
 8011552:	4618      	mov	r0, r3
 8011554:	bd38      	pop	{r3, r4, r5, pc}
 8011556:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 801155a:	4285      	cmp	r5, r0
 801155c:	d0f9      	beq.n	8011552 <igmp_join+0x32>
 801155e:	3301      	adds	r3, #1
 8011560:	e7e9      	b.n	8011536 <igmp_join+0x16>
 8011562:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011566:	e7f4      	b.n	8011552 <igmp_join+0x32>
 8011568:	f06f 0301 	mvn.w	r3, #1
 801156c:	e7f1      	b.n	8011552 <igmp_join+0x32>
 801156e:	bf00      	nop
 8011570:	20012424 	andcs	r2, r1, r4, lsr #8
 8011574:	20012300 	andcs	r2, r1, r0, lsl #6

08011578 <igmp_leave>:
 8011578:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801157c:	2600      	movs	r6, #0
 801157e:	4f1c      	ldr	r7, [pc, #112]	; (80115f0 <igmp_leave+0x78>)
 8011580:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8011584:	4283      	cmp	r3, r0
 8011586:	d007      	beq.n	8011598 <igmp_leave+0x20>
 8011588:	3601      	adds	r6, #1
 801158a:	2e24      	cmp	r6, #36	; 0x24
 801158c:	d1f8      	bne.n	8011580 <igmp_leave+0x8>
 801158e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011592:	b002      	add	sp, #8
 8011594:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011598:	2400      	movs	r4, #0
 801159a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80115f4 <igmp_leave+0x7c>
 801159e:	4d16      	ldr	r5, [pc, #88]	; (80115f8 <igmp_leave+0x80>)
 80115a0:	f8b8 3000 	ldrh.w	r3, [r8]
 80115a4:	2118      	movs	r1, #24
 80115a6:	9001      	str	r0, [sp, #4]
 80115a8:	4814      	ldr	r0, [pc, #80]	; (80115fc <igmp_leave+0x84>)
 80115aa:	826b      	strh	r3, [r5, #18]
 80115ac:	832c      	strh	r4, [r5, #24]
 80115ae:	f000 f86f 	bl	8011690 <net_chksum>
 80115b2:	2204      	movs	r2, #4
 80115b4:	8328      	strh	r0, [r5, #24]
 80115b6:	eb0d 0102 	add.w	r1, sp, r2
 80115ba:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80115be:	f7ff fe83 	bl	80112c8 <memcpy.isra.0>
 80115c2:	2120      	movs	r1, #32
 80115c4:	f105 000e 	add.w	r0, r5, #14
 80115c8:	852c      	strh	r4, [r5, #40]	; 0x28
 80115ca:	f000 f861 	bl	8011690 <net_chksum>
 80115ce:	212e      	movs	r1, #46	; 0x2e
 80115d0:	8528      	strh	r0, [r5, #40]	; 0x28
 80115d2:	4628      	mov	r0, r5
 80115d4:	f003 fc60 	bl	8014e98 <emac_eth_send>
 80115d8:	f8b8 3000 	ldrh.w	r3, [r8]
 80115dc:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 80115e0:	3301      	adds	r3, #1
 80115e2:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 80115e6:	4620      	mov	r0, r4
 80115e8:	f8a8 3000 	strh.w	r3, [r8]
 80115ec:	80b4      	strh	r4, [r6, #4]
 80115ee:	e7d0      	b.n	8011592 <igmp_leave+0x1a>
 80115f0:	20012300 	andcs	r2, r1, r0, lsl #6
 80115f4:	20012420 	andcs	r2, r1, r0, lsr #8
 80115f8:	20012428 	andcs	r2, r1, r8, lsr #8
 80115fc:	2001246e 	andcs	r2, r1, lr, ror #8

08011600 <igmp_shutdown>:
 8011600:	b570      	push	{r4, r5, r6, lr}
 8011602:	2500      	movs	r5, #0
 8011604:	462e      	mov	r6, r5
 8011606:	4c07      	ldr	r4, [pc, #28]	; (8011624 <igmp_shutdown+0x24>)
 8011608:	6820      	ldr	r0, [r4, #0]
 801160a:	b120      	cbz	r0, 8011616 <igmp_shutdown+0x16>
 801160c:	f7ff ffb4 	bl	8011578 <igmp_leave>
 8011610:	6026      	str	r6, [r4, #0]
 8011612:	7166      	strb	r6, [r4, #5]
 8011614:	7126      	strb	r6, [r4, #4]
 8011616:	3501      	adds	r5, #1
 8011618:	2d24      	cmp	r5, #36	; 0x24
 801161a:	f104 0408 	add.w	r4, r4, #8
 801161e:	d1f3      	bne.n	8011608 <igmp_shutdown+0x8>
 8011620:	bd70      	pop	{r4, r5, r6, pc}
 8011622:	bf00      	nop
 8011624:	20012300 	andcs	r2, r1, r0, lsl #6

08011628 <ip_set_ip>:
 8011628:	b510      	push	{r4, lr}
 801162a:	4604      	mov	r4, r0
 801162c:	f7fd ff7e 	bl	800f52c <udp_set_ip>
 8011630:	4620      	mov	r0, r4
 8011632:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011636:	f7ff be91 	b.w	801135c <igmp_set_ip>

0801163a <ip_init>:
 801163a:	b538      	push	{r3, r4, r5, lr}
 801163c:	4604      	mov	r4, r0
 801163e:	460d      	mov	r5, r1
 8011640:	f7fd ff94 	bl	800f56c <udp_init>
 8011644:	4629      	mov	r1, r5
 8011646:	4620      	mov	r0, r4
 8011648:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801164c:	f7ff be9c 	b.w	8011388 <igmp_init>

08011650 <ip_shutdown>:
 8011650:	b508      	push	{r3, lr}
 8011652:	f7ff ffd5 	bl	8011600 <igmp_shutdown>
 8011656:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801165a:	f7fd bfb9 	b.w	800f5d0 <udp_shutdown>

0801165e <ip_handle>:
 801165e:	7b82      	ldrb	r2, [r0, #14]
 8011660:	7dc3      	ldrb	r3, [r0, #23]
 8011662:	2a45      	cmp	r2, #69	; 0x45
 8011664:	d003      	beq.n	801166e <ip_handle+0x10>
 8011666:	2b02      	cmp	r3, #2
 8011668:	d111      	bne.n	801168e <ip_handle+0x30>
 801166a:	f7ff beef 	b.w	801144c <igmp_handle>
 801166e:	2b06      	cmp	r3, #6
 8011670:	d00b      	beq.n	801168a <ip_handle+0x2c>
 8011672:	d804      	bhi.n	801167e <ip_handle+0x20>
 8011674:	2b01      	cmp	r3, #1
 8011676:	d006      	beq.n	8011686 <ip_handle+0x28>
 8011678:	2b02      	cmp	r3, #2
 801167a:	d0f6      	beq.n	801166a <ip_handle+0xc>
 801167c:	4770      	bx	lr
 801167e:	2b11      	cmp	r3, #17
 8011680:	d105      	bne.n	801168e <ip_handle+0x30>
 8011682:	f7fd bfa7 	b.w	800f5d4 <udp_handle>
 8011686:	f000 b82b 	b.w	80116e0 <icmp_handle>
 801168a:	f7fd bcf3 	b.w	800f074 <tcp_handle>
 801168e:	4770      	bx	lr

08011690 <net_chksum>:
 8011690:	2300      	movs	r3, #0
 8011692:	f021 0201 	bic.w	r2, r1, #1
 8011696:	b530      	push	{r4, r5, lr}
 8011698:	4402      	add	r2, r0
 801169a:	084c      	lsrs	r4, r1, #1
 801169c:	4290      	cmp	r0, r2
 801169e:	d10e      	bne.n	80116be <net_chksum+0x2e>
 80116a0:	f06f 0201 	mvn.w	r2, #1
 80116a4:	fb02 1104 	mla	r1, r2, r4, r1
 80116a8:	b121      	cbz	r1, 80116b4 <net_chksum+0x24>
 80116aa:	7802      	ldrb	r2, [r0, #0]
 80116ac:	0212      	lsls	r2, r2, #8
 80116ae:	ba52      	rev16	r2, r2
 80116b0:	b292      	uxth	r2, r2
 80116b2:	4413      	add	r3, r2
 80116b4:	0c1a      	lsrs	r2, r3, #16
 80116b6:	d106      	bne.n	80116c6 <net_chksum+0x36>
 80116b8:	43d8      	mvns	r0, r3
 80116ba:	b280      	uxth	r0, r0
 80116bc:	bd30      	pop	{r4, r5, pc}
 80116be:	f830 5b02 	ldrh.w	r5, [r0], #2
 80116c2:	442b      	add	r3, r5
 80116c4:	e7ea      	b.n	801169c <net_chksum+0xc>
 80116c6:	b29b      	uxth	r3, r3
 80116c8:	e7f3      	b.n	80116b2 <net_chksum+0x22>

080116ca <memcpy.isra.0>:
 80116ca:	3801      	subs	r0, #1
 80116cc:	440a      	add	r2, r1
 80116ce:	4291      	cmp	r1, r2
 80116d0:	d100      	bne.n	80116d4 <memcpy.isra.0+0xa>
 80116d2:	4770      	bx	lr
 80116d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80116d8:	f800 3f01 	strb.w	r3, [r0, #1]!
 80116dc:	e7f7      	b.n	80116ce <memcpy.isra.0+0x4>
	...

080116e0 <icmp_handle>:
 80116e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80116e2:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80116e6:	4604      	mov	r4, r0
 80116e8:	2b08      	cmp	r3, #8
 80116ea:	d13e      	bne.n	801176a <icmp_handle+0x8a>
 80116ec:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 80116f0:	2d00      	cmp	r5, #0
 80116f2:	d13a      	bne.n	801176a <icmp_handle+0x8a>
 80116f4:	1d86      	adds	r6, r0, #6
 80116f6:	4631      	mov	r1, r6
 80116f8:	2206      	movs	r2, #6
 80116fa:	f7ff ffe6 	bl	80116ca <memcpy.isra.0>
 80116fe:	4630      	mov	r0, r6
 8011700:	2206      	movs	r2, #6
 8011702:	491b      	ldr	r1, [pc, #108]	; (8011770 <icmp_handle+0x90>)
 8011704:	f7ff ffe1 	bl	80116ca <memcpy.isra.0>
 8011708:	8a63      	ldrh	r3, [r4, #18]
 801170a:	f104 061a 	add.w	r6, r4, #26
 801170e:	43db      	mvns	r3, r3
 8011710:	4631      	mov	r1, r6
 8011712:	2204      	movs	r2, #4
 8011714:	8263      	strh	r3, [r4, #18]
 8011716:	f104 001e 	add.w	r0, r4, #30
 801171a:	f7ff ffd6 	bl	80116ca <memcpy.isra.0>
 801171e:	2204      	movs	r2, #4
 8011720:	4b14      	ldr	r3, [pc, #80]	; (8011774 <icmp_handle+0x94>)
 8011722:	eb0d 0102 	add.w	r1, sp, r2
 8011726:	681b      	ldr	r3, [r3, #0]
 8011728:	4630      	mov	r0, r6
 801172a:	f104 060e 	add.w	r6, r4, #14
 801172e:	9301      	str	r3, [sp, #4]
 8011730:	f7ff ffcb 	bl	80116ca <memcpy.isra.0>
 8011734:	2114      	movs	r1, #20
 8011736:	4630      	mov	r0, r6
 8011738:	7625      	strb	r5, [r4, #24]
 801173a:	7665      	strb	r5, [r4, #25]
 801173c:	f7ff ffa8 	bl	8011690 <net_chksum>
 8011740:	8a21      	ldrh	r1, [r4, #16]
 8011742:	8320      	strh	r0, [r4, #24]
 8011744:	ba49      	rev16	r1, r1
 8011746:	b289      	uxth	r1, r1
 8011748:	4630      	mov	r0, r6
 801174a:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 801174e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8011752:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8011756:	f7ff ff9b 	bl	8011690 <net_chksum>
 801175a:	8a21      	ldrh	r1, [r4, #16]
 801175c:	84a0      	strh	r0, [r4, #36]	; 0x24
 801175e:	ba49      	rev16	r1, r1
 8011760:	b289      	uxth	r1, r1
 8011762:	4620      	mov	r0, r4
 8011764:	310e      	adds	r1, #14
 8011766:	f003 fb97 	bl	8014e98 <emac_eth_send>
 801176a:	b002      	add	sp, #8
 801176c:	bd70      	pop	{r4, r5, r6, pc}
 801176e:	bf00      	nop
 8011770:	2000a604 	andcs	sl, r0, r4, lsl #12
 8011774:	2000a5f8 	strdcs	sl, [r0], -r8

08011778 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8011778:	b110      	cbz	r0, 8011780 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801177a:	6803      	ldr	r3, [r0, #0]
 801177c:	691b      	ldr	r3, [r3, #16]
 801177e:	4718      	bx	r3
 8011780:	4770      	bx	lr
	...

08011784 <DisplayUdf::DisplayUdf()>:
 8011784:	b510      	push	{r4, lr}
 8011786:	4604      	mov	r4, r0
 8011788:	f000 fef6 	bl	8012578 <Display::Display()>
 801178c:	2202      	movs	r2, #2
 801178e:	2300      	movs	r3, #0
 8011790:	e9c4 2315 	strd	r2, r3, [r4, #84]	; 0x54
 8011794:	4b05      	ldr	r3, [pc, #20]	; (80117ac <DisplayUdf::DisplayUdf()+0x28>)
 8011796:	f104 0240 	add.w	r2, r4, #64	; 0x40
 801179a:	601c      	str	r4, [r3, #0]
 801179c:	2301      	movs	r3, #1
 801179e:	f802 3b01 	strb.w	r3, [r2], #1
 80117a2:	3301      	adds	r3, #1
 80117a4:	2b15      	cmp	r3, #21
 80117a6:	d1fa      	bne.n	801179e <DisplayUdf::DisplayUdf()+0x1a>
 80117a8:	4620      	mov	r0, r4
 80117aa:	bd10      	pop	{r4, pc}
 80117ac:	20012490 	mulcs	r1, r0, r4

080117b0 <DisplayUdf::SetTitle(char const*, ...)>:
 80117b0:	b40e      	push	{r1, r2, r3}
 80117b2:	b517      	push	{r0, r1, r2, r4, lr}
 80117b4:	ab05      	add	r3, sp, #20
 80117b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80117ba:	4604      	mov	r4, r0
 80117bc:	211f      	movs	r1, #31
 80117be:	3020      	adds	r0, #32
 80117c0:	9301      	str	r3, [sp, #4]
 80117c2:	f001 ff8d 	bl	80136e0 <vsnprintf>
 80117c6:	2300      	movs	r3, #0
 80117c8:	4404      	add	r4, r0
 80117ca:	f884 3020 	strb.w	r3, [r4, #32]
 80117ce:	b003      	add	sp, #12
 80117d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117d4:	b003      	add	sp, #12
 80117d6:	4770      	bx	lr

080117d8 <DisplayUdf::ShowEmacStart()>:
 80117d8:	b510      	push	{r4, lr}
 80117da:	4604      	mov	r4, r0
 80117dc:	f890 1042 	ldrb.w	r1, [r0, #66]	; 0x42
 80117e0:	6840      	ldr	r0, [r0, #4]
 80117e2:	f7ff ffc9 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80117e6:	4620      	mov	r0, r4
 80117e8:	f894 1042 	ldrb.w	r1, [r4, #66]	; 0x42
 80117ec:	4a02      	ldr	r2, [pc, #8]	; (80117f8 <DisplayUdf::ShowEmacStart()+0x20>)
 80117ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117f2:	f000 be41 	b.w	8012478 <Display::Printf(unsigned char, char const*, ...)>
 80117f6:	bf00      	nop
 80117f8:	08017988 	stmdaeq	r1, {r3, r7, r8, fp, ip, sp, lr}

080117fc <DisplayUdf::ShowIpAddress()>:
 80117fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011800:	4604      	mov	r4, r0
 8011802:	f890 1042 	ldrb.w	r1, [r0, #66]	; 0x42
 8011806:	b086      	sub	sp, #24
 8011808:	6840      	ldr	r0, [r0, #4]
 801180a:	f7ff ffb5 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801180e:	4b13      	ldr	r3, [pc, #76]	; (801185c <DisplayUdf::ShowIpAddress()+0x60>)
 8011810:	f894 7042 	ldrb.w	r7, [r4, #66]	; 0x42
 8011814:	681d      	ldr	r5, [r3, #0]
 8011816:	69a8      	ldr	r0, [r5, #24]
 8011818:	692e      	ldr	r6, [r5, #16]
 801181a:	f7f6 f9e3 	bl	8007be4 <__popcountsi2>
 801181e:	78eb      	ldrb	r3, [r5, #3]
 8011820:	fa5f f886 	uxtb.w	r8, r6
 8011824:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8011828:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 801182c:	0e36      	lsrs	r6, r6, #24
 801182e:	b99b      	cbnz	r3, 8011858 <DisplayUdf::ShowIpAddress()+0x5c>
 8011830:	786b      	ldrb	r3, [r5, #1]
 8011832:	2b00      	cmp	r3, #0
 8011834:	bf14      	ite	ne
 8011836:	2244      	movne	r2, #68	; 0x44
 8011838:	2253      	moveq	r2, #83	; 0x53
 801183a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801183e:	4643      	mov	r3, r8
 8011840:	4639      	mov	r1, r7
 8011842:	4620      	mov	r0, r4
 8011844:	e9cd a601 	strd	sl, r6, [sp, #4]
 8011848:	4a05      	ldr	r2, [pc, #20]	; (8011860 <DisplayUdf::ShowIpAddress()+0x64>)
 801184a:	f8cd 9000 	str.w	r9, [sp]
 801184e:	f000 fe13 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011852:	b006      	add	sp, #24
 8011854:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011858:	225a      	movs	r2, #90	; 0x5a
 801185a:	e7ee      	b.n	801183a <DisplayUdf::ShowIpAddress()+0x3e>
 801185c:	20011ec0 	andcs	r1, r1, r0, asr #29
 8011860:	08017997 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, fp, ip, sp, lr}

08011864 <DisplayUdf::ShowNetmask()>:
 8011864:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011866:	4604      	mov	r4, r0
 8011868:	4b0b      	ldr	r3, [pc, #44]	; (8011898 <DisplayUdf::ShowNetmask()+0x34>)
 801186a:	681b      	ldr	r3, [r3, #0]
 801186c:	699b      	ldr	r3, [r3, #24]
 801186e:	0e1a      	lsrs	r2, r3, #24
 8011870:	9202      	str	r2, [sp, #8]
 8011872:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011876:	9201      	str	r2, [sp, #4]
 8011878:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801187c:	9200      	str	r2, [sp, #0]
 801187e:	f890 104c 	ldrb.w	r1, [r0, #76]	; 0x4c
 8011882:	4a06      	ldr	r2, [pc, #24]	; (801189c <DisplayUdf::ShowNetmask()+0x38>)
 8011884:	b2db      	uxtb	r3, r3
 8011886:	f000 fdf7 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 801188a:	4620      	mov	r0, r4
 801188c:	b004      	add	sp, #16
 801188e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011892:	f7ff bfb3 	b.w	80117fc <DisplayUdf::ShowIpAddress()>
 8011896:	bf00      	nop
 8011898:	20011ec0 	andcs	r1, r1, r0, asr #29
 801189c:	080179a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, ip, sp, lr}

080118a0 <DisplayUdf::ShowGatewayIp()>:
 80118a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80118a2:	4604      	mov	r4, r0
 80118a4:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 80118a8:	6840      	ldr	r0, [r0, #4]
 80118aa:	f7ff ff65 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80118ae:	4b0a      	ldr	r3, [pc, #40]	; (80118d8 <DisplayUdf::ShowGatewayIp()+0x38>)
 80118b0:	4620      	mov	r0, r4
 80118b2:	681b      	ldr	r3, [r3, #0]
 80118b4:	f894 1052 	ldrb.w	r1, [r4, #82]	; 0x52
 80118b8:	695b      	ldr	r3, [r3, #20]
 80118ba:	0e1a      	lsrs	r2, r3, #24
 80118bc:	9202      	str	r2, [sp, #8]
 80118be:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80118c2:	9201      	str	r2, [sp, #4]
 80118c4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80118c8:	9200      	str	r2, [sp, #0]
 80118ca:	b2db      	uxtb	r3, r3
 80118cc:	4a03      	ldr	r2, [pc, #12]	; (80118dc <DisplayUdf::ShowGatewayIp()+0x3c>)
 80118ce:	f000 fdd3 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 80118d2:	b004      	add	sp, #16
 80118d4:	bd10      	pop	{r4, pc}
 80118d6:	bf00      	nop
 80118d8:	20011ec0 	andcs	r1, r1, r0, asr #29
 80118dc:	080179b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, fp, ip, sp, lr}

080118e0 <DisplayUdf::ShowHostName()>:
 80118e0:	b510      	push	{r4, lr}
 80118e2:	4604      	mov	r4, r0
 80118e4:	f890 1047 	ldrb.w	r1, [r0, #71]	; 0x47
 80118e8:	6840      	ldr	r0, [r0, #4]
 80118ea:	f7ff ff45 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80118ee:	4b05      	ldr	r3, [pc, #20]	; (8011904 <DisplayUdf::ShowHostName()+0x24>)
 80118f0:	4620      	mov	r0, r4
 80118f2:	681a      	ldr	r2, [r3, #0]
 80118f4:	f894 1047 	ldrb.w	r1, [r4, #71]	; 0x47
 80118f8:	321c      	adds	r2, #28
 80118fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118fe:	f000 bdd7 	b.w	80124b0 <Display::Write(unsigned char, char const*)>
 8011902:	bf00      	nop
 8011904:	20011ec0 	andcs	r1, r1, r0, asr #29

08011908 <DisplayUdf::Show()>:
 8011908:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801190a:	4604      	mov	r4, r0
 801190c:	21ff      	movs	r1, #255	; 0xff
 801190e:	f100 0340 	add.w	r3, r0, #64	; 0x40
 8011912:	f100 0254 	add.w	r2, r0, #84	; 0x54
 8011916:	f813 0b01 	ldrb.w	r0, [r3], #1
 801191a:	2806      	cmp	r0, #6
 801191c:	bf88      	it	hi
 801191e:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 8011922:	429a      	cmp	r2, r3
 8011924:	d1f7      	bne.n	8011916 <DisplayUdf::Show()+0xe>
 8011926:	2501      	movs	r5, #1
 8011928:	4629      	mov	r1, r5
 801192a:	3501      	adds	r5, #1
 801192c:	6860      	ldr	r0, [r4, #4]
 801192e:	b2ed      	uxtb	r5, r5
 8011930:	f7ff ff22 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011934:	2d06      	cmp	r5, #6
 8011936:	d1f7      	bne.n	8011928 <DisplayUdf::Show()+0x20>
 8011938:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 801193c:	f104 0220 	add.w	r2, r4, #32
 8011940:	4620      	mov	r0, r4
 8011942:	f000 fdb5 	bl	80124b0 <Display::Write(unsigned char, char const*)>
 8011946:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 801194a:	4620      	mov	r0, r4
 801194c:	4a0d      	ldr	r2, [pc, #52]	; (8011984 <DisplayUdf::Show()+0x7c>)
 801194e:	f000 fdaf 	bl	80124b0 <Display::Write(unsigned char, char const*)>
 8011952:	4b0d      	ldr	r3, [pc, #52]	; (8011988 <DisplayUdf::Show()+0x80>)
 8011954:	4a0d      	ldr	r2, [pc, #52]	; (801198c <DisplayUdf::Show()+0x84>)
 8011956:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 801195a:	9300      	str	r3, [sp, #0]
 801195c:	4620      	mov	r0, r4
 801195e:	2303      	movs	r3, #3
 8011960:	f000 fd8a 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011964:	4620      	mov	r0, r4
 8011966:	f7ff ff49 	bl	80117fc <DisplayUdf::ShowIpAddress()>
 801196a:	4620      	mov	r0, r4
 801196c:	f7ff ff98 	bl	80118a0 <DisplayUdf::ShowGatewayIp()>
 8011970:	4620      	mov	r0, r4
 8011972:	f7ff ff77 	bl	8011864 <DisplayUdf::ShowNetmask()>
 8011976:	4620      	mov	r0, r4
 8011978:	b003      	add	sp, #12
 801197a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801197e:	f7ff bfaf 	b.w	80118e0 <DisplayUdf::ShowHostName()>
 8011982:	bf00      	nop
 8011984:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}
 8011988:	2001252c 	andcs	r2, r1, ip, lsr #10
 801198c:	080179c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, fp, ip, sp, lr}

08011990 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011990:	3901      	subs	r1, #1
 8011992:	b510      	push	{r4, lr}
 8011994:	4604      	mov	r4, r0
 8011996:	2903      	cmp	r1, #3
 8011998:	d82e      	bhi.n	80119f8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>
 801199a:	e8df f001 	tbb	[pc, r1]
 801199e:	2a1d1502 	bcs	8756dae <_sidata+0x73ea76>
 80119a2:	4b16      	ldr	r3, [pc, #88]	; (80119fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80119a4:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80119a8:	6818      	ldr	r0, [r3, #0]
 80119aa:	f000 fe3e 	bl	801262a <Display7Segment::Status(Display7SegmentMessage)>
 80119ae:	f894 1042 	ldrb.w	r1, [r4, #66]	; 0x42
 80119b2:	6860      	ldr	r0, [r4, #4]
 80119b4:	f7ff fee0 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80119b8:	4a11      	ldr	r2, [pc, #68]	; (8011a00 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x70>)
 80119ba:	4620      	mov	r0, r4
 80119bc:	f894 1042 	ldrb.w	r1, [r4, #66]	; 0x42
 80119c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119c4:	f000 bd58 	b.w	8012478 <Display::Printf(unsigned char, char const*, ...)>
 80119c8:	f248 0180 	movw	r1, #32896	; 0x8080
 80119cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119d0:	4b0a      	ldr	r3, [pc, #40]	; (80119fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80119d2:	6818      	ldr	r0, [r3, #0]
 80119d4:	f000 be29 	b.w	801262a <Display7Segment::Status(Display7SegmentMessage)>
 80119d8:	4b08      	ldr	r3, [pc, #32]	; (80119fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80119da:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80119de:	6818      	ldr	r0, [r3, #0]
 80119e0:	f000 fe23 	bl	801262a <Display7Segment::Status(Display7SegmentMessage)>
 80119e4:	f894 1042 	ldrb.w	r1, [r4, #66]	; 0x42
 80119e8:	6860      	ldr	r0, [r4, #4]
 80119ea:	f7ff fec5 	bl	8011778 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80119ee:	4a05      	ldr	r2, [pc, #20]	; (8011a04 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x74>)
 80119f0:	e7e3      	b.n	80119ba <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80119f2:	f645 3179 	movw	r1, #23417	; 0x5b79
 80119f6:	e7e9      	b.n	80119cc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3c>
 80119f8:	bd10      	pop	{r4, pc}
 80119fa:	bf00      	nop
 80119fc:	2001249c 	mulcs	r1, ip, r4
 8011a00:	080179d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, fp, ip, sp, lr}
 8011a04:	080179e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, fp, ip, sp, lr}

08011a08 <DisplayUdf::ShowShutdown()>:
 8011a08:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011a0c:	f44f 42de 	mov.w	r2, #28416	; 0x6f00
 8011a10:	4901      	ldr	r1, [pc, #4]	; (8011a18 <DisplayUdf::ShowShutdown()+0x10>)
 8011a12:	f000 bd92 	b.w	801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8011a16:	bf00      	nop
 8011a18:	080179f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, fp, ip, sp, lr}

08011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 8011a1c:	1e4b      	subs	r3, r1, #1
 8011a1e:	2b05      	cmp	r3, #5
 8011a20:	b530      	push	{r4, r5, lr}
 8011a22:	d80f      	bhi.n	8011a44 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8011a24:	2300      	movs	r3, #0
 8011a26:	f100 0440 	add.w	r4, r0, #64	; 0x40
 8011a2a:	f814 5b01 	ldrb.w	r5, [r4], #1
 8011a2e:	428d      	cmp	r5, r1
 8011a30:	d109      	bne.n	8011a46 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8011a32:	1884      	adds	r4, r0, r2
 8011a34:	f894 4040 	ldrb.w	r4, [r4, #64]	; 0x40
 8011a38:	4403      	add	r3, r0
 8011a3a:	f883 4040 	strb.w	r4, [r3, #64]	; 0x40
 8011a3e:	4410      	add	r0, r2
 8011a40:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011a44:	bd30      	pop	{r4, r5, pc}
 8011a46:	3301      	adds	r3, #1
 8011a48:	2b14      	cmp	r3, #20
 8011a4a:	d1ee      	bne.n	8011a2a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8011a4c:	e7f7      	b.n	8011a3e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

08011a50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8011a50:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011a52:	88c5      	ldrh	r5, [r0, #6]
 8011a54:	8886      	ldrh	r6, [r0, #4]
 8011a56:	42b5      	cmp	r5, r6
 8011a58:	d216      	bcs.n	8011a88 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8011a5a:	4604      	mov	r4, r0
 8011a5c:	6800      	ldr	r0, [r0, #0]
 8011a5e:	4428      	add	r0, r5
 8011a60:	1b75      	subs	r5, r6, r5
 8011a62:	7a26      	ldrb	r6, [r4, #8]
 8011a64:	b923      	cbnz	r3, 8011a70 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8011a66:	b926      	cbnz	r6, 8011a72 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8011a68:	9200      	str	r2, [sp, #0]
 8011a6a:	460b      	mov	r3, r1
 8011a6c:	4a09      	ldr	r2, [pc, #36]	; (8011a94 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8011a6e:	e003      	b.n	8011a78 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011a70:	b166      	cbz	r6, 8011a8c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8011a72:	460b      	mov	r3, r1
 8011a74:	9200      	str	r2, [sp, #0]
 8011a76:	4a08      	ldr	r2, [pc, #32]	; (8011a98 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8011a78:	4629      	mov	r1, r5
 8011a7a:	f001 fe19 	bl	80136b0 <snprintf>
 8011a7e:	4285      	cmp	r5, r0
 8011a80:	bfa2      	ittt	ge
 8011a82:	88e3      	ldrhge	r3, [r4, #6]
 8011a84:	181b      	addge	r3, r3, r0
 8011a86:	80e3      	strhge	r3, [r4, #6]
 8011a88:	b002      	add	sp, #8
 8011a8a:	bd70      	pop	{r4, r5, r6, pc}
 8011a8c:	9200      	str	r2, [sp, #0]
 8011a8e:	460b      	mov	r3, r1
 8011a90:	4a02      	ldr	r2, [pc, #8]	; (8011a9c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8011a92:	e7f1      	b.n	8011a78 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011a94:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 8011a98:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 8011a9c:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

08011aa0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8011aa0:	b510      	push	{r4, lr}
 8011aa2:	2220      	movs	r2, #32
 8011aa4:	4604      	mov	r4, r0
 8011aa6:	f840 1b04 	str.w	r1, [r0], #4
 8011aaa:	2100      	movs	r1, #0
 8011aac:	f001 faa8 	bl	8013000 <memset>
 8011ab0:	f647 7305 	movw	r3, #32517	; 0x7f05
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011ab8:	bd10      	pop	{r4, pc}

08011aba <DisplayUdfParams::Load()>:
 8011aba:	b508      	push	{r3, lr}
 8011abc:	2300      	movs	r3, #0
 8011abe:	4601      	mov	r1, r0
 8011ac0:	6043      	str	r3, [r0, #4]
 8011ac2:	6800      	ldr	r0, [r0, #0]
 8011ac4:	b120      	cbz	r0, 8011ad0 <DisplayUdfParams::Load()+0x16>
 8011ac6:	6803      	ldr	r3, [r0, #0]
 8011ac8:	3104      	adds	r1, #4
 8011aca:	68db      	ldr	r3, [r3, #12]
 8011acc:	4798      	blx	r3
 8011ace:	2001      	movs	r0, #1
 8011ad0:	bd08      	pop	{r3, pc}
	...

08011ad4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8011ad4:	6803      	ldr	r3, [r0, #0]
 8011ad6:	b1d3      	cbz	r3, 8011b0e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8011ad8:	2300      	movs	r3, #0
 8011ada:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011adc:	460d      	mov	r5, r1
 8011ade:	4616      	mov	r6, r2
 8011ae0:	4604      	mov	r4, r0
 8011ae2:	6043      	str	r3, [r0, #4]
 8011ae4:	4602      	mov	r2, r0
 8011ae6:	490a      	ldr	r1, [pc, #40]	; (8011b10 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8011ae8:	4668      	mov	r0, sp
 8011aea:	f000 fb27 	bl	801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011aee:	4632      	mov	r2, r6
 8011af0:	4629      	mov	r1, r5
 8011af2:	4668      	mov	r0, sp
 8011af4:	f000 fb26 	bl	8012144 <ReadConfigFile::Read(char const*, unsigned int)>
 8011af8:	4621      	mov	r1, r4
 8011afa:	f851 0b04 	ldr.w	r0, [r1], #4
 8011afe:	6803      	ldr	r3, [r0, #0]
 8011b00:	689b      	ldr	r3, [r3, #8]
 8011b02:	4798      	blx	r3
 8011b04:	4668      	mov	r0, sp
 8011b06:	f000 fb1c 	bl	8012142 <ReadConfigFile::~ReadConfigFile()>
 8011b0a:	b002      	add	sp, #8
 8011b0c:	bd70      	pop	{r4, r5, r6, pc}
 8011b0e:	4770      	bx	lr
 8011b10:	08011bd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, fp, ip}

08011b14 <DisplayUdfParams::callbackFunction(char const*)>:
 8011b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011b16:	460e      	mov	r6, r1
 8011b18:	4604      	mov	r4, r0
 8011b1a:	492b      	ldr	r1, [pc, #172]	; (8011bc8 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8011b1c:	4630      	mov	r0, r6
 8011b1e:	f10d 0207 	add.w	r2, sp, #7
 8011b22:	f000 fc46 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b26:	b968      	cbnz	r0, 8011b44 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011b28:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011b2c:	6863      	ldr	r3, [r4, #4]
 8011b2e:	2a7f      	cmp	r2, #127	; 0x7f
 8011b30:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8011b34:	bf14      	ite	ne
 8011b36:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8011b3a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8011b3e:	6063      	str	r3, [r4, #4]
 8011b40:	b003      	add	sp, #12
 8011b42:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b44:	4630      	mov	r0, r6
 8011b46:	4921      	ldr	r1, [pc, #132]	; (8011bcc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8011b48:	f10d 0207 	add.w	r2, sp, #7
 8011b4c:	f000 fc31 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b50:	b958      	cbnz	r0, 8011b6a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8011b52:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011b56:	6863      	ldr	r3, [r4, #4]
 8011b58:	2a05      	cmp	r2, #5
 8011b5a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8011b5e:	bf14      	ite	ne
 8011b60:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8011b64:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8011b68:	e7e9      	b.n	8011b3e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011b6a:	4630      	mov	r0, r6
 8011b6c:	4918      	ldr	r1, [pc, #96]	; (8011bd0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8011b6e:	f10d 0207 	add.w	r2, sp, #7
 8011b72:	f000 fc1e 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b76:	b948      	cbnz	r0, 8011b8c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8011b78:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011b7c:	6863      	ldr	r3, [r4, #4]
 8011b7e:	b112      	cbz	r2, 8011b86 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8011b80:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8011b84:	e7db      	b.n	8011b3e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011b86:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8011b8a:	e7d8      	b.n	8011b3e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011b8c:	2500      	movs	r5, #0
 8011b8e:	4f11      	ldr	r7, [pc, #68]	; (8011bd4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8011b90:	4630      	mov	r0, r6
 8011b92:	f857 1b04 	ldr.w	r1, [r7], #4
 8011b96:	f10d 0207 	add.w	r2, sp, #7
 8011b9a:	f000 fc0a 	bl	80123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011b9e:	b978      	cbnz	r0, 8011bc0 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 8011ba0:	2301      	movs	r3, #1
 8011ba2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011ba6:	6862      	ldr	r2, [r4, #4]
 8011ba8:	1e4e      	subs	r6, r1, #1
 8011baa:	2e05      	cmp	r6, #5
 8011bac:	fa03 f305 	lsl.w	r3, r3, r5
 8011bb0:	4425      	add	r5, r4
 8011bb2:	bf99      	ittee	ls
 8011bb4:	7229      	strbls	r1, [r5, #8]
 8011bb6:	4313      	orrls	r3, r2
 8011bb8:	7228      	strbhi	r0, [r5, #8]
 8011bba:	ea22 0303 	bichi.w	r3, r2, r3
 8011bbe:	e7be      	b.n	8011b3e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011bc0:	3501      	adds	r5, #1
 8011bc2:	2d14      	cmp	r5, #20
 8011bc4:	d1e4      	bne.n	8011b90 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8011bc6:	e7bb      	b.n	8011b40 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8011bc8:	08017ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp, lr}
 8011bcc:	08017a7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, fp, ip, sp, lr}
 8011bd0:	08017a88 	stmdaeq	r1, {r3, r7, r9, fp, ip, sp, lr}
 8011bd4:	08017a04 	stmdaeq	r1, {r2, r9, fp, ip, sp, lr}

08011bd8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8011bd8:	f7ff bf9c 	b.w	8011b14 <DisplayUdfParams::callbackFunction(char const*)>

08011bdc <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)>:
 8011bdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011be0:	4604      	mov	r4, r0
 8011be2:	4615      	mov	r5, r2
 8011be4:	461e      	mov	r6, r3
 8011be6:	b086      	sub	sp, #24
 8011be8:	3004      	adds	r0, #4
 8011bea:	b379      	cbz	r1, 8011c4c <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x70>
 8011bec:	2222      	movs	r2, #34	; 0x22
 8011bee:	f001 f9f0 	bl	8012fd2 <memmove>
 8011bf2:	462a      	mov	r2, r5
 8011bf4:	4633      	mov	r3, r6
 8011bf6:	493d      	ldr	r1, [pc, #244]	; (8011cec <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8011bf8:	a803      	add	r0, sp, #12
 8011bfa:	f000 f9ff 	bl	8011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011bfe:	6863      	ldr	r3, [r4, #4]
 8011c00:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8011c04:	493a      	ldr	r1, [pc, #232]	; (8011cf0 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8011c06:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8011c0a:	a803      	add	r0, sp, #12
 8011c0c:	f7ff ff20 	bl	8011a50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011c10:	6863      	ldr	r3, [r4, #4]
 8011c12:	4938      	ldr	r1, [pc, #224]	; (8011cf4 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8011c14:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8011c18:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8011c1c:	a803      	add	r0, sp, #12
 8011c1e:	f7ff ff17 	bl	8011a50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011c22:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8011c26:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011c2a:	42a9      	cmp	r1, r5
 8011c2c:	d227      	bcs.n	8011c7e <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8011c2e:	6863      	ldr	r3, [r4, #4]
 8011c30:	9803      	ldr	r0, [sp, #12]
 8011c32:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8011c36:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011c3a:	4408      	add	r0, r1
 8011c3c:	eba5 0501 	sub.w	r5, r5, r1
 8011c40:	d10b      	bne.n	8011c5a <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x7e>
 8011c42:	b962      	cbnz	r2, 8011c5e <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x82>
 8011c44:	9200      	str	r2, [sp, #0]
 8011c46:	4b2c      	ldr	r3, [pc, #176]	; (8011cf8 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011c48:	4a2c      	ldr	r2, [pc, #176]	; (8011cfc <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x120>)
 8011c4a:	e00e      	b.n	8011c6a <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x8e>
 8011c4c:	6823      	ldr	r3, [r4, #0]
 8011c4e:	4601      	mov	r1, r0
 8011c50:	681a      	ldr	r2, [r3, #0]
 8011c52:	4618      	mov	r0, r3
 8011c54:	68d2      	ldr	r2, [r2, #12]
 8011c56:	4790      	blx	r2
 8011c58:	e7cb      	b.n	8011bf2 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x16>
 8011c5a:	2a00      	cmp	r2, #0
 8011c5c:	d041      	beq.n	8011ce2 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x106>
 8011c5e:	3b00      	subs	r3, #0
 8011c60:	bf18      	it	ne
 8011c62:	2301      	movne	r3, #1
 8011c64:	4a26      	ldr	r2, [pc, #152]	; (8011d00 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x124>)
 8011c66:	9300      	str	r3, [sp, #0]
 8011c68:	4b23      	ldr	r3, [pc, #140]	; (8011cf8 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011c6a:	4629      	mov	r1, r5
 8011c6c:	f001 fd20 	bl	80136b0 <snprintf>
 8011c70:	4285      	cmp	r5, r0
 8011c72:	bfa2      	ittt	ge
 8011c74:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8011c78:	181b      	addge	r3, r3, r0
 8011c7a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011c7e:	2500      	movs	r5, #0
 8011c80:	2701      	movs	r7, #1
 8011c82:	4e20      	ldr	r6, [pc, #128]	; (8011d04 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x128>)
 8011c84:	f104 0808 	add.w	r8, r4, #8
 8011c88:	f856 1b04 	ldr.w	r1, [r6], #4
 8011c8c:	780b      	ldrb	r3, [r1, #0]
 8011c8e:	b15b      	cbz	r3, 8011ca8 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0xcc>
 8011c90:	6862      	ldr	r2, [r4, #4]
 8011c92:	fa07 f305 	lsl.w	r3, r7, r5
 8011c96:	4393      	bics	r3, r2
 8011c98:	bf0c      	ite	eq
 8011c9a:	2301      	moveq	r3, #1
 8011c9c:	2300      	movne	r3, #0
 8011c9e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8011ca2:	a803      	add	r0, sp, #12
 8011ca4:	f7ff fed4 	bl	8011a50 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011ca8:	3501      	adds	r5, #1
 8011caa:	2d14      	cmp	r5, #20
 8011cac:	d1ec      	bne.n	8011c88 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0xac>
 8011cae:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011cb2:	b17b      	cbz	r3, 8011cd4 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0xf8>
 8011cb4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011cb8:	9b03      	ldr	r3, [sp, #12]
 8011cba:	4413      	add	r3, r2
 8011cbc:	227d      	movs	r2, #125	; 0x7d
 8011cbe:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011cc2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011cc6:	9903      	ldr	r1, [sp, #12]
 8011cc8:	54ca      	strb	r2, [r1, r3]
 8011cca:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011cce:	3301      	adds	r3, #1
 8011cd0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011cd4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011cd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011cda:	601a      	str	r2, [r3, #0]
 8011cdc:	b006      	add	sp, #24
 8011cde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ce2:	2301      	movs	r3, #1
 8011ce4:	4a08      	ldr	r2, [pc, #32]	; (8011d08 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x12c>)
 8011ce6:	9300      	str	r3, [sp, #0]
 8011ce8:	4b03      	ldr	r3, [pc, #12]	; (8011cf8 <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011cea:	e7be      	b.n	8011c6a <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)+0x8e>
 8011cec:	08017aa6 	stmdaeq	r1, {r1, r2, r5, r7, r9, fp, ip, sp, lr}
 8011cf0:	08017ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp, lr}
 8011cf4:	08017a7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, fp, ip, sp, lr}
 8011cf8:	08017a88 	stmdaeq	r1, {r3, r7, r9, fp, ip, sp, lr}
 8011cfc:	08015d71 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, fp, ip, lr}
 8011d00:	08015d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, ip, lr}
 8011d04:	08017a04 	stmdaeq	r1, {r2, r9, fp, ip, sp, lr}
 8011d08:	08015d72 	stmdaeq	r1, {r1, r4, r5, r6, r8, sl, fp, ip, lr}

08011d0c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8011d0c:	b513      	push	{r0, r1, r4, lr}
 8011d0e:	6804      	ldr	r4, [r0, #0]
 8011d10:	b914      	cbnz	r4, 8011d18 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011d12:	601c      	str	r4, [r3, #0]
 8011d14:	b002      	add	sp, #8
 8011d16:	bd10      	pop	{r4, pc}
 8011d18:	9300      	str	r3, [sp, #0]
 8011d1a:	4613      	mov	r3, r2
 8011d1c:	460a      	mov	r2, r1
 8011d1e:	2100      	movs	r1, #0
 8011d20:	f7ff ff5c 	bl	8011bdc <DisplayUdfParams::Builder(TDisplayUdfParams const*, char*, unsigned int, unsigned int&)>
 8011d24:	e7f6      	b.n	8011d14 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011d26 <DisplayUdfParams::Set(DisplayUdf*)>:
 8011d26:	6843      	ldr	r3, [r0, #4]
 8011d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d2c:	009a      	lsls	r2, r3, #2
 8011d2e:	4604      	mov	r4, r0
 8011d30:	460e      	mov	r6, r1
 8011d32:	d506      	bpl.n	8011d42 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011d34:	6848      	ldr	r0, [r1, #4]
 8011d36:	b120      	cbz	r0, 8011d42 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011d38:	6803      	ldr	r3, [r0, #0]
 8011d3a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8011d3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d40:	4798      	blx	r3
 8011d42:	6863      	ldr	r3, [r4, #4]
 8011d44:	6870      	ldr	r0, [r6, #4]
 8011d46:	00db      	lsls	r3, r3, #3
 8011d48:	bf41      	itttt	mi
 8011d4a:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8011d4e:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8011d52:	4353      	mulmi	r3, r2
 8011d54:	6133      	strmi	r3, [r6, #16]
 8011d56:	6861      	ldr	r1, [r4, #4]
 8011d58:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8011d5c:	b110      	cbz	r0, 8011d64 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8011d5e:	6803      	ldr	r3, [r0, #0]
 8011d60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011d62:	4798      	blx	r3
 8011d64:	2500      	movs	r5, #0
 8011d66:	2701      	movs	r7, #1
 8011d68:	f104 0808 	add.w	r8, r4, #8
 8011d6c:	6862      	ldr	r2, [r4, #4]
 8011d6e:	fa07 f305 	lsl.w	r3, r7, r5
 8011d72:	4393      	bics	r3, r2
 8011d74:	d105      	bne.n	8011d82 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8011d76:	462a      	mov	r2, r5
 8011d78:	4630      	mov	r0, r6
 8011d7a:	f818 1005 	ldrb.w	r1, [r8, r5]
 8011d7e:	f7ff fe4d 	bl	8011a1c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8011d82:	3501      	adds	r5, #1
 8011d84:	2d14      	cmp	r5, #20
 8011d86:	d1f1      	bne.n	8011d6c <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8011d88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011d8c <DisplayUdfParams::Dump()>:
 8011d8c:	4770      	bx	lr
	...

08011d90 <DisplayUdf::Show(E131Bridge*)>:
 8011d90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d94:	460e      	mov	r6, r1
 8011d96:	4604      	mov	r4, r0
 8011d98:	b085      	sub	sp, #20
 8011d9a:	f7ff fdb5 	bl	8011908 <DisplayUdf::Show()>
 8011d9e:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8011da2:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8011da6:	4620      	mov	r0, r4
 8011da8:	4413      	add	r3, r2
 8011daa:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8011dae:	4a22      	ldr	r2, [pc, #136]	; (8011e38 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8011db0:	f000 fb62 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011db4:	2500      	movs	r5, #0
 8011db6:	4f21      	ldr	r7, [pc, #132]	; (8011e3c <DisplayUdf::Show(E131Bridge*)+0xac>)
 8011db8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8011e40 <DisplayUdf::Show(E131Bridge*)+0xb0>
 8011dbc:	f8df 9084 	ldr.w	r9, [pc, #132]	; 8011e44 <DisplayUdf::Show(E131Bridge*)+0xb4>
 8011dc0:	2301      	movs	r3, #1
 8011dc2:	4629      	mov	r1, r5
 8011dc4:	4630      	mov	r0, r6
 8011dc6:	f10d 020e 	add.w	r2, sp, #14
 8011dca:	f7f8 f8d1 	bl	8009f70 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8011dce:	b1a8      	cbz	r0, 8011dfc <DisplayUdf::Show(E131Bridge*)+0x6c>
 8011dd0:	2344      	movs	r3, #68	; 0x44
 8011dd2:	436b      	muls	r3, r5
 8011dd4:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 8011dd8:	58d2      	ldr	r2, [r2, r3]
 8011dda:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8011dde:	2a00      	cmp	r2, #0
 8011de0:	bf0c      	ite	eq
 8011de2:	463b      	moveq	r3, r7
 8011de4:	4643      	movne	r3, r8
 8011de6:	e9cd 0300 	strd	r0, r3, [sp]
 8011dea:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011dee:	464a      	mov	r2, r9
 8011df0:	4620      	mov	r0, r4
 8011df2:	5d49      	ldrb	r1, [r1, r5]
 8011df4:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8011df8:	f000 fb3e 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011dfc:	3501      	adds	r5, #1
 8011dfe:	2d04      	cmp	r5, #4
 8011e00:	d1de      	bne.n	8011dc0 <DisplayUdf::Show(E131Bridge*)+0x30>
 8011e02:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011e04:	f894 1053 	ldrb.w	r1, [r4, #83]	; 0x53
 8011e08:	2a02      	cmp	r2, #2
 8011e0a:	d001      	beq.n	8011e10 <DisplayUdf::Show(E131Bridge*)+0x80>
 8011e0c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8011e0e:	b933      	cbnz	r3, 8011e1e <DisplayUdf::Show(E131Bridge*)+0x8e>
 8011e10:	4620      	mov	r0, r4
 8011e12:	4a0d      	ldr	r2, [pc, #52]	; (8011e48 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8011e14:	b005      	add	sp, #20
 8011e16:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011e1a:	f000 bb2d 	b.w	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011e1e:	9300      	str	r3, [sp, #0]
 8011e20:	480a      	ldr	r0, [pc, #40]	; (8011e4c <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8011e22:	4b0b      	ldr	r3, [pc, #44]	; (8011e50 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 8011e24:	2a00      	cmp	r2, #0
 8011e26:	bf08      	it	eq
 8011e28:	4603      	moveq	r3, r0
 8011e2a:	4620      	mov	r0, r4
 8011e2c:	4a09      	ldr	r2, [pc, #36]	; (8011e54 <DisplayUdf::Show(E131Bridge*)+0xc4>)
 8011e2e:	f000 fb23 	bl	8012478 <Display::Printf(unsigned char, char const*, ...)>
 8011e32:	b005      	add	sp, #20
 8011e34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e38:	08017abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, sp, lr}
 8011e3c:	08016b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, sp, lr}
 8011e40:	08016b40 	stmdaeq	r1, {r6, r8, r9, fp, sp, lr}
 8011e44:	08017ac3 	stmdaeq	r1, {r0, r1, r6, r7, r9, fp, ip, sp, lr}
 8011e48:	08017ad2 	stmdaeq	r1, {r1, r4, r6, r7, r9, fp, ip, sp, lr}
 8011e4c:	08016c3a 	stmdaeq	r1, {r1, r3, r4, r5, sl, fp, sp, lr}
 8011e50:	08016c2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, sl, fp, sp, lr}
 8011e54:	08017ad9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, fp, ip, sp, lr}

08011e58 <NetworkDisplay::ShowEmacStart()>:
 8011e58:	4b01      	ldr	r3, [pc, #4]	; (8011e60 <NetworkDisplay::ShowEmacStart()+0x8>)
 8011e5a:	6818      	ldr	r0, [r3, #0]
 8011e5c:	f7ff bcbc 	b.w	80117d8 <DisplayUdf::ShowEmacStart()>
 8011e60:	20012490 	mulcs	r1, r0, r4

08011e64 <NetworkDisplay::ShowIp()>:
 8011e64:	4b01      	ldr	r3, [pc, #4]	; (8011e6c <NetworkDisplay::ShowIp()+0x8>)
 8011e66:	6818      	ldr	r0, [r3, #0]
 8011e68:	f7ff bcc8 	b.w	80117fc <DisplayUdf::ShowIpAddress()>
 8011e6c:	20012490 	mulcs	r1, r0, r4

08011e70 <NetworkDisplay::ShowNetMask()>:
 8011e70:	4b01      	ldr	r3, [pc, #4]	; (8011e78 <NetworkDisplay::ShowNetMask()+0x8>)
 8011e72:	6818      	ldr	r0, [r3, #0]
 8011e74:	f7ff bcf6 	b.w	8011864 <DisplayUdf::ShowNetmask()>
 8011e78:	20012490 	mulcs	r1, r0, r4

08011e7c <NetworkDisplay::ShowHostName()>:
 8011e7c:	4b01      	ldr	r3, [pc, #4]	; (8011e84 <NetworkDisplay::ShowHostName()+0x8>)
 8011e7e:	6818      	ldr	r0, [r3, #0]
 8011e80:	f7ff bd2e 	b.w	80118e0 <DisplayUdf::ShowHostName()>
 8011e84:	20012490 	mulcs	r1, r0, r4

08011e88 <NetworkDisplay::ShowShutdown()>:
 8011e88:	4b01      	ldr	r3, [pc, #4]	; (8011e90 <NetworkDisplay::ShowShutdown()+0x8>)
 8011e8a:	6818      	ldr	r0, [r3, #0]
 8011e8c:	f7ff bdbc 	b.w	8011a08 <DisplayUdf::ShowShutdown()>
 8011e90:	20012490 	mulcs	r1, r0, r4

08011e94 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011e94:	4b01      	ldr	r3, [pc, #4]	; (8011e9c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8011e96:	6818      	ldr	r0, [r3, #0]
 8011e98:	f7ff bd7a 	b.w	8011990 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011e9c:	20012490 	mulcs	r1, r0, r4

08011ea0 <properties::convert_json_file(char*, unsigned short, bool)>:
 8011ea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ea4:	7803      	ldrb	r3, [r0, #0]
 8011ea6:	2b7b      	cmp	r3, #123	; 0x7b
 8011ea8:	d170      	bne.n	8011f8c <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 8011eaa:	b322      	cbz	r2, 8011ef6 <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 8011eac:	2301      	movs	r3, #1
 8011eae:	4606      	mov	r6, r0
 8011eb0:	461c      	mov	r4, r3
 8011eb2:	2a00      	cmp	r2, #0
 8011eb4:	bf0c      	ite	eq
 8011eb6:	f04f 0c0a 	moveq.w	ip, #10
 8011eba:	f04f 0c00 	movne.w	ip, #0
 8011ebe:	273d      	movs	r7, #61	; 0x3d
 8011ec0:	4299      	cmp	r1, r3
 8011ec2:	d960      	bls.n	8011f86 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8011ec4:	4299      	cmp	r1, r3
 8011ec6:	4602      	mov	r2, r0
 8011ec8:	f890 e000 	ldrb.w	lr, [r0]
 8011ecc:	f103 0301 	add.w	r3, r3, #1
 8011ed0:	f100 0001 	add.w	r0, r0, #1
 8011ed4:	d846      	bhi.n	8011f64 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 8011ed6:	1aa0      	subs	r0, r4, r2
 8011ed8:	4615      	mov	r5, r2
 8011eda:	1884      	adds	r4, r0, r2
 8011edc:	f812 8b01 	ldrb.w	r8, [r2], #1
 8011ee0:	f103 0e01 	add.w	lr, r3, #1
 8011ee4:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 8011ee8:	d053      	beq.n	8011f92 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 8011eea:	4299      	cmp	r1, r3
 8011eec:	d957      	bls.n	8011f9e <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8011eee:	4673      	mov	r3, lr
 8011ef0:	f806 8b01 	strb.w	r8, [r6], #1
 8011ef4:	e7f0      	b.n	8011ed8 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 8011ef6:	2323      	movs	r3, #35	; 0x23
 8011ef8:	f800 3b01 	strb.w	r3, [r0], #1
 8011efc:	4605      	mov	r5, r0
 8011efe:	2301      	movs	r3, #1
 8011f00:	4299      	cmp	r1, r3
 8011f02:	d92d      	bls.n	8011f60 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 8011f04:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011f08:	2c22      	cmp	r4, #34	; 0x22
 8011f0a:	d001      	beq.n	8011f10 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8011f0c:	3301      	adds	r3, #1
 8011f0e:	e7f7      	b.n	8011f00 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 8011f10:	46ac      	mov	ip, r5
 8011f12:	4606      	mov	r6, r0
 8011f14:	2701      	movs	r7, #1
 8011f16:	f89c e000 	ldrb.w	lr, [ip]
 8011f1a:	4665      	mov	r5, ip
 8011f1c:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011f20:	4630      	mov	r0, r6
 8011f22:	463c      	mov	r4, r7
 8011f24:	f10c 0c01 	add.w	ip, ip, #1
 8011f28:	f106 0601 	add.w	r6, r6, #1
 8011f2c:	f107 0701 	add.w	r7, r7, #1
 8011f30:	d007      	beq.n	8011f42 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011f32:	3301      	adds	r3, #1
 8011f34:	4299      	cmp	r1, r3
 8011f36:	4665      	mov	r5, ip
 8011f38:	f806 ec01 	strb.w	lr, [r6, #-1]
 8011f3c:	d8eb      	bhi.n	8011f16 <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 8011f3e:	463c      	mov	r4, r7
 8011f40:	4630      	mov	r0, r6
 8011f42:	4606      	mov	r6, r0
 8011f44:	200a      	movs	r0, #10
 8011f46:	3401      	adds	r4, #1
 8011f48:	f806 0b01 	strb.w	r0, [r6], #1
 8011f4c:	4628      	mov	r0, r5
 8011f4e:	f815 7b01 	ldrb.w	r7, [r5], #1
 8011f52:	2f7b      	cmp	r7, #123	; 0x7b
 8011f54:	d0ad      	beq.n	8011eb2 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8011f56:	1c5f      	adds	r7, r3, #1
 8011f58:	4299      	cmp	r1, r3
 8011f5a:	463b      	mov	r3, r7
 8011f5c:	d8f6      	bhi.n	8011f4c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8011f5e:	e7a8      	b.n	8011eb2 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8011f60:	2401      	movs	r4, #1
 8011f62:	e7ee      	b.n	8011f42 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011f64:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011f68:	d1ac      	bne.n	8011ec4 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8011f6a:	4602      	mov	r2, r0
 8011f6c:	e7b3      	b.n	8011ed6 <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8011f6e:	283a      	cmp	r0, #58	; 0x3a
 8011f70:	d115      	bne.n	8011f9e <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8011f72:	462b      	mov	r3, r5
 8011f74:	e01b      	b.n	8011fae <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8011f76:	4686      	mov	lr, r0
 8011f78:	e027      	b.n	8011fca <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 8011f7a:	4673      	mov	r3, lr
 8011f7c:	f806 cb01 	strb.w	ip, [r6], #1
 8011f80:	3401      	adds	r4, #1
 8011f82:	3301      	adds	r3, #1
 8011f84:	e79c      	b.n	8011ec0 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 8011f86:	4620      	mov	r0, r4
 8011f88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011f90:	e7fa      	b.n	8011f88 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8011f92:	4630      	mov	r0, r6
 8011f94:	f800 7b01 	strb.w	r7, [r0], #1
 8011f98:	469e      	mov	lr, r3
 8011f9a:	4606      	mov	r6, r0
 8011f9c:	3401      	adds	r4, #1
 8011f9e:	4571      	cmp	r1, lr
 8011fa0:	462b      	mov	r3, r5
 8011fa2:	7828      	ldrb	r0, [r5, #0]
 8011fa4:	f10e 0e01 	add.w	lr, lr, #1
 8011fa8:	f105 0501 	add.w	r5, r5, #1
 8011fac:	d8df      	bhi.n	8011f6e <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 8011fae:	781d      	ldrb	r5, [r3, #0]
 8011fb0:	461a      	mov	r2, r3
 8011fb2:	2d2f      	cmp	r5, #47	; 0x2f
 8011fb4:	4670      	mov	r0, lr
 8011fb6:	f103 0301 	add.w	r3, r3, #1
 8011fba:	f10e 0e01 	add.w	lr, lr, #1
 8011fbe:	d8da      	bhi.n	8011f76 <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 8011fc0:	4281      	cmp	r1, r0
 8011fc2:	d8f4      	bhi.n	8011fae <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8011fc4:	2d22      	cmp	r5, #34	; 0x22
 8011fc6:	bf08      	it	eq
 8011fc8:	461a      	moveq	r2, r3
 8011fca:	4610      	mov	r0, r2
 8011fcc:	f810 5b01 	ldrb.w	r5, [r0], #1
 8011fd0:	f10e 0301 	add.w	r3, lr, #1
 8011fd4:	2d22      	cmp	r5, #34	; 0x22
 8011fd6:	d0d0      	beq.n	8011f7a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8011fd8:	2d2c      	cmp	r5, #44	; 0x2c
 8011fda:	d0ce      	beq.n	8011f7a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8011fdc:	2d7d      	cmp	r5, #125	; 0x7d
 8011fde:	d0cc      	beq.n	8011f7a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8011fe0:	4571      	cmp	r1, lr
 8011fe2:	d9ce      	bls.n	8011f82 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8011fe4:	f1a5 0e20 	sub.w	lr, r5, #32
 8011fe8:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8011fec:	d803      	bhi.n	8011ff6 <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 8011fee:	4602      	mov	r2, r0
 8011ff0:	f806 5b01 	strb.w	r5, [r6], #1
 8011ff4:	3401      	adds	r4, #1
 8011ff6:	469e      	mov	lr, r3
 8011ff8:	e7e7      	b.n	8011fca <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08011ffc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8011ffc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012000:	6002      	str	r2, [r0, #0]
 8012002:	4614      	mov	r4, r2
 8012004:	2200      	movs	r2, #0
 8012006:	4606      	mov	r6, r0
 8012008:	460f      	mov	r7, r1
 801200a:	80c2      	strh	r2, [r0, #6]
 801200c:	4a1b      	ldr	r2, [pc, #108]	; (801207c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 801200e:	8083      	strh	r3, [r0, #4]
 8012010:	7810      	ldrb	r0, [r2, #0]
 8012012:	f000 0001 	and.w	r0, r0, #1
 8012016:	7230      	strb	r0, [r6, #8]
 8012018:	463d      	mov	r5, r7
 801201a:	782a      	ldrb	r2, [r5, #0]
 801201c:	3701      	adds	r7, #1
 801201e:	2a00      	cmp	r2, #0
 8012020:	d1fa      	bne.n	8012018 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8012022:	1a6d      	subs	r5, r5, r1
 8012024:	b29b      	uxth	r3, r3
 8012026:	b1d0      	cbz	r0, 801205e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8012028:	1d2f      	adds	r7, r5, #4
 801202a:	429f      	cmp	r7, r3
 801202c:	d814      	bhi.n	8012058 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801202e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8012032:	f04f 0922 	mov.w	r9, #34	; 0x22
 8012036:	462a      	mov	r2, r5
 8012038:	f884 8000 	strb.w	r8, [r4]
 801203c:	f884 9001 	strb.w	r9, [r4, #1]
 8012040:	1ca0      	adds	r0, r4, #2
 8012042:	f000 ffc6 	bl	8012fd2 <memmove>
 8012046:	223a      	movs	r2, #58	; 0x3a
 8012048:	1963      	adds	r3, r4, r5
 801204a:	3505      	adds	r5, #5
 801204c:	f883 9002 	strb.w	r9, [r3, #2]
 8012050:	70da      	strb	r2, [r3, #3]
 8012052:	80f5      	strh	r5, [r6, #6]
 8012054:	f804 8007 	strb.w	r8, [r4, r7]
 8012058:	4630      	mov	r0, r6
 801205a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801205e:	1caf      	adds	r7, r5, #2
 8012060:	429f      	cmp	r7, r3
 8012062:	d8f9      	bhi.n	8012058 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012064:	4620      	mov	r0, r4
 8012066:	2323      	movs	r3, #35	; 0x23
 8012068:	462a      	mov	r2, r5
 801206a:	f800 3b01 	strb.w	r3, [r0], #1
 801206e:	f000 ffb0 	bl	8012fd2 <memmove>
 8012072:	230a      	movs	r3, #10
 8012074:	442c      	add	r4, r5
 8012076:	7063      	strb	r3, [r4, #1]
 8012078:	80f7      	strh	r7, [r6, #6]
 801207a:	e7ed      	b.n	8012058 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801207c:	20012494 	mulcs	r1, r4, r4

08012080 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8012080:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012082:	469c      	mov	ip, r3
 8012084:	8885      	ldrh	r5, [r0, #4]
 8012086:	88c3      	ldrh	r3, [r0, #6]
 8012088:	b085      	sub	sp, #20
 801208a:	42ab      	cmp	r3, r5
 801208c:	d302      	bcc.n	8012094 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 801208e:	2000      	movs	r0, #0
 8012090:	b005      	add	sp, #20
 8012092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012094:	4604      	mov	r4, r0
 8012096:	6800      	ldr	r0, [r0, #0]
 8012098:	1aed      	subs	r5, r5, r3
 801209a:	4418      	add	r0, r3
 801209c:	b2d6      	uxtb	r6, r2
 801209e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80120a2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80120a6:	f894 e008 	ldrb.w	lr, [r4, #8]
 80120aa:	0e12      	lsrs	r2, r2, #24
 80120ac:	f1bc 0f00 	cmp.w	ip, #0
 80120b0:	d109      	bne.n	80120c6 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80120b2:	f1be 0f00 	cmp.w	lr, #0
 80120b6:	d109      	bne.n	80120cc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80120b8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80120bc:	e9cd 6700 	strd	r6, r7, [sp]
 80120c0:	460b      	mov	r3, r1
 80120c2:	4a0e      	ldr	r2, [pc, #56]	; (80120fc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80120c4:	e008      	b.n	80120d8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80120c6:	f1be 0f00 	cmp.w	lr, #0
 80120ca:	d00f      	beq.n	80120ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80120cc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80120d0:	460b      	mov	r3, r1
 80120d2:	e9cd 6700 	strd	r6, r7, [sp]
 80120d6:	4a0a      	ldr	r2, [pc, #40]	; (8012100 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80120d8:	4629      	mov	r1, r5
 80120da:	f001 fae9 	bl	80136b0 <snprintf>
 80120de:	4285      	cmp	r5, r0
 80120e0:	dbd5      	blt.n	801208e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80120e2:	88e3      	ldrh	r3, [r4, #6]
 80120e4:	4403      	add	r3, r0
 80120e6:	80e3      	strh	r3, [r4, #6]
 80120e8:	2001      	movs	r0, #1
 80120ea:	e7d1      	b.n	8012090 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80120ec:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80120f0:	e9cd 6700 	strd	r6, r7, [sp]
 80120f4:	460b      	mov	r3, r1
 80120f6:	4a03      	ldr	r2, [pc, #12]	; (8012104 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80120f8:	e7ee      	b.n	80120d8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80120fa:	bf00      	nop
 80120fc:	08017b72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, fp, ip, sp, lr}
 8012100:	08017b5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, fp, ip, sp, lr}
 8012104:	08017b73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, fp, ip, sp, lr}

08012108 <PropertiesBuilder::AddComment(char const*)>:
 8012108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801210a:	7a06      	ldrb	r6, [r0, #8]
 801210c:	b996      	cbnz	r6, 8012134 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801210e:	4604      	mov	r4, r0
 8012110:	88c0      	ldrh	r0, [r0, #6]
 8012112:	88a5      	ldrh	r5, [r4, #4]
 8012114:	42a8      	cmp	r0, r5
 8012116:	d20d      	bcs.n	8012134 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8012118:	6827      	ldr	r7, [r4, #0]
 801211a:	1a2d      	subs	r5, r5, r0
 801211c:	460b      	mov	r3, r1
 801211e:	4a06      	ldr	r2, [pc, #24]	; (8012138 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8012120:	4629      	mov	r1, r5
 8012122:	4438      	add	r0, r7
 8012124:	f001 fac4 	bl	80136b0 <snprintf>
 8012128:	4285      	cmp	r5, r0
 801212a:	bfa1      	itttt	ge
 801212c:	2601      	movge	r6, #1
 801212e:	88e3      	ldrhge	r3, [r4, #6]
 8012130:	18c0      	addge	r0, r0, r3
 8012132:	80e0      	strhge	r0, [r4, #6]
 8012134:	4630      	mov	r0, r6
 8012136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012138:	08017b83 	stmdaeq	r1, {r0, r1, r7, r8, r9, fp, ip, sp, lr}

0801213c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 801213c:	e9c0 1200 	strd	r1, r2, [r0]
 8012140:	4770      	bx	lr

08012142 <ReadConfigFile::~ReadConfigFile()>:
 8012142:	4770      	bx	lr

08012144 <ReadConfigFile::Read(char const*, unsigned int)>:
 8012144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012148:	4606      	mov	r6, r0
 801214a:	460d      	mov	r5, r1
 801214c:	4614      	mov	r4, r2
 801214e:	f04f 0800 	mov.w	r8, #0
 8012152:	b090      	sub	sp, #64	; 0x40
 8012154:	b33c      	cbz	r4, 80121a6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8012156:	466b      	mov	r3, sp
 8012158:	462a      	mov	r2, r5
 801215a:	4619      	mov	r1, r3
 801215c:	7817      	ldrb	r7, [r2, #0]
 801215e:	4610      	mov	r0, r2
 8012160:	2f0d      	cmp	r7, #13
 8012162:	f102 0201 	add.w	r2, r2, #1
 8012166:	d013      	beq.n	8012190 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8012168:	2f0a      	cmp	r7, #10
 801216a:	d011      	beq.n	8012190 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 801216c:	f803 7b01 	strb.w	r7, [r3], #1
 8012170:	1a58      	subs	r0, r3, r1
 8012172:	283f      	cmp	r0, #63	; 0x3f
 8012174:	4615      	mov	r5, r2
 8012176:	dc16      	bgt.n	80121a6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8012178:	3c01      	subs	r4, #1
 801217a:	d1ef      	bne.n	801215c <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 801217c:	f89d 2000 	ldrb.w	r2, [sp]
 8012180:	2a60      	cmp	r2, #96	; 0x60
 8012182:	d9e7      	bls.n	8012154 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8012184:	f883 8000 	strb.w	r8, [r3]
 8012188:	e9d6 3000 	ldrd	r3, r0, [r6]
 801218c:	4798      	blx	r3
 801218e:	e7e1      	b.n	8012154 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8012190:	4605      	mov	r5, r0
 8012192:	2c00      	cmp	r4, #0
 8012194:	d0f2      	beq.n	801217c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8012196:	f810 2b01 	ldrb.w	r2, [r0], #1
 801219a:	2a0d      	cmp	r2, #13
 801219c:	d001      	beq.n	80121a2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 801219e:	2a0a      	cmp	r2, #10
 80121a0:	d1ec      	bne.n	801217c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 80121a2:	3c01      	subs	r4, #1
 80121a4:	e7f4      	b.n	8012190 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 80121a6:	b010      	add	sp, #64	; 0x40
 80121a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080121ac <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80121ac:	b570      	push	{r4, r5, r6, lr}
 80121ae:	4615      	mov	r5, r2
 80121b0:	461c      	mov	r4, r3
 80121b2:	f000 f91b 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 80121b6:	b160      	cbz	r0, 80121d2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 80121b8:	2100      	movs	r1, #0
 80121ba:	5c43      	ldrb	r3, [r0, r1]
 80121bc:	6826      	ldr	r6, [r4, #0]
 80121be:	b28a      	uxth	r2, r1
 80121c0:	b123      	cbz	r3, 80121cc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 80121c2:	42b2      	cmp	r2, r6
 80121c4:	d207      	bcs.n	80121d6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 80121c6:	546b      	strb	r3, [r5, r1]
 80121c8:	3101      	adds	r1, #1
 80121ca:	e7f6      	b.n	80121ba <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80121cc:	2000      	movs	r0, #0
 80121ce:	6022      	str	r2, [r4, #0]
 80121d0:	bd70      	pop	{r4, r5, r6, pc}
 80121d2:	2001      	movs	r0, #1
 80121d4:	e7fc      	b.n	80121d0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 80121d6:	2b0a      	cmp	r3, #10
 80121d8:	d0f8      	beq.n	80121cc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 80121da:	2002      	movs	r0, #2
 80121dc:	e7f8      	b.n	80121d0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

080121de <Sscan::Float(char const*, char const*, float&)>:
 80121de:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80121e2:	4616      	mov	r6, r2
 80121e4:	f000 f902 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 80121e8:	2800      	cmp	r0, #0
 80121ea:	d059      	beq.n	80122a0 <Sscan::Float(char const*, char const*, float&)+0xc2>
 80121ec:	4604      	mov	r4, r0
 80121ee:	7803      	ldrb	r3, [r0, #0]
 80121f0:	2b2d      	cmp	r3, #45	; 0x2d
 80121f2:	bf08      	it	eq
 80121f4:	3401      	addeq	r4, #1
 80121f6:	7823      	ldrb	r3, [r4, #0]
 80121f8:	bf0c      	ite	eq
 80121fa:	f04f 0801 	moveq.w	r8, #1
 80121fe:	f04f 0800 	movne.w	r8, #0
 8012202:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012206:	d103      	bne.n	8012210 <Sscan::Float(char const*, char const*, float&)+0x32>
 8012208:	2702      	movs	r7, #2
 801220a:	4638      	mov	r0, r7
 801220c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012210:	2000      	movs	r0, #0
 8012212:	220a      	movs	r2, #10
 8012214:	7823      	ldrb	r3, [r4, #0]
 8012216:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 801221a:	2909      	cmp	r1, #9
 801221c:	d8f4      	bhi.n	8012208 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801221e:	fb02 3000 	mla	r0, r2, r0, r3
 8012222:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012226:	3830      	subs	r0, #48	; 0x30
 8012228:	2b2e      	cmp	r3, #46	; 0x2e
 801222a:	d002      	beq.n	8012232 <Sscan::Float(char const*, char const*, float&)+0x54>
 801222c:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012230:	d1f0      	bne.n	8012214 <Sscan::Float(char const*, char const*, float&)+0x36>
 8012232:	f7f5 fa7b 	bl	800772c <__aeabi_ui2f>
 8012236:	6030      	str	r0, [r6, #0]
 8012238:	7823      	ldrb	r3, [r4, #0]
 801223a:	4605      	mov	r5, r0
 801223c:	2b2e      	cmp	r3, #46	; 0x2e
 801223e:	d008      	beq.n	8012252 <Sscan::Float(char const*, char const*, float&)+0x74>
 8012240:	f1b8 0f00 	cmp.w	r8, #0
 8012244:	d101      	bne.n	801224a <Sscan::Float(char const*, char const*, float&)+0x6c>
 8012246:	2700      	movs	r7, #0
 8012248:	e7df      	b.n	801220a <Sscan::Float(char const*, char const*, float&)+0x2c>
 801224a:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 801224e:	6035      	str	r5, [r6, #0]
 8012250:	e7f9      	b.n	8012246 <Sscan::Float(char const*, char const*, float&)+0x68>
 8012252:	f04f 0901 	mov.w	r9, #1
 8012256:	2000      	movs	r0, #0
 8012258:	220a      	movs	r2, #10
 801225a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801225e:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8012262:	d007      	beq.n	8012274 <Sscan::Float(char const*, char const*, float&)+0x96>
 8012264:	3b30      	subs	r3, #48	; 0x30
 8012266:	2b09      	cmp	r3, #9
 8012268:	d8ce      	bhi.n	8012208 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801226a:	fb02 3000 	mla	r0, r2, r0, r3
 801226e:	fb02 f909 	mul.w	r9, r2, r9
 8012272:	e7f2      	b.n	801225a <Sscan::Float(char const*, char const*, float&)+0x7c>
 8012274:	f7f5 fa5a 	bl	800772c <__aeabi_ui2f>
 8012278:	4604      	mov	r4, r0
 801227a:	4648      	mov	r0, r9
 801227c:	f7f5 fa56 	bl	800772c <__aeabi_ui2f>
 8012280:	4601      	mov	r1, r0
 8012282:	4620      	mov	r0, r4
 8012284:	f7f5 fb5e 	bl	8007944 <__aeabi_fdiv>
 8012288:	4629      	mov	r1, r5
 801228a:	f7f5 f99f 	bl	80075cc <__addsf3>
 801228e:	f1b8 0f00 	cmp.w	r8, #0
 8012292:	d101      	bne.n	8012298 <Sscan::Float(char const*, char const*, float&)+0xba>
 8012294:	6030      	str	r0, [r6, #0]
 8012296:	e7d6      	b.n	8012246 <Sscan::Float(char const*, char const*, float&)+0x68>
 8012298:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 801229c:	6030      	str	r0, [r6, #0]
 801229e:	e7b4      	b.n	801220a <Sscan::Float(char const*, char const*, float&)+0x2c>
 80122a0:	2701      	movs	r7, #1
 80122a2:	e7b2      	b.n	801220a <Sscan::Float(char const*, char const*, float&)+0x2c>

080122a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 80122a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80122a6:	4615      	mov	r5, r2
 80122a8:	f000 f8a0 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 80122ac:	b3c0      	cbz	r0, 8012320 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 80122ae:	2400      	movs	r4, #0
 80122b0:	270a      	movs	r7, #10
 80122b2:	ae01      	add	r6, sp, #4
 80122b4:	4603      	mov	r3, r0
 80122b6:	2100      	movs	r1, #0
 80122b8:	f100 0c04 	add.w	ip, r0, #4
 80122bc:	4618      	mov	r0, r3
 80122be:	f810 2b01 	ldrb.w	r2, [r0], #1
 80122c2:	2a2e      	cmp	r2, #46	; 0x2e
 80122c4:	d00e      	beq.n	80122e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 80122c6:	b16a      	cbz	r2, 80122e4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 80122c8:	4560      	cmp	r0, ip
 80122ca:	d102      	bne.n	80122d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 80122cc:	2002      	movs	r0, #2
 80122ce:	b003      	add	sp, #12
 80122d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122d2:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80122d6:	2b09      	cmp	r3, #9
 80122d8:	d8f8      	bhi.n	80122cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80122da:	fb07 2101 	mla	r1, r7, r1, r2
 80122de:	4603      	mov	r3, r0
 80122e0:	3930      	subs	r1, #48	; 0x30
 80122e2:	e7eb      	b.n	80122bc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 80122e4:	29ff      	cmp	r1, #255	; 0xff
 80122e6:	d8f1      	bhi.n	80122cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80122e8:	3401      	adds	r4, #1
 80122ea:	2c03      	cmp	r4, #3
 80122ec:	f806 1b01 	strb.w	r1, [r6], #1
 80122f0:	d1e0      	bne.n	80122b4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 80122f2:	2400      	movs	r4, #0
 80122f4:	220a      	movs	r2, #10
 80122f6:	1d1e      	adds	r6, r3, #4
 80122f8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80122fc:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012300:	d007      	beq.n	8012312 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 8012302:	429e      	cmp	r6, r3
 8012304:	d0e2      	beq.n	80122cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012306:	3930      	subs	r1, #48	; 0x30
 8012308:	2909      	cmp	r1, #9
 801230a:	d8df      	bhi.n	80122cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801230c:	fb02 1404 	mla	r4, r2, r4, r1
 8012310:	e7f2      	b.n	80122f8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8012312:	2cff      	cmp	r4, #255	; 0xff
 8012314:	d8da      	bhi.n	80122cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012316:	f88d 4007 	strb.w	r4, [sp, #7]
 801231a:	9b01      	ldr	r3, [sp, #4]
 801231c:	602b      	str	r3, [r5, #0]
 801231e:	e7d6      	b.n	80122ce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 8012320:	2001      	movs	r0, #1
 8012322:	e7d4      	b.n	80122ce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

08012324 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8012324:	b538      	push	{r3, r4, r5, lr}
 8012326:	4615      	mov	r5, r2
 8012328:	f000 f860 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 801232c:	b1a0      	cbz	r0, 8012358 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 801232e:	4604      	mov	r4, r0
 8012330:	2100      	movs	r1, #0
 8012332:	220a      	movs	r2, #10
 8012334:	7823      	ldrb	r3, [r4, #0]
 8012336:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801233a:	2809      	cmp	r0, #9
 801233c:	d80e      	bhi.n	801235c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801233e:	fb02 3101 	mla	r1, r2, r1, r3
 8012342:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012346:	3930      	subs	r1, #48	; 0x30
 8012348:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801234c:	d1f2      	bne.n	8012334 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 801234e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8012352:	d203      	bcs.n	801235c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012354:	8029      	strh	r1, [r5, #0]
 8012356:	bd38      	pop	{r3, r4, r5, pc}
 8012358:	2001      	movs	r0, #1
 801235a:	e7fc      	b.n	8012356 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 801235c:	2002      	movs	r0, #2
 801235e:	e7fa      	b.n	8012356 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08012360 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8012360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012362:	4615      	mov	r5, r2
 8012364:	f000 f842 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 8012368:	b1f8      	cbz	r0, 80123aa <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 801236a:	2300      	movs	r3, #0
 801236c:	4604      	mov	r4, r0
 801236e:	461e      	mov	r6, r3
 8012370:	270a      	movs	r7, #10
 8012372:	7822      	ldrb	r2, [r4, #0]
 8012374:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8012378:	2909      	cmp	r1, #9
 801237a:	d818      	bhi.n	80123ae <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 801237c:	fba3 3107 	umull	r3, r1, r3, r7
 8012380:	fb07 1106 	mla	r1, r7, r6, r1
 8012384:	3b30      	subs	r3, #48	; 0x30
 8012386:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 801238a:	18d3      	adds	r3, r2, r3
 801238c:	f141 0600 	adc.w	r6, r1, #0
 8012390:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012394:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012398:	d1eb      	bne.n	8012372 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 801239a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 801239e:	429a      	cmp	r2, r3
 80123a0:	eb70 0206 	sbcs.w	r2, r0, r6
 80123a4:	d303      	bcc.n	80123ae <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80123a6:	602b      	str	r3, [r5, #0]
 80123a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80123aa:	2001      	movs	r0, #1
 80123ac:	e7fc      	b.n	80123a8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 80123ae:	2002      	movs	r0, #2
 80123b0:	e7fa      	b.n	80123a8 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

080123b2 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 80123b2:	b538      	push	{r3, r4, r5, lr}
 80123b4:	4615      	mov	r5, r2
 80123b6:	f000 f819 	bl	80123ec <Sscan::checkName(char const*, char const*)>
 80123ba:	b198      	cbz	r0, 80123e4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 80123bc:	4604      	mov	r4, r0
 80123be:	2100      	movs	r1, #0
 80123c0:	220a      	movs	r2, #10
 80123c2:	7823      	ldrb	r3, [r4, #0]
 80123c4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80123c8:	2809      	cmp	r0, #9
 80123ca:	d80d      	bhi.n	80123e8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80123cc:	fb02 3101 	mla	r1, r2, r1, r3
 80123d0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80123d4:	3930      	subs	r1, #48	; 0x30
 80123d6:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80123da:	d1f2      	bne.n	80123c2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 80123dc:	29ff      	cmp	r1, #255	; 0xff
 80123de:	d803      	bhi.n	80123e8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 80123e0:	7029      	strb	r1, [r5, #0]
 80123e2:	bd38      	pop	{r3, r4, r5, pc}
 80123e4:	2001      	movs	r0, #1
 80123e6:	e7fc      	b.n	80123e2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 80123e8:	2002      	movs	r0, #2
 80123ea:	e7fa      	b.n	80123e2 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

080123ec <Sscan::checkName(char const*, char const*)>:
 80123ec:	4603      	mov	r3, r0
 80123ee:	b510      	push	{r4, lr}
 80123f0:	3901      	subs	r1, #1
 80123f2:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 80123f6:	461c      	mov	r4, r3
 80123f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80123fc:	b120      	cbz	r0, 8012408 <Sscan::checkName(char const*, char const*)+0x1c>
 80123fe:	b10a      	cbz	r2, 8012404 <Sscan::checkName(char const*, char const*)+0x18>
 8012400:	4290      	cmp	r0, r2
 8012402:	d0f6      	beq.n	80123f2 <Sscan::checkName(char const*, char const*)+0x6>
 8012404:	2000      	movs	r0, #0
 8012406:	e006      	b.n	8012416 <Sscan::checkName(char const*, char const*)+0x2a>
 8012408:	2a3d      	cmp	r2, #61	; 0x3d
 801240a:	d104      	bne.n	8012416 <Sscan::checkName(char const*, char const*)+0x2a>
 801240c:	7860      	ldrb	r0, [r4, #1]
 801240e:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8012412:	d000      	beq.n	8012416 <Sscan::checkName(char const*, char const*)+0x2a>
 8012414:	1c60      	adds	r0, r4, #1
 8012416:	bd10      	pop	{r4, pc}

08012418 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8012418:	2300      	movs	r3, #0
 801241a:	2001      	movs	r0, #1
 801241c:	7093      	strb	r3, [r2, #2]
 801241e:	8010      	strh	r0, [r2, #0]
 8012420:	4770      	bx	lr

08012422 <Display::Detect(DisplayType)>:
 8012422:	2902      	cmp	r1, #2
 8012424:	b538      	push	{r3, r4, r5, lr}
 8012426:	4604      	mov	r4, r0
 8012428:	d014      	beq.n	8012454 <Display::Detect(DisplayType)+0x32>
 801242a:	2904      	cmp	r1, #4
 801242c:	d01b      	beq.n	8012466 <Display::Detect(DisplayType)+0x44>
 801242e:	6860      	ldr	r0, [r4, #4]
 8012430:	b168      	cbz	r0, 801244e <Display::Detect(DisplayType)+0x2c>
 8012432:	6803      	ldr	r3, [r0, #0]
 8012434:	689b      	ldr	r3, [r3, #8]
 8012436:	4798      	blx	r3
 8012438:	4603      	mov	r3, r0
 801243a:	6860      	ldr	r0, [r4, #4]
 801243c:	b9ab      	cbnz	r3, 801246a <Display::Detect(DisplayType)+0x48>
 801243e:	b110      	cbz	r0, 8012446 <Display::Detect(DisplayType)+0x24>
 8012440:	6803      	ldr	r3, [r0, #0]
 8012442:	685b      	ldr	r3, [r3, #4]
 8012444:	4798      	blx	r3
 8012446:	2304      	movs	r3, #4
 8012448:	2200      	movs	r2, #0
 801244a:	e9c4 3200 	strd	r3, r2, [r4]
 801244e:	2300      	movs	r3, #0
 8012450:	6123      	str	r3, [r4, #16]
 8012452:	e010      	b.n	8012476 <Display::Detect(DisplayType)+0x54>
 8012454:	2018      	movs	r0, #24
 8012456:	f000 fca9 	bl	8012dac <operator new(unsigned int)>
 801245a:	4605      	mov	r5, r0
 801245c:	2100      	movs	r1, #0
 801245e:	f000 f97f 	bl	8012760 <Ssd1306::Ssd1306(TOledPanel)>
 8012462:	6065      	str	r5, [r4, #4]
 8012464:	e7e3      	b.n	801242e <Display::Detect(DisplayType)+0xc>
 8012466:	6001      	str	r1, [r0, #0]
 8012468:	e7e1      	b.n	801242e <Display::Detect(DisplayType)+0xc>
 801246a:	6803      	ldr	r3, [r0, #0]
 801246c:	68db      	ldr	r3, [r3, #12]
 801246e:	4798      	blx	r3
 8012470:	6863      	ldr	r3, [r4, #4]
 8012472:	2b00      	cmp	r3, #0
 8012474:	d0eb      	beq.n	801244e <Display::Detect(DisplayType)+0x2c>
 8012476:	bd38      	pop	{r3, r4, r5, pc}

08012478 <Display::Printf(unsigned char, char const*, ...)>:
 8012478:	b40c      	push	{r2, r3}
 801247a:	b570      	push	{r4, r5, r6, lr}
 801247c:	6844      	ldr	r4, [r0, #4]
 801247e:	4605      	mov	r5, r0
 8012480:	460e      	mov	r6, r1
 8012482:	b08a      	sub	sp, #40	; 0x28
 8012484:	b174      	cbz	r4, 80124a4 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8012486:	ab0f      	add	r3, sp, #60	; 0x3c
 8012488:	2120      	movs	r1, #32
 801248a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801248c:	a802      	add	r0, sp, #8
 801248e:	9301      	str	r3, [sp, #4]
 8012490:	f001 f926 	bl	80136e0 <vsnprintf>
 8012494:	4604      	mov	r4, r0
 8012496:	6868      	ldr	r0, [r5, #4]
 8012498:	4631      	mov	r1, r6
 801249a:	6803      	ldr	r3, [r0, #0]
 801249c:	aa02      	add	r2, sp, #8
 801249e:	69dd      	ldr	r5, [r3, #28]
 80124a0:	b2a3      	uxth	r3, r4
 80124a2:	47a8      	blx	r5
 80124a4:	4620      	mov	r0, r4
 80124a6:	b00a      	add	sp, #40	; 0x28
 80124a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124ac:	b002      	add	sp, #8
 80124ae:	4770      	bx	lr

080124b0 <Display::Write(unsigned char, char const*)>:
 80124b0:	6840      	ldr	r0, [r0, #4]
 80124b2:	b538      	push	{r3, r4, r5, lr}
 80124b4:	b168      	cbz	r0, 80124d2 <Display::Write(unsigned char, char const*)+0x22>
 80124b6:	2400      	movs	r4, #0
 80124b8:	7905      	ldrb	r5, [r0, #4]
 80124ba:	5d13      	ldrb	r3, [r2, r4]
 80124bc:	b11b      	cbz	r3, 80124c6 <Display::Write(unsigned char, char const*)+0x16>
 80124be:	1c63      	adds	r3, r4, #1
 80124c0:	42ac      	cmp	r4, r5
 80124c2:	461c      	mov	r4, r3
 80124c4:	dbf9      	blt.n	80124ba <Display::Write(unsigned char, char const*)+0xa>
 80124c6:	6803      	ldr	r3, [r0, #0]
 80124c8:	69dd      	ldr	r5, [r3, #28]
 80124ca:	b2e3      	uxtb	r3, r4
 80124cc:	47a8      	blx	r5
 80124ce:	4620      	mov	r0, r4
 80124d0:	bd38      	pop	{r3, r4, r5, pc}
 80124d2:	4604      	mov	r4, r0
 80124d4:	e7fb      	b.n	80124ce <Display::Write(unsigned char, char const*)+0x1e>

080124d6 <Display::SetCursorPos(unsigned char, unsigned char)>:
 80124d6:	6840      	ldr	r0, [r0, #4]
 80124d8:	b110      	cbz	r0, 80124e0 <Display::SetCursorPos(unsigned char, unsigned char)+0xa>
 80124da:	6803      	ldr	r3, [r0, #0]
 80124dc:	6a1b      	ldr	r3, [r3, #32]
 80124de:	4718      	bx	r3
 80124e0:	4770      	bx	lr

080124e2 <Display::TextStatus(char const*)>:
 80124e2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80124e6:	6843      	ldr	r3, [r0, #4]
 80124e8:	4604      	mov	r4, r0
 80124ea:	460e      	mov	r6, r1
 80124ec:	b31b      	cbz	r3, 8012536 <Display::TextStatus(char const*)+0x54>
 80124ee:	f893 9005 	ldrb.w	r9, [r3, #5]
 80124f2:	2100      	movs	r1, #0
 80124f4:	f109 35ff 	add.w	r5, r9, #4294967295	; 0xffffffff
 80124f8:	b2ed      	uxtb	r5, r5
 80124fa:	462a      	mov	r2, r5
 80124fc:	f893 8004 	ldrb.w	r8, [r3, #4]
 8012500:	2700      	movs	r7, #0
 8012502:	f7ff ffe8 	bl	80124d6 <Display::SetCursorPos(unsigned char, unsigned char)>
 8012506:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801250a:	45b8      	cmp	r8, r7
 801250c:	d907      	bls.n	801251e <Display::TextStatus(char const*)+0x3c>
 801250e:	6860      	ldr	r0, [r4, #4]
 8012510:	b118      	cbz	r0, 801251a <Display::TextStatus(char const*)+0x38>
 8012512:	6803      	ldr	r3, [r0, #0]
 8012514:	2120      	movs	r1, #32
 8012516:	695b      	ldr	r3, [r3, #20]
 8012518:	4798      	blx	r3
 801251a:	3701      	adds	r7, #1
 801251c:	e7f5      	b.n	801250a <Display::TextStatus(char const*)+0x28>
 801251e:	462a      	mov	r2, r5
 8012520:	4620      	mov	r0, r4
 8012522:	2100      	movs	r1, #0
 8012524:	f7ff ffd7 	bl	80124d6 <Display::SetCursorPos(unsigned char, unsigned char)>
 8012528:	4632      	mov	r2, r6
 801252a:	4649      	mov	r1, r9
 801252c:	4620      	mov	r0, r4
 801252e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012532:	f7ff bfbd 	b.w	80124b0 <Display::Write(unsigned char, char const*)>
 8012536:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0801253a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 801253a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801253c:	4617      	mov	r7, r2
 801253e:	4606      	mov	r6, r0
 8012540:	461c      	mov	r4, r3
 8012542:	460d      	mov	r5, r1
 8012544:	f7ff ffcd 	bl	80124e2 <Display::TextStatus(char const*)>
 8012548:	4639      	mov	r1, r7
 801254a:	f106 0014 	add.w	r0, r6, #20
 801254e:	f000 f86c 	bl	801262a <Display7Segment::Status(Display7SegmentMessage)>
 8012552:	1c63      	adds	r3, r4, #1
 8012554:	d005      	beq.n	8012562 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x28>
 8012556:	4629      	mov	r1, r5
 8012558:	4620      	mov	r0, r4
 801255a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801255e:	f000 bad3 	b.w	8012b08 <console_status>
 8012562:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012564 <Display::PrintInfo()>:
 8012564:	6840      	ldr	r0, [r0, #4]
 8012566:	b910      	cbnz	r0, 801256e <Display::PrintInfo()+0xa>
 8012568:	4802      	ldr	r0, [pc, #8]	; (8012574 <Display::PrintInfo()+0x10>)
 801256a:	f001 b8c9 	b.w	8013700 <puts>
 801256e:	6803      	ldr	r3, [r0, #0]
 8012570:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012572:	4718      	bx	r3
 8012574:	08017d13 	stmdaeq	r1, {r0, r1, r4, r8, sl, fp, ip, sp, lr}

08012578 <Display::Display()>:
 8012578:	2300      	movs	r3, #0
 801257a:	2204      	movs	r2, #4
 801257c:	b510      	push	{r4, lr}
 801257e:	4604      	mov	r4, r0
 8012580:	e9c0 2300 	strd	r2, r3, [r0]
 8012584:	7203      	strb	r3, [r0, #8]
 8012586:	4b0b      	ldr	r3, [pc, #44]	; (80125b4 <Display::Display()+0x3c>)
 8012588:	3014      	adds	r0, #20
 801258a:	681b      	ldr	r3, [r3, #0]
 801258c:	f840 3c08 	str.w	r3, [r0, #-8]
 8012590:	4b09      	ldr	r3, [pc, #36]	; (80125b8 <Display::Display()+0x40>)
 8012592:	f840 3c04 	str.w	r3, [r0, #-4]
 8012596:	f000 f851 	bl	801263c <Display7Segment::Display7Segment()>
 801259a:	4b08      	ldr	r3, [pc, #32]	; (80125bc <Display::Display()+0x44>)
 801259c:	601c      	str	r4, [r3, #0]
 801259e:	6863      	ldr	r3, [r4, #4]
 80125a0:	b91b      	cbnz	r3, 80125aa <Display::Display()+0x32>
 80125a2:	2102      	movs	r1, #2
 80125a4:	4620      	mov	r0, r4
 80125a6:	f7ff ff3c 	bl	8012422 <Display::Detect(DisplayType)>
 80125aa:	4620      	mov	r0, r4
 80125ac:	f7ff ffda 	bl	8012564 <Display::PrintInfo()>
 80125b0:	4620      	mov	r0, r4
 80125b2:	bd10      	pop	{r4, pc}
 80125b4:	200125a8 	andcs	r2, r1, r8, lsr #11
 80125b8:	000493e0 	andeq	r9, r4, r0, ror #7
 80125bc:	20012498 	mulcs	r1, r8, r4

080125c0 <Display::SetSleep(bool)>:
 80125c0:	b538      	push	{r3, r4, r5, lr}
 80125c2:	4604      	mov	r4, r0
 80125c4:	6840      	ldr	r0, [r0, #4]
 80125c6:	460d      	mov	r5, r1
 80125c8:	b138      	cbz	r0, 80125da <Display::SetSleep(bool)+0x1a>
 80125ca:	6803      	ldr	r3, [r0, #0]
 80125cc:	7221      	strb	r1, [r4, #8]
 80125ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80125d0:	4798      	blx	r3
 80125d2:	b915      	cbnz	r5, 80125da <Display::SetSleep(bool)+0x1a>
 80125d4:	4b01      	ldr	r3, [pc, #4]	; (80125dc <Display::SetSleep(bool)+0x1c>)
 80125d6:	681b      	ldr	r3, [r3, #0]
 80125d8:	60e3      	str	r3, [r4, #12]
 80125da:	bd38      	pop	{r3, r4, r5, pc}
 80125dc:	200125a8 	andcs	r2, r1, r8, lsr #11

080125e0 <Display::Run()>:
 80125e0:	6901      	ldr	r1, [r0, #16]
 80125e2:	b151      	cbz	r1, 80125fa <Display::Run()+0x1a>
 80125e4:	7a02      	ldrb	r2, [r0, #8]
 80125e6:	b942      	cbnz	r2, 80125fa <Display::Run()+0x1a>
 80125e8:	4a04      	ldr	r2, [pc, #16]	; (80125fc <Display::Run()+0x1c>)
 80125ea:	68c3      	ldr	r3, [r0, #12]
 80125ec:	6812      	ldr	r2, [r2, #0]
 80125ee:	1ad3      	subs	r3, r2, r3
 80125f0:	4299      	cmp	r1, r3
 80125f2:	d202      	bcs.n	80125fa <Display::Run()+0x1a>
 80125f4:	2101      	movs	r1, #1
 80125f6:	f7ff bfe3 	b.w	80125c0 <Display::SetSleep(bool)>
 80125fa:	4770      	bx	lr
 80125fc:	200125a8 	andcs	r2, r1, r8, lsr #11

08012600 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8012600:	b513      	push	{r0, r1, r4, lr}
 8012602:	4604      	mov	r4, r0
 8012604:	0a13      	lsrs	r3, r2, #8
 8012606:	7800      	ldrb	r0, [r0, #0]
 8012608:	f88d 1004 	strb.w	r1, [sp, #4]
 801260c:	f88d 3005 	strb.w	r3, [sp, #5]
 8012610:	f88d 2006 	strb.w	r2, [sp, #6]
 8012614:	f001 fa14 	bl	8013a40 <gd32_i2c_set_address>
 8012618:	6860      	ldr	r0, [r4, #4]
 801261a:	f001 fa09 	bl	8013a30 <gd32_i2c_set_baudrate>
 801261e:	2103      	movs	r1, #3
 8012620:	a801      	add	r0, sp, #4
 8012622:	f001 fa13 	bl	8013a4c <gd32_i2c_write>
 8012626:	b002      	add	sp, #8
 8012628:	bd10      	pop	{r4, pc}

0801262a <Display7Segment::Status(Display7SegmentMessage)>:
 801262a:	b508      	push	{r3, lr}
 801262c:	7a03      	ldrb	r3, [r0, #8]
 801262e:	b123      	cbz	r3, 801263a <Display7Segment::Status(Display7SegmentMessage)+0x10>
 8012630:	43c9      	mvns	r1, r1
 8012632:	b28a      	uxth	r2, r1
 8012634:	2112      	movs	r1, #18
 8012636:	f7ff ffe3 	bl	8012600 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801263a:	bd08      	pop	{r3, pc}

0801263c <Display7Segment::Display7Segment()>:
 801263c:	b570      	push	{r4, r5, r6, lr}
 801263e:	4604      	mov	r4, r0
 8012640:	2500      	movs	r5, #0
 8012642:	2021      	movs	r0, #33	; 0x21
 8012644:	4e0f      	ldr	r6, [pc, #60]	; (8012684 <Display7Segment::Display7Segment()+0x48>)
 8012646:	4b10      	ldr	r3, [pc, #64]	; (8012688 <Display7Segment::Display7Segment()+0x4c>)
 8012648:	7020      	strb	r0, [r4, #0]
 801264a:	6066      	str	r6, [r4, #4]
 801264c:	7225      	strb	r5, [r4, #8]
 801264e:	601c      	str	r4, [r3, #0]
 8012650:	f001 f9f6 	bl	8013a40 <gd32_i2c_set_address>
 8012654:	4630      	mov	r0, r6
 8012656:	f001 f9eb 	bl	8013a30 <gd32_i2c_set_baudrate>
 801265a:	4629      	mov	r1, r5
 801265c:	4628      	mov	r0, r5
 801265e:	f001 f9f5 	bl	8013a4c <gd32_i2c_write>
 8012662:	1e02      	subs	r2, r0, #0
 8012664:	bf0c      	ite	eq
 8012666:	2301      	moveq	r3, #1
 8012668:	462b      	movne	r3, r5
 801266a:	7223      	strb	r3, [r4, #8]
 801266c:	d108      	bne.n	8012680 <Display7Segment::Display7Segment()+0x44>
 801266e:	4611      	mov	r1, r2
 8012670:	4620      	mov	r0, r4
 8012672:	f7ff ffc5 	bl	8012600 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012676:	f44f 517c 	mov.w	r1, #16128	; 0x3f00
 801267a:	4620      	mov	r0, r4
 801267c:	f7ff ffd5 	bl	801262a <Display7Segment::Status(Display7SegmentMessage)>
 8012680:	4620      	mov	r0, r4
 8012682:	bd70      	pop	{r4, r5, r6, pc}
 8012684:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012688:	2001249c 	mulcs	r1, ip, r4

0801268c <Ssd1306::~Ssd1306()>:
 801268c:	4770      	bx	lr

0801268e <Ssd1306::SetCursor(unsigned int)>:
 801268e:	4770      	bx	lr

08012690 <Ssd1306::PrintInfo()>:
 8012690:	b410      	push	{r4}
 8012692:	4906      	ldr	r1, [pc, #24]	; (80126ac <Ssd1306::PrintInfo()+0x1c>)
 8012694:	7c44      	ldrb	r4, [r0, #17]
 8012696:	7903      	ldrb	r3, [r0, #4]
 8012698:	7942      	ldrb	r2, [r0, #5]
 801269a:	4805      	ldr	r0, [pc, #20]	; (80126b0 <Ssd1306::PrintInfo()+0x20>)
 801269c:	2c00      	cmp	r4, #0
 801269e:	bf08      	it	eq
 80126a0:	4601      	moveq	r1, r0
 80126a2:	4804      	ldr	r0, [pc, #16]	; (80126b4 <Ssd1306::PrintInfo()+0x24>)
 80126a4:	bc10      	pop	{r4}
 80126a6:	f000 bfdb 	b.w	8013660 <printf>
 80126aa:	bf00      	nop
 80126ac:	08017d24 	stmdaeq	r1, {r2, r5, r8, sl, fp, ip, sp, lr}
 80126b0:	08017d2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, sl, fp, ip, sp, lr}
 80126b4:	08017d33 	stmdaeq	r1, {r0, r1, r4, r5, r8, sl, fp, ip, sp, lr}

080126b8 <Ssd1306::~Ssd1306()>:
 80126b8:	b510      	push	{r4, lr}
 80126ba:	4604      	mov	r4, r0
 80126bc:	f000 fb72 	bl	8012da4 <operator delete(void*)>
 80126c0:	4620      	mov	r0, r4
 80126c2:	bd10      	pop	{r4, pc}

080126c4 <HAL_I2C::Setup()>:
 80126c4:	b510      	push	{r4, lr}
 80126c6:	4604      	mov	r4, r0
 80126c8:	7800      	ldrb	r0, [r0, #0]
 80126ca:	f001 f9b9 	bl	8013a40 <gd32_i2c_set_address>
 80126ce:	6860      	ldr	r0, [r4, #4]
 80126d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126d4:	f001 b9ac 	b.w	8013a30 <gd32_i2c_set_baudrate>

080126d8 <Ssd1306::PutChar(int)>:
 80126d8:	b510      	push	{r4, lr}
 80126da:	f1a1 0420 	sub.w	r4, r1, #32
 80126de:	2c5f      	cmp	r4, #95	; 0x5f
 80126e0:	bf88      	it	hi
 80126e2:	2400      	movhi	r4, #0
 80126e4:	3008      	adds	r0, #8
 80126e6:	f7ff ffed 	bl	80126c4 <HAL_I2C::Setup()>
 80126ea:	4804      	ldr	r0, [pc, #16]	; (80126fc <Ssd1306::PutChar(int)+0x24>)
 80126ec:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 80126f0:	4420      	add	r0, r4
 80126f2:	2107      	movs	r1, #7
 80126f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126f8:	f001 b9a8 	b.w	8013a4c <gd32_i2c_write>
 80126fc:	08017d48 	stmdaeq	r1, {r3, r6, r8, sl, fp, ip, sp, lr}

08012700 <Ssd1306::PutString(char const*)>:
 8012700:	b538      	push	{r3, r4, r5, lr}
 8012702:	4605      	mov	r5, r0
 8012704:	1e4c      	subs	r4, r1, #1
 8012706:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801270a:	b119      	cbz	r1, 8012714 <Ssd1306::PutString(char const*)+0x14>
 801270c:	4628      	mov	r0, r5
 801270e:	f7ff ffe3 	bl	80126d8 <Ssd1306::PutChar(int)>
 8012712:	e7f8      	b.n	8012706 <Ssd1306::PutString(char const*)+0x6>
 8012714:	bd38      	pop	{r3, r4, r5, pc}

08012716 <Ssd1306::Text(char const*, unsigned int)>:
 8012716:	b570      	push	{r4, r5, r6, lr}
 8012718:	7903      	ldrb	r3, [r0, #4]
 801271a:	4605      	mov	r5, r0
 801271c:	460c      	mov	r4, r1
 801271e:	4293      	cmp	r3, r2
 8012720:	bf94      	ite	ls
 8012722:	18ce      	addls	r6, r1, r3
 8012724:	188e      	addhi	r6, r1, r2
 8012726:	42b4      	cmp	r4, r6
 8012728:	d005      	beq.n	8012736 <Ssd1306::Text(char const*, unsigned int)+0x20>
 801272a:	4628      	mov	r0, r5
 801272c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012730:	f7ff ffd2 	bl	80126d8 <Ssd1306::PutChar(int)>
 8012734:	e7f7      	b.n	8012726 <Ssd1306::Text(char const*, unsigned int)+0x10>
 8012736:	bd70      	pop	{r4, r5, r6, pc}

08012738 <Ssd1306::InitMembers()>:
 8012738:	7c03      	ldrb	r3, [r0, #16]
 801273a:	b12b      	cbz	r3, 8012748 <Ssd1306::InitMembers()+0x10>
 801273c:	3b01      	subs	r3, #1
 801273e:	2b01      	cmp	r3, #1
 8012740:	d908      	bls.n	8012754 <Ssd1306::InitMembers()+0x1c>
 8012742:	f640 0315 	movw	r3, #2069	; 0x815
 8012746:	e007      	b.n	8012758 <Ssd1306::InitMembers()+0x20>
 8012748:	f640 0315 	movw	r3, #2069	; 0x815
 801274c:	8083      	strh	r3, [r0, #4]
 801274e:	2308      	movs	r3, #8
 8012750:	6143      	str	r3, [r0, #20]
 8012752:	4770      	bx	lr
 8012754:	f240 4315 	movw	r3, #1045	; 0x415
 8012758:	8083      	strh	r3, [r0, #4]
 801275a:	2304      	movs	r3, #4
 801275c:	e7f8      	b.n	8012750 <Ssd1306::InitMembers()+0x18>
	...

08012760 <Ssd1306::Ssd1306(TOledPanel)>:
 8012760:	4a08      	ldr	r2, [pc, #32]	; (8012784 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8012762:	b508      	push	{r3, lr}
 8012764:	6002      	str	r2, [r0, #0]
 8012766:	227f      	movs	r2, #127	; 0x7f
 8012768:	80c2      	strh	r2, [r0, #6]
 801276a:	223c      	movs	r2, #60	; 0x3c
 801276c:	7202      	strb	r2, [r0, #8]
 801276e:	4a06      	ldr	r2, [pc, #24]	; (8012788 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8012770:	7401      	strb	r1, [r0, #16]
 8012772:	60c2      	str	r2, [r0, #12]
 8012774:	2200      	movs	r2, #0
 8012776:	7442      	strb	r2, [r0, #17]
 8012778:	4a04      	ldr	r2, [pc, #16]	; (801278c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 801277a:	6010      	str	r0, [r2, #0]
 801277c:	f7ff ffdc 	bl	8012738 <Ssd1306::InitMembers()>
 8012780:	bd08      	pop	{r3, pc}
 8012782:	bf00      	nop
 8012784:	08018020 	stmdaeq	r1, {r5, pc}
 8012788:	00061a80 	andeq	r1, r6, r0, lsl #21
 801278c:	20012528 	andcs	r2, r1, r8, lsr #10

08012790 <Ssd1306::SendCommand(unsigned char)>:
 8012790:	2300      	movs	r3, #0
 8012792:	b507      	push	{r0, r1, r2, lr}
 8012794:	3008      	adds	r0, #8
 8012796:	f88d 3004 	strb.w	r3, [sp, #4]
 801279a:	f88d 1005 	strb.w	r1, [sp, #5]
 801279e:	f7ff ff91 	bl	80126c4 <HAL_I2C::Setup()>
 80127a2:	2102      	movs	r1, #2
 80127a4:	a801      	add	r0, sp, #4
 80127a6:	f001 f951 	bl	8013a4c <gd32_i2c_write>
 80127aa:	b003      	add	sp, #12
 80127ac:	f85d fb04 	ldr.w	pc, [sp], #4

080127b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80127b0:	2914      	cmp	r1, #20
 80127b2:	b570      	push	{r4, r5, r6, lr}
 80127b4:	4605      	mov	r5, r0
 80127b6:	4616      	mov	r6, r2
 80127b8:	d81c      	bhi.n	80127f4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80127ba:	7943      	ldrb	r3, [r0, #5]
 80127bc:	4293      	cmp	r3, r2
 80127be:	d919      	bls.n	80127f4 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80127c0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80127c4:	7c43      	ldrb	r3, [r0, #17]
 80127c6:	004c      	lsls	r4, r1, #1
 80127c8:	b2e4      	uxtb	r4, r4
 80127ca:	b10b      	cbz	r3, 80127d0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 80127cc:	3404      	adds	r4, #4
 80127ce:	b2e4      	uxtb	r4, r4
 80127d0:	4628      	mov	r0, r5
 80127d2:	f004 010e 	and.w	r1, r4, #14
 80127d6:	f7ff ffdb 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80127da:	0921      	lsrs	r1, r4, #4
 80127dc:	4628      	mov	r0, r5
 80127de:	f041 0110 	orr.w	r1, r1, #16
 80127e2:	f7ff ffd5 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80127e6:	4628      	mov	r0, r5
 80127e8:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 80127ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80127f0:	f7ff bfce 	b.w	8012790 <Ssd1306::SendCommand(unsigned char)>
 80127f4:	bd70      	pop	{r4, r5, r6, pc}

080127f6 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 80127f6:	b570      	push	{r4, r5, r6, lr}
 80127f8:	4604      	mov	r4, r0
 80127fa:	4615      	mov	r5, r2
 80127fc:	461e      	mov	r6, r3
 80127fe:	b171      	cbz	r1, 801281e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012800:	7943      	ldrb	r3, [r0, #5]
 8012802:	428b      	cmp	r3, r1
 8012804:	d30b      	bcc.n	801281e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012806:	3901      	subs	r1, #1
 8012808:	b2ca      	uxtb	r2, r1
 801280a:	2100      	movs	r1, #0
 801280c:	f7ff ffd0 	bl	80127b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012810:	4632      	mov	r2, r6
 8012812:	4629      	mov	r1, r5
 8012814:	4620      	mov	r0, r4
 8012816:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801281a:	f7ff bf7c 	b.w	8012716 <Ssd1306::Text(char const*, unsigned int)>
 801281e:	bd70      	pop	{r4, r5, r6, pc}

08012820 <Ssd1306::ClearLine(unsigned char)>:
 8012820:	b538      	push	{r3, r4, r5, lr}
 8012822:	4605      	mov	r5, r0
 8012824:	b1b9      	cbz	r1, 8012856 <Ssd1306::ClearLine(unsigned char)+0x36>
 8012826:	7943      	ldrb	r3, [r0, #5]
 8012828:	428b      	cmp	r3, r1
 801282a:	d314      	bcc.n	8012856 <Ssd1306::ClearLine(unsigned char)+0x36>
 801282c:	3901      	subs	r1, #1
 801282e:	b2cc      	uxtb	r4, r1
 8012830:	4622      	mov	r2, r4
 8012832:	2100      	movs	r1, #0
 8012834:	f7ff ffbc 	bl	80127b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012838:	f105 0008 	add.w	r0, r5, #8
 801283c:	f7ff ff42 	bl	80126c4 <HAL_I2C::Setup()>
 8012840:	2181      	movs	r1, #129	; 0x81
 8012842:	4805      	ldr	r0, [pc, #20]	; (8012858 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8012844:	f001 f902 	bl	8013a4c <gd32_i2c_write>
 8012848:	4622      	mov	r2, r4
 801284a:	4628      	mov	r0, r5
 801284c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012850:	2100      	movs	r1, #0
 8012852:	f7ff bfad 	b.w	80127b0 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012856:	bd38      	pop	{r3, r4, r5, pc}
 8012858:	200124a0 	andcs	r2, r1, r0, lsr #9

0801285c <Ssd1306::SetSleep(bool)>:
 801285c:	b111      	cbz	r1, 8012864 <Ssd1306::SetSleep(bool)+0x8>
 801285e:	21ae      	movs	r1, #174	; 0xae
 8012860:	f7ff bf96 	b.w	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012864:	21af      	movs	r1, #175	; 0xaf
 8012866:	e7fb      	b.n	8012860 <Ssd1306::SetSleep(bool)+0x4>

08012868 <Ssd1306::SetContrast(unsigned char)>:
 8012868:	b538      	push	{r3, r4, r5, lr}
 801286a:	4604      	mov	r4, r0
 801286c:	460d      	mov	r5, r1
 801286e:	7181      	strb	r1, [r0, #6]
 8012870:	2181      	movs	r1, #129	; 0x81
 8012872:	f7ff ff8d 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012876:	4629      	mov	r1, r5
 8012878:	4620      	mov	r0, r4
 801287a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801287e:	f7ff bf87 	b.w	8012790 <Ssd1306::SendCommand(unsigned char)>

08012882 <Ssd1306::SetFlipVertically(bool)>:
 8012882:	b510      	push	{r4, lr}
 8012884:	4604      	mov	r4, r0
 8012886:	71c1      	strb	r1, [r0, #7]
 8012888:	b141      	cbz	r1, 801289c <Ssd1306::SetFlipVertically(bool)+0x1a>
 801288a:	21c0      	movs	r1, #192	; 0xc0
 801288c:	f7ff ff80 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012890:	21a0      	movs	r1, #160	; 0xa0
 8012892:	4620      	mov	r0, r4
 8012894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012898:	f7ff bf7a 	b.w	8012790 <Ssd1306::SendCommand(unsigned char)>
 801289c:	21c8      	movs	r1, #200	; 0xc8
 801289e:	f7ff ff77 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128a2:	21a1      	movs	r1, #161	; 0xa1
 80128a4:	e7f5      	b.n	8012892 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080128a8 <Ssd1306::CheckSH1106()>:
 80128a8:	b570      	push	{r4, r5, r6, lr}
 80128aa:	4604      	mov	r4, r0
 80128ac:	b086      	sub	sp, #24
 80128ae:	2100      	movs	r1, #0
 80128b0:	f7ff ff6e 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128b4:	2190      	movs	r1, #144	; 0x90
 80128b6:	4620      	mov	r0, r4
 80128b8:	f7ff ff6a 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128bc:	21b0      	movs	r1, #176	; 0xb0
 80128be:	4620      	mov	r0, r4
 80128c0:	f7ff ff66 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128c4:	4b22      	ldr	r3, [pc, #136]	; (8012950 <Ssd1306::CheckSH1106()+0xa8>)
 80128c6:	f104 0608 	add.w	r6, r4, #8
 80128ca:	6818      	ldr	r0, [r3, #0]
 80128cc:	791b      	ldrb	r3, [r3, #4]
 80128ce:	ad02      	add	r5, sp, #8
 80128d0:	9002      	str	r0, [sp, #8]
 80128d2:	4630      	mov	r0, r6
 80128d4:	712b      	strb	r3, [r5, #4]
 80128d6:	f7ff fef5 	bl	80126c4 <HAL_I2C::Setup()>
 80128da:	2105      	movs	r1, #5
 80128dc:	4628      	mov	r0, r5
 80128de:	f001 f8b5 	bl	8013a4c <gd32_i2c_write>
 80128e2:	2100      	movs	r1, #0
 80128e4:	4620      	mov	r0, r4
 80128e6:	f7ff ff53 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128ea:	2190      	movs	r1, #144	; 0x90
 80128ec:	4620      	mov	r0, r4
 80128ee:	f7ff ff4f 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128f2:	21b0      	movs	r1, #176	; 0xb0
 80128f4:	4620      	mov	r0, r4
 80128f6:	f7ff ff4b 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80128fa:	2300      	movs	r3, #0
 80128fc:	9304      	str	r3, [sp, #16]
 80128fe:	f88d 3014 	strb.w	r3, [sp, #20]
 8012902:	2340      	movs	r3, #64	; 0x40
 8012904:	4630      	mov	r0, r6
 8012906:	f88d 3007 	strb.w	r3, [sp, #7]
 801290a:	f7ff fedb 	bl	80126c4 <HAL_I2C::Setup()>
 801290e:	2101      	movs	r1, #1
 8012910:	f10d 0007 	add.w	r0, sp, #7
 8012914:	f001 f89a 	bl	8013a4c <gd32_i2c_write>
 8012918:	4630      	mov	r0, r6
 801291a:	f7ff fed3 	bl	80126c4 <HAL_I2C::Setup()>
 801291e:	2105      	movs	r1, #5
 8012920:	a804      	add	r0, sp, #16
 8012922:	f001 f8f7 	bl	8013b14 <gd32_i2c_read>
 8012926:	2201      	movs	r2, #1
 8012928:	5cab      	ldrb	r3, [r5, r2]
 801292a:	a904      	add	r1, sp, #16
 801292c:	3201      	adds	r2, #1
 801292e:	4411      	add	r1, r2
 8012930:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8012934:	428b      	cmp	r3, r1
 8012936:	d006      	beq.n	8012946 <Ssd1306::CheckSH1106()+0x9e>
 8012938:	1a5b      	subs	r3, r3, r1
 801293a:	fab3 f383 	clz	r3, r3
 801293e:	095b      	lsrs	r3, r3, #5
 8012940:	7463      	strb	r3, [r4, #17]
 8012942:	b006      	add	sp, #24
 8012944:	bd70      	pop	{r4, r5, r6, pc}
 8012946:	2a05      	cmp	r2, #5
 8012948:	d1ee      	bne.n	8012928 <Ssd1306::CheckSH1106()+0x80>
 801294a:	2300      	movs	r3, #0
 801294c:	e7f5      	b.n	801293a <Ssd1306::CheckSH1106()+0x92>
 801294e:	bf00      	nop
 8012950:	08017d3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl, fp, ip, sp, lr}

08012954 <Ssd1306::Cls()>:
 8012954:	7c43      	ldrb	r3, [r0, #17]
 8012956:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801295a:	2b00      	cmp	r3, #0
 801295c:	bf0c      	ite	eq
 801295e:	2500      	moveq	r5, #0
 8012960:	2504      	movne	r5, #4
 8012962:	4604      	mov	r4, r0
 8012964:	2600      	movs	r6, #0
 8012966:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 801296a:	f045 0810 	orr.w	r8, r5, #16
 801296e:	b2ff      	uxtb	r7, r7
 8012970:	6963      	ldr	r3, [r4, #20]
 8012972:	4629      	mov	r1, r5
 8012974:	42b3      	cmp	r3, r6
 8012976:	4620      	mov	r0, r4
 8012978:	d91b      	bls.n	80129b2 <Ssd1306::Cls()+0x5e>
 801297a:	f7ff ff09 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 801297e:	4641      	mov	r1, r8
 8012980:	4620      	mov	r0, r4
 8012982:	f7ff ff05 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012986:	f066 014f 	orn	r1, r6, #79	; 0x4f
 801298a:	4620      	mov	r0, r4
 801298c:	b2c9      	uxtb	r1, r1
 801298e:	f7ff feff 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012992:	7c23      	ldrb	r3, [r4, #16]
 8012994:	b123      	cbz	r3, 80129a0 <Ssd1306::Cls()+0x4c>
 8012996:	3b01      	subs	r3, #1
 8012998:	2b01      	cmp	r3, #1
 801299a:	d901      	bls.n	80129a0 <Ssd1306::Cls()+0x4c>
 801299c:	3601      	adds	r6, #1
 801299e:	e7e7      	b.n	8012970 <Ssd1306::Cls()+0x1c>
 80129a0:	f104 0008 	add.w	r0, r4, #8
 80129a4:	f7ff fe8e 	bl	80126c4 <HAL_I2C::Setup()>
 80129a8:	4639      	mov	r1, r7
 80129aa:	4808      	ldr	r0, [pc, #32]	; (80129cc <Ssd1306::Cls()+0x78>)
 80129ac:	f001 f84e 	bl	8013a4c <gd32_i2c_write>
 80129b0:	e7f4      	b.n	801299c <Ssd1306::Cls()+0x48>
 80129b2:	f7ff feed 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80129b6:	4641      	mov	r1, r8
 80129b8:	4620      	mov	r0, r4
 80129ba:	f7ff fee9 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 80129be:	4620      	mov	r0, r4
 80129c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80129c4:	21b0      	movs	r1, #176	; 0xb0
 80129c6:	f7ff bee3 	b.w	8012790 <Ssd1306::SendCommand(unsigned char)>
 80129ca:	bf00      	nop
 80129cc:	200124a0 	andcs	r2, r1, r0, lsr #9

080129d0 <Ssd1306::Start()>:
 80129d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80129d2:	7a04      	ldrb	r4, [r0, #8]
 80129d4:	68c6      	ldr	r6, [r0, #12]
 80129d6:	4605      	mov	r5, r0
 80129d8:	4620      	mov	r0, r4
 80129da:	f001 f831 	bl	8013a40 <gd32_i2c_set_address>
 80129de:	4630      	mov	r0, r6
 80129e0:	f001 f826 	bl	8013a30 <gd32_i2c_set_baudrate>
 80129e4:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80129e8:	2b07      	cmp	r3, #7
 80129ea:	d902      	bls.n	80129f2 <Ssd1306::Start()+0x22>
 80129ec:	3c50      	subs	r4, #80	; 0x50
 80129ee:	2c0f      	cmp	r4, #15
 80129f0:	d80f      	bhi.n	8012a12 <Ssd1306::Start()+0x42>
 80129f2:	2101      	movs	r1, #1
 80129f4:	f10d 0007 	add.w	r0, sp, #7
 80129f8:	f001 f88c 	bl	8013b14 <gd32_i2c_read>
 80129fc:	fab0 f480 	clz	r4, r0
 8012a00:	0964      	lsrs	r4, r4, #5
 8012a02:	b35c      	cbz	r4, 8012a5c <Ssd1306::Start()+0x8c>
 8012a04:	7c2e      	ldrb	r6, [r5, #16]
 8012a06:	b14e      	cbz	r6, 8012a1c <Ssd1306::Start()+0x4c>
 8012a08:	3e01      	subs	r6, #1
 8012a0a:	2e01      	cmp	r6, #1
 8012a0c:	d929      	bls.n	8012a62 <Ssd1306::Start()+0x92>
 8012a0e:	2400      	movs	r4, #0
 8012a10:	e024      	b.n	8012a5c <Ssd1306::Start()+0x8c>
 8012a12:	2100      	movs	r1, #0
 8012a14:	4608      	mov	r0, r1
 8012a16:	f001 f819 	bl	8013a4c <gd32_i2c_write>
 8012a1a:	e7ef      	b.n	80129fc <Ssd1306::Start()+0x2c>
 8012a1c:	4f16      	ldr	r7, [pc, #88]	; (8012a78 <Ssd1306::Start()+0xa8>)
 8012a1e:	4628      	mov	r0, r5
 8012a20:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012a24:	3601      	adds	r6, #1
 8012a26:	f7ff feb3 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012a2a:	2e18      	cmp	r6, #24
 8012a2c:	d1f7      	bne.n	8012a1e <Ssd1306::Start()+0x4e>
 8012a2e:	2300      	movs	r3, #0
 8012a30:	4a12      	ldr	r2, [pc, #72]	; (8012a7c <Ssd1306::Start()+0xac>)
 8012a32:	4618      	mov	r0, r3
 8012a34:	4611      	mov	r1, r2
 8012a36:	3301      	adds	r3, #1
 8012a38:	2b86      	cmp	r3, #134	; 0x86
 8012a3a:	f802 0b01 	strb.w	r0, [r2], #1
 8012a3e:	d1fa      	bne.n	8012a36 <Ssd1306::Start()+0x66>
 8012a40:	2340      	movs	r3, #64	; 0x40
 8012a42:	4628      	mov	r0, r5
 8012a44:	700b      	strb	r3, [r1, #0]
 8012a46:	f7ff ff2f 	bl	80128a8 <Ssd1306::CheckSH1106()>
 8012a4a:	4628      	mov	r0, r5
 8012a4c:	f7ff ff82 	bl	8012954 <Ssd1306::Cls()>
 8012a50:	21af      	movs	r1, #175	; 0xaf
 8012a52:	4628      	mov	r0, r5
 8012a54:	f7ff fe9c 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012a58:	2301      	movs	r3, #1
 8012a5a:	71eb      	strb	r3, [r5, #7]
 8012a5c:	4620      	mov	r0, r4
 8012a5e:	b003      	add	sp, #12
 8012a60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012a62:	2600      	movs	r6, #0
 8012a64:	4f06      	ldr	r7, [pc, #24]	; (8012a80 <Ssd1306::Start()+0xb0>)
 8012a66:	4628      	mov	r0, r5
 8012a68:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012a6c:	3601      	adds	r6, #1
 8012a6e:	f7ff fe8f 	bl	8012790 <Ssd1306::SendCommand(unsigned char)>
 8012a72:	2e18      	cmp	r6, #24
 8012a74:	d1f7      	bne.n	8012a66 <Ssd1306::Start()+0x96>
 8012a76:	e7da      	b.n	8012a2e <Ssd1306::Start()+0x5e>
 8012a78:	08018000 	stmdaeq	r1, {pc}
 8012a7c:	200124a0 	andcs	r2, r1, r0, lsr #9
 8012a80:	08017fe8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08012a84 <console_putc>:
 8012a84:	280a      	cmp	r0, #10
 8012a86:	b510      	push	{r4, lr}
 8012a88:	4604      	mov	r4, r0
 8012a8a:	d102      	bne.n	8012a92 <console_putc+0xe>
 8012a8c:	200d      	movs	r0, #13
 8012a8e:	f001 f8f5 	bl	8013c7c <uart0_putc>
 8012a92:	4620      	mov	r0, r4
 8012a94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a98:	f001 b8f0 	b.w	8013c7c <uart0_putc>

08012a9c <console_puts>:
 8012a9c:	f001 b90e 	b.w	8013cbc <uart0_puts>

08012aa0 <console_set_fg_color>:
 8012aa0:	2807      	cmp	r0, #7
 8012aa2:	d810      	bhi.n	8012ac6 <console_set_fg_color+0x26>
 8012aa4:	e8df f000 	tbb	[pc, r0]
 8012aa8:	0b090704 	bleq	82546c0 <_sidata+0x23c388>
 8012aac:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8012a78 <Ssd1306::Start()+0xa8>
 8012ab0:	4806      	ldr	r0, [pc, #24]	; (8012acc <console_set_fg_color+0x2c>)
 8012ab2:	f001 b903 	b.w	8013cbc <uart0_puts>
 8012ab6:	4806      	ldr	r0, [pc, #24]	; (8012ad0 <console_set_fg_color+0x30>)
 8012ab8:	e7fb      	b.n	8012ab2 <console_set_fg_color+0x12>
 8012aba:	4806      	ldr	r0, [pc, #24]	; (8012ad4 <console_set_fg_color+0x34>)
 8012abc:	e7f9      	b.n	8012ab2 <console_set_fg_color+0x12>
 8012abe:	4806      	ldr	r0, [pc, #24]	; (8012ad8 <console_set_fg_color+0x38>)
 8012ac0:	e7f7      	b.n	8012ab2 <console_set_fg_color+0x12>
 8012ac2:	4806      	ldr	r0, [pc, #24]	; (8012adc <console_set_fg_color+0x3c>)
 8012ac4:	e7f5      	b.n	8012ab2 <console_set_fg_color+0x12>
 8012ac6:	4806      	ldr	r0, [pc, #24]	; (8012ae0 <console_set_fg_color+0x40>)
 8012ac8:	e7f3      	b.n	8012ab2 <console_set_fg_color+0x12>
 8012aca:	bf00      	nop
 8012acc:	0801805e 	stmdaeq	r1, {r1, r2, r3, r4, r6, pc}
 8012ad0:	08018064 	stmdaeq	r1, {r2, r5, r6, pc}
 8012ad4:	0801806a 	stmdaeq	r1, {r1, r3, r5, r6, pc}
 8012ad8:	08018070 	stmdaeq	r1, {r4, r5, r6, pc}
 8012adc:	08015903 	stmdaeq	r1, {r0, r1, r8, fp, ip, lr}
 8012ae0:	08018076 	stmdaeq	r1, {r1, r2, r4, r5, r6, pc}

08012ae4 <console_error>:
 8012ae4:	b510      	push	{r4, lr}
 8012ae6:	4604      	mov	r4, r0
 8012ae8:	4805      	ldr	r0, [pc, #20]	; (8012b00 <console_error+0x1c>)
 8012aea:	f001 f8e7 	bl	8013cbc <uart0_puts>
 8012aee:	4620      	mov	r0, r4
 8012af0:	f001 f8e4 	bl	8013cbc <uart0_puts>
 8012af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012af8:	4802      	ldr	r0, [pc, #8]	; (8012b04 <console_error+0x20>)
 8012afa:	f001 b8df 	b.w	8013cbc <uart0_puts>
 8012afe:	bf00      	nop
 8012b00:	08018064 	stmdaeq	r1, {r2, r5, r6, pc}
 8012b04:	08015903 	stmdaeq	r1, {r0, r1, r8, fp, ip, lr}

08012b08 <console_status>:
 8012b08:	b510      	push	{r4, lr}
 8012b0a:	460c      	mov	r4, r1
 8012b0c:	b280      	uxth	r0, r0
 8012b0e:	f7ff ffc7 	bl	8012aa0 <console_set_fg_color>
 8012b12:	4807      	ldr	r0, [pc, #28]	; (8012b30 <console_status+0x28>)
 8012b14:	f001 f8d2 	bl	8013cbc <uart0_puts>
 8012b18:	4620      	mov	r0, r4
 8012b1a:	f001 f8cf 	bl	8013cbc <uart0_puts>
 8012b1e:	200a      	movs	r0, #10
 8012b20:	f7ff ffb0 	bl	8012a84 <console_putc>
 8012b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b28:	4802      	ldr	r0, [pc, #8]	; (8012b34 <console_status+0x2c>)
 8012b2a:	f001 b8c7 	b.w	8013cbc <uart0_puts>
 8012b2e:	bf00      	nop
 8012b30:	08018058 	stmdaeq	r1, {r3, r4, r6, pc}
 8012b34:	08015903 	stmdaeq	r1, {r0, r1, r8, fp, ip, lr}

08012b38 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8012b38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b3c:	4617      	mov	r7, r2
 8012b3e:	461e      	mov	r6, r3
 8012b40:	4d14      	ldr	r5, [pc, #80]	; (8012b94 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8012b42:	4b15      	ldr	r3, [pc, #84]	; (8012b98 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8012b44:	b086      	sub	sp, #24
 8012b46:	6018      	str	r0, [r3, #0]
 8012b48:	4604      	mov	r4, r0
 8012b4a:	f105 0803 	add.w	r8, r5, #3
 8012b4e:	2203      	movs	r2, #3
 8012b50:	4628      	mov	r0, r5
 8012b52:	f000 fa3e 	bl	8012fd2 <memmove>
 8012b56:	4639      	mov	r1, r7
 8012b58:	220b      	movs	r2, #11
 8012b5a:	4640      	mov	r0, r8
 8012b5c:	f000 fa39 	bl	8012fd2 <memmove>
 8012b60:	f105 030e 	add.w	r3, r5, #14
 8012b64:	4631      	mov	r1, r6
 8012b66:	2208      	movs	r2, #8
 8012b68:	4618      	mov	r0, r3
 8012b6a:	f000 fa32 	bl	8012fd2 <memmove>
 8012b6e:	2308      	movs	r3, #8
 8012b70:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8012b74:	230b      	movs	r3, #11
 8012b76:	9302      	str	r3, [sp, #8]
 8012b78:	4b08      	ldr	r3, [pc, #32]	; (8012b9c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8012b7a:	9005      	str	r0, [sp, #20]
 8012b7c:	e9cd 5300 	strd	r5, r3, [sp]
 8012b80:	213f      	movs	r1, #63	; 0x3f
 8012b82:	2303      	movs	r3, #3
 8012b84:	4a06      	ldr	r2, [pc, #24]	; (8012ba0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8012b86:	4807      	ldr	r0, [pc, #28]	; (8012ba4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8012b88:	f000 fd92 	bl	80136b0 <snprintf>
 8012b8c:	4620      	mov	r0, r4
 8012b8e:	b006      	add	sp, #24
 8012b90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b94:	2001252c 	andcs	r2, r1, ip, lsr #10
 8012b98:	20012584 	andcs	r2, r1, r4, lsl #11
 8012b9c:	080160ca 	stmdaeq	r1, {r1, r3, r6, r7, sp, lr}
 8012ba0:	0801807c 	stmdaeq	r1, {r2, r3, r4, r5, r6, pc}
 8012ba4:	20012542 	andcs	r2, r1, r2, asr #10

08012ba8 <FirmwareVersion::Print(char const*)>:
 8012ba8:	b510      	push	{r4, lr}
 8012baa:	460c      	mov	r4, r1
 8012bac:	4804      	ldr	r0, [pc, #16]	; (8012bc0 <FirmwareVersion::Print(char const*)+0x18>)
 8012bae:	f000 fda7 	bl	8013700 <puts>
 8012bb2:	b124      	cbz	r4, 8012bbe <FirmwareVersion::Print(char const*)+0x16>
 8012bb4:	4620      	mov	r0, r4
 8012bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012bba:	f000 bda1 	b.w	8013700 <puts>
 8012bbe:	bd10      	pop	{r4, pc}
 8012bc0:	20012542 	andcs	r2, r1, r2, asr #10

08012bc4 <LedBlink::LedBlink()>:
 8012bc4:	2200      	movs	r2, #0
 8012bc6:	2105      	movs	r1, #5
 8012bc8:	e9c0 2100 	strd	r2, r1, [r0]
 8012bcc:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8012bd0:	6082      	str	r2, [r0, #8]
 8012bd2:	e9c0 1203 	strd	r1, r2, [r0, #12]
 8012bd6:	6142      	str	r2, [r0, #20]
 8012bd8:	4a01      	ldr	r2, [pc, #4]	; (8012be0 <LedBlink::LedBlink()+0x1c>)
 8012bda:	6010      	str	r0, [r2, #0]
 8012bdc:	4770      	bx	lr
 8012bde:	bf00      	nop
 8012be0:	20012588 	andcs	r2, r1, r8, lsl #11

08012be4 <LedBlink::SetMode(ledblink::Mode)>:
 8012be4:	6843      	ldr	r3, [r0, #4]
 8012be6:	428b      	cmp	r3, r1
 8012be8:	d02f      	beq.n	8012c4a <LedBlink::SetMode(ledblink::Mode)+0x66>
 8012bea:	6041      	str	r1, [r0, #4]
 8012bec:	2904      	cmp	r1, #4
 8012bee:	d822      	bhi.n	8012c36 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8012bf0:	e8df f001 	tbb	[pc, r1]
 8012bf4:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8012bf8:	23ff001d 	mvnscs	r0, #29
 8012bfc:	6003      	str	r3, [r0, #0]
 8012bfe:	2300      	movs	r3, #0
 8012c00:	2201      	movs	r2, #1
 8012c02:	60c3      	str	r3, [r0, #12]
 8012c04:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012c08:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8012c0c:	611a      	str	r2, [r3, #16]
 8012c0e:	6880      	ldr	r0, [r0, #8]
 8012c10:	b1d8      	cbz	r0, 8012c4a <LedBlink::SetMode(ledblink::Mode)+0x66>
 8012c12:	6803      	ldr	r3, [r0, #0]
 8012c14:	689b      	ldr	r3, [r3, #8]
 8012c16:	4718      	bx	r3
 8012c18:	2301      	movs	r3, #1
 8012c1a:	6003      	str	r3, [r0, #0]
 8012c1c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8012c20:	60c3      	str	r3, [r0, #12]
 8012c22:	e7f4      	b.n	8012c0e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8012c24:	2303      	movs	r3, #3
 8012c26:	6003      	str	r3, [r0, #0]
 8012c28:	f240 134d 	movw	r3, #333	; 0x14d
 8012c2c:	e7f8      	b.n	8012c20 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8012c2e:	2305      	movs	r3, #5
 8012c30:	6003      	str	r3, [r0, #0]
 8012c32:	23c8      	movs	r3, #200	; 0xc8
 8012c34:	e7f4      	b.n	8012c20 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8012c36:	2300      	movs	r3, #0
 8012c38:	2201      	movs	r2, #1
 8012c3a:	6003      	str	r3, [r0, #0]
 8012c3c:	60c3      	str	r3, [r0, #12]
 8012c3e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012c42:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8012c46:	615a      	str	r2, [r3, #20]
 8012c48:	e7e1      	b.n	8012c0e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8012c4a:	4770      	bx	lr

08012c4c <Hardware::Hardware()>:
 8012c4c:	b570      	push	{r4, r5, r6, lr}
 8012c4e:	2400      	movs	r4, #0
 8012c50:	4b25      	ldr	r3, [pc, #148]	; (8012ce8 <Hardware::Hardware()+0x9c>)
 8012c52:	4e26      	ldr	r6, [pc, #152]	; (8012cec <Hardware::Hardware()+0xa0>)
 8012c54:	b090      	sub	sp, #64	; 0x40
 8012c56:	4605      	mov	r5, r0
 8012c58:	6004      	str	r4, [r0, #0]
 8012c5a:	7104      	strb	r4, [r0, #4]
 8012c5c:	6018      	str	r0, [r3, #0]
 8012c5e:	f240 6004 	movw	r0, #1540	; 0x604
 8012c62:	f001 fc7c 	bl	801455e <rcu_periph_clock_enable>
 8012c66:	2203      	movs	r2, #3
 8012c68:	2110      	movs	r1, #16
 8012c6a:	4630      	mov	r0, r6
 8012c6c:	2301      	movs	r3, #1
 8012c6e:	f001 fb3f 	bl	80142f0 <gpio_init>
 8012c72:	2301      	movs	r3, #1
 8012c74:	6173      	str	r3, [r6, #20]
 8012c76:	f000 fff1 	bl	8013c5c <uart0_init>
 8012c7a:	f5a6 3680 	sub.w	r6, r6, #65536	; 0x10000
 8012c7e:	f001 f87b 	bl	8013d78 <systick_config>
 8012c82:	f001 f89f 	bl	8013dc4 <udelay_init>
 8012c86:	f001 f829 	bl	8013cdc <micros_init>
 8012c8a:	f240 7004 	movw	r0, #1796	; 0x704
 8012c8e:	f001 fc66 	bl	801455e <rcu_periph_clock_enable>
 8012c92:	4630      	mov	r0, r6
 8012c94:	f001 fdc6 	bl	8014824 <timer_deinit>
 8012c98:	2377      	movs	r3, #119	; 0x77
 8012c9a:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012c9e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012ca2:	a903      	add	r1, sp, #12
 8012ca4:	4630      	mov	r0, r6
 8012ca6:	9305      	str	r3, [sp, #20]
 8012ca8:	f001 fe62 	bl	8014970 <timer_init>
 8012cac:	4630      	mov	r0, r6
 8012cae:	f001 feb7 	bl	8014a20 <timer_enable>
 8012cb2:	f000 fe33 	bl	801391c <gd32_adc_init>
 8012cb6:	221a      	movs	r2, #26
 8012cb8:	230b      	movs	r3, #11
 8012cba:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012cbe:	2379      	movs	r3, #121	; 0x79
 8012cc0:	a807      	add	r0, sp, #28
 8012cc2:	930c      	str	r3, [sp, #48]	; 0x30
 8012cc4:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8012cc8:	9407      	str	r4, [sp, #28]
 8012cca:	940f      	str	r4, [sp, #60]	; 0x3c
 8012ccc:	f000 fd70 	bl	80137b0 <mktime>
 8012cd0:	4621      	mov	r1, r4
 8012cd2:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8012cd6:	a801      	add	r0, sp, #4
 8012cd8:	f000 fdee 	bl	80138b8 <settimeofday>
 8012cdc:	f000 fe7a 	bl	80139d4 <gd32_i2c_begin>
 8012ce0:	4628      	mov	r0, r5
 8012ce2:	b010      	add	sp, #64	; 0x40
 8012ce4:	bd70      	pop	{r4, r5, r6, pc}
 8012ce6:	bf00      	nop
 8012ce8:	2001258c 	andcs	r2, r1, ip, lsl #11
 8012cec:	40011000 	andmi	r1, r1, r0

08012cf0 <Hardware::GetUuid(unsigned char*)>:
 8012cf0:	4a0c      	ldr	r2, [pc, #48]	; (8012d24 <Hardware::GetUuid(unsigned char*)+0x34>)
 8012cf2:	b084      	sub	sp, #16
 8012cf4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8012cf8:	9300      	str	r3, [sp, #0]
 8012cfa:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8012cfe:	9001      	str	r0, [sp, #4]
 8012d00:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8012d04:	4403      	add	r3, r0
 8012d06:	4413      	add	r3, r2
 8012d08:	9202      	str	r2, [sp, #8]
 8012d0a:	466a      	mov	r2, sp
 8012d0c:	9303      	str	r3, [sp, #12]
 8012d0e:	1e4b      	subs	r3, r1, #1
 8012d10:	310f      	adds	r1, #15
 8012d12:	428b      	cmp	r3, r1
 8012d14:	d004      	beq.n	8012d20 <Hardware::GetUuid(unsigned char*)+0x30>
 8012d16:	f812 0b01 	ldrb.w	r0, [r2], #1
 8012d1a:	f803 0f01 	strb.w	r0, [r3, #1]!
 8012d1e:	e7f8      	b.n	8012d12 <Hardware::GetUuid(unsigned char*)+0x22>
 8012d20:	b004      	add	sp, #16
 8012d22:	4770      	bx	lr
 8012d24:	1ffff000 	svcne	0x00fff000

08012d28 <Hardware::Reboot()>:
 8012d28:	b508      	push	{r3, lr}
 8012d2a:	6803      	ldr	r3, [r0, #0]
 8012d2c:	4604      	mov	r4, r0
 8012d2e:	b153      	cbz	r3, 8012d46 <Hardware::Reboot()+0x1e>
 8012d30:	2300      	movs	r3, #0
 8012d32:	2104      	movs	r1, #4
 8012d34:	7103      	strb	r3, [r0, #4]
 8012d36:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012d3a:	f001 faaf 	bl	801429c <fwdgt_config>
 8012d3e:	6820      	ldr	r0, [r4, #0]
 8012d40:	6803      	ldr	r3, [r0, #0]
 8012d42:	689b      	ldr	r3, [r3, #8]
 8012d44:	4798      	blx	r3
 8012d46:	2102      	movs	r1, #2
 8012d48:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012d4c:	f001 faa6 	bl	801429c <fwdgt_config>
 8012d50:	2801      	cmp	r0, #1
 8012d52:	bf0c      	ite	eq
 8012d54:	2301      	moveq	r3, #1
 8012d56:	2300      	movne	r3, #0
 8012d58:	7123      	strb	r3, [r4, #4]
 8012d5a:	d101      	bne.n	8012d60 <Hardware::Reboot()+0x38>
 8012d5c:	f001 fa8e 	bl	801427c <fwdgt_enable>
 8012d60:	2208      	movs	r2, #8
 8012d62:	4b0d      	ldr	r3, [pc, #52]	; (8012d98 <Hardware::Reboot()+0x70>)
 8012d64:	2501      	movs	r5, #1
 8012d66:	681b      	ldr	r3, [r3, #0]
 8012d68:	480c      	ldr	r0, [pc, #48]	; (8012d9c <Hardware::Reboot()+0x74>)
 8012d6a:	601a      	str	r2, [r3, #0]
 8012d6c:	227d      	movs	r2, #125	; 0x7d
 8012d6e:	490c      	ldr	r1, [pc, #48]	; (8012da0 <Hardware::Reboot()+0x78>)
 8012d70:	60da      	str	r2, [r3, #12]
 8012d72:	68dc      	ldr	r4, [r3, #12]
 8012d74:	b904      	cbnz	r4, 8012d78 <Hardware::Reboot()+0x50>
 8012d76:	e7fe      	b.n	8012d76 <Hardware::Reboot()+0x4e>
 8012d78:	6802      	ldr	r2, [r0, #0]
 8012d7a:	695e      	ldr	r6, [r3, #20]
 8012d7c:	1b92      	subs	r2, r2, r6
 8012d7e:	4294      	cmp	r4, r2
 8012d80:	d8f8      	bhi.n	8012d74 <Hardware::Reboot()+0x4c>
 8012d82:	6802      	ldr	r2, [r0, #0]
 8012d84:	615a      	str	r2, [r3, #20]
 8012d86:	691a      	ldr	r2, [r3, #16]
 8012d88:	2a01      	cmp	r2, #1
 8012d8a:	f082 0401 	eor.w	r4, r2, #1
 8012d8e:	611c      	str	r4, [r3, #16]
 8012d90:	bf14      	ite	ne
 8012d92:	610d      	strne	r5, [r1, #16]
 8012d94:	614a      	streq	r2, [r1, #20]
 8012d96:	e7ec      	b.n	8012d72 <Hardware::Reboot()+0x4a>
 8012d98:	20012588 	andcs	r2, r1, r8, lsl #11
 8012d9c:	200125a8 	andcs	r2, r1, r8, lsr #11
 8012da0:	40011000 	andmi	r1, r1, r0

08012da4 <operator delete(void*)>:
 8012da4:	f000 b8d4 	b.w	8012f50 <free>

08012da8 <operator delete[](void*)>:
 8012da8:	f000 b8d2 	b.w	8012f50 <free>

08012dac <operator new(unsigned int)>:
 8012dac:	f000 b858 	b.w	8012e60 <malloc>

08012db0 <operator new[](unsigned int)>:
 8012db0:	f000 b856 	b.w	8012e60 <malloc>

08012db4 <__assert_func>:
 8012db4:	460c      	mov	r4, r1
 8012db6:	b507      	push	{r0, r1, r2, lr}
 8012db8:	4619      	mov	r1, r3
 8012dba:	b142      	cbz	r2, 8012dce <__assert_func+0x1a>
 8012dbc:	4b05      	ldr	r3, [pc, #20]	; (8012dd4 <__assert_func+0x20>)
 8012dbe:	e9cd 3200 	strd	r3, r2, [sp]
 8012dc2:	4602      	mov	r2, r0
 8012dc4:	4623      	mov	r3, r4
 8012dc6:	4804      	ldr	r0, [pc, #16]	; (8012dd8 <__assert_func+0x24>)
 8012dc8:	f000 fc4a 	bl	8013660 <printf>
 8012dcc:	e7fe      	b.n	8012dcc <__assert_func+0x18>
 8012dce:	4b03      	ldr	r3, [pc, #12]	; (8012ddc <__assert_func+0x28>)
 8012dd0:	461a      	mov	r2, r3
 8012dd2:	e7f4      	b.n	8012dbe <__assert_func+0xa>
 8012dd4:	080180a0 	stmdaeq	r1, {r5, r7, pc}
 8012dd8:	080180ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, pc}
 8012ddc:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}

08012de0 <inet_aton>:
 8012de0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012de2:	f04f 0c0a 	mov.w	ip, #10
 8012de6:	2500      	movs	r5, #0
 8012de8:	ae01      	add	r6, sp, #4
 8012dea:	4603      	mov	r3, r0
 8012dec:	2200      	movs	r2, #0
 8012dee:	1d07      	adds	r7, r0, #4
 8012df0:	e007      	b.n	8012e02 <inet_aton+0x22>
 8012df2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012df6:	2b09      	cmp	r3, #9
 8012df8:	d820      	bhi.n	8012e3c <inet_aton+0x5c>
 8012dfa:	4603      	mov	r3, r0
 8012dfc:	fb0c 4202 	mla	r2, ip, r2, r4
 8012e00:	3a30      	subs	r2, #48	; 0x30
 8012e02:	4618      	mov	r0, r3
 8012e04:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012e08:	2c2e      	cmp	r4, #46	; 0x2e
 8012e0a:	d111      	bne.n	8012e30 <inet_aton+0x50>
 8012e0c:	3501      	adds	r5, #1
 8012e0e:	2d03      	cmp	r5, #3
 8012e10:	f806 2b01 	strb.w	r2, [r6], #1
 8012e14:	d1e9      	bne.n	8012dea <inet_aton+0xa>
 8012e16:	2200      	movs	r2, #0
 8012e18:	250a      	movs	r5, #10
 8012e1a:	1d1c      	adds	r4, r3, #4
 8012e1c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012e20:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8012e24:	d10d      	bne.n	8012e42 <inet_aton+0x62>
 8012e26:	f88d 2007 	strb.w	r2, [sp, #7]
 8012e2a:	b9b1      	cbnz	r1, 8012e5a <inet_aton+0x7a>
 8012e2c:	2001      	movs	r0, #1
 8012e2e:	e006      	b.n	8012e3e <inet_aton+0x5e>
 8012e30:	2c00      	cmp	r4, #0
 8012e32:	d0eb      	beq.n	8012e0c <inet_aton+0x2c>
 8012e34:	2c0a      	cmp	r4, #10
 8012e36:	d0e9      	beq.n	8012e0c <inet_aton+0x2c>
 8012e38:	42b8      	cmp	r0, r7
 8012e3a:	d1da      	bne.n	8012df2 <inet_aton+0x12>
 8012e3c:	2000      	movs	r0, #0
 8012e3e:	b003      	add	sp, #12
 8012e40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e42:	280a      	cmp	r0, #10
 8012e44:	d0ef      	beq.n	8012e26 <inet_aton+0x46>
 8012e46:	42a3      	cmp	r3, r4
 8012e48:	d0f8      	beq.n	8012e3c <inet_aton+0x5c>
 8012e4a:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8012e4e:	2e09      	cmp	r6, #9
 8012e50:	d8f4      	bhi.n	8012e3c <inet_aton+0x5c>
 8012e52:	fb05 0202 	mla	r2, r5, r2, r0
 8012e56:	3a30      	subs	r2, #48	; 0x30
 8012e58:	e7e0      	b.n	8012e1c <inet_aton+0x3c>
 8012e5a:	9b01      	ldr	r3, [sp, #4]
 8012e5c:	600b      	str	r3, [r1, #0]
 8012e5e:	e7e5      	b.n	8012e2c <inet_aton+0x4c>

08012e60 <malloc>:
 8012e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012e62:	4604      	mov	r4, r0
 8012e64:	4601      	mov	r1, r0
 8012e66:	482d      	ldr	r0, [pc, #180]	; (8012f1c <malloc+0xbc>)
 8012e68:	f000 fbfa 	bl	8013660 <printf>
 8012e6c:	b1fc      	cbz	r4, 8012eae <malloc+0x4e>
 8012e6e:	4e2c      	ldr	r6, [pc, #176]	; (8012f20 <malloc+0xc0>)
 8012e70:	6837      	ldr	r7, [r6, #0]
 8012e72:	b9ff      	cbnz	r7, 8012eb4 <malloc+0x54>
 8012e74:	4f2b      	ldr	r7, [pc, #172]	; (8012f24 <malloc+0xc4>)
 8012e76:	f104 061b 	add.w	r6, r4, #27
 8012e7a:	683d      	ldr	r5, [r7, #0]
 8012e7c:	f026 060f 	bic.w	r6, r6, #15
 8012e80:	07a9      	lsls	r1, r5, #30
 8012e82:	442e      	add	r6, r5
 8012e84:	d005      	beq.n	8012e92 <malloc+0x32>
 8012e86:	2177      	movs	r1, #119	; 0x77
 8012e88:	4b27      	ldr	r3, [pc, #156]	; (8012f28 <malloc+0xc8>)
 8012e8a:	4a28      	ldr	r2, [pc, #160]	; (8012f2c <malloc+0xcc>)
 8012e8c:	4828      	ldr	r0, [pc, #160]	; (8012f30 <malloc+0xd0>)
 8012e8e:	f7ff ff91 	bl	8012db4 <__assert_func>
 8012e92:	07b2      	lsls	r2, r6, #30
 8012e94:	d005      	beq.n	8012ea2 <malloc+0x42>
 8012e96:	2178      	movs	r1, #120	; 0x78
 8012e98:	4b26      	ldr	r3, [pc, #152]	; (8012f34 <malloc+0xd4>)
 8012e9a:	4a24      	ldr	r2, [pc, #144]	; (8012f2c <malloc+0xcc>)
 8012e9c:	4824      	ldr	r0, [pc, #144]	; (8012f30 <malloc+0xd0>)
 8012e9e:	f7ff ff89 	bl	8012db4 <__assert_func>
 8012ea2:	4b25      	ldr	r3, [pc, #148]	; (8012f38 <malloc+0xd8>)
 8012ea4:	429e      	cmp	r6, r3
 8012ea6:	d934      	bls.n	8012f12 <malloc+0xb2>
 8012ea8:	4824      	ldr	r0, [pc, #144]	; (8012f3c <malloc+0xdc>)
 8012eaa:	f000 fbd9 	bl	8013660 <printf>
 8012eae:	2600      	movs	r6, #0
 8012eb0:	4630      	mov	r0, r6
 8012eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012eb4:	42bc      	cmp	r4, r7
 8012eb6:	d80a      	bhi.n	8012ece <malloc+0x6e>
 8012eb8:	6873      	ldr	r3, [r6, #4]
 8012eba:	68b2      	ldr	r2, [r6, #8]
 8012ebc:	3301      	adds	r3, #1
 8012ebe:	4293      	cmp	r3, r2
 8012ec0:	6073      	str	r3, [r6, #4]
 8012ec2:	d900      	bls.n	8012ec6 <malloc+0x66>
 8012ec4:	60b3      	str	r3, [r6, #8]
 8012ec6:	68f5      	ldr	r5, [r6, #12]
 8012ec8:	b91d      	cbnz	r5, 8012ed2 <malloc+0x72>
 8012eca:	463c      	mov	r4, r7
 8012ecc:	e7d2      	b.n	8012e74 <malloc+0x14>
 8012ece:	3610      	adds	r6, #16
 8012ed0:	e7ce      	b.n	8012e70 <malloc+0x10>
 8012ed2:	682a      	ldr	r2, [r5, #0]
 8012ed4:	4b1a      	ldr	r3, [pc, #104]	; (8012f40 <malloc+0xe0>)
 8012ed6:	429a      	cmp	r2, r3
 8012ed8:	d005      	beq.n	8012ee6 <malloc+0x86>
 8012eda:	216d      	movs	r1, #109	; 0x6d
 8012edc:	4b19      	ldr	r3, [pc, #100]	; (8012f44 <malloc+0xe4>)
 8012ede:	4a13      	ldr	r2, [pc, #76]	; (8012f2c <malloc+0xcc>)
 8012ee0:	4813      	ldr	r0, [pc, #76]	; (8012f30 <malloc+0xd0>)
 8012ee2:	f7ff ff67 	bl	8012db4 <__assert_func>
 8012ee6:	463c      	mov	r4, r7
 8012ee8:	68ab      	ldr	r3, [r5, #8]
 8012eea:	60f3      	str	r3, [r6, #12]
 8012eec:	2300      	movs	r3, #0
 8012eee:	f105 060c 	add.w	r6, r5, #12
 8012ef2:	60ab      	str	r3, [r5, #8]
 8012ef4:	4622      	mov	r2, r4
 8012ef6:	4633      	mov	r3, r6
 8012ef8:	4629      	mov	r1, r5
 8012efa:	4813      	ldr	r0, [pc, #76]	; (8012f48 <malloc+0xe8>)
 8012efc:	f000 fbb0 	bl	8013660 <printf>
 8012f00:	07b3      	lsls	r3, r6, #30
 8012f02:	d0d5      	beq.n	8012eb0 <malloc+0x50>
 8012f04:	218c      	movs	r1, #140	; 0x8c
 8012f06:	4b11      	ldr	r3, [pc, #68]	; (8012f4c <malloc+0xec>)
 8012f08:	4a08      	ldr	r2, [pc, #32]	; (8012f2c <malloc+0xcc>)
 8012f0a:	4809      	ldr	r0, [pc, #36]	; (8012f30 <malloc+0xd0>)
 8012f0c:	f7ff ff52 	bl	8012db4 <__assert_func>
 8012f10:	e7ce      	b.n	8012eb0 <malloc+0x50>
 8012f12:	4b0b      	ldr	r3, [pc, #44]	; (8012f40 <malloc+0xe0>)
 8012f14:	603e      	str	r6, [r7, #0]
 8012f16:	e9c5 3400 	strd	r3, r4, [r5]
 8012f1a:	e7e7      	b.n	8012eec <malloc+0x8c>
 8012f1c:	0801810c 	stmdaeq	r1, {r2, r3, r8, pc}
 8012f20:	20000014 	andcs	r0, r0, r4, lsl r0
 8012f24:	20000010 	andcs	r0, r0, r0, lsl r0
 8012f28:	08018135 	stmdaeq	r1, {r0, r2, r4, r5, r8, pc}
 8012f2c:	0801821d 	stmdaeq	r1, {r0, r2, r3, r4, r9, pc}
 8012f30:	080180ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, pc}
 8012f34:	0801815b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, pc}
 8012f38:	20019a34 	andcs	r9, r1, r4, lsr sl
 8012f3c:	0801817f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, pc}
 8012f40:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8012f44:	08018118 	stmdaeq	r1, {r3, r4, r8, pc}
 8012f48:	0801819b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, pc}
 8012f4c:	080181c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, pc}

08012f50 <free>:
 8012f50:	b570      	push	{r4, r5, r6, lr}
 8012f52:	4604      	mov	r4, r0
 8012f54:	b328      	cbz	r0, 8012fa2 <free+0x52>
 8012f56:	f1a0 050c 	sub.w	r5, r0, #12
 8012f5a:	4602      	mov	r2, r0
 8012f5c:	4629      	mov	r1, r5
 8012f5e:	4811      	ldr	r0, [pc, #68]	; (8012fa4 <free+0x54>)
 8012f60:	f000 fb7e 	bl	8013660 <printf>
 8012f64:	4e10      	ldr	r6, [pc, #64]	; (8012fa8 <free+0x58>)
 8012f66:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8012f6a:	42b3      	cmp	r3, r6
 8012f6c:	d009      	beq.n	8012f82 <free+0x32>
 8012f6e:	4b0f      	ldr	r3, [pc, #60]	; (8012fac <free+0x5c>)
 8012f70:	219d      	movs	r1, #157	; 0x9d
 8012f72:	4a0f      	ldr	r2, [pc, #60]	; (8012fb0 <free+0x60>)
 8012f74:	480f      	ldr	r0, [pc, #60]	; (8012fb4 <free+0x64>)
 8012f76:	f7ff ff1d 	bl	8012db4 <__assert_func>
 8012f7a:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 8012f7e:	42b3      	cmp	r3, r6
 8012f80:	d10f      	bne.n	8012fa2 <free+0x52>
 8012f82:	4b0d      	ldr	r3, [pc, #52]	; (8012fb8 <free+0x68>)
 8012f84:	e000      	b.n	8012f88 <free+0x38>
 8012f86:	3310      	adds	r3, #16
 8012f88:	681a      	ldr	r2, [r3, #0]
 8012f8a:	b152      	cbz	r2, 8012fa2 <free+0x52>
 8012f8c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012f90:	4291      	cmp	r1, r2
 8012f92:	d1f8      	bne.n	8012f86 <free+0x36>
 8012f94:	68da      	ldr	r2, [r3, #12]
 8012f96:	f844 2c04 	str.w	r2, [r4, #-4]
 8012f9a:	685a      	ldr	r2, [r3, #4]
 8012f9c:	60dd      	str	r5, [r3, #12]
 8012f9e:	3a01      	subs	r2, #1
 8012fa0:	605a      	str	r2, [r3, #4]
 8012fa2:	bd70      	pop	{r4, r5, r6, pc}
 8012fa4:	080181f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, pc}
 8012fa8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8012fac:	08018118 	stmdaeq	r1, {r3, r4, r8, pc}
 8012fb0:	08018218 	stmdaeq	r1, {r3, r4, r9, pc}
 8012fb4:	080180ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, pc}
 8012fb8:	20000014 	andcs	r0, r0, r4, lsl r0

08012fbc <memcpy>:
 8012fbc:	b510      	push	{r4, lr}
 8012fbe:	1e43      	subs	r3, r0, #1
 8012fc0:	440a      	add	r2, r1
 8012fc2:	4291      	cmp	r1, r2
 8012fc4:	d100      	bne.n	8012fc8 <memcpy+0xc>
 8012fc6:	bd10      	pop	{r4, pc}
 8012fc8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012fcc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012fd0:	e7f7      	b.n	8012fc2 <memcpy+0x6>

08012fd2 <memmove>:
 8012fd2:	4288      	cmp	r0, r1
 8012fd4:	b510      	push	{r4, lr}
 8012fd6:	eb01 0302 	add.w	r3, r1, r2
 8012fda:	d208      	bcs.n	8012fee <memmove+0x1c>
 8012fdc:	1e42      	subs	r2, r0, #1
 8012fde:	4299      	cmp	r1, r3
 8012fe0:	d100      	bne.n	8012fe4 <memmove+0x12>
 8012fe2:	bd10      	pop	{r4, pc}
 8012fe4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012fe8:	f802 4f01 	strb.w	r4, [r2, #1]!
 8012fec:	e7f7      	b.n	8012fde <memmove+0xc>
 8012fee:	4601      	mov	r1, r0
 8012ff0:	4402      	add	r2, r0
 8012ff2:	428a      	cmp	r2, r1
 8012ff4:	d0f5      	beq.n	8012fe2 <memmove+0x10>
 8012ff6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012ffa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012ffe:	e7f8      	b.n	8012ff2 <memmove+0x20>

08013000 <memset>:
 8013000:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013002:	b1e2      	cbz	r2, 801303e <memset+0x3e>
 8013004:	4603      	mov	r3, r0
 8013006:	b2c9      	uxtb	r1, r1
 8013008:	075c      	lsls	r4, r3, #29
 801300a:	d114      	bne.n	8013036 <memset+0x36>
 801300c:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8013010:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8013014:	463d      	mov	r5, r7
 8013016:	f022 0407 	bic.w	r4, r2, #7
 801301a:	08d6      	lsrs	r6, r2, #3
 801301c:	441c      	add	r4, r3
 801301e:	42a3      	cmp	r3, r4
 8013020:	d10e      	bne.n	8013040 <memset+0x40>
 8013022:	f06f 0307 	mvn.w	r3, #7
 8013026:	fb03 2206 	mla	r2, r3, r6, r2
 801302a:	4422      	add	r2, r4
 801302c:	4294      	cmp	r4, r2
 801302e:	d006      	beq.n	801303e <memset+0x3e>
 8013030:	f804 1b01 	strb.w	r1, [r4], #1
 8013034:	e7fa      	b.n	801302c <memset+0x2c>
 8013036:	3a01      	subs	r2, #1
 8013038:	f803 1b01 	strb.w	r1, [r3], #1
 801303c:	d1e4      	bne.n	8013008 <memset+0x8>
 801303e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013040:	f843 7b08 	str.w	r7, [r3], #8
 8013044:	f843 5c04 	str.w	r5, [r3, #-4]
 8013048:	e7e9      	b.n	801301e <memset+0x1e>

0801304a <_itostr>:
 801304a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801304c:	0fc7      	lsrs	r7, r0, #31
 801304e:	b091      	sub	sp, #68	; 0x44
 8013050:	bf18      	it	ne
 8013052:	4240      	negne	r0, r0
 8013054:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8013058:	b9c8      	cbnz	r0, 801308e <_itostr+0x44>
 801305a:	2330      	movs	r3, #48	; 0x30
 801305c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8013060:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8013064:	b132      	cbz	r2, 8013074 <_itostr+0x2a>
 8013066:	4668      	mov	r0, sp
 8013068:	2530      	movs	r5, #48	; 0x30
 801306a:	1ae6      	subs	r6, r4, r3
 801306c:	4296      	cmp	r6, r2
 801306e:	da01      	bge.n	8013074 <_itostr+0x2a>
 8013070:	4283      	cmp	r3, r0
 8013072:	d81c      	bhi.n	80130ae <_itostr+0x64>
 8013074:	b117      	cbz	r7, 801307c <_itostr+0x32>
 8013076:	222d      	movs	r2, #45	; 0x2d
 8013078:	f803 2901 	strb.w	r2, [r3], #-1
 801307c:	3301      	adds	r3, #1
 801307e:	1ae0      	subs	r0, r4, r3
 8013080:	3901      	subs	r1, #1
 8013082:	aa10      	add	r2, sp, #64	; 0x40
 8013084:	4293      	cmp	r3, r2
 8013086:	d315      	bcc.n	80130b4 <_itostr+0x6a>
 8013088:	3001      	adds	r0, #1
 801308a:	b011      	add	sp, #68	; 0x44
 801308c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801308e:	4623      	mov	r3, r4
 8013090:	250a      	movs	r5, #10
 8013092:	46ec      	mov	ip, sp
 8013094:	fb90 f6f5 	sdiv	r6, r0, r5
 8013098:	fb05 0016 	mls	r0, r5, r6, r0
 801309c:	3030      	adds	r0, #48	; 0x30
 801309e:	f803 0901 	strb.w	r0, [r3], #-1
 80130a2:	4630      	mov	r0, r6
 80130a4:	2e00      	cmp	r6, #0
 80130a6:	d0dd      	beq.n	8013064 <_itostr+0x1a>
 80130a8:	4563      	cmp	r3, ip
 80130aa:	d1f3      	bne.n	8013094 <_itostr+0x4a>
 80130ac:	e7da      	b.n	8013064 <_itostr+0x1a>
 80130ae:	f803 5901 	strb.w	r5, [r3], #-1
 80130b2:	e7da      	b.n	801306a <_itostr+0x20>
 80130b4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80130b8:	f801 2f01 	strb.w	r2, [r1, #1]!
 80130bc:	e7e1      	b.n	8013082 <_itostr+0x38>
	...

080130c0 <_xputch>:
 80130c0:	4603      	mov	r3, r0
 80130c2:	b410      	push	{r4}
 80130c4:	4c08      	ldr	r4, [pc, #32]	; (80130e8 <_xputch+0x28>)
 80130c6:	68da      	ldr	r2, [r3, #12]
 80130c8:	4608      	mov	r0, r1
 80130ca:	6821      	ldr	r1, [r4, #0]
 80130cc:	3201      	adds	r2, #1
 80130ce:	60da      	str	r2, [r3, #12]
 80130d0:	b139      	cbz	r1, 80130e2 <_xputch+0x22>
 80130d2:	691b      	ldr	r3, [r3, #16]
 80130d4:	429a      	cmp	r2, r3
 80130d6:	da02      	bge.n	80130de <_xputch+0x1e>
 80130d8:	1c4b      	adds	r3, r1, #1
 80130da:	6023      	str	r3, [r4, #0]
 80130dc:	7008      	strb	r0, [r1, #0]
 80130de:	bc10      	pop	{r4}
 80130e0:	4770      	bx	lr
 80130e2:	bc10      	pop	{r4}
 80130e4:	f7ff bcce 	b.w	8012a84 <console_putc>
 80130e8:	20012590 	mulcs	r1, r0, r5

080130ec <_format_int>:
 80130ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130f0:	461f      	mov	r7, r3
 80130f2:	b091      	sub	sp, #68	; 0x44
 80130f4:	ea52 0307 	orrs.w	r3, r2, r7
 80130f8:	4680      	mov	r8, r0
 80130fa:	4616      	mov	r6, r2
 80130fc:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8013100:	d138      	bne.n	8013174 <_format_int+0x88>
 8013102:	2330      	movs	r3, #48	; 0x30
 8013104:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8013108:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 801310c:	f8d8 3000 	ldr.w	r3, [r8]
 8013110:	07d8      	lsls	r0, r3, #31
 8013112:	d508      	bpl.n	8013126 <_format_int+0x3a>
 8013114:	466a      	mov	r2, sp
 8013116:	2030      	movs	r0, #48	; 0x30
 8013118:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801311c:	1b2e      	subs	r6, r5, r4
 801311e:	428e      	cmp	r6, r1
 8013120:	da01      	bge.n	8013126 <_format_int+0x3a>
 8013122:	4294      	cmp	r4, r2
 8013124:	d843      	bhi.n	80131ae <_format_int+0xc2>
 8013126:	0699      	lsls	r1, r3, #26
 8013128:	d508      	bpl.n	801313c <_format_int+0x50>
 801312a:	466a      	mov	r2, sp
 801312c:	2030      	movs	r0, #48	; 0x30
 801312e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013132:	1b2e      	subs	r6, r5, r4
 8013134:	428e      	cmp	r6, r1
 8013136:	da01      	bge.n	801313c <_format_int+0x50>
 8013138:	4294      	cmp	r4, r2
 801313a:	d83b      	bhi.n	80131b4 <_format_int+0xc8>
 801313c:	071a      	lsls	r2, r3, #28
 801313e:	bf44      	itt	mi
 8013140:	222d      	movmi	r2, #45	; 0x2d
 8013142:	f804 2901 	strbmi.w	r2, [r4], #-1
 8013146:	065b      	lsls	r3, r3, #25
 8013148:	d408      	bmi.n	801315c <_format_int+0x70>
 801314a:	466b      	mov	r3, sp
 801314c:	2120      	movs	r1, #32
 801314e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8013152:	1b28      	subs	r0, r5, r4
 8013154:	4290      	cmp	r0, r2
 8013156:	da01      	bge.n	801315c <_format_int+0x70>
 8013158:	429c      	cmp	r4, r3
 801315a:	d82e      	bhi.n	80131ba <_format_int+0xce>
 801315c:	1b2d      	subs	r5, r5, r4
 801315e:	3401      	adds	r4, #1
 8013160:	ab10      	add	r3, sp, #64	; 0x40
 8013162:	429c      	cmp	r4, r3
 8013164:	d32c      	bcc.n	80131c0 <_format_int+0xd4>
 8013166:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801316a:	42ab      	cmp	r3, r5
 801316c:	dc2e      	bgt.n	80131cc <_format_int+0xe0>
 801316e:	b011      	add	sp, #68	; 0x44
 8013170:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013174:	462c      	mov	r4, r5
 8013176:	46eb      	mov	fp, sp
 8013178:	4630      	mov	r0, r6
 801317a:	4639      	mov	r1, r7
 801317c:	220a      	movs	r2, #10
 801317e:	2300      	movs	r3, #0
 8013180:	f7f4 fd18 	bl	8007bb4 <__aeabi_uldivmod>
 8013184:	46b2      	mov	sl, r6
 8013186:	3230      	adds	r2, #48	; 0x30
 8013188:	46b9      	mov	r9, r7
 801318a:	2300      	movs	r3, #0
 801318c:	4630      	mov	r0, r6
 801318e:	4639      	mov	r1, r7
 8013190:	f804 2901 	strb.w	r2, [r4], #-1
 8013194:	220a      	movs	r2, #10
 8013196:	f7f4 fd0d 	bl	8007bb4 <__aeabi_uldivmod>
 801319a:	f1ba 0f0a 	cmp.w	sl, #10
 801319e:	f179 0300 	sbcs.w	r3, r9, #0
 80131a2:	4606      	mov	r6, r0
 80131a4:	460f      	mov	r7, r1
 80131a6:	d3b1      	bcc.n	801310c <_format_int+0x20>
 80131a8:	455c      	cmp	r4, fp
 80131aa:	d1e5      	bne.n	8013178 <_format_int+0x8c>
 80131ac:	e7ae      	b.n	801310c <_format_int+0x20>
 80131ae:	f804 0901 	strb.w	r0, [r4], #-1
 80131b2:	e7b3      	b.n	801311c <_format_int+0x30>
 80131b4:	f804 0901 	strb.w	r0, [r4], #-1
 80131b8:	e7bb      	b.n	8013132 <_format_int+0x46>
 80131ba:	f804 1901 	strb.w	r1, [r4], #-1
 80131be:	e7c8      	b.n	8013152 <_format_int+0x66>
 80131c0:	4640      	mov	r0, r8
 80131c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80131c6:	f7ff ff7b 	bl	80130c0 <_xputch>
 80131ca:	e7c9      	b.n	8013160 <_format_int+0x74>
 80131cc:	2120      	movs	r1, #32
 80131ce:	4640      	mov	r0, r8
 80131d0:	f7ff ff76 	bl	80130c0 <_xputch>
 80131d4:	3501      	adds	r5, #1
 80131d6:	e7c6      	b.n	8013166 <_format_int+0x7a>

080131d8 <_format_hex>:
 80131d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80131da:	b091      	sub	sp, #68	; 0x44
 80131dc:	4606      	mov	r6, r0
 80131de:	6804      	ldr	r4, [r0, #0]
 80131e0:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80131e4:	bb61      	cbnz	r1, 8013240 <_format_hex+0x68>
 80131e6:	2330      	movs	r3, #48	; 0x30
 80131e8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80131ec:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80131f0:	07e5      	lsls	r5, r4, #31
 80131f2:	d507      	bpl.n	8013204 <_format_hex+0x2c>
 80131f4:	4669      	mov	r1, sp
 80131f6:	2530      	movs	r5, #48	; 0x30
 80131f8:	6870      	ldr	r0, [r6, #4]
 80131fa:	1ad7      	subs	r7, r2, r3
 80131fc:	4287      	cmp	r7, r0
 80131fe:	da01      	bge.n	8013204 <_format_hex+0x2c>
 8013200:	428b      	cmp	r3, r1
 8013202:	d831      	bhi.n	8013268 <_format_hex+0x90>
 8013204:	06a0      	lsls	r0, r4, #26
 8013206:	d507      	bpl.n	8013218 <_format_hex+0x40>
 8013208:	4669      	mov	r1, sp
 801320a:	2530      	movs	r5, #48	; 0x30
 801320c:	68b0      	ldr	r0, [r6, #8]
 801320e:	1ad7      	subs	r7, r2, r3
 8013210:	4287      	cmp	r7, r0
 8013212:	da01      	bge.n	8013218 <_format_hex+0x40>
 8013214:	428b      	cmp	r3, r1
 8013216:	d82a      	bhi.n	801326e <_format_hex+0x96>
 8013218:	0661      	lsls	r1, r4, #25
 801321a:	d407      	bmi.n	801322c <_format_hex+0x54>
 801321c:	4669      	mov	r1, sp
 801321e:	2420      	movs	r4, #32
 8013220:	68b0      	ldr	r0, [r6, #8]
 8013222:	1ad5      	subs	r5, r2, r3
 8013224:	4285      	cmp	r5, r0
 8013226:	da01      	bge.n	801322c <_format_hex+0x54>
 8013228:	428b      	cmp	r3, r1
 801322a:	d823      	bhi.n	8013274 <_format_hex+0x9c>
 801322c:	1ad5      	subs	r5, r2, r3
 801322e:	1c5c      	adds	r4, r3, #1
 8013230:	ab10      	add	r3, sp, #64	; 0x40
 8013232:	429c      	cmp	r4, r3
 8013234:	d321      	bcc.n	801327a <_format_hex+0xa2>
 8013236:	68b3      	ldr	r3, [r6, #8]
 8013238:	429d      	cmp	r5, r3
 801323a:	db24      	blt.n	8013286 <_format_hex+0xae>
 801323c:	b011      	add	sp, #68	; 0x44
 801323e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013240:	f014 0f02 	tst.w	r4, #2
 8013244:	bf0c      	ite	eq
 8013246:	2757      	moveq	r7, #87	; 0x57
 8013248:	2737      	movne	r7, #55	; 0x37
 801324a:	4613      	mov	r3, r2
 801324c:	466d      	mov	r5, sp
 801324e:	f001 000f 	and.w	r0, r1, #15
 8013252:	2809      	cmp	r0, #9
 8013254:	bf94      	ite	ls
 8013256:	3030      	addls	r0, #48	; 0x30
 8013258:	19c0      	addhi	r0, r0, r7
 801325a:	0909      	lsrs	r1, r1, #4
 801325c:	f803 0901 	strb.w	r0, [r3], #-1
 8013260:	d0c6      	beq.n	80131f0 <_format_hex+0x18>
 8013262:	42ab      	cmp	r3, r5
 8013264:	d1f3      	bne.n	801324e <_format_hex+0x76>
 8013266:	e7c3      	b.n	80131f0 <_format_hex+0x18>
 8013268:	f803 5901 	strb.w	r5, [r3], #-1
 801326c:	e7c5      	b.n	80131fa <_format_hex+0x22>
 801326e:	f803 5901 	strb.w	r5, [r3], #-1
 8013272:	e7cc      	b.n	801320e <_format_hex+0x36>
 8013274:	f803 4901 	strb.w	r4, [r3], #-1
 8013278:	e7d3      	b.n	8013222 <_format_hex+0x4a>
 801327a:	4630      	mov	r0, r6
 801327c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013280:	f7ff ff1e 	bl	80130c0 <_xputch>
 8013284:	e7d4      	b.n	8013230 <_format_hex+0x58>
 8013286:	2120      	movs	r1, #32
 8013288:	4630      	mov	r0, r6
 801328a:	f7ff ff19 	bl	80130c0 <_xputch>
 801328e:	3501      	adds	r5, #1
 8013290:	e7d1      	b.n	8013236 <_format_hex+0x5e>
	...

08013294 <_vprintf>:
 8013294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013298:	4614      	mov	r4, r2
 801329a:	2200      	movs	r2, #0
 801329c:	460b      	mov	r3, r1
 801329e:	2700      	movs	r7, #0
 80132a0:	b099      	sub	sp, #100	; 0x64
 80132a2:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80132a6:	ae08      	add	r6, sp, #32
 80132a8:	7819      	ldrb	r1, [r3, #0]
 80132aa:	b919      	cbnz	r1, 80132b4 <_vprintf+0x20>
 80132ac:	9806      	ldr	r0, [sp, #24]
 80132ae:	b019      	add	sp, #100	; 0x64
 80132b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132b4:	2925      	cmp	r1, #37	; 0x25
 80132b6:	f103 0501 	add.w	r5, r3, #1
 80132ba:	d004      	beq.n	80132c6 <_vprintf+0x32>
 80132bc:	a803      	add	r0, sp, #12
 80132be:	f7ff feff 	bl	80130c0 <_xputch>
 80132c2:	462b      	mov	r3, r5
 80132c4:	e7f0      	b.n	80132a8 <_vprintf+0x14>
 80132c6:	2200      	movs	r2, #0
 80132c8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80132cc:	9205      	str	r2, [sp, #20]
 80132ce:	785a      	ldrb	r2, [r3, #1]
 80132d0:	2a30      	cmp	r2, #48	; 0x30
 80132d2:	d12b      	bne.n	801332c <_vprintf+0x98>
 80132d4:	2220      	movs	r2, #32
 80132d6:	9203      	str	r2, [sp, #12]
 80132d8:	1c9d      	adds	r5, r3, #2
 80132da:	2200      	movs	r2, #0
 80132dc:	46ac      	mov	ip, r5
 80132de:	4613      	mov	r3, r2
 80132e0:	f04f 0e0a 	mov.w	lr, #10
 80132e4:	f89c 1000 	ldrb.w	r1, [ip]
 80132e8:	4665      	mov	r5, ip
 80132ea:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80132ee:	2809      	cmp	r0, #9
 80132f0:	f10c 0c01 	add.w	ip, ip, #1
 80132f4:	d91e      	bls.n	8013334 <_vprintf+0xa0>
 80132f6:	b12a      	cbz	r2, 8013304 <_vprintf+0x70>
 80132f8:	9305      	str	r3, [sp, #20]
 80132fa:	b11b      	cbz	r3, 8013304 <_vprintf+0x70>
 80132fc:	9b03      	ldr	r3, [sp, #12]
 80132fe:	f043 0310 	orr.w	r3, r3, #16
 8013302:	9303      	str	r3, [sp, #12]
 8013304:	292e      	cmp	r1, #46	; 0x2e
 8013306:	d124      	bne.n	8013352 <_vprintf+0xbe>
 8013308:	786b      	ldrb	r3, [r5, #1]
 801330a:	2b2a      	cmp	r3, #42	; 0x2a
 801330c:	d016      	beq.n	801333c <_vprintf+0xa8>
 801330e:	2100      	movs	r1, #0
 8013310:	f04f 0c0a 	mov.w	ip, #10
 8013314:	460a      	mov	r2, r1
 8013316:	1c68      	adds	r0, r5, #1
 8013318:	7803      	ldrb	r3, [r0, #0]
 801331a:	4605      	mov	r5, r0
 801331c:	3b30      	subs	r3, #48	; 0x30
 801331e:	2b09      	cmp	r3, #9
 8013320:	f100 0001 	add.w	r0, r0, #1
 8013324:	d958      	bls.n	80133d8 <_vprintf+0x144>
 8013326:	b181      	cbz	r1, 801334a <_vprintf+0xb6>
 8013328:	9204      	str	r2, [sp, #16]
 801332a:	e00e      	b.n	801334a <_vprintf+0xb6>
 801332c:	2a2d      	cmp	r2, #45	; 0x2d
 801332e:	d1d4      	bne.n	80132da <_vprintf+0x46>
 8013330:	2240      	movs	r2, #64	; 0x40
 8013332:	e7d0      	b.n	80132d6 <_vprintf+0x42>
 8013334:	2201      	movs	r2, #1
 8013336:	fb0e 0303 	mla	r3, lr, r3, r0
 801333a:	e7d3      	b.n	80132e4 <_vprintf+0x50>
 801333c:	f854 3b04 	ldr.w	r3, [r4], #4
 8013340:	3502      	adds	r5, #2
 8013342:	2b00      	cmp	r3, #0
 8013344:	bfb8      	it	lt
 8013346:	425b      	neglt	r3, r3
 8013348:	9304      	str	r3, [sp, #16]
 801334a:	9b03      	ldr	r3, [sp, #12]
 801334c:	f043 0301 	orr.w	r3, r3, #1
 8013350:	9303      	str	r3, [sp, #12]
 8013352:	782b      	ldrb	r3, [r5, #0]
 8013354:	2b6c      	cmp	r3, #108	; 0x6c
 8013356:	bf04      	itt	eq
 8013358:	9b03      	ldreq	r3, [sp, #12]
 801335a:	3501      	addeq	r5, #1
 801335c:	7829      	ldrb	r1, [r5, #0]
 801335e:	bf04      	itt	eq
 8013360:	f043 0304 	orreq.w	r3, r3, #4
 8013364:	9303      	streq	r3, [sp, #12]
 8013366:	2958      	cmp	r1, #88	; 0x58
 8013368:	f000 8173 	beq.w	8013652 <_vprintf+0x3be>
 801336c:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8013370:	b2da      	uxtb	r2, r3
 8013372:	2a15      	cmp	r2, #21
 8013374:	d8a2      	bhi.n	80132bc <_vprintf+0x28>
 8013376:	2b15      	cmp	r3, #21
 8013378:	d8a0      	bhi.n	80132bc <_vprintf+0x28>
 801337a:	a201      	add	r2, pc, #4	; (adr r2, 8013380 <_vprintf+0xec>)
 801337c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013380:	080133e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, ip, sp}
 8013384:	080133ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, ip, sp}
 8013388:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 801338c:	08013423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp}
 8013390:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 8013394:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 8013398:	080133ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, r9, ip, sp}
 801339c:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133a0:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133a4:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133a8:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133ac:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133b0:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133b4:	08013595 	stmdaeq	r1, {r0, r2, r4, r7, r8, sl, ip, sp}
 80133b8:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133bc:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133c0:	080135bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, sp}
 80133c4:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133c8:	08013635 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, ip, sp}
 80133cc:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133d0:	080132bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, ip, sp}
 80133d4:	0801365b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, sl, ip, sp}
 80133d8:	2101      	movs	r1, #1
 80133da:	fb0c 3202 	mla	r2, ip, r2, r3
 80133de:	e79b      	b.n	8013318 <_vprintf+0x84>
 80133e0:	f854 1b04 	ldr.w	r1, [r4], #4
 80133e4:	a803      	add	r0, sp, #12
 80133e6:	f7ff fe6b 	bl	80130c0 <_xputch>
 80133ea:	3501      	adds	r5, #1
 80133ec:	e769      	b.n	80132c2 <_vprintf+0x2e>
 80133ee:	9903      	ldr	r1, [sp, #12]
 80133f0:	074a      	lsls	r2, r1, #29
 80133f2:	bf43      	ittte	mi
 80133f4:	3407      	addmi	r4, #7
 80133f6:	f024 0307 	bicmi.w	r3, r4, #7
 80133fa:	461c      	movmi	r4, r3
 80133fc:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8013400:	bf4a      	itet	mi
 8013402:	685b      	ldrmi	r3, [r3, #4]
 8013404:	17d3      	asrpl	r3, r2, #31
 8013406:	f854 2b08 	ldrmi.w	r2, [r4], #8
 801340a:	2b00      	cmp	r3, #0
 801340c:	da05      	bge.n	801341a <_vprintf+0x186>
 801340e:	f041 0108 	orr.w	r1, r1, #8
 8013412:	4252      	negs	r2, r2
 8013414:	9103      	str	r1, [sp, #12]
 8013416:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 801341a:	a803      	add	r0, sp, #12
 801341c:	f7ff fe66 	bl	80130ec <_format_int>
 8013420:	e7e3      	b.n	80133ea <_vprintf+0x156>
 8013422:	3407      	adds	r4, #7
 8013424:	f024 0407 	bic.w	r4, r4, #7
 8013428:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 801342c:	f7f4 f878 	bl	8007520 <__aeabi_d2f>
 8013430:	9b03      	ldr	r3, [sp, #12]
 8013432:	4639      	mov	r1, r7
 8013434:	07db      	lsls	r3, r3, #31
 8013436:	bf54      	ite	pl
 8013438:	f04f 0a06 	movpl.w	sl, #6
 801343c:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8013440:	4681      	mov	r9, r0
 8013442:	f7f4 fb69 	bl	8007b18 <__aeabi_fcmplt>
 8013446:	2800      	cmp	r0, #0
 8013448:	d069      	beq.n	801351e <_vprintf+0x28a>
 801344a:	232d      	movs	r3, #45	; 0x2d
 801344c:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8013450:	f88d 3020 	strb.w	r3, [sp, #32]
 8013454:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8013458:	4648      	mov	r0, r9
 801345a:	f7f4 fb85 	bl	8007b68 <__aeabi_f2iz>
 801345e:	4659      	mov	r1, fp
 8013460:	2200      	movs	r2, #0
 8013462:	4680      	mov	r8, r0
 8013464:	f7ff fdf1 	bl	801304a <_itostr>
 8013468:	eb0b 0200 	add.w	r2, fp, r0
 801346c:	e9cd 2000 	strd	r2, r0, [sp]
 8013470:	4640      	mov	r0, r8
 8013472:	f7f4 f95f 	bl	8007734 <__aeabi_i2f>
 8013476:	4601      	mov	r1, r0
 8013478:	4648      	mov	r0, r9
 801347a:	f7f4 f8a5 	bl	80075c8 <__aeabi_fsub>
 801347e:	222e      	movs	r2, #46	; 0x2e
 8013480:	4601      	mov	r1, r0
 8013482:	200a      	movs	r0, #10
 8013484:	9b00      	ldr	r3, [sp, #0]
 8013486:	f10a 0901 	add.w	r9, sl, #1
 801348a:	f103 0801 	add.w	r8, r3, #1
 801348e:	9b01      	ldr	r3, [sp, #4]
 8013490:	f80b 2003 	strb.w	r2, [fp, r3]
 8013494:	4603      	mov	r3, r0
 8013496:	f1ba 0f00 	cmp.w	sl, #0
 801349a:	dc42      	bgt.n	8013522 <_vprintf+0x28e>
 801349c:	9100      	str	r1, [sp, #0]
 801349e:	f7f4 f949 	bl	8007734 <__aeabi_i2f>
 80134a2:	9900      	ldr	r1, [sp, #0]
 80134a4:	f7f4 f99a 	bl	80077dc <__aeabi_fmul>
 80134a8:	f7f4 fb5e 	bl	8007b68 <__aeabi_f2iz>
 80134ac:	4641      	mov	r1, r8
 80134ae:	464a      	mov	r2, r9
 80134b0:	f7ff fdcb 	bl	801304a <_itostr>
 80134b4:	4480      	add	r8, r0
 80134b6:	eba8 0806 	sub.w	r8, r8, r6
 80134ba:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 80134be:	5c73      	ldrb	r3, [r6, r1]
 80134c0:	1872      	adds	r2, r6, r1
 80134c2:	2b34      	cmp	r3, #52	; 0x34
 80134c4:	d910      	bls.n	80134e8 <_vprintf+0x254>
 80134c6:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80134ca:	1e53      	subs	r3, r2, #1
 80134cc:	282e      	cmp	r0, #46	; 0x2e
 80134ce:	d02f      	beq.n	8013530 <_vprintf+0x29c>
 80134d0:	469c      	mov	ip, r3
 80134d2:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80134d6:	4663      	mov	r3, ip
 80134d8:	f81c 0901 	ldrb.w	r0, [ip], #-1
 80134dc:	2839      	cmp	r0, #57	; 0x39
 80134de:	d024      	beq.n	801352a <_vprintf+0x296>
 80134e0:	282e      	cmp	r0, #46	; 0x2e
 80134e2:	d025      	beq.n	8013530 <_vprintf+0x29c>
 80134e4:	3001      	adds	r0, #1
 80134e6:	7018      	strb	r0, [r3, #0]
 80134e8:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80134ec:	446b      	add	r3, sp
 80134ee:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80134f2:	2b2e      	cmp	r3, #46	; 0x2e
 80134f4:	bf08      	it	eq
 80134f6:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 80134fa:	4688      	mov	r8, r1
 80134fc:	4689      	mov	r9, r1
 80134fe:	9b05      	ldr	r3, [sp, #20]
 8013500:	454b      	cmp	r3, r9
 8013502:	dc40      	bgt.n	8013586 <_vprintf+0x2f2>
 8013504:	46b1      	mov	r9, r6
 8013506:	f1b8 0f00 	cmp.w	r8, #0
 801350a:	f77f af6e 	ble.w	80133ea <_vprintf+0x156>
 801350e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8013512:	a803      	add	r0, sp, #12
 8013514:	f7ff fdd4 	bl	80130c0 <_xputch>
 8013518:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 801351c:	e7f3      	b.n	8013506 <_vprintf+0x272>
 801351e:	46b3      	mov	fp, r6
 8013520:	e79a      	b.n	8013458 <_vprintf+0x1c4>
 8013522:	4358      	muls	r0, r3
 8013524:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8013528:	e7b5      	b.n	8013496 <_vprintf+0x202>
 801352a:	f88c e001 	strb.w	lr, [ip, #1]
 801352e:	e7d2      	b.n	80134d6 <_vprintf+0x242>
 8013530:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8013534:	3b01      	subs	r3, #1
 8013536:	7818      	ldrb	r0, [r3, #0]
 8013538:	2839      	cmp	r0, #57	; 0x39
 801353a:	d112      	bne.n	8013562 <_vprintf+0x2ce>
 801353c:	42b3      	cmp	r3, r6
 801353e:	d20d      	bcs.n	801355c <_vprintf+0x2c8>
 8013540:	1c98      	adds	r0, r3, #2
 8013542:	1c59      	adds	r1, r3, #1
 8013544:	4281      	cmp	r1, r0
 8013546:	eba2 0203 	sub.w	r2, r2, r3
 801354a:	d913      	bls.n	8013574 <_vprintf+0x2e0>
 801354c:	3201      	adds	r2, #1
 801354e:	441a      	add	r2, r3
 8013550:	428a      	cmp	r2, r1
 8013552:	d10b      	bne.n	801356c <_vprintf+0x2d8>
 8013554:	2231      	movs	r2, #49	; 0x31
 8013556:	4641      	mov	r1, r8
 8013558:	705a      	strb	r2, [r3, #1]
 801355a:	e7c5      	b.n	80134e8 <_vprintf+0x254>
 801355c:	f803 c901 	strb.w	ip, [r3], #-1
 8013560:	e7e9      	b.n	8013536 <_vprintf+0x2a2>
 8013562:	42b3      	cmp	r3, r6
 8013564:	d3ec      	bcc.n	8013540 <_vprintf+0x2ac>
 8013566:	282d      	cmp	r0, #45	; 0x2d
 8013568:	d0ea      	beq.n	8013540 <_vprintf+0x2ac>
 801356a:	e7bb      	b.n	80134e4 <_vprintf+0x250>
 801356c:	f811 0b01 	ldrb.w	r0, [r1], #1
 8013570:	7008      	strb	r0, [r1, #0]
 8013572:	e7ed      	b.n	8013550 <_vprintf+0x2bc>
 8013574:	4411      	add	r1, r2
 8013576:	4402      	add	r2, r0
 8013578:	4290      	cmp	r0, r2
 801357a:	d0eb      	beq.n	8013554 <_vprintf+0x2c0>
 801357c:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8013580:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8013584:	e7f8      	b.n	8013578 <_vprintf+0x2e4>
 8013586:	2120      	movs	r1, #32
 8013588:	a803      	add	r0, sp, #12
 801358a:	f7ff fd99 	bl	80130c0 <_xputch>
 801358e:	f109 0901 	add.w	r9, r9, #1
 8013592:	e7b4      	b.n	80134fe <_vprintf+0x26a>
 8013594:	2308      	movs	r3, #8
 8013596:	9305      	str	r3, [sp, #20]
 8013598:	2320      	movs	r3, #32
 801359a:	2130      	movs	r1, #48	; 0x30
 801359c:	f854 8b04 	ldr.w	r8, [r4], #4
 80135a0:	a803      	add	r0, sp, #12
 80135a2:	9303      	str	r3, [sp, #12]
 80135a4:	f7ff fd8c 	bl	80130c0 <_xputch>
 80135a8:	2178      	movs	r1, #120	; 0x78
 80135aa:	a803      	add	r0, sp, #12
 80135ac:	f7ff fd88 	bl	80130c0 <_xputch>
 80135b0:	4641      	mov	r1, r8
 80135b2:	a803      	add	r0, sp, #12
 80135b4:	f7ff fe10 	bl	80131d8 <_format_hex>
 80135b8:	e717      	b.n	80133ea <_vprintf+0x156>
 80135ba:	f04f 0800 	mov.w	r8, #0
 80135be:	f854 9b04 	ldr.w	r9, [r4], #4
 80135c2:	f819 3008 	ldrb.w	r3, [r9, r8]
 80135c6:	b993      	cbnz	r3, 80135ee <_vprintf+0x35a>
 80135c8:	9b03      	ldr	r3, [sp, #12]
 80135ca:	07d9      	lsls	r1, r3, #31
 80135cc:	d503      	bpl.n	80135d6 <_vprintf+0x342>
 80135ce:	9b04      	ldr	r3, [sp, #16]
 80135d0:	4598      	cmp	r8, r3
 80135d2:	bfa8      	it	ge
 80135d4:	4698      	movge	r8, r3
 80135d6:	9b03      	ldr	r3, [sp, #12]
 80135d8:	f108 0a01 	add.w	sl, r8, #1
 80135dc:	065a      	lsls	r2, r3, #25
 80135de:	d403      	bmi.n	80135e8 <_vprintf+0x354>
 80135e0:	9b05      	ldr	r3, [sp, #20]
 80135e2:	4598      	cmp	r8, r3
 80135e4:	db06      	blt.n	80135f4 <_vprintf+0x360>
 80135e6:	46d0      	mov	r8, sl
 80135e8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80135ec:	e00e      	b.n	801360c <_vprintf+0x378>
 80135ee:	f108 0801 	add.w	r8, r8, #1
 80135f2:	e7e6      	b.n	80135c2 <_vprintf+0x32e>
 80135f4:	2120      	movs	r1, #32
 80135f6:	a803      	add	r0, sp, #12
 80135f8:	f7ff fd62 	bl	80130c0 <_xputch>
 80135fc:	46d0      	mov	r8, sl
 80135fe:	e7ea      	b.n	80135d6 <_vprintf+0x342>
 8013600:	a803      	add	r0, sp, #12
 8013602:	f7ff fd5d 	bl	80130c0 <_xputch>
 8013606:	9b04      	ldr	r3, [sp, #16]
 8013608:	3b01      	subs	r3, #1
 801360a:	9304      	str	r3, [sp, #16]
 801360c:	9b03      	ldr	r3, [sp, #12]
 801360e:	07db      	lsls	r3, r3, #31
 8013610:	d501      	bpl.n	8013616 <_vprintf+0x382>
 8013612:	9b04      	ldr	r3, [sp, #16]
 8013614:	b11b      	cbz	r3, 801361e <_vprintf+0x38a>
 8013616:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 801361a:	2900      	cmp	r1, #0
 801361c:	d1f0      	bne.n	8013600 <_vprintf+0x36c>
 801361e:	9b05      	ldr	r3, [sp, #20]
 8013620:	4543      	cmp	r3, r8
 8013622:	f77f aee2 	ble.w	80133ea <_vprintf+0x156>
 8013626:	2120      	movs	r1, #32
 8013628:	a803      	add	r0, sp, #12
 801362a:	f7ff fd49 	bl	80130c0 <_xputch>
 801362e:	f108 0801 	add.w	r8, r8, #1
 8013632:	e7f4      	b.n	801361e <_vprintf+0x38a>
 8013634:	9b03      	ldr	r3, [sp, #12]
 8013636:	f013 0304 	ands.w	r3, r3, #4
 801363a:	bf1d      	ittte	ne
 801363c:	3407      	addne	r4, #7
 801363e:	f024 0307 	bicne.w	r3, r4, #7
 8013642:	461c      	movne	r4, r3
 8013644:	f854 2b04 	ldreq.w	r2, [r4], #4
 8013648:	bf1c      	itt	ne
 801364a:	f854 2b08 	ldrne.w	r2, [r4], #8
 801364e:	685b      	ldrne	r3, [r3, #4]
 8013650:	e6e3      	b.n	801341a <_vprintf+0x186>
 8013652:	9b03      	ldr	r3, [sp, #12]
 8013654:	f043 0302 	orr.w	r3, r3, #2
 8013658:	9303      	str	r3, [sp, #12]
 801365a:	f854 1b04 	ldr.w	r1, [r4], #4
 801365e:	e7a8      	b.n	80135b2 <_vprintf+0x31e>

08013660 <printf>:
 8013660:	b40f      	push	{r0, r1, r2, r3}
 8013662:	b507      	push	{r0, r1, r2, lr}
 8013664:	aa04      	add	r2, sp, #16
 8013666:	f852 1b04 	ldr.w	r1, [r2], #4
 801366a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801366e:	9201      	str	r2, [sp, #4]
 8013670:	f7ff fe10 	bl	8013294 <_vprintf>
 8013674:	b003      	add	sp, #12
 8013676:	f85d eb04 	ldr.w	lr, [sp], #4
 801367a:	b004      	add	sp, #16
 801367c:	4770      	bx	lr
	...

08013680 <sprintf>:
 8013680:	b40e      	push	{r1, r2, r3}
 8013682:	b517      	push	{r0, r1, r2, r4, lr}
 8013684:	4c09      	ldr	r4, [pc, #36]	; (80136ac <sprintf+0x2c>)
 8013686:	aa05      	add	r2, sp, #20
 8013688:	f852 1b04 	ldr.w	r1, [r2], #4
 801368c:	6020      	str	r0, [r4, #0]
 801368e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8013692:	9201      	str	r2, [sp, #4]
 8013694:	f7ff fdfe 	bl	8013294 <_vprintf>
 8013698:	2300      	movs	r3, #0
 801369a:	6822      	ldr	r2, [r4, #0]
 801369c:	6023      	str	r3, [r4, #0]
 801369e:	7013      	strb	r3, [r2, #0]
 80136a0:	b003      	add	sp, #12
 80136a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136a6:	b003      	add	sp, #12
 80136a8:	4770      	bx	lr
 80136aa:	bf00      	nop
 80136ac:	20012590 	mulcs	r1, r0, r5

080136b0 <snprintf>:
 80136b0:	b40c      	push	{r2, r3}
 80136b2:	460b      	mov	r3, r1
 80136b4:	b513      	push	{r0, r1, r4, lr}
 80136b6:	4c09      	ldr	r4, [pc, #36]	; (80136dc <snprintf+0x2c>)
 80136b8:	aa04      	add	r2, sp, #16
 80136ba:	f852 1b04 	ldr.w	r1, [r2], #4
 80136be:	6020      	str	r0, [r4, #0]
 80136c0:	4618      	mov	r0, r3
 80136c2:	9201      	str	r2, [sp, #4]
 80136c4:	f7ff fde6 	bl	8013294 <_vprintf>
 80136c8:	2300      	movs	r3, #0
 80136ca:	6822      	ldr	r2, [r4, #0]
 80136cc:	6023      	str	r3, [r4, #0]
 80136ce:	7013      	strb	r3, [r2, #0]
 80136d0:	b002      	add	sp, #8
 80136d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136d6:	b002      	add	sp, #8
 80136d8:	4770      	bx	lr
 80136da:	bf00      	nop
 80136dc:	20012590 	mulcs	r1, r0, r5

080136e0 <vsnprintf>:
 80136e0:	b538      	push	{r3, r4, r5, lr}
 80136e2:	4605      	mov	r5, r0
 80136e4:	4c05      	ldr	r4, [pc, #20]	; (80136fc <vsnprintf+0x1c>)
 80136e6:	4608      	mov	r0, r1
 80136e8:	4611      	mov	r1, r2
 80136ea:	461a      	mov	r2, r3
 80136ec:	6025      	str	r5, [r4, #0]
 80136ee:	f7ff fdd1 	bl	8013294 <_vprintf>
 80136f2:	2300      	movs	r3, #0
 80136f4:	6822      	ldr	r2, [r4, #0]
 80136f6:	6023      	str	r3, [r4, #0]
 80136f8:	7013      	strb	r3, [r2, #0]
 80136fa:	bd38      	pop	{r3, r4, r5, pc}
 80136fc:	20012590 	mulcs	r1, r0, r5

08013700 <puts>:
 8013700:	b508      	push	{r3, lr}
 8013702:	f7ff f9cb 	bl	8012a9c <console_puts>
 8013706:	200a      	movs	r0, #10
 8013708:	f7ff f9bc 	bl	8012a84 <console_putc>
 801370c:	2001      	movs	r0, #1
 801370e:	bd08      	pop	{r3, pc}

08013710 <strtok>:
 8013710:	b530      	push	{r4, r5, lr}
 8013712:	b910      	cbnz	r0, 801371a <strtok+0xa>
 8013714:	4b12      	ldr	r3, [pc, #72]	; (8013760 <strtok+0x50>)
 8013716:	6818      	ldr	r0, [r3, #0]
 8013718:	b158      	cbz	r0, 8013732 <strtok+0x22>
 801371a:	4603      	mov	r3, r0
 801371c:	460d      	mov	r5, r1
 801371e:	4618      	mov	r0, r3
 8013720:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013724:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013728:	b924      	cbnz	r4, 8013734 <strtok+0x24>
 801372a:	b94a      	cbnz	r2, 8013740 <strtok+0x30>
 801372c:	4610      	mov	r0, r2
 801372e:	4b0c      	ldr	r3, [pc, #48]	; (8013760 <strtok+0x50>)
 8013730:	601a      	str	r2, [r3, #0]
 8013732:	bd30      	pop	{r4, r5, pc}
 8013734:	42a2      	cmp	r2, r4
 8013736:	d1f5      	bne.n	8013724 <strtok+0x14>
 8013738:	e7f0      	b.n	801371c <strtok+0xc>
 801373a:	4613      	mov	r3, r2
 801373c:	e00c      	b.n	8013758 <strtok+0x48>
 801373e:	b914      	cbnz	r4, 8013746 <strtok+0x36>
 8013740:	460d      	mov	r5, r1
 8013742:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013746:	f815 4b01 	ldrb.w	r4, [r5], #1
 801374a:	42a2      	cmp	r2, r4
 801374c:	d1f7      	bne.n	801373e <strtok+0x2e>
 801374e:	2a00      	cmp	r2, #0
 8013750:	d0f3      	beq.n	801373a <strtok+0x2a>
 8013752:	2200      	movs	r2, #0
 8013754:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013758:	4a01      	ldr	r2, [pc, #4]	; (8013760 <strtok+0x50>)
 801375a:	6013      	str	r3, [r2, #0]
 801375c:	e7e9      	b.n	8013732 <strtok+0x22>
 801375e:	bf00      	nop
 8013760:	20012594 	mulcs	r1, r4, r5

08013764 <isleapyear>:
 8013764:	2264      	movs	r2, #100	; 0x64
 8013766:	fb90 f3f2 	sdiv	r3, r0, r2
 801376a:	fb02 0313 	mls	r3, r2, r3, r0
 801376e:	b94b      	cbnz	r3, 8013784 <isleapyear+0x20>
 8013770:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8013774:	fb90 f2f3 	sdiv	r2, r0, r3
 8013778:	fb03 0012 	mls	r0, r3, r2, r0
 801377c:	fab0 f080 	clz	r0, r0
 8013780:	0940      	lsrs	r0, r0, #5
 8013782:	4770      	bx	lr
 8013784:	f010 0f03 	tst.w	r0, #3
 8013788:	bf0c      	ite	eq
 801378a:	2001      	moveq	r0, #1
 801378c:	2000      	movne	r0, #0
 801378e:	4770      	bx	lr

08013790 <getdaysofmonth>:
 8013790:	b510      	push	{r4, lr}
 8013792:	4604      	mov	r4, r0
 8013794:	2c01      	cmp	r4, #1
 8013796:	4608      	mov	r0, r1
 8013798:	d102      	bne.n	80137a0 <getdaysofmonth+0x10>
 801379a:	f7ff ffe3 	bl	8013764 <isleapyear>
 801379e:	b918      	cbnz	r0, 80137a8 <getdaysofmonth+0x18>
 80137a0:	4b02      	ldr	r3, [pc, #8]	; (80137ac <getdaysofmonth+0x1c>)
 80137a2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80137a6:	bd10      	pop	{r4, pc}
 80137a8:	201d      	movs	r0, #29
 80137aa:	e7fc      	b.n	80137a6 <getdaysofmonth+0x16>
 80137ac:	08018224 	stmdaeq	r1, {r2, r5, r9, pc}

080137b0 <mktime>:
 80137b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80137b4:	4604      	mov	r4, r0
 80137b6:	2800      	cmp	r0, #0
 80137b8:	d042      	beq.n	8013840 <mktime+0x90>
 80137ba:	6941      	ldr	r1, [r0, #20]
 80137bc:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80137c0:	2b45      	cmp	r3, #69	; 0x45
 80137c2:	d83d      	bhi.n	8013840 <mktime+0x90>
 80137c4:	2600      	movs	r6, #0
 80137c6:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80137ca:	f240 186d 	movw	r8, #365	; 0x16d
 80137ce:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80137d2:	42af      	cmp	r7, r5
 80137d4:	da23      	bge.n	801381e <mktime+0x6e>
 80137d6:	6927      	ldr	r7, [r4, #16]
 80137d8:	2f0b      	cmp	r7, #11
 80137da:	d831      	bhi.n	8013840 <mktime+0x90>
 80137dc:	2500      	movs	r5, #0
 80137de:	42af      	cmp	r7, r5
 80137e0:	d128      	bne.n	8013834 <mktime+0x84>
 80137e2:	68e5      	ldr	r5, [r4, #12]
 80137e4:	2d00      	cmp	r5, #0
 80137e6:	dd2b      	ble.n	8013840 <mktime+0x90>
 80137e8:	4638      	mov	r0, r7
 80137ea:	f7ff ffd1 	bl	8013790 <getdaysofmonth>
 80137ee:	4285      	cmp	r5, r0
 80137f0:	dc26      	bgt.n	8013840 <mktime+0x90>
 80137f2:	2318      	movs	r3, #24
 80137f4:	3d01      	subs	r5, #1
 80137f6:	4435      	add	r5, r6
 80137f8:	435d      	muls	r5, r3
 80137fa:	68a3      	ldr	r3, [r4, #8]
 80137fc:	2b17      	cmp	r3, #23
 80137fe:	d81f      	bhi.n	8013840 <mktime+0x90>
 8013800:	203c      	movs	r0, #60	; 0x3c
 8013802:	442b      	add	r3, r5
 8013804:	fb00 f503 	mul.w	r5, r0, r3
 8013808:	6863      	ldr	r3, [r4, #4]
 801380a:	2b3b      	cmp	r3, #59	; 0x3b
 801380c:	d818      	bhi.n	8013840 <mktime+0x90>
 801380e:	442b      	add	r3, r5
 8013810:	4343      	muls	r3, r0
 8013812:	6820      	ldr	r0, [r4, #0]
 8013814:	283b      	cmp	r0, #59	; 0x3b
 8013816:	d813      	bhi.n	8013840 <mktime+0x90>
 8013818:	4418      	add	r0, r3
 801381a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801381e:	4628      	mov	r0, r5
 8013820:	f7ff ffa0 	bl	8013764 <isleapyear>
 8013824:	2800      	cmp	r0, #0
 8013826:	bf14      	ite	ne
 8013828:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801382c:	4643      	moveq	r3, r8
 801382e:	3501      	adds	r5, #1
 8013830:	441e      	add	r6, r3
 8013832:	e7ce      	b.n	80137d2 <mktime+0x22>
 8013834:	4628      	mov	r0, r5
 8013836:	f7ff ffab 	bl	8013790 <getdaysofmonth>
 801383a:	3501      	adds	r5, #1
 801383c:	4406      	add	r6, r0
 801383e:	e7ce      	b.n	80137de <mktime+0x2e>
 8013840:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013844:	e7e9      	b.n	801381a <mktime+0x6a>
	...

08013848 <gettimeofday>:
 8013848:	b538      	push	{r3, r4, r5, lr}
 801384a:	4605      	mov	r5, r0
 801384c:	b928      	cbnz	r0, 801385a <gettimeofday+0x12>
 801384e:	212c      	movs	r1, #44	; 0x2c
 8013850:	4b12      	ldr	r3, [pc, #72]	; (801389c <gettimeofday+0x54>)
 8013852:	4a13      	ldr	r2, [pc, #76]	; (80138a0 <gettimeofday+0x58>)
 8013854:	4813      	ldr	r0, [pc, #76]	; (80138a4 <gettimeofday+0x5c>)
 8013856:	f7ff faad 	bl	8012db4 <__assert_func>
 801385a:	4b13      	ldr	r3, [pc, #76]	; (80138a8 <gettimeofday+0x60>)
 801385c:	4a13      	ldr	r2, [pc, #76]	; (80138ac <gettimeofday+0x64>)
 801385e:	681b      	ldr	r3, [r3, #0]
 8013860:	6814      	ldr	r4, [r2, #0]
 8013862:	6013      	str	r3, [r2, #0]
 8013864:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013868:	429c      	cmp	r4, r3
 801386a:	bf2c      	ite	cs
 801386c:	1ae4      	subcs	r4, r4, r3
 801386e:	1b1c      	subcc	r4, r3, r4
 8013870:	4354      	muls	r4, r2
 8013872:	4b0f      	ldr	r3, [pc, #60]	; (80138b0 <gettimeofday+0x68>)
 8013874:	e9d3 2100 	ldrd	r2, r1, [r3]
 8013878:	18a4      	adds	r4, r4, r2
 801387a:	f141 0100 	adc.w	r1, r1, #0
 801387e:	e9c3 4100 	strd	r4, r1, [r3]
 8013882:	4620      	mov	r0, r4
 8013884:	2300      	movs	r3, #0
 8013886:	4a0b      	ldr	r2, [pc, #44]	; (80138b4 <gettimeofday+0x6c>)
 8013888:	f7f4 f994 	bl	8007bb4 <__aeabi_uldivmod>
 801388c:	4b09      	ldr	r3, [pc, #36]	; (80138b4 <gettimeofday+0x6c>)
 801388e:	6028      	str	r0, [r5, #0]
 8013890:	fb03 4410 	mls	r4, r3, r0, r4
 8013894:	2000      	movs	r0, #0
 8013896:	606c      	str	r4, [r5, #4]
 8013898:	bd38      	pop	{r3, r4, r5, pc}
 801389a:	bf00      	nop
 801389c:	08018254 	stmdaeq	r1, {r2, r4, r6, r9, pc}
 80138a0:	08018279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, pc}
 80138a4:	0801825c 	stmdaeq	r1, {r2, r3, r4, r6, r9, pc}
 80138a8:	200125a8 	andcs	r2, r1, r8, lsr #11
 80138ac:	200125a0 	andcs	r2, r1, r0, lsr #11
 80138b0:	20012598 	mulcs	r1, r8, r5
 80138b4:	000f4240 	andeq	r4, pc, r0, asr #4

080138b8 <settimeofday>:
 80138b8:	b510      	push	{r4, lr}
 80138ba:	4604      	mov	r4, r0
 80138bc:	b928      	cbnz	r0, 80138ca <settimeofday+0x12>
 80138be:	2142      	movs	r1, #66	; 0x42
 80138c0:	4b09      	ldr	r3, [pc, #36]	; (80138e8 <settimeofday+0x30>)
 80138c2:	4a0a      	ldr	r2, [pc, #40]	; (80138ec <settimeofday+0x34>)
 80138c4:	480a      	ldr	r0, [pc, #40]	; (80138f0 <settimeofday+0x38>)
 80138c6:	f7ff fa75 	bl	8012db4 <__assert_func>
 80138ca:	4b0a      	ldr	r3, [pc, #40]	; (80138f4 <settimeofday+0x3c>)
 80138cc:	480a      	ldr	r0, [pc, #40]	; (80138f8 <settimeofday+0x40>)
 80138ce:	681a      	ldr	r2, [r3, #0]
 80138d0:	4b0a      	ldr	r3, [pc, #40]	; (80138fc <settimeofday+0x44>)
 80138d2:	490b      	ldr	r1, [pc, #44]	; (8013900 <settimeofday+0x48>)
 80138d4:	601a      	str	r2, [r3, #0]
 80138d6:	6863      	ldr	r3, [r4, #4]
 80138d8:	6824      	ldr	r4, [r4, #0]
 80138da:	17da      	asrs	r2, r3, #31
 80138dc:	fbc4 3200 	smlal	r3, r2, r4, r0
 80138e0:	2000      	movs	r0, #0
 80138e2:	e9c1 3200 	strd	r3, r2, [r1]
 80138e6:	bd10      	pop	{r4, pc}
 80138e8:	08018254 	stmdaeq	r1, {r2, r4, r6, r9, pc}
 80138ec:	0801826c 	stmdaeq	r1, {r2, r3, r5, r6, r9, pc}
 80138f0:	0801825c 	stmdaeq	r1, {r2, r3, r4, r6, r9, pc}
 80138f4:	200125a8 	andcs	r2, r1, r8, lsr #11
 80138f8:	000f4240 	andeq	r4, pc, r0, asr #4
 80138fc:	200125a0 	andcs	r2, r1, r0, lsr #11
 8013900:	20012598 	mulcs	r1, r8, r5

08013904 <time>:
 8013904:	b513      	push	{r0, r1, r4, lr}
 8013906:	4604      	mov	r4, r0
 8013908:	2100      	movs	r1, #0
 801390a:	4668      	mov	r0, sp
 801390c:	f7ff ff9c 	bl	8013848 <gettimeofday>
 8013910:	9800      	ldr	r0, [sp, #0]
 8013912:	b104      	cbz	r4, 8013916 <time+0x12>
 8013914:	6020      	str	r0, [r4, #0]
 8013916:	b002      	add	sp, #8
 8013918:	bd10      	pop	{r4, pc}
	...

0801391c <gd32_adc_init>:
 801391c:	b510      	push	{r4, lr}
 801391e:	f240 6009 	movw	r0, #1545	; 0x609
 8013922:	4c20      	ldr	r4, [pc, #128]	; (80139a4 <gd32_adc_init+0x88>)
 8013924:	f000 fe1b 	bl	801455e <rcu_periph_clock_enable>
 8013928:	2005      	movs	r0, #5
 801392a:	f000 fe57 	bl	80145dc <rcu_adc_clock_config>
 801392e:	4620      	mov	r0, r4
 8013930:	2201      	movs	r2, #1
 8013932:	f44f 7180 	mov.w	r1, #256	; 0x100
 8013936:	f000 fb13 	bl	8013f60 <adc_special_function_config>
 801393a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 801393e:	4620      	mov	r0, r4
 8013940:	2102      	movs	r1, #2
 8013942:	f000 fbad 	bl	80140a0 <adc_external_trigger_source_config>
 8013946:	2100      	movs	r1, #0
 8013948:	4620      	mov	r0, r4
 801394a:	f000 fb31 	bl	8013fb0 <adc_data_alignment_config>
 801394e:	2000      	movs	r0, #0
 8013950:	f000 faf6 	bl	8013f40 <adc_mode_config>
 8013954:	2202      	movs	r2, #2
 8013956:	4620      	mov	r0, r4
 8013958:	4611      	mov	r1, r2
 801395a:	f000 fb55 	bl	8014008 <adc_channel_length_config>
 801395e:	4620      	mov	r0, r4
 8013960:	2307      	movs	r3, #7
 8013962:	2210      	movs	r2, #16
 8013964:	2100      	movs	r1, #0
 8013966:	f000 fb6c 	bl	8014042 <adc_inserted_channel_config>
 801396a:	2307      	movs	r3, #7
 801396c:	4620      	mov	r0, r4
 801396e:	2211      	movs	r2, #17
 8013970:	2101      	movs	r1, #1
 8013972:	f000 fb66 	bl	8014042 <adc_inserted_channel_config>
 8013976:	2102      	movs	r1, #2
 8013978:	2201      	movs	r2, #1
 801397a:	4620      	mov	r0, r4
 801397c:	f000 fba1 	bl	80140c2 <adc_external_trigger_config>
 8013980:	f000 fb38 	bl	8013ff4 <adc_tempsensor_vrefint_enable>
 8013984:	4620      	mov	r0, r4
 8013986:	f000 fb1c 	bl	8013fc2 <adc_enable>
 801398a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 801398e:	f000 fa43 	bl	8013e18 <udelay>
 8013992:	4620      	mov	r0, r4
 8013994:	f000 fb1d 	bl	8013fd2 <adc_calibration_enable>
 8013998:	4620      	mov	r0, r4
 801399a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801399e:	2102      	movs	r1, #2
 80139a0:	f000 bbaa 	b.w	80140f8 <adc_software_trigger_enable>
 80139a4:	40012400 	andmi	r2, r1, r0, lsl #8

080139a8 <_stop>:
 80139a8:	b508      	push	{r3, lr}
 80139aa:	4808      	ldr	r0, [pc, #32]	; (80139cc <_stop+0x24>)
 80139ac:	f000 fdb2 	bl	8014514 <i2c_stop_on_bus>
 80139b0:	f640 73ff 	movw	r3, #4095	; 0xfff
 80139b4:	4a06      	ldr	r2, [pc, #24]	; (80139d0 <_stop+0x28>)
 80139b6:	f8d2 0400 	ldr.w	r0, [r2, #1024]	; 0x400
 80139ba:	f410 7000 	ands.w	r0, r0, #512	; 0x200
 80139be:	d100      	bne.n	80139c2 <_stop+0x1a>
 80139c0:	bd08      	pop	{r3, pc}
 80139c2:	3b01      	subs	r3, #1
 80139c4:	d1f7      	bne.n	80139b6 <_stop+0xe>
 80139c6:	f06f 0003 	mvn.w	r0, #3
 80139ca:	e7f9      	b.n	80139c0 <_stop+0x18>
 80139cc:	40005400 	andmi	r5, r0, r0, lsl #8
 80139d0:	40005000 	andmi	r5, r0, r0

080139d4 <gd32_i2c_begin>:
 80139d4:	b510      	push	{r4, lr}
 80139d6:	f240 7015 	movw	r0, #1813	; 0x715
 80139da:	f000 fdc0 	bl	801455e <rcu_periph_clock_enable>
 80139de:	4c12      	ldr	r4, [pc, #72]	; (8013a28 <gd32_i2c_begin+0x54>)
 80139e0:	f240 6003 	movw	r0, #1539	; 0x603
 80139e4:	f000 fdbb 	bl	801455e <rcu_periph_clock_enable>
 80139e8:	f240 6003 	movw	r0, #1539	; 0x603
 80139ec:	f000 fdb7 	bl	801455e <rcu_periph_clock_enable>
 80139f0:	4620      	mov	r0, r4
 80139f2:	2340      	movs	r3, #64	; 0x40
 80139f4:	2203      	movs	r2, #3
 80139f6:	211c      	movs	r1, #28
 80139f8:	f000 fc7a 	bl	80142f0 <gpio_init>
 80139fc:	2380      	movs	r3, #128	; 0x80
 80139fe:	4620      	mov	r0, r4
 8013a00:	2203      	movs	r2, #3
 8013a02:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8013a06:	211c      	movs	r1, #28
 8013a08:	f000 fc72 	bl	80142f0 <gpio_init>
 8013a0c:	4620      	mov	r0, r4
 8013a0e:	4907      	ldr	r1, [pc, #28]	; (8013a2c <gd32_i2c_begin+0x58>)
 8013a10:	2200      	movs	r2, #0
 8013a12:	f000 fcfd 	bl	8014410 <i2c_clock_config>
 8013a16:	4620      	mov	r0, r4
 8013a18:	f000 fd72 	bl	8014500 <i2c_enable>
 8013a1c:	4620      	mov	r0, r4
 8013a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a22:	2101      	movs	r1, #1
 8013a24:	f000 bd52 	b.w	80144cc <i2c_ack_config>
 8013a28:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013a2c:	00061a80 	andeq	r1, r6, r0, lsl #21

08013a30 <gd32_i2c_set_baudrate>:
 8013a30:	4601      	mov	r1, r0
 8013a32:	2200      	movs	r2, #0
 8013a34:	4801      	ldr	r0, [pc, #4]	; (8013a3c <gd32_i2c_set_baudrate+0xc>)
 8013a36:	f000 bceb 	b.w	8014410 <i2c_clock_config>
 8013a3a:	bf00      	nop
 8013a3c:	40005400 	andmi	r5, r0, r0, lsl #8

08013a40 <gd32_i2c_set_address>:
 8013a40:	4b01      	ldr	r3, [pc, #4]	; (8013a48 <gd32_i2c_set_address+0x8>)
 8013a42:	0040      	lsls	r0, r0, #1
 8013a44:	7018      	strb	r0, [r3, #0]
 8013a46:	4770      	bx	lr
 8013a48:	200125a4 	andcs	r2, r1, r4, lsr #11

08013a4c <gd32_i2c_write>:
 8013a4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013a4e:	4604      	mov	r4, r0
 8013a50:	460f      	mov	r7, r1
 8013a52:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013a56:	4e2d      	ldr	r6, [pc, #180]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013a58:	f240 6101 	movw	r1, #1537	; 0x601
 8013a5c:	4630      	mov	r0, r6
 8013a5e:	f000 fd63 	bl	8014528 <i2c_flag_get>
 8013a62:	b9b0      	cbnz	r0, 8013a92 <gd32_i2c_write+0x46>
 8013a64:	4829      	ldr	r0, [pc, #164]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013a66:	f000 fd50 	bl	801450a <i2c_start_on_bus>
 8013a6a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013a6e:	4e27      	ldr	r6, [pc, #156]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013a70:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013a74:	4630      	mov	r0, r6
 8013a76:	f000 fd57 	bl	8014528 <i2c_flag_get>
 8013a7a:	b190      	cbz	r0, 8013aa2 <gd32_i2c_write+0x56>
 8013a7c:	4b24      	ldr	r3, [pc, #144]	; (8013b10 <gd32_i2c_write+0xc4>)
 8013a7e:	f06f 0201 	mvn.w	r2, #1
 8013a82:	7819      	ldrb	r1, [r3, #0]
 8013a84:	4821      	ldr	r0, [pc, #132]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013a86:	f000 fd33 	bl	80144f0 <i2c_master_addressing>
 8013a8a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013a8e:	4e1f      	ldr	r6, [pc, #124]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013a90:	e00c      	b.n	8013aac <gd32_i2c_write+0x60>
 8013a92:	3d01      	subs	r5, #1
 8013a94:	d1e0      	bne.n	8013a58 <gd32_i2c_write+0xc>
 8013a96:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8013a9a:	f7ff ff85 	bl	80139a8 <_stop>
 8013a9e:	4260      	negs	r0, r4
 8013aa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013aa2:	3d01      	subs	r5, #1
 8013aa4:	d1e4      	bne.n	8013a70 <gd32_i2c_write+0x24>
 8013aa6:	e7f6      	b.n	8013a96 <gd32_i2c_write+0x4a>
 8013aa8:	3d01      	subs	r5, #1
 8013aaa:	d0f4      	beq.n	8013a96 <gd32_i2c_write+0x4a>
 8013aac:	f240 5101 	movw	r1, #1281	; 0x501
 8013ab0:	4630      	mov	r0, r6
 8013ab2:	f000 fd39 	bl	8014528 <i2c_flag_get>
 8013ab6:	2800      	cmp	r0, #0
 8013ab8:	d0f6      	beq.n	8013aa8 <gd32_i2c_write+0x5c>
 8013aba:	f240 5101 	movw	r1, #1281	; 0x501
 8013abe:	4813      	ldr	r0, [pc, #76]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013ac0:	f000 fd3a 	bl	8014538 <i2c_flag_clear>
 8013ac4:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013ac8:	4e10      	ldr	r6, [pc, #64]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013aca:	f240 5107 	movw	r1, #1287	; 0x507
 8013ace:	4630      	mov	r0, r6
 8013ad0:	f000 fd2a 	bl	8014528 <i2c_flag_get>
 8013ad4:	2801      	cmp	r0, #1
 8013ad6:	d105      	bne.n	8013ae4 <gd32_i2c_write+0x98>
 8013ad8:	4e0c      	ldr	r6, [pc, #48]	; (8013b0c <gd32_i2c_write+0xc0>)
 8013ada:	4427      	add	r7, r4
 8013adc:	42a7      	cmp	r7, r4
 8013ade:	d104      	bne.n	8013aea <gd32_i2c_write+0x9e>
 8013ae0:	2400      	movs	r4, #0
 8013ae2:	e7da      	b.n	8013a9a <gd32_i2c_write+0x4e>
 8013ae4:	3d01      	subs	r5, #1
 8013ae6:	d1f0      	bne.n	8013aca <gd32_i2c_write+0x7e>
 8013ae8:	e7d5      	b.n	8013a96 <gd32_i2c_write+0x4a>
 8013aea:	4630      	mov	r0, r6
 8013aec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013af0:	f000 fd15 	bl	801451e <i2c_data_transmit>
 8013af4:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013af8:	f240 5102 	movw	r1, #1282	; 0x502
 8013afc:	4630      	mov	r0, r6
 8013afe:	f000 fd13 	bl	8014528 <i2c_flag_get>
 8013b02:	2800      	cmp	r0, #0
 8013b04:	d1ea      	bne.n	8013adc <gd32_i2c_write+0x90>
 8013b06:	3d01      	subs	r5, #1
 8013b08:	d1f6      	bne.n	8013af8 <gd32_i2c_write+0xac>
 8013b0a:	e7c4      	b.n	8013a96 <gd32_i2c_write+0x4a>
 8013b0c:	40005400 	andmi	r5, r0, r0, lsl #8
 8013b10:	200125a4 	andcs	r2, r1, r4, lsr #11

08013b14 <gd32_i2c_read>:
 8013b14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013b18:	4680      	mov	r8, r0
 8013b1a:	460c      	mov	r4, r1
 8013b1c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013b20:	4f4b      	ldr	r7, [pc, #300]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b22:	f240 6101 	movw	r1, #1537	; 0x601
 8013b26:	4638      	mov	r0, r7
 8013b28:	f000 fcfe 	bl	8014528 <i2c_flag_get>
 8013b2c:	4605      	mov	r5, r0
 8013b2e:	bb08      	cbnz	r0, 8013b74 <gd32_i2c_read+0x60>
 8013b30:	2c02      	cmp	r4, #2
 8013b32:	d103      	bne.n	8013b3c <gd32_i2c_read+0x28>
 8013b34:	4601      	mov	r1, r0
 8013b36:	4846      	ldr	r0, [pc, #280]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b38:	f000 fcd1 	bl	80144de <i2c_ackpos_config>
 8013b3c:	4844      	ldr	r0, [pc, #272]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b3e:	f000 fce4 	bl	801450a <i2c_start_on_bus>
 8013b42:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013b46:	4f42      	ldr	r7, [pc, #264]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b48:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013b4c:	4638      	mov	r0, r7
 8013b4e:	f000 fceb 	bl	8014528 <i2c_flag_get>
 8013b52:	b1a0      	cbz	r0, 8013b7e <gd32_i2c_read+0x6a>
 8013b54:	4b3f      	ldr	r3, [pc, #252]	; (8013c54 <gd32_i2c_read+0x140>)
 8013b56:	2201      	movs	r2, #1
 8013b58:	7819      	ldrb	r1, [r3, #0]
 8013b5a:	483d      	ldr	r0, [pc, #244]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b5c:	f000 fcc8 	bl	80144f0 <i2c_master_addressing>
 8013b60:	2c02      	cmp	r4, #2
 8013b62:	d803      	bhi.n	8013b6c <gd32_i2c_read+0x58>
 8013b64:	2100      	movs	r1, #0
 8013b66:	483a      	ldr	r0, [pc, #232]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b68:	f000 fcb0 	bl	80144cc <i2c_ack_config>
 8013b6c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013b70:	4f37      	ldr	r7, [pc, #220]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b72:	e009      	b.n	8013b88 <gd32_i2c_read+0x74>
 8013b74:	3e01      	subs	r6, #1
 8013b76:	d1d4      	bne.n	8013b22 <gd32_i2c_read+0xe>
 8013b78:	f7ff ff16 	bl	80139a8 <_stop>
 8013b7c:	e066      	b.n	8013c4c <gd32_i2c_read+0x138>
 8013b7e:	3e01      	subs	r6, #1
 8013b80:	d1e2      	bne.n	8013b48 <gd32_i2c_read+0x34>
 8013b82:	e7f9      	b.n	8013b78 <gd32_i2c_read+0x64>
 8013b84:	3e01      	subs	r6, #1
 8013b86:	d0f7      	beq.n	8013b78 <gd32_i2c_read+0x64>
 8013b88:	f240 5101 	movw	r1, #1281	; 0x501
 8013b8c:	4638      	mov	r0, r7
 8013b8e:	f000 fccb 	bl	8014528 <i2c_flag_get>
 8013b92:	2800      	cmp	r0, #0
 8013b94:	d0f6      	beq.n	8013b84 <gd32_i2c_read+0x70>
 8013b96:	f240 5101 	movw	r1, #1281	; 0x501
 8013b9a:	482d      	ldr	r0, [pc, #180]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013b9c:	f000 fccc 	bl	8014538 <i2c_flag_clear>
 8013ba0:	2c01      	cmp	r4, #1
 8013ba2:	d102      	bne.n	8013baa <gd32_i2c_read+0x96>
 8013ba4:	482a      	ldr	r0, [pc, #168]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013ba6:	f000 fcb5 	bl	8014514 <i2c_stop_on_bus>
 8013baa:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013bae:	4e28      	ldr	r6, [pc, #160]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013bb0:	e023      	b.n	8013bfa <gd32_i2c_read+0xe6>
 8013bb2:	2c03      	cmp	r4, #3
 8013bb4:	d135      	bne.n	8013c22 <gd32_i2c_read+0x10e>
 8013bb6:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013bba:	e002      	b.n	8013bc2 <gd32_i2c_read+0xae>
 8013bbc:	f1b9 0901 	subs.w	r9, r9, #1
 8013bc0:	d0da      	beq.n	8013b78 <gd32_i2c_read+0x64>
 8013bc2:	f240 5102 	movw	r1, #1282	; 0x502
 8013bc6:	4630      	mov	r0, r6
 8013bc8:	f000 fcae 	bl	8014528 <i2c_flag_get>
 8013bcc:	2800      	cmp	r0, #0
 8013bce:	d0f5      	beq.n	8013bbc <gd32_i2c_read+0xa8>
 8013bd0:	2100      	movs	r1, #0
 8013bd2:	4630      	mov	r0, r6
 8013bd4:	f000 fc7a 	bl	80144cc <i2c_ack_config>
 8013bd8:	f240 5106 	movw	r1, #1286	; 0x506
 8013bdc:	4630      	mov	r0, r6
 8013bde:	f000 fca3 	bl	8014528 <i2c_flag_get>
 8013be2:	b138      	cbz	r0, 8013bf4 <gd32_i2c_read+0xe0>
 8013be4:	4630      	mov	r0, r6
 8013be6:	f000 fc9c 	bl	8014522 <i2c_data_receive>
 8013bea:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013bee:	f808 0b01 	strb.w	r0, [r8], #1
 8013bf2:	3c01      	subs	r4, #1
 8013bf4:	3f01      	subs	r7, #1
 8013bf6:	2f00      	cmp	r7, #0
 8013bf8:	ddbe      	ble.n	8013b78 <gd32_i2c_read+0x64>
 8013bfa:	2c00      	cmp	r4, #0
 8013bfc:	d1d9      	bne.n	8013bb2 <gd32_i2c_read+0x9e>
 8013bfe:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013c02:	4915      	ldr	r1, [pc, #84]	; (8013c58 <gd32_i2c_read+0x144>)
 8013c04:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013c08:	0592      	lsls	r2, r2, #22
 8013c0a:	d41d      	bmi.n	8013c48 <gd32_i2c_read+0x134>
 8013c0c:	2101      	movs	r1, #1
 8013c0e:	4810      	ldr	r0, [pc, #64]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013c10:	f000 fc5c 	bl	80144cc <i2c_ack_config>
 8013c14:	2101      	movs	r1, #1
 8013c16:	480e      	ldr	r0, [pc, #56]	; (8013c50 <gd32_i2c_read+0x13c>)
 8013c18:	f000 fc61 	bl	80144de <i2c_ackpos_config>
 8013c1c:	4628      	mov	r0, r5
 8013c1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013c22:	2c02      	cmp	r4, #2
 8013c24:	d1d8      	bne.n	8013bd8 <gd32_i2c_read+0xc4>
 8013c26:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013c2a:	e002      	b.n	8013c32 <gd32_i2c_read+0x11e>
 8013c2c:	f1b9 0901 	subs.w	r9, r9, #1
 8013c30:	d0a2      	beq.n	8013b78 <gd32_i2c_read+0x64>
 8013c32:	f240 5102 	movw	r1, #1282	; 0x502
 8013c36:	4630      	mov	r0, r6
 8013c38:	f000 fc76 	bl	8014528 <i2c_flag_get>
 8013c3c:	2800      	cmp	r0, #0
 8013c3e:	d0f5      	beq.n	8013c2c <gd32_i2c_read+0x118>
 8013c40:	4630      	mov	r0, r6
 8013c42:	f000 fc67 	bl	8014514 <i2c_stop_on_bus>
 8013c46:	e7c7      	b.n	8013bd8 <gd32_i2c_read+0xc4>
 8013c48:	3b01      	subs	r3, #1
 8013c4a:	d1db      	bne.n	8013c04 <gd32_i2c_read+0xf0>
 8013c4c:	2504      	movs	r5, #4
 8013c4e:	e7e5      	b.n	8013c1c <gd32_i2c_read+0x108>
 8013c50:	40005400 	andmi	r5, r0, r0, lsl #8
 8013c54:	200125a4 	andcs	r2, r1, r4, lsr #11
 8013c58:	40005000 	andmi	r5, r0, r0

08013c5c <uart0_init>:
 8013c5c:	2301      	movs	r3, #1
 8013c5e:	b507      	push	{r0, r1, r2, lr}
 8013c60:	2208      	movs	r2, #8
 8013c62:	9300      	str	r3, [sp, #0]
 8013c64:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8013c68:	2300      	movs	r3, #0
 8013c6a:	4803      	ldr	r0, [pc, #12]	; (8013c78 <uart0_init+0x1c>)
 8013c6c:	f001 f916 	bl	8014e9c <gd32_uart_begin>
 8013c70:	b003      	add	sp, #12
 8013c72:	f85d fb04 	ldr.w	pc, [sp], #4
 8013c76:	bf00      	nop
 8013c78:	40013800 	andmi	r3, r1, r0, lsl #16

08013c7c <uart0_putc>:
 8013c7c:	280a      	cmp	r0, #10
 8013c7e:	b538      	push	{r3, r4, r5, lr}
 8013c80:	4604      	mov	r4, r0
 8013c82:	d10a      	bne.n	8013c9a <uart0_putc+0x1e>
 8013c84:	4d0b      	ldr	r5, [pc, #44]	; (8013cb4 <uart0_putc+0x38>)
 8013c86:	2107      	movs	r1, #7
 8013c88:	4628      	mov	r0, r5
 8013c8a:	f000 fffb 	bl	8014c84 <usart_flag_get>
 8013c8e:	2800      	cmp	r0, #0
 8013c90:	d0f9      	beq.n	8013c86 <uart0_putc+0xa>
 8013c92:	220d      	movs	r2, #13
 8013c94:	4b08      	ldr	r3, [pc, #32]	; (8013cb8 <uart0_putc+0x3c>)
 8013c96:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8013c9a:	4d06      	ldr	r5, [pc, #24]	; (8013cb4 <uart0_putc+0x38>)
 8013c9c:	2107      	movs	r1, #7
 8013c9e:	4628      	mov	r0, r5
 8013ca0:	f000 fff0 	bl	8014c84 <usart_flag_get>
 8013ca4:	2800      	cmp	r0, #0
 8013ca6:	d0f9      	beq.n	8013c9c <uart0_putc+0x20>
 8013ca8:	4b03      	ldr	r3, [pc, #12]	; (8013cb8 <uart0_putc+0x3c>)
 8013caa:	b2e4      	uxtb	r4, r4
 8013cac:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8013cb0:	bd38      	pop	{r3, r4, r5, pc}
 8013cb2:	bf00      	nop
 8013cb4:	40013800 	andmi	r3, r1, r0, lsl #16
 8013cb8:	40013000 	andmi	r3, r1, r0

08013cbc <uart0_puts>:
 8013cbc:	b510      	push	{r4, lr}
 8013cbe:	1e44      	subs	r4, r0, #1
 8013cc0:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013cc4:	b903      	cbnz	r3, 8013cc8 <uart0_puts+0xc>
 8013cc6:	bd10      	pop	{r4, pc}
 8013cc8:	2b0a      	cmp	r3, #10
 8013cca:	d102      	bne.n	8013cd2 <uart0_puts+0x16>
 8013ccc:	200d      	movs	r0, #13
 8013cce:	f7ff ffd5 	bl	8013c7c <uart0_putc>
 8013cd2:	7820      	ldrb	r0, [r4, #0]
 8013cd4:	f7ff ffd2 	bl	8013c7c <uart0_putc>
 8013cd8:	e7f2      	b.n	8013cc0 <uart0_puts+0x4>
	...

08013cdc <micros_init>:
 8013cdc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013cde:	2400      	movs	r4, #0
 8013ce0:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8013ce4:	4d22      	ldr	r5, [pc, #136]	; (8013d70 <micros_init+0x94>)
 8013ce6:	f240 6013 	movw	r0, #1555	; 0x613
 8013cea:	f000 fc38 	bl	801455e <rcu_periph_clock_enable>
 8013cee:	4628      	mov	r0, r5
 8013cf0:	f000 fd98 	bl	8014824 <timer_deinit>
 8013cf4:	4b1f      	ldr	r3, [pc, #124]	; (8013d74 <micros_init+0x98>)
 8013cf6:	4628      	mov	r0, r5
 8013cf8:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8013cfc:	4669      	mov	r1, sp
 8013cfe:	9400      	str	r4, [sp, #0]
 8013d00:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013d04:	9602      	str	r6, [sp, #8]
 8013d06:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013d0a:	f000 fe31 	bl	8014970 <timer_init>
 8013d0e:	4628      	mov	r0, r5
 8013d10:	4621      	mov	r1, r4
 8013d12:	f000 fedf 	bl	8014ad4 <timer_master_slave_mode_config>
 8013d16:	4628      	mov	r0, r5
 8013d18:	2107      	movs	r1, #7
 8013d1a:	f000 fed3 	bl	8014ac4 <timer_slave_mode_select>
 8013d1e:	2120      	movs	r1, #32
 8013d20:	4628      	mov	r0, r5
 8013d22:	f000 febf 	bl	8014aa4 <timer_input_trigger_source_select>
 8013d26:	4628      	mov	r0, r5
 8013d28:	f000 fe7a 	bl	8014a20 <timer_enable>
 8013d2c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013d30:	f240 6014 	movw	r0, #1556	; 0x614
 8013d34:	f000 fc13 	bl	801455e <rcu_periph_clock_enable>
 8013d38:	4628      	mov	r0, r5
 8013d3a:	f000 fd73 	bl	8014824 <timer_deinit>
 8013d3e:	2377      	movs	r3, #119	; 0x77
 8013d40:	626c      	str	r4, [r5, #36]	; 0x24
 8013d42:	4669      	mov	r1, sp
 8013d44:	4628      	mov	r0, r5
 8013d46:	9300      	str	r3, [sp, #0]
 8013d48:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013d4c:	9602      	str	r6, [sp, #8]
 8013d4e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013d52:	f000 fe0d 	bl	8014970 <timer_init>
 8013d56:	4621      	mov	r1, r4
 8013d58:	4628      	mov	r0, r5
 8013d5a:	f000 febb 	bl	8014ad4 <timer_master_slave_mode_config>
 8013d5e:	2120      	movs	r1, #32
 8013d60:	4628      	mov	r0, r5
 8013d62:	f000 fea7 	bl	8014ab4 <timer_master_output_trigger_source_select>
 8013d66:	4628      	mov	r0, r5
 8013d68:	f000 fe5a 	bl	8014a20 <timer_enable>
 8013d6c:	b004      	add	sp, #16
 8013d6e:	bd70      	pop	{r4, r5, r6, pc}
 8013d70:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013d74:	40014000 	andmi	r4, r1, r0

08013d78 <systick_config>:
 8013d78:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013d7c:	4b0b      	ldr	r3, [pc, #44]	; (8013dac <systick_config+0x34>)
 8013d7e:	681b      	ldr	r3, [r3, #0]
 8013d80:	fbb3 f3f2 	udiv	r3, r3, r2
 8013d84:	3b01      	subs	r3, #1
 8013d86:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8013d8a:	d20d      	bcs.n	8013da8 <systick_config+0x30>
 8013d8c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8013d90:	21f0      	movs	r1, #240	; 0xf0
 8013d92:	6153      	str	r3, [r2, #20]
 8013d94:	4b06      	ldr	r3, [pc, #24]	; (8013db0 <systick_config+0x38>)
 8013d96:	2007      	movs	r0, #7
 8013d98:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8013d9c:	2100      	movs	r1, #0
 8013d9e:	6191      	str	r1, [r2, #24]
 8013da0:	6110      	str	r0, [r2, #16]
 8013da2:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8013da6:	4770      	bx	lr
 8013da8:	e7fe      	b.n	8013da8 <systick_config+0x30>
 8013daa:	bf00      	nop
 8013dac:	200000e4 	andcs	r0, r0, r4, ror #1
 8013db0:	e000ed00 	and	lr, r0, r0, lsl #26

08013db4 <SysTick_Handler>:
 8013db4:	4a02      	ldr	r2, [pc, #8]	; (8013dc0 <SysTick_Handler+0xc>)
 8013db6:	6813      	ldr	r3, [r2, #0]
 8013db8:	3301      	adds	r3, #1
 8013dba:	6013      	str	r3, [r2, #0]
 8013dbc:	4770      	bx	lr
 8013dbe:	bf00      	nop
 8013dc0:	200125a8 	andcs	r2, r1, r8, lsr #11

08013dc4 <udelay_init>:
 8013dc4:	b508      	push	{r3, lr}
 8013dc6:	4b0d      	ldr	r3, [pc, #52]	; (8013dfc <udelay_init+0x38>)
 8013dc8:	681a      	ldr	r2, [r3, #0]
 8013dca:	4b0d      	ldr	r3, [pc, #52]	; (8013e00 <udelay_init+0x3c>)
 8013dcc:	429a      	cmp	r2, r3
 8013dce:	d005      	beq.n	8013ddc <udelay_init+0x18>
 8013dd0:	2122      	movs	r1, #34	; 0x22
 8013dd2:	4b0c      	ldr	r3, [pc, #48]	; (8013e04 <udelay_init+0x40>)
 8013dd4:	4a0c      	ldr	r2, [pc, #48]	; (8013e08 <udelay_init+0x44>)
 8013dd6:	480d      	ldr	r0, [pc, #52]	; (8013e0c <udelay_init+0x48>)
 8013dd8:	f7fe ffec 	bl	8012db4 <__assert_func>
 8013ddc:	4a0c      	ldr	r2, [pc, #48]	; (8013e10 <udelay_init+0x4c>)
 8013dde:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8013de2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8013de6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013dea:	2200      	movs	r2, #0
 8013dec:	4b09      	ldr	r3, [pc, #36]	; (8013e14 <udelay_init+0x50>)
 8013dee:	605a      	str	r2, [r3, #4]
 8013df0:	681a      	ldr	r2, [r3, #0]
 8013df2:	f042 0201 	orr.w	r2, r2, #1
 8013df6:	601a      	str	r2, [r3, #0]
 8013df8:	bd08      	pop	{r3, pc}
 8013dfa:	bf00      	nop
 8013dfc:	200000e4 	andcs	r0, r0, r4, ror #1
 8013e00:	07270e00 	streq	r0, [r7, -r0, lsl #28]!
 8013e04:	08018286 	stmdaeq	r1, {r1, r2, r7, r9, pc}
 8013e08:	080182b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, pc}
 8013e0c:	080182a8 	stmdaeq	r1, {r3, r5, r7, r9, pc}
 8013e10:	e000ed00 	and	lr, r0, r0, lsl #26
 8013e14:	e0001000 	and	r1, r0, r0

08013e18 <udelay>:
 8013e18:	2378      	movs	r3, #120	; 0x78
 8013e1a:	4358      	muls	r0, r3
 8013e1c:	2300      	movs	r3, #0
 8013e1e:	b510      	push	{r4, lr}
 8013e20:	4c07      	ldr	r4, [pc, #28]	; (8013e40 <udelay+0x28>)
 8013e22:	6861      	ldr	r1, [r4, #4]
 8013e24:	6862      	ldr	r2, [r4, #4]
 8013e26:	4291      	cmp	r1, r2
 8013e28:	d0fc      	beq.n	8013e24 <udelay+0xc>
 8013e2a:	bf28      	it	cs
 8013e2c:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8013e30:	1a5b      	subs	r3, r3, r1
 8013e32:	4413      	add	r3, r2
 8013e34:	4283      	cmp	r3, r0
 8013e36:	d300      	bcc.n	8013e3a <udelay+0x22>
 8013e38:	bd10      	pop	{r4, pc}
 8013e3a:	4611      	mov	r1, r2
 8013e3c:	e7f2      	b.n	8013e24 <udelay+0xc>
 8013e3e:	bf00      	nop
 8013e40:	e0001000 	and	r1, r0, r0

08013e44 <SystemInit>:
 8013e44:	4b3a      	ldr	r3, [pc, #232]	; (8013f30 <SystemInit+0xec>)
 8013e46:	681a      	ldr	r2, [r3, #0]
 8013e48:	f042 0201 	orr.w	r2, r2, #1
 8013e4c:	601a      	str	r2, [r3, #0]
 8013e4e:	6859      	ldr	r1, [r3, #4]
 8013e50:	4a38      	ldr	r2, [pc, #224]	; (8013f34 <SystemInit+0xf0>)
 8013e52:	400a      	ands	r2, r1
 8013e54:	605a      	str	r2, [r3, #4]
 8013e56:	681a      	ldr	r2, [r3, #0]
 8013e58:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8013e5c:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8013e60:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8013e64:	601a      	str	r2, [r3, #0]
 8013e66:	681a      	ldr	r2, [r3, #0]
 8013e68:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8013e6c:	601a      	str	r2, [r3, #0]
 8013e6e:	685a      	ldr	r2, [r3, #4]
 8013e70:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8013e74:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013e78:	605a      	str	r2, [r3, #4]
 8013e7a:	681a      	ldr	r2, [r3, #0]
 8013e7c:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8013e80:	601a      	str	r2, [r3, #0]
 8013e82:	2200      	movs	r2, #0
 8013e84:	62da      	str	r2, [r3, #44]	; 0x2c
 8013e86:	6099      	str	r1, [r3, #8]
 8013e88:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8013e8c:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8013e90:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8013e94:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8013e98:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8013e9c:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8013ea0:	4a25      	ldr	r2, [pc, #148]	; (8013f38 <SystemInit+0xf4>)
 8013ea2:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8013ea6:	681a      	ldr	r2, [r3, #0]
 8013ea8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8013eac:	601a      	str	r2, [r3, #0]
 8013eae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013eb2:	6819      	ldr	r1, [r3, #0]
 8013eb4:	0389      	lsls	r1, r1, #14
 8013eb6:	d401      	bmi.n	8013ebc <SystemInit+0x78>
 8013eb8:	3a01      	subs	r2, #1
 8013eba:	d1fa      	bne.n	8013eb2 <SystemInit+0x6e>
 8013ebc:	681a      	ldr	r2, [r3, #0]
 8013ebe:	0392      	lsls	r2, r2, #14
 8013ec0:	d400      	bmi.n	8013ec4 <SystemInit+0x80>
 8013ec2:	e7fe      	b.n	8013ec2 <SystemInit+0x7e>
 8013ec4:	685a      	ldr	r2, [r3, #4]
 8013ec6:	605a      	str	r2, [r3, #4]
 8013ec8:	685a      	ldr	r2, [r3, #4]
 8013eca:	605a      	str	r2, [r3, #4]
 8013ecc:	685a      	ldr	r2, [r3, #4]
 8013ece:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8013ed2:	605a      	str	r2, [r3, #4]
 8013ed4:	685a      	ldr	r2, [r3, #4]
 8013ed6:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8013eda:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013ede:	605a      	str	r2, [r3, #4]
 8013ee0:	685a      	ldr	r2, [r3, #4]
 8013ee2:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8013ee6:	605a      	str	r2, [r3, #4]
 8013ee8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8013eea:	4a14      	ldr	r2, [pc, #80]	; (8013f3c <SystemInit+0xf8>)
 8013eec:	400a      	ands	r2, r1
 8013eee:	62da      	str	r2, [r3, #44]	; 0x2c
 8013ef0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013ef2:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8013ef6:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8013efa:	62da      	str	r2, [r3, #44]	; 0x2c
 8013efc:	681a      	ldr	r2, [r3, #0]
 8013efe:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8013f02:	601a      	str	r2, [r3, #0]
 8013f04:	681a      	ldr	r2, [r3, #0]
 8013f06:	0110      	lsls	r0, r2, #4
 8013f08:	d5fc      	bpl.n	8013f04 <SystemInit+0xc0>
 8013f0a:	681a      	ldr	r2, [r3, #0]
 8013f0c:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8013f10:	601a      	str	r2, [r3, #0]
 8013f12:	681a      	ldr	r2, [r3, #0]
 8013f14:	0191      	lsls	r1, r2, #6
 8013f16:	d5fc      	bpl.n	8013f12 <SystemInit+0xce>
 8013f18:	685a      	ldr	r2, [r3, #4]
 8013f1a:	f022 0203 	bic.w	r2, r2, #3
 8013f1e:	605a      	str	r2, [r3, #4]
 8013f20:	685a      	ldr	r2, [r3, #4]
 8013f22:	f042 0202 	orr.w	r2, r2, #2
 8013f26:	605a      	str	r2, [r3, #4]
 8013f28:	685a      	ldr	r2, [r3, #4]
 8013f2a:	0712      	lsls	r2, r2, #28
 8013f2c:	d5fc      	bpl.n	8013f28 <SystemInit+0xe4>
 8013f2e:	4770      	bx	lr
 8013f30:	40021000 	andmi	r1, r2, r0
 8013f34:	e0ff000c 	rscs	r0, pc, ip
 8013f38:	20003010 	andcs	r3, r0, r0, lsl r0
 8013f3c:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08013f40 <adc_mode_config>:
 8013f40:	4b06      	ldr	r3, [pc, #24]	; (8013f5c <adc_mode_config+0x1c>)
 8013f42:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8013f46:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8013f4a:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8013f4e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013f52:	4302      	orrs	r2, r0
 8013f54:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013f58:	4770      	bx	lr
 8013f5a:	bf00      	nop
 8013f5c:	40012000 	andmi	r2, r1, r0

08013f60 <adc_special_function_config>:
 8013f60:	b510      	push	{r4, lr}
 8013f62:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8013f66:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8013f6a:	f001 0102 	and.w	r1, r1, #2
 8013f6e:	b17a      	cbz	r2, 8013f90 <adc_special_function_config+0x30>
 8013f70:	b11b      	cbz	r3, 8013f7a <adc_special_function_config+0x1a>
 8013f72:	6843      	ldr	r3, [r0, #4]
 8013f74:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013f78:	6043      	str	r3, [r0, #4]
 8013f7a:	b11c      	cbz	r4, 8013f84 <adc_special_function_config+0x24>
 8013f7c:	6843      	ldr	r3, [r0, #4]
 8013f7e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8013f82:	6043      	str	r3, [r0, #4]
 8013f84:	b119      	cbz	r1, 8013f8e <adc_special_function_config+0x2e>
 8013f86:	6883      	ldr	r3, [r0, #8]
 8013f88:	f043 0302 	orr.w	r3, r3, #2
 8013f8c:	6083      	str	r3, [r0, #8]
 8013f8e:	bd10      	pop	{r4, pc}
 8013f90:	b11b      	cbz	r3, 8013f9a <adc_special_function_config+0x3a>
 8013f92:	6843      	ldr	r3, [r0, #4]
 8013f94:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013f98:	6043      	str	r3, [r0, #4]
 8013f9a:	b11c      	cbz	r4, 8013fa4 <adc_special_function_config+0x44>
 8013f9c:	6843      	ldr	r3, [r0, #4]
 8013f9e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8013fa2:	6043      	str	r3, [r0, #4]
 8013fa4:	2900      	cmp	r1, #0
 8013fa6:	d0f2      	beq.n	8013f8e <adc_special_function_config+0x2e>
 8013fa8:	6883      	ldr	r3, [r0, #8]
 8013faa:	f023 0302 	bic.w	r3, r3, #2
 8013fae:	e7ed      	b.n	8013f8c <adc_special_function_config+0x2c>

08013fb0 <adc_data_alignment_config>:
 8013fb0:	6883      	ldr	r3, [r0, #8]
 8013fb2:	b119      	cbz	r1, 8013fbc <adc_data_alignment_config+0xc>
 8013fb4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013fb8:	6083      	str	r3, [r0, #8]
 8013fba:	4770      	bx	lr
 8013fbc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013fc0:	e7fa      	b.n	8013fb8 <adc_data_alignment_config+0x8>

08013fc2 <adc_enable>:
 8013fc2:	6883      	ldr	r3, [r0, #8]
 8013fc4:	07db      	lsls	r3, r3, #31
 8013fc6:	bf5e      	ittt	pl
 8013fc8:	6883      	ldrpl	r3, [r0, #8]
 8013fca:	f043 0301 	orrpl.w	r3, r3, #1
 8013fce:	6083      	strpl	r3, [r0, #8]
 8013fd0:	4770      	bx	lr

08013fd2 <adc_calibration_enable>:
 8013fd2:	6883      	ldr	r3, [r0, #8]
 8013fd4:	f100 0208 	add.w	r2, r0, #8
 8013fd8:	f043 0308 	orr.w	r3, r3, #8
 8013fdc:	6083      	str	r3, [r0, #8]
 8013fde:	6813      	ldr	r3, [r2, #0]
 8013fe0:	0719      	lsls	r1, r3, #28
 8013fe2:	d4fc      	bmi.n	8013fde <adc_calibration_enable+0xc>
 8013fe4:	6883      	ldr	r3, [r0, #8]
 8013fe6:	f043 0304 	orr.w	r3, r3, #4
 8013fea:	6083      	str	r3, [r0, #8]
 8013fec:	6813      	ldr	r3, [r2, #0]
 8013fee:	075b      	lsls	r3, r3, #29
 8013ff0:	d4fc      	bmi.n	8013fec <adc_calibration_enable+0x1a>
 8013ff2:	4770      	bx	lr

08013ff4 <adc_tempsensor_vrefint_enable>:
 8013ff4:	4a03      	ldr	r2, [pc, #12]	; (8014004 <adc_tempsensor_vrefint_enable+0x10>)
 8013ff6:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8013ffa:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8013ffe:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8014002:	4770      	bx	lr
 8014004:	40012000 	andmi	r2, r1, r0

08014008 <adc_channel_length_config>:
 8014008:	2901      	cmp	r1, #1
 801400a:	d002      	beq.n	8014012 <adc_channel_length_config+0xa>
 801400c:	2902      	cmp	r1, #2
 801400e:	d00c      	beq.n	801402a <adc_channel_length_config+0x22>
 8014010:	4770      	bx	lr
 8014012:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014014:	3a01      	subs	r2, #1
 8014016:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 801401a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801401c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801401e:	0512      	lsls	r2, r2, #20
 8014020:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8014024:	431a      	orrs	r2, r3
 8014026:	62c2      	str	r2, [r0, #44]	; 0x2c
 8014028:	4770      	bx	lr
 801402a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801402c:	3a01      	subs	r2, #1
 801402e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8014032:	6383      	str	r3, [r0, #56]	; 0x38
 8014034:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014036:	0512      	lsls	r2, r2, #20
 8014038:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 801403c:	431a      	orrs	r2, r3
 801403e:	6382      	str	r2, [r0, #56]	; 0x38
 8014040:	4770      	bx	lr

08014042 <adc_inserted_channel_config>:
 8014042:	b530      	push	{r4, r5, lr}
 8014044:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8014046:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014048:	f3c4 5401 	ubfx	r4, r4, #20, #2
 801404c:	1a61      	subs	r1, r4, r1
 801404e:	f06f 0404 	mvn.w	r4, #4
 8014052:	4361      	muls	r1, r4
 8014054:	241f      	movs	r4, #31
 8014056:	310f      	adds	r1, #15
 8014058:	408c      	lsls	r4, r1
 801405a:	ea25 0504 	bic.w	r5, r5, r4
 801405e:	fa02 f101 	lsl.w	r1, r2, r1
 8014062:	4329      	orrs	r1, r5
 8014064:	2a09      	cmp	r2, #9
 8014066:	6381      	str	r1, [r0, #56]	; 0x38
 8014068:	d80b      	bhi.n	8014082 <adc_inserted_channel_config+0x40>
 801406a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 801406e:	2207      	movs	r2, #7
 8014070:	6904      	ldr	r4, [r0, #16]
 8014072:	408a      	lsls	r2, r1
 8014074:	ea24 0402 	bic.w	r4, r4, r2
 8014078:	fa03 f201 	lsl.w	r2, r3, r1
 801407c:	4322      	orrs	r2, r4
 801407e:	6102      	str	r2, [r0, #16]
 8014080:	bd30      	pop	{r4, r5, pc}
 8014082:	2a11      	cmp	r2, #17
 8014084:	d8fc      	bhi.n	8014080 <adc_inserted_channel_config+0x3e>
 8014086:	2407      	movs	r4, #7
 8014088:	3a0a      	subs	r2, #10
 801408a:	68c1      	ldr	r1, [r0, #12]
 801408c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014090:	4094      	lsls	r4, r2
 8014092:	ea21 0104 	bic.w	r1, r1, r4
 8014096:	fa03 f202 	lsl.w	r2, r3, r2
 801409a:	430a      	orrs	r2, r1
 801409c:	60c2      	str	r2, [r0, #12]
 801409e:	e7ef      	b.n	8014080 <adc_inserted_channel_config+0x3e>

080140a0 <adc_external_trigger_source_config>:
 80140a0:	2901      	cmp	r1, #1
 80140a2:	d002      	beq.n	80140aa <adc_external_trigger_source_config+0xa>
 80140a4:	2902      	cmp	r1, #2
 80140a6:	d008      	beq.n	80140ba <adc_external_trigger_source_config+0x1a>
 80140a8:	4770      	bx	lr
 80140aa:	6883      	ldr	r3, [r0, #8]
 80140ac:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80140b0:	6083      	str	r3, [r0, #8]
 80140b2:	6883      	ldr	r3, [r0, #8]
 80140b4:	431a      	orrs	r2, r3
 80140b6:	6082      	str	r2, [r0, #8]
 80140b8:	4770      	bx	lr
 80140ba:	6883      	ldr	r3, [r0, #8]
 80140bc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80140c0:	e7f6      	b.n	80140b0 <adc_external_trigger_source_config+0x10>

080140c2 <adc_external_trigger_config>:
 80140c2:	f001 0301 	and.w	r3, r1, #1
 80140c6:	f001 0102 	and.w	r1, r1, #2
 80140ca:	b152      	cbz	r2, 80140e2 <adc_external_trigger_config+0x20>
 80140cc:	b11b      	cbz	r3, 80140d6 <adc_external_trigger_config+0x14>
 80140ce:	6883      	ldr	r3, [r0, #8]
 80140d0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80140d4:	6083      	str	r3, [r0, #8]
 80140d6:	b119      	cbz	r1, 80140e0 <adc_external_trigger_config+0x1e>
 80140d8:	6883      	ldr	r3, [r0, #8]
 80140da:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80140de:	6083      	str	r3, [r0, #8]
 80140e0:	4770      	bx	lr
 80140e2:	b11b      	cbz	r3, 80140ec <adc_external_trigger_config+0x2a>
 80140e4:	6883      	ldr	r3, [r0, #8]
 80140e6:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80140ea:	6083      	str	r3, [r0, #8]
 80140ec:	2900      	cmp	r1, #0
 80140ee:	d0f7      	beq.n	80140e0 <adc_external_trigger_config+0x1e>
 80140f0:	6883      	ldr	r3, [r0, #8]
 80140f2:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80140f6:	e7f2      	b.n	80140de <adc_external_trigger_config+0x1c>

080140f8 <adc_software_trigger_enable>:
 80140f8:	07ca      	lsls	r2, r1, #31
 80140fa:	bf42      	ittt	mi
 80140fc:	6883      	ldrmi	r3, [r0, #8]
 80140fe:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8014102:	6083      	strmi	r3, [r0, #8]
 8014104:	078b      	lsls	r3, r1, #30
 8014106:	bf42      	ittt	mi
 8014108:	6883      	ldrmi	r3, [r0, #8]
 801410a:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 801410e:	6083      	strmi	r3, [r0, #8]
 8014110:	4770      	bx	lr
	...

08014114 <dma_deinit>:
 8014114:	2314      	movs	r3, #20
 8014116:	fb03 0301 	mla	r3, r3, r1, r0
 801411a:	689a      	ldr	r2, [r3, #8]
 801411c:	b530      	push	{r4, r5, lr}
 801411e:	f022 0201 	bic.w	r2, r2, #1
 8014122:	609a      	str	r2, [r3, #8]
 8014124:	2200      	movs	r2, #0
 8014126:	609a      	str	r2, [r3, #8]
 8014128:	60da      	str	r2, [r3, #12]
 801412a:	611a      	str	r2, [r3, #16]
 801412c:	615a      	str	r2, [r3, #20]
 801412e:	230f      	movs	r3, #15
 8014130:	6844      	ldr	r4, [r0, #4]
 8014132:	008d      	lsls	r5, r1, #2
 8014134:	40ab      	lsls	r3, r5
 8014136:	4323      	orrs	r3, r4
 8014138:	6043      	str	r3, [r0, #4]
 801413a:	4b04      	ldr	r3, [pc, #16]	; (801414c <dma_deinit+0x38>)
 801413c:	4298      	cmp	r0, r3
 801413e:	d103      	bne.n	8014148 <dma_deinit+0x34>
 8014140:	2905      	cmp	r1, #5
 8014142:	bf08      	it	eq
 8014144:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8014148:	bd30      	pop	{r4, r5, pc}
 801414a:	bf00      	nop
 801414c:	40020400 	andmi	r0, r2, r0, lsl #8

08014150 <dma_init>:
 8014150:	2314      	movs	r3, #20
 8014152:	fb03 0101 	mla	r1, r3, r1, r0
 8014156:	6813      	ldr	r3, [r2, #0]
 8014158:	b510      	push	{r4, lr}
 801415a:	610b      	str	r3, [r1, #16]
 801415c:	6893      	ldr	r3, [r2, #8]
 801415e:	614b      	str	r3, [r1, #20]
 8014160:	8a13      	ldrh	r3, [r2, #16]
 8014162:	60cb      	str	r3, [r1, #12]
 8014164:	68d4      	ldr	r4, [r2, #12]
 8014166:	6853      	ldr	r3, [r2, #4]
 8014168:	6888      	ldr	r0, [r1, #8]
 801416a:	4323      	orrs	r3, r4
 801416c:	6954      	ldr	r4, [r2, #20]
 801416e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8014172:	4323      	orrs	r3, r4
 8014174:	4303      	orrs	r3, r0
 8014176:	608b      	str	r3, [r1, #8]
 8014178:	7e13      	ldrb	r3, [r2, #24]
 801417a:	2b01      	cmp	r3, #1
 801417c:	688b      	ldr	r3, [r1, #8]
 801417e:	bf0c      	ite	eq
 8014180:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8014184:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8014188:	608b      	str	r3, [r1, #8]
 801418a:	7e53      	ldrb	r3, [r2, #25]
 801418c:	2b01      	cmp	r3, #1
 801418e:	688b      	ldr	r3, [r1, #8]
 8014190:	bf0c      	ite	eq
 8014192:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8014196:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 801419a:	608b      	str	r3, [r1, #8]
 801419c:	7e93      	ldrb	r3, [r2, #26]
 801419e:	b923      	cbnz	r3, 80141aa <dma_init+0x5a>
 80141a0:	688b      	ldr	r3, [r1, #8]
 80141a2:	f023 0310 	bic.w	r3, r3, #16
 80141a6:	608b      	str	r3, [r1, #8]
 80141a8:	bd10      	pop	{r4, pc}
 80141aa:	688b      	ldr	r3, [r1, #8]
 80141ac:	f043 0310 	orr.w	r3, r3, #16
 80141b0:	e7f9      	b.n	80141a6 <dma_init+0x56>

080141b2 <dma_circulation_disable>:
 80141b2:	2314      	movs	r3, #20
 80141b4:	4359      	muls	r1, r3
 80141b6:	3008      	adds	r0, #8
 80141b8:	580b      	ldr	r3, [r1, r0]
 80141ba:	f023 0320 	bic.w	r3, r3, #32
 80141be:	500b      	str	r3, [r1, r0]
 80141c0:	4770      	bx	lr

080141c2 <dma_memory_to_memory_disable>:
 80141c2:	2314      	movs	r3, #20
 80141c4:	4359      	muls	r1, r3
 80141c6:	3008      	adds	r0, #8
 80141c8:	580b      	ldr	r3, [r1, r0]
 80141ca:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80141ce:	500b      	str	r3, [r1, r0]
 80141d0:	4770      	bx	lr
	...

080141d4 <fmc_bank0_unlock>:
 80141d4:	4b04      	ldr	r3, [pc, #16]	; (80141e8 <fmc_bank0_unlock+0x14>)
 80141d6:	691a      	ldr	r2, [r3, #16]
 80141d8:	0612      	lsls	r2, r2, #24
 80141da:	bf41      	itttt	mi
 80141dc:	4a03      	ldrmi	r2, [pc, #12]	; (80141ec <fmc_bank0_unlock+0x18>)
 80141de:	605a      	strmi	r2, [r3, #4]
 80141e0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80141e4:	605a      	strmi	r2, [r3, #4]
 80141e6:	4770      	bx	lr
 80141e8:	40022000 	andmi	r2, r2, r0
 80141ec:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080141f0 <fmc_bank1_unlock>:
 80141f0:	4b04      	ldr	r3, [pc, #16]	; (8014204 <fmc_bank1_unlock+0x14>)
 80141f2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80141f4:	0612      	lsls	r2, r2, #24
 80141f6:	bf41      	itttt	mi
 80141f8:	4a03      	ldrmi	r2, [pc, #12]	; (8014208 <fmc_bank1_unlock+0x18>)
 80141fa:	645a      	strmi	r2, [r3, #68]	; 0x44
 80141fc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8014200:	645a      	strmi	r2, [r3, #68]	; 0x44
 8014202:	4770      	bx	lr
 8014204:	40022000 	andmi	r2, r2, r0
 8014208:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801420c <fmc_bank0_lock>:
 801420c:	4a02      	ldr	r2, [pc, #8]	; (8014218 <fmc_bank0_lock+0xc>)
 801420e:	6913      	ldr	r3, [r2, #16]
 8014210:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014214:	6113      	str	r3, [r2, #16]
 8014216:	4770      	bx	lr
 8014218:	40022000 	andmi	r2, r2, r0

0801421c <fmc_bank1_lock>:
 801421c:	4a02      	ldr	r2, [pc, #8]	; (8014228 <fmc_bank1_lock+0xc>)
 801421e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8014220:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014224:	6513      	str	r3, [r2, #80]	; 0x50
 8014226:	4770      	bx	lr
 8014228:	40022000 	andmi	r2, r2, r0

0801422c <fmc_bank0_state_get>:
 801422c:	4b08      	ldr	r3, [pc, #32]	; (8014250 <fmc_bank0_state_get+0x24>)
 801422e:	68da      	ldr	r2, [r3, #12]
 8014230:	07d1      	lsls	r1, r2, #31
 8014232:	d409      	bmi.n	8014248 <fmc_bank0_state_get+0x1c>
 8014234:	68da      	ldr	r2, [r3, #12]
 8014236:	06d2      	lsls	r2, r2, #27
 8014238:	d408      	bmi.n	801424c <fmc_bank0_state_get+0x20>
 801423a:	68db      	ldr	r3, [r3, #12]
 801423c:	f013 0f04 	tst.w	r3, #4
 8014240:	bf0c      	ite	eq
 8014242:	2000      	moveq	r0, #0
 8014244:	2002      	movne	r0, #2
 8014246:	4770      	bx	lr
 8014248:	2001      	movs	r0, #1
 801424a:	4770      	bx	lr
 801424c:	2003      	movs	r0, #3
 801424e:	4770      	bx	lr
 8014250:	40022000 	andmi	r2, r2, r0

08014254 <fmc_bank1_state_get>:
 8014254:	4b08      	ldr	r3, [pc, #32]	; (8014278 <fmc_bank1_state_get+0x24>)
 8014256:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8014258:	07d1      	lsls	r1, r2, #31
 801425a:	d409      	bmi.n	8014270 <fmc_bank1_state_get+0x1c>
 801425c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801425e:	06d2      	lsls	r2, r2, #27
 8014260:	d408      	bmi.n	8014274 <fmc_bank1_state_get+0x20>
 8014262:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014264:	f013 0f04 	tst.w	r3, #4
 8014268:	bf0c      	ite	eq
 801426a:	2000      	moveq	r0, #0
 801426c:	2002      	movne	r0, #2
 801426e:	4770      	bx	lr
 8014270:	2001      	movs	r0, #1
 8014272:	4770      	bx	lr
 8014274:	2003      	movs	r0, #3
 8014276:	4770      	bx	lr
 8014278:	40022000 	andmi	r2, r2, r0

0801427c <fwdgt_enable>:
 801427c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8014280:	4b01      	ldr	r3, [pc, #4]	; (8014288 <fwdgt_enable+0xc>)
 8014282:	601a      	str	r2, [r3, #0]
 8014284:	4770      	bx	lr
 8014286:	bf00      	nop
 8014288:	40003000 	andmi	r3, r0, r0

0801428c <fwdgt_counter_reload>:
 801428c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8014290:	4b01      	ldr	r3, [pc, #4]	; (8014298 <fwdgt_counter_reload+0xc>)
 8014292:	601a      	str	r2, [r3, #0]
 8014294:	4770      	bx	lr
 8014296:	bf00      	nop
 8014298:	40003000 	andmi	r3, r0, r0

0801429c <fwdgt_config>:
 801429c:	f245 5355 	movw	r3, #21845	; 0x5555
 80142a0:	4a11      	ldr	r2, [pc, #68]	; (80142e8 <fwdgt_config+0x4c>)
 80142a2:	b510      	push	{r4, lr}
 80142a4:	4c11      	ldr	r4, [pc, #68]	; (80142ec <fwdgt_config+0x50>)
 80142a6:	6013      	str	r3, [r2, #0]
 80142a8:	68d3      	ldr	r3, [r2, #12]
 80142aa:	3c01      	subs	r4, #1
 80142ac:	f003 0301 	and.w	r3, r3, #1
 80142b0:	d013      	beq.n	80142da <fwdgt_config+0x3e>
 80142b2:	2b00      	cmp	r3, #0
 80142b4:	d1f8      	bne.n	80142a8 <fwdgt_config+0xc>
 80142b6:	6051      	str	r1, [r2, #4]
 80142b8:	490c      	ldr	r1, [pc, #48]	; (80142ec <fwdgt_config+0x50>)
 80142ba:	4a0b      	ldr	r2, [pc, #44]	; (80142e8 <fwdgt_config+0x4c>)
 80142bc:	68d3      	ldr	r3, [r2, #12]
 80142be:	3901      	subs	r1, #1
 80142c0:	f003 0302 	and.w	r3, r3, #2
 80142c4:	d00d      	beq.n	80142e2 <fwdgt_config+0x46>
 80142c6:	2b00      	cmp	r3, #0
 80142c8:	d1f8      	bne.n	80142bc <fwdgt_config+0x20>
 80142ca:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80142ce:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80142d2:	6090      	str	r0, [r2, #8]
 80142d4:	2001      	movs	r0, #1
 80142d6:	6013      	str	r3, [r2, #0]
 80142d8:	e002      	b.n	80142e0 <fwdgt_config+0x44>
 80142da:	2b00      	cmp	r3, #0
 80142dc:	d0eb      	beq.n	80142b6 <fwdgt_config+0x1a>
 80142de:	2000      	movs	r0, #0
 80142e0:	bd10      	pop	{r4, pc}
 80142e2:	2b00      	cmp	r3, #0
 80142e4:	d1fb      	bne.n	80142de <fwdgt_config+0x42>
 80142e6:	e7f0      	b.n	80142ca <fwdgt_config+0x2e>
 80142e8:	40003000 	andmi	r3, r0, r0
 80142ec:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080142f0 <gpio_init>:
 80142f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80142f4:	f04f 0c0f 	mov.w	ip, #15
 80142f8:	06cf      	lsls	r7, r1, #27
 80142fa:	f04f 0400 	mov.w	r4, #0
 80142fe:	f04f 0701 	mov.w	r7, #1
 8014302:	f001 050f 	and.w	r5, r1, #15
 8014306:	bf48      	it	mi
 8014308:	4315      	orrmi	r5, r2
 801430a:	fa23 f204 	lsr.w	r2, r3, r4
 801430e:	07d6      	lsls	r6, r2, #31
 8014310:	d510      	bpl.n	8014334 <gpio_init+0x44>
 8014312:	00a2      	lsls	r2, r4, #2
 8014314:	6806      	ldr	r6, [r0, #0]
 8014316:	fa0c fe02 	lsl.w	lr, ip, r2
 801431a:	ea26 060e 	bic.w	r6, r6, lr
 801431e:	fa05 f202 	lsl.w	r2, r5, r2
 8014322:	2928      	cmp	r1, #40	; 0x28
 8014324:	ea42 0206 	orr.w	r2, r2, r6
 8014328:	d128      	bne.n	801437c <gpio_init+0x8c>
 801432a:	fa07 f604 	lsl.w	r6, r7, r4
 801432e:	401e      	ands	r6, r3
 8014330:	6146      	str	r6, [r0, #20]
 8014332:	6002      	str	r2, [r0, #0]
 8014334:	3401      	adds	r4, #1
 8014336:	2c08      	cmp	r4, #8
 8014338:	d1e7      	bne.n	801430a <gpio_init+0x1a>
 801433a:	2600      	movs	r6, #0
 801433c:	f04f 0c0f 	mov.w	ip, #15
 8014340:	2701      	movs	r7, #1
 8014342:	f106 0208 	add.w	r2, r6, #8
 8014346:	fa23 f402 	lsr.w	r4, r3, r2
 801434a:	07e4      	lsls	r4, r4, #31
 801434c:	d511      	bpl.n	8014372 <gpio_init+0x82>
 801434e:	00b4      	lsls	r4, r6, #2
 8014350:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8014354:	fa0c f804 	lsl.w	r8, ip, r4
 8014358:	ea2e 0e08 	bic.w	lr, lr, r8
 801435c:	fa05 f404 	lsl.w	r4, r5, r4
 8014360:	2928      	cmp	r1, #40	; 0x28
 8014362:	ea44 040e 	orr.w	r4, r4, lr
 8014366:	d110      	bne.n	801438a <gpio_init+0x9a>
 8014368:	fa07 f202 	lsl.w	r2, r7, r2
 801436c:	401a      	ands	r2, r3
 801436e:	6142      	str	r2, [r0, #20]
 8014370:	6044      	str	r4, [r0, #4]
 8014372:	3601      	adds	r6, #1
 8014374:	2e08      	cmp	r6, #8
 8014376:	d1e4      	bne.n	8014342 <gpio_init+0x52>
 8014378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801437c:	2948      	cmp	r1, #72	; 0x48
 801437e:	bf02      	ittt	eq
 8014380:	fa07 f604 	lsleq.w	r6, r7, r4
 8014384:	401e      	andeq	r6, r3
 8014386:	6106      	streq	r6, [r0, #16]
 8014388:	e7d3      	b.n	8014332 <gpio_init+0x42>
 801438a:	2948      	cmp	r1, #72	; 0x48
 801438c:	bf02      	ittt	eq
 801438e:	fa07 f202 	lsleq.w	r2, r7, r2
 8014392:	401a      	andeq	r2, r3
 8014394:	6102      	streq	r2, [r0, #16]
 8014396:	e7eb      	b.n	8014370 <gpio_init+0x80>

08014398 <gpio_pin_remap_config>:
 8014398:	2800      	cmp	r0, #0
 801439a:	4a16      	ldr	r2, [pc, #88]	; (80143f4 <gpio_pin_remap_config+0x5c>)
 801439c:	b530      	push	{r4, r5, lr}
 801439e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80143a2:	bfb4      	ite	lt
 80143a4:	69d3      	ldrlt	r3, [r2, #28]
 80143a6:	6853      	ldrge	r3, [r2, #4]
 80143a8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80143ac:	b284      	uxth	r4, r0
 80143ae:	d110      	bne.n	80143d2 <gpio_pin_remap_config+0x3a>
 80143b0:	6855      	ldr	r5, [r2, #4]
 80143b2:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80143b6:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80143ba:	6055      	str	r5, [r2, #4]
 80143bc:	b119      	cbz	r1, 80143c6 <gpio_pin_remap_config+0x2e>
 80143be:	0d42      	lsrs	r2, r0, #21
 80143c0:	0112      	lsls	r2, r2, #4
 80143c2:	4094      	lsls	r4, r2
 80143c4:	4323      	orrs	r3, r4
 80143c6:	4a0b      	ldr	r2, [pc, #44]	; (80143f4 <gpio_pin_remap_config+0x5c>)
 80143c8:	2800      	cmp	r0, #0
 80143ca:	bfb4      	ite	lt
 80143cc:	61d3      	strlt	r3, [r2, #28]
 80143ce:	6053      	strge	r3, [r2, #4]
 80143d0:	bd30      	pop	{r4, r5, pc}
 80143d2:	02c2      	lsls	r2, r0, #11
 80143d4:	bf4d      	iteet	mi
 80143d6:	2203      	movmi	r2, #3
 80143d8:	0d42      	lsrpl	r2, r0, #21
 80143da:	0112      	lslpl	r2, r2, #4
 80143dc:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80143e0:	bf4c      	ite	mi
 80143e2:	40aa      	lslmi	r2, r5
 80143e4:	fa04 f202 	lslpl.w	r2, r4, r2
 80143e8:	ea23 0302 	bic.w	r3, r3, r2
 80143ec:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80143f0:	e7e4      	b.n	80143bc <gpio_pin_remap_config+0x24>
 80143f2:	bf00      	nop
 80143f4:	40010000 	andmi	r0, r1, r0

080143f8 <gpio_ethernet_phy_select>:
 80143f8:	4b04      	ldr	r3, [pc, #16]	; (801440c <gpio_ethernet_phy_select+0x14>)
 80143fa:	6859      	ldr	r1, [r3, #4]
 80143fc:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8014400:	6059      	str	r1, [r3, #4]
 8014402:	685a      	ldr	r2, [r3, #4]
 8014404:	4302      	orrs	r2, r0
 8014406:	605a      	str	r2, [r3, #4]
 8014408:	4770      	bx	lr
 801440a:	bf00      	nop
 801440c:	40010000 	andmi	r0, r1, r0

08014410 <i2c_clock_config>:
 8014410:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014412:	4605      	mov	r5, r0
 8014414:	2002      	movs	r0, #2
 8014416:	460c      	mov	r4, r1
 8014418:	4617      	mov	r7, r2
 801441a:	f000 f97d 	bl	8014718 <rcu_clock_freq_get>
 801441e:	4927      	ldr	r1, [pc, #156]	; (80144bc <i2c_clock_config+0xac>)
 8014420:	4a27      	ldr	r2, [pc, #156]	; (80144c0 <i2c_clock_config+0xb0>)
 8014422:	fbb0 f1f1 	udiv	r1, r0, r1
 8014426:	4290      	cmp	r0, r2
 8014428:	bf94      	ite	ls
 801442a:	460b      	movls	r3, r1
 801442c:	233f      	movhi	r3, #63	; 0x3f
 801442e:	686e      	ldr	r6, [r5, #4]
 8014430:	4a24      	ldr	r2, [pc, #144]	; (80144c4 <i2c_clock_config+0xb4>)
 8014432:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014436:	431e      	orrs	r6, r3
 8014438:	4294      	cmp	r4, r2
 801443a:	606e      	str	r6, [r5, #4]
 801443c:	d816      	bhi.n	801446c <i2c_clock_config+0x5c>
 801443e:	3101      	adds	r1, #1
 8014440:	293e      	cmp	r1, #62	; 0x3e
 8014442:	d90d      	bls.n	8014460 <i2c_clock_config+0x50>
 8014444:	233f      	movs	r3, #63	; 0x3f
 8014446:	622b      	str	r3, [r5, #32]
 8014448:	0064      	lsls	r4, r4, #1
 801444a:	fbb0 f4f4 	udiv	r4, r0, r4
 801444e:	2c04      	cmp	r4, #4
 8014450:	bf38      	it	cc
 8014452:	2404      	movcc	r4, #4
 8014454:	69e8      	ldr	r0, [r5, #28]
 8014456:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801445a:	4304      	orrs	r4, r0
 801445c:	61ec      	str	r4, [r5, #28]
 801445e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014460:	2902      	cmp	r1, #2
 8014462:	d801      	bhi.n	8014468 <i2c_clock_config+0x58>
 8014464:	2302      	movs	r3, #2
 8014466:	e7ee      	b.n	8014446 <i2c_clock_config+0x36>
 8014468:	6229      	str	r1, [r5, #32]
 801446a:	e7ed      	b.n	8014448 <i2c_clock_config+0x38>
 801446c:	4a16      	ldr	r2, [pc, #88]	; (80144c8 <i2c_clock_config+0xb8>)
 801446e:	4294      	cmp	r4, r2
 8014470:	d8f5      	bhi.n	801445e <i2c_clock_config+0x4e>
 8014472:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014476:	4353      	muls	r3, r2
 8014478:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801447c:	fbb3 f3f2 	udiv	r3, r3, r2
 8014480:	3301      	adds	r3, #1
 8014482:	622b      	str	r3, [r5, #32]
 8014484:	b997      	cbnz	r7, 80144ac <i2c_clock_config+0x9c>
 8014486:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801448a:	fbb0 f4f4 	udiv	r4, r0, r4
 801448e:	69eb      	ldr	r3, [r5, #28]
 8014490:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014494:	61eb      	str	r3, [r5, #28]
 8014496:	f3c4 030b 	ubfx	r3, r4, #0, #12
 801449a:	b90b      	cbnz	r3, 80144a0 <i2c_clock_config+0x90>
 801449c:	f044 0401 	orr.w	r4, r4, #1
 80144a0:	69eb      	ldr	r3, [r5, #28]
 80144a2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80144a6:	61eb      	str	r3, [r5, #28]
 80144a8:	69e8      	ldr	r0, [r5, #28]
 80144aa:	e7d6      	b.n	801445a <i2c_clock_config+0x4a>
 80144ac:	2119      	movs	r1, #25
 80144ae:	434c      	muls	r4, r1
 80144b0:	69eb      	ldr	r3, [r5, #28]
 80144b2:	fbb0 f4f4 	udiv	r4, r0, r4
 80144b6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80144ba:	e7eb      	b.n	8014494 <i2c_clock_config+0x84>
 80144bc:	000f4240 	andeq	r4, pc, r0, asr #4
 80144c0:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80144c4:	000186a0 	andeq	r8, r1, r0, lsr #13
 80144c8:	00061a80 	andeq	r1, r6, r0, lsl #21

080144cc <i2c_ack_config>:
 80144cc:	6803      	ldr	r3, [r0, #0]
 80144ce:	2901      	cmp	r1, #1
 80144d0:	bf0c      	ite	eq
 80144d2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80144d6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80144da:	6003      	str	r3, [r0, #0]
 80144dc:	4770      	bx	lr

080144de <i2c_ackpos_config>:
 80144de:	6803      	ldr	r3, [r0, #0]
 80144e0:	b919      	cbnz	r1, 80144ea <i2c_ackpos_config+0xc>
 80144e2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80144e6:	6003      	str	r3, [r0, #0]
 80144e8:	4770      	bx	lr
 80144ea:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80144ee:	e7fa      	b.n	80144e6 <i2c_ackpos_config+0x8>

080144f0 <i2c_master_addressing>:
 80144f0:	3202      	adds	r2, #2
 80144f2:	bf0c      	ite	eq
 80144f4:	f021 0101 	biceq.w	r1, r1, #1
 80144f8:	f041 0101 	orrne.w	r1, r1, #1
 80144fc:	6101      	str	r1, [r0, #16]
 80144fe:	4770      	bx	lr

08014500 <i2c_enable>:
 8014500:	6803      	ldr	r3, [r0, #0]
 8014502:	f043 0301 	orr.w	r3, r3, #1
 8014506:	6003      	str	r3, [r0, #0]
 8014508:	4770      	bx	lr

0801450a <i2c_start_on_bus>:
 801450a:	6803      	ldr	r3, [r0, #0]
 801450c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014510:	6003      	str	r3, [r0, #0]
 8014512:	4770      	bx	lr

08014514 <i2c_stop_on_bus>:
 8014514:	6803      	ldr	r3, [r0, #0]
 8014516:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801451a:	6003      	str	r3, [r0, #0]
 801451c:	4770      	bx	lr

0801451e <i2c_data_transmit>:
 801451e:	6101      	str	r1, [r0, #16]
 8014520:	4770      	bx	lr

08014522 <i2c_data_receive>:
 8014522:	6900      	ldr	r0, [r0, #16]
 8014524:	b2c0      	uxtb	r0, r0
 8014526:	4770      	bx	lr

08014528 <i2c_flag_get>:
 8014528:	098b      	lsrs	r3, r1, #6
 801452a:	5818      	ldr	r0, [r3, r0]
 801452c:	f001 011f 	and.w	r1, r1, #31
 8014530:	40c8      	lsrs	r0, r1
 8014532:	f000 0001 	and.w	r0, r0, #1
 8014536:	4770      	bx	lr

08014538 <i2c_flag_clear>:
 8014538:	f240 5301 	movw	r3, #1281	; 0x501
 801453c:	4299      	cmp	r1, r3
 801453e:	b510      	push	{r4, lr}
 8014540:	d102      	bne.n	8014548 <i2c_flag_clear+0x10>
 8014542:	6943      	ldr	r3, [r0, #20]
 8014544:	6983      	ldr	r3, [r0, #24]
 8014546:	bd10      	pop	{r4, pc}
 8014548:	2201      	movs	r2, #1
 801454a:	098c      	lsrs	r4, r1, #6
 801454c:	5823      	ldr	r3, [r4, r0]
 801454e:	f001 011f 	and.w	r1, r1, #31
 8014552:	fa02 f101 	lsl.w	r1, r2, r1
 8014556:	ea23 0101 	bic.w	r1, r3, r1
 801455a:	5021      	str	r1, [r4, r0]
 801455c:	e7f3      	b.n	8014546 <i2c_flag_clear+0xe>

0801455e <rcu_periph_clock_enable>:
 801455e:	2201      	movs	r2, #1
 8014560:	0983      	lsrs	r3, r0, #6
 8014562:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014566:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801456a:	6819      	ldr	r1, [r3, #0]
 801456c:	f000 001f 	and.w	r0, r0, #31
 8014570:	fa02 f000 	lsl.w	r0, r2, r0
 8014574:	4308      	orrs	r0, r1
 8014576:	6018      	str	r0, [r3, #0]
 8014578:	4770      	bx	lr

0801457a <rcu_periph_clock_disable>:
 801457a:	2101      	movs	r1, #1
 801457c:	0983      	lsrs	r3, r0, #6
 801457e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014582:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014586:	681a      	ldr	r2, [r3, #0]
 8014588:	f000 001f 	and.w	r0, r0, #31
 801458c:	fa01 f000 	lsl.w	r0, r1, r0
 8014590:	ea22 0000 	bic.w	r0, r2, r0
 8014594:	6018      	str	r0, [r3, #0]
 8014596:	4770      	bx	lr

08014598 <rcu_periph_reset_enable>:
 8014598:	f7ff bfe1 	b.w	801455e <rcu_periph_clock_enable>

0801459c <rcu_periph_reset_disable>:
 801459c:	f7ff bfed 	b.w	801457a <rcu_periph_clock_disable>

080145a0 <rcu_ckout0_config>:
 80145a0:	b510      	push	{r4, lr}
 80145a2:	4c07      	ldr	r4, [pc, #28]	; (80145c0 <rcu_ckout0_config+0x20>)
 80145a4:	6862      	ldr	r2, [r4, #4]
 80145a6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80145aa:	4302      	orrs	r2, r0
 80145ac:	6062      	str	r2, [r4, #4]
 80145ae:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 80145b2:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80145b6:	430b      	orrs	r3, r1
 80145b8:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80145bc:	bd10      	pop	{r4, pc}
 80145be:	bf00      	nop
 80145c0:	40021000 	andmi	r1, r2, r0

080145c4 <rcu_pll2_config>:
 80145c4:	4b04      	ldr	r3, [pc, #16]	; (80145d8 <rcu_pll2_config+0x14>)
 80145c6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80145c8:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 80145cc:	62d9      	str	r1, [r3, #44]	; 0x2c
 80145ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80145d0:	4302      	orrs	r2, r0
 80145d2:	62da      	str	r2, [r3, #44]	; 0x2c
 80145d4:	4770      	bx	lr
 80145d6:	bf00      	nop
 80145d8:	40021000 	andmi	r1, r2, r0

080145dc <rcu_adc_clock_config>:
 80145dc:	490c      	ldr	r1, [pc, #48]	; (8014610 <rcu_adc_clock_config+0x34>)
 80145de:	2805      	cmp	r0, #5
 80145e0:	684b      	ldr	r3, [r1, #4]
 80145e2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80145e6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80145ea:	d006      	beq.n	80145fa <rcu_adc_clock_config+0x1e>
 80145ec:	d803      	bhi.n	80145f6 <rcu_adc_clock_config+0x1a>
 80145ee:	2804      	cmp	r0, #4
 80145f0:	d10a      	bne.n	8014608 <rcu_adc_clock_config+0x2c>
 80145f2:	604b      	str	r3, [r1, #4]
 80145f4:	4770      	bx	lr
 80145f6:	2807      	cmp	r0, #7
 80145f8:	d1fb      	bne.n	80145f2 <rcu_adc_clock_config+0x16>
 80145fa:	4a06      	ldr	r2, [pc, #24]	; (8014614 <rcu_adc_clock_config+0x38>)
 80145fc:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8014600:	4303      	orrs	r3, r0
 8014602:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8014606:	e7f4      	b.n	80145f2 <rcu_adc_clock_config+0x16>
 8014608:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801460c:	e7f1      	b.n	80145f2 <rcu_adc_clock_config+0x16>
 801460e:	bf00      	nop
 8014610:	40021000 	andmi	r1, r2, r0
 8014614:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08014618 <rcu_flag_get>:
 8014618:	0983      	lsrs	r3, r0, #6
 801461a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801461e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014622:	681b      	ldr	r3, [r3, #0]
 8014624:	f000 001f 	and.w	r0, r0, #31
 8014628:	fa23 f000 	lsr.w	r0, r3, r0
 801462c:	f000 0001 	and.w	r0, r0, #1
 8014630:	4770      	bx	lr
	...

08014634 <rcu_osci_stab_wait>:
 8014634:	281c      	cmp	r0, #28
 8014636:	b508      	push	{r3, lr}
 8014638:	d056      	beq.n	80146e8 <rcu_osci_stab_wait+0xb4>
 801463a:	d812      	bhi.n	8014662 <rcu_osci_stab_wait+0x2e>
 801463c:	2818      	cmp	r0, #24
 801463e:	d04a      	beq.n	80146d6 <rcu_osci_stab_wait+0xa2>
 8014640:	d804      	bhi.n	801464c <rcu_osci_stab_wait+0x18>
 8014642:	b398      	cbz	r0, 80146ac <rcu_osci_stab_wait+0x78>
 8014644:	2810      	cmp	r0, #16
 8014646:	d022      	beq.n	801468e <rcu_osci_stab_wait+0x5a>
 8014648:	2000      	movs	r0, #0
 801464a:	bd08      	pop	{r3, pc}
 801464c:	281a      	cmp	r0, #26
 801464e:	d1fb      	bne.n	8014648 <rcu_osci_stab_wait+0x14>
 8014650:	4a2f      	ldr	r2, [pc, #188]	; (8014710 <rcu_osci_stab_wait+0xdc>)
 8014652:	201b      	movs	r0, #27
 8014654:	f7ff ffe0 	bl	8014618 <rcu_flag_get>
 8014658:	b908      	cbnz	r0, 801465e <rcu_osci_stab_wait+0x2a>
 801465a:	3a01      	subs	r2, #1
 801465c:	d1f9      	bne.n	8014652 <rcu_osci_stab_wait+0x1e>
 801465e:	201b      	movs	r0, #27
 8014660:	e01e      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 8014662:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8014666:	d02b      	beq.n	80146c0 <rcu_osci_stab_wait+0x8c>
 8014668:	f242 431c 	movw	r3, #9244	; 0x241c
 801466c:	4298      	cmp	r0, r3
 801466e:	d044      	beq.n	80146fa <rcu_osci_stab_wait+0xc6>
 8014670:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8014674:	d1e8      	bne.n	8014648 <rcu_osci_stab_wait+0x14>
 8014676:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 801467a:	f640 0001 	movw	r0, #2049	; 0x801
 801467e:	f7ff ffcb 	bl	8014618 <rcu_flag_get>
 8014682:	b908      	cbnz	r0, 8014688 <rcu_osci_stab_wait+0x54>
 8014684:	3a01      	subs	r2, #1
 8014686:	d1f8      	bne.n	801467a <rcu_osci_stab_wait+0x46>
 8014688:	f640 0001 	movw	r0, #2049	; 0x801
 801468c:	e008      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 801468e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014692:	2011      	movs	r0, #17
 8014694:	f7ff ffc0 	bl	8014618 <rcu_flag_get>
 8014698:	b908      	cbnz	r0, 801469e <rcu_osci_stab_wait+0x6a>
 801469a:	3a01      	subs	r2, #1
 801469c:	d1f9      	bne.n	8014692 <rcu_osci_stab_wait+0x5e>
 801469e:	2011      	movs	r0, #17
 80146a0:	f7ff ffba 	bl	8014618 <rcu_flag_get>
 80146a4:	3800      	subs	r0, #0
 80146a6:	bf18      	it	ne
 80146a8:	2001      	movne	r0, #1
 80146aa:	e7ce      	b.n	801464a <rcu_osci_stab_wait+0x16>
 80146ac:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 80146b0:	2001      	movs	r0, #1
 80146b2:	f7ff ffb1 	bl	8014618 <rcu_flag_get>
 80146b6:	b908      	cbnz	r0, 80146bc <rcu_osci_stab_wait+0x88>
 80146b8:	3a01      	subs	r2, #1
 80146ba:	d1f9      	bne.n	80146b0 <rcu_osci_stab_wait+0x7c>
 80146bc:	2001      	movs	r0, #1
 80146be:	e7ef      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 80146c0:	4a13      	ldr	r2, [pc, #76]	; (8014710 <rcu_osci_stab_wait+0xdc>)
 80146c2:	f640 1001 	movw	r0, #2305	; 0x901
 80146c6:	f7ff ffa7 	bl	8014618 <rcu_flag_get>
 80146ca:	b908      	cbnz	r0, 80146d0 <rcu_osci_stab_wait+0x9c>
 80146cc:	3a01      	subs	r2, #1
 80146ce:	d1f8      	bne.n	80146c2 <rcu_osci_stab_wait+0x8e>
 80146d0:	f640 1001 	movw	r0, #2305	; 0x901
 80146d4:	e7e4      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 80146d6:	4a0e      	ldr	r2, [pc, #56]	; (8014710 <rcu_osci_stab_wait+0xdc>)
 80146d8:	2019      	movs	r0, #25
 80146da:	f7ff ff9d 	bl	8014618 <rcu_flag_get>
 80146de:	b908      	cbnz	r0, 80146e4 <rcu_osci_stab_wait+0xb0>
 80146e0:	3a01      	subs	r2, #1
 80146e2:	d1f9      	bne.n	80146d8 <rcu_osci_stab_wait+0xa4>
 80146e4:	2019      	movs	r0, #25
 80146e6:	e7db      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 80146e8:	4a09      	ldr	r2, [pc, #36]	; (8014710 <rcu_osci_stab_wait+0xdc>)
 80146ea:	201d      	movs	r0, #29
 80146ec:	f7ff ff94 	bl	8014618 <rcu_flag_get>
 80146f0:	b908      	cbnz	r0, 80146f6 <rcu_osci_stab_wait+0xc2>
 80146f2:	3a01      	subs	r2, #1
 80146f4:	d1f9      	bne.n	80146ea <rcu_osci_stab_wait+0xb6>
 80146f6:	201d      	movs	r0, #29
 80146f8:	e7d2      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 80146fa:	4a05      	ldr	r2, [pc, #20]	; (8014710 <rcu_osci_stab_wait+0xdc>)
 80146fc:	f242 401d 	movw	r0, #9245	; 0x241d
 8014700:	f7ff ff8a 	bl	8014618 <rcu_flag_get>
 8014704:	b908      	cbnz	r0, 801470a <rcu_osci_stab_wait+0xd6>
 8014706:	3a01      	subs	r2, #1
 8014708:	d1f8      	bne.n	80146fc <rcu_osci_stab_wait+0xc8>
 801470a:	f242 401d 	movw	r0, #9245	; 0x241d
 801470e:	e7c7      	b.n	80146a0 <rcu_osci_stab_wait+0x6c>
 8014710:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08014714 <rcu_osci_on>:
 8014714:	f7ff bf23 	b.w	801455e <rcu_periph_clock_enable>

08014718 <rcu_clock_freq_get>:
 8014718:	4b3d      	ldr	r3, [pc, #244]	; (8014810 <rcu_clock_freq_get+0xf8>)
 801471a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801471c:	4604      	mov	r4, r0
 801471e:	461f      	mov	r7, r3
 8014720:	b089      	sub	sp, #36	; 0x24
 8014722:	ad04      	add	r5, sp, #16
 8014724:	f103 0610 	add.w	r6, r3, #16
 8014728:	462a      	mov	r2, r5
 801472a:	6818      	ldr	r0, [r3, #0]
 801472c:	6859      	ldr	r1, [r3, #4]
 801472e:	3308      	adds	r3, #8
 8014730:	c203      	stmia	r2!, {r0, r1}
 8014732:	42b3      	cmp	r3, r6
 8014734:	4615      	mov	r5, r2
 8014736:	d1f7      	bne.n	8014728 <rcu_clock_freq_get+0x10>
 8014738:	466b      	mov	r3, sp
 801473a:	6938      	ldr	r0, [r7, #16]
 801473c:	6871      	ldr	r1, [r6, #4]
 801473e:	4a35      	ldr	r2, [pc, #212]	; (8014814 <rcu_clock_freq_get+0xfc>)
 8014740:	c303      	stmia	r3!, {r0, r1}
 8014742:	c303      	stmia	r3!, {r0, r1}
 8014744:	6853      	ldr	r3, [r2, #4]
 8014746:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801474a:	2b01      	cmp	r3, #1
 801474c:	d052      	beq.n	80147f4 <rcu_clock_freq_get+0xdc>
 801474e:	2b02      	cmp	r3, #2
 8014750:	d152      	bne.n	80147f8 <rcu_clock_freq_get+0xe0>
 8014752:	6853      	ldr	r3, [r2, #4]
 8014754:	03dd      	lsls	r5, r3, #15
 8014756:	d523      	bpl.n	80147a0 <rcu_clock_freq_get+0x88>
 8014758:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 801475a:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 801475e:	4b2e      	ldr	r3, [pc, #184]	; (8014818 <rcu_clock_freq_get+0x100>)
 8014760:	d00e      	beq.n	8014780 <rcu_clock_freq_get+0x68>
 8014762:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014764:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8014766:	f3c1 1103 	ubfx	r1, r1, #4, #4
 801476a:	f3c0 2003 	ubfx	r0, r0, #8, #4
 801476e:	3101      	adds	r1, #1
 8014770:	280f      	cmp	r0, #15
 8014772:	f100 0502 	add.w	r5, r0, #2
 8014776:	fbb3 f3f1 	udiv	r3, r3, r1
 801477a:	bf08      	it	eq
 801477c:	2514      	moveq	r5, #20
 801477e:	436b      	muls	r3, r5
 8014780:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014782:	f001 010f 	and.w	r1, r1, #15
 8014786:	3101      	adds	r1, #1
 8014788:	fbb3 f3f1 	udiv	r3, r3, r1
 801478c:	6851      	ldr	r1, [r2, #4]
 801478e:	6850      	ldr	r0, [r2, #4]
 8014790:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8014794:	0080      	lsls	r0, r0, #2
 8014796:	d505      	bpl.n	80147a4 <rcu_clock_freq_get+0x8c>
 8014798:	f041 0110 	orr.w	r1, r1, #16
 801479c:	3101      	adds	r1, #1
 801479e:	e027      	b.n	80147f0 <rcu_clock_freq_get+0xd8>
 80147a0:	4b1e      	ldr	r3, [pc, #120]	; (801481c <rcu_clock_freq_get+0x104>)
 80147a2:	e7f3      	b.n	801478c <rcu_clock_freq_get+0x74>
 80147a4:	290d      	cmp	r1, #13
 80147a6:	d120      	bne.n	80147ea <rcu_clock_freq_get+0xd2>
 80147a8:	2006      	movs	r0, #6
 80147aa:	0859      	lsrs	r1, r3, #1
 80147ac:	fb00 1303 	mla	r3, r0, r3, r1
 80147b0:	6851      	ldr	r1, [r2, #4]
 80147b2:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80147b6:	3120      	adds	r1, #32
 80147b8:	4469      	add	r1, sp
 80147ba:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 80147be:	fa23 f001 	lsr.w	r0, r3, r1
 80147c2:	6851      	ldr	r1, [r2, #4]
 80147c4:	6852      	ldr	r2, [r2, #4]
 80147c6:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80147ca:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80147ce:	3120      	adds	r1, #32
 80147d0:	3220      	adds	r2, #32
 80147d2:	4469      	add	r1, sp
 80147d4:	446a      	add	r2, sp
 80147d6:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80147da:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80147de:	2c03      	cmp	r4, #3
 80147e0:	d813      	bhi.n	801480a <rcu_clock_freq_get+0xf2>
 80147e2:	e8df f004 	tbb	[pc, r4]
 80147e6:	100e0c0b 	andne	r0, lr, fp, lsl #24
 80147ea:	290f      	cmp	r1, #15
 80147ec:	d0d6      	beq.n	801479c <rcu_clock_freq_get+0x84>
 80147ee:	3102      	adds	r1, #2
 80147f0:	434b      	muls	r3, r1
 80147f2:	e7dd      	b.n	80147b0 <rcu_clock_freq_get+0x98>
 80147f4:	4b08      	ldr	r3, [pc, #32]	; (8014818 <rcu_clock_freq_get+0x100>)
 80147f6:	e7db      	b.n	80147b0 <rcu_clock_freq_get+0x98>
 80147f8:	4b09      	ldr	r3, [pc, #36]	; (8014820 <rcu_clock_freq_get+0x108>)
 80147fa:	e7d9      	b.n	80147b0 <rcu_clock_freq_get+0x98>
 80147fc:	4618      	mov	r0, r3
 80147fe:	b009      	add	sp, #36	; 0x24
 8014800:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014802:	40c8      	lsrs	r0, r1
 8014804:	e7fb      	b.n	80147fe <rcu_clock_freq_get+0xe6>
 8014806:	40d0      	lsrs	r0, r2
 8014808:	e7f9      	b.n	80147fe <rcu_clock_freq_get+0xe6>
 801480a:	2000      	movs	r0, #0
 801480c:	e7f7      	b.n	80147fe <rcu_clock_freq_get+0xe6>
 801480e:	bf00      	nop
 8014810:	0801589c 	stmdaeq	r1, {r2, r3, r4, r7, fp, ip, lr}
 8014814:	40021000 	andmi	r1, r2, r0
 8014818:	017d7840 	cmneq	sp, r0, asr #16
 801481c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8014820:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08014824 <timer_deinit>:
 8014824:	b508      	push	{r3, lr}
 8014826:	4b4e      	ldr	r3, [pc, #312]	; (8014960 <timer_deinit+0x13c>)
 8014828:	4298      	cmp	r0, r3
 801482a:	f000 8092 	beq.w	8014952 <timer_deinit+0x12e>
 801482e:	d822      	bhi.n	8014876 <timer_deinit+0x52>
 8014830:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8014834:	4298      	cmp	r0, r3
 8014836:	d062      	beq.n	80148fe <timer_deinit+0xda>
 8014838:	d80b      	bhi.n	8014852 <timer_deinit+0x2e>
 801483a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801483e:	4298      	cmp	r0, r3
 8014840:	d04f      	beq.n	80148e2 <timer_deinit+0xbe>
 8014842:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014846:	4298      	cmp	r0, r3
 8014848:	d052      	beq.n	80148f0 <timer_deinit+0xcc>
 801484a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801484e:	d041      	beq.n	80148d4 <timer_deinit+0xb0>
 8014850:	bd08      	pop	{r3, pc}
 8014852:	4b44      	ldr	r3, [pc, #272]	; (8014964 <timer_deinit+0x140>)
 8014854:	4298      	cmp	r0, r3
 8014856:	d059      	beq.n	801490c <timer_deinit+0xe8>
 8014858:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801485c:	4298      	cmp	r0, r3
 801485e:	d071      	beq.n	8014944 <timer_deinit+0x120>
 8014860:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014864:	4298      	cmp	r0, r3
 8014866:	d1f3      	bne.n	8014850 <timer_deinit+0x2c>
 8014868:	f240 4004 	movw	r0, #1028	; 0x404
 801486c:	f7ff fe94 	bl	8014598 <rcu_periph_reset_enable>
 8014870:	f240 4004 	movw	r0, #1028	; 0x404
 8014874:	e02a      	b.n	80148cc <timer_deinit+0xa8>
 8014876:	4b3c      	ldr	r3, [pc, #240]	; (8014968 <timer_deinit+0x144>)
 8014878:	4298      	cmp	r0, r3
 801487a:	d055      	beq.n	8014928 <timer_deinit+0x104>
 801487c:	d812      	bhi.n	80148a4 <timer_deinit+0x80>
 801487e:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8014882:	4298      	cmp	r0, r3
 8014884:	d01c      	beq.n	80148c0 <timer_deinit+0x9c>
 8014886:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801488a:	4298      	cmp	r0, r3
 801488c:	d045      	beq.n	801491a <timer_deinit+0xf6>
 801488e:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 8014892:	4298      	cmp	r0, r3
 8014894:	d1dc      	bne.n	8014850 <timer_deinit+0x2c>
 8014896:	f44f 6081 	mov.w	r0, #1032	; 0x408
 801489a:	f7ff fe7d 	bl	8014598 <rcu_periph_reset_enable>
 801489e:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80148a2:	e013      	b.n	80148cc <timer_deinit+0xa8>
 80148a4:	4b31      	ldr	r3, [pc, #196]	; (801496c <timer_deinit+0x148>)
 80148a6:	4298      	cmp	r0, r3
 80148a8:	d045      	beq.n	8014936 <timer_deinit+0x112>
 80148aa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80148ae:	4298      	cmp	r0, r3
 80148b0:	d1ce      	bne.n	8014850 <timer_deinit+0x2c>
 80148b2:	f240 3015 	movw	r0, #789	; 0x315
 80148b6:	f7ff fe6f 	bl	8014598 <rcu_periph_reset_enable>
 80148ba:	f240 3015 	movw	r0, #789	; 0x315
 80148be:	e005      	b.n	80148cc <timer_deinit+0xa8>
 80148c0:	f240 300b 	movw	r0, #779	; 0x30b
 80148c4:	f7ff fe68 	bl	8014598 <rcu_periph_reset_enable>
 80148c8:	f240 300b 	movw	r0, #779	; 0x30b
 80148cc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80148d0:	f7ff be64 	b.w	801459c <rcu_periph_reset_disable>
 80148d4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80148d8:	f7ff fe5e 	bl	8014598 <rcu_periph_reset_enable>
 80148dc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80148e0:	e7f4      	b.n	80148cc <timer_deinit+0xa8>
 80148e2:	f240 4001 	movw	r0, #1025	; 0x401
 80148e6:	f7ff fe57 	bl	8014598 <rcu_periph_reset_enable>
 80148ea:	f240 4001 	movw	r0, #1025	; 0x401
 80148ee:	e7ed      	b.n	80148cc <timer_deinit+0xa8>
 80148f0:	f240 4002 	movw	r0, #1026	; 0x402
 80148f4:	f7ff fe50 	bl	8014598 <rcu_periph_reset_enable>
 80148f8:	f240 4002 	movw	r0, #1026	; 0x402
 80148fc:	e7e6      	b.n	80148cc <timer_deinit+0xa8>
 80148fe:	f240 4003 	movw	r0, #1027	; 0x403
 8014902:	f7ff fe49 	bl	8014598 <rcu_periph_reset_enable>
 8014906:	f240 4003 	movw	r0, #1027	; 0x403
 801490a:	e7df      	b.n	80148cc <timer_deinit+0xa8>
 801490c:	f240 4005 	movw	r0, #1029	; 0x405
 8014910:	f7ff fe42 	bl	8014598 <rcu_periph_reset_enable>
 8014914:	f240 4005 	movw	r0, #1029	; 0x405
 8014918:	e7d8      	b.n	80148cc <timer_deinit+0xa8>
 801491a:	f240 300d 	movw	r0, #781	; 0x30d
 801491e:	f7ff fe3b 	bl	8014598 <rcu_periph_reset_enable>
 8014922:	f240 300d 	movw	r0, #781	; 0x30d
 8014926:	e7d1      	b.n	80148cc <timer_deinit+0xa8>
 8014928:	f240 3013 	movw	r0, #787	; 0x313
 801492c:	f7ff fe34 	bl	8014598 <rcu_periph_reset_enable>
 8014930:	f240 3013 	movw	r0, #787	; 0x313
 8014934:	e7ca      	b.n	80148cc <timer_deinit+0xa8>
 8014936:	f44f 7045 	mov.w	r0, #788	; 0x314
 801493a:	f7ff fe2d 	bl	8014598 <rcu_periph_reset_enable>
 801493e:	f44f 7045 	mov.w	r0, #788	; 0x314
 8014942:	e7c3      	b.n	80148cc <timer_deinit+0xa8>
 8014944:	f240 4006 	movw	r0, #1030	; 0x406
 8014948:	f7ff fe26 	bl	8014598 <rcu_periph_reset_enable>
 801494c:	f240 4006 	movw	r0, #1030	; 0x406
 8014950:	e7bc      	b.n	80148cc <timer_deinit+0xa8>
 8014952:	f240 4007 	movw	r0, #1031	; 0x407
 8014956:	f7ff fe1f 	bl	8014598 <rcu_periph_reset_enable>
 801495a:	f240 4007 	movw	r0, #1031	; 0x407
 801495e:	e7b5      	b.n	80148cc <timer_deinit+0xa8>
 8014960:	40001c00 	andmi	r1, r0, r0, lsl #24
 8014964:	40001400 	andmi	r1, r0, r0, lsl #8
 8014968:	40014c00 	andmi	r4, r1, r0, lsl #24
 801496c:	40015000 	andmi	r5, r1, r0

08014970 <timer_init>:
 8014970:	880b      	ldrh	r3, [r1, #0]
 8014972:	6283      	str	r3, [r0, #40]	; 0x28
 8014974:	4b26      	ldr	r3, [pc, #152]	; (8014a10 <timer_init+0xa0>)
 8014976:	4298      	cmp	r0, r3
 8014978:	d018      	beq.n	80149ac <timer_init+0x3c>
 801497a:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801497e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8014982:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8014986:	d011      	beq.n	80149ac <timer_init+0x3c>
 8014988:	4a22      	ldr	r2, [pc, #136]	; (8014a14 <timer_init+0xa4>)
 801498a:	4290      	cmp	r0, r2
 801498c:	d00e      	beq.n	80149ac <timer_init+0x3c>
 801498e:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8014992:	4290      	cmp	r0, r2
 8014994:	d00a      	beq.n	80149ac <timer_init+0x3c>
 8014996:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801499a:	4293      	cmp	r3, r2
 801499c:	d006      	beq.n	80149ac <timer_init+0x3c>
 801499e:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80149a2:	4293      	cmp	r3, r2
 80149a4:	d002      	beq.n	80149ac <timer_init+0x3c>
 80149a6:	4b1c      	ldr	r3, [pc, #112]	; (8014a18 <timer_init+0xa8>)
 80149a8:	4298      	cmp	r0, r3
 80149aa:	d10f      	bne.n	80149cc <timer_init+0x5c>
 80149ac:	6803      	ldr	r3, [r0, #0]
 80149ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80149b2:	6003      	str	r3, [r0, #0]
 80149b4:	884b      	ldrh	r3, [r1, #2]
 80149b6:	6802      	ldr	r2, [r0, #0]
 80149b8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80149bc:	4313      	orrs	r3, r2
 80149be:	6003      	str	r3, [r0, #0]
 80149c0:	888b      	ldrh	r3, [r1, #4]
 80149c2:	6802      	ldr	r2, [r0, #0]
 80149c4:	f003 0310 	and.w	r3, r3, #16
 80149c8:	4313      	orrs	r3, r2
 80149ca:	6003      	str	r3, [r0, #0]
 80149cc:	688b      	ldr	r3, [r1, #8]
 80149ce:	62c3      	str	r3, [r0, #44]	; 0x2c
 80149d0:	4b12      	ldr	r3, [pc, #72]	; (8014a1c <timer_init+0xac>)
 80149d2:	4298      	cmp	r0, r3
 80149d4:	d003      	beq.n	80149de <timer_init+0x6e>
 80149d6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80149da:	4298      	cmp	r0, r3
 80149dc:	d104      	bne.n	80149e8 <timer_init+0x78>
 80149de:	6943      	ldr	r3, [r0, #20]
 80149e0:	f043 0301 	orr.w	r3, r3, #1
 80149e4:	6143      	str	r3, [r0, #20]
 80149e6:	4770      	bx	lr
 80149e8:	6803      	ldr	r3, [r0, #0]
 80149ea:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80149ee:	6003      	str	r3, [r0, #0]
 80149f0:	898b      	ldrh	r3, [r1, #12]
 80149f2:	6802      	ldr	r2, [r0, #0]
 80149f4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80149f8:	4313      	orrs	r3, r2
 80149fa:	6003      	str	r3, [r0, #0]
 80149fc:	4b04      	ldr	r3, [pc, #16]	; (8014a10 <timer_init+0xa0>)
 80149fe:	4298      	cmp	r0, r3
 8014a00:	d002      	beq.n	8014a08 <timer_init+0x98>
 8014a02:	4b04      	ldr	r3, [pc, #16]	; (8014a14 <timer_init+0xa4>)
 8014a04:	4298      	cmp	r0, r3
 8014a06:	d1ea      	bne.n	80149de <timer_init+0x6e>
 8014a08:	7b8b      	ldrb	r3, [r1, #14]
 8014a0a:	6303      	str	r3, [r0, #48]	; 0x30
 8014a0c:	e7e7      	b.n	80149de <timer_init+0x6e>
 8014a0e:	bf00      	nop
 8014a10:	40012c00 	andmi	r2, r1, r0, lsl #24
 8014a14:	40013400 	andmi	r3, r1, r0, lsl #8
 8014a18:	40002000 	andmi	r2, r0, r0
 8014a1c:	40001000 	andmi	r1, r0, r0

08014a20 <timer_enable>:
 8014a20:	6803      	ldr	r3, [r0, #0]
 8014a22:	f043 0301 	orr.w	r3, r3, #1
 8014a26:	6003      	str	r3, [r0, #0]
 8014a28:	4770      	bx	lr

08014a2a <timer_disable>:
 8014a2a:	6803      	ldr	r3, [r0, #0]
 8014a2c:	f023 0301 	bic.w	r3, r3, #1
 8014a30:	6003      	str	r3, [r0, #0]
 8014a32:	4770      	bx	lr

08014a34 <timer_dma_enable>:
 8014a34:	68c3      	ldr	r3, [r0, #12]
 8014a36:	4319      	orrs	r1, r3
 8014a38:	60c1      	str	r1, [r0, #12]
 8014a3a:	4770      	bx	lr

08014a3c <timer_channel_output_mode_config>:
 8014a3c:	2903      	cmp	r1, #3
 8014a3e:	d81a      	bhi.n	8014a76 <timer_channel_output_mode_config+0x3a>
 8014a40:	e8df f001 	tbb	[pc, r1]
 8014a44:	1a120a02 	bne	8497254 <_sidata+0x47ef1c>
 8014a48:	6983      	ldr	r3, [r0, #24]
 8014a4a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014a4e:	6183      	str	r3, [r0, #24]
 8014a50:	6983      	ldr	r3, [r0, #24]
 8014a52:	431a      	orrs	r2, r3
 8014a54:	6182      	str	r2, [r0, #24]
 8014a56:	4770      	bx	lr
 8014a58:	6983      	ldr	r3, [r0, #24]
 8014a5a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014a5e:	6183      	str	r3, [r0, #24]
 8014a60:	6983      	ldr	r3, [r0, #24]
 8014a62:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8014a66:	e7f5      	b.n	8014a54 <timer_channel_output_mode_config+0x18>
 8014a68:	69c3      	ldr	r3, [r0, #28]
 8014a6a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014a6e:	61c3      	str	r3, [r0, #28]
 8014a70:	69c3      	ldr	r3, [r0, #28]
 8014a72:	431a      	orrs	r2, r3
 8014a74:	61c2      	str	r2, [r0, #28]
 8014a76:	4770      	bx	lr
 8014a78:	69c3      	ldr	r3, [r0, #28]
 8014a7a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014a7e:	61c3      	str	r3, [r0, #28]
 8014a80:	69c3      	ldr	r3, [r0, #28]
 8014a82:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8014a86:	e7f5      	b.n	8014a74 <timer_channel_output_mode_config+0x38>

08014a88 <timer_channel_output_pulse_value_config>:
 8014a88:	2903      	cmp	r1, #3
 8014a8a:	d80a      	bhi.n	8014aa2 <timer_channel_output_pulse_value_config+0x1a>
 8014a8c:	e8df f001 	tbb	[pc, r1]
 8014a90:	08060402 	stmdaeq	r6, {r1, sl}
 8014a94:	6342      	str	r2, [r0, #52]	; 0x34
 8014a96:	4770      	bx	lr
 8014a98:	6382      	str	r2, [r0, #56]	; 0x38
 8014a9a:	4770      	bx	lr
 8014a9c:	63c2      	str	r2, [r0, #60]	; 0x3c
 8014a9e:	4770      	bx	lr
 8014aa0:	6402      	str	r2, [r0, #64]	; 0x40
 8014aa2:	4770      	bx	lr

08014aa4 <timer_input_trigger_source_select>:
 8014aa4:	6882      	ldr	r2, [r0, #8]
 8014aa6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014aaa:	6082      	str	r2, [r0, #8]
 8014aac:	6883      	ldr	r3, [r0, #8]
 8014aae:	430b      	orrs	r3, r1
 8014ab0:	6083      	str	r3, [r0, #8]
 8014ab2:	4770      	bx	lr

08014ab4 <timer_master_output_trigger_source_select>:
 8014ab4:	6842      	ldr	r2, [r0, #4]
 8014ab6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014aba:	6042      	str	r2, [r0, #4]
 8014abc:	6843      	ldr	r3, [r0, #4]
 8014abe:	430b      	orrs	r3, r1
 8014ac0:	6043      	str	r3, [r0, #4]
 8014ac2:	4770      	bx	lr

08014ac4 <timer_slave_mode_select>:
 8014ac4:	6882      	ldr	r2, [r0, #8]
 8014ac6:	f022 0207 	bic.w	r2, r2, #7
 8014aca:	6082      	str	r2, [r0, #8]
 8014acc:	6883      	ldr	r3, [r0, #8]
 8014ace:	430b      	orrs	r3, r1
 8014ad0:	6083      	str	r3, [r0, #8]
 8014ad2:	4770      	bx	lr

08014ad4 <timer_master_slave_mode_config>:
 8014ad4:	2980      	cmp	r1, #128	; 0x80
 8014ad6:	d104      	bne.n	8014ae2 <timer_master_slave_mode_config+0xe>
 8014ad8:	6883      	ldr	r3, [r0, #8]
 8014ada:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014ade:	6083      	str	r3, [r0, #8]
 8014ae0:	4770      	bx	lr
 8014ae2:	2900      	cmp	r1, #0
 8014ae4:	d1fc      	bne.n	8014ae0 <timer_master_slave_mode_config+0xc>
 8014ae6:	6883      	ldr	r3, [r0, #8]
 8014ae8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014aec:	e7f7      	b.n	8014ade <timer_master_slave_mode_config+0xa>

08014aee <timer_interrupt_enable>:
 8014aee:	68c3      	ldr	r3, [r0, #12]
 8014af0:	430b      	orrs	r3, r1
 8014af2:	60c3      	str	r3, [r0, #12]
 8014af4:	4770      	bx	lr
	...

08014af8 <usart_deinit>:
 8014af8:	b508      	push	{r3, lr}
 8014afa:	4b2d      	ldr	r3, [pc, #180]	; (8014bb0 <usart_deinit+0xb8>)
 8014afc:	4298      	cmp	r0, r3
 8014afe:	d050      	beq.n	8014ba2 <usart_deinit+0xaa>
 8014b00:	d817      	bhi.n	8014b32 <usart_deinit+0x3a>
 8014b02:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014b06:	4298      	cmp	r0, r3
 8014b08:	d044      	beq.n	8014b94 <usart_deinit+0x9c>
 8014b0a:	d808      	bhi.n	8014b1e <usart_deinit+0x26>
 8014b0c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014b10:	4298      	cmp	r0, r3
 8014b12:	d02a      	beq.n	8014b6a <usart_deinit+0x72>
 8014b14:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014b18:	4298      	cmp	r0, r3
 8014b1a:	d02d      	beq.n	8014b78 <usart_deinit+0x80>
 8014b1c:	bd08      	pop	{r3, pc}
 8014b1e:	4b25      	ldr	r3, [pc, #148]	; (8014bb4 <usart_deinit+0xbc>)
 8014b20:	4298      	cmp	r0, r3
 8014b22:	d1fb      	bne.n	8014b1c <usart_deinit+0x24>
 8014b24:	f240 4014 	movw	r0, #1044	; 0x414
 8014b28:	f7ff fd36 	bl	8014598 <rcu_periph_reset_enable>
 8014b2c:	f240 4014 	movw	r0, #1044	; 0x414
 8014b30:	e017      	b.n	8014b62 <usart_deinit+0x6a>
 8014b32:	4b21      	ldr	r3, [pc, #132]	; (8014bb8 <usart_deinit+0xc0>)
 8014b34:	4298      	cmp	r0, r3
 8014b36:	d00e      	beq.n	8014b56 <usart_deinit+0x5e>
 8014b38:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014b3c:	4298      	cmp	r0, r3
 8014b3e:	d022      	beq.n	8014b86 <usart_deinit+0x8e>
 8014b40:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014b44:	4298      	cmp	r0, r3
 8014b46:	d1e9      	bne.n	8014b1c <usart_deinit+0x24>
 8014b48:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014b4c:	f7ff fd24 	bl	8014598 <rcu_periph_reset_enable>
 8014b50:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014b54:	e005      	b.n	8014b62 <usart_deinit+0x6a>
 8014b56:	f240 300e 	movw	r0, #782	; 0x30e
 8014b5a:	f7ff fd1d 	bl	8014598 <rcu_periph_reset_enable>
 8014b5e:	f240 300e 	movw	r0, #782	; 0x30e
 8014b62:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014b66:	f7ff bd19 	b.w	801459c <rcu_periph_reset_disable>
 8014b6a:	f240 4011 	movw	r0, #1041	; 0x411
 8014b6e:	f7ff fd13 	bl	8014598 <rcu_periph_reset_enable>
 8014b72:	f240 4011 	movw	r0, #1041	; 0x411
 8014b76:	e7f4      	b.n	8014b62 <usart_deinit+0x6a>
 8014b78:	f240 4012 	movw	r0, #1042	; 0x412
 8014b7c:	f7ff fd0c 	bl	8014598 <rcu_periph_reset_enable>
 8014b80:	f240 4012 	movw	r0, #1042	; 0x412
 8014b84:	e7ed      	b.n	8014b62 <usart_deinit+0x6a>
 8014b86:	f641 5018 	movw	r0, #7448	; 0x1d18
 8014b8a:	f7ff fd05 	bl	8014598 <rcu_periph_reset_enable>
 8014b8e:	f641 5018 	movw	r0, #7448	; 0x1d18
 8014b92:	e7e6      	b.n	8014b62 <usart_deinit+0x6a>
 8014b94:	f240 4013 	movw	r0, #1043	; 0x413
 8014b98:	f7ff fcfe 	bl	8014598 <rcu_periph_reset_enable>
 8014b9c:	f240 4013 	movw	r0, #1043	; 0x413
 8014ba0:	e7df      	b.n	8014b62 <usart_deinit+0x6a>
 8014ba2:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8014ba6:	f7ff fcf7 	bl	8014598 <rcu_periph_reset_enable>
 8014baa:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8014bae:	e7d8      	b.n	8014b62 <usart_deinit+0x6a>
 8014bb0:	40007800 	andmi	r7, r0, r0, lsl #16
 8014bb4:	40005000 	andmi	r5, r0, r0
 8014bb8:	40013800 	andmi	r3, r1, r0, lsl #16

08014bbc <usart_baudrate_set>:
 8014bbc:	b538      	push	{r3, r4, r5, lr}
 8014bbe:	4b16      	ldr	r3, [pc, #88]	; (8014c18 <usart_baudrate_set+0x5c>)
 8014bc0:	4604      	mov	r4, r0
 8014bc2:	4298      	cmp	r0, r3
 8014bc4:	460d      	mov	r5, r1
 8014bc6:	d025      	beq.n	8014c14 <usart_baudrate_set+0x58>
 8014bc8:	d816      	bhi.n	8014bf8 <usart_baudrate_set+0x3c>
 8014bca:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014bce:	4298      	cmp	r0, r3
 8014bd0:	d020      	beq.n	8014c14 <usart_baudrate_set+0x58>
 8014bd2:	d80f      	bhi.n	8014bf4 <usart_baudrate_set+0x38>
 8014bd4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014bd8:	4298      	cmp	r0, r3
 8014bda:	d01b      	beq.n	8014c14 <usart_baudrate_set+0x58>
 8014bdc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014be0:	429c      	cmp	r4, r3
 8014be2:	d017      	beq.n	8014c14 <usart_baudrate_set+0x58>
 8014be4:	2000      	movs	r0, #0
 8014be6:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8014bea:	fbb3 f1f5 	udiv	r1, r3, r5
 8014bee:	b289      	uxth	r1, r1
 8014bf0:	60a1      	str	r1, [r4, #8]
 8014bf2:	bd38      	pop	{r3, r4, r5, pc}
 8014bf4:	4b09      	ldr	r3, [pc, #36]	; (8014c1c <usart_baudrate_set+0x60>)
 8014bf6:	e7f3      	b.n	8014be0 <usart_baudrate_set+0x24>
 8014bf8:	4b09      	ldr	r3, [pc, #36]	; (8014c20 <usart_baudrate_set+0x64>)
 8014bfa:	4298      	cmp	r0, r3
 8014bfc:	d006      	beq.n	8014c0c <usart_baudrate_set+0x50>
 8014bfe:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014c02:	4298      	cmp	r0, r3
 8014c04:	d002      	beq.n	8014c0c <usart_baudrate_set+0x50>
 8014c06:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014c0a:	e7e9      	b.n	8014be0 <usart_baudrate_set+0x24>
 8014c0c:	2003      	movs	r0, #3
 8014c0e:	f7ff fd83 	bl	8014718 <rcu_clock_freq_get>
 8014c12:	e7e8      	b.n	8014be6 <usart_baudrate_set+0x2a>
 8014c14:	2002      	movs	r0, #2
 8014c16:	e7fa      	b.n	8014c0e <usart_baudrate_set+0x52>
 8014c18:	40007800 	andmi	r7, r0, r0, lsl #16
 8014c1c:	40005000 	andmi	r5, r0, r0
 8014c20:	40013800 	andmi	r3, r1, r0, lsl #16

08014c24 <usart_parity_config>:
 8014c24:	68c2      	ldr	r2, [r0, #12]
 8014c26:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8014c2a:	60c2      	str	r2, [r0, #12]
 8014c2c:	68c3      	ldr	r3, [r0, #12]
 8014c2e:	430b      	orrs	r3, r1
 8014c30:	60c3      	str	r3, [r0, #12]
 8014c32:	4770      	bx	lr

08014c34 <usart_word_length_set>:
 8014c34:	68c2      	ldr	r2, [r0, #12]
 8014c36:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8014c3a:	60c2      	str	r2, [r0, #12]
 8014c3c:	68c3      	ldr	r3, [r0, #12]
 8014c3e:	430b      	orrs	r3, r1
 8014c40:	60c3      	str	r3, [r0, #12]
 8014c42:	4770      	bx	lr

08014c44 <usart_stop_bit_set>:
 8014c44:	6902      	ldr	r2, [r0, #16]
 8014c46:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8014c4a:	6102      	str	r2, [r0, #16]
 8014c4c:	6903      	ldr	r3, [r0, #16]
 8014c4e:	430b      	orrs	r3, r1
 8014c50:	6103      	str	r3, [r0, #16]
 8014c52:	4770      	bx	lr

08014c54 <usart_transmit_config>:
 8014c54:	68c3      	ldr	r3, [r0, #12]
 8014c56:	f023 0308 	bic.w	r3, r3, #8
 8014c5a:	430b      	orrs	r3, r1
 8014c5c:	60c3      	str	r3, [r0, #12]
 8014c5e:	4770      	bx	lr

08014c60 <usart_receive_config>:
 8014c60:	68c3      	ldr	r3, [r0, #12]
 8014c62:	f023 0304 	bic.w	r3, r3, #4
 8014c66:	430b      	orrs	r3, r1
 8014c68:	60c3      	str	r3, [r0, #12]
 8014c6a:	4770      	bx	lr

08014c6c <usart_hardware_flow_rts_config>:
 8014c6c:	6943      	ldr	r3, [r0, #20]
 8014c6e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014c72:	430b      	orrs	r3, r1
 8014c74:	6143      	str	r3, [r0, #20]
 8014c76:	4770      	bx	lr

08014c78 <usart_hardware_flow_cts_config>:
 8014c78:	6943      	ldr	r3, [r0, #20]
 8014c7a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014c7e:	430b      	orrs	r3, r1
 8014c80:	6143      	str	r3, [r0, #20]
 8014c82:	4770      	bx	lr

08014c84 <usart_flag_get>:
 8014c84:	098b      	lsrs	r3, r1, #6
 8014c86:	5818      	ldr	r0, [r3, r0]
 8014c88:	f001 011f 	and.w	r1, r1, #31
 8014c8c:	40c8      	lsrs	r0, r1
 8014c8e:	f000 0001 	and.w	r0, r0, #1
 8014c92:	4770      	bx	lr

08014c94 <emac_start>:
 8014c94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014c96:	2370      	movs	r3, #112	; 0x70
 8014c98:	4a67      	ldr	r2, [pc, #412]	; (8014e38 <emac_start+0x1a4>)
 8014c9a:	4968      	ldr	r1, [pc, #416]	; (8014e3c <emac_start+0x1a8>)
 8014c9c:	4604      	mov	r4, r0
 8014c9e:	4868      	ldr	r0, [pc, #416]	; (8014e40 <emac_start+0x1ac>)
 8014ca0:	f7fe fcde 	bl	8013660 <printf>
 8014ca4:	2361      	movs	r3, #97	; 0x61
 8014ca6:	4a67      	ldr	r2, [pc, #412]	; (8014e44 <emac_start+0x1b0>)
 8014ca8:	4964      	ldr	r1, [pc, #400]	; (8014e3c <emac_start+0x1a8>)
 8014caa:	4865      	ldr	r0, [pc, #404]	; (8014e40 <emac_start+0x1ac>)
 8014cac:	f7fe fcd8 	bl	8013660 <printf>
 8014cb0:	f240 6002 	movw	r0, #1538	; 0x602
 8014cb4:	f7ff fc53 	bl	801455e <rcu_periph_clock_enable>
 8014cb8:	f240 6003 	movw	r0, #1539	; 0x603
 8014cbc:	f7ff fc4f 	bl	801455e <rcu_periph_clock_enable>
 8014cc0:	f240 6004 	movw	r0, #1540	; 0x604
 8014cc4:	f7ff fc4b 	bl	801455e <rcu_periph_clock_enable>
 8014cc8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014ccc:	2203      	movs	r2, #3
 8014cce:	2118      	movs	r1, #24
 8014cd0:	485d      	ldr	r0, [pc, #372]	; (8014e48 <emac_start+0x1b4>)
 8014cd2:	f7ff fb0d 	bl	80142f0 <gpio_init>
 8014cd6:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8014cda:	f7ff fc40 	bl	801455e <rcu_periph_clock_enable>
 8014cde:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8014ce2:	f7ff fc6f 	bl	80145c4 <rcu_pll2_config>
 8014ce6:	201c      	movs	r0, #28
 8014ce8:	f7ff fd14 	bl	8014714 <rcu_osci_on>
 8014cec:	201c      	movs	r0, #28
 8014cee:	f7ff fca1 	bl	8014634 <rcu_osci_stab_wait>
 8014cf2:	2100      	movs	r1, #0
 8014cf4:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8014cf8:	f7ff fc52 	bl	80145a0 <rcu_ckout0_config>
 8014cfc:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8014d00:	f7ff fb7a 	bl	80143f8 <gpio_ethernet_phy_select>
 8014d04:	2302      	movs	r3, #2
 8014d06:	2203      	movs	r2, #3
 8014d08:	2104      	movs	r1, #4
 8014d0a:	484f      	ldr	r0, [pc, #316]	; (8014e48 <emac_start+0x1b4>)
 8014d0c:	f7ff faf0 	bl	80142f0 <gpio_init>
 8014d10:	2304      	movs	r3, #4
 8014d12:	2203      	movs	r2, #3
 8014d14:	2118      	movs	r1, #24
 8014d16:	484c      	ldr	r0, [pc, #304]	; (8014e48 <emac_start+0x1b4>)
 8014d18:	f7ff faea 	bl	80142f0 <gpio_init>
 8014d1c:	2380      	movs	r3, #128	; 0x80
 8014d1e:	2203      	movs	r2, #3
 8014d20:	2104      	movs	r1, #4
 8014d22:	4849      	ldr	r0, [pc, #292]	; (8014e48 <emac_start+0x1b4>)
 8014d24:	f7ff fae4 	bl	80142f0 <gpio_init>
 8014d28:	2302      	movs	r3, #2
 8014d2a:	2203      	movs	r2, #3
 8014d2c:	2118      	movs	r1, #24
 8014d2e:	4847      	ldr	r0, [pc, #284]	; (8014e4c <emac_start+0x1b8>)
 8014d30:	f7ff fade 	bl	80142f0 <gpio_init>
 8014d34:	2310      	movs	r3, #16
 8014d36:	2203      	movs	r2, #3
 8014d38:	2104      	movs	r1, #4
 8014d3a:	4844      	ldr	r0, [pc, #272]	; (8014e4c <emac_start+0x1b8>)
 8014d3c:	f7ff fad8 	bl	80142f0 <gpio_init>
 8014d40:	2320      	movs	r3, #32
 8014d42:	2203      	movs	r2, #3
 8014d44:	2104      	movs	r1, #4
 8014d46:	4841      	ldr	r0, [pc, #260]	; (8014e4c <emac_start+0x1b8>)
 8014d48:	f7ff fad2 	bl	80142f0 <gpio_init>
 8014d4c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8014d50:	2203      	movs	r2, #3
 8014d52:	2118      	movs	r1, #24
 8014d54:	483e      	ldr	r0, [pc, #248]	; (8014e50 <emac_start+0x1bc>)
 8014d56:	f7ff facb 	bl	80142f0 <gpio_init>
 8014d5a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8014d5e:	2203      	movs	r2, #3
 8014d60:	2118      	movs	r1, #24
 8014d62:	483b      	ldr	r0, [pc, #236]	; (8014e50 <emac_start+0x1bc>)
 8014d64:	f7ff fac4 	bl	80142f0 <gpio_init>
 8014d68:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8014d6c:	2203      	movs	r2, #3
 8014d6e:	2118      	movs	r1, #24
 8014d70:	4837      	ldr	r0, [pc, #220]	; (8014e50 <emac_start+0x1bc>)
 8014d72:	f7ff fabd 	bl	80142f0 <gpio_init>
 8014d76:	f240 500e 	movw	r0, #1294	; 0x50e
 8014d7a:	f7ff fbf0 	bl	801455e <rcu_periph_clock_enable>
 8014d7e:	f240 500f 	movw	r0, #1295	; 0x50f
 8014d82:	f7ff fbec 	bl	801455e <rcu_periph_clock_enable>
 8014d86:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8014d8a:	f7ff fbe8 	bl	801455e <rcu_periph_clock_enable>
 8014d8e:	f000 fd67 	bl	8015860 <enet_deinit>
 8014d92:	f000 f9bf 	bl	8015114 <enet_software_reset>
 8014d96:	b900      	cbnz	r0, 8014d9a <emac_start+0x106>
 8014d98:	e7fe      	b.n	8014d98 <emac_start+0x104>
 8014d9a:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8014d9e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014da2:	2001      	movs	r0, #1
 8014da4:	f000 fb3a 	bl	801541c <enet_init>
 8014da8:	4b2a      	ldr	r3, [pc, #168]	; (8014e54 <emac_start+0x1c0>)
 8014daa:	6018      	str	r0, [r3, #0]
 8014dac:	681b      	ldr	r3, [r3, #0]
 8014dae:	b903      	cbnz	r3, 8014db2 <emac_start+0x11e>
 8014db0:	e7fe      	b.n	8014db0 <emac_start+0x11c>
 8014db2:	236c      	movs	r3, #108	; 0x6c
 8014db4:	4a23      	ldr	r2, [pc, #140]	; (8014e44 <emac_start+0x1b0>)
 8014db6:	4921      	ldr	r1, [pc, #132]	; (8014e3c <emac_start+0x1a8>)
 8014db8:	4827      	ldr	r0, [pc, #156]	; (8014e58 <emac_start+0x1c4>)
 8014dba:	f7fe fc51 	bl	8013660 <printf>
 8014dbe:	2102      	movs	r1, #2
 8014dc0:	4b26      	ldr	r3, [pc, #152]	; (8014e5c <emac_start+0x1c8>)
 8014dc2:	f8d3 07ec 	ldr.w	r0, [r3, #2028]	; 0x7ec
 8014dc6:	f8d3 57f0 	ldr.w	r5, [r3, #2032]	; 0x7f0
 8014dca:	0a02      	lsrs	r2, r0, #8
 8014dcc:	0a2e      	lsrs	r6, r5, #8
 8014dce:	7125      	strb	r5, [r4, #4]
 8014dd0:	7166      	strb	r6, [r4, #5]
 8014dd2:	0c03      	lsrs	r3, r0, #16
 8014dd4:	b2ed      	uxtb	r5, r5
 8014dd6:	0e00      	lsrs	r0, r0, #24
 8014dd8:	b2f6      	uxtb	r6, r6
 8014dda:	7021      	strb	r1, [r4, #0]
 8014ddc:	7062      	strb	r2, [r4, #1]
 8014dde:	70a3      	strb	r3, [r4, #2]
 8014de0:	70e0      	strb	r0, [r4, #3]
 8014de2:	b2db      	uxtb	r3, r3
 8014de4:	b2d2      	uxtb	r2, r2
 8014de6:	e9cd 0500 	strd	r0, r5, [sp]
 8014dea:	9602      	str	r6, [sp, #8]
 8014dec:	481c      	ldr	r0, [pc, #112]	; (8014e60 <emac_start+0x1cc>)
 8014dee:	f7fe fc37 	bl	8013660 <printf>
 8014df2:	4621      	mov	r1, r4
 8014df4:	2000      	movs	r0, #0
 8014df6:	f000 fa71 	bl	80152dc <enet_mac_address_set>
 8014dfa:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8014dfe:	f000 f99d 	bl	801513c <enet_descriptors_chain_init>
 8014e02:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8014e06:	f000 f999 	bl	801513c <enet_descriptors_chain_init>
 8014e0a:	2400      	movs	r4, #0
 8014e0c:	4d15      	ldr	r5, [pc, #84]	; (8014e64 <emac_start+0x1d0>)
 8014e0e:	4628      	mov	r0, r5
 8014e10:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8014e14:	3401      	adds	r4, #1
 8014e16:	f000 fa5b 	bl	80152d0 <enet_transmit_checksum_config>
 8014e1a:	2c04      	cmp	r4, #4
 8014e1c:	f105 0510 	add.w	r5, r5, #16
 8014e20:	d1f5      	bne.n	8014e0e <emac_start+0x17a>
 8014e22:	f000 fc95 	bl	8015750 <enet_enable>
 8014e26:	238e      	movs	r3, #142	; 0x8e
 8014e28:	4a03      	ldr	r2, [pc, #12]	; (8014e38 <emac_start+0x1a4>)
 8014e2a:	4904      	ldr	r1, [pc, #16]	; (8014e3c <emac_start+0x1a8>)
 8014e2c:	480a      	ldr	r0, [pc, #40]	; (8014e58 <emac_start+0x1c4>)
 8014e2e:	f7fe fc17 	bl	8013660 <printf>
 8014e32:	2001      	movs	r0, #1
 8014e34:	b004      	add	sp, #16
 8014e36:	bd70      	pop	{r4, r5, r6, pc}
 8014e38:	08018305 	stmdaeq	r1, {r0, r2, r8, r9, pc}
 8014e3c:	080182c1 	stmdaeq	r1, {r0, r6, r7, r9, pc}
 8014e40:	080159cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, fp, ip, lr}
 8014e44:	080182f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, pc}
 8014e48:	40010800 	andmi	r0, r1, r0, lsl #16
 8014e4c:	40011000 	andmi	r1, r1, r0
 8014e50:	40010c00 	andmi	r0, r1, r0, lsl #24
 8014e54:	200125ac 	andcs	r2, r1, ip, lsr #11
 8014e58:	080159db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, lr}
 8014e5c:	1ffff000 	svcne	0x00fff000
 8014e60:	080182d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, pc}
 8014e64:	200179f4 	strdcs	r7, [r1], -r4

08014e68 <emac_eth_recv>:
 8014e68:	b538      	push	{r3, r4, r5, lr}
 8014e6a:	4605      	mov	r5, r0
 8014e6c:	f000 fcc8 	bl	8015800 <enet_rxframe_size_get>
 8014e70:	4604      	mov	r4, r0
 8014e72:	b138      	cbz	r0, 8014e84 <emac_eth_recv+0x1c>
 8014e74:	4b05      	ldr	r3, [pc, #20]	; (8014e8c <emac_eth_recv+0x24>)
 8014e76:	2105      	movs	r1, #5
 8014e78:	6818      	ldr	r0, [r3, #0]
 8014e7a:	f000 fc70 	bl	801575e <enet_desc_information_get>
 8014e7e:	6028      	str	r0, [r5, #0]
 8014e80:	4620      	mov	r0, r4
 8014e82:	bd38      	pop	{r3, r4, r5, pc}
 8014e84:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014e88:	e7fb      	b.n	8014e82 <emac_eth_recv+0x1a>
 8014e8a:	bf00      	nop
 8014e8c:	200125b8 			; <UNDEFINED> instruction: 0x200125b8

08014e90 <emac_free_pkt>:
 8014e90:	2100      	movs	r1, #0
 8014e92:	4608      	mov	r0, r1
 8014e94:	f000 b99a 	b.w	80151cc <enet_frame_receive>

08014e98 <emac_eth_send>:
 8014e98:	f000 b9d8 	b.w	801524c <enet_frame_transmit>

08014e9c <gd32_uart_begin>:
 8014e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e9e:	4604      	mov	r4, r0
 8014ea0:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8014ea4:	461d      	mov	r5, r3
 8014ea6:	460f      	mov	r7, r1
 8014ea8:	4616      	mov	r6, r2
 8014eaa:	f7ff fb58 	bl	801455e <rcu_periph_clock_enable>
 8014eae:	4b88      	ldr	r3, [pc, #544]	; (80150d0 <gd32_uart_begin+0x234>)
 8014eb0:	429c      	cmp	r4, r3
 8014eb2:	f000 80f4 	beq.w	801509e <gd32_uart_begin+0x202>
 8014eb6:	d82f      	bhi.n	8014f18 <gd32_uart_begin+0x7c>
 8014eb8:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014ebc:	429c      	cmp	r4, r3
 8014ebe:	f000 80c9 	beq.w	8015054 <gd32_uart_begin+0x1b8>
 8014ec2:	d80e      	bhi.n	8014ee2 <gd32_uart_begin+0x46>
 8014ec4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014ec8:	429c      	cmp	r4, r3
 8014eca:	d058      	beq.n	8014f7e <gd32_uart_begin+0xe2>
 8014ecc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014ed0:	429c      	cmp	r4, r3
 8014ed2:	f000 80a6 	beq.w	8015022 <gd32_uart_begin+0x186>
 8014ed6:	218b      	movs	r1, #139	; 0x8b
 8014ed8:	4b7e      	ldr	r3, [pc, #504]	; (80150d4 <gd32_uart_begin+0x238>)
 8014eda:	4a7f      	ldr	r2, [pc, #508]	; (80150d8 <gd32_uart_begin+0x23c>)
 8014edc:	487f      	ldr	r0, [pc, #508]	; (80150dc <gd32_uart_begin+0x240>)
 8014ede:	f7fd ff69 	bl	8012db4 <__assert_func>
 8014ee2:	4b7f      	ldr	r3, [pc, #508]	; (80150e0 <gd32_uart_begin+0x244>)
 8014ee4:	429c      	cmp	r4, r3
 8014ee6:	d1f6      	bne.n	8014ed6 <gd32_uart_begin+0x3a>
 8014ee8:	f240 7014 	movw	r0, #1812	; 0x714
 8014eec:	f7ff fb37 	bl	801455e <rcu_periph_clock_enable>
 8014ef0:	f240 6004 	movw	r0, #1540	; 0x604
 8014ef4:	f7ff fb33 	bl	801455e <rcu_periph_clock_enable>
 8014ef8:	f240 6005 	movw	r0, #1541	; 0x605
 8014efc:	f7ff fb2f 	bl	801455e <rcu_periph_clock_enable>
 8014f00:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8014f04:	2203      	movs	r2, #3
 8014f06:	2118      	movs	r1, #24
 8014f08:	4876      	ldr	r0, [pc, #472]	; (80150e4 <gd32_uart_begin+0x248>)
 8014f0a:	f7ff f9f1 	bl	80142f0 <gpio_init>
 8014f0e:	2304      	movs	r3, #4
 8014f10:	2203      	movs	r2, #3
 8014f12:	4619      	mov	r1, r3
 8014f14:	4874      	ldr	r0, [pc, #464]	; (80150e8 <gd32_uart_begin+0x24c>)
 8014f16:	e02f      	b.n	8014f78 <gd32_uart_begin+0xdc>
 8014f18:	4b74      	ldr	r3, [pc, #464]	; (80150ec <gd32_uart_begin+0x250>)
 8014f1a:	429c      	cmp	r4, r3
 8014f1c:	d018      	beq.n	8014f50 <gd32_uart_begin+0xb4>
 8014f1e:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014f22:	429c      	cmp	r4, r3
 8014f24:	f000 80ab 	beq.w	801507e <gd32_uart_begin+0x1e2>
 8014f28:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014f2c:	429c      	cmp	r4, r3
 8014f2e:	d1d2      	bne.n	8014ed6 <gd32_uart_begin+0x3a>
 8014f30:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8014f34:	f7ff fb13 	bl	801455e <rcu_periph_clock_enable>
 8014f38:	f240 6006 	movw	r0, #1542	; 0x606
 8014f3c:	f7ff fb0f 	bl	801455e <rcu_periph_clock_enable>
 8014f40:	2302      	movs	r3, #2
 8014f42:	2203      	movs	r2, #3
 8014f44:	2118      	movs	r1, #24
 8014f46:	486a      	ldr	r0, [pc, #424]	; (80150f0 <gd32_uart_begin+0x254>)
 8014f48:	f7ff f9d2 	bl	80142f0 <gpio_init>
 8014f4c:	2301      	movs	r3, #1
 8014f4e:	e0b6      	b.n	80150be <gd32_uart_begin+0x222>
 8014f50:	f240 600e 	movw	r0, #1550	; 0x60e
 8014f54:	f7ff fb03 	bl	801455e <rcu_periph_clock_enable>
 8014f58:	f240 6002 	movw	r0, #1538	; 0x602
 8014f5c:	f7ff faff 	bl	801455e <rcu_periph_clock_enable>
 8014f60:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014f64:	2203      	movs	r2, #3
 8014f66:	2118      	movs	r1, #24
 8014f68:	4862      	ldr	r0, [pc, #392]	; (80150f4 <gd32_uart_begin+0x258>)
 8014f6a:	f7ff f9c1 	bl	80142f0 <gpio_init>
 8014f6e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014f72:	2203      	movs	r2, #3
 8014f74:	2104      	movs	r1, #4
 8014f76:	485f      	ldr	r0, [pc, #380]	; (80150f4 <gd32_uart_begin+0x258>)
 8014f78:	f7ff f9ba 	bl	80142f0 <gpio_init>
 8014f7c:	e017      	b.n	8014fae <gd32_uart_begin+0x112>
 8014f7e:	f240 7011 	movw	r0, #1809	; 0x711
 8014f82:	f7ff faec 	bl	801455e <rcu_periph_clock_enable>
 8014f86:	f240 6005 	movw	r0, #1541	; 0x605
 8014f8a:	f7ff fae8 	bl	801455e <rcu_periph_clock_enable>
 8014f8e:	2320      	movs	r3, #32
 8014f90:	2203      	movs	r2, #3
 8014f92:	2118      	movs	r1, #24
 8014f94:	4854      	ldr	r0, [pc, #336]	; (80150e8 <gd32_uart_begin+0x24c>)
 8014f96:	f7ff f9ab 	bl	80142f0 <gpio_init>
 8014f9a:	2104      	movs	r1, #4
 8014f9c:	4852      	ldr	r0, [pc, #328]	; (80150e8 <gd32_uart_begin+0x24c>)
 8014f9e:	2340      	movs	r3, #64	; 0x40
 8014fa0:	2203      	movs	r2, #3
 8014fa2:	f7ff f9a5 	bl	80142f0 <gpio_init>
 8014fa6:	2101      	movs	r1, #1
 8014fa8:	2008      	movs	r0, #8
 8014faa:	f7ff f9f5 	bl	8014398 <gpio_pin_remap_config>
 8014fae:	4620      	mov	r0, r4
 8014fb0:	f7ff fda2 	bl	8014af8 <usart_deinit>
 8014fb4:	68e3      	ldr	r3, [r4, #12]
 8014fb6:	4639      	mov	r1, r7
 8014fb8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014fbc:	60e3      	str	r3, [r4, #12]
 8014fbe:	4620      	mov	r0, r4
 8014fc0:	f7ff fdfc 	bl	8014bbc <usart_baudrate_set>
 8014fc4:	2e09      	cmp	r6, #9
 8014fc6:	bf0c      	ite	eq
 8014fc8:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8014fcc:	2100      	movne	r1, #0
 8014fce:	4620      	mov	r0, r4
 8014fd0:	f7ff fe30 	bl	8014c34 <usart_word_length_set>
 8014fd4:	9b06      	ldr	r3, [sp, #24]
 8014fd6:	4620      	mov	r0, r4
 8014fd8:	2b02      	cmp	r3, #2
 8014fda:	bf0c      	ite	eq
 8014fdc:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8014fe0:	2100      	movne	r1, #0
 8014fe2:	f7ff fe2f 	bl	8014c44 <usart_stop_bit_set>
 8014fe6:	2d01      	cmp	r5, #1
 8014fe8:	d06d      	beq.n	80150c6 <gd32_uart_begin+0x22a>
 8014fea:	2d02      	cmp	r5, #2
 8014fec:	d16e      	bne.n	80150cc <gd32_uart_begin+0x230>
 8014fee:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014ff2:	4620      	mov	r0, r4
 8014ff4:	f7ff fe16 	bl	8014c24 <usart_parity_config>
 8014ff8:	2100      	movs	r1, #0
 8014ffa:	4620      	mov	r0, r4
 8014ffc:	f7ff fe36 	bl	8014c6c <usart_hardware_flow_rts_config>
 8015000:	2100      	movs	r1, #0
 8015002:	4620      	mov	r0, r4
 8015004:	f7ff fe38 	bl	8014c78 <usart_hardware_flow_cts_config>
 8015008:	2104      	movs	r1, #4
 801500a:	4620      	mov	r0, r4
 801500c:	f7ff fe28 	bl	8014c60 <usart_receive_config>
 8015010:	2108      	movs	r1, #8
 8015012:	4620      	mov	r0, r4
 8015014:	f7ff fe1e 	bl	8014c54 <usart_transmit_config>
 8015018:	68e3      	ldr	r3, [r4, #12]
 801501a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801501e:	60e3      	str	r3, [r4, #12]
 8015020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015022:	f240 7012 	movw	r0, #1810	; 0x712
 8015026:	f7ff fa9a 	bl	801455e <rcu_periph_clock_enable>
 801502a:	f240 6004 	movw	r0, #1540	; 0x604
 801502e:	f7ff fa96 	bl	801455e <rcu_periph_clock_enable>
 8015032:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015036:	2203      	movs	r2, #3
 8015038:	2118      	movs	r1, #24
 801503a:	482a      	ldr	r0, [pc, #168]	; (80150e4 <gd32_uart_begin+0x248>)
 801503c:	f7ff f958 	bl	80142f0 <gpio_init>
 8015040:	2104      	movs	r1, #4
 8015042:	4828      	ldr	r0, [pc, #160]	; (80150e4 <gd32_uart_begin+0x248>)
 8015044:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015048:	2203      	movs	r2, #3
 801504a:	f7ff f951 	bl	80142f0 <gpio_init>
 801504e:	2101      	movs	r1, #1
 8015050:	4829      	ldr	r0, [pc, #164]	; (80150f8 <gd32_uart_begin+0x25c>)
 8015052:	e7aa      	b.n	8014faa <gd32_uart_begin+0x10e>
 8015054:	f240 7013 	movw	r0, #1811	; 0x713
 8015058:	f7ff fa81 	bl	801455e <rcu_periph_clock_enable>
 801505c:	f240 6004 	movw	r0, #1540	; 0x604
 8015060:	f7ff fa7d 	bl	801455e <rcu_periph_clock_enable>
 8015064:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8015068:	2203      	movs	r2, #3
 801506a:	2118      	movs	r1, #24
 801506c:	481d      	ldr	r0, [pc, #116]	; (80150e4 <gd32_uart_begin+0x248>)
 801506e:	f7ff f93f 	bl	80142f0 <gpio_init>
 8015072:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015076:	2203      	movs	r2, #3
 8015078:	2104      	movs	r1, #4
 801507a:	481a      	ldr	r0, [pc, #104]	; (80150e4 <gd32_uart_begin+0x248>)
 801507c:	e77c      	b.n	8014f78 <gd32_uart_begin+0xdc>
 801507e:	f641 1018 	movw	r0, #6424	; 0x1918
 8015082:	f7ff fa6c 	bl	801455e <rcu_periph_clock_enable>
 8015086:	f240 6004 	movw	r0, #1540	; 0x604
 801508a:	f7ff fa68 	bl	801455e <rcu_periph_clock_enable>
 801508e:	2340      	movs	r3, #64	; 0x40
 8015090:	2203      	movs	r2, #3
 8015092:	2118      	movs	r1, #24
 8015094:	4813      	ldr	r0, [pc, #76]	; (80150e4 <gd32_uart_begin+0x248>)
 8015096:	f7ff f92b 	bl	80142f0 <gpio_init>
 801509a:	2380      	movs	r3, #128	; 0x80
 801509c:	e7eb      	b.n	8015076 <gd32_uart_begin+0x1da>
 801509e:	f641 201e 	movw	r0, #6686	; 0x1a1e
 80150a2:	f7ff fa5c 	bl	801455e <rcu_periph_clock_enable>
 80150a6:	f240 6006 	movw	r0, #1542	; 0x606
 80150aa:	f7ff fa58 	bl	801455e <rcu_periph_clock_enable>
 80150ae:	f44f 7380 	mov.w	r3, #256	; 0x100
 80150b2:	2203      	movs	r2, #3
 80150b4:	2118      	movs	r1, #24
 80150b6:	480e      	ldr	r0, [pc, #56]	; (80150f0 <gd32_uart_begin+0x254>)
 80150b8:	f7ff f91a 	bl	80142f0 <gpio_init>
 80150bc:	2380      	movs	r3, #128	; 0x80
 80150be:	2203      	movs	r2, #3
 80150c0:	2104      	movs	r1, #4
 80150c2:	480b      	ldr	r0, [pc, #44]	; (80150f0 <gd32_uart_begin+0x254>)
 80150c4:	e758      	b.n	8014f78 <gd32_uart_begin+0xdc>
 80150c6:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80150ca:	e792      	b.n	8014ff2 <gd32_uart_begin+0x156>
 80150cc:	2100      	movs	r1, #0
 80150ce:	e790      	b.n	8014ff2 <gd32_uart_begin+0x156>
 80150d0:	40007800 	andmi	r7, r0, r0, lsl #16
 80150d4:	0801825a 	stmdaeq	r1, {r1, r3, r4, r6, r9, pc}
 80150d8:	08018320 	stmdaeq	r1, {r5, r8, r9, pc}
 80150dc:	08018310 	stmdaeq	r1, {r4, r8, r9, pc}
 80150e0:	40005000 	andmi	r5, r0, r0
 80150e4:	40011000 	andmi	r1, r1, r0
 80150e8:	40011400 	andmi	r1, r1, r0, lsl #8
 80150ec:	40013800 	andmi	r3, r1, r0, lsl #16
 80150f0:	40011800 	andmi	r1, r1, r0, lsl #16
 80150f4:	40010800 	andmi	r0, r1, r0, lsl #16
 80150f8:	00140010 	andseq	r0, r4, r0, lsl r0

080150fc <enet_delay>:
 80150fc:	2300      	movs	r3, #0
 80150fe:	b082      	sub	sp, #8
 8015100:	9301      	str	r3, [sp, #4]
 8015102:	9001      	str	r0, [sp, #4]
 8015104:	9b01      	ldr	r3, [sp, #4]
 8015106:	b90b      	cbnz	r3, 801510c <enet_delay+0x10>
 8015108:	b002      	add	sp, #8
 801510a:	4770      	bx	lr
 801510c:	9b01      	ldr	r3, [sp, #4]
 801510e:	3b01      	subs	r3, #1
 8015110:	9301      	str	r3, [sp, #4]
 8015112:	e7f7      	b.n	8015104 <enet_delay+0x8>

08015114 <enet_software_reset>:
 8015114:	4b07      	ldr	r3, [pc, #28]	; (8015134 <enet_software_reset+0x20>)
 8015116:	681a      	ldr	r2, [r3, #0]
 8015118:	f042 0201 	orr.w	r2, r2, #1
 801511c:	601a      	str	r2, [r3, #0]
 801511e:	4a06      	ldr	r2, [pc, #24]	; (8015138 <enet_software_reset+0x24>)
 8015120:	6819      	ldr	r1, [r3, #0]
 8015122:	07c9      	lsls	r1, r1, #31
 8015124:	d501      	bpl.n	801512a <enet_software_reset+0x16>
 8015126:	3a01      	subs	r2, #1
 8015128:	d1fa      	bne.n	8015120 <enet_software_reset+0xc>
 801512a:	6818      	ldr	r0, [r3, #0]
 801512c:	43c0      	mvns	r0, r0
 801512e:	f000 0001 	and.w	r0, r0, #1
 8015132:	4770      	bx	lr
 8015134:	40029000 	andmi	r9, r2, r0
 8015138:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801513c <enet_descriptors_chain_init>:
 801513c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8015140:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015142:	4a19      	ldr	r2, [pc, #100]	; (80151a8 <enet_descriptors_chain_init+0x6c>)
 8015144:	d125      	bne.n	8015192 <enet_descriptors_chain_init+0x56>
 8015146:	2500      	movs	r5, #0
 8015148:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801514c:	2004      	movs	r0, #4
 801514e:	4b17      	ldr	r3, [pc, #92]	; (80151ac <enet_descriptors_chain_init+0x70>)
 8015150:	4c17      	ldr	r4, [pc, #92]	; (80151b0 <enet_descriptors_chain_init+0x74>)
 8015152:	6113      	str	r3, [r2, #16]
 8015154:	4a17      	ldr	r2, [pc, #92]	; (80151b4 <enet_descriptors_chain_init+0x78>)
 8015156:	6013      	str	r3, [r2, #0]
 8015158:	2200      	movs	r2, #0
 801515a:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801515e:	4916      	ldr	r1, [pc, #88]	; (80151b8 <enet_descriptors_chain_init+0x7c>)
 8015160:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8015164:	600a      	str	r2, [r1, #0]
 8015166:	4915      	ldr	r1, [pc, #84]	; (80151bc <enet_descriptors_chain_init+0x80>)
 8015168:	600a      	str	r2, [r1, #0]
 801516a:	f103 0110 	add.w	r1, r3, #16
 801516e:	fb0e 4702 	mla	r7, lr, r2, r4
 8015172:	f841 7c08 	str.w	r7, [r1, #-8]
 8015176:	4594      	cmp	ip, r2
 8015178:	bf94      	ite	ls
 801517a:	461f      	movls	r7, r3
 801517c:	460f      	movhi	r7, r1
 801517e:	3201      	adds	r2, #1
 8015180:	4290      	cmp	r0, r2
 8015182:	e941 6504 	strd	r6, r5, [r1, #-16]
 8015186:	f841 7c04 	str.w	r7, [r1, #-4]
 801518a:	f101 0110 	add.w	r1, r1, #16
 801518e:	d1ee      	bne.n	801516e <enet_descriptors_chain_init+0x32>
 8015190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015192:	4b0b      	ldr	r3, [pc, #44]	; (80151c0 <enet_descriptors_chain_init+0x84>)
 8015194:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8015198:	60d3      	str	r3, [r2, #12]
 801519a:	4a0a      	ldr	r2, [pc, #40]	; (80151c4 <enet_descriptors_chain_init+0x88>)
 801519c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80151a0:	200a      	movs	r0, #10
 80151a2:	4c09      	ldr	r4, [pc, #36]	; (80151c8 <enet_descriptors_chain_init+0x8c>)
 80151a4:	6013      	str	r3, [r2, #0]
 80151a6:	e7d7      	b.n	8015158 <enet_descriptors_chain_init+0x1c>
 80151a8:	40029000 	andmi	r9, r2, r0
 80151ac:	200179f4 	strdcs	r7, [r1], -r4
 80151b0:	20016224 	andcs	r6, r1, r4, lsr #4
 80151b4:	200125bc 			; <UNDEFINED> instruction: 0x200125bc
 80151b8:	200125b0 			; <UNDEFINED> instruction: 0x200125b0
 80151bc:	200125b4 			; <UNDEFINED> instruction: 0x200125b4
 80151c0:	20016184 	andcs	r6, r1, r4, lsl #3
 80151c4:	200125b8 			; <UNDEFINED> instruction: 0x200125b8
 80151c8:	200125fc 	strdcs	r2, [r1], -ip

080151cc <enet_frame_receive>:
 80151cc:	4a1d      	ldr	r2, [pc, #116]	; (8015244 <enet_frame_receive+0x78>)
 80151ce:	b510      	push	{r4, lr}
 80151d0:	6813      	ldr	r3, [r2, #0]
 80151d2:	681b      	ldr	r3, [r3, #0]
 80151d4:	2b00      	cmp	r3, #0
 80151d6:	db33      	blt.n	8015240 <enet_frame_receive+0x74>
 80151d8:	b970      	cbnz	r0, 80151f8 <enet_frame_receive+0x2c>
 80151da:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80151de:	6813      	ldr	r3, [r2, #0]
 80151e0:	6019      	str	r1, [r3, #0]
 80151e2:	4919      	ldr	r1, [pc, #100]	; (8015248 <enet_frame_receive+0x7c>)
 80151e4:	6948      	ldr	r0, [r1, #20]
 80151e6:	0604      	lsls	r4, r0, #24
 80151e8:	d419      	bmi.n	801521e <enet_frame_receive+0x52>
 80151ea:	6859      	ldr	r1, [r3, #4]
 80151ec:	0448      	lsls	r0, r1, #17
 80151ee:	d51b      	bpl.n	8015228 <enet_frame_receive+0x5c>
 80151f0:	68db      	ldr	r3, [r3, #12]
 80151f2:	2001      	movs	r0, #1
 80151f4:	6013      	str	r3, [r2, #0]
 80151f6:	bd10      	pop	{r4, pc}
 80151f8:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80151fc:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8015200:	d11e      	bne.n	8015240 <enet_frame_receive+0x74>
 8015202:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8015206:	3b04      	subs	r3, #4
 8015208:	428b      	cmp	r3, r1
 801520a:	d819      	bhi.n	8015240 <enet_frame_receive+0x74>
 801520c:	2100      	movs	r1, #0
 801520e:	4299      	cmp	r1, r3
 8015210:	6814      	ldr	r4, [r2, #0]
 8015212:	d2e2      	bcs.n	80151da <enet_frame_receive+0xe>
 8015214:	68a4      	ldr	r4, [r4, #8]
 8015216:	5d0c      	ldrb	r4, [r1, r4]
 8015218:	5444      	strb	r4, [r0, r1]
 801521a:	3101      	adds	r1, #1
 801521c:	e7f7      	b.n	801520e <enet_frame_receive+0x42>
 801521e:	2080      	movs	r0, #128	; 0x80
 8015220:	6148      	str	r0, [r1, #20]
 8015222:	2000      	movs	r0, #0
 8015224:	6088      	str	r0, [r1, #8]
 8015226:	e7e0      	b.n	80151ea <enet_frame_receive+0x1e>
 8015228:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801522c:	4906      	ldr	r1, [pc, #24]	; (8015248 <enet_frame_receive+0x7c>)
 801522e:	bf05      	ittet	eq
 8015230:	3310      	addeq	r3, #16
 8015232:	6809      	ldreq	r1, [r1, #0]
 8015234:	68cb      	ldrne	r3, [r1, #12]
 8015236:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801523a:	bf08      	it	eq
 801523c:	185b      	addeq	r3, r3, r1
 801523e:	e7d8      	b.n	80151f2 <enet_frame_receive+0x26>
 8015240:	2000      	movs	r0, #0
 8015242:	e7d8      	b.n	80151f6 <enet_frame_receive+0x2a>
 8015244:	200125b8 			; <UNDEFINED> instruction: 0x200125b8
 8015248:	40029000 	andmi	r9, r2, r0

0801524c <enet_frame_transmit>:
 801524c:	4a1e      	ldr	r2, [pc, #120]	; (80152c8 <enet_frame_transmit+0x7c>)
 801524e:	b530      	push	{r4, r5, lr}
 8015250:	6813      	ldr	r3, [r2, #0]
 8015252:	681b      	ldr	r3, [r3, #0]
 8015254:	2b00      	cmp	r3, #0
 8015256:	db34      	blt.n	80152c2 <enet_frame_transmit+0x76>
 8015258:	f240 53f4 	movw	r3, #1524	; 0x5f4
 801525c:	4299      	cmp	r1, r3
 801525e:	d830      	bhi.n	80152c2 <enet_frame_transmit+0x76>
 8015260:	b9e8      	cbnz	r0, 801529e <enet_frame_transmit+0x52>
 8015262:	6813      	ldr	r3, [r2, #0]
 8015264:	4819      	ldr	r0, [pc, #100]	; (80152cc <enet_frame_transmit+0x80>)
 8015266:	6059      	str	r1, [r3, #4]
 8015268:	6819      	ldr	r1, [r3, #0]
 801526a:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801526e:	6019      	str	r1, [r3, #0]
 8015270:	6941      	ldr	r1, [r0, #20]
 8015272:	6944      	ldr	r4, [r0, #20]
 8015274:	f001 0104 	and.w	r1, r1, #4
 8015278:	f004 0420 	and.w	r4, r4, #32
 801527c:	4321      	orrs	r1, r4
 801527e:	d110      	bne.n	80152a2 <enet_frame_transmit+0x56>
 8015280:	6819      	ldr	r1, [r3, #0]
 8015282:	02c8      	lsls	r0, r1, #11
 8015284:	d511      	bpl.n	80152aa <enet_frame_transmit+0x5e>
 8015286:	68db      	ldr	r3, [r3, #12]
 8015288:	2001      	movs	r0, #1
 801528a:	6013      	str	r3, [r2, #0]
 801528c:	bd30      	pop	{r4, r5, pc}
 801528e:	5cc5      	ldrb	r5, [r0, r3]
 8015290:	68a4      	ldr	r4, [r4, #8]
 8015292:	551d      	strb	r5, [r3, r4]
 8015294:	3301      	adds	r3, #1
 8015296:	428b      	cmp	r3, r1
 8015298:	6814      	ldr	r4, [r2, #0]
 801529a:	d1f8      	bne.n	801528e <enet_frame_transmit+0x42>
 801529c:	e7e1      	b.n	8015262 <enet_frame_transmit+0x16>
 801529e:	2300      	movs	r3, #0
 80152a0:	e7f9      	b.n	8015296 <enet_frame_transmit+0x4a>
 80152a2:	6141      	str	r1, [r0, #20]
 80152a4:	2100      	movs	r1, #0
 80152a6:	6041      	str	r1, [r0, #4]
 80152a8:	e7ea      	b.n	8015280 <enet_frame_transmit+0x34>
 80152aa:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80152ae:	4907      	ldr	r1, [pc, #28]	; (80152cc <enet_frame_transmit+0x80>)
 80152b0:	bf05      	ittet	eq
 80152b2:	3310      	addeq	r3, #16
 80152b4:	6809      	ldreq	r1, [r1, #0]
 80152b6:	690b      	ldrne	r3, [r1, #16]
 80152b8:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80152bc:	bf08      	it	eq
 80152be:	185b      	addeq	r3, r3, r1
 80152c0:	e7e2      	b.n	8015288 <enet_frame_transmit+0x3c>
 80152c2:	2000      	movs	r0, #0
 80152c4:	e7e2      	b.n	801528c <enet_frame_transmit+0x40>
 80152c6:	bf00      	nop
 80152c8:	200125bc 			; <UNDEFINED> instruction: 0x200125bc
 80152cc:	40029000 	andmi	r9, r2, r0

080152d0 <enet_transmit_checksum_config>:
 80152d0:	6803      	ldr	r3, [r0, #0]
 80152d2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80152d6:	430b      	orrs	r3, r1
 80152d8:	6003      	str	r3, [r0, #0]
 80152da:	4770      	bx	lr

080152dc <enet_mac_address_set>:
 80152dc:	888a      	ldrh	r2, [r1, #4]
 80152de:	4b03      	ldr	r3, [pc, #12]	; (80152ec <enet_mac_address_set+0x10>)
 80152e0:	50c2      	str	r2, [r0, r3]
 80152e2:	680a      	ldr	r2, [r1, #0]
 80152e4:	3304      	adds	r3, #4
 80152e6:	50c2      	str	r2, [r0, r3]
 80152e8:	4770      	bx	lr
 80152ea:	bf00      	nop
 80152ec:	40028040 	andmi	r8, r2, r0, asr #32

080152f0 <enet_rx_enable>:
 80152f0:	4a05      	ldr	r2, [pc, #20]	; (8015308 <enet_rx_enable+0x18>)
 80152f2:	6813      	ldr	r3, [r2, #0]
 80152f4:	f043 0304 	orr.w	r3, r3, #4
 80152f8:	6013      	str	r3, [r2, #0]
 80152fa:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80152fe:	6993      	ldr	r3, [r2, #24]
 8015300:	f043 0302 	orr.w	r3, r3, #2
 8015304:	6193      	str	r3, [r2, #24]
 8015306:	4770      	bx	lr
 8015308:	40028000 	andmi	r8, r2, r0

0801530c <enet_phy_write_read>:
 801530c:	b530      	push	{r4, r5, lr}
 801530e:	4604      	mov	r4, r0
 8015310:	4d13      	ldr	r5, [pc, #76]	; (8015360 <enet_phy_write_read+0x54>)
 8015312:	0192      	lsls	r2, r2, #6
 8015314:	6928      	ldr	r0, [r5, #16]
 8015316:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801531a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801531e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8015322:	4302      	orrs	r2, r0
 8015324:	02c9      	lsls	r1, r1, #11
 8015326:	b289      	uxth	r1, r1
 8015328:	2c02      	cmp	r4, #2
 801532a:	ea42 0204 	orr.w	r2, r2, r4
 801532e:	ea42 0201 	orr.w	r2, r2, r1
 8015332:	bf08      	it	eq
 8015334:	8819      	ldrheq	r1, [r3, #0]
 8015336:	f042 0201 	orr.w	r2, r2, #1
 801533a:	bf08      	it	eq
 801533c:	6169      	streq	r1, [r5, #20]
 801533e:	612a      	str	r2, [r5, #16]
 8015340:	4907      	ldr	r1, [pc, #28]	; (8015360 <enet_phy_write_read+0x54>)
 8015342:	4a08      	ldr	r2, [pc, #32]	; (8015364 <enet_phy_write_read+0x58>)
 8015344:	6908      	ldr	r0, [r1, #16]
 8015346:	07c0      	lsls	r0, r0, #31
 8015348:	d501      	bpl.n	801534e <enet_phy_write_read+0x42>
 801534a:	3a01      	subs	r2, #1
 801534c:	d1fa      	bne.n	8015344 <enet_phy_write_read+0x38>
 801534e:	690a      	ldr	r2, [r1, #16]
 8015350:	43d2      	mvns	r2, r2
 8015352:	f002 0001 	and.w	r0, r2, #1
 8015356:	b90c      	cbnz	r4, 801535c <enet_phy_write_read+0x50>
 8015358:	694a      	ldr	r2, [r1, #20]
 801535a:	801a      	strh	r2, [r3, #0]
 801535c:	bd30      	pop	{r4, r5, pc}
 801535e:	bf00      	nop
 8015360:	40028000 	andmi	r8, r2, r0
 8015364:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015368 <enet_phy_config>:
 8015368:	4b22      	ldr	r3, [pc, #136]	; (80153f4 <enet_phy_config+0x8c>)
 801536a:	b513      	push	{r0, r1, r4, lr}
 801536c:	2001      	movs	r0, #1
 801536e:	691c      	ldr	r4, [r3, #16]
 8015370:	f7ff f9d2 	bl	8014718 <rcu_clock_freq_get>
 8015374:	4b20      	ldr	r3, [pc, #128]	; (80153f8 <enet_phy_config+0x90>)
 8015376:	4a21      	ldr	r2, [pc, #132]	; (80153fc <enet_phy_config+0x94>)
 8015378:	4403      	add	r3, r0
 801537a:	4293      	cmp	r3, r2
 801537c:	f024 041c 	bic.w	r4, r4, #28
 8015380:	d220      	bcs.n	80153c4 <enet_phy_config+0x5c>
 8015382:	f044 0408 	orr.w	r4, r4, #8
 8015386:	4b1b      	ldr	r3, [pc, #108]	; (80153f4 <enet_phy_config+0x8c>)
 8015388:	2200      	movs	r2, #0
 801538a:	611c      	str	r4, [r3, #16]
 801538c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015390:	2101      	movs	r1, #1
 8015392:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015396:	2002      	movs	r0, #2
 8015398:	f10d 0306 	add.w	r3, sp, #6
 801539c:	f7ff ffb6 	bl	801530c <enet_phy_write_read>
 80153a0:	b310      	cbz	r0, 80153e8 <enet_phy_config+0x80>
 80153a2:	2200      	movs	r2, #0
 80153a4:	4816      	ldr	r0, [pc, #88]	; (8015400 <enet_phy_config+0x98>)
 80153a6:	f7ff fea9 	bl	80150fc <enet_delay>
 80153aa:	2101      	movs	r1, #1
 80153ac:	4610      	mov	r0, r2
 80153ae:	f10d 0306 	add.w	r3, sp, #6
 80153b2:	f7ff ffab 	bl	801530c <enet_phy_write_read>
 80153b6:	b1b8      	cbz	r0, 80153e8 <enet_phy_config+0x80>
 80153b8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80153bc:	43c0      	mvns	r0, r0
 80153be:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80153c2:	e012      	b.n	80153ea <enet_phy_config+0x82>
 80153c4:	4b0f      	ldr	r3, [pc, #60]	; (8015404 <enet_phy_config+0x9c>)
 80153c6:	4a10      	ldr	r2, [pc, #64]	; (8015408 <enet_phy_config+0xa0>)
 80153c8:	4403      	add	r3, r0
 80153ca:	4293      	cmp	r3, r2
 80153cc:	d802      	bhi.n	80153d4 <enet_phy_config+0x6c>
 80153ce:	f044 040c 	orr.w	r4, r4, #12
 80153d2:	e7d8      	b.n	8015386 <enet_phy_config+0x1e>
 80153d4:	4b0d      	ldr	r3, [pc, #52]	; (801540c <enet_phy_config+0xa4>)
 80153d6:	4a0e      	ldr	r2, [pc, #56]	; (8015410 <enet_phy_config+0xa8>)
 80153d8:	4403      	add	r3, r0
 80153da:	4293      	cmp	r3, r2
 80153dc:	d3d3      	bcc.n	8015386 <enet_phy_config+0x1e>
 80153de:	4b0d      	ldr	r3, [pc, #52]	; (8015414 <enet_phy_config+0xac>)
 80153e0:	4a0d      	ldr	r2, [pc, #52]	; (8015418 <enet_phy_config+0xb0>)
 80153e2:	4403      	add	r3, r0
 80153e4:	4293      	cmp	r3, r2
 80153e6:	d902      	bls.n	80153ee <enet_phy_config+0x86>
 80153e8:	2000      	movs	r0, #0
 80153ea:	b002      	add	sp, #8
 80153ec:	bd10      	pop	{r4, pc}
 80153ee:	f044 0404 	orr.w	r4, r4, #4
 80153f2:	e7c8      	b.n	8015386 <enet_phy_config+0x1e>
 80153f4:	40028000 	andmi	r8, r2, r0
 80153f8:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80153fc:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8015400:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015404:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8015408:	017d783f 	cmneq	sp, pc, lsr r8
 801540c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8015410:	02625a00 	rsbeq	r5, r2, #0, 20
 8015414:	fa0a1f00 	blx	829d01c <_sidata+0x284ce4>
 8015418:	01312d00 	teqeq	r1, r0, lsl #26

0801541c <enet_init>:
 801541c:	2300      	movs	r3, #0
 801541e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015420:	4604      	mov	r4, r0
 8015422:	460d      	mov	r5, r1
 8015424:	4616      	mov	r6, r2
 8015426:	f8ad 3006 	strh.w	r3, [sp, #6]
 801542a:	f7ff ff9d 	bl	8015368 <enet_phy_config>
 801542e:	2800      	cmp	r0, #0
 8015430:	d039      	beq.n	80154a6 <enet_init+0x8a>
 8015432:	4b3c      	ldr	r3, [pc, #240]	; (8015524 <enet_init+0x108>)
 8015434:	4a3c      	ldr	r2, [pc, #240]	; (8015528 <enet_init+0x10c>)
 8015436:	6819      	ldr	r1, [r3, #0]
 8015438:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 801543c:	400a      	ands	r2, r1
 801543e:	601a      	str	r2, [r3, #0]
 8015440:	2200      	movs	r2, #0
 8015442:	605a      	str	r2, [r3, #4]
 8015444:	609a      	str	r2, [r3, #8]
 8015446:	60da      	str	r2, [r3, #12]
 8015448:	6999      	ldr	r1, [r3, #24]
 801544a:	2c01      	cmp	r4, #1
 801544c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8015450:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8015454:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8015458:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801545c:	6199      	str	r1, [r3, #24]
 801545e:	4933      	ldr	r1, [pc, #204]	; (801552c <enet_init+0x110>)
 8015460:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8015464:	61da      	str	r2, [r3, #28]
 8015466:	6988      	ldr	r0, [r1, #24]
 8015468:	4b31      	ldr	r3, [pc, #196]	; (8015530 <enet_init+0x114>)
 801546a:	ea03 0300 	and.w	r3, r3, r0
 801546e:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015472:	618b      	str	r3, [r1, #24]
 8015474:	680b      	ldr	r3, [r1, #0]
 8015476:	4b2f      	ldr	r3, [pc, #188]	; (8015534 <enet_init+0x118>)
 8015478:	600b      	str	r3, [r1, #0]
 801547a:	d01e      	beq.n	80154ba <enet_init+0x9e>
 801547c:	08e3      	lsrs	r3, r4, #3
 801547e:	0861      	lsrs	r1, r4, #1
 8015480:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015484:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015488:	430b      	orrs	r3, r1
 801548a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801548e:	2101      	movs	r1, #1
 8015490:	2002      	movs	r0, #2
 8015492:	f10d 0306 	add.w	r3, sp, #6
 8015496:	f7ff ff39 	bl	801530c <enet_phy_write_read>
 801549a:	b158      	cbz	r0, 80154b4 <enet_init+0x98>
 801549c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80154a0:	f7ff fe2c 	bl	80150fc <enet_delay>
 80154a4:	e05f      	b.n	8015566 <enet_init+0x14a>
 80154a6:	4824      	ldr	r0, [pc, #144]	; (8015538 <enet_init+0x11c>)
 80154a8:	f7ff fe28 	bl	80150fc <enet_delay>
 80154ac:	f7ff ff5c 	bl	8015368 <enet_phy_config>
 80154b0:	2800      	cmp	r0, #0
 80154b2:	d1be      	bne.n	8015432 <enet_init+0x16>
 80154b4:	2000      	movs	r0, #0
 80154b6:	b003      	add	sp, #12
 80154b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80154ba:	4614      	mov	r4, r2
 80154bc:	4f1f      	ldr	r7, [pc, #124]	; (801553c <enet_init+0x120>)
 80154be:	2201      	movs	r2, #1
 80154c0:	2000      	movs	r0, #0
 80154c2:	4611      	mov	r1, r2
 80154c4:	f10d 0306 	add.w	r3, sp, #6
 80154c8:	f7ff ff20 	bl	801530c <enet_phy_write_read>
 80154cc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80154d0:	3401      	adds	r4, #1
 80154d2:	f002 0204 	and.w	r2, r2, #4
 80154d6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80154da:	b912      	cbnz	r2, 80154e2 <enet_init+0xc6>
 80154dc:	42bc      	cmp	r4, r7
 80154de:	d1ee      	bne.n	80154be <enet_init+0xa2>
 80154e0:	e7e8      	b.n	80154b4 <enet_init+0x98>
 80154e2:	42bc      	cmp	r4, r7
 80154e4:	d0e6      	beq.n	80154b4 <enet_init+0x98>
 80154e6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80154ea:	2101      	movs	r1, #1
 80154ec:	f8ad 2006 	strh.w	r2, [sp, #6]
 80154f0:	2002      	movs	r0, #2
 80154f2:	2200      	movs	r2, #0
 80154f4:	f7ff ff0a 	bl	801530c <enet_phy_write_read>
 80154f8:	2800      	cmp	r0, #0
 80154fa:	d0db      	beq.n	80154b4 <enet_init+0x98>
 80154fc:	2400      	movs	r4, #0
 80154fe:	4f0f      	ldr	r7, [pc, #60]	; (801553c <enet_init+0x120>)
 8015500:	2201      	movs	r2, #1
 8015502:	2000      	movs	r0, #0
 8015504:	4611      	mov	r1, r2
 8015506:	f10d 0306 	add.w	r3, sp, #6
 801550a:	f7ff feff 	bl	801530c <enet_phy_write_read>
 801550e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015512:	3401      	adds	r4, #1
 8015514:	f002 0220 	and.w	r2, r2, #32
 8015518:	f8ad 2006 	strh.w	r2, [sp, #6]
 801551c:	b982      	cbnz	r2, 8015540 <enet_init+0x124>
 801551e:	42bc      	cmp	r4, r7
 8015520:	d1ee      	bne.n	8015500 <enet_init+0xe4>
 8015522:	e7c7      	b.n	80154b4 <enet_init+0x98>
 8015524:	40028000 	andmi	r8, r2, r0
 8015528:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 801552c:	40029000 	andmi	r9, r2, r0
 8015530:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8015534:	02c16000 	sbceq	r6, r1, #0
 8015538:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 801553c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015540:	42bc      	cmp	r4, r7
 8015542:	d0b7      	beq.n	80154b4 <enet_init+0x98>
 8015544:	2101      	movs	r1, #1
 8015546:	2210      	movs	r2, #16
 8015548:	2000      	movs	r0, #0
 801554a:	f7ff fedf 	bl	801530c <enet_phy_write_read>
 801554e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8015552:	f013 0f04 	tst.w	r3, #4
 8015556:	bf14      	ite	ne
 8015558:	f44f 6400 	movne.w	r4, #2048	; 0x800
 801555c:	2400      	moveq	r4, #0
 801555e:	0799      	lsls	r1, r3, #30
 8015560:	d401      	bmi.n	8015566 <enet_init+0x14a>
 8015562:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8015566:	4b64      	ldr	r3, [pc, #400]	; (80156f8 <enet_init+0x2dc>)
 8015568:	056a      	lsls	r2, r5, #21
 801556a:	6818      	ldr	r0, [r3, #0]
 801556c:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8015570:	ea44 0400 	orr.w	r4, r4, r0
 8015574:	601c      	str	r4, [r3, #0]
 8015576:	d50c      	bpl.n	8015592 <enet_init+0x176>
 8015578:	681a      	ldr	r2, [r3, #0]
 801557a:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801557e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8015582:	601a      	str	r2, [r3, #0]
 8015584:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8015588:	6999      	ldr	r1, [r3, #24]
 801558a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 801558e:	430d      	orrs	r5, r1
 8015590:	619d      	str	r5, [r3, #24]
 8015592:	4959      	ldr	r1, [pc, #356]	; (80156f8 <enet_init+0x2dc>)
 8015594:	4b59      	ldr	r3, [pc, #356]	; (80156fc <enet_init+0x2e0>)
 8015596:	684a      	ldr	r2, [r1, #4]
 8015598:	4316      	orrs	r6, r2
 801559a:	604e      	str	r6, [r1, #4]
 801559c:	681a      	ldr	r2, [r3, #0]
 801559e:	07d7      	lsls	r7, r2, #31
 80155a0:	d510      	bpl.n	80155c4 <enet_init+0x1a8>
 80155a2:	685a      	ldr	r2, [r3, #4]
 80155a4:	680c      	ldr	r4, [r1, #0]
 80155a6:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80155aa:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80155ae:	4320      	orrs	r0, r4
 80155b0:	6008      	str	r0, [r1, #0]
 80155b2:	4853      	ldr	r0, [pc, #332]	; (8015700 <enet_init+0x2e4>)
 80155b4:	0892      	lsrs	r2, r2, #2
 80155b6:	6981      	ldr	r1, [r0, #24]
 80155b8:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80155bc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80155c0:	430a      	orrs	r2, r1
 80155c2:	6182      	str	r2, [r0, #24]
 80155c4:	681a      	ldr	r2, [r3, #0]
 80155c6:	0796      	lsls	r6, r2, #30
 80155c8:	d508      	bpl.n	80155dc <enet_init+0x1c0>
 80155ca:	494d      	ldr	r1, [pc, #308]	; (8015700 <enet_init+0x2e4>)
 80155cc:	6898      	ldr	r0, [r3, #8]
 80155ce:	680a      	ldr	r2, [r1, #0]
 80155d0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80155d4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80155d8:	4302      	orrs	r2, r0
 80155da:	600a      	str	r2, [r1, #0]
 80155dc:	681a      	ldr	r2, [r3, #0]
 80155de:	0755      	lsls	r5, r2, #29
 80155e0:	d508      	bpl.n	80155f4 <enet_init+0x1d8>
 80155e2:	4947      	ldr	r1, [pc, #284]	; (8015700 <enet_init+0x2e4>)
 80155e4:	68d8      	ldr	r0, [r3, #12]
 80155e6:	680a      	ldr	r2, [r1, #0]
 80155e8:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80155ec:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80155f0:	4302      	orrs	r2, r0
 80155f2:	600a      	str	r2, [r1, #0]
 80155f4:	681a      	ldr	r2, [r3, #0]
 80155f6:	0714      	lsls	r4, r2, #28
 80155f8:	d508      	bpl.n	801560c <enet_init+0x1f0>
 80155fa:	4941      	ldr	r1, [pc, #260]	; (8015700 <enet_init+0x2e4>)
 80155fc:	6918      	ldr	r0, [r3, #16]
 80155fe:	680a      	ldr	r2, [r1, #0]
 8015600:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8015604:	f022 0202 	bic.w	r2, r2, #2
 8015608:	4302      	orrs	r2, r0
 801560a:	600a      	str	r2, [r1, #0]
 801560c:	681a      	ldr	r2, [r3, #0]
 801560e:	06d0      	lsls	r0, r2, #27
 8015610:	d506      	bpl.n	8015620 <enet_init+0x204>
 8015612:	493b      	ldr	r1, [pc, #236]	; (8015700 <enet_init+0x2e4>)
 8015614:	4a3b      	ldr	r2, [pc, #236]	; (8015704 <enet_init+0x2e8>)
 8015616:	6988      	ldr	r0, [r1, #24]
 8015618:	4002      	ands	r2, r0
 801561a:	6958      	ldr	r0, [r3, #20]
 801561c:	4302      	orrs	r2, r0
 801561e:	618a      	str	r2, [r1, #24]
 8015620:	681a      	ldr	r2, [r3, #0]
 8015622:	0691      	lsls	r1, r2, #26
 8015624:	d508      	bpl.n	8015638 <enet_init+0x21c>
 8015626:	4936      	ldr	r1, [pc, #216]	; (8015700 <enet_init+0x2e4>)
 8015628:	6998      	ldr	r0, [r3, #24]
 801562a:	698a      	ldr	r2, [r1, #24]
 801562c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8015630:	f022 0204 	bic.w	r2, r2, #4
 8015634:	4302      	orrs	r2, r0
 8015636:	618a      	str	r2, [r1, #24]
 8015638:	681a      	ldr	r2, [r3, #0]
 801563a:	0652      	lsls	r2, r2, #25
 801563c:	d506      	bpl.n	801564c <enet_init+0x230>
 801563e:	492e      	ldr	r1, [pc, #184]	; (80156f8 <enet_init+0x2dc>)
 8015640:	69d8      	ldr	r0, [r3, #28]
 8015642:	69ca      	ldr	r2, [r1, #28]
 8015644:	0c52      	lsrs	r2, r2, #17
 8015646:	0452      	lsls	r2, r2, #17
 8015648:	4302      	orrs	r2, r0
 801564a:	61ca      	str	r2, [r1, #28]
 801564c:	681a      	ldr	r2, [r3, #0]
 801564e:	0617      	lsls	r7, r2, #24
 8015650:	d517      	bpl.n	8015682 <enet_init+0x266>
 8015652:	4c29      	ldr	r4, [pc, #164]	; (80156f8 <enet_init+0x2dc>)
 8015654:	6a1a      	ldr	r2, [r3, #32]
 8015656:	69a0      	ldr	r0, [r4, #24]
 8015658:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 801565c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8015660:	0400      	lsls	r0, r0, #16
 8015662:	0c00      	lsrs	r0, r0, #16
 8015664:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8015668:	4301      	orrs	r1, r0
 801566a:	4825      	ldr	r0, [pc, #148]	; (8015700 <enet_init+0x2e4>)
 801566c:	61a1      	str	r1, [r4, #24]
 801566e:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8015672:	0a12      	lsrs	r2, r2, #8
 8015674:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8015678:	f002 0277 	and.w	r2, r2, #119	; 0x77
 801567c:	430a      	orrs	r2, r1
 801567e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8015682:	681a      	ldr	r2, [r3, #0]
 8015684:	05d6      	lsls	r6, r2, #23
 8015686:	bf42      	ittt	mi
 8015688:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 801568a:	4a1b      	ldrmi	r2, [pc, #108]	; (80156f8 <enet_init+0x2dc>)
 801568c:	6091      	strmi	r1, [r2, #8]
 801568e:	681a      	ldr	r2, [r3, #0]
 8015690:	0595      	lsls	r5, r2, #22
 8015692:	bf42      	ittt	mi
 8015694:	4a18      	ldrmi	r2, [pc, #96]	; (80156f8 <enet_init+0x2dc>)
 8015696:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8015698:	60d1      	strmi	r1, [r2, #12]
 801569a:	681a      	ldr	r2, [r3, #0]
 801569c:	0554      	lsls	r4, r2, #21
 801569e:	d508      	bpl.n	80156b2 <enet_init+0x296>
 80156a0:	4915      	ldr	r1, [pc, #84]	; (80156f8 <enet_init+0x2dc>)
 80156a2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80156a4:	684a      	ldr	r2, [r1, #4]
 80156a6:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80156aa:	f022 0206 	bic.w	r2, r2, #6
 80156ae:	4302      	orrs	r2, r0
 80156b0:	604a      	str	r2, [r1, #4]
 80156b2:	681a      	ldr	r2, [r3, #0]
 80156b4:	0510      	lsls	r0, r2, #20
 80156b6:	d508      	bpl.n	80156ca <enet_init+0x2ae>
 80156b8:	490f      	ldr	r1, [pc, #60]	; (80156f8 <enet_init+0x2dc>)
 80156ba:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80156bc:	680a      	ldr	r2, [r1, #0]
 80156be:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80156c2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80156c6:	4302      	orrs	r2, r0
 80156c8:	600a      	str	r2, [r1, #0]
 80156ca:	681a      	ldr	r2, [r3, #0]
 80156cc:	04d1      	lsls	r1, r2, #19
 80156ce:	d506      	bpl.n	80156de <enet_init+0x2c2>
 80156d0:	4909      	ldr	r1, [pc, #36]	; (80156f8 <enet_init+0x2dc>)
 80156d2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80156d4:	680a      	ldr	r2, [r1, #0]
 80156d6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80156da:	4302      	orrs	r2, r0
 80156dc:	600a      	str	r2, [r1, #0]
 80156de:	681a      	ldr	r2, [r3, #0]
 80156e0:	0492      	lsls	r2, r2, #18
 80156e2:	d506      	bpl.n	80156f2 <enet_init+0x2d6>
 80156e4:	4904      	ldr	r1, [pc, #16]	; (80156f8 <enet_init+0x2dc>)
 80156e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80156e8:	680a      	ldr	r2, [r1, #0]
 80156ea:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80156ee:	4313      	orrs	r3, r2
 80156f0:	600b      	str	r3, [r1, #0]
 80156f2:	2001      	movs	r0, #1
 80156f4:	e6df      	b.n	80154b6 <enet_init+0x9a>
 80156f6:	bf00      	nop
 80156f8:	40028000 	andmi	r8, r2, r0
 80156fc:	200125c0 	andcs	r2, r1, r0, asr #11
 8015700:	40029000 	andmi	r9, r2, r0
 8015704:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08015708 <enet_txfifo_flush>:
 8015708:	4b06      	ldr	r3, [pc, #24]	; (8015724 <enet_txfifo_flush+0x1c>)
 801570a:	4807      	ldr	r0, [pc, #28]	; (8015728 <enet_txfifo_flush+0x20>)
 801570c:	699a      	ldr	r2, [r3, #24]
 801570e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8015712:	619a      	str	r2, [r3, #24]
 8015714:	699a      	ldr	r2, [r3, #24]
 8015716:	02d2      	lsls	r2, r2, #11
 8015718:	d502      	bpl.n	8015720 <enet_txfifo_flush+0x18>
 801571a:	3801      	subs	r0, #1
 801571c:	d1fa      	bne.n	8015714 <enet_txfifo_flush+0xc>
 801571e:	4770      	bx	lr
 8015720:	2001      	movs	r0, #1
 8015722:	4770      	bx	lr
 8015724:	40029000 	andmi	r9, r2, r0
 8015728:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801572c <enet_tx_enable>:
 801572c:	4a06      	ldr	r2, [pc, #24]	; (8015748 <enet_tx_enable+0x1c>)
 801572e:	b508      	push	{r3, lr}
 8015730:	6813      	ldr	r3, [r2, #0]
 8015732:	f043 0308 	orr.w	r3, r3, #8
 8015736:	6013      	str	r3, [r2, #0]
 8015738:	f7ff ffe6 	bl	8015708 <enet_txfifo_flush>
 801573c:	4a03      	ldr	r2, [pc, #12]	; (801574c <enet_tx_enable+0x20>)
 801573e:	6993      	ldr	r3, [r2, #24]
 8015740:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8015744:	6193      	str	r3, [r2, #24]
 8015746:	bd08      	pop	{r3, pc}
 8015748:	40028000 	andmi	r8, r2, r0
 801574c:	40029000 	andmi	r9, r2, r0

08015750 <enet_enable>:
 8015750:	b508      	push	{r3, lr}
 8015752:	f7ff ffeb 	bl	801572c <enet_tx_enable>
 8015756:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801575a:	f7ff bdc9 	b.w	80152f0 <enet_rx_enable>

0801575e <enet_desc_information_get>:
 801575e:	2905      	cmp	r1, #5
 8015760:	d817      	bhi.n	8015792 <enet_desc_information_get+0x34>
 8015762:	e8df f001 	tbb	[pc, r1]
 8015766:	03091012 	movweq	r1, #36882	; 0x9012
 801576a:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 801576e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015772:	4770      	bx	lr
 8015774:	88c0      	ldrh	r0, [r0, #6]
 8015776:	e7fa      	b.n	801576e <enet_desc_information_get+0x10>
 8015778:	8840      	ldrh	r0, [r0, #2]
 801577a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 801577e:	2804      	cmp	r0, #4
 8015780:	d90a      	bls.n	8015798 <enet_desc_information_get+0x3a>
 8015782:	3804      	subs	r0, #4
 8015784:	4770      	bx	lr
 8015786:	6880      	ldr	r0, [r0, #8]
 8015788:	4770      	bx	lr
 801578a:	6800      	ldr	r0, [r0, #0]
 801578c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8015790:	4770      	bx	lr
 8015792:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015796:	4770      	bx	lr
 8015798:	2000      	movs	r0, #0
 801579a:	4770      	bx	lr

0801579c <enet_rxframe_drop>:
 801579c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80157a0:	4814      	ldr	r0, [pc, #80]	; (80157f4 <enet_rxframe_drop+0x58>)
 80157a2:	b510      	push	{r4, lr}
 80157a4:	6802      	ldr	r2, [r0, #0]
 80157a6:	4914      	ldr	r1, [pc, #80]	; (80157f8 <enet_rxframe_drop+0x5c>)
 80157a8:	6854      	ldr	r4, [r2, #4]
 80157aa:	6013      	str	r3, [r2, #0]
 80157ac:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 80157b0:	680b      	ldr	r3, [r1, #0]
 80157b2:	d009      	beq.n	80157c8 <enet_rxframe_drop+0x2c>
 80157b4:	b12b      	cbz	r3, 80157c2 <enet_rxframe_drop+0x26>
 80157b6:	68da      	ldr	r2, [r3, #12]
 80157b8:	6002      	str	r2, [r0, #0]
 80157ba:	681a      	ldr	r2, [r3, #0]
 80157bc:	b1ba      	cbz	r2, 80157ee <enet_rxframe_drop+0x52>
 80157be:	600a      	str	r2, [r1, #0]
 80157c0:	bd10      	pop	{r4, pc}
 80157c2:	68d3      	ldr	r3, [r2, #12]
 80157c4:	6003      	str	r3, [r0, #0]
 80157c6:	e7fb      	b.n	80157c0 <enet_rxframe_drop+0x24>
 80157c8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80157cc:	4c0b      	ldr	r4, [pc, #44]	; (80157fc <enet_rxframe_drop+0x60>)
 80157ce:	d006      	beq.n	80157de <enet_rxframe_drop+0x42>
 80157d0:	68e2      	ldr	r2, [r4, #12]
 80157d2:	6002      	str	r2, [r0, #0]
 80157d4:	2b00      	cmp	r3, #0
 80157d6:	d0f3      	beq.n	80157c0 <enet_rxframe_drop+0x24>
 80157d8:	681b      	ldr	r3, [r3, #0]
 80157da:	600b      	str	r3, [r1, #0]
 80157dc:	e7f0      	b.n	80157c0 <enet_rxframe_drop+0x24>
 80157de:	6824      	ldr	r4, [r4, #0]
 80157e0:	3210      	adds	r2, #16
 80157e2:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80157e6:	4422      	add	r2, r4
 80157e8:	6002      	str	r2, [r0, #0]
 80157ea:	2b00      	cmp	r3, #0
 80157ec:	d0e8      	beq.n	80157c0 <enet_rxframe_drop+0x24>
 80157ee:	3310      	adds	r3, #16
 80157f0:	e7f3      	b.n	80157da <enet_rxframe_drop+0x3e>
 80157f2:	bf00      	nop
 80157f4:	200125b8 			; <UNDEFINED> instruction: 0x200125b8
 80157f8:	200125b0 			; <UNDEFINED> instruction: 0x200125b0
 80157fc:	40029000 	andmi	r9, r2, r0

08015800 <enet_rxframe_size_get>:
 8015800:	b508      	push	{r3, lr}
 8015802:	4b0c      	ldr	r3, [pc, #48]	; (8015834 <enet_rxframe_size_get+0x34>)
 8015804:	681b      	ldr	r3, [r3, #0]
 8015806:	6818      	ldr	r0, [r3, #0]
 8015808:	2800      	cmp	r0, #0
 801580a:	db10      	blt.n	801582e <enet_rxframe_size_get+0x2e>
 801580c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8015810:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8015814:	d003      	beq.n	801581e <enet_rxframe_size_get+0x1e>
 8015816:	f7ff ffc1 	bl	801579c <enet_rxframe_drop>
 801581a:	2001      	movs	r0, #1
 801581c:	bd08      	pop	{r3, pc}
 801581e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8015822:	2b21      	cmp	r3, #33	; 0x21
 8015824:	d0f7      	beq.n	8015816 <enet_rxframe_size_get+0x16>
 8015826:	f3c0 400d 	ubfx	r0, r0, #16, #14
 801582a:	3804      	subs	r0, #4
 801582c:	e7f6      	b.n	801581c <enet_rxframe_size_get+0x1c>
 801582e:	2000      	movs	r0, #0
 8015830:	e7f4      	b.n	801581c <enet_rxframe_size_get+0x1c>
 8015832:	bf00      	nop
 8015834:	200125b8 			; <UNDEFINED> instruction: 0x200125b8

08015838 <enet_initpara_reset>:
 8015838:	2200      	movs	r2, #0
 801583a:	4b08      	ldr	r3, [pc, #32]	; (801585c <enet_initpara_reset+0x24>)
 801583c:	e9c3 2200 	strd	r2, r2, [r3]
 8015840:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8015844:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8015848:	e9c3 2206 	strd	r2, r2, [r3, #24]
 801584c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8015850:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8015854:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8015858:	639a      	str	r2, [r3, #56]	; 0x38
 801585a:	4770      	bx	lr
 801585c:	200125c0 	andcs	r2, r1, r0, asr #11

08015860 <enet_deinit>:
 8015860:	b508      	push	{r3, lr}
 8015862:	f640 200e 	movw	r0, #2574	; 0xa0e
 8015866:	f7fe fe97 	bl	8014598 <rcu_periph_reset_enable>
 801586a:	f640 200e 	movw	r0, #2574	; 0xa0e
 801586e:	f7fe fe95 	bl	801459c <rcu_periph_reset_disable>
 8015872:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015876:	f7ff bfdf 	b.w	8015838 <enet_initpara_reset>
 801587a:	0000      	movs	r0, r0
 801587c:	00000003 	andeq	r0, r0, r3
 8015880:	000000aa 	andeq	r0, r0, sl, lsr #1
 8015884:	00000006 	andeq	r0, r0, r6
 8015888:	00000000 	andeq	r0, r0, r0
 801588c:	01ff0000 	mvnseq	r0, r0
 8015890:	00000001 	andeq	r0, r0, r1
 8015894:	00000001 	andeq	r0, r0, r1
 8015898:	00000001 	andeq	r0, r0, r1
	...
 80158a4:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80158a8:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80158ac:	00000000 	andeq	r0, r0, r0
 80158b0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80158b4:	303a3031 	eorscc	r3, sl, r1, lsr r0
 80158b8:	38353a34 	ldmdacc	r5!, {r2, r4, r5, r9, fp, ip, sp}
 80158bc:	63654400 	cmnvs	r5, #0, 8
 80158c0:	20363220 	eorscs	r3, r6, r0, lsr #4
 80158c4:	31323032 	teqcc	r2, r2, lsr r0
 80158c8:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 80158cc:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
 80158d0:	41732074 	cmnmi	r3, r4, ror r0
 80158d4:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80158d8:	31332e31 	teqcc	r3, r1, lsr lr
 80158dc:	335b1b20 	cmpcc	fp, #32, 22	; 0x8000
 80158e0:	69506d32 	ldmdbvs	r0, {r1, r4, r5, r8, sl, fp, sp, lr}^
 80158e4:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80158e8:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 80158ec:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 80158f0:	7b207265 	blvc	883228c <_sidata+0x819f54>
 80158f4:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 80158f8:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80158fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015900:	1b7d7365 	blne	9f7269c <_sidata+0x1f5a364>
 8015904:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 8015908:	635f2e00 	cmpvs	pc, #0, 28
 801590c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015910:	5f2e0067 	svcpl	0x002e0067
 8015914:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8015918:	646f6e00 	strbtvs	r6, [pc], #-3584	; 8015920 <enet_deinit+0xc0>
 801591c:	41733d65 	cmnmi	r3, r5, ror #26
 8015920:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8015924:	31332e31 	teqcc	r3, r1, lsr lr
 8015928:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 801592c:	66006c65 	strvs	r6, [r0], -r5, ror #24
 8015930:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8015934:	2f657261 	svccs	0x00657261
 8015938:	6e69616d 	powvsez	f6, f1, #5.0
 801593c:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8015940:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 8015944:	7325006e 			; <UNDEFINED> instruction: 0x7325006e
 8015948:	25202928 	strcs	r2, [r0, #-2344]!	; 0xfffff6d8
 801594c:	6c202c73 	stcvs	12, cr2, [r0], #-460	; 0xfffffe34
 8015950:	20656e69 	rsbcs	r6, r5, r9, ror #28
 8015954:	203a6925 	eorscs	r6, sl, r5, lsr #18
 8015958:	000a7325 	andeq	r7, sl, r5, lsr #6
 801595c:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8015960:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 8015964:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8015968:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 801596c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8015970:	0a75253a 	beq	9d5ee60 <_sidata+0x1d46b28>
 8015974:	43417300 	movtmi	r7, #4864	; 0x1300
 8015978:	6950204e 	ldmdbvs	r0, {r1, r2, r3, r6, sp}^
 801597c:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8015980:	252d6425 	strcs	r6, [sp, #-1061]!	; 0xfffffbdb
 8015984:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8015988:	67694700 	strbvs	r4, [r9, -r0, lsl #14]!
 801598c:	76654461 	strbtvc	r4, [r5], -r1, ror #8
 8015990:	20656369 	rsbcs	r6, r5, r9, ror #6
 8015994:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015998:	4452006c 	ldrbmi	r0, [r2], #-108	; 0xffffff94
 801599c:	7265504d 	rsbvc	r5, r5, #77	; 0x4d
 80159a0:	616e6f73 	smcvs	59123	; 0xe6f3
 80159a4:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 80159a8:	2f2e2e00 	svccs	0x002e2e00
 80159ac:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
 80159b0:	2f6d6472 	svccs	0x006d6472
 80159b4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 80159b8:	2f656475 	svccs	0x00656475
 80159bc:	706d6472 	rsbvc	r6, sp, r2, ror r4
 80159c0:	6f737265 	svcvs	0x00737265
 80159c4:	696c616e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
 80159c8:	682e7974 	stmdavs	lr!, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
 80159cc:	3e2d2d00 	cdpcc	13, 2, cr2, cr13, cr0, {0}
 80159d0:	3a732520 	bcc	9cdee58 <_sidata+0x1cc6b20>
 80159d4:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 80159d8:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 80159dc:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 80159e0:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 80159e4:	0a64253a 	beq	991eed4 <_sidata+0x1906b9c>
 80159e8:	43417300 	movtmi	r7, #4864	; 0x1300
 80159ec:	6950204e 	ldmdbvs	r0, {r1, r2, r3, r6, sp}^
 80159f0:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80159f4:	64253a38 	strtvs	r3, [r5], #-2616	; 0xfffff5c8
 80159f8:	00642578 	rsbeq	r2, r4, r8, ror r5
 80159fc:	252d6425 	strcs	r6, [sp, #-1061]!	; 0xfffffbdb
 8015a00:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8015a04:	64254720 	strtvs	r4, [r5], #-1824	; 0xfffff8e0
 8015a08:	61745300 	cmnvs	r4, r0, lsl #6
 8015a0c:	2e007472 	mcrcs	4, 0, r7, cr0, cr2, {3}
 8015a10:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 8015a14:	64722d62 	ldrbtvs	r2, [r2], #-3426	; 0xfffff29e
 8015a18:	74656e6d 	strbtvc	r6, [r5], #-3693	; 0xfffff193
 8015a1c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 8015a20:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 8015a24:	726c6c2f 	rsbvc	r6, ip, #12032	; 0x2f00
 8015a28:	76656470 			; <UNDEFINED> instruction: 0x76656470
 8015a2c:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
 8015a30:	5f6d0068 	svcpl	0x006d0068
 8015a34:	6e61486e 	cdpvs	8, 6, cr4, cr1, cr14, {3}
 8015a38:	4c656c64 	stclmi	12, cr6, [r5], #-400	; 0xfffffe70
 8015a3c:	2050524c 	subscs	r5, r0, ip, asr #4
 8015a40:	2d203d21 	stccs	13, cr3, [r0, #-132]!	; 0xffffff7c
 8015a44:	00000031 	andeq	r0, r0, r1, lsr r0

08015a48 <vtable for DisplayHandler>:
	...
 8015a50:	08007f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a54:	08007fb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a58:	08008021 	stmdaeq	r0, {r0, r5, pc}

08015a5c <vtable for E131Reboot>:
	...
 8015a64:	08007f43 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a68:	08007fa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a6c:	08007fe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08015a70 <vtable for PixelDmxStartStop>:
	...
 8015a78:	08007f45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a7c:	08007fbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a80:	08007f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a84:	08007f59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, sp, lr}

08015a88 <vtable for RDMNetDevice>:
	...
 8015a90:	0800806d 	stmdaeq	r0, {r0, r2, r3, r5, r6, pc}
 8015a94:	08008095 	stmdaeq	r0, {r0, r2, r4, r7, pc}
 8015a98:	0800b55f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, pc}
 8015a9c:	0800b561 	stmdaeq	r0, {r0, r5, r6, r8, sl, ip, sp, pc}
 8015aa0:	08007f69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015aa4:	08007f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015aa8:	08008005 	stmdaeq	r0, {r0, r2, pc}
 8015aac:	ffffff30 			; <UNDEFINED> instruction: 0xffffff30
 8015ab0:	00000000 	andeq	r0, r0, r0
 8015ab4:	0800808d 	stmdaeq	r0, {r0, r2, r3, r7, pc}
 8015ab8:	080080a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, pc}
 8015abc:	08007f75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015ac0:	08007f8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ac4:	08008019 	stmdaeq	r0, {r0, r3, r4, pc}

08015ac8 <vtable for FactoryDefaults>:
	...
 8015ad0:	08007f95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ad4:	08007fc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ad8:	080080dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, pc}

08015adc <vtable for Reboot>:
	...
 8015ae4:	08007f97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ae8:	08007f99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015aec:	08007fd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08015af0 <CSWTCH.67>:
 8015af0:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8015af4:	 	eorcc	r3, lr, r6, asr #2

08015af5 <SOFTWARE_VERSION>:
 8015af5:	00302e31 	eorseq	r2, r0, r1, lsr lr

08015af9 <SOFTWARE_VERSION>:
 8015af9:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8015afd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015b01:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015b05:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8015b09:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8015b0d:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8015b11:	0a73252c 	beq	9cdefc9 <_sidata+0x1cc6c91>
 8015b15:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8015b19:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015b1d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015b21:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8015b25:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8015b29:	4f000a64 	svcmi	0x00000a64
 8015b2d:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8015b31:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8015b35:	616c7073 	smcvs	50947	; 0xc703
 8015b39:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8015b3d:	6576000a 	ldrbvs	r0, [r6, #-10]!
 8015b41:	6f697372 	svcvs	0x00697372
 8015b45:	73253a6e 			; <UNDEFINED> instruction: 0x73253a6e
 8015b49:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8015b4d:	3a656d69 	bcc	99710f9 <_sidata+0x1958dc1>
 8015b51:	73752520 	cmnvc	r5, #32, 10	; 0x8000000
 8015b55:	5245000a 	subpl	r0, r5, #10
 8015b59:	23524f52 	cmpcs	r2, #328	; 0x148
 8015b5d:	7465673f 	strbtvc	r6, [r5], #-1855	; 0xfffff8c1
 8015b61:	6964000a 	stmdbvs	r4!, {r1, r3}^
 8015b65:	616c7073 	smcvs	50947	; 0xc703
 8015b69:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8015b6d:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8015b71:	000a3f23 	andeq	r3, sl, r3, lsr #30
 8015b75:	4f525245 	svcmi	0x00525245
 8015b79:	0a212352 	beq	885e8c9 <_sidata+0x846591>
 8015b7d:	62657200 	rsbvs	r7, r5, #0, 4
 8015b81:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8015b85:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8015b89:	00237473 	eoreq	r7, r3, r3, ror r4
 8015b8d:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015b91:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8015b95:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015b99:	76002365 	strvc	r2, [r0], -r5, ror #6
 8015b9d:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015ba1:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8015ba5:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8015ba9:	63616600 	cmnvs	r1, #0, 12
 8015bad:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015bb1:	 	tstmi	r0, r3, lsr #6

08015bb4 <s_Node>:
 8015bb4:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8015bb8:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8015bc4:	41730000 	cmnmi	r3, r0
 8015bc8:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8015bcc:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8015bd8:	2043534f 	subcs	r5, r3, pc, asr #6
 8015bdc:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015be0:	00007265 	andeq	r7, r0, r5, ror #4
 8015be4:	00000000 	andeq	r0, r0, r0
 8015be8:	544c0000 	strbpl	r0, [ip], #-0
 8015bec:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8015bfc:	2043534f 	subcs	r5, r3, pc, asr #6
 8015c00:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8015c04:	0000746e 	andeq	r7, r0, lr, ror #8
 8015c08:	00000000 	andeq	r0, r0, r0
 8015c0c:	44520000 	ldrbmi	r0, [r2], #-0
 8015c10:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8015c14:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8015c18:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8015c1c:	0000796c 	andeq	r7, r0, ip, ror #18
 8015c20:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8015c24:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8015c30:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8015c34:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8015c44:	00504444 	subseq	r4, r0, r4, asr #8
	...

08015c56 <s_Output>:
 8015c56:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8015c62:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8015c6e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8015c72:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8015c76:	00000000 	andeq	r0, r0, r0
 8015c7a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015c7e:	0000006c 	andeq	r0, r0, ip, rrx
 8015c82:	00000000 	andeq	r0, r0, r0
 8015c86:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8015c8a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8015c8e:	00000000 	andeq	r0, r0, r0
 8015c92:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8015c9e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015ca2:	00006769 	andeq	r6, r0, r9, ror #14
 8015ca6:	00000000 	andeq	r0, r0, r0
 8015caa:	70657453 	rsbvc	r7, r5, r3, asr r4
 8015cae:	00726570 	rsbseq	r6, r2, r0, ror r5
 8015cb2:	00000000 	andeq	r0, r0, r0
 8015cb6:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8015cba:	00007265 	andeq	r7, r0, r5, ror #4
 8015cbe:	00000000 	andeq	r0, r0, r0
 8015cc2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8015cc6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015cca:	00000000 	andeq	r0, r0, r0
 8015cce:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8015cd2:	00006c61 	andeq	r6, r0, r1, ror #24
 8015cd6:	00000000 	andeq	r0, r0, r0
 8015cda:	20424752 	subcs	r4, r2, r2, asr r7
 8015cde:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8015ce2:	0000006c 	andeq	r0, r0, ip, rrx
	...

08015ce8 <RemoteConfig::s_GET>:
 8015ce8:	080091c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, pc}
 8015cec:	00000000 	andeq	r0, r0, r0
 8015cf0:	08015b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8015cf4:	00000008 	andeq	r0, r0, r8
 8015cf8:	080087a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, pc}
 8015cfc:	00000000 	andeq	r0, r0, r0
 8015d00:	08015b87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, fp, ip, lr}
 8015d04:	00000005 	andeq	r0, r0, r5
 8015d08:	080087a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, pc}
 8015d0c:	00000000 	andeq	r0, r0, r0
 8015d10:	08015b8d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, fp, ip, lr}
 8015d14:	00000006 	andeq	r0, r0, r6
 8015d18:	0800891d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, pc}
 8015d1c:	00000000 	andeq	r0, r0, r0
 8015d20:	08015b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, lr}
 8015d24:	00000007 	andeq	r0, r0, r7
 8015d28:	080088dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, pc}
 8015d2c:	00000000 	andeq	r0, r0, r0
 8015d30:	08015b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, lr}
 8015d34:	00000008 	andeq	r0, r0, r8
 8015d38:	08008889 	stmdaeq	r0, {r0, r3, r7, fp, pc}
 8015d3c:	00000000 	andeq	r0, r0, r0
 8015d40:	08015b63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, fp, ip, lr}
 8015d44:	00000008 	andeq	r0, r0, r8
 8015d48:	08008b59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, fp, pc}
 8015d4c:	00000000 	andeq	r0, r0, r0
 8015d50:	08015ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp, ip, lr}
 8015d54:	00010004 	andeq	r0, r1, r4
 8015d58:	08008eb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, fp, pc}
 8015d5c:	00000000 	andeq	r0, r0, r0
 8015d60:	08015baa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, fp, ip, lr}
 8015d64:	00000009 	andeq	r0, r0, r9
 8015d68:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015d6c:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8015d70:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8015d74:	0a64253d 	beq	991f270 <_sidata+0x1906f38>
 8015d78:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8015d7c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015d80:	002c2273 	eoreq	r2, ip, r3, ror r2
 8015d84:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015d88:	000a7325 	andeq	r7, sl, r5, lsr #6
 8015d8c:	6f626552 	svcvs	0x00626552
 8015d90:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8015d94:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8015d98:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8015d9c:	6f6f6265 	svcvs	0x006f6265
 8015da0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015da4:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8015da8:	6f637200 	svcvs	0x00637200
 8015dac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015db0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015db4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8015db8:	6b726f77 	blvs	9cb1b9c <_sidata+0x1c99864>
 8015dbc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015dc0:	73696400 	cmnvc	r9, #0, 8
 8015dc4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015dc8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015dcc:	33316500 	teqcc	r1, #0, 10
 8015dd0:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8015dd4:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 8015dd8:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8015ddc:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8015de0:	00000074 	andeq	r0, r0, r4, ror r0

08015de4 <RemoteConfig::s_TXT>:
 8015de4:	08008b61 	stmdaeq	r0, {r0, r5, r6, r8, r9, fp, pc}
 8015de8:	00000000 	andeq	r0, r0, r0
 8015dec:	08008de5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, sl, fp, pc}
 8015df0:	00000000 	andeq	r0, r0, r0
 8015df4:	08015da9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, fp, ip, lr}
 8015df8:	0000000b 	andeq	r0, r0, fp
 8015dfc:	0000000c 	andeq	r0, r0, ip
 8015e00:	08008b8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, fp, pc}
 8015e04:	00000000 	andeq	r0, r0, r0
 8015e08:	08008e15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, pc}
 8015e0c:	00000000 	andeq	r0, r0, r0
 8015e10:	08015db5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, fp, ip, lr}
 8015e14:	0000000b 	andeq	r0, r0, fp
 8015e18:	00000000 	andeq	r0, r0, r0
 8015e1c:	08008c11 	stmdaeq	r0, {r0, r4, sl, fp, pc}
 8015e20:	00000000 	andeq	r0, r0, r0
 8015e24:	08008e8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, fp, pc}
 8015e28:	00000000 	andeq	r0, r0, r0
 8015e2c:	08015dc1 	stmdaeq	r1, {r0, r6, r7, r8, sl, fp, ip, lr}
 8015e30:	0000000b 	andeq	r0, r0, fp
 8015e34:	0000000f 	andeq	r0, r0, pc
 8015e38:	08008bb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, fp, pc}
 8015e3c:	00000000 	andeq	r0, r0, r0
 8015e40:	08008e3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, fp, pc}
 8015e44:	00000000 	andeq	r0, r0, r0
 8015e48:	08015dcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, sl, fp, ip, lr}
 8015e4c:	00000008 	andeq	r0, r0, r8
 8015e50:	00000004 	andeq	r0, r0, r4
 8015e54:	08008be5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, fp, pc}
 8015e58:	00000000 	andeq	r0, r0, r0
 8015e5c:	08008e65 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, fp, pc}
 8015e60:	00000000 	andeq	r0, r0, r0
 8015e64:	08015dd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, fp, ip, lr}
 8015e68:	0000000b 	andeq	r0, r0, fp
 8015e6c:	00000003 	andeq	r0, r0, r3
 8015e70:	00544547 	subseq	r4, r4, r7, asr #10
 8015e74:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8015e78:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8015e7c:	0a200050 	beq	8815fc4 <_sidata+0x7fdc8c>
 8015e80:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8015e84:	43003a00 	movwmi	r3, #2560	; 0xa00
 8015e88:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8015e8c:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8015e90:	00657079 	rsbeq	r7, r5, r9, ror r0
 8015e94:	61003b20 	tstvs	r0, r0, lsr #22
 8015e98:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8015e9c:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8015ea0:	6a2f6e6f 	bvs	8bf1864 <_sidata+0xbd952c>
 8015ea4:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8015ea8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8015eac:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8015eb0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8015eb4:	2f006874 	svccs	0x00006874
 8015eb8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8015ebc:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8015ec0:	2f006c6d 	svccs	0x00006c6d
 8015ec4:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8015ec8:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8015ecc:	2f007373 	svccs	0x00007373
 8015ed0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8015ed4:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8015ed8:	736a2f00 	cmnvc	sl, #0, 30
 8015edc:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8015ee0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015ee4:	72657600 	rsbvc	r7, r5, #0, 12
 8015ee8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8015eec:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8015ef0:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8015ef4:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8015ef8:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8015efc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015f00:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015f04:	6a2f0079 	bvs	8bd60f0 <_sidata+0xbbddb8>
 8015f08:	2f6e6f73 	svccs	0x006e6f73
 8015f0c:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8015f10:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8015f14:	6f6f6265 	svcvs	0x006f6265
 8015f18:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8015f1c:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8015f20:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8015f24:	434f4421 	movtmi	r4, #62497	; 0xf421
 8015f28:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8015f2c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8015f30:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8015f34:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015f38:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8015f3c:	3e646165 	powccsz	f6, f4, f5
 8015f40:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8015f44:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8015f48:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8015f4c:	742f3c74 	strtvc	r3, [pc], #-3188	; 8015f54 <RemoteConfig::s_TXT+0x170>
 8015f50:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015f54:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015f58:	3e646165 	powccsz	f6, f4, f5
 8015f5c:	6f623c0a 	svcvs	0x00623c0a
 8015f60:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8015f64:	4f3e3168 	svcmi	0x003e3168
 8015f68:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015f6c:	2f3c3e31 	svccs	0x003c3e31
 8015f70:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015f74:	2f3c0a3e 	svccs	0x003c0a3e
 8015f78:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015f7c:	52000a3e 	andpl	r0, r0, #253952	; 0x3e000
 8015f80:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8015f84:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8015f88:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8015f8c:	6f542079 	svcvs	0x00542079
 8015f90:	614c206f 	cmpvs	ip, pc, rrx
 8015f94:	00656772 	rsbeq	r6, r5, r2, ror r7
 8015f98:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8015f9c:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 8015fa0:	65520064 	ldrbvs	r0, [r2, #-100]	; 0xffffff9c
 8015fa4:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8015fa8:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8015fac:	6f542049 	svcvs	0x00542049
 8015fb0:	6f4c206f 	svcvs	0x004c206f
 8015fb4:	5600676e 	strpl	r6, [r0], -lr, ror #14
 8015fb8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015fbc:	4e206e6f 	cdpmi	14, 2, cr6, cr0, cr15, {3}
 8015fc0:	5320746f 			; <UNDEFINED> instruction: 0x5320746f
 8015fc4:	6f707075 	svcvs	0x00707075
 8015fc8:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 8015fcc:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8015fd0:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8015fd4:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8015fd8:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8015fdc:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015fe0:	00646574 	rsbeq	r6, r4, r4, ror r5
 8015fe4:	20646142 	rsbcs	r6, r4, r2, asr #2
 8015fe8:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8015fec:	00747365 	rsbseq	r7, r4, r5, ror #6
 8015ff0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8015ff4:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8015ff8:	6f727245 	svcvs	0x00727245
 8015ffc:	6e490072 	mcrvs	0, 2, r0, cr9, cr2, {3}
 8016000:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8016004:	53206c61 			; <UNDEFINED> instruction: 0x53206c61
 8016008:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 801600c:	72452072 	subvc	r2, r5, #114	; 0x72
 8016010:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8016014:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8016018:	434f4421 	movtmi	r4, #62497	; 0xf421
 801601c:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8016020:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8016024:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016028:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801602c:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8016030:	3e646165 	powccsz	f6, f4, f5
 8016034:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016038:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 801603c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8016040:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016044:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8016048:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801604c:	0a3e6461 	beq	8faf1d8 <_sidata+0xf96ea0>
 8016050:	646f623c 	strbtvs	r6, [pc], #-572	; 8016058 <RemoteConfig::s_TXT+0x274>
 8016054:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016058:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 801605c:	31682f3c 	cmncc	r8, ip, lsr pc
 8016060:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8016064:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016068:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801606c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016070:	5448000a 	strbpl	r0, [r8], #-10
 8016074:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8016078:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 801607c:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8016080:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8016084:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8016088:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801608c:	6f430a0d 	svcvs	0x00430a0d
 8016090:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016094:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8016098:	203a6570 	eorscs	r6, sl, r0, ror r5
 801609c:	0a0d7325 	beq	8372d38 <_sidata+0x35aa00>
 80160a0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80160a4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80160a8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80160ac:	203a6874 	eorscs	r6, sl, r4, ror r8
 80160b0:	0a0d7525 	beq	837354c <_sidata+0x35b214>
 80160b4:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80160b8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80160bc:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80160c0:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 80160c4:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 80160c8:	4447000a 	strbmi	r0, [r7], #-10
 80160cc:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 80160d0:	5f433730 	svcpl	0x00433730
 80160d4:	4c415645 	mcrrmi	6, 4, r5, r1, cr5
	...

080160d9 <contentType>:
 80160d9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80160dd:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80160e1:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80160f9:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80160fd:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8016119:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801611d:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8016121:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8016125:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8016139:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801613d:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8016141:	2f6e6f69 	svccs	0x006e6f69
 8016145:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08016159 <RemoteConfigConst::PARAMS_DISABLE>:
 8016159:	61736964 	cmnvs	r3, r4, ror #18
 801615d:	00656c62 	rsbeq	r6, r5, r2, ror #24

08016161 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8016161:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8016165:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8016169:	00747874 	rsbseq	r7, r4, r4, ror r8

0801616d <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 801616d:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016171:	5f79616c 	svcpl	0x0079616c
 8016175:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801617a <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801617a:	61736964 	cmnvs	r3, r4, ror #18
 801617e:	5f656c62 	svcpl	0x00656c62
 8016182:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8016186:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016188 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8016188:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801618c:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8016190:	6f6f6265 	svcvs	0x006f6265
 8016194:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08016196 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8016196:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801619a:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8015c36 <s_Node+0x82>
 801619e:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80161a2:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080161a4 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80161a4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80161a8:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80161ac:	6f746361 	svcvs	0x00746361
 80161b0:	7b007972 	blvc	8034780 <_sidata+0x1c448>
 80161b4:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80161b8:	7b3a2274 	blvc	8e9eb90 <_sidata+0xe86858>
 80161bc:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80161c0:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80161c4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80161c8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80161cc:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80161d0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80161d4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80161d8:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80161dc:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80161e0:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80161e4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80161e8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80161ec:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80161f0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80161f4:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80161f8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80161fc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016200:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016204:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016208:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801620c:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8016210:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016214:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016218:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801621c:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016220:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016224:	616f6222 	cmnvs	pc, r2, lsr #4
 8016228:	3a226472 	bcc	88af3f8 <_sidata+0x8970c0>
 801622c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016230:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8016234:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8016238:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801623c:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8016240:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016244:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016248:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801624c:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8016250:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016254:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8016258:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 801625c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016260:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8016264:	7b000a7d 	blvc	8018c60 <_sidata+0x928>
 8016268:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 801626c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016270:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8016274:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016278:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801627c:	7b3a2273 	blvc	8e9ec50 <_sidata+0xe86918>
 8016280:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8016284:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016288:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 801628c:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016290:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016294:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8016298:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 801629c:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80162a0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80162a4:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80162a8:	5020584d 	eorpl	r5, r0, sp, asr #16
 80162ac:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80162b0:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 80162b4:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80162b8:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 80162bc:	3a227478 	bcc	88b34a4 <_sidata+0x89b16c>
 80162c0:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 80162c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80162c8:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 80162cc:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 80162d0:	6f777465 	svcvs	0x00777465
 80162d4:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 80162d8:	3a227478 	bcc	88b34c0 <_sidata+0x89b188>
 80162dc:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 80162e0:	6b726f77 	blvs	9cb20c4 <_sidata+0x1c99d8c>
 80162e4:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 80162e8:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80162ec:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 80162f0:	3a227478 	bcc	88b34d8 <_sidata+0x89b1a0>
 80162f4:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 80162f8:	2065746f 	rsbcs	r7, r5, pc, ror #8
 80162fc:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016300:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016304:	6f697461 	svcvs	0x00697461
 8016308:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

0801630d <index_html>:
 801630d:	4f44213c 	svcmi	0x0044213c
 8016311:	50595443 	subspl	r5, r9, r3, asr #8
 8016315:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8016319:	0a3e6c6d 	beq	8fb14d5 <_sidata+0xf9919d>
 801631d:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8016321:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016325:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8016329:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801632d:	6b6e696c 	blvs	9bb08e5 <_sidata+0x1b985ad>
 8016331:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8016335:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8016339:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801633d:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8016341:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8016345:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8016349:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801634d:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8016351:	20227373 	eorcs	r7, r2, r3, ror r3
 8016355:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8016359:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801635d:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8016361:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8016365:	0a3e656c 	beq	8faf91d <_sidata+0xf975e5>
 8016369:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801636d:	0a3e6461 	beq	8faf4f9 <_sidata+0xf971c1>
 8016371:	646f623c 	strbtvs	r6, [pc], #-572	; 8016379 <index_html+0x6c>
 8016375:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016379:	6165683c 	cmnvs	r5, ip, lsr r8
 801637d:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8016381:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8016385:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8016389:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801638d:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8016391:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016395:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016399:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801639d:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80163a1:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80163a5:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80163a9:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80163ad:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80163b1:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80163b5:	6f746365 	svcvs	0x00746365
 80163b9:	20227972 	eorcs	r7, r2, r2, ror r9
 80163bd:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80163c1:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80163c5:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80163c9:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80163cd:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80163d1:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80163d5:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80163d9:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80163dd:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80163e1:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80163e5:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80163e9:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80163ed:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80163f1:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80163f5:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80163f9:	20227478 	eorcs	r7, r2, r8, ror r4
 80163fd:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016401:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8016405:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8016409:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801640d:	0a3e656c 	beq	8faf9c5 <_sidata+0xf9768d>
 8016411:	6f663c09 	svcvs	0x00663c09
 8016415:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8016419:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801641d:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016421:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016425:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016429:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801642d:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016431:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016435:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016439:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801643d:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8016441:	20747069 	rsbscs	r7, r4, r9, rrx
 8016445:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016449:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801644d:	6a2e7865 	bvs	8bb45e9 <_sidata+0xb9c2b1>
 8016451:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8016455:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8016459:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801645d:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8016461:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016465:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016469:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801646d:	 	svcvs	0x0062000a

0801646f <styles_css>:
 801646f:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016473:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016477:	63616220 	cmnvs	r1, #32, 4
 801647b:	6f72676b 	svcvs	0x0072676b
 801647f:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8016483:	6f6c6f63 	svcvs	0x006c6f63
 8016487:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801648b:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801648f:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8016493:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8016497:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801649b:	6f6c6f63 	svcvs	0x006c6f63
 801649f:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80164a3:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80164a7:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80164ab:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80164af:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80164b3:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80164b7:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80164bb:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80164bf:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80164c3:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80164c7:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80164cb:	0a3b7865 	beq	8ef4667 <_sidata+0xedc32f>
 80164cf:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80164d3:	0a7b2069 	beq	9ede67f <_sidata+0x1ec6347>
 80164d7:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80164db:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80164df:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80164e3:	6f6e203a 	svcvs	0x006e203a
 80164e7:	0a3b656e 	beq	8eefaa7 <_sidata+0xed776f>
 80164eb:	616d2020 	cmnvs	sp, r0, lsr #32
 80164ef:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80164f3:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80164f7:	70352078 	eorsvc	r2, r5, r8, ror r0
 80164fb:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80164ff:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8016503:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016507:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801650b:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801650f:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016513:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016517:	0a3b7865 	beq	8ef46b3 <_sidata+0xedc37b>
 801651b:	6f622020 	svcvs	0x00622020
 801651f:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016523:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016527:	3a737569 	bcc	9cf3ad3 <_sidata+0x1cdb79b>
 801652b:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801652f:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016533:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016537:	203a7265 	eorscs	r7, sl, r5, ror #4
 801653b:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801653f:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016543:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016547:	0a3b7870 	beq	8ef470f <_sidata+0xedc3d7>
 801654b:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801654f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016553:	0a7b2072 	beq	9ede723 <_sidata+0x1ec63eb>
 8016557:	69642020 	stmdbvs	r4!, {r5, sp}^
 801655b:	616c7073 	smcvs	50947	; 0xc703
 801655f:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8016563:	3b78656c 	blcc	9e2fb1b <_sidata+0x1e177e3>
 8016567:	6a20200a 	bvs	881e597 <_sidata+0x80625f>
 801656b:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801656f:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8016573:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016577:	203a746e 	eorscs	r7, sl, lr, ror #8
 801657b:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801657f:	0a3b7265 	beq	8ef2f1b <_sidata+0xedabe3>
 8016583:	6f622020 	svcvs	0x00622020
 8016587:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801658b:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801658f:	3a737569 	bcc	9cf3b3b <_sidata+0x1cdb803>
 8016593:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016597:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801659b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801659f:	203a7265 	eorscs	r7, sl, r5, ror #4
 80165a3:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80165a7:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80165ab:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80165af:	0a3b7870 	beq	8ef4777 <_sidata+0xedc43f>
 80165b3:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

080165b8 <HttpContent>:
 80165b8:	08015ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, ip, lr}
 80165bc:	0801646f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, sp, lr}
 80165c0:	08015ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, ip, lr}
 80165c4:	080165d0 	stmdaeq	r1, {r4, r6, r7, r8, sl, sp, lr}
 80165c8:	08015eb8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, fp, ip, lr}
 80165cc:	0801630d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sp, lr}

080165d0 <index_js>:
 80165d0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80165d4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80165d8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80165dc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80165e0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80165e4:	6a284e4f 	bvs	8a29f28 <_sidata+0xa11bf0>
 80165e8:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80165ec:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80165f0:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80165f4:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80165f8:	6a2f273d 	bvs	8be02f4 <_sidata+0xbc7fbc>
 80165fc:	2f6e6f73 	svccs	0x006e6f73
 8016600:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8016604:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016608:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 801660c:	20797274 	rsbscs	r7, r9, r4, ror r2
 8016610:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016614:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8016618:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 801661c:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8016620:	20746961 	rsbscs	r6, r4, r1, ror #18
 8016624:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8016628:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 801662c:	0a3b296c 	beq	8ee0be4 <_sidata+0xec88ac>
 8016630:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016634:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8016638:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 801663c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8016640:	73657220 	cmnvc	r5, #32, 4
 8016644:	6f736a2e 	svcvs	0x00736a2e
 8016648:	3b29286e 	blcc	8a60808 <_sidata+0xa484d0>
 801664c:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016650:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8016654:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8016658:	6f727265 	svcvs	0x00727265
 801665c:	7b202972 	blvc	8820c2c <_sidata+0x8088f4>
 8016660:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016664:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8016668:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 801666c:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8016670:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8016674:	3b29726f 	blcc	8a73038 <_sidata+0xa5ad00>
 8016678:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801667c:	0a0a7d0a 	beq	82b5aac <_sidata+0x29d774>
 8016680:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016684:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016688:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801668c:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8016690:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016694:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016698:	20292874 	eorcs	r2, r9, r4, ror r8
 801669c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80166a0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80166a4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80166a8:	6177613d 	cmnvs	r7, sp, lsr r1
 80166ac:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80166b0:	534a7465 	movtpl	r7, #42085	; 0xa465
 80166b4:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80166b8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80166bc:	0a3b2927 	beq	8ee0b60 <_sidata+0xec8828>
 80166c0:	6f640909 	svcvs	0x00640909
 80166c4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80166c8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80166cc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80166d0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80166d4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80166d8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80166dc:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80166e0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80166e4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80166e8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80166ec:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80166f0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80166f4:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80166f8:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80166fc:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8016700:	2b656d61 	blcs	9971c8c <_sidata+0x1959954>
 8016704:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016684 <index_js+0xb4>
 8016708:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801670c:	2b223e69 	blcs	88a60b8 <_sidata+0x88dd80>
 8016710:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016714:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016718:	6f6e2e74 	svcvs	0x006e2e74
 801671c:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8016720:	2b657079 	blcs	997290c <_sidata+0x195a5d4>
 8016724:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80166a4 <index_js+0xd4>
 8016728:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801672c:	2b223e69 	blcs	88a60d8 <_sidata+0x88dda0>
 8016730:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016734:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016738:	6f6e2e74 	svcvs	0x006e2e74
 801673c:	702e6564 	eorvc	r6, lr, r4, ror #10
 8016740:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8016744:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016748:	2f3c222b 	svccs	0x003c222b
 801674c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8016750:	0a7d0a3b 	beq	9f59044 <_sidata+0x1f40d0c>
 8016754:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8016758:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 801675c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8016760:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8016764:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8016768:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801676c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016770:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8016774:	0a7b2029 	beq	9ede820 <_sidata+0x1ec64e8>
 8016778:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801677c:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8016780:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8016784:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016788:	6177613d 	cmnvs	r7, sp, lsr r1
 801678c:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016790:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016794:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016798:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801679c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80167a0:	3b292779 	blcc	8a6058c <_sidata+0xa48254>
 80167a4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80167a8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80167ac:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80167b0:	0a22223d 	beq	889f0ac <_sidata+0x886d74>
 80167b4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80167b8:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80167bc:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80167c0:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80167c4:	6a624f3d 	bvs	98aa4c0 <_sidata+0x1892188>
 80167c8:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80167cc:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80167d0:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80167d4:	6f746365 	svcvs	0x00746365
 80167d8:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80167dc:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80167e0:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80167e4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80167e8:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80167ec:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80167f0:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80167f4:	6145726f 	cmpvs	r5, pc, ror #4
 80167f8:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80167fc:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8016800:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016804:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8016808:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801680c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016810:	20726176 	rsbscs	r6, r2, r6, ror r1
 8016814:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8016818:	203d2065 	eorscs	r2, sp, r5, rrx
 801681c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016820:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016824:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8016828:	73656c69 	cmnvc	r5, #26880	; 0x6900
 801682c:	6b5b5d22 	blvs	96edcbc <_sidata+0x16d5984>
 8016830:	3b5d7965 	blcc	9774dcc <_sidata+0x175ca94>
 8016834:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016838:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 801683c:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8016840:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8016844:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016848:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 801684c:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8016850:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8016854:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8016858:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 801685c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8016860:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8016864:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016868:	0a3b223e 	beq	8edf168 <_sidata+0xec6e30>
 801686c:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8016870:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8016874:	6f640909 	svcvs	0x00640909
 8016878:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801687c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8016880:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8016884:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8016888:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801688c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8016890:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8016894:	6f746365 	svcvs	0x00746365
 8016898:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 801689c:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80168a0:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80168a4:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80168a8:	3b6c6d74 	blcc	9b31e80 <_sidata+0x1b19b48>
 80168ac:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80168b0:	5f746567 	svcpl	0x00746567
 80168b4:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80168b8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80168bc:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80168c0:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80168c4:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80168c8:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80168cc:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80168d0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80168d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80168d8:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80168dc:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80168e0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80168e4:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80168e8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80168ec:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80168f0:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80168f4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80168f8:	6177613d 	cmnvs	r7, sp, lsr r1
 80168fc:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016900:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016904:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016908:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801690c:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8016910:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8016914:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8016918:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 801691c:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8016920:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8016924:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8016928:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 801692c:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8016930:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8016934:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016938:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 801693c:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8016940:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8016944:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8016948:	2b22563e 	blcs	88ac248 <_sidata+0x893f10>
 801694c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016950:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8016954:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016958:	2b6e6f69 	blcs	9bb2704 <_sidata+0x1b9a3cc>
 801695c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80168dc <index_js+0x30c>
 8016960:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016964:	2b223e69 	blcs	88a6310 <_sidata+0x88dfd8>
 8016968:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801696c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8016970:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8016974:	61642e64 	cmnvs	r4, r4, ror #28
 8016978:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 801697c:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016980:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8016984:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8016988:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801698c:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8016990:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8016994:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8016998:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 801699c:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80169a0:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80169a4:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80169a8:	6f697372 	svcvs	0x00697372
 80169ac:	6f622e6e 	svcvs	0x00622e6e
 80169b0:	2b647261 	blcs	993333c <_sidata+0x191b004>
 80169b4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016934 <index_js+0x364>
 80169b8:	3b223e69 	blcc	88a6364 <_sidata+0x88e02c>
 80169bc:	0a0a7d0a 	beq	82b5dec <_sidata+0x29dab4>
 80169c0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80169c4:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80169c8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80169cc:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80169d0:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80169d8 <index_js+0x408>
 80169d4:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80169d8:	20296c65 	eorcs	r6, r9, r5, ror #24
 80169dc:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80169e0:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80169e4:	613d7478 	teqvs	sp, r8, ror r4
 80169e8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80169ec:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80169f0:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80169f4:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80169f8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80169fc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016a00:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016a04:	3b22223d 	blcc	889f300 <_sidata+0x886fc8>
 8016a08:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8016a0c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8016a10:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8016a14:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8016a18:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8016a1c:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8016a20:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8016a24:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8016a28:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8016a2c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016a30:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8016a34:	0a7b2029 	beq	9edeae0 <_sidata+0x1ec67a8>
 8016a38:	61760909 	cmnvs	r6, r9, lsl #18
 8016a3c:	61762072 	cmnvs	r6, r2, ror r0
 8016a40:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8016a44:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8016a48:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8016a4c:	6b5b5d6c 	blvs	96ee004 <_sidata+0x16d5ccc>
 8016a50:	3b5d7965 	blcc	9774fec <_sidata+0x175ccb4>
 8016a54:	2009090a 	andcs	r0, r9, sl, lsl #18
 8016a58:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016a5c:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8016a60:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8016a64:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016a68:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8016a6c:	2f3c222b 	svccs	0x003c222b
 8016a70:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8016a74:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016a78:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8016a7c:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8016a80:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8016a84:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8016a8c <index_js+0x4bc>
 8016a88:	3b223e72 	blcc	88a6458 <_sidata+0x88e120>
 8016a8c:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8016a90:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8016a94:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8016a98:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8016a9c:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8016aa0:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8016aa4:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8016aa8:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8016aac:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8016ab0:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8016ab4:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8016ab8:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8016abc:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8016ac0:	0a3b6c6d 	beq	8ef1c7c <_sidata+0xed9944>
 8016ac4:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8016ac8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016acc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016ad0:	3b292874 	blcc	8a60ca8 <_sidata+0xa48970>
 8016ad4:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8016ad8:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8016adc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8016ae0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016ae4:	0a3b2928 	beq	8ee0f8c <_sidata+0xec8c54>
 8016ae8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8016aec:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8016af0:	6f697372 	svcvs	0x00697372
 8016af4:	3b29286e 	blcc	8a60cb4 <_sidata+0xa4897c>
 8016af8:	3332000a 	teqcc	r2, #10
 8016afc:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016b00:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8016b04:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8016b08:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8016b0c:	30007325 	andcc	r7, r0, r5, lsr #6
 8016b10:	6f4e202e 	svcvs	0x004e202e
 8016b14:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8016b18:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8016b1c:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8016b20:	202c6465 	eorcs	r6, ip, r5, ror #8
 8016b24:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8016b28:	6f687320 	svcvs	0x00687320
 8016b2c:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8016b30:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8016b34:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8016b38:	000a216e 	andeq	r2, sl, lr, ror #2
 8016b3c:	00505448 	subseq	r5, r0, r8, asr #8
 8016b40:	0050544c 	subseq	r5, r0, ip, asr #8
 8016b44:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8016b48:	000a6567 	andeq	r6, sl, r7, ror #10
 8016b4c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8016b50:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8016b54:	203a2065 	eorscs	r2, sl, r5, rrx
 8016b58:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016b5c:	20000a64 	andcs	r0, r0, r4, ror #20
 8016b60:	20444943 	subcs	r4, r4, r3, asr #18
 8016b64:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016b68:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016b6c:	20000a73 	andcs	r0, r0, r3, ror sl
 8016b70:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8016b74:	000a7475 	andeq	r7, sl, r5, ror r4
 8016b78:	6f502020 	svcvs	0x00502020
 8016b7c:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8016b80:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8016b84:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8016b88:	20657372 	rsbcs	r7, r5, r2, ror r3
 8016b8c:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8016b90:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8016b94:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016b98:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8016b9c:	20000a74 	andcs	r0, r0, r4, ror sl
 8016ba0:	726f5020 	rsbvc	r5, pc, #32
 8016ba4:	32252074 	eorcc	r2, r5, #116	; 0x74
 8016ba8:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8016bac:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8016bb0:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8016bb4:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8016bb8:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8016bbc:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8016bc0:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8016bc4:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016bc8:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8016bcc:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8016bd0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8016bd4:	000a6465 	andeq	r6, sl, r5, ror #8

08016bd8 <E131MsgConst::START>:
 8016bd8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8016bdc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8016be0:	43417320 	movtmi	r7, #4896	; 0x1320
 8016be4:	3145204e 	cmpcc	r5, lr, asr #32
 8016be8:	0031332e 	eorseq	r3, r1, lr, lsr #6

08016bec <E131MsgConst::PARAMS>:
 8016bec:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8016bf0:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016bf4:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8016bf8:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016bfc:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016c00:	 	movwvc	r3, #307	; 0x133

08016c03 <E131MsgConst::STARTED>:
 8016c03:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016c07:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016c0b:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8016c0f:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8016c13:	69006465 	stmdbvs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8016c17:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8016c1b:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8016c1f:	00747570 	rsbseq	r7, r4, r0, ror r5
 8016c23:	00707468 	rsbseq	r7, r0, r8, ror #8
 8016c27:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8016c2b:	20584d44 	subscs	r4, r8, r4, asr #26
 8016c2f:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8016c33:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8016c37:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8016c3b:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8016c3f:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8016c43:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08016c46 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8016c46:	61736964 	cmnvs	r3, r4, ror #18
 8016c4a:	5f656c62 	svcpl	0x00656c62
 8016c4e:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016c52:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016c56:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80166f1 <index_js+0x121>
 8016c5a:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08016c5c <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8016c5c:	61736964 	cmnvs	r3, r4, ror #18
 8016c60:	5f656c62 	svcpl	0x00656c62
 8016c64:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8016c68:	5f6b726f 	svcpl	0x006b726f
 8016c6c:	61746164 	cmnvs	r4, r4, ror #2
 8016c70:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8016c74:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016c78:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8016713 <index_js+0x143>
 8016c7c:	 	rsbsvc	r0, r0, #116	; 0x74

08016c7e <E131ParamsConst::PRIORITY>:
 8016c7e:	6f697270 	svcvs	0x00697270
 8016c82:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8016c86:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016c8a:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016c8e:	72700000 	rsbsvc	r0, r0, #0
 8016c92:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016c96:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8016c9a:	5f74726f 	svcpl	0x0074726f
 8016c9e:	00000062 	andeq	r0, r0, r2, rrx
 8016ca2:	6f697270 	svcvs	0x00697270
 8016ca6:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8016caa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016cae:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016cb2:	72700000 	rsbsvc	r0, r0, #0
 8016cb6:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016cba:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8016cbe:	5f74726f 	svcpl	0x0074726f
 8016cc2:	00000064 	andeq	r0, r0, r4, rrx

08016cc6 <E131ParamsConst::FILE_NAME>:
 8016cc6:	31333165 	teqcc	r3, r5, ror #2
 8016cca:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08016ccf <E117Const::ACN_PACKET_IDENTIFIER>:
 8016ccf:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8016cd3:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8016cd7:	00000037 	andeq	r0, r0, r7, lsr r0

08016cdb <E131BridgeConst::VERSION>:
 8016cdb:	33321801 	teqcc	r2, #65536	; 0x10000
 8016cdf:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016ce3:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8016ce7:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8016ceb:	33320033 	teqcc	r2, #51	; 0x33
 8016cef:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016cf3:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8016cf7:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8016cfb:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 8016cff:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8016d03:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8016d07:	6f632065 	svcvs	0x00632065
 8016d0b:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016d0f:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8016d13:	0a6e6f69 	beq	9bb2abf <_sidata+0x1b9a787>
 8016d17:	6f502000 	svcvs	0x00502000
 8016d1b:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8016d1f:	20205044 	eorcs	r5, r0, r4, asr #32
 8016d23:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d27:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d2b:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d2f:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016d33:	20000a64 	andcs	r0, r0, r4, ror #20
 8016d37:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8016d3b:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8016d3f:	6f6a2074 	svcvs	0x006a2074
 8016d43:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 8016d47:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8016d4b:	3a207473 	bcc	8833f1f <_sidata+0x81bbe7>
 8016d4f:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8016d53:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016d57:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016d5b:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016d5f:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8016d63:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 8016d67:	73655220 	cmnvc	r5, #32, 4
 8016d6b:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8016d6f:	20202065 	eorcs	r2, r0, r5, rrx
 8016d73:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016d77:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016d7b:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016d7f:	0a64252e 	beq	992023f <_sidata+0x1907f07>
	...

08016d84 <vtable for LLRPDevice>:
	...
 8016d8c:	0800b073 	stmdaeq	r0, {r0, r1, r4, r5, r6, ip, sp, pc}
 8016d90:	0800b07d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, sp, pc}
 8016d94:	0800b075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, sp, pc}
 8016d98:	0800b077 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, ip, sp, pc}
 8016d9c:	0800b079 	stmdaeq	r0, {r0, r3, r4, r5, r6, ip, sp, pc}
 8016da0:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8016da4:	000a7465 	andeq	r7, sl, r5, ror #8
 8016da8:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8016dac:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016db0:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8016db4:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8016db8:	6f707365 	svcvs	0x00707365
 8016dbc:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8016dc0:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8016dc4:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8016dc8:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8016dcc:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8016dd0:	6f725020 	svcvs	0x00725020
 8016dd4:	6f636f74 	svcvs	0x00636f74
 8016dd8:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8016ddc:	6f697372 	svcvs	0x00697372
 8016de0:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8016de4:	0a64252e 	beq	99202a4 <_sidata+0x1907f6c>
 8016de8:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8016dec:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8016df0:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8016df4:	20202073 	eorcs	r2, r0, r3, ror r0
 8016df8:	3a202020 	bcc	881ee80 <_sidata+0x806b48>
 8016dfc:	0a642520 	beq	9920284 <_sidata+0x1907f4c>
 8016e00:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8016e04:	6f462058 	svcvs	0x00462058
 8016e08:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8016e0c:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8016e10:	3a202020 	bcc	881ee98 <_sidata+0x806b60>
 8016e14:	0a642520 	beq	992029c <_sidata+0x1907f64>
 8016e18:	65502000 	ldrbvs	r2, [r0, #-0]
 8016e1c:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8016e20:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8016e24:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8016e28:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8016e2c:	5b206425 	blpl	882fec8 <_sidata+0x817b90>
 8016e30:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016e34:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016e38:	20627553 	rsbcs	r7, r2, r3, asr r5
 8016e3c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8016e40:	20736563 	rsbscs	r6, r3, r3, ror #10
 8016e44:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016e48:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016e4c:	20000a64 	andcs	r0, r0, r4, ror #20
 8016e50:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8016e54:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8016e58:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016e5c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016e60:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016e64:	 	strmi	r0, [r0, -r4, ror #20]

08016e67 <DEVICE_LABEL>:
 8016e67:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8016e6b:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8016e6f:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8016e73:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 8016e77:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8016e7b:	6f707365 	svcvs	0x00707365
 8016e7f:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
	...

08016e84 <vtable for RDMDeviceResponder>:
	...
 8016e8c:	0800b565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, ip, sp, pc}
 8016e90:	0800b585 	stmdaeq	r0, {r0, r2, r7, r8, sl, ip, sp, pc}
 8016e94:	0800b55f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, pc}
 8016e98:	0800b561 	stmdaeq	r0, {r0, r5, r6, r8, sl, ip, sp, pc}

08016e9c <UID_ALL>:
 8016e9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8016ea0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08016ea4 <RDMHandler::PID_DEFINITIONS>:
 8016ea4:	00000060 	andeq	r0, r0, r0, rrx
 8016ea8:	0800ba6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, ip, sp, pc}
	...
 8016eb8:	01010000 	mrseq	r0, (UNDEF: 1)
 8016ebc:	00000080 	andeq	r0, r0, r0, lsl #1
 8016ec0:	0800bb55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, fp, ip, sp, pc}
	...
 8016ed0:	01010100 	mrseq	r0, (UNDEF: 17)
 8016ed4:	00000081 	andeq	r0, r0, r1, lsl #1
 8016ed8:	0800bb71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, fp, ip, sp, pc}
	...
 8016ee8:	01010100 	mrseq	r0, (UNDEF: 17)
 8016eec:	00000082 	andeq	r0, r0, r2, lsl #1
 8016ef0:	0800bb91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp, ip, sp, pc}
 8016ef4:	00000000 	andeq	r0, r0, r0
 8016ef8:	0800bce1 	stmdaeq	r0, {r0, r5, r6, r7, sl, fp, ip, sp, pc}
 8016efc:	00000000 	andeq	r0, r0, r0
 8016f00:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f04:	00000090 	muleq	r0, r0, r0
 8016f08:	0800bad5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, ip, sp, pc}
 8016f0c:	00000000 	andeq	r0, r0, r0
 8016f10:	0800bcad 	stmdaeq	r0, {r0, r2, r3, r5, r7, sl, fp, ip, sp, pc}
 8016f14:	00000000 	andeq	r0, r0, r0
 8016f18:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f1c:	00001000 	andeq	r1, r0, r0
 8016f20:	0800bbcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, pc}
 8016f24:	00000000 	andeq	r0, r0, r0
 8016f28:	0800bc31 	stmdaeq	r0, {r0, r4, r5, sl, fp, ip, sp, pc}
 8016f2c:	00000000 	andeq	r0, r0, r0
 8016f30:	01010000 	mrseq	r0, (UNDEF: 1)
 8016f34:	00001001 	andeq	r1, r0, r1
	...
 8016f40:	0800bbe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 8016f44:	00000000 	andeq	r0, r0, r0
 8016f48:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f4c:	00000700 	andeq	r0, r0, r0, lsl #14
 8016f50:	0800bfc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl, fp, ip, sp, pc}
	...
 8016f60:	01000000 	mrseq	r0, (UNDEF: 0)
 8016f64:	00000701 	andeq	r0, r0, r1, lsl #14
 8016f68:	0800bfed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
	...
 8016f78:	01000004 	tsteq	r0, r4
 8016f7c:	00000702 	andeq	r0, r0, r2, lsl #14
 8016f80:	0800c039 	stmdaeq	r0, {r0, r3, r4, r5, lr, pc}
	...
 8016f90:	01000004 	tsteq	r0, r4
 8016f94:	00000703 	andeq	r0, r0, r3, lsl #14
 8016f98:	0800c069 	stmdaeq	r0, {r0, r3, r5, r6, lr, pc}
 8016f9c:	00000000 	andeq	r0, r0, r0
 8016fa0:	0800c095 	stmdaeq	r0, {r0, r2, r4, r7, lr, pc}
 8016fa4:	00000000 	andeq	r0, r0, r0
 8016fa8:	01000004 	tsteq	r0, r4
 8016fac:	00000704 	andeq	r0, r0, r4, lsl #14
 8016fb0:	0800c101 	stmdaeq	r0, {r0, r8, lr, pc}
 8016fb4:	00000000 	andeq	r0, r0, r0
 8016fb8:	0800c131 	stmdaeq	r0, {r0, r4, r5, r8, lr, pc}
 8016fbc:	00000000 	andeq	r0, r0, r0
 8016fc0:	01000004 	tsteq	r0, r4
 8016fc4:	00000705 	andeq	r0, r0, r5, lsl #14
 8016fc8:	0800c1a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, lr, pc}
	...
 8016fd8:	01000004 	tsteq	r0, r4
 8016fdc:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8016fe8:	0800c179 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, lr, pc}
 8016fec:	00000000 	andeq	r0, r0, r0
 8016ff0:	01000004 	tsteq	r0, r4
 8016ff4:	00000706 	andeq	r0, r0, r6, lsl #14
 8016ff8:	0800c1ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, lr, pc}
 8016ffc:	00000000 	andeq	r0, r0, r0
 8017000:	0800c231 	stmdaeq	r0, {r0, r4, r5, r9, lr, pc}
 8017004:	00000000 	andeq	r0, r0, r0
 8017008:	01000004 	tsteq	r0, r4
 801700c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8017018:	0800c27d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, lr, pc}
 801701c:	00000000 	andeq	r0, r0, r0
 8017020:	01000004 	tsteq	r0, r4
 8017024:	0000070b 	andeq	r0, r0, fp, lsl #14
 8017028:	0800c0dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, lr, pc}
	...
 8017038:	01000001 	tsteq	r0, r1
 801703c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8017040:	0800c2a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, lr, pc}
 8017044:	00000000 	andeq	r0, r0, r0
 8017048:	0800c2dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, lr, pc}
 801704c:	00000000 	andeq	r0, r0, r0
 8017050:	01000004 	tsteq	r0, r4
 8017054:	0000070c 	andeq	r0, r0, ip, lsl #14
 8017058:	0800c2e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, lr, pc}
 801705c:	00000000 	andeq	r0, r0, r0
 8017060:	0800c315 	stmdaeq	r0, {r0, r2, r4, r8, r9, lr, pc}
 8017064:	00000000 	andeq	r0, r0, r0
 8017068:	01000000 	mrseq	r0, (UNDEF: 0)
 801706c:	0000070d 	andeq	r0, r0, sp, lsl #14
 8017070:	0800c349 	stmdaeq	r0, {r0, r3, r6, r8, r9, lr, pc}
 8017074:	00000000 	andeq	r0, r0, r0
 8017078:	0800c379 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, lr, pc}
 801707c:	00000000 	andeq	r0, r0, r0
 8017080:	01000000 	mrseq	r0, (UNDEF: 0)
 8017084:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8017088:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 801708c:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 8017090:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8017094:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8017098:	204d4452 	subcs	r4, sp, r2, asr r4
 801709c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80170a0:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80170a4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80170a8:	61727567 	cmnvs	r2, r7, ror #10
 80170ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80170b0:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80170b4:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 80170b8:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 80170bc:	20726572 	rsbscs	r6, r2, r2, ror r5
 80170c0:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80170c4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80170c8:	0a732a2e 	beq	9ce1988 <_sidata+0x1cc9650>
 80170cc:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80170d0:	6166756e 	cmnvs	r6, lr, ror #10
 80170d4:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 80170d8:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 80170dc:	20202044 	eorcs	r2, r0, r4, asr #32
 80170e0:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80170e4:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80170e8:	000a5832 	andeq	r5, sl, r2, lsr r8
 80170ec:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80170f0:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80170f4:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 80170f8:	20207265 	eorcs	r7, r0, r5, ror #4
 80170fc:	3a202020 	bcc	881f184 <_sidata+0x806e4c>
 8017100:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8017104:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8017108:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 801710c:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8017110:	20000a58 	andcs	r0, r0, r8, asr sl
 8017114:	746f6f52 	strbtvc	r6, [pc], #-3922	; 801711c <RDMHandler::PID_DEFINITIONS+0x278>
 8017118:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 801711c:	20206c65 	eorcs	r6, r0, r5, ror #24
 8017120:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017124:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017128:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801712c:	5020000a 	eorpl	r0, r0, sl
 8017130:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8017134:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8017138:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 801713c:	2079726f 	rsbscs	r7, r9, pc, ror #4
 8017140:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017144:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017148:	0a58322e 	beq	9623a08 <_sidata+0x160b6d0>
 801714c:	72502000 	subsvc	r2, r0, #0
 8017150:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 8017154:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8017158:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 801715c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017160:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017164:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8017168:	000a5832 	andeq	r5, sl, r2, lsr r8

0801716c <DEVICE_LABEL>:
 801716c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8017170:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8017174:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8017178:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 801717c:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8017180:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8017184:	 	subseq	r0, r0, r5, rrx

08017186 <RDMConst::MANUFACTURER_ID>:
 8017186:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08017188 <RDMConst::MANUFACTURER_NAME>:
 8017188:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801718c:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8017190:	6f2e7777 	svcvs	0x002e7777
 8017194:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8017198:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 801719c:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80171a0:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80171a4:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80171a8:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80171ac:	30252d78 	eorcc	r2, r5, r8, ror sp
 80171b0:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 80171b4:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 80171b8:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 80171bc:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171c0:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171c4:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171c8:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171cc:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171d0:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80171d4:	78695000 	stmdavc	r9!, {ip, lr}^
 80171d8:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 80171dc:	7020584d 	eorvc	r5, r0, sp, asr #16
 80171e0:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 80171e4:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 80171e8:	20000a73 	andcs	r0, r0, r3, ror sl
 80171ec:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80171f0:	20737475 	rsbscs	r7, r3, r5, ror r4
 80171f4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80171f8:	4720000a 	strmi	r0, [r0, -sl]!
 80171fc:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8017200:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8017204:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017208:	203a2074 	eorscs	r2, sl, r4, ror r0
 801720c:	5b206425 	blpl	88302a8 <_sidata+0x817f70>
 8017210:	756f7247 	strbvc	r7, [pc, #-583]!	; 8016fd1 <RDMHandler::PID_DEFINITIONS+0x12d>
 8017214:	3a207370 	bcc	8833fdc <_sidata+0x81bca4>
 8017218:	5d642520 	cfstr64pl	mvdx2, [r4, #-128]!	; 0xffffff80
 801721c:	0000000a 	andeq	r0, r0, sl

08017220 <vtable for WS28xxDmxMulti>:
	...
 8017228:	0800c5b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, lr, pc}
 801722c:	0800c5d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, lr, pc}
 8017230:	0800c593 	stmdaeq	r0, {r0, r1, r4, r7, r8, sl, lr, pc}
 8017234:	0800c755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, lr, pc}
 8017238:	0800c60f 	stmdaeq	r0, {r0, r1, r2, r3, r9, sl, lr, pc}
 801723c:	0800c5e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, r8, sl, lr, pc}
 8017240:	0800c721 	stmdaeq	r0, {r0, r5, r8, r9, sl, lr, pc}
 8017244:	0800c585 	stmdaeq	r0, {r0, r2, r7, r8, sl, lr, pc}
 8017248:	0800c589 	stmdaeq	r0, {r0, r3, r7, r8, sl, lr, pc}
 801724c:	0800c58f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, sl, lr, pc}
 8017250:	08012419 	stmdaeq	r1, {r0, r3, r4, sl, sp}
 8017254:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8017258:	2a2e253a 	bcs	8ba0748 <_sidata+0xb88410>
 801725c:	23002c66 	movwcs	r2, #3174	; 0xc66
 8017260:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8017264:	0a662a2e 	beq	99a1b24 <_sidata+0x19897ec>
 8017268:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 801726c:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8017270:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 8017274:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 8017278:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801727c:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8017280:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8017284:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 8017288:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 801728c:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 8017290:	47002973 	smlsdxmi	r0, r3, r9, r2
 8017294:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8017298:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801729c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80172a0:	6162206b 	cmnvs	r2, fp, rrx
 80172a4:	20646573 	rsbcs	r6, r4, r3, ror r5
 80172a8:	70696863 	rsbvc	r6, r9, r3, ror #16
 80172ac:	50410073 	subpl	r0, r1, r3, ror r0
 80172b0:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 80172b4:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 80172b8:	00323238 	eorseq	r3, r2, r8, lsr r2
 80172bc:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 80172c0:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 80172c4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 80172c8:	6c615600 	stclvs	6, cr5, [r1], #-0
 80172cc:	74616469 	strbtvc	r6, [r1], #-1129	; 0xfffffb97
 80172d0:	72730065 	rsbsvc	r0, r3, #101	; 0x65
 80172d4:	69702f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 80172d8:	636c6578 	cmnvs	ip, #120, 10	; 0x1e000000
 80172dc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80172e0:	61727567 	cmnvs	r2, r7, ror #10
 80172e4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80172e8:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 80172ec:	70795400 	rsbsvc	r5, r9, r0, lsl #8
 80172f0:	73253d65 			; <UNDEFINED> instruction: 0x73253d65
 80172f4:	75255b20 	strvc	r5, [r5, #-2848]!	; 0xfffff4e0
 80172f8:	43202c5d 			; <UNDEFINED> instruction: 0x43202c5d
 80172fc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8017300:	0a75253d 	beq	9d607fc <_sidata+0x1d484c4>
 8017304:	255b2000 	ldrbcs	r2, [fp, #-0]
 8017308:	2c58322e 	lfmcs	f3, 2, [r8], {46}	; 0x2e
 801730c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017310:	4d202c5d 	stcmi	12, cr2, [r0, #-372]!	; 0xfffffe8c
 8017314:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8017318:	253d676e 	ldrcs	r6, [sp, #-1902]!	; 0xfffff892
 801731c:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
 8017320:	000a5d75 	andeq	r5, sl, r5, ror sp
 8017324:	6f6c4720 	svcvs	0x006c4720
 8017328:	426c6162 	rsbmi	r6, ip, #-2147483624	; 0x80000018
 801732c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017330:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8017334:	75253d73 	strvc	r3, [r5, #-3443]!	; 0xfffff28d
 8017338:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 801733c:	6b636f6c 	blvs	98f30f4 <_sidata+0x18dadbc>
 8017340:	2075253d 	rsbscs	r2, r5, sp, lsr r5
 8017344:	000a7a48 	andeq	r7, sl, r8, asr #20
 8017348:	4f705f6d 	svcmi	0x00705f6d
 801734c:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8017350:	3d212074 	stccc	0, cr2, [r1, #-464]!	; 0xfffffe30
 8017354:	6c756e20 	ldclvs	14, cr6, [r5], #-128	; 0xffffff80
 8017358:	7274706c 	rsbsvc	r7, r4, #108	; 0x6c
 801735c:	78695000 	stmdavc	r9!, {ip, lr}^
 8017360:	61506c65 	cmpvs	r0, r5, ror #24
 8017364:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
 8017368:	7300736e 	movwvc	r7, #878	; 0x36e
 801736c:	702f6372 	eorvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
 8017370:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8017374:	74746170 	ldrbtvc	r6, [r4], #-368	; 0xfffffe90
 8017378:	736e7265 	cmnvc	lr, #1342177286	; 0x50000006
 801737c:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8017380:	6b6e5500 	blvs	9bac788 <_sidata+0x1b94450>
 8017384:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
 8017388:	74537000 	ldrbvc	r7, [r3], #-0
 801738c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 8017390:	203d2120 	eorscs	r2, sp, r0, lsr #2
 8017394:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 8017398:	00727470 	rsbseq	r7, r2, r0, ror r4
 801739c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
 80173a0:	00657079 	rsbeq	r7, r5, r9, ror r0
 80173a4:	2f637273 	svccs	0x00637273
 80173a8:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 80173ac:	7079746c 	rsbsvc	r7, r9, ip, ror #8
 80173b0:	70632e65 	rsbvc	r2, r3, r5, ror #28
 80173b4:	65470070 	strbvs	r0, [r7, #-112]	; 0xffffff90
 80173b8:	70614d74 	rsbvc	r4, r1, r4, ror sp
 80173bc:	646e5500 	strbtvs	r5, [lr], #-1280	; 0xfffffb00
 80173c0:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
 80173c4:	 	andpl	r6, r0, #1694498816	; 0x65000000

080173c7 <PixelType::MAPS>:
 80173c7:	00424752 	subeq	r4, r2, r2, asr r7
 80173cb:	00474252 	subeq	r4, r7, r2, asr r2
 80173cf:	00425247 	subeq	r5, r2, r7, asr #4
 80173d3:	00524247 	subseq	r4, r2, r7, asr #4
 80173d7:	00475242 	subeq	r5, r7, r2, asr #4
 80173db:	00524742 	subseq	r4, r2, r2, asr #14

080173df <PixelType::TYPES>:
 80173df:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80173e3:	00003130 	andeq	r3, r0, r0, lsr r1
 80173e7:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80173eb:	00003131 	andeq	r3, r0, r1, lsr r1
 80173ef:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80173f3:	00003231 	andeq	r3, r0, r1, lsr r2
 80173f7:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80173fb:	00423231 	subeq	r3, r2, r1, lsr r2
 80173ff:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017403:	00003331 	andeq	r3, r0, r1, lsr r3
 8017407:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801740b:	00003531 	andeq	r3, r0, r1, lsr r5
 801740f:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8017413:	00003231 	andeq	r3, r0, r1, lsr r2
 8017417:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801741b:	00573231 	subseq	r3, r7, r1, lsr r2
 801741f:	31534355 	cmpcc	r3, r5, asr r3
 8017423:	00333039 	eorseq	r3, r3, r9, lsr r0
 8017427:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801742b:	00333039 	eorseq	r3, r3, r9, lsr r0
 801742f:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8017433:	00003231 	andeq	r3, r0, r1, lsr r2
 8017437:	31415041 	cmpcc	r1, r1, asr #32
 801743b:	00003230 	andeq	r3, r0, r0, lsr r2
 801743f:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8017443:	00003232 	andeq	r3, r0, r2, lsr r2
 8017447:	31383950 	teqcc	r8, r0, asr r9
 801744b:	00000033 	andeq	r0, r0, r3, lsr r0
 801744f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017453:	754d7878 	strbvc	r7, [sp, #-2168]	; 0xfffff788
 8017457:	0069746c 	rsbeq	r7, r9, ip, ror #8
 801745b:	2f637273 	svccs	0x00637273
 801745f:	6f697067 	svcvs	0x00697067
 8017463:	3273772f 	rsbscc	r7, r3, #12320768	; 0xbc0000
 8017467:	6d787838 	ldclvs	8, cr7, [r8, #-224]!	; 0xffffff20
 801746b:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 801746f:	7070632e 	rsbsvc	r6, r0, lr, lsr #6
 8017473:	705f7300 	subsvc	r7, pc, r0, lsl #6
 8017477:	73696854 	cmnvc	r9, #84, 16	; 0x540000
 801747b:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 801747f:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 8017483:	00727470 	rsbseq	r7, r2, r0, ror r4
 8017487:	29287325 	stmdbcs	r8!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801748b:	2c732520 	cfldr64cs	mvdx2, [r3], #-128	; 0xffffff80
 801748f:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
 8017493:	69252065 	stmdbvs	r5!, {r0, r2, r5, r6, sp}
 8017497:	5f6d203a 	svcpl	0x006d203a
 801749b:	6675426e 	ldrbtvs	r4, [r5], -lr, ror #4
 801749f:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
 80174a3:	2075253d 	rsbscs	r2, r5, sp, lsr r5
 80174a7:	5d75255b 	cfldr64pl	mvdx2, [r5, #-364]!	; 0xfffffe94
 80174ab:	7325000a 			; <UNDEFINED> instruction: 0x7325000a
 80174af:	25202928 	strcs	r2, [r0, #-2344]!	; 0xfffff6d8
 80174b3:	6c202c73 	stcvs	12, cr2, [r0], #-460	; 0xfffffe34
 80174b7:	20656e69 	rsbcs	r6, r5, r9, ror #28
 80174bb:	203a6925 	eorscs	r6, sl, r5, lsr #18
 80174bf:	4830546e 	ldmdami	r0!, {r1, r2, r3, r5, r6, sl, ip, lr}
 80174c3:	2c75253d 	cfldr64cs	mvdx2, [r5], #-244	; 0xffffff0c
 80174c7:	31546e20 	cmpcc	r4, r0, lsr #28
 80174cb:	75253d48 	strvc	r3, [r5, #-3400]!	; 0xfffff2b8
 80174cf:	7325000a 			; <UNDEFINED> instruction: 0x7325000a
 80174d3:	25202928 	strcs	r2, [r0, #-2344]!	; 0xfffff6d8
 80174d7:	6c202c73 	stcvs	12, cr2, [r0], #-460	; 0xfffffe34
 80174db:	20656e69 	rsbcs	r6, r5, r9, ror #28
 80174df:	203a6925 	eorscs	r6, sl, r5, lsr #18
 80174e3:	5453414d 	ldrbpl	r4, [r3], #-333	; 0xfffffeb3
 80174e7:	545f5245 	ldrbpl	r5, [pc], #-581	; 80174ef <PixelType::TYPES+0x110>
 80174eb:	52454d49 	subpl	r4, r5, #4672	; 0x1240
 80174ef:	5245505f 	subpl	r5, r5, #95	; 0x5f
 80174f3:	3d444f49 	stclcc	15, cr4, [r4, #-292]	; 0xfffffedc
 80174f7:	000a7525 	andeq	r7, sl, r5, lsr #10
 80174fb:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80174ff:	6170206c 	cmnvs	r0, ip, rrx
 8017503:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8017507:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
 801750b:	5420000a 	strtpl	r0, [r0], #-10
 801750f:	20657079 	rsbcs	r7, r5, r9, ror r0
 8017513:	3a202020 	bcc	881f59b <_sidata+0x807263>
 8017517:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801751b:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 801751f:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8017523:	255b2073 	ldrbcs	r2, [fp, #-115]	; 0xffffff8d
 8017527:	000a5d64 	andeq	r5, sl, r4, ror #26
 801752b:	756f4320 	strbvc	r4, [pc, #-800]!	; 8017213 <RDMConst::MANUFACTURER_NAME+0x8b>
 801752f:	2020746e 	eorcs	r7, r0, lr, ror #8
 8017533:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017537:	42000a64 	andmi	r0, r0, #100, 20	; 0x64000
 801753b:	6b63616c 	blvs	98efaf3 <_sidata+0x18d77bb>
 801753f:	0074756f 	rsbseq	r7, r4, pc, ror #10
 8017543:	6f506e00 	svcvs	0x00506e00
 8017547:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
 801754b:	20786564 	rsbscs	r6, r8, r4, ror #10
 801754f:	0038203c 	eorseq	r2, r8, ip, lsr r0
 8017553:	74655300 	strbtvc	r5, [r5], #-768	; 0xfffffd00
 8017557:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801755b:	0000006c 	andeq	r0, r0, ip, rrx
 801755f:	69506e00 	ldmdbvs	r0, {r9, sl, fp, sp, lr}^
 8017563:	496c6578 	stmdbmi	ip!, {r3, r4, r5, r6, r8, sl, sp, lr}^
 8017567:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 801756b:	6d203c20 	stcvs	12, cr3, [r0, #-128]!	; 0xffffff80
 801756f:	75426e5f 	strbvc	r6, [r2, #-3679]	; 0xfffff1a1
 8017573:	7a695366 	bvc	9a6c313 <_sidata+0x1a53fdb>
 8017577:	202f2065 	eorcs	r2, pc, r5, rrx
 801757b:	00000038 	andeq	r0, r0, r8, lsr r0
 801757f:	00003000 	andeq	r3, r0, r0
	...

08017584 <s_GPIO_PINs>:
 8017584:	00000003 	andeq	r0, r0, r3

08017588 <s_aStorSize>:
 8017588:	00000060 	andeq	r0, r0, r0, rrx
 801758c:	00000090 	muleq	r0, r0, r0
 8017590:	00000020 	andeq	r0, r0, r0, lsr #32
 8017594:	00000040 	andeq	r0, r0, r0, asr #32
 8017598:	00000060 	andeq	r0, r0, r0, rrx
 801759c:	00000040 	andeq	r0, r0, r0, asr #32
 80175a0:	00000020 	andeq	r0, r0, r0, lsr #32
 80175a4:	00000020 	andeq	r0, r0, r0, lsr #32
 80175a8:	000001e0 	andeq	r0, r0, r0, ror #3
 80175ac:	00000040 	andeq	r0, r0, r0, asr #32
 80175b0:	00000020 	andeq	r0, r0, r0, lsr #32
 80175b4:	00000060 	andeq	r0, r0, r0, rrx
 80175b8:	00000030 	andeq	r0, r0, r0, lsr r0
 80175bc:	00000020 	andeq	r0, r0, r0, lsr #32
 80175c0:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 80175c4:	00000030 	andeq	r0, r0, r0, lsr r0
 80175c8:	00000040 	andeq	r0, r0, r0, asr #32
 80175cc:	00000020 	andeq	r0, r0, r0, lsr #32
 80175d0:	00000060 	andeq	r0, r0, r0, rrx
 80175d4:	00000020 	andeq	r0, r0, r0, lsr #32
 80175d8:	00000400 	andeq	r0, r0, r0, lsl #8
 80175dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80175e0:	00000020 	andeq	r0, r0, r0, lsr #32
 80175e4:	00000040 	andeq	r0, r0, r0, asr #32
 80175e8:	00000060 	andeq	r0, r0, r0, rrx
 80175ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80175f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80175f4:	00000020 	andeq	r0, r0, r0, lsr #32

080175f8 <vtable for StoreDisplayUdf>:
	...
 8017600:	0800e38d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sp, lr, pc}
 8017604:	0800e3d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sp, lr, pc}
 8017608:	0800e3b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sp, lr, pc}
 801760c:	0800e391 	stmdaeq	r0, {r0, r4, r7, r8, r9, sp, lr, pc}

08017610 <vtable for StoreE131>:
	...
 8017618:	0800e3f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, sp, lr, pc}
 801761c:	0800e43d 	stmdaeq	r0, {r0, r2, r3, r4, r5, sl, sp, lr, pc}
 8017620:	0800e419 	stmdaeq	r0, {r0, r3, r4, sl, sp, lr, pc}
 8017624:	0800e3f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sp, lr, pc}

08017628 <vtable for StoreNetwork>:
	...
 8017630:	0800e45d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, sp, lr, pc}
 8017634:	0800e541 	stmdaeq	r0, {r0, r6, r8, sl, sp, lr, pc}
 8017638:	0800e465 	stmdaeq	r0, {r0, r2, r5, r6, sl, sp, lr, pc}
 801763c:	0800e555 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, sp, lr, pc}
 8017640:	0800e4e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, sp, lr, pc}
 8017644:	0800e4b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, sp, lr, pc}
 8017648:	0800e489 	stmdaeq	r0, {r0, r3, r7, sl, sp, lr, pc}
 801764c:	0800e511 	stmdaeq	r0, {r0, r4, r8, sl, sp, lr, pc}
 8017650:	080080ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, pc}
 8017654:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017658:	00000000 	andeq	r0, r0, r0
 801765c:	0800e45f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, sl, sp, lr, pc}
 8017660:	0800e54d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, sp, lr, pc}
 8017664:	0800e509 	stmdaeq	r0, {r0, r3, r8, sl, sp, lr, pc}
 8017668:	0800e4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, sp, lr, pc}
 801766c:	0800e4b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, sp, lr, pc}
 8017670:	0800e539 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, sp, lr, pc}
 8017674:	080080d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, pc}

08017678 <vtable for StoreRDMDevice>:
	...
 8017680:	0800e589 	stmdaeq	r0, {r0, r3, r7, r8, sl, sp, lr, pc}
 8017684:	0800e5f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, sp, lr, pc}
 8017688:	0800e591 	stmdaeq	r0, {r0, r4, r7, r8, sl, sp, lr, pc}
 801768c:	0800e60d 	stmdaeq	r0, {r0, r2, r3, r9, sl, sp, lr, pc}
 8017690:	0800e5b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, sp, lr, pc}
 8017694:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017698:	00000000 	andeq	r0, r0, r0
 801769c:	0800e58b 	stmdaeq	r0, {r0, r1, r3, r7, r8, sl, sp, lr, pc}
 80176a0:	0800e605 	stmdaeq	r0, {r0, r2, r9, sl, sp, lr, pc}
 80176a4:	0800e5f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, sp, lr, pc}

080176a8 <vtable for StoreRemoteConfig>:
	...
 80176b0:	0800e645 	stmdaeq	r0, {r0, r2, r6, r9, sl, sp, lr, pc}
 80176b4:	0800e68d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, sp, lr, pc}
 80176b8:	0800e669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, sp, lr, pc}
 80176bc:	0800e649 	stmdaeq	r0, {r0, r3, r6, r9, sl, sp, lr, pc}

080176c0 <vtable for StoreWS28xxDmx>:
	...
 80176c8:	0800e6ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, sp, lr, pc}
 80176cc:	0800e81d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp, lr, pc}
 80176d0:	0800e6b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, sp, lr, pc}
 80176d4:	0800e831 	stmdaeq	r0, {r0, r4, r5, fp, sp, lr, pc}
 80176d8:	0800e7e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 80176dc:	0800e7b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, sp, lr, pc}
 80176e0:	0800e77d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 80176e4:	0800e745 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, sp, lr, pc}
 80176e8:	0800e70d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, sp, lr, pc}
 80176ec:	0800e6d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, sp, lr, pc}
 80176f0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80176f4:	00000000 	andeq	r0, r0, r0
 80176f8:	0800e6af 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl, sp, lr, pc}
 80176fc:	0800e829 	stmdaeq	r0, {r0, r3, r5, fp, sp, lr, pc}
 8017700:	0800e815 	stmdaeq	r0, {r0, r2, r4, fp, sp, lr, pc}
 8017704:	0800e7e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8017708:	0800e7ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, sl, sp, lr, pc}
 801770c:	0800e775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr, pc}
 8017710:	0800e73d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, sp, lr, pc}
 8017714:	0800e705 	stmdaeq	r0, {r0, r2, r8, r9, sl, sp, lr, pc}
 8017718:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801771c:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8017720:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8017724:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017728:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801772c:	65732068 	ldrbvs	r2, [r3, #-104]!	; 0xffffff98
 8017730:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017734:	7a697320 	bvc	9a743bc <_sidata+0x1a5c084>
 8017738:	64252065 	strtvs	r2, [r5], #-101	; 0xffffff9b
 801773c:	746f7420 	strbtvc	r7, [pc], #-1056	; 8017744 <vtable for StoreWS28xxDmx+0x84>
 8017740:	25206c61 	strcs	r6, [r0, #-3169]!	; 0xfffff39f
 8017744:	79622064 	stmdbvc	r2!, {r2, r5, r6, sp}^
 8017748:	0a736574 	beq	9cf0d20 <_sidata+0x1cd89e8>
 801774c:	70637400 	rsbvc	r7, r3, r0, lsl #8
 8017750:	6765625f 			; <UNDEFINED> instruction: 0x6765625f
 8017754:	203a6e69 	eorscs	r6, sl, r9, ror #28
 8017758:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
 801775c:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8017760:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8017764:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
 8017768:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 801776c:	6e696200 	cdpvs	2, 6, cr6, cr9, cr0, {0}
 8017770:	6e750064 	cdpvs	0, 7, cr0, cr5, cr4, {3}
 8017774:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
 8017778:	5241000a 	subpl	r0, r1, #10
 801777c:	6f6c2050 	svcvs	0x006c2050
 8017780:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
 8017784:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8017788:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801778c:	64203e2d 	strtvs	r3, [r0], #-3629	; 0xfffff1d3
 8017790:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 8017794:	6720746c 	strvs	r7, [r0, -ip, ror #8]!
 8017798:	77657461 	strbvc	r7, [r5, -r1, ror #8]!
 801779c:	000a7961 	andeq	r7, sl, r1, ror #18
 80177a0:	20505241 	subscs	r5, r0, r1, asr #4
 80177a4:	6b6f6f6c 	blvs	9bf355c <_sidata+0x1bdb224>
 80177a8:	66207075 			; <UNDEFINED> instruction: 0x66207075
 80177ac:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 80177b0:	 	vmlsmi.f32	s0, s0, s9

080177b3 <NetworkConst::MSG_NETWORK_INIT>:
 80177b3:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80177b7:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80177bb:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80177bf:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80177c3:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80177c7:	3135322e 	teqcc	r5, lr, lsr #4
 80177cb:	63745f00 	cmnvs	r4, #0, 30
 80177cf:	6f6c2e70 	svcvs	0x006c2e70
 80177d3:	006c6163 	rsbeq	r6, ip, r3, ror #2
 80177d7:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 80177db:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80177df:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 80177e7 <NetworkConst::MSG_NETWORK_INIT+0x34>
 80177e3:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 80177e7:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801698b <index_js+0x3bb>
 80177eb:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 80177ef:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 80177f3:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 80177f7:	20000a53 	andcs	r0, r0, r3, asr sl
 80177fb:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80177ff:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8017803:	0a676e69 	beq	99f31af <_sidata+0x19dae77>
 8017807:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801780b:	3a20656d 	bcc	8830dc7 <_sidata+0x818a8f>
 801780f:	0a732520 	beq	9ce0c97 <_sidata+0x1cc895f>
 8017813:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8017817:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801781b:	000a7325 	andeq	r7, sl, r5, lsr #6
 801781f:	30687465 	rsbcc	r7, r8, r5, ror #8
 8017823:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017827:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801782b:	5f656369 	svcpl	0x00656369
 801782f:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8017833:	6b726f77 	blvs	9cb3617 <_sidata+0x1c9b2df>
 8017837:	4820000a 	stmdami	r0!, {r1, r3}
 801783b:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801783f:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8017843:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017847:	20000a73 	andcs	r0, r0, r3, ror sl
 801784b:	614e6649 	cmpvs	lr, r9, asr #12
 801784f:	2020656d 	eorcs	r6, r0, sp, ror #10
 8017853:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017857:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801785b:	000a7325 	andeq	r7, sl, r5, lsr #6
 801785f:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8017863:	20202074 	eorcs	r2, r0, r4, ror r0
 8017867:	3a202020 	bcc	881f8ef <_sidata+0x8075b7>
 801786b:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801786f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017873:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017877:	0a64252f 	beq	9920d3b <_sidata+0x1908a03>
 801787b:	654e2000 	strbvs	r2, [lr, #-0]
 801787f:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8017883:	2020206b 	eorcs	r2, r0, fp, rrx
 8017887:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801788b:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801788f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017893:	20000a64 	andcs	r0, r0, r4, ror #20
 8017897:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 801789b:	20796177 	rsbscs	r6, r9, r7, ror r1
 801789f:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80178a3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80178a7:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80178ab:	0a64252e 	beq	9920d6b <_sidata+0x1908a33>
 80178af:	72422000 	subvc	r2, r2, #0
 80178b3:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80178b7:	20747361 	rsbscs	r7, r4, r1, ror #6
 80178bb:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80178bf:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80178c3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80178c7:	20000a64 	andcs	r0, r0, r4, ror #20
 80178cb:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80178cf:	20202020 	eorcs	r2, r0, r0, lsr #32
 80178d3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80178d7:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80178db:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80178df:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80178e3:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80178e7:	3a78322e 	bcc	9e241a7 <_sidata+0x1e0be6f>
 80178eb:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80178ef:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80178f3:	20000a78 	andcs	r0, r0, r8, ror sl
 80178f7:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 80178fb:	20202020 	eorcs	r2, r0, r0, lsr #32
 80178ff:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017903:	000a6325 	andeq	r6, sl, r5, lsr #6
 8017907:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801790b:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801790f:	544e0050 	strbpl	r0, [lr], #-80	; 0xffffffb0
 8017913:	65532050 	ldrbvs	r2, [r3, #-80]	; 0xffffffb0
 8017917:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
	...

0801791c <NetworkParamsConst::IP_ADDRESS>:
 801791c:	615f7069 	cmpvs	pc, r9, rrx
 8017920:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8017924:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08017927 <NetworkParamsConst::NTP_SERVER>:
 8017927:	5f70746e 	svcpl	0x0070746e
 801792b:	76726573 			; <UNDEFINED> instruction: 0x76726573
 801792f:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

08017932 <NetworkParamsConst::NTP_UTC_OFFSET>:
 8017932:	5f70746e 	svcpl	0x0070746e
 8017936:	5f637475 	svcpl	0x00637475
 801793a:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 801793e:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

08017941 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8017941:	61666564 	cmnvs	r6, r4, ror #10
 8017945:	5f746c75 	svcpl	0x00746c75
 8017949:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 801794d:	00796177 	rsbseq	r6, r9, r7, ror r1

08017951 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8017951:	70636864 	rsbvc	r6, r3, r4, ror #16
 8017955:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8017959:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8017961 <NetworkParamsConst::HOSTNAME>
 801795d:	00656d69 	rsbeq	r6, r5, r9, ror #26

08017961 <NetworkParamsConst::HOSTNAME>:
 8017961:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8017965:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801796a <NetworkParamsConst::NET_MASK>:
 801796a:	5f74656e 	svcpl	0x0074656e
 801796e:	6b73616d 	blvs	9ceff2a <_sidata+0x1cd7bf2>
	...

08017973 <NetworkParamsConst::USE_DHCP>:
 8017973:	5f657375 	svcpl	0x00657375
 8017977:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

0801797c <NetworkParamsConst::FILE_NAME>:
 801797c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8017980:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8017984:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017988:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 801798c:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8017990:	61747320 	cmnvs	r4, r0, lsr #6
 8017994:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8017998:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801799c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80179a0:	252f6425 	strcs	r6, [pc, #-1061]!	; 8017583 <PixelType::TYPES+0x1a4>
 80179a4:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80179a8:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80179ac:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80179b0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80179b4:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80179b8:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80179bc:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80179c0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80179c4:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80179c8:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80179cc:	20657261 	rsbcs	r7, r5, r1, ror #4
 80179d0:	2a2e2556 	bcs	8ba0f30 <_sidata+0xb88bf8>
 80179d4:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 80179d8:	72205043 	eorvc	r5, r0, #67	; 0x43
 80179dc:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80179e0:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80179e4:	50434844 	subpl	r4, r3, r4, asr #16
 80179e8:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80179ec:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80179f0:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80179f4:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80179f8:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80179fc:	6f647475 	svcvs	0x00647475
 8017a00:	00006e77 	andeq	r6, r0, r7, ror lr

08017a04 <pArray>:
 8017a04:	08017a98 	stmdaeq	r1, {r3, r4, r7, r9, fp, ip, sp, lr}
 8017a08:	08017a54 	stmdaeq	r1, {r2, r4, r6, r9, fp, ip, sp, lr}
 8017a0c:	0801791c 	stmdaeq	r1, {r2, r3, r4, r8, fp, ip, sp, lr}
 8017a10:	08017a9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, fp, ip, sp, lr}
 8017a14:	08017cc2 	stmdaeq	r1, {r1, r6, r7, sl, fp, ip, sp, lr}
 8017a18:	08017a5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, fp, ip, sp, lr}
 8017a1c:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8017a20:	08017961 	stmdaeq	r1, {r0, r5, r6, r8, fp, ip, sp, lr}
 8017a24:	08017b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp, lr}
 8017a28:	08017ba8 	stmdaeq	r1, {r3, r5, r7, r8, r9, fp, ip, sp, lr}
 8017a2c:	08017bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, ip, sp, lr}
 8017a30:	08017bc8 	stmdaeq	r1, {r3, r6, r7, r8, r9, fp, ip, sp, lr}
 8017a34:	0801796a 	stmdaeq	r1, {r1, r3, r5, r6, r8, fp, ip, sp, lr}
 8017a38:	08017cb0 	stmdaeq	r1, {r4, r5, r7, sl, fp, ip, sp, lr}
 8017a3c:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8017a40:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8017a44:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8017a48:	080160c9 	stmdaeq	r1, {r0, r3, r6, r7, sp, lr}
 8017a4c:	08017941 	stmdaeq	r1, {r0, r6, r8, fp, ip, sp, lr}
 8017a50:	08017a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, ip, sp, lr}

08017a54 <DisplayUdfParamsConst::BOARD_NAME>:
 8017a54:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8017a58:	616e5f64 	cmnvs	lr, r4, ror #30
 8017a5c:	 	tstvs	r0, sp, ror #10

08017a5f <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8017a5f:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8017a63:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8017a67:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08017a6c <DisplayUdfParamsConst::DMX_DIRECTION>:
 8017a6c:	5f786d64 	svcpl	0x00786d64
 8017a70:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017a74:	6f697463 	svcvs	0x00697463
 8017a78:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08017a7a <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8017a7a:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8017a7e:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017a82:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801751d <PixelType::TYPES+0x13e>
 8017a86:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08017a88 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8017a88:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8017a8c:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8017a90:	61636974 	smcvs	13972	; 0x3694
 8017a94:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08017a98 <DisplayUdfParamsConst::TITLE>:
 8017a98:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8017a9c:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08017a9e <DisplayUdfParamsConst::VERSION>:
 8017a9e:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017aa2:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08017aa6 <DisplayUdfParamsConst::FILE_NAME>:
 8017aa6:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017aaa:	2e79616c 	rpwcsez	f6, f1, #4.0
 8017aae:	00747874 	rsbseq	r7, r4, r4, ror r8

08017ab2 <DisplayUdfParamsConst::INTENSITY>:
 8017ab2:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8017ab6:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8017aba:	50410079 	subpl	r0, r1, r9, ror r0
 8017abe:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017ac2:	726f5000 	rsbvc	r5, pc, #0
 8017ac6:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8017aca:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017ace:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8017ad2:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8017ad6:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8017ada:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8017ade:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

08017ae3 <DevicesParamsConst::ACTIVE_OUT>:
 8017ae3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8017ae7:	6f5f6576 	svcvs	0x005f6576
 8017aeb:	 	movwvs	r7, #1141	; 0x475

08017aee <DevicesParamsConst::SPI_SPEED_HZ>:
 8017aee:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8017af2:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8017af6:	5f646565 	svcpl	0x00646565
 8017afa:	 			; <UNDEFINED> instruction: 0x6c007a68

08017afd <DevicesParamsConst::GROUPING_COUNT>:
 8017afd:	5f64656c 	svcpl	0x0064656c
 8017b01:	756f7267 	strbvc	r7, [pc, #-615]!	; 80178a2 <NetworkConst::MSG_NETWORK_INIT+0xef>
 8017b05:	6f635f70 	svcvs	0x00635f70
 8017b09:	00746e75 	rsbseq	r6, r4, r5, ror lr

08017b0d <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8017b0d:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8017b11:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8017b15:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017b19:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8017b1d:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08017b1f <DevicesParamsConst::MAP>:
 8017b1f:	5f64656c 	svcpl	0x0064656c
 8017b23:	5f626772 	svcpl	0x00626772
 8017b27:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8017b2b:	00676e69 	rsbeq	r6, r7, r9, ror #28

08017b2f <DevicesParamsConst::TYPE>:
 8017b2f:	5f64656c 	svcpl	0x0064656c
 8017b33:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08017b38 <DevicesParamsConst::COUNT>:
 8017b38:	5f64656c 	svcpl	0x0064656c
 8017b3c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017b40:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08017b42 <DevicesParamsConst::LED_T0H>:
 8017b42:	5f64656c 	svcpl	0x0064656c
 8017b46:	00683074 	rsbeq	r3, r8, r4, ror r0

08017b4a <DevicesParamsConst::LED_T1H>:
 8017b4a:	5f64656c 	svcpl	0x0064656c
 8017b4e:	00683174 	rsbeq	r3, r8, r4, ror r1

08017b52 <DevicesParamsConst::FILE_NAME>:
 8017b52:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8017b56:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8017b5a:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017b5e:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8017b62:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8017b66:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017b6a:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017b6e:	002c2264 	eoreq	r2, ip, r4, ror #4
 8017b72:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8017b76:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017b7a:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017b7e:	0a64252e 	beq	992103e <_sidata+0x1908d06>
 8017b82:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 8017b86:	0a232073 	beq	88dfd5a <_sidata+0x8c7a22>
	...

08017b8b <LightSetParamsConst::TEST_PATTERN>:
 8017b8b:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8017b8f:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8017b93:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08017b98 <LightSetParamsConst::UNIVERSE_PORT>:
 8017b98:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017b9c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017ba0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017ba4:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8017ba8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017bac:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017bb0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017bb4:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8017bb8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017bbc:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017bc0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017bc4:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8017bc8:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017bcc:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017bd0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017bd4:	00645f74 	rsbeq	r5, r4, r4, ror pc

08017bd8 <LightSetParamsConst::START_UNI_PORT>:
 8017bd8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017bdc:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017be0:	6f705f69 	svcvs	0x00705f69
 8017be4:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8017be8:	74730000 	ldrbtvc	r0, [r3], #-0
 8017bec:	5f747261 	svcpl	0x00747261
 8017bf0:	5f696e75 	svcpl	0x00696e75
 8017bf4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017bf8:	0000325f 	andeq	r3, r0, pc, asr r2
 8017bfc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017c00:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017c04:	6f705f69 	svcvs	0x00705f69
 8017c08:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8017c0c:	74730000 	ldrbtvc	r0, [r3], #-0
 8017c10:	5f747261 	svcpl	0x00747261
 8017c14:	5f696e75 	svcpl	0x00696e75
 8017c18:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017c1c:	0000345f 	andeq	r3, r0, pc, asr r4
 8017c20:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017c24:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017c28:	6f705f69 	svcvs	0x00705f69
 8017c2c:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 80177c2 <NetworkConst::MSG_NETWORK_INIT+0xf>
 8017c30:	74730000 	ldrbtvc	r0, [r3], #-0
 8017c34:	5f747261 	svcpl	0x00747261
 8017c38:	5f696e75 	svcpl	0x00696e75
 8017c3c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017c40:	0000365f 	andeq	r3, r0, pc, asr r6
 8017c44:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017c48:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017c4c:	6f705f69 	svcvs	0x00705f69
 8017c50:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8017c54:	74730000 	ldrbtvc	r0, [r3], #-0
 8017c58:	5f747261 	svcpl	0x00747261
 8017c5c:	5f696e75 	svcpl	0x00696e75
 8017c60:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017c64:	0000385f 	andeq	r3, r0, pc, asr r8

08017c68 <LightSetParamsConst::MERGE_MODE_PORT>:
 8017c68:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017c6c:	6f6d5f65 	svcvs	0x006d5f65
 8017c70:	705f6564 	subsvc	r6, pc, r4, ror #10
 8017c74:	5f74726f 	svcpl	0x0074726f
 8017c78:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8017c7c:	5f656772 	svcpl	0x00656772
 8017c80:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8017c84:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017c88:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8017c8c:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017c90:	6f6d5f65 	svcvs	0x006d5f65
 8017c94:	705f6564 	subsvc	r6, pc, r4, ror #10
 8017c98:	5f74726f 	svcpl	0x0074726f
 8017c9c:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8017ca0:	5f656772 	svcpl	0x00656772
 8017ca4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8017ca8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017cac:	00645f74 	rsbeq	r5, r4, r4, ror pc

08017cb0 <LightSetParamsConst::DMX_START_ADDRESS>:
 8017cb0:	5f786d64 	svcpl	0x00786d64
 8017cb4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017cb8:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8017cbc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8017cc0:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08017cc2 <LightSetParamsConst::UNIVERSE>:
 8017cc2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017cc6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08017ccb <LightSetParamsConst::DIRECTION>:
 8017ccb:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017ccf:	6f697463 	svcvs	0x00697463
 8017cd3:	6f705f6e 	svcvs	0x00705f6e
 8017cd7:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8017cdb:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017cdf:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017ce3:	5f6e6f69 	svcpl	0x006e6f69
 8017ce7:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017ceb:	0000625f 	andeq	r6, r0, pc, asr r2
 8017cef:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017cf3:	6f697463 	svcvs	0x00697463
 8017cf7:	6f705f6e 	svcvs	0x00705f6e
 8017cfb:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8017cff:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017d03:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017d07:	5f6e6f69 	svcpl	0x006e6f69
 8017d0b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017d0f:	0000645f 	andeq	r6, r0, pc, asr r4
 8017d13:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8017d17:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017d1b:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8017d1f:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8017d23:	31485300 	mrscc	r5, (UNDEF: 120)
 8017d27:	00363031 	eorseq	r3, r6, r1, lsr r0
 8017d2b:	31445353 	cmpcc	r4, r3, asr r3
 8017d2f:	00363033 	eorseq	r3, r6, r3, lsr r0
 8017d33:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8017d37:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8017d3b:	000a2964 	andeq	r2, sl, r4, ror #18
 8017d3f:	aaeeaa40 	bge	7bc2647 <_Min_Heap_Size+0x7bc0647>
 8017d43:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08017d48 <_OledFont8x6>:
 8017d48:	00000040 	andeq	r0, r0, r0, asr #32
 8017d4c:	40000000 	andmi	r0, r0, r0
 8017d50:	005f0000 	subseq	r0, pc, r0
 8017d54:	00400000 	subeq	r0, r0, r0
 8017d58:	00070007 	andeq	r0, r7, r7
 8017d5c:	7f144000 	svcvc	0x00144000
 8017d60:	00147f14 	andseq	r7, r4, r4, lsl pc
 8017d64:	7f2a2440 	svcvc	0x002a2440
 8017d68:	4000122a 	andmi	r1, r0, sl, lsr #4
 8017d6c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8017d70:	36400062 	strbcc	r0, [r0], -r2, rrx
 8017d74:	50205649 	eorpl	r5, r0, r9, asr #12
 8017d78:	08004000 	stmdaeq	r0, {lr}
 8017d7c:	00000307 	andeq	r0, r0, r7, lsl #6
 8017d80:	221c0040 	andscs	r0, ip, #64	; 0x40
 8017d84:	40000041 	andmi	r0, r0, r1, asr #32
 8017d88:	1c224100 	stfnes	f4, [r2], #-0
 8017d8c:	2a400000 	bcs	9017d94 <_sidata+0xfffa5c>
 8017d90:	2a1c7f1c 	bcs	8737a08 <_sidata+0x71f6d0>
 8017d94:	08084000 	stmdaeq	r8, {lr}
 8017d98:	0008083e 	andeq	r0, r8, lr, lsr r8
 8017d9c:	70800040 	addvc	r0, r0, r0, asr #32
 8017da0:	40000030 	andmi	r0, r0, r0, lsr r0
 8017da4:	08080808 	stmdaeq	r8, {r3, fp}
 8017da8:	00400008 	subeq	r0, r0, r8
 8017dac:	00606000 	rsbeq	r6, r0, r0
 8017db0:	10204000 	eorne	r4, r0, r0
 8017db4:	00020408 	andeq	r0, r2, r8, lsl #8
 8017db8:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8017dbc:	40003e45 	andmi	r3, r0, r5, asr #28
 8017dc0:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8017dc4:	72400000 	subvc	r0, r0, #0
 8017dc8:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8017dcc:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8017dd0:	00334d49 	eorseq	r4, r3, r9, asr #26
 8017dd4:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8017dd8:	4000107f 	andmi	r1, r0, pc, ror r0
 8017ddc:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8017de0:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8017de4:	3149494a 	cmpcc	r9, sl, asr #18
 8017de8:	21414000 	mrscs	r4, (UNDEF: 65)
 8017dec:	00070911 	andeq	r0, r7, r1, lsl r9
 8017df0:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8017df4:	40003649 	andmi	r3, r0, r9, asr #12
 8017df8:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8017dfc:	0040001e 	subeq	r0, r0, lr, lsl r0
 8017e00:	00001400 	andeq	r1, r0, r0, lsl #8
 8017e04:	40004000 	andmi	r4, r0, r0
 8017e08:	00000034 	andeq	r0, r0, r4, lsr r0
 8017e0c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8017e10:	40004122 	andmi	r4, r0, r2, lsr #2
 8017e14:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8017e18:	00400014 	subeq	r0, r0, r4, lsl r0
 8017e1c:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8017e20:	01024000 	mrseq	r4, (UNDEF: 2)
 8017e24:	00060959 	andeq	r0, r6, r9, asr r9
 8017e28:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8017e2c:	40004e59 	andmi	r4, r0, r9, asr lr
 8017e30:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8017e34:	7f40007c 	svcvc	0x0040007c
 8017e38:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8017e3c:	413e4000 	teqmi	lr, r0
 8017e40:	00224141 	eoreq	r4, r2, r1, asr #2
 8017e44:	41417f40 	cmpmi	r1, r0, asr #30
 8017e48:	40003e41 	andmi	r3, r0, r1, asr #28
 8017e4c:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8017e50:	7f400041 	svcvc	0x00400041
 8017e54:	01090909 	tsteq	r9, r9, lsl #18
 8017e58:	413e4000 	teqmi	lr, r0
 8017e5c:	00735141 	rsbseq	r5, r3, r1, asr #2
 8017e60:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017e64:	40007f08 	andmi	r7, r0, r8, lsl #30
 8017e68:	417f4100 	cmnmi	pc, r0, lsl #2
 8017e6c:	20400000 	subcs	r0, r0, r0
 8017e70:	013f4140 	teqeq	pc, r0, asr #2
 8017e74:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8017e78:	00412214 	subeq	r2, r1, r4, lsl r2
 8017e7c:	40407f40 	submi	r7, r0, r0, asr #30
 8017e80:	40004040 	andmi	r4, r0, r0, asr #32
 8017e84:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8017e88:	7f40007f 	svcvc	0x0040007f
 8017e8c:	7f100804 	svcvc	0x00100804
 8017e90:	413e4000 	teqmi	lr, r0
 8017e94:	003e4141 	eorseq	r4, lr, r1, asr #2
 8017e98:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017e9c:	40000609 	andmi	r0, r0, r9, lsl #12
 8017ea0:	2151413e 	cmpcs	r1, lr, lsr r1
 8017ea4:	7f40005e 	svcvc	0x0040005e
 8017ea8:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8017eac:	49264000 	stmdbmi	r6!, {lr}
 8017eb0:	00324949 	eorseq	r4, r2, r9, asr #18
 8017eb4:	7f010340 	svcvc	0x00010340
 8017eb8:	40000301 	andmi	r0, r0, r1, lsl #6
 8017ebc:	4040403f 	submi	r4, r0, pc, lsr r0
 8017ec0:	1f40003f 	svcne	0x0040003f
 8017ec4:	1f204020 	svcne	0x00204020
 8017ec8:	403f4000 	eorsmi	r4, pc, r0
 8017ecc:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8017ed0:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017ed4:	40006314 	andmi	r6, r0, r4, lsl r3
 8017ed8:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8017edc:	61400003 	cmpvs	r0, r3
 8017ee0:	434d4959 	movtmi	r4, #55641	; 0xd959
 8017ee4:	7f004000 	svcvc	0x00004000
 8017ee8:	00414141 	subeq	r4, r1, r1, asr #2
 8017eec:	08040240 	stmdaeq	r4, {r6, r9}
 8017ef0:	40002010 	andmi	r2, r0, r0, lsl r0
 8017ef4:	41414100 	mrsmi	r4, (UNDEF: 81)
 8017ef8:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8017efc:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8017f00:	40404000 	submi	r4, r0, r0
 8017f04:	00404040 	subeq	r4, r0, r0, asr #32
 8017f08:	07030040 	streq	r0, [r3, -r0, asr #32]
 8017f0c:	40000008 	andmi	r0, r0, r8
 8017f10:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8017f14:	7f400040 	svcvc	0x00400040
 8017f18:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8017f1c:	44384000 	ldrtmi	r4, [r8], #-0
 8017f20:	00284444 	eoreq	r4, r8, r4, asr #8
 8017f24:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8017f28:	40007f28 	andmi	r7, r0, r8, lsr #30
 8017f2c:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8017f30:	00400018 	subeq	r0, r0, r8, lsl r0
 8017f34:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8017f38:	a4184000 	ldrge	r4, [r8], #-0
 8017f3c:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8017f40:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8017f44:	40007804 	andmi	r7, r0, r4, lsl #16
 8017f48:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8017f4c:	20400000 	subcs	r0, r0, r0
 8017f50:	003d4040 	eorseq	r4, sp, r0, asr #32
 8017f54:	107f4000 	rsbsne	r4, pc, r0
 8017f58:	00004428 	andeq	r4, r0, r8, lsr #8
 8017f5c:	7f410040 	svcvc	0x00410040
 8017f60:	40000040 	andmi	r0, r0, r0, asr #32
 8017f64:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8017f68:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8017f6c:	78040408 	stmdavc	r4, {r3, sl}
 8017f70:	44384000 	ldrtmi	r4, [r8], #-0
 8017f74:	00384444 	eorseq	r4, r8, r4, asr #8
 8017f78:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8017f7c:	40001824 	andmi	r1, r0, r4, lsr #16
 8017f80:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8017f84:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8017f88:	08040408 	stmdaeq	r4, {r3, sl}
 8017f8c:	54484000 	strbpl	r4, [r8], #-0
 8017f90:	00245454 	eoreq	r5, r4, r4, asr r4
 8017f94:	3f040440 	svccc	0x00040440
 8017f98:	40002444 	andmi	r2, r0, r4, asr #8
 8017f9c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8017fa0:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8017fa4:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8017fa8:	403c4000 	eorsmi	r4, ip, r0
 8017fac:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017fb0:	10284440 	eorne	r4, r8, r0, asr #8
 8017fb4:	40004428 	andmi	r4, r0, r8, lsr #8
 8017fb8:	9090904c 	addsls	r9, r0, ip, asr #32
 8017fbc:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8017fc0:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8017fc4:	08004000 	stmdaeq	r0, {lr}
 8017fc8:	00004136 	andeq	r4, r0, r6, lsr r1
 8017fcc:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017fd0:	40000000 	andmi	r0, r0, r0
 8017fd4:	08364100 	ldmdaeq	r6!, {r8, lr}
 8017fd8:	02400000 	subeq	r0, r0, #0
 8017fdc:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8017fe0:	263c4000 	ldrtcs	r4, [ip], -r0
 8017fe4:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017fe8 <oled_128x32_init>:
 8017fe8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017fec:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017ff0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017ff4:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017ff8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017ffc:	a6a440db 	ssatge	r4, #5, fp, asr #1

08018000 <oled_128x64_init>:
 8018000:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8018004:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8018008:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801800c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8018010:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8018014:	a6a440db 	ssatge	r4, #5, fp, asr #1

08018018 <vtable for Ssd1306>:
	...
 8018020:	0801268d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sl, sp}
 8018024:	080126b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, sp}
 8018028:	080129d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, fp, sp}
 801802c:	08012955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, sp}
 8018030:	08012821 	stmdaeq	r1, {r0, r5, fp, sp}
 8018034:	080126d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, sl, sp}
 8018038:	08012701 	stmdaeq	r1, {r0, r8, r9, sl, sp}
 801803c:	080127f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, sp}
 8018040:	080127b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, sp}
 8018044:	0801268f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, sp}
 8018048:	0801285d 	stmdaeq	r1, {r0, r2, r3, r4, r6, fp, sp}
 801804c:	08012869 	stmdaeq	r1, {r0, r3, r5, r6, fp, sp}
 8018050:	08012883 	stmdaeq	r1, {r0, r1, r7, fp, sp}
 8018054:	08012691 	stmdaeq	r1, {r0, r4, r7, r9, sl, sp}
 8018058:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801805c:	5b1b006d 	blpl	86d8218 <_sidata+0x6bfee0>
 8018060:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8018064:	31335b1b 	teqcc	r3, fp, lsl fp
 8018068:	5b1b006d 	blpl	86d8224 <_sidata+0x6bfeec>
 801806c:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8018070:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8018074:	5b1b006d 	blpl	86d8230 <_sidata+0x6bfef8>
 8018078:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801807c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8018080:	205d732a 	subscs	r7, sp, sl, lsr #6
 8018084:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8018088:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801808c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8018090:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8018094:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8018098:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801809c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80180a0:	7566202c 	strbvc	r2, [r6, #-44]!	; 0xffffffd4
 80180a4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80180a8:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80180ac:	73736100 	cmnvc	r3, #0, 2
 80180b0:	69747265 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80180b4:	22206e6f 	eorcs	r6, r0, #1776	; 0x6f0
 80180b8:	20227325 	eorcs	r7, r2, r5, lsr #6
 80180bc:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80180c0:	203a6465 	eorscs	r6, sl, r5, ror #8
 80180c4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80180c8:	73252220 			; <UNDEFINED> instruction: 0x73252220
 80180cc:	6c202c22 	stcvs	12, cr2, [r0], #-136	; 0xffffff78
 80180d0:	20656e69 	rsbcs	r6, r5, r9, ror #28
 80180d4:	73256425 			; <UNDEFINED> instruction: 0x73256425
 80180d8:	000a7325 	andeq	r7, sl, r5, lsr #6
 80180dc:	6f6c4270 	svcvs	0x006c4270
 80180e0:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 80180e4:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80180e8:	616d3e2d 	cmnvs	sp, sp, lsr #28
 80180ec:	20636967 	rsbcs	r6, r3, r7, ror #18
 80180f0:	42203d3d 	eormi	r3, r0, #3904	; 0xf40
 80180f4:	4b434f4c 	blmi	90ebe2c <_sidata+0x10d3af4>
 80180f8:	47414d5f 	smlsldmi	r4, r1, pc, sp	; <UNPREDICTABLE>
 80180fc:	73004349 	movwvc	r4, #841	; 0x349
 8018100:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 8017f40 <_OledFont8x6+0x1f8>
 8018104:	6f6c6c61 	svcvs	0x006c6c61
 8018108:	00632e63 	rsbeq	r2, r3, r3, ror #28
 801810c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8018110:	203a636f 	eorscs	r6, sl, pc, ror #6
 8018114:	000a7525 	andeq	r7, sl, r5, lsr #10
 8018118:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801811c:	3e2d7265 	cdpcc	2, 2, cr7, cr13, cr5, {3}
 8018120:	6967616d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8018124:	3d3d2063 	ldccc	0, cr2, [sp, #-396]!	; 0xfffffe74
 8018128:	4f4c4220 	svcmi	0x004c4220
 801812c:	4d5f4b43 	vldrmi	d20, [pc, #-268]	; 8018028 <vtable for Ssd1306+0x10>
 8018130:	43494741 	movtmi	r4, #38721	; 0x9741
 8018134:	75282800 	strvc	r2, [r8, #-2048]!	; 0xfffff800
 8018138:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 801813c:	2964656e 	stmdbcs	r4!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8018140:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8018144:	26207265 	strtcs	r7, [r0], -r5, ror #4
 8018148:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 801814c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 8018150:	33296465 			; <UNDEFINED> instruction: 0x33296465
 8018154:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 8018158:	28003020 	stmdacs	r0, {r5, ip, sp}
 801815c:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 8018160:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 8018164:	656e2964 	strbvs	r2, [lr, #-2404]!	; 0xfffff69c
 8018168:	26207478 			; <UNDEFINED> instruction: 0x26207478
 801816c:	6e752820 	cdpvs	8, 7, cr2, cr5, cr0, {1}
 8018170:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 8018174:	33296465 			; <UNDEFINED> instruction: 0x33296465
 8018178:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
 801817c:	6d003020 	stcvs	0, cr3, [r0, #-128]	; 0xffffff80
 8018180:	6f6c6c61 	svcvs	0x006c6c61
 8018184:	6e203a63 	vnmulvs.f32	s6, s0, s7
 8018188:	20747865 	rsbscs	r7, r4, r5, ror #16
 801818c:	6c62203e 	stclvs	0, cr2, [r2], #-248	; 0xffffff08
 8018190:	5f6b636f 	svcpl	0x006b636f
 8018194:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
 8018198:	6d000a74 	vstrvs	s0, [r0, #-464]	; 0xfffffe30
 801819c:	6f6c6c61 	svcvs	0x006c6c61
 80181a0:	70203a63 	eorvc	r3, r0, r3, ror #20
 80181a4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 80181a8:	6165486b 	cmnvs	r5, fp, ror #16
 80181ac:	3d726564 	cfldr64cc	mvdx6, [r2, #-400]!	; 0xfffffe70
 80181b0:	202c7025 	eorcs	r7, ip, r5, lsr #32
 80181b4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 80181b8:	2c64253d 	cfstr64cs	mvdx2, [r4], #-244	; 0xffffff0c
 80181bc:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 80181c0:	70253d61 	eorvc	r3, r5, r1, ror #26
 80181c4:	2828000a 	stmdacs	r8!, {r1, r3}
 80181c8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 80181cc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 80181d0:	61656829 	cmnvs	r5, r9, lsr #16
 80181d4:	2d726564 	cfldr64cs	mvdx6, [r2, #-400]!	; 0xfffffe70
 80181d8:	7461643e 	strbtvc	r6, [r1], #-1086	; 0xfffffbc2
 80181dc:	20262061 	eorcs	r2, r6, r1, rrx
 80181e0:	736e7528 	cmnvc	lr, #40, 10	; 0xa000000
 80181e4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 80181e8:	29332964 	ldmdbcs	r3!, {r2, r5, r6, r8, fp, sp}
 80181ec:	203d3d20 	eorscs	r3, sp, r0, lsr #26
 80181f0:	72660030 	rsbvc	r0, r6, #48	; 0x30
 80181f4:	203a6565 	eorscs	r6, sl, r5, ror #10
 80181f8:	6f6c4270 	svcvs	0x006c4270
 80181fc:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8018200:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8018204:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
 8018208:	70202c70 	eorvc	r2, r0, r0, ror ip
 801820c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
 8018210:	203d206b 	eorscs	r2, sp, fp, rrx
 8018214:	000a7025 	andeq	r7, sl, r5, lsr #32

08018218 <__func__.2>:
 8018218:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
	...

0801821d <__func__.3>:
 801821d:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8018221:	 	svcne	0x0000636f

08018224 <days_of_month>:
 8018224:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018228:	0000001c 	andeq	r0, r0, ip, lsl r0
 801822c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018230:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018234:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018238:	0000001e 	andeq	r0, r0, lr, lsl r0
 801823c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018240:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018244:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018248:	0000001f 	andeq	r0, r0, pc, lsl r0
 801824c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018250:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018254:	21207674 			; <UNDEFINED> instruction: 0x21207674
 8018258:	0030203d 	eorseq	r2, r0, sp, lsr r0
 801825c:	2f637273 	svccs	0x00637273
 8018260:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8018264:	6d69742f 	cfstrdvs	mvd7, [r9, #-188]!	; 0xffffff44
 8018268:	00632e65 	rsbeq	r2, r3, r5, ror #28

0801826c <__func__.0>:
 801826c:	74746573 	ldrbtvc	r6, [r4], #-1395	; 0xfffffa8d
 8018270:	6f656d69 	svcvs	0x00656d69
 8018274:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
	...

08018279 <__func__.1>:
 8018279:	74746567 	ldrbtvc	r6, [r4], #-1383	; 0xfffffa99
 801827d:	6f656d69 	svcvs	0x00656d69
 8018281:	79616466 	stmdbvc	r1!, {r1, r2, r5, r6, sl, sp, lr}^
 8018285:	55434d00 	strbpl	r4, [r3, #-3328]	; 0xfffff300
 8018289:	4f4c435f 	svcmi	0x004c435f
 801828d:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
 8018291:	20514552 	subscs	r4, r1, r2, asr r5
 8018295:	53203d3d 			; <UNDEFINED> instruction: 0x53203d3d
 8018299:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
 801829d:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
 80182a1:	6f6c4365 	svcvs	0x006c4365
 80182a5:	73006b63 	movwvc	r6, #2915	; 0xb63
 80182a9:	752f6372 	strvc	r6, [pc, #-882]!	; 8017f3f <_OledFont8x6+0x1f7>
 80182ad:	616c6564 	cmnvs	ip, r4, ror #10
 80182b1:	00632e79 	rsbeq	r2, r3, r9, ror lr

080182b5 <__func__.0>:
 80182b5:	6c656475 	cfstrdvs	mvd6, [r5], #-468	; 0xfffffe2c
 80182b9:	695f7961 	ldmdbvs	pc, {r0, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
 80182bd:	0074696e 	rsbseq	r6, r4, lr, ror #18
 80182c1:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80182c5:	652f6563 	strvs	r6, [pc, #-1379]!	; 8017d6a <_OledFont8x6+0x22>
 80182c9:	2f63616d 	svccs	0x0063616d
 80182cd:	63616d65 	cmnvs	r1, #6464	; 0x1940
 80182d1:	2500632e 	strcs	r6, [r0, #-814]	; 0xfffffcd2
 80182d5:	3a783230 	bcc	9e24b9d <_sidata+0x1e0c865>
 80182d9:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80182dd:	3230253a 	eorscc	r2, r0, #243269632	; 0xe800000
 80182e1:	30253a78 	eorcc	r3, r5, r8, ror sl
 80182e5:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80182e9:	3a783230 	bcc	9e24bb1 <_sidata+0x1e0c879>
 80182ed:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80182f1:	 	cdpvs	0, 6, cr0, cr5, cr10, {0}

080182f3 <__func__.0>:
 80182f3:	74656e65 	strbtvc	r6, [r5], #-3685	; 0xfffff19b
 80182f7:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
 80182fb:	5f6d6574 	svcpl	0x006d6574
 80182ff:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
 8018303:	 	stclvs	0, cr0, [r5, #-448]!	; 0xfffffe40

08018305 <__func__.1>:
 8018305:	63616d65 	cmnvs	r1, #6464	; 0x1940
 8018309:	6174735f 	cmnvs	r4, pc, asr r3
 801830d:	73007472 	movwvc	r7, #1138	; 0x472
 8018311:	672f6372 			; <UNDEFINED> instruction: 0x672f6372
 8018315:	5f323364 	svcpl	0x00323364
 8018319:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 801831d:	 	strvs	r6, [r0, -lr, lsr #6]

08018320 <__func__.3>:
 8018320:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8018324:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
 8018328:	65625f74 	strbvs	r5, [r2, #-3956]!	; 0xfffff08c
 801832c:	006e6967 	rsbeq	r6, lr, r7, ror #18

Disassembly of section .ARM.exidx:

08018330 <_sidata-0x8>:
 8018330:	7ffef8dc 	svcvc	0x00fef8dc
 8018334:	00000001 	andeq	r0, r0, r1

Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	20017a34 	andcs	r7, r1, r4, lsr sl

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

20000100 <RemoteConfig::s_pUdpBuffer>:
20000100:	00000000 	andeq	r0, r0, r0

20000104 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000128 <RemoteConfig::s_pThis>:
20000128:	00000000 	andeq	r0, r0, r0

2000012c <guard variable for lightset::Data::Get()::instance>:
2000012c:	00000000 	andeq	r0, r0, r0

20000130 <lightset::Data::Get()::instance>:
	...

20001940 <E131Bridge::s_pThis>:
20001940:	00000000 	andeq	r0, r0, r0

20001944 <s_ReceivingMask>:
20001944:	00000000 	andeq	r0, r0, r0

20001948 <LLRPDevice::s_nIpAddressFrom>:
20001948:	00000000 	andeq	r0, r0, r0

2000194c <LLRPDevice::m_nIpAddresLLRPRequest>:
2000194c:	00000000 	andeq	r0, r0, r0

20001950 <LLRPDevice::m_nIpAddressLLRPResponse>:
20001950:	00000000 	andeq	r0, r0, r0

20001954 <LLRPDevice::m_pLLRP>:
20001954:	00000000 	andeq	r0, r0, r0

20001958 <RDMNetDevice::s_RdmCommand>:
	...

20001a57 <RDMNetDevice::s_Cid>:
	...

20001a68 <RDMSensors::s_pThis>:
20001a68:	00000000 	andeq	r0, r0, r0

20001a6c <RDMSubDevices::s_pThis>:
20001a6c:	00000000 	andeq	r0, r0, r0

20001a70 <RDMDeviceResponder::s_pThis>:
20001a70:	00000000 	andeq	r0, r0, r0

20001a74 <RDMIdentify::m_bIsEnabled>:
	...

20001a75 <RDMIdentify::m_nMode>:
20001a75:	 	andeq	r0, r0, r0

20001a78 <RDMIdentify::s_pThis>:
20001a78:	00000000 	andeq	r0, r0, r0

20001a7c <s_StopBuffer>:
	...

20001c7c <PixelPatterns::m_PortConfig>:
	...

20001d7c <PixelPatterns::m_nActivePorts>:
20001d7c:	00000000 	andeq	r0, r0, r0

20001d80 <PixelPatterns::m_pScannerColours>:
20001d80:	00000000 	andeq	r0, r0, r0

20001d84 <PixelPatterns::m_nCount>:
20001d84:	00000000 	andeq	r0, r0, r0

20001d88 <PixelPatterns::m_pOutput>:
20001d88:	00000000 	andeq	r0, r0, r0

20001d8c <PixelTestPattern::s_Pattern>:
20001d8c:	00000000 	andeq	r0, r0, r0

20001d90 <sv_isRunning>:
	...

20001da0 <s_T0H>:
	...

200095a4 <WS28xxMulti::s_pThis>:
200095a4:	00000000 	andeq	r0, r0, r0

200095a8 <SpiFlashStore::s_nWaitMillis>:
200095a8:	00000000 	andeq	r0, r0, r0

200095ac <SpiFlashStore::s_SpiFlashData>:
	...

2000a5ac <SpiFlashStore::s_nStartAddress>:
2000a5ac:	00000000 	andeq	r0, r0, r0

2000a5b0 <SpiFlashStore::s_bHaveFlashChip>:
2000a5b0:	00000000 	andeq	r0, r0, r0

2000a5b4 <SpiFlashStore::s_nSpiFlashStoreSize>:
2000a5b4:	00000000 	andeq	r0, r0, r0

2000a5b8 <SpiFlashStore::s_State>:
2000a5b8:	00000000 	andeq	r0, r0, r0

2000a5bc <SpiFlashStore::s_pThis>:
2000a5bc:	00000000 	andeq	r0, r0, r0

2000a5c0 <SpiFlashStore::s_bIsNew>:
2000a5c0:	00000000 	andeq	r0, r0, r0

2000a5c4 <StoreDisplayUdf::s_pThis>:
2000a5c4:	00000000 	andeq	r0, r0, r0

2000a5c8 <StoreE131::s_pThis>:
2000a5c8:	00000000 	andeq	r0, r0, r0

2000a5cc <StoreNetwork::s_pThis>:
2000a5cc:	00000000 	andeq	r0, r0, r0

2000a5d0 <StoreRDMDevice::s_pThis>:
2000a5d0:	00000000 	andeq	r0, r0, r0

2000a5d4 <StoreRemoteConfig::s_pThis>:
2000a5d4:	00000000 	andeq	r0, r0, r0

2000a5d8 <StoreWS28xxDmx::s_pThis>:
2000a5d8:	00000000 	andeq	r0, r0, r0

2000a5dc <FlashRom::s_pThis>:
2000a5dc:	00000000 	andeq	r0, r0, r0

2000a5e0 <flashrom::s_nAddress>:
2000a5e0:	00000000 	andeq	r0, r0, r0

2000a5e4 <flashrom::s_State>:
2000a5e4:	00000000 	andeq	r0, r0, r0

2000a5e8 <flashrom::s_nPage>:
2000a5e8:	00000000 	andeq	r0, r0, r0

2000a5ec <flashrom::s_pData>:
2000a5ec:	00000000 	andeq	r0, r0, r0

2000a5f0 <flashrom::s_isBank0>:
2000a5f0:	00000000 	andeq	r0, r0, r0

2000a5f4 <flashrom::s_nLength>:
2000a5f4:	00000000 	andeq	r0, r0, r0

2000a5f8 <g_ip_info>:
	...

2000a604 <g_mac_address>:
2000a604:	00000000 	andeq	r0, r0, r0
	...

2000a60a <s_is_dhcp>:
	...

2000a60c <s_p>:
2000a60c:	00000000 	andeq	r0, r0, r0

2000a610 <s_ticker>:
2000a610:	00000000 	andeq	r0, r0, r0

2000a614 <s_mac_address>:
	...

2000a61c <s_mac_address_arp_reply>:
2000a61c:	00000000 	andeq	r0, r0, r0
	...

2000a622 <s_id>:
	...

2000a624 <s_recv_queue>:
	...

2000b194 <s_tcb>:
	...

2000b1d8 <s_tcp>:
	...

2000b7c4 <broadcast_mask>:
2000b7c4:	00000000 	andeq	r0, r0, r0

2000b7c8 <gw_ip>:
2000b7c8:	00000000 	andeq	r0, r0, r0

2000b7cc <on_network_mask>:
2000b7cc:	00000000 	andeq	r0, r0, r0

2000b7d0 <s_id>:
2000b7d0:	00000000 	andeq	r0, r0, r0

2000b7d4 <s_ports_allowed>:
	...

2000b7f4 <s_recv_queue>:
	...

20011494 <s_send_packet>:
	...

20011a80 <MDNS::s_nRemoteIp>:
20011a80:	00000000 	andeq	r0, r0, r0

20011a84 <MDNS::s_nRemotePort>:
20011a84:	00000000 	andeq	r0, r0, r0

20011a88 <MDNS::s_nMulticastIp>:
20011a88:	00000000 	andeq	r0, r0, r0

20011a8c <MDNS::s_AnswerLocalIp>:
	...

20011c90 <MDNS::s_ServiceRecords>:
	...

20011cb0 <MDNS::s_nBytesReceived>:
20011cb0:	00000000 	andeq	r0, r0, r0

20011cb4 <MDNS::s_ServiceRecordsData>:
	...

20011eb8 <MDNS::s_pName>:
20011eb8:	00000000 	andeq	r0, r0, r0

20011ebc <MDNS::s_pBuffer>:
20011ebc:	00000000 	andeq	r0, r0, r0

20011ec0 <Network::s_pThis>:
20011ec0:	00000000 	andeq	r0, r0, r0

20011ec4 <s_arp_announce>:
	...

20011ef0 <s_arp_reply>:
	...

20011f1c <s_arp_request>:
	...

20011f48 <s_arp_records>:
	...

200120c8 <s_entry_current>:
200120c8:	00000000 	andeq	r0, r0, r0

200120cc <s_dhcp_allocated_gw>:
200120cc:	00000000 	andeq	r0, r0, r0

200120d0 <s_dhcp_allocated_ip>:
200120d0:	00000000 	andeq	r0, r0, r0

200120d4 <s_dhcp_allocated_netmask>:
200120d4:	00000000 	andeq	r0, r0, r0

200120d8 <s_dhcp_message>:
	...

200122fc <s_dhcp_server_ip>:
200122fc:	00000000 	andeq	r0, r0, r0

20012300 <s_groups>:
	...

20012420 <s_id>:
20012420:	00000000 	andeq	r0, r0, r0

20012424 <s_joins_allowed_index>:
20012424:	00000000 	andeq	r0, r0, r0

20012428 <s_leave>:
	...

20012458 <s_multicast_mac>:
	...

20012460 <s_report>:
	...

20012490 <DisplayUdf::s_pThis>:
20012490:	00000000 	andeq	r0, r0, r0

20012494 <PropertiesConfig::s_Config>:
20012494:	00000000 	andeq	r0, r0, r0

20012498 <Display::s_pThis>:
20012498:	00000000 	andeq	r0, r0, r0

2001249c <Display7Segment::s_pThis>:
2001249c:	00000000 	andeq	r0, r0, r0

200124a0 <_ClearBuffer>:
	...

20012528 <Ssd1306::s_pThis>:
20012528:	00000000 	andeq	r0, r0, r0

2001252c <FirmwareVersion::s_FirmwareVersion>:
	...

20012542 <FirmwareVersion::s_Print>:
	...

20012584 <FirmwareVersion::s_pThis>:
20012584:	00000000 	andeq	r0, r0, r0

20012588 <LedBlink::s_pThis>:
20012588:	00000000 	andeq	r0, r0, r0

2001258c <Hardware::s_pThis>:
2001258c:	00000000 	andeq	r0, r0, r0

20012590 <outptr>:
20012590:	00000000 	andeq	r0, r0, r0

20012594 <last.0>:
20012594:	00000000 	andeq	r0, r0, r0

20012598 <s_micros>:
	...

200125a0 <set_timer>:
200125a0:	00000000 	andeq	r0, r0, r0

200125a4 <s_address>:
200125a4:	00000000 	andeq	r0, r0, r0

200125a8 <s_nSysTickMillis>:
200125a8:	00000000 	andeq	r0, r0, r0

200125ac <enet_init_status>:
200125ac:	00000000 	andeq	r0, r0, r0

200125b0 <dma_current_ptp_rxdesc>:
200125b0:	00000000 	andeq	r0, r0, r0

200125b4 <dma_current_ptp_txdesc>:
200125b4:	00000000 	andeq	r0, r0, r0

200125b8 <dma_current_rxdesc>:
200125b8:	00000000 	andeq	r0, r0, r0

200125bc <dma_current_txdesc>:
200125bc:	00000000 	andeq	r0, r0, r0

200125c0 <enet_initpara>:
	...

200125fc <rx_buff>:
	...

20016184 <rxdesc_tab>:
	...

20016224 <tx_buff>:
	...

200179f4 <txdesc_tab>:
	...

Disassembly of section ._user_heap_stack:

20017a34 <heap_low>:
	...

20019a34 <heap_top>:
	...
