
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20020000 	andcs	r0, r2, r0
 8007004:	08008885 	stmdaeq	r0, {r0, r2, r7, fp, pc}
 8007008:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800700c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007010:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007014:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007018:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 800702c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007030:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800703c:	0801457d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, lr}
 8007040:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007044:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007048:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800704c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007050:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007054:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007058:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800705c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007060:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007064:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007068:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800706c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007070:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007074:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007078:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800707c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007080:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007084:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007088:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800708c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007090:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007094:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007098:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800709c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070ac:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070b0:	0800ea61 	stmdaeq	r0, {r0, r5, r6, r9, fp, sp, lr, pc}
 80070b4:	0800ec25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, lr, pc}
 80070b8:	0800eccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, sp, lr, pc}
 80070bc:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070d4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070d8:	0800ea31 	stmdaeq	r0, {r0, r4, r5, r9, fp, sp, lr, pc}
 80070dc:	0800ea3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, sp, lr, pc}
 80070e0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070e4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070e8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070ec:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070fc:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007100:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007104:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007108:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800710c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007110:	0800ea49 	stmdaeq	r0, {r0, r3, r6, r9, fp, sp, lr, pc}
 8007114:	0800ea55 	stmdaeq	r0, {r0, r2, r4, r6, r9, fp, sp, lr, pc}
 8007118:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800711c:	0800eced 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, fp, sp, lr, pc}
 8007120:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007124:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007128:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800712c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007130:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007134:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007138:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800713c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007140:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007144:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007148:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800714c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007158:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800715c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007160:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007164:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 8007178:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800717c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007180:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800718c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 80071a0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80071a4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9ab 	bl	800753c <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f00a fe3d 	bl	8011e78 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f009 f80e 	bl	8010228 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f887 	bl	8007324 <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f00b f84e 	bl	80122b8 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	200053a4 	andcs	r5, r0, r4, lsr #7
 8007240:	20005398 	mulcs	r0, r8, r3
 8007244:	200053aa 	andcs	r5, r0, sl, lsr #7

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f982 	bl	8007552 <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f00a bf16 	b.w	8012088 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	200053aa 	andcs	r5, r0, sl, lsr #7

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	200053b4 			; <UNDEFINED> instruction: 0x200053b4

0800727c <tcp_init>:
 800727c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800727e:	2206      	movs	r2, #6
 8007280:	4c0e      	ldr	r4, [pc, #56]	; (80072bc <tcp_init+0x40>)
 8007282:	490f      	ldr	r1, [pc, #60]	; (80072c0 <tcp_init+0x44>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f009 f829 	bl	80102dc <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	2500      	movs	r5, #0
 8007290:	7323      	strb	r3, [r4, #12]
 8007292:	4b0c      	ldr	r3, [pc, #48]	; (80072c4 <tcp_init+0x48>)
 8007294:	eb0d 0102 	add.w	r1, sp, r2
 8007298:	681b      	ldr	r3, [r3, #0]
 800729a:	f104 001a 	add.w	r0, r4, #26
 800729e:	9301      	str	r3, [sp, #4]
 80072a0:	7365      	strb	r5, [r4, #13]
 80072a2:	f009 f81b 	bl	80102dc <memcpy.isra.0>
 80072a6:	2345      	movs	r3, #69	; 0x45
 80072a8:	73a3      	strb	r3, [r4, #14]
 80072aa:	2340      	movs	r3, #64	; 0x40
 80072ac:	7523      	strb	r3, [r4, #20]
 80072ae:	75a3      	strb	r3, [r4, #22]
 80072b0:	2306      	movs	r3, #6
 80072b2:	73e5      	strb	r5, [r4, #15]
 80072b4:	7565      	strb	r5, [r4, #21]
 80072b6:	75e3      	strb	r3, [r4, #23]
 80072b8:	b003      	add	sp, #12
 80072ba:	bd30      	pop	{r4, r5, pc}
 80072bc:	20005f78 	andcs	r5, r0, r8, ror pc
 80072c0:	200053a4 	andcs	r5, r0, r4, lsr #7
 80072c4:	20005398 	mulcs	r0, r8, r3

080072c8 <udp_init>:
 80072c8:	b570      	push	{r4, r5, r6, lr}
 80072ca:	2200      	movs	r2, #0
 80072cc:	2408      	movs	r4, #8
 80072ce:	460e      	mov	r6, r1
 80072d0:	4b0d      	ldr	r3, [pc, #52]	; (8007308 <udp_init+0x40>)
 80072d2:	490e      	ldr	r1, [pc, #56]	; (800730c <udp_init+0x44>)
 80072d4:	3c01      	subs	r4, #1
 80072d6:	801a      	strh	r2, [r3, #0]
 80072d8:	805a      	strh	r2, [r3, #2]
 80072da:	f841 2b04 	str.w	r2, [r1], #4
 80072de:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072e2:	d1f7      	bne.n	80072d4 <udp_init+0xc>
 80072e4:	2206      	movs	r2, #6
 80072e6:	4d0a      	ldr	r5, [pc, #40]	; (8007310 <udp_init+0x48>)
 80072e8:	4b0a      	ldr	r3, [pc, #40]	; (8007314 <udp_init+0x4c>)
 80072ea:	4601      	mov	r1, r0
 80072ec:	18a8      	adds	r0, r5, r2
 80072ee:	801c      	strh	r4, [r3, #0]
 80072f0:	f009 f980 	bl	80105f4 <memcpy.isra.0>
 80072f4:	4b08      	ldr	r3, [pc, #32]	; (8007318 <udp_init+0x50>)
 80072f6:	4630      	mov	r0, r6
 80072f8:	60eb      	str	r3, [r5, #12]
 80072fa:	4b08      	ldr	r3, [pc, #32]	; (800731c <udp_init+0x54>)
 80072fc:	616b      	str	r3, [r5, #20]
 80072fe:	f009 f9a5 	bl	801064c <udp_set_ip>
 8007302:	852c      	strh	r4, [r5, #40]	; 0x28
 8007304:	bd70      	pop	{r4, r5, r6, pc}
 8007306:	bf00      	nop
 8007308:	20006594 	mulcs	r0, r4, r5
 800730c:	20006574 	andcs	r6, r0, r4, ror r5
 8007310:	2000c234 	andcs	ip, r0, r4, lsr r2
 8007314:	20006570 	andcs	r6, r0, r0, ror r5
 8007318:	00450008 	subeq	r0, r5, r8
 800731c:	11400040 	cmpne	r0, r0, asr #32

08007320 <udp_shutdown>:
 8007320:	4770      	bx	lr
	...

08007324 <arp_init>:
 8007324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007328:	4604      	mov	r4, r0
 800732a:	460d      	mov	r5, r1
 800732c:	f000 f876 	bl	800741c <arp_cache_init>
 8007330:	2206      	movs	r2, #6
 8007332:	4621      	mov	r1, r4
 8007334:	482e      	ldr	r0, [pc, #184]	; (80073f0 <arp_init+0xcc>)
 8007336:	682f      	ldr	r7, [r5, #0]
 8007338:	f00a fc10 	bl	8011b5c <memcpy.isra.0>
 800733c:	4b2d      	ldr	r3, [pc, #180]	; (80073f4 <arp_init+0xd0>)
 800733e:	2507      	movs	r5, #7
 8007340:	461e      	mov	r6, r3
 8007342:	22ff      	movs	r2, #255	; 0xff
 8007344:	3d01      	subs	r5, #1
 8007346:	d146      	bne.n	80073d6 <arp_init+0xb2>
 8007348:	4b2b      	ldr	r3, [pc, #172]	; (80073f8 <arp_init+0xd4>)
 800734a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073fc <arp_init+0xd8>
 800734e:	2206      	movs	r2, #6
 8007350:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8007354:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007358:	4621      	mov	r1, r4
 800735a:	4829      	ldr	r0, [pc, #164]	; (8007400 <arp_init+0xdc>)
 800735c:	82b3      	strh	r3, [r6, #20]
 800735e:	f00a fbfd 	bl	8011b5c <memcpy.isra.0>
 8007362:	2307      	movs	r3, #7
 8007364:	4a27      	ldr	r2, [pc, #156]	; (8007404 <arp_init+0xe0>)
 8007366:	61f7      	str	r7, [r6, #28]
 8007368:	3b01      	subs	r3, #1
 800736a:	d137      	bne.n	80073dc <arp_init+0xb8>
 800736c:	2206      	movs	r2, #6
 800736e:	4621      	mov	r1, r4
 8007370:	4825      	ldr	r0, [pc, #148]	; (8007408 <arp_init+0xe4>)
 8007372:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007376:	f00a fbf1 	bl	8011b5c <memcpy.isra.0>
 800737a:	4a24      	ldr	r2, [pc, #144]	; (800740c <arp_init+0xe8>)
 800737c:	2306      	movs	r3, #6
 800737e:	4615      	mov	r5, r2
 8007380:	21ff      	movs	r1, #255	; 0xff
 8007382:	3b01      	subs	r3, #1
 8007384:	d22d      	bcs.n	80073e2 <arp_init+0xbe>
 8007386:	4b1c      	ldr	r3, [pc, #112]	; (80073f8 <arp_init+0xd4>)
 8007388:	2206      	movs	r2, #6
 800738a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800738e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007392:	4621      	mov	r1, r4
 8007394:	481e      	ldr	r0, [pc, #120]	; (8007410 <arp_init+0xec>)
 8007396:	82ab      	strh	r3, [r5, #20]
 8007398:	f00a fbe0 	bl	8011b5c <memcpy.isra.0>
 800739c:	2307      	movs	r3, #7
 800739e:	2100      	movs	r1, #0
 80073a0:	4a1c      	ldr	r2, [pc, #112]	; (8007414 <arp_init+0xf0>)
 80073a2:	61ef      	str	r7, [r5, #28]
 80073a4:	3b01      	subs	r3, #1
 80073a6:	d11f      	bne.n	80073e8 <arp_init+0xc4>
 80073a8:	2206      	movs	r2, #6
 80073aa:	4d1b      	ldr	r5, [pc, #108]	; (8007418 <arp_init+0xf4>)
 80073ac:	4621      	mov	r1, r4
 80073ae:	18a8      	adds	r0, r5, r2
 80073b0:	f00a fbd4 	bl	8011b5c <memcpy.isra.0>
 80073b4:	4b10      	ldr	r3, [pc, #64]	; (80073f8 <arp_init+0xd4>)
 80073b6:	4621      	mov	r1, r4
 80073b8:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073bc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073c0:	f105 0016 	add.w	r0, r5, #22
 80073c4:	2206      	movs	r2, #6
 80073c6:	82ab      	strh	r3, [r5, #20]
 80073c8:	f00a fbc8 	bl	8011b5c <memcpy.isra.0>
 80073cc:	61ef      	str	r7, [r5, #28]
 80073ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073d2:	f00a bbcd 	b.w	8011b70 <arp_announce>
 80073d6:	f803 2b01 	strb.w	r2, [r3], #1
 80073da:	e7b3      	b.n	8007344 <arp_init+0x20>
 80073dc:	f802 5b01 	strb.w	r5, [r2], #1
 80073e0:	e7c2      	b.n	8007368 <arp_init+0x44>
 80073e2:	f802 1b01 	strb.w	r1, [r2], #1
 80073e6:	e7cc      	b.n	8007382 <arp_init+0x5e>
 80073e8:	f802 1b01 	strb.w	r1, [r2], #1
 80073ec:	e7da      	b.n	80073a4 <arp_init+0x80>
 80073ee:	bf00      	nop
 80073f0:	2000ccca 	andcs	ip, r0, sl, asr #25
 80073f4:	2000ccc4 	andcs	ip, r0, r4, asr #25
 80073f8:	01000608 	tsteq	r0, r8, lsl #12
 80073fc:	04060008 	streq	r0, [r6], #-8
 8007400:	2000ccda 	ldrdcs	ip, [r0], -sl
 8007404:	2000cce4 	andcs	ip, r0, r4, ror #25
 8007408:	2000cd22 	andcs	ip, r0, r2, lsr #26
 800740c:	2000cd1c 	andcs	ip, r0, ip, lsl sp
 8007410:	2000cd32 	andcs	ip, r0, r2, lsr sp
 8007414:	2000cd3c 	andcs	ip, r0, ip, lsr sp
 8007418:	2000ccf0 	strdcs	ip, [r0], -r0

0800741c <arp_cache_init>:
 800741c:	2300      	movs	r3, #0
 800741e:	4618      	mov	r0, r3
 8007420:	4a09      	ldr	r2, [pc, #36]	; (8007448 <arp_cache_init+0x2c>)
 8007422:	b510      	push	{r4, lr}
 8007424:	8013      	strh	r3, [r2, #0]
 8007426:	4a09      	ldr	r2, [pc, #36]	; (800744c <arp_cache_init+0x30>)
 8007428:	4611      	mov	r1, r2
 800742a:	f842 0c04 	str.w	r0, [r2, #-4]
 800742e:	1d94      	adds	r4, r2, #6
 8007430:	42a1      	cmp	r1, r4
 8007432:	d105      	bne.n	8007440 <arp_cache_init+0x24>
 8007434:	3303      	adds	r3, #3
 8007436:	2b60      	cmp	r3, #96	; 0x60
 8007438:	f102 020c 	add.w	r2, r2, #12
 800743c:	d1f4      	bne.n	8007428 <arp_cache_init+0xc>
 800743e:	bd10      	pop	{r4, pc}
 8007440:	f801 0b01 	strb.w	r0, [r1], #1
 8007444:	e7f4      	b.n	8007430 <arp_cache_init+0x14>
 8007446:	bf00      	nop
 8007448:	2000cec8 	andcs	ip, r0, r8, asr #29
 800744c:	2000cd4c 	andcs	ip, r0, ip, asr #26

08007450 <igmp_init>:
 8007450:	2200      	movs	r2, #0
 8007452:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007456:	4605      	mov	r5, r0
 8007458:	4608      	mov	r0, r1
 800745a:	4611      	mov	r1, r2
 800745c:	4b23      	ldr	r3, [pc, #140]	; (80074ec <igmp_init+0x9c>)
 800745e:	f103 0408 	add.w	r4, r3, #8
 8007462:	42a3      	cmp	r3, r4
 8007464:	d13e      	bne.n	80074e4 <igmp_init+0x94>
 8007466:	3201      	adds	r2, #1
 8007468:	2a24      	cmp	r2, #36	; 0x24
 800746a:	d1f8      	bne.n	800745e <igmp_init+0xe>
 800746c:	2600      	movs	r6, #0
 800746e:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa0>)
 8007470:	4c20      	ldr	r4, [pc, #128]	; (80074f4 <igmp_init+0xa4>)
 8007472:	601e      	str	r6, [r3, #0]
 8007474:	4b20      	ldr	r3, [pc, #128]	; (80074f8 <igmp_init+0xa8>)
 8007476:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800747a:	801e      	strh	r6, [r3, #0]
 800747c:	f00a fe7c 	bl	8012178 <igmp_set_ip>
 8007480:	2201      	movs	r2, #1
 8007482:	4b1e      	ldr	r3, [pc, #120]	; (80074fc <igmp_init+0xac>)
 8007484:	4629      	mov	r1, r5
 8007486:	801a      	strh	r2, [r3, #0]
 8007488:	225e      	movs	r2, #94	; 0x5e
 800748a:	709a      	strb	r2, [r3, #2]
 800748c:	2206      	movs	r2, #6
 800748e:	18a0      	adds	r0, r4, r2
 8007490:	f00a fe28 	bl	80120e4 <memcpy.isra.0>
 8007494:	f240 4394 	movw	r3, #1172	; 0x494
 8007498:	8463      	strh	r3, [r4, #34]	; 0x22
 800749a:	2316      	movs	r3, #22
 800749c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8007500 <igmp_init+0xb0>
 80074a0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007504 <igmp_init+0xb4>
 80074a4:	84e3      	strh	r3, [r4, #38]	; 0x26
 80074a6:	f8c4 9014 	str.w	r9, [r4, #20]
 80074aa:	4b17      	ldr	r3, [pc, #92]	; (8007508 <igmp_init+0xb8>)
 80074ac:	f8c4 800c 	str.w	r8, [r4, #12]
 80074b0:	8227      	strh	r7, [r4, #16]
 80074b2:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074b4:	4c15      	ldr	r4, [pc, #84]	; (800750c <igmp_init+0xbc>)
 80074b6:	2206      	movs	r2, #6
 80074b8:	6023      	str	r3, [r4, #0]
 80074ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074be:	18a0      	adds	r0, r4, r2
 80074c0:	80a3      	strh	r3, [r4, #4]
 80074c2:	4629      	mov	r1, r5
 80074c4:	f00a fe0e 	bl	80120e4 <memcpy.isra.0>
 80074c8:	23e0      	movs	r3, #224	; 0xe0
 80074ca:	83e3      	strh	r3, [r4, #30]
 80074cc:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074d0:	4a0f      	ldr	r2, [pc, #60]	; (8007510 <igmp_init+0xc0>)
 80074d2:	f8c4 9014 	str.w	r9, [r4, #20]
 80074d6:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074da:	f8c4 800c 	str.w	r8, [r4, #12]
 80074de:	8227      	strh	r7, [r4, #16]
 80074e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074e4:	f803 1b01 	strb.w	r1, [r3], #1
 80074e8:	e7bb      	b.n	8007462 <igmp_init+0x12>
 80074ea:	bf00      	nop
 80074ec:	2000d100 	andcs	sp, r0, r0, lsl #2
 80074f0:	2000d224 	andcs	sp, r0, r4, lsr #4
 80074f4:	2000d260 	andcs	sp, r0, r0, ror #4
 80074f8:	2000d220 	andcs	sp, r0, r0, lsr #4
 80074fc:	2000d258 	andcs	sp, r0, r8, asr r2
 8007500:	02010040 	andeq	r0, r1, #64	; 0x40
 8007504:	00460008 	subeq	r0, r6, r8
 8007508:	005e0001 	subseq	r0, lr, r1
 800750c:	2000d228 	andcs	sp, r0, r8, lsr #4
 8007510:	04940200 	ldreq	r0, [r4], #512	; 0x200

08007514 <igmp_shutdown>:
 8007514:	b570      	push	{r4, r5, r6, lr}
 8007516:	2500      	movs	r5, #0
 8007518:	462e      	mov	r6, r5
 800751a:	4c07      	ldr	r4, [pc, #28]	; (8007538 <igmp_shutdown+0x24>)
 800751c:	6820      	ldr	r0, [r4, #0]
 800751e:	b120      	cbz	r0, 800752a <igmp_shutdown+0x16>
 8007520:	f00a fe86 	bl	8012230 <igmp_leave>
 8007524:	6026      	str	r6, [r4, #0]
 8007526:	7166      	strb	r6, [r4, #5]
 8007528:	7126      	strb	r6, [r4, #4]
 800752a:	3501      	adds	r5, #1
 800752c:	2d24      	cmp	r5, #36	; 0x24
 800752e:	f104 0408 	add.w	r4, r4, #8
 8007532:	d1f3      	bne.n	800751c <igmp_shutdown+0x8>
 8007534:	bd70      	pop	{r4, r5, r6, pc}
 8007536:	bf00      	nop
 8007538:	2000d100 	andcs	sp, r0, r0, lsl #2

0800753c <ip_init>:
 800753c:	b538      	push	{r3, r4, r5, lr}
 800753e:	4604      	mov	r4, r0
 8007540:	460d      	mov	r5, r1
 8007542:	f7ff fec1 	bl	80072c8 <udp_init>
 8007546:	4629      	mov	r1, r5
 8007548:	4620      	mov	r0, r4
 800754a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800754e:	f7ff bf7f 	b.w	8007450 <igmp_init>

08007552 <ip_shutdown>:
 8007552:	b508      	push	{r3, lr}
 8007554:	f7ff ffde 	bl	8007514 <igmp_shutdown>
 8007558:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800755c:	f7ff bee0 	b.w	8007320 <udp_shutdown>

08007560 <console_init>:
 8007560:	b508      	push	{r3, lr}
 8007562:	f00c ffad 	bl	80144c0 <uart0_init>
 8007566:	4804      	ldr	r0, [pc, #16]	; (8007578 <console_init+0x18>)
 8007568:	f00c ffda 	bl	8014520 <uart0_puts>
 800756c:	4803      	ldr	r0, [pc, #12]	; (800757c <console_init+0x1c>)
 800756e:	f00c ffd7 	bl	8014520 <uart0_puts>
 8007572:	2000      	movs	r0, #0
 8007574:	bd08      	pop	{r3, pc}
 8007576:	bf00      	nop
 8007578:	080164ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, lr}
 800757c:	08018638 	stmdaeq	r1, {r3, r4, r5, r9, sl, pc}

08007580 <net_handle>:
 8007580:	b510      	push	{r4, lr}
 8007582:	4c0c      	ldr	r4, [pc, #48]	; (80075b4 <net_handle+0x34>)
 8007584:	4620      	mov	r0, r4
 8007586:	f00d fecf 	bl	8015328 <emac_eth_recv>
 800758a:	2800      	cmp	r0, #0
 800758c:	dd07      	ble.n	800759e <net_handle+0x1e>
 800758e:	6820      	ldr	r0, [r4, #0]
 8007590:	8983      	ldrh	r3, [r0, #12]
 8007592:	2b08      	cmp	r3, #8
 8007594:	d107      	bne.n	80075a6 <net_handle+0x26>
 8007596:	f000 fa71 	bl	8007a7c <ip_handle>
 800759a:	f00d fed9 	bl	8015350 <emac_free_pkt>
 800759e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80075a2:	f008 be31 	b.w	8010208 <net_timers_run>
 80075a6:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075aa:	d1f6      	bne.n	800759a <net_handle+0x1a>
 80075ac:	f000 fa0a 	bl	80079c4 <arp_handle>
 80075b0:	e7f3      	b.n	800759a <net_handle+0x1a>
 80075b2:	bf00      	nop
 80075b4:	200053ac 	andcs	r5, r0, ip, lsr #7

080075b8 <tcp_handle>:
 80075b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075bc:	4605      	mov	r5, r0
 80075be:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075c0:	b085      	sub	sp, #20
 80075c2:	ba5b      	rev16	r3, r3
 80075c4:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c6:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c8:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 80075cc:	ba5b      	rev16	r3, r3
 80075ce:	8483      	strh	r3, [r0, #36]	; 0x24
 80075d0:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 80075d4:	f008 fe8c 	bl	80102f0 <_bswap32>
 80075d8:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075da:	4ca6      	ldr	r4, [pc, #664]	; (8007874 <tcp_handle+0x2bc>)
 80075dc:	ba5b      	rev16	r3, r3
 80075de:	862b      	strh	r3, [r5, #48]	; 0x30
 80075e0:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075e2:	8822      	ldrh	r2, [r4, #0]
 80075e4:	ba5b      	rev16	r3, r3
 80075e6:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075e8:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075ea:	429a      	cmp	r2, r3
 80075ec:	d14d      	bne.n	800768a <tcp_handle+0xd2>
 80075ee:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075f2:	2b01      	cmp	r3, #1
 80075f4:	d00d      	beq.n	8007612 <tcp_handle+0x5a>
 80075f6:	2204      	movs	r2, #4
 80075f8:	4668      	mov	r0, sp
 80075fa:	f105 011a 	add.w	r1, r5, #26
 80075fe:	f008 fe6d 	bl	80102dc <memcpy.isra.0>
 8007602:	8862      	ldrh	r2, [r4, #2]
 8007604:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 8007606:	429a      	cmp	r2, r3
 8007608:	d13f      	bne.n	800768a <tcp_handle+0xd2>
 800760a:	6862      	ldr	r2, [r4, #4]
 800760c:	9b00      	ldr	r3, [sp, #0]
 800760e:	429a      	cmp	r2, r3
 8007610:	d13b      	bne.n	800768a <tcp_handle+0xd2>
 8007612:	2204      	movs	r2, #4
 8007614:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8007618:	eb0d 0002 	add.w	r0, sp, r2
 800761c:	f008 fe5e 	bl	80102dc <memcpy.isra.0>
 8007620:	2204      	movs	r2, #4
 8007622:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8007626:	eb0d 0002 	add.w	r0, sp, r2
 800762a:	9e01      	ldr	r6, [sp, #4]
 800762c:	f008 fe56 	bl	80102dc <memcpy.isra.0>
 8007630:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007634:	9f01      	ldr	r7, [sp, #4]
 8007636:	2a01      	cmp	r2, #1
 8007638:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800763c:	d01b      	beq.n	8007676 <tcp_handle+0xbe>
 800763e:	1ed3      	subs	r3, r2, #3
 8007640:	2b07      	cmp	r3, #7
 8007642:	d822      	bhi.n	800768a <tcp_handle+0xd2>
 8007644:	ea4f 1318 	mov.w	r3, r8, lsr #4
 8007648:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800764c:	fa9b fb9b 	rev16.w	fp, fp
 8007650:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 8007654:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8007656:	44d8      	add	r8, fp
 8007658:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800765c:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007660:	fa1f f888 	uxth.w	r8, r8
 8007664:	2900      	cmp	r1, #0
 8007666:	d142      	bne.n	80076ee <tcp_handle+0x136>
 8007668:	f1b8 0f00 	cmp.w	r8, #0
 800766c:	d16b      	bne.n	8007746 <tcp_handle+0x18e>
 800766e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007670:	42bb      	cmp	r3, r7
 8007672:	d168      	bne.n	8007746 <tcp_handle+0x18e>
 8007674:	e048      	b.n	8007708 <tcp_handle+0x150>
 8007676:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800767a:	075a      	lsls	r2, r3, #29
 800767c:	d405      	bmi.n	800768a <tcp_handle+0xd2>
 800767e:	06d8      	lsls	r0, r3, #27
 8007680:	d506      	bpl.n	8007690 <tcp_handle+0xd8>
 8007682:	4628      	mov	r0, r5
 8007684:	497b      	ldr	r1, [pc, #492]	; (8007874 <tcp_handle+0x2bc>)
 8007686:	f008 ff07 	bl	8010498 <_send_reset>
 800768a:	b005      	add	sp, #20
 800768c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007690:	0799      	lsls	r1, r3, #30
 8007692:	d5fa      	bpl.n	800768a <tcp_handle+0xd2>
 8007694:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007698:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800769c:	4668      	mov	r0, sp
 800769e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80076a2:	f105 011a 	add.w	r1, r5, #26
 80076a6:	2204      	movs	r2, #4
 80076a8:	8063      	strh	r3, [r4, #2]
 80076aa:	f008 fe17 	bl	80102dc <memcpy.isra.0>
 80076ae:	2206      	movs	r2, #6
 80076b0:	9b00      	ldr	r3, [sp, #0]
 80076b2:	18a9      	adds	r1, r5, r2
 80076b4:	4870      	ldr	r0, [pc, #448]	; (8007878 <tcp_handle+0x2c0>)
 80076b6:	6063      	str	r3, [r4, #4]
 80076b8:	f008 fe10 	bl	80102dc <memcpy.isra.0>
 80076bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076be:	1c7b      	adds	r3, r7, #1
 80076c0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076c4:	6363      	str	r3, [r4, #52]	; 0x34
 80076c6:	2312      	movs	r3, #18
 80076c8:	486a      	ldr	r0, [pc, #424]	; (8007874 <tcp_handle+0x2bc>)
 80076ca:	a901      	add	r1, sp, #4
 80076cc:	f88d 300c 	strb.w	r3, [sp, #12]
 80076d0:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076d4:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076d6:	f8c4 a018 	str.w	sl, [r4, #24]
 80076da:	f008 fe2f 	bl	801033c <_tcp_send_package>
 80076de:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076e0:	1c5a      	adds	r2, r3, #1
 80076e2:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076e6:	2303      	movs	r3, #3
 80076e8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076ec:	e7cd      	b.n	800768a <tcp_handle+0xd2>
 80076ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076f0:	eba3 0c07 	sub.w	ip, r3, r7
 80076f4:	f1b8 0f00 	cmp.w	r8, #0
 80076f8:	d10d      	bne.n	8007716 <tcp_handle+0x15e>
 80076fa:	f1bc 0f00 	cmp.w	ip, #0
 80076fe:	dc22      	bgt.n	8007746 <tcp_handle+0x18e>
 8007700:	1afb      	subs	r3, r7, r3
 8007702:	1a5b      	subs	r3, r3, r1
 8007704:	2b00      	cmp	r3, #0
 8007706:	da1e      	bge.n	8007746 <tcp_handle+0x18e>
 8007708:	0743      	lsls	r3, r0, #29
 800770a:	d530      	bpl.n	800776e <tcp_handle+0x1b6>
 800770c:	8821      	ldrh	r1, [r4, #0]
 800770e:	4859      	ldr	r0, [pc, #356]	; (8007874 <tcp_handle+0x2bc>)
 8007710:	f008 fdca 	bl	80102a8 <_init_tcb>
 8007714:	e7b9      	b.n	800768a <tcp_handle+0xd2>
 8007716:	f1bc 0f00 	cmp.w	ip, #0
 800771a:	dc06      	bgt.n	800772a <tcp_handle+0x172>
 800771c:	eba7 0c03 	sub.w	ip, r7, r3
 8007720:	ebac 0c01 	sub.w	ip, ip, r1
 8007724:	f1bc 0f00 	cmp.w	ip, #0
 8007728:	dbee      	blt.n	8007708 <tcp_handle+0x150>
 800772a:	eb08 0c07 	add.w	ip, r8, r7
 800772e:	f103 0e01 	add.w	lr, r3, #1
 8007732:	ebae 0e0c 	sub.w	lr, lr, ip
 8007736:	f1be 0f00 	cmp.w	lr, #0
 800773a:	dc04      	bgt.n	8007746 <tcp_handle+0x18e>
 800773c:	43db      	mvns	r3, r3
 800773e:	1a5b      	subs	r3, r3, r1
 8007740:	eb13 0f0c 	cmn.w	r3, ip
 8007744:	d4e0      	bmi.n	8007708 <tcp_handle+0x150>
 8007746:	0742      	lsls	r2, r0, #29
 8007748:	d505      	bpl.n	8007756 <tcp_handle+0x19e>
 800774a:	8821      	ldrh	r1, [r4, #0]
 800774c:	4849      	ldr	r0, [pc, #292]	; (8007874 <tcp_handle+0x2bc>)
 800774e:	f008 fdab 	bl	80102a8 <_init_tcb>
 8007752:	2301      	movs	r3, #1
 8007754:	e7c8      	b.n	80076e8 <tcp_handle+0x130>
 8007756:	6963      	ldr	r3, [r4, #20]
 8007758:	9301      	str	r3, [sp, #4]
 800775a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800775c:	9302      	str	r3, [sp, #8]
 800775e:	2310      	movs	r3, #16
 8007760:	4844      	ldr	r0, [pc, #272]	; (8007874 <tcp_handle+0x2bc>)
 8007762:	a901      	add	r1, sp, #4
 8007764:	f88d 300c 	strb.w	r3, [sp, #12]
 8007768:	f008 fde8 	bl	801033c <_tcp_send_package>
 800776c:	e78d      	b.n	800768a <tcp_handle+0xd2>
 800776e:	0781      	lsls	r1, r0, #30
 8007770:	d505      	bpl.n	800777e <tcp_handle+0x1c6>
 8007772:	2a03      	cmp	r2, #3
 8007774:	d0ed      	beq.n	8007752 <tcp_handle+0x19a>
 8007776:	4628      	mov	r0, r5
 8007778:	493e      	ldr	r1, [pc, #248]	; (8007874 <tcp_handle+0x2bc>)
 800777a:	f008 fe8d 	bl	8010498 <_send_reset>
 800777e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007782:	06da      	lsls	r2, r3, #27
 8007784:	d581      	bpl.n	800768a <tcp_handle+0xd2>
 8007786:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800778a:	3b03      	subs	r3, #3
 800778c:	2b07      	cmp	r3, #7
 800778e:	d818      	bhi.n	80077c2 <tcp_handle+0x20a>
 8007790:	e8df f003 	tbb	[pc, r3]
 8007794:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007798:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800779c:	6923      	ldr	r3, [r4, #16]
 800779e:	1b9b      	subs	r3, r3, r6
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	dc0a      	bgt.n	80077ba <tcp_handle+0x202>
 80077a4:	6963      	ldr	r3, [r4, #20]
 80077a6:	1af3      	subs	r3, r6, r3
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	dc06      	bgt.n	80077ba <tcp_handle+0x202>
 80077ac:	2304      	movs	r3, #4
 80077ae:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077b2:	f8c4 a018 	str.w	sl, [r4, #24]
 80077b6:	6126      	str	r6, [r4, #16]
 80077b8:	e796      	b.n	80076e8 <tcp_handle+0x130>
 80077ba:	4628      	mov	r0, r5
 80077bc:	492d      	ldr	r1, [pc, #180]	; (8007874 <tcp_handle+0x2bc>)
 80077be:	f008 fe6b 	bl	8010498 <_send_reset>
 80077c2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077c6:	3b04      	subs	r3, #4
 80077c8:	2b02      	cmp	r3, #2
 80077ca:	d830      	bhi.n	800782e <tcp_handle+0x276>
 80077cc:	f1b8 0f00 	cmp.w	r8, #0
 80077d0:	d02d      	beq.n	800782e <tcp_handle+0x276>
 80077d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077d4:	42bb      	cmp	r3, r7
 80077d6:	f040 8092 	bne.w	80078fe <tcp_handle+0x346>
 80077da:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077de:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800787c <tcp_handle+0x2c4>
 80077e2:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077e6:	f8ba 7000 	ldrh.w	r7, [sl]
 80077ea:	4642      	mov	r2, r8
 80077ec:	435f      	muls	r7, r3
 80077ee:	1d38      	adds	r0, r7, #4
 80077f0:	4449      	add	r1, r9
 80077f2:	4450      	add	r0, sl
 80077f4:	f008 fd72 	bl	80102dc <memcpy.isra.0>
 80077f8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077fc:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 8007800:	8722      	strh	r2, [r4, #56]	; 0x38
 8007802:	6962      	ldr	r2, [r4, #20]
 8007804:	4443      	add	r3, r8
 8007806:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800780a:	6363      	str	r3, [r4, #52]	; 0x34
 800780c:	2310      	movs	r3, #16
 800780e:	4457      	add	r7, sl
 8007810:	4818      	ldr	r0, [pc, #96]	; (8007874 <tcp_handle+0x2bc>)
 8007812:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 8007816:	a901      	add	r1, sp, #4
 8007818:	f88d 300c 	strb.w	r3, [sp, #12]
 800781c:	f008 fd8e 	bl	801033c <_tcp_send_package>
 8007820:	f8ba 3000 	ldrh.w	r3, [sl]
 8007824:	3301      	adds	r3, #1
 8007826:	f003 0301 	and.w	r3, r3, #1
 800782a:	f8aa 3000 	strh.w	r3, [sl]
 800782e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007832:	2b02      	cmp	r3, #2
 8007834:	f67f af29 	bls.w	800768a <tcp_handle+0xd2>
 8007838:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800783c:	07db      	lsls	r3, r3, #31
 800783e:	f57f af24 	bpl.w	800768a <tcp_handle+0xd2>
 8007842:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007844:	6962      	ldr	r2, [r4, #20]
 8007846:	3301      	adds	r3, #1
 8007848:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800784c:	6363      	str	r3, [r4, #52]	; 0x34
 800784e:	2310      	movs	r3, #16
 8007850:	4808      	ldr	r0, [pc, #32]	; (8007874 <tcp_handle+0x2bc>)
 8007852:	a901      	add	r1, sp, #4
 8007854:	f88d 300c 	strb.w	r3, [sp, #12]
 8007858:	f008 fd70 	bl	801033c <_tcp_send_package>
 800785c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007860:	2b05      	cmp	r3, #5
 8007862:	d054      	beq.n	800790e <tcp_handle+0x356>
 8007864:	d84e      	bhi.n	8007904 <tcp_handle+0x34c>
 8007866:	3b03      	subs	r3, #3
 8007868:	2b01      	cmp	r3, #1
 800786a:	f63f af0e 	bhi.w	800768a <tcp_handle+0xd2>
 800786e:	2307      	movs	r3, #7
 8007870:	e73a      	b.n	80076e8 <tcp_handle+0x130>
 8007872:	bf00      	nop
 8007874:	20005f34 	andcs	r5, r0, r4, lsr pc
 8007878:	20005f3c 	andcs	r5, r0, ip, lsr pc
 800787c:	200053c4 	andcs	r5, r0, r4, asr #7
 8007880:	6923      	ldr	r3, [r4, #16]
 8007882:	1b99      	subs	r1, r3, r6
 8007884:	d513      	bpl.n	80078ae <tcp_handle+0x2f6>
 8007886:	6962      	ldr	r2, [r4, #20]
 8007888:	1ab2      	subs	r2, r6, r2
 800788a:	2a00      	cmp	r2, #0
 800788c:	dc0f      	bgt.n	80078ae <tcp_handle+0x2f6>
 800788e:	6126      	str	r6, [r4, #16]
 8007890:	6a23      	ldr	r3, [r4, #32]
 8007892:	1bda      	subs	r2, r3, r7
 8007894:	2a00      	cmp	r2, #0
 8007896:	db05      	blt.n	80078a4 <tcp_handle+0x2ec>
 8007898:	42bb      	cmp	r3, r7
 800789a:	d192      	bne.n	80077c2 <tcp_handle+0x20a>
 800789c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800789e:	1b9b      	subs	r3, r3, r6
 80078a0:	2b00      	cmp	r3, #0
 80078a2:	dc8e      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80078a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80078ac:	e789      	b.n	80077c2 <tcp_handle+0x20a>
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc06      	bgt.n	80078c2 <tcp_handle+0x30a>
 80078b4:	2900      	cmp	r1, #0
 80078b6:	dc84      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078b8:	6963      	ldr	r3, [r4, #20]
 80078ba:	1af3      	subs	r3, r6, r3
 80078bc:	2b00      	cmp	r3, #0
 80078be:	dc80      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078c0:	e7e6      	b.n	8007890 <tcp_handle+0x2d8>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	1b9a      	subs	r2, r3, r6
 80078c6:	2a00      	cmp	r2, #0
 80078c8:	f6bf af7b 	bge.w	80077c2 <tcp_handle+0x20a>
 80078cc:	e744      	b.n	8007758 <tcp_handle+0x1a0>
 80078ce:	6963      	ldr	r3, [r4, #20]
 80078d0:	42b3      	cmp	r3, r6
 80078d2:	f47f af76 	bne.w	80077c2 <tcp_handle+0x20a>
 80078d6:	8821      	ldrh	r1, [r4, #0]
 80078d8:	480f      	ldr	r0, [pc, #60]	; (8007918 <tcp_handle+0x360>)
 80078da:	f008 fce5 	bl	80102a8 <_init_tcb>
 80078de:	e770      	b.n	80077c2 <tcp_handle+0x20a>
 80078e0:	6963      	ldr	r3, [r4, #20]
 80078e2:	42b3      	cmp	r3, r6
 80078e4:	f47f af6d 	bne.w	80077c2 <tcp_handle+0x20a>
 80078e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078ea:	480b      	ldr	r0, [pc, #44]	; (8007918 <tcp_handle+0x360>)
 80078ec:	9302      	str	r3, [sp, #8]
 80078ee:	2310      	movs	r3, #16
 80078f0:	a901      	add	r1, sp, #4
 80078f2:	9601      	str	r6, [sp, #4]
 80078f4:	f88d 300c 	strb.w	r3, [sp, #12]
 80078f8:	f008 fd20 	bl	801033c <_tcp_send_package>
 80078fc:	e761      	b.n	80077c2 <tcp_handle+0x20a>
 80078fe:	6962      	ldr	r2, [r4, #20]
 8007900:	9201      	str	r2, [sp, #4]
 8007902:	e72b      	b.n	800775c <tcp_handle+0x1a4>
 8007904:	2b06      	cmp	r3, #6
 8007906:	f47f aec0 	bne.w	800768a <tcp_handle+0xd2>
 800790a:	230a      	movs	r3, #10
 800790c:	e6ec      	b.n	80076e8 <tcp_handle+0x130>
 800790e:	6963      	ldr	r3, [r4, #20]
 8007910:	42b3      	cmp	r3, r6
 8007912:	d0fa      	beq.n	800790a <tcp_handle+0x352>
 8007914:	2308      	movs	r3, #8
 8007916:	e6e7      	b.n	80076e8 <tcp_handle+0x130>
 8007918:	20005f34 	andcs	r5, r0, r4, lsr pc

0800791c <udp_handle>:
 800791c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007920:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007922:	4607      	mov	r7, r0
 8007924:	ba5b      	rev16	r3, r3
 8007926:	b29b      	uxth	r3, r3
 8007928:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800792c:	2a01      	cmp	r2, #1
 800792e:	d904      	bls.n	800793a <udp_handle+0x1e>
 8007930:	2b7b      	cmp	r3, #123	; 0x7b
 8007932:	d002      	beq.n	800793a <udp_handle+0x1e>
 8007934:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007938:	d308      	bcc.n	800794c <udp_handle+0x30>
 800793a:	2400      	movs	r4, #0
 800793c:	4a1f      	ldr	r2, [pc, #124]	; (80079bc <udp_handle+0xa0>)
 800793e:	f852 1b04 	ldr.w	r1, [r2], #4
 8007942:	4299      	cmp	r1, r3
 8007944:	d005      	beq.n	8007952 <udp_handle+0x36>
 8007946:	3401      	adds	r4, #1
 8007948:	2c08      	cmp	r4, #8
 800794a:	d1f8      	bne.n	800793e <udp_handle+0x22>
 800794c:	b002      	add	sp, #8
 800794e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007952:	f640 3394 	movw	r3, #2964	; 0xb94
 8007956:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007958:	435c      	muls	r4, r3
 800795a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800795e:	ba76      	rev16	r6, r6
 8007960:	3e08      	subs	r6, #8
 8007962:	b2b6      	uxth	r6, r6
 8007964:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007968:	bf28      	it	cs
 800796a:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800796e:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079c0 <udp_handle+0xa4>
 8007972:	1d20      	adds	r0, r4, #4
 8007974:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007978:	4632      	mov	r2, r6
 800797a:	435d      	muls	r5, r3
 800797c:	4428      	add	r0, r5
 800797e:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007982:	4440      	add	r0, r8
 8007984:	f008 fe36 	bl	80105f4 <memcpy.isra.0>
 8007988:	2204      	movs	r2, #4
 800798a:	f107 011a 	add.w	r1, r7, #26
 800798e:	eb0d 0002 	add.w	r0, sp, r2
 8007992:	f008 fe2f 	bl	80105f4 <memcpy.isra.0>
 8007996:	9a01      	ldr	r2, [sp, #4]
 8007998:	192b      	adds	r3, r5, r4
 800799a:	4443      	add	r3, r8
 800799c:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80079a0:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80079a2:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80079a6:	ba52      	rev16	r2, r2
 80079a8:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079ac:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079b0:	3301      	adds	r3, #1
 80079b2:	f003 0301 	and.w	r3, r3, #1
 80079b6:	f828 3004 	strh.w	r3, [r8, r4]
 80079ba:	e7c7      	b.n	800794c <udp_handle+0x30>
 80079bc:	20006574 	andcs	r6, r0, r4, ror r5
 80079c0:	20006594 	mulcs	r0, r4, r5

080079c4 <arp_handle>:
 80079c4:	8a83      	ldrh	r3, [r0, #20]
 80079c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079ca:	d003      	beq.n	80079d4 <arp_handle+0x10>
 80079cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079d0:	d002      	beq.n	80079d8 <arp_handle+0x14>
 80079d2:	4770      	bx	lr
 80079d4:	f00a b8d6 	b.w	8011b84 <arp_handle_request>
 80079d8:	f00a b8fc 	b.w	8011bd4 <arp_handle_reply>

080079dc <igmp_handle>:
 80079dc:	7b83      	ldrb	r3, [r0, #14]
 80079de:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079e2:	2b45      	cmp	r3, #69	; 0x45
 80079e4:	d116      	bne.n	8007a14 <igmp_handle+0x38>
 80079e6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079ea:	2b11      	cmp	r3, #17
 80079ec:	d112      	bne.n	8007a14 <igmp_handle+0x38>
 80079ee:	4b20      	ldr	r3, [pc, #128]	; (8007a70 <igmp_handle+0x94>)
 80079f0:	f100 051e 	add.w	r5, r0, #30
 80079f4:	9300      	str	r3, [sp, #0]
 80079f6:	466a      	mov	r2, sp
 80079f8:	462b      	mov	r3, r5
 80079fa:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079fe:	42b3      	cmp	r3, r6
 8007a00:	d10b      	bne.n	8007a1a <igmp_handle+0x3e>
 8007a02:	2401      	movs	r4, #1
 8007a04:	2100      	movs	r1, #0
 8007a06:	f04f 0c01 	mov.w	ip, #1
 8007a0a:	4b1a      	ldr	r3, [pc, #104]	; (8007a74 <igmp_handle+0x98>)
 8007a0c:	4a1a      	ldr	r2, [pc, #104]	; (8007a78 <igmp_handle+0x9c>)
 8007a0e:	681f      	ldr	r7, [r3, #0]
 8007a10:	428f      	cmp	r7, r1
 8007a12:	d10a      	bne.n	8007a2a <igmp_handle+0x4e>
 8007a14:	b003      	add	sp, #12
 8007a16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a1a:	f813 4b01 	ldrb.w	r4, [r3], #1
 8007a1e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a22:	428c      	cmp	r4, r1
 8007a24:	d0eb      	beq.n	80079fe <igmp_handle+0x22>
 8007a26:	2400      	movs	r4, #0
 8007a28:	e7ec      	b.n	8007a04 <igmp_handle+0x28>
 8007a2a:	6813      	ldr	r3, [r2, #0]
 8007a2c:	9301      	str	r3, [sp, #4]
 8007a2e:	b924      	cbnz	r4, 8007a3a <igmp_handle+0x5e>
 8007a30:	462b      	mov	r3, r5
 8007a32:	f10d 0e04 	add.w	lr, sp, #4
 8007a36:	42b3      	cmp	r3, r6
 8007a38:	d10e      	bne.n	8007a58 <igmp_handle+0x7c>
 8007a3a:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a3e:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a42:	f1be 0f01 	cmp.w	lr, #1
 8007a46:	d110      	bne.n	8007a6a <igmp_handle+0x8e>
 8007a48:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a4c:	459e      	cmp	lr, r3
 8007a4e:	d909      	bls.n	8007a64 <igmp_handle+0x88>
 8007a50:	085b      	lsrs	r3, r3, #1
 8007a52:	3301      	adds	r3, #1
 8007a54:	7113      	strb	r3, [r2, #4]
 8007a56:	e005      	b.n	8007a64 <igmp_handle+0x88>
 8007a58:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a5c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a60:	45c1      	cmp	r9, r8
 8007a62:	d0e8      	beq.n	8007a36 <igmp_handle+0x5a>
 8007a64:	3101      	adds	r1, #1
 8007a66:	3208      	adds	r2, #8
 8007a68:	e7d2      	b.n	8007a10 <igmp_handle+0x34>
 8007a6a:	f882 c005 	strb.w	ip, [r2, #5]
 8007a6e:	e7ef      	b.n	8007a50 <igmp_handle+0x74>
 8007a70:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a74:	2000d224 	andcs	sp, r0, r4, lsr #4
 8007a78:	2000d100 	andcs	sp, r0, r0, lsl #2

08007a7c <ip_handle>:
 8007a7c:	7b82      	ldrb	r2, [r0, #14]
 8007a7e:	7dc3      	ldrb	r3, [r0, #23]
 8007a80:	2a45      	cmp	r2, #69	; 0x45
 8007a82:	d003      	beq.n	8007a8c <ip_handle+0x10>
 8007a84:	2b02      	cmp	r3, #2
 8007a86:	d111      	bne.n	8007aac <ip_handle+0x30>
 8007a88:	f7ff bfa8 	b.w	80079dc <igmp_handle>
 8007a8c:	2b06      	cmp	r3, #6
 8007a8e:	d00b      	beq.n	8007aa8 <ip_handle+0x2c>
 8007a90:	d804      	bhi.n	8007a9c <ip_handle+0x20>
 8007a92:	2b01      	cmp	r3, #1
 8007a94:	d006      	beq.n	8007aa4 <ip_handle+0x28>
 8007a96:	2b02      	cmp	r3, #2
 8007a98:	d0f6      	beq.n	8007a88 <ip_handle+0xc>
 8007a9a:	4770      	bx	lr
 8007a9c:	2b11      	cmp	r3, #17
 8007a9e:	d105      	bne.n	8007aac <ip_handle+0x30>
 8007aa0:	f7ff bf3c 	b.w	800791c <udp_handle>
 8007aa4:	f000 b804 	b.w	8007ab0 <icmp_handle>
 8007aa8:	f7ff bd86 	b.w	80075b8 <tcp_handle>
 8007aac:	4770      	bx	lr
	...

08007ab0 <icmp_handle>:
 8007ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007ab2:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007ab6:	4604      	mov	r4, r0
 8007ab8:	2b08      	cmp	r3, #8
 8007aba:	d13e      	bne.n	8007b3a <icmp_handle+0x8a>
 8007abc:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ac0:	2d00      	cmp	r5, #0
 8007ac2:	d13a      	bne.n	8007b3a <icmp_handle+0x8a>
 8007ac4:	1d86      	adds	r6, r0, #6
 8007ac6:	4631      	mov	r1, r6
 8007ac8:	2206      	movs	r2, #6
 8007aca:	f00a fc1b 	bl	8012304 <memcpy.isra.0>
 8007ace:	4630      	mov	r0, r6
 8007ad0:	2206      	movs	r2, #6
 8007ad2:	491b      	ldr	r1, [pc, #108]	; (8007b40 <icmp_handle+0x90>)
 8007ad4:	f00a fc16 	bl	8012304 <memcpy.isra.0>
 8007ad8:	8a63      	ldrh	r3, [r4, #18]
 8007ada:	f104 061a 	add.w	r6, r4, #26
 8007ade:	43db      	mvns	r3, r3
 8007ae0:	4631      	mov	r1, r6
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	8263      	strh	r3, [r4, #18]
 8007ae6:	f104 001e 	add.w	r0, r4, #30
 8007aea:	f00a fc0b 	bl	8012304 <memcpy.isra.0>
 8007aee:	2204      	movs	r2, #4
 8007af0:	4b14      	ldr	r3, [pc, #80]	; (8007b44 <icmp_handle+0x94>)
 8007af2:	eb0d 0102 	add.w	r1, sp, r2
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	4630      	mov	r0, r6
 8007afa:	f104 060e 	add.w	r6, r4, #14
 8007afe:	9301      	str	r3, [sp, #4]
 8007b00:	f00a fc00 	bl	8012304 <memcpy.isra.0>
 8007b04:	2114      	movs	r1, #20
 8007b06:	4630      	mov	r0, r6
 8007b08:	7625      	strb	r5, [r4, #24]
 8007b0a:	7665      	strb	r5, [r4, #25]
 8007b0c:	f00a fbdd 	bl	80122ca <net_chksum>
 8007b10:	8a21      	ldrh	r1, [r4, #16]
 8007b12:	8320      	strh	r0, [r4, #24]
 8007b14:	ba49      	rev16	r1, r1
 8007b16:	b289      	uxth	r1, r1
 8007b18:	4630      	mov	r0, r6
 8007b1a:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b1e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b22:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b26:	f00a fbd0 	bl	80122ca <net_chksum>
 8007b2a:	8a21      	ldrh	r1, [r4, #16]
 8007b2c:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b2e:	ba49      	rev16	r1, r1
 8007b30:	b289      	uxth	r1, r1
 8007b32:	4620      	mov	r0, r4
 8007b34:	310e      	adds	r1, #14
 8007b36:	f00d fc0f 	bl	8015358 <emac_eth_send>
 8007b3a:	b002      	add	sp, #8
 8007b3c:	bd70      	pop	{r4, r5, r6, pc}
 8007b3e:	bf00      	nop
 8007b40:	200053a4 	andcs	r5, r0, r4, lsr #7
 8007b44:	20005398 	mulcs	r0, r8, r3

08007b48 <__aeabi_drsub>:
 8007b48:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007b4c:	e002      	b.n	8007b54 <__adddf3>
 8007b4e:	bf00      	nop

08007b50 <__aeabi_dsub>:
 8007b50:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007b54 <__adddf3>:
 8007b54:	b530      	push	{r4, r5, lr}
 8007b56:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007b5a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007b5e:	ea94 0f05 	teq	r4, r5
 8007b62:	bf08      	it	eq
 8007b64:	ea90 0f02 	teqeq	r0, r2
 8007b68:	bf1f      	itttt	ne
 8007b6a:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007b6e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007b72:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007b76:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007b7a:	f000 80e2 	beq.w	8007d42 <__adddf3+0x1ee>
 8007b7e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007b82:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007b86:	bfb8      	it	lt
 8007b88:	426d      	neglt	r5, r5
 8007b8a:	dd0c      	ble.n	8007ba6 <__adddf3+0x52>
 8007b8c:	442c      	add	r4, r5
 8007b8e:	ea80 0202 	eor.w	r2, r0, r2
 8007b92:	ea81 0303 	eor.w	r3, r1, r3
 8007b96:	ea82 0000 	eor.w	r0, r2, r0
 8007b9a:	ea83 0101 	eor.w	r1, r3, r1
 8007b9e:	ea80 0202 	eor.w	r2, r0, r2
 8007ba2:	ea81 0303 	eor.w	r3, r1, r3
 8007ba6:	2d36      	cmp	r5, #54	; 0x36
 8007ba8:	bf88      	it	hi
 8007baa:	bd30      	pophi	{r4, r5, pc}
 8007bac:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bb0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007bb4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007bb8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007bbc:	d002      	beq.n	8007bc4 <__adddf3+0x70>
 8007bbe:	4240      	negs	r0, r0
 8007bc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007bc4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007bc8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007bcc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007bd0:	d002      	beq.n	8007bd8 <__adddf3+0x84>
 8007bd2:	4252      	negs	r2, r2
 8007bd4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007bd8:	ea94 0f05 	teq	r4, r5
 8007bdc:	f000 80a7 	beq.w	8007d2e <__adddf3+0x1da>
 8007be0:	f1a4 0401 	sub.w	r4, r4, #1
 8007be4:	f1d5 0e20 	rsbs	lr, r5, #32
 8007be8:	db0d      	blt.n	8007c06 <__adddf3+0xb2>
 8007bea:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007bee:	fa22 f205 	lsr.w	r2, r2, r5
 8007bf2:	1880      	adds	r0, r0, r2
 8007bf4:	f141 0100 	adc.w	r1, r1, #0
 8007bf8:	fa03 f20e 	lsl.w	r2, r3, lr
 8007bfc:	1880      	adds	r0, r0, r2
 8007bfe:	fa43 f305 	asr.w	r3, r3, r5
 8007c02:	4159      	adcs	r1, r3
 8007c04:	e00e      	b.n	8007c24 <__adddf3+0xd0>
 8007c06:	f1a5 0520 	sub.w	r5, r5, #32
 8007c0a:	f10e 0e20 	add.w	lr, lr, #32
 8007c0e:	2a01      	cmp	r2, #1
 8007c10:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007c14:	bf28      	it	cs
 8007c16:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007c1a:	fa43 f305 	asr.w	r3, r3, r5
 8007c1e:	18c0      	adds	r0, r0, r3
 8007c20:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007c24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007c28:	d507      	bpl.n	8007c3a <__adddf3+0xe6>
 8007c2a:	f04f 0e00 	mov.w	lr, #0
 8007c2e:	f1dc 0c00 	rsbs	ip, ip, #0
 8007c32:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007c36:	eb6e 0101 	sbc.w	r1, lr, r1
 8007c3a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007c3e:	d31b      	bcc.n	8007c78 <__adddf3+0x124>
 8007c40:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8007c44:	d30c      	bcc.n	8007c60 <__adddf3+0x10c>
 8007c46:	0849      	lsrs	r1, r1, #1
 8007c48:	ea5f 0030 	movs.w	r0, r0, rrx
 8007c4c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8007c50:	f104 0401 	add.w	r4, r4, #1
 8007c54:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8007c58:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8007c5c:	f080 809a 	bcs.w	8007d94 <__adddf3+0x240>
 8007c60:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007c64:	bf08      	it	eq
 8007c66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8007c6a:	f150 0000 	adcs.w	r0, r0, #0
 8007c6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8007c72:	ea41 0105 	orr.w	r1, r1, r5
 8007c76:	bd30      	pop	{r4, r5, pc}
 8007c78:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8007c7c:	4140      	adcs	r0, r0
 8007c7e:	eb41 0101 	adc.w	r1, r1, r1
 8007c82:	3c01      	subs	r4, #1
 8007c84:	bf28      	it	cs
 8007c86:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8007c8a:	d2e9      	bcs.n	8007c60 <__adddf3+0x10c>
 8007c8c:	f091 0f00 	teq	r1, #0
 8007c90:	bf04      	itt	eq
 8007c92:	4601      	moveq	r1, r0
 8007c94:	2000      	moveq	r0, #0
 8007c96:	fab1 f381 	clz	r3, r1
 8007c9a:	bf08      	it	eq
 8007c9c:	3320      	addeq	r3, #32
 8007c9e:	f1a3 030b 	sub.w	r3, r3, #11
 8007ca2:	f1b3 0220 	subs.w	r2, r3, #32
 8007ca6:	da0c      	bge.n	8007cc2 <__adddf3+0x16e>
 8007ca8:	320c      	adds	r2, #12
 8007caa:	dd08      	ble.n	8007cbe <__adddf3+0x16a>
 8007cac:	f102 0c14 	add.w	ip, r2, #20
 8007cb0:	f1c2 020c 	rsb	r2, r2, #12
 8007cb4:	fa01 f00c 	lsl.w	r0, r1, ip
 8007cb8:	fa21 f102 	lsr.w	r1, r1, r2
 8007cbc:	e00c      	b.n	8007cd8 <__adddf3+0x184>
 8007cbe:	f102 0214 	add.w	r2, r2, #20
 8007cc2:	bfd8      	it	le
 8007cc4:	f1c2 0c20 	rsble	ip, r2, #32
 8007cc8:	fa01 f102 	lsl.w	r1, r1, r2
 8007ccc:	fa20 fc0c 	lsr.w	ip, r0, ip
 8007cd0:	bfdc      	itt	le
 8007cd2:	ea41 010c 	orrle.w	r1, r1, ip
 8007cd6:	4090      	lslle	r0, r2
 8007cd8:	1ae4      	subs	r4, r4, r3
 8007cda:	bfa2      	ittt	ge
 8007cdc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8007ce0:	4329      	orrge	r1, r5
 8007ce2:	bd30      	popge	{r4, r5, pc}
 8007ce4:	ea6f 0404 	mvn.w	r4, r4
 8007ce8:	3c1f      	subs	r4, #31
 8007cea:	da1c      	bge.n	8007d26 <__adddf3+0x1d2>
 8007cec:	340c      	adds	r4, #12
 8007cee:	dc0e      	bgt.n	8007d0e <__adddf3+0x1ba>
 8007cf0:	f104 0414 	add.w	r4, r4, #20
 8007cf4:	f1c4 0220 	rsb	r2, r4, #32
 8007cf8:	fa20 f004 	lsr.w	r0, r0, r4
 8007cfc:	fa01 f302 	lsl.w	r3, r1, r2
 8007d00:	ea40 0003 	orr.w	r0, r0, r3
 8007d04:	fa21 f304 	lsr.w	r3, r1, r4
 8007d08:	ea45 0103 	orr.w	r1, r5, r3
 8007d0c:	bd30      	pop	{r4, r5, pc}
 8007d0e:	f1c4 040c 	rsb	r4, r4, #12
 8007d12:	f1c4 0220 	rsb	r2, r4, #32
 8007d16:	fa20 f002 	lsr.w	r0, r0, r2
 8007d1a:	fa01 f304 	lsl.w	r3, r1, r4
 8007d1e:	ea40 0003 	orr.w	r0, r0, r3
 8007d22:	4629      	mov	r1, r5
 8007d24:	bd30      	pop	{r4, r5, pc}
 8007d26:	fa21 f004 	lsr.w	r0, r1, r4
 8007d2a:	4629      	mov	r1, r5
 8007d2c:	bd30      	pop	{r4, r5, pc}
 8007d2e:	f094 0f00 	teq	r4, #0
 8007d32:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007d36:	bf06      	itte	eq
 8007d38:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007d3c:	3401      	addeq	r4, #1
 8007d3e:	3d01      	subne	r5, #1
 8007d40:	e74e      	b.n	8007be0 <__adddf3+0x8c>
 8007d42:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007d46:	bf18      	it	ne
 8007d48:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007d4c:	d029      	beq.n	8007da2 <__adddf3+0x24e>
 8007d4e:	ea94 0f05 	teq	r4, r5
 8007d52:	bf08      	it	eq
 8007d54:	ea90 0f02 	teqeq	r0, r2
 8007d58:	d005      	beq.n	8007d66 <__adddf3+0x212>
 8007d5a:	ea54 0c00 	orrs.w	ip, r4, r0
 8007d5e:	bf04      	itt	eq
 8007d60:	4619      	moveq	r1, r3
 8007d62:	4610      	moveq	r0, r2
 8007d64:	bd30      	pop	{r4, r5, pc}
 8007d66:	ea91 0f03 	teq	r1, r3
 8007d6a:	bf1e      	ittt	ne
 8007d6c:	2100      	movne	r1, #0
 8007d6e:	2000      	movne	r0, #0
 8007d70:	bd30      	popne	{r4, r5, pc}
 8007d72:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007d76:	d105      	bne.n	8007d84 <__adddf3+0x230>
 8007d78:	0040      	lsls	r0, r0, #1
 8007d7a:	4149      	adcs	r1, r1
 8007d7c:	bf28      	it	cs
 8007d7e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8007d82:	bd30      	pop	{r4, r5, pc}
 8007d84:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007d88:	bf3c      	itt	cc
 8007d8a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007d8e:	bd30      	popcc	{r4, r5, pc}
 8007d90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007d94:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007d98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007d9c:	f04f 0000 	mov.w	r0, #0
 8007da0:	bd30      	pop	{r4, r5, pc}
 8007da2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007da6:	bf1a      	itte	ne
 8007da8:	4619      	movne	r1, r3
 8007daa:	4610      	movne	r0, r2
 8007dac:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007db0:	bf1c      	itt	ne
 8007db2:	460b      	movne	r3, r1
 8007db4:	4602      	movne	r2, r0
 8007db6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007dba:	bf06      	itte	eq
 8007dbc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007dc0:	ea91 0f03 	teqeq	r1, r3
 8007dc4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007dc8:	bd30      	pop	{r4, r5, pc}
 8007dca:	bf00      	nop

08007dcc <__aeabi_ui2d>:
 8007dcc:	f090 0f00 	teq	r0, #0
 8007dd0:	bf04      	itt	eq
 8007dd2:	2100      	moveq	r1, #0
 8007dd4:	4770      	bxeq	lr
 8007dd6:	b530      	push	{r4, r5, lr}
 8007dd8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007ddc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007de0:	f04f 0500 	mov.w	r5, #0
 8007de4:	f04f 0100 	mov.w	r1, #0
 8007de8:	e750      	b.n	8007c8c <__adddf3+0x138>
 8007dea:	bf00      	nop

08007dec <__aeabi_i2d>:
 8007dec:	f090 0f00 	teq	r0, #0
 8007df0:	bf04      	itt	eq
 8007df2:	2100      	moveq	r1, #0
 8007df4:	4770      	bxeq	lr
 8007df6:	b530      	push	{r4, r5, lr}
 8007df8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007dfc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007e00:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007e04:	bf48      	it	mi
 8007e06:	4240      	negmi	r0, r0
 8007e08:	f04f 0100 	mov.w	r1, #0
 8007e0c:	e73e      	b.n	8007c8c <__adddf3+0x138>
 8007e0e:	bf00      	nop

08007e10 <__aeabi_f2d>:
 8007e10:	0042      	lsls	r2, r0, #1
 8007e12:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007e16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007e1a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8007e1e:	bf1f      	itttt	ne
 8007e20:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007e24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007e28:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007e2c:	4770      	bxne	lr
 8007e2e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007e32:	bf08      	it	eq
 8007e34:	4770      	bxeq	lr
 8007e36:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007e3a:	bf04      	itt	eq
 8007e3c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007e40:	4770      	bxeq	lr
 8007e42:	b530      	push	{r4, r5, lr}
 8007e44:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007e48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007e4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007e50:	e71c      	b.n	8007c8c <__adddf3+0x138>
 8007e52:	bf00      	nop

08007e54 <__aeabi_ul2d>:
 8007e54:	ea50 0201 	orrs.w	r2, r0, r1
 8007e58:	bf08      	it	eq
 8007e5a:	4770      	bxeq	lr
 8007e5c:	b530      	push	{r4, r5, lr}
 8007e5e:	f04f 0500 	mov.w	r5, #0
 8007e62:	e00a      	b.n	8007e7a <__aeabi_l2d+0x16>

08007e64 <__aeabi_l2d>:
 8007e64:	ea50 0201 	orrs.w	r2, r0, r1
 8007e68:	bf08      	it	eq
 8007e6a:	4770      	bxeq	lr
 8007e6c:	b530      	push	{r4, r5, lr}
 8007e6e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007e72:	d502      	bpl.n	8007e7a <__aeabi_l2d+0x16>
 8007e74:	4240      	negs	r0, r0
 8007e76:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007e7a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007e7e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007e82:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007e86:	f43f aed8 	beq.w	8007c3a <__adddf3+0xe6>
 8007e8a:	f04f 0203 	mov.w	r2, #3
 8007e8e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007e92:	bf18      	it	ne
 8007e94:	3203      	addne	r2, #3
 8007e96:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007e9a:	bf18      	it	ne
 8007e9c:	3203      	addne	r2, #3
 8007e9e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007ea2:	f1c2 0320 	rsb	r3, r2, #32
 8007ea6:	fa00 fc03 	lsl.w	ip, r0, r3
 8007eaa:	fa20 f002 	lsr.w	r0, r0, r2
 8007eae:	fa01 fe03 	lsl.w	lr, r1, r3
 8007eb2:	ea40 000e 	orr.w	r0, r0, lr
 8007eb6:	fa21 f102 	lsr.w	r1, r1, r2
 8007eba:	4414      	add	r4, r2
 8007ebc:	e6bd      	b.n	8007c3a <__adddf3+0xe6>
 8007ebe:	bf00      	nop

08007ec0 <__aeabi_d2f>:
 8007ec0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ec4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007ec8:	bf24      	itt	cs
 8007eca:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007ece:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007ed2:	d90d      	bls.n	8007ef0 <__aeabi_d2f+0x30>
 8007ed4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007ed8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007edc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007ee0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007ee4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007ee8:	bf08      	it	eq
 8007eea:	f020 0001 	biceq.w	r0, r0, #1
 8007eee:	4770      	bx	lr
 8007ef0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007ef4:	d121      	bne.n	8007f3a <__aeabi_d2f+0x7a>
 8007ef6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007efa:	bfbc      	itt	lt
 8007efc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007f00:	4770      	bxlt	lr
 8007f02:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007f06:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007f0a:	f1c2 0218 	rsb	r2, r2, #24
 8007f0e:	f1c2 0c20 	rsb	ip, r2, #32
 8007f12:	fa10 f30c 	lsls.w	r3, r0, ip
 8007f16:	fa20 f002 	lsr.w	r0, r0, r2
 8007f1a:	bf18      	it	ne
 8007f1c:	f040 0001 	orrne.w	r0, r0, #1
 8007f20:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007f24:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007f28:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007f2c:	ea40 000c 	orr.w	r0, r0, ip
 8007f30:	fa23 f302 	lsr.w	r3, r3, r2
 8007f34:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007f38:	e7cc      	b.n	8007ed4 <__aeabi_d2f+0x14>
 8007f3a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007f3e:	d107      	bne.n	8007f50 <__aeabi_d2f+0x90>
 8007f40:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007f44:	bf1e      	ittt	ne
 8007f46:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007f4a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007f4e:	4770      	bxne	lr
 8007f50:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007f54:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007f58:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007f5c:	4770      	bx	lr
 8007f5e:	bf00      	nop

08007f60 <__aeabi_frsub>:
 8007f60:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007f64:	e002      	b.n	8007f6c <__addsf3>
 8007f66:	bf00      	nop

08007f68 <__aeabi_fsub>:
 8007f68:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007f6c <__addsf3>:
 8007f6c:	0042      	lsls	r2, r0, #1
 8007f6e:	bf1f      	itttt	ne
 8007f70:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007f74:	ea92 0f03 	teqne	r2, r3
 8007f78:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007f7c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007f80:	d06a      	beq.n	8008058 <__addsf3+0xec>
 8007f82:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007f86:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007f8a:	bfc1      	itttt	gt
 8007f8c:	18d2      	addgt	r2, r2, r3
 8007f8e:	4041      	eorgt	r1, r0
 8007f90:	4048      	eorgt	r0, r1
 8007f92:	4041      	eorgt	r1, r0
 8007f94:	bfb8      	it	lt
 8007f96:	425b      	neglt	r3, r3
 8007f98:	2b19      	cmp	r3, #25
 8007f9a:	bf88      	it	hi
 8007f9c:	4770      	bxhi	lr
 8007f9e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007fa2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007fa6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007faa:	bf18      	it	ne
 8007fac:	4240      	negne	r0, r0
 8007fae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fb2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007fb6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007fba:	bf18      	it	ne
 8007fbc:	4249      	negne	r1, r1
 8007fbe:	ea92 0f03 	teq	r2, r3
 8007fc2:	d03f      	beq.n	8008044 <__addsf3+0xd8>
 8007fc4:	f1a2 0201 	sub.w	r2, r2, #1
 8007fc8:	fa41 fc03 	asr.w	ip, r1, r3
 8007fcc:	eb10 000c 	adds.w	r0, r0, ip
 8007fd0:	f1c3 0320 	rsb	r3, r3, #32
 8007fd4:	fa01 f103 	lsl.w	r1, r1, r3
 8007fd8:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007fdc:	d502      	bpl.n	8007fe4 <__addsf3+0x78>
 8007fde:	4249      	negs	r1, r1
 8007fe0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007fe4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007fe8:	d313      	bcc.n	8008012 <__addsf3+0xa6>
 8007fea:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007fee:	d306      	bcc.n	8007ffe <__addsf3+0x92>
 8007ff0:	0840      	lsrs	r0, r0, #1
 8007ff2:	ea4f 0131 	mov.w	r1, r1, rrx
 8007ff6:	f102 0201 	add.w	r2, r2, #1
 8007ffa:	2afe      	cmp	r2, #254	; 0xfe
 8007ffc:	d251      	bcs.n	80080a2 <__addsf3+0x136>
 8007ffe:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8008002:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8008006:	bf08      	it	eq
 8008008:	f020 0001 	biceq.w	r0, r0, #1
 800800c:	ea40 0003 	orr.w	r0, r0, r3
 8008010:	4770      	bx	lr
 8008012:	0049      	lsls	r1, r1, #1
 8008014:	eb40 0000 	adc.w	r0, r0, r0
 8008018:	3a01      	subs	r2, #1
 800801a:	bf28      	it	cs
 800801c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8008020:	d2ed      	bcs.n	8007ffe <__addsf3+0x92>
 8008022:	fab0 fc80 	clz	ip, r0
 8008026:	f1ac 0c08 	sub.w	ip, ip, #8
 800802a:	ebb2 020c 	subs.w	r2, r2, ip
 800802e:	fa00 f00c 	lsl.w	r0, r0, ip
 8008032:	bfaa      	itet	ge
 8008034:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8008038:	4252      	neglt	r2, r2
 800803a:	4318      	orrge	r0, r3
 800803c:	bfbc      	itt	lt
 800803e:	40d0      	lsrlt	r0, r2
 8008040:	4318      	orrlt	r0, r3
 8008042:	4770      	bx	lr
 8008044:	f092 0f00 	teq	r2, #0
 8008048:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 800804c:	bf06      	itte	eq
 800804e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8008052:	3201      	addeq	r2, #1
 8008054:	3b01      	subne	r3, #1
 8008056:	e7b5      	b.n	8007fc4 <__addsf3+0x58>
 8008058:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800805c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008060:	bf18      	it	ne
 8008062:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8008066:	d021      	beq.n	80080ac <__addsf3+0x140>
 8008068:	ea92 0f03 	teq	r2, r3
 800806c:	d004      	beq.n	8008078 <__addsf3+0x10c>
 800806e:	f092 0f00 	teq	r2, #0
 8008072:	bf08      	it	eq
 8008074:	4608      	moveq	r0, r1
 8008076:	4770      	bx	lr
 8008078:	ea90 0f01 	teq	r0, r1
 800807c:	bf1c      	itt	ne
 800807e:	2000      	movne	r0, #0
 8008080:	4770      	bxne	lr
 8008082:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8008086:	d104      	bne.n	8008092 <__addsf3+0x126>
 8008088:	0040      	lsls	r0, r0, #1
 800808a:	bf28      	it	cs
 800808c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8008090:	4770      	bx	lr
 8008092:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8008096:	bf3c      	itt	cc
 8008098:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 800809c:	4770      	bxcc	lr
 800809e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80080a2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80080a6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80080aa:	4770      	bx	lr
 80080ac:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80080b0:	bf16      	itet	ne
 80080b2:	4608      	movne	r0, r1
 80080b4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80080b8:	4601      	movne	r1, r0
 80080ba:	0242      	lsls	r2, r0, #9
 80080bc:	bf06      	itte	eq
 80080be:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80080c2:	ea90 0f01 	teqeq	r0, r1
 80080c6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80080ca:	4770      	bx	lr

080080cc <__aeabi_ui2f>:
 80080cc:	f04f 0300 	mov.w	r3, #0
 80080d0:	e004      	b.n	80080dc <__aeabi_i2f+0x8>
 80080d2:	bf00      	nop

080080d4 <__aeabi_i2f>:
 80080d4:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80080d8:	bf48      	it	mi
 80080da:	4240      	negmi	r0, r0
 80080dc:	ea5f 0c00 	movs.w	ip, r0
 80080e0:	bf08      	it	eq
 80080e2:	4770      	bxeq	lr
 80080e4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80080e8:	4601      	mov	r1, r0
 80080ea:	f04f 0000 	mov.w	r0, #0
 80080ee:	e01c      	b.n	800812a <__aeabi_l2f+0x2a>

080080f0 <__aeabi_ul2f>:
 80080f0:	ea50 0201 	orrs.w	r2, r0, r1
 80080f4:	bf08      	it	eq
 80080f6:	4770      	bxeq	lr
 80080f8:	f04f 0300 	mov.w	r3, #0
 80080fc:	e00a      	b.n	8008114 <__aeabi_l2f+0x14>
 80080fe:	bf00      	nop

08008100 <__aeabi_l2f>:
 8008100:	ea50 0201 	orrs.w	r2, r0, r1
 8008104:	bf08      	it	eq
 8008106:	4770      	bxeq	lr
 8008108:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800810c:	d502      	bpl.n	8008114 <__aeabi_l2f+0x14>
 800810e:	4240      	negs	r0, r0
 8008110:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008114:	ea5f 0c01 	movs.w	ip, r1
 8008118:	bf02      	ittt	eq
 800811a:	4684      	moveq	ip, r0
 800811c:	4601      	moveq	r1, r0
 800811e:	2000      	moveq	r0, #0
 8008120:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8008124:	bf08      	it	eq
 8008126:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800812a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800812e:	fabc f28c 	clz	r2, ip
 8008132:	3a08      	subs	r2, #8
 8008134:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8008138:	db10      	blt.n	800815c <__aeabi_l2f+0x5c>
 800813a:	fa01 fc02 	lsl.w	ip, r1, r2
 800813e:	4463      	add	r3, ip
 8008140:	fa00 fc02 	lsl.w	ip, r0, r2
 8008144:	f1c2 0220 	rsb	r2, r2, #32
 8008148:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800814c:	fa20 f202 	lsr.w	r2, r0, r2
 8008150:	eb43 0002 	adc.w	r0, r3, r2
 8008154:	bf08      	it	eq
 8008156:	f020 0001 	biceq.w	r0, r0, #1
 800815a:	4770      	bx	lr
 800815c:	f102 0220 	add.w	r2, r2, #32
 8008160:	fa01 fc02 	lsl.w	ip, r1, r2
 8008164:	f1c2 0220 	rsb	r2, r2, #32
 8008168:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800816c:	fa21 f202 	lsr.w	r2, r1, r2
 8008170:	eb43 0002 	adc.w	r0, r3, r2
 8008174:	bf08      	it	eq
 8008176:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800817a:	4770      	bx	lr

0800817c <__aeabi_fmul>:
 800817c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008180:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8008184:	bf1e      	ittt	ne
 8008186:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800818a:	ea92 0f0c 	teqne	r2, ip
 800818e:	ea93 0f0c 	teqne	r3, ip
 8008192:	d06f      	beq.n	8008274 <__aeabi_fmul+0xf8>
 8008194:	441a      	add	r2, r3
 8008196:	ea80 0c01 	eor.w	ip, r0, r1
 800819a:	0240      	lsls	r0, r0, #9
 800819c:	bf18      	it	ne
 800819e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80081a2:	d01e      	beq.n	80081e2 <__aeabi_fmul+0x66>
 80081a4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80081a8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80081ac:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80081b0:	fba0 3101 	umull	r3, r1, r0, r1
 80081b4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80081b8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80081bc:	bf3e      	ittt	cc
 80081be:	0049      	lslcc	r1, r1, #1
 80081c0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80081c4:	005b      	lslcc	r3, r3, #1
 80081c6:	ea40 0001 	orr.w	r0, r0, r1
 80081ca:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80081ce:	2afd      	cmp	r2, #253	; 0xfd
 80081d0:	d81d      	bhi.n	800820e <__aeabi_fmul+0x92>
 80081d2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80081d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80081da:	bf08      	it	eq
 80081dc:	f020 0001 	biceq.w	r0, r0, #1
 80081e0:	4770      	bx	lr
 80081e2:	f090 0f00 	teq	r0, #0
 80081e6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80081ea:	bf08      	it	eq
 80081ec:	0249      	lsleq	r1, r1, #9
 80081ee:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80081f2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80081f6:	3a7f      	subs	r2, #127	; 0x7f
 80081f8:	bfc2      	ittt	gt
 80081fa:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80081fe:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008202:	4770      	bxgt	lr
 8008204:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008208:	f04f 0300 	mov.w	r3, #0
 800820c:	3a01      	subs	r2, #1
 800820e:	dc5d      	bgt.n	80082cc <__aeabi_fmul+0x150>
 8008210:	f112 0f19 	cmn.w	r2, #25
 8008214:	bfdc      	itt	le
 8008216:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800821a:	4770      	bxle	lr
 800821c:	f1c2 0200 	rsb	r2, r2, #0
 8008220:	0041      	lsls	r1, r0, #1
 8008222:	fa21 f102 	lsr.w	r1, r1, r2
 8008226:	f1c2 0220 	rsb	r2, r2, #32
 800822a:	fa00 fc02 	lsl.w	ip, r0, r2
 800822e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008232:	f140 0000 	adc.w	r0, r0, #0
 8008236:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800823a:	bf08      	it	eq
 800823c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008240:	4770      	bx	lr
 8008242:	f092 0f00 	teq	r2, #0
 8008246:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800824a:	bf02      	ittt	eq
 800824c:	0040      	lsleq	r0, r0, #1
 800824e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8008252:	3a01      	subeq	r2, #1
 8008254:	d0f9      	beq.n	800824a <__aeabi_fmul+0xce>
 8008256:	ea40 000c 	orr.w	r0, r0, ip
 800825a:	f093 0f00 	teq	r3, #0
 800825e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008262:	bf02      	ittt	eq
 8008264:	0049      	lsleq	r1, r1, #1
 8008266:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800826a:	3b01      	subeq	r3, #1
 800826c:	d0f9      	beq.n	8008262 <__aeabi_fmul+0xe6>
 800826e:	ea41 010c 	orr.w	r1, r1, ip
 8008272:	e78f      	b.n	8008194 <__aeabi_fmul+0x18>
 8008274:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008278:	ea92 0f0c 	teq	r2, ip
 800827c:	bf18      	it	ne
 800827e:	ea93 0f0c 	teqne	r3, ip
 8008282:	d00a      	beq.n	800829a <__aeabi_fmul+0x11e>
 8008284:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008288:	bf18      	it	ne
 800828a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800828e:	d1d8      	bne.n	8008242 <__aeabi_fmul+0xc6>
 8008290:	ea80 0001 	eor.w	r0, r0, r1
 8008294:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008298:	4770      	bx	lr
 800829a:	f090 0f00 	teq	r0, #0
 800829e:	bf17      	itett	ne
 80082a0:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80082a4:	4608      	moveq	r0, r1
 80082a6:	f091 0f00 	teqne	r1, #0
 80082aa:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80082ae:	d014      	beq.n	80082da <__aeabi_fmul+0x15e>
 80082b0:	ea92 0f0c 	teq	r2, ip
 80082b4:	d101      	bne.n	80082ba <__aeabi_fmul+0x13e>
 80082b6:	0242      	lsls	r2, r0, #9
 80082b8:	d10f      	bne.n	80082da <__aeabi_fmul+0x15e>
 80082ba:	ea93 0f0c 	teq	r3, ip
 80082be:	d103      	bne.n	80082c8 <__aeabi_fmul+0x14c>
 80082c0:	024b      	lsls	r3, r1, #9
 80082c2:	bf18      	it	ne
 80082c4:	4608      	movne	r0, r1
 80082c6:	d108      	bne.n	80082da <__aeabi_fmul+0x15e>
 80082c8:	ea80 0001 	eor.w	r0, r0, r1
 80082cc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80082d0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80082d4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80082d8:	4770      	bx	lr
 80082da:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80082de:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80082e2:	4770      	bx	lr

080082e4 <__aeabi_fdiv>:
 80082e4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082ec:	bf1e      	ittt	ne
 80082ee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082f2:	ea92 0f0c 	teqne	r2, ip
 80082f6:	ea93 0f0c 	teqne	r3, ip
 80082fa:	d069      	beq.n	80083d0 <__aeabi_fdiv+0xec>
 80082fc:	eba2 0203 	sub.w	r2, r2, r3
 8008300:	ea80 0c01 	eor.w	ip, r0, r1
 8008304:	0249      	lsls	r1, r1, #9
 8008306:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800830a:	d037      	beq.n	800837c <__aeabi_fdiv+0x98>
 800830c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008310:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008314:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008318:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800831c:	428b      	cmp	r3, r1
 800831e:	bf38      	it	cc
 8008320:	005b      	lslcc	r3, r3, #1
 8008322:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008326:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800832a:	428b      	cmp	r3, r1
 800832c:	bf24      	itt	cs
 800832e:	1a5b      	subcs	r3, r3, r1
 8008330:	ea40 000c 	orrcs.w	r0, r0, ip
 8008334:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008338:	bf24      	itt	cs
 800833a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800833e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8008342:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8008346:	bf24      	itt	cs
 8008348:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800834c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008350:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8008354:	bf24      	itt	cs
 8008356:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800835a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800835e:	011b      	lsls	r3, r3, #4
 8008360:	bf18      	it	ne
 8008362:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8008366:	d1e0      	bne.n	800832a <__aeabi_fdiv+0x46>
 8008368:	2afd      	cmp	r2, #253	; 0xfd
 800836a:	f63f af50 	bhi.w	800820e <__aeabi_fmul+0x92>
 800836e:	428b      	cmp	r3, r1
 8008370:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8008374:	bf08      	it	eq
 8008376:	f020 0001 	biceq.w	r0, r0, #1
 800837a:	4770      	bx	lr
 800837c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008380:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008384:	327f      	adds	r2, #127	; 0x7f
 8008386:	bfc2      	ittt	gt
 8008388:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800838c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008390:	4770      	bxgt	lr
 8008392:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008396:	f04f 0300 	mov.w	r3, #0
 800839a:	3a01      	subs	r2, #1
 800839c:	e737      	b.n	800820e <__aeabi_fmul+0x92>
 800839e:	f092 0f00 	teq	r2, #0
 80083a2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083a6:	bf02      	ittt	eq
 80083a8:	0040      	lsleq	r0, r0, #1
 80083aa:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083ae:	3a01      	subeq	r2, #1
 80083b0:	d0f9      	beq.n	80083a6 <__aeabi_fdiv+0xc2>
 80083b2:	ea40 000c 	orr.w	r0, r0, ip
 80083b6:	f093 0f00 	teq	r3, #0
 80083ba:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083be:	bf02      	ittt	eq
 80083c0:	0049      	lsleq	r1, r1, #1
 80083c2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083c6:	3b01      	subeq	r3, #1
 80083c8:	d0f9      	beq.n	80083be <__aeabi_fdiv+0xda>
 80083ca:	ea41 010c 	orr.w	r1, r1, ip
 80083ce:	e795      	b.n	80082fc <__aeabi_fdiv+0x18>
 80083d0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d4:	ea92 0f0c 	teq	r2, ip
 80083d8:	d108      	bne.n	80083ec <__aeabi_fdiv+0x108>
 80083da:	0242      	lsls	r2, r0, #9
 80083dc:	f47f af7d 	bne.w	80082da <__aeabi_fmul+0x15e>
 80083e0:	ea93 0f0c 	teq	r3, ip
 80083e4:	f47f af70 	bne.w	80082c8 <__aeabi_fmul+0x14c>
 80083e8:	4608      	mov	r0, r1
 80083ea:	e776      	b.n	80082da <__aeabi_fmul+0x15e>
 80083ec:	ea93 0f0c 	teq	r3, ip
 80083f0:	d104      	bne.n	80083fc <__aeabi_fdiv+0x118>
 80083f2:	024b      	lsls	r3, r1, #9
 80083f4:	f43f af4c 	beq.w	8008290 <__aeabi_fmul+0x114>
 80083f8:	4608      	mov	r0, r1
 80083fa:	e76e      	b.n	80082da <__aeabi_fmul+0x15e>
 80083fc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008400:	bf18      	it	ne
 8008402:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008406:	d1ca      	bne.n	800839e <__aeabi_fdiv+0xba>
 8008408:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800840c:	f47f af5c 	bne.w	80082c8 <__aeabi_fmul+0x14c>
 8008410:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008414:	f47f af3c 	bne.w	8008290 <__aeabi_fmul+0x114>
 8008418:	e75f      	b.n	80082da <__aeabi_fmul+0x15e>
 800841a:	bf00      	nop

0800841c <__gesf2>:
 800841c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8008420:	e006      	b.n	8008430 <__cmpsf2+0x4>
 8008422:	bf00      	nop

08008424 <__lesf2>:
 8008424:	f04f 0c01 	mov.w	ip, #1
 8008428:	e002      	b.n	8008430 <__cmpsf2+0x4>
 800842a:	bf00      	nop

0800842c <__cmpsf2>:
 800842c:	f04f 0c01 	mov.w	ip, #1
 8008430:	f84d cd04 	str.w	ip, [sp, #-4]!
 8008434:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8008438:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800843c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008440:	bf18      	it	ne
 8008442:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8008446:	d011      	beq.n	800846c <__cmpsf2+0x40>
 8008448:	b001      	add	sp, #4
 800844a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800844e:	bf18      	it	ne
 8008450:	ea90 0f01 	teqne	r0, r1
 8008454:	bf58      	it	pl
 8008456:	ebb2 0003 	subspl.w	r0, r2, r3
 800845a:	bf88      	it	hi
 800845c:	17c8      	asrhi	r0, r1, #31
 800845e:	bf38      	it	cc
 8008460:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8008464:	bf18      	it	ne
 8008466:	f040 0001 	orrne.w	r0, r0, #1
 800846a:	4770      	bx	lr
 800846c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008470:	d102      	bne.n	8008478 <__cmpsf2+0x4c>
 8008472:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8008476:	d105      	bne.n	8008484 <__cmpsf2+0x58>
 8008478:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800847c:	d1e4      	bne.n	8008448 <__cmpsf2+0x1c>
 800847e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8008482:	d0e1      	beq.n	8008448 <__cmpsf2+0x1c>
 8008484:	f85d 0b04 	ldr.w	r0, [sp], #4
 8008488:	4770      	bx	lr
 800848a:	bf00      	nop

0800848c <__aeabi_cfrcmple>:
 800848c:	4684      	mov	ip, r0
 800848e:	4608      	mov	r0, r1
 8008490:	4661      	mov	r1, ip
 8008492:	e7ff      	b.n	8008494 <__aeabi_cfcmpeq>

08008494 <__aeabi_cfcmpeq>:
 8008494:	b50f      	push	{r0, r1, r2, r3, lr}
 8008496:	f7ff ffc9 	bl	800842c <__cmpsf2>
 800849a:	2800      	cmp	r0, #0
 800849c:	bf48      	it	mi
 800849e:	f110 0f00 	cmnmi.w	r0, #0
 80084a2:	bd0f      	pop	{r0, r1, r2, r3, pc}

080084a4 <__aeabi_fcmpeq>:
 80084a4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084a8:	f7ff fff4 	bl	8008494 <__aeabi_cfcmpeq>
 80084ac:	bf0c      	ite	eq
 80084ae:	2001      	moveq	r0, #1
 80084b0:	2000      	movne	r0, #0
 80084b2:	f85d fb08 	ldr.w	pc, [sp], #8
 80084b6:	bf00      	nop

080084b8 <__aeabi_fcmplt>:
 80084b8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084bc:	f7ff ffea 	bl	8008494 <__aeabi_cfcmpeq>
 80084c0:	bf34      	ite	cc
 80084c2:	2001      	movcc	r0, #1
 80084c4:	2000      	movcs	r0, #0
 80084c6:	f85d fb08 	ldr.w	pc, [sp], #8
 80084ca:	bf00      	nop

080084cc <__aeabi_fcmple>:
 80084cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084d0:	f7ff ffe0 	bl	8008494 <__aeabi_cfcmpeq>
 80084d4:	bf94      	ite	ls
 80084d6:	2001      	movls	r0, #1
 80084d8:	2000      	movhi	r0, #0
 80084da:	f85d fb08 	ldr.w	pc, [sp], #8
 80084de:	bf00      	nop

080084e0 <__aeabi_fcmpge>:
 80084e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084e4:	f7ff ffd2 	bl	800848c <__aeabi_cfrcmple>
 80084e8:	bf94      	ite	ls
 80084ea:	2001      	movls	r0, #1
 80084ec:	2000      	movhi	r0, #0
 80084ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80084f2:	bf00      	nop

080084f4 <__aeabi_fcmpgt>:
 80084f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084f8:	f7ff ffc8 	bl	800848c <__aeabi_cfrcmple>
 80084fc:	bf34      	ite	cc
 80084fe:	2001      	movcc	r0, #1
 8008500:	2000      	movcs	r0, #0
 8008502:	f85d fb08 	ldr.w	pc, [sp], #8
 8008506:	bf00      	nop

08008508 <__aeabi_f2iz>:
 8008508:	ea4f 0240 	mov.w	r2, r0, lsl #1
 800850c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008510:	d30f      	bcc.n	8008532 <__aeabi_f2iz+0x2a>
 8008512:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008516:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800851a:	d90d      	bls.n	8008538 <__aeabi_f2iz+0x30>
 800851c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008520:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008524:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8008528:	fa23 f002 	lsr.w	r0, r3, r2
 800852c:	bf18      	it	ne
 800852e:	4240      	negne	r0, r0
 8008530:	4770      	bx	lr
 8008532:	f04f 0000 	mov.w	r0, #0
 8008536:	4770      	bx	lr
 8008538:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800853c:	d101      	bne.n	8008542 <__aeabi_f2iz+0x3a>
 800853e:	0242      	lsls	r2, r0, #9
 8008540:	d105      	bne.n	800854e <__aeabi_f2iz+0x46>
 8008542:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8008546:	bf08      	it	eq
 8008548:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800854c:	4770      	bx	lr
 800854e:	f04f 0000 	mov.w	r0, #0
 8008552:	4770      	bx	lr

08008554 <__aeabi_uldivmod>:
 8008554:	b953      	cbnz	r3, 800856c <__aeabi_uldivmod+0x18>
 8008556:	b94a      	cbnz	r2, 800856c <__aeabi_uldivmod+0x18>
 8008558:	2900      	cmp	r1, #0
 800855a:	bf08      	it	eq
 800855c:	2800      	cmpeq	r0, #0
 800855e:	bf1c      	itt	ne
 8008560:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008564:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008568:	f000 b98a 	b.w	8008880 <__aeabi_idiv0>
 800856c:	f1ad 0c08 	sub.w	ip, sp, #8
 8008570:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008574:	f000 f81a 	bl	80085ac <__udivmoddi4>
 8008578:	f8dd e004 	ldr.w	lr, [sp, #4]
 800857c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008580:	b004      	add	sp, #16
 8008582:	4770      	bx	lr

08008584 <__popcountsi2>:
 8008584:	0843      	lsrs	r3, r0, #1
 8008586:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 800858a:	1ac0      	subs	r0, r0, r3
 800858c:	0883      	lsrs	r3, r0, #2
 800858e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8008592:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8008596:	4418      	add	r0, r3
 8008598:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 800859c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 80085a0:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 80085a4:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 80085a8:	0e00      	lsrs	r0, r0, #24
 80085aa:	4770      	bx	lr

080085ac <__udivmoddi4>:
 80085ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80085b0:	9e08      	ldr	r6, [sp, #32]
 80085b2:	460d      	mov	r5, r1
 80085b4:	4604      	mov	r4, r0
 80085b6:	4688      	mov	r8, r1
 80085b8:	2b00      	cmp	r3, #0
 80085ba:	d14d      	bne.n	8008658 <__udivmoddi4+0xac>
 80085bc:	428a      	cmp	r2, r1
 80085be:	4694      	mov	ip, r2
 80085c0:	d968      	bls.n	8008694 <__udivmoddi4+0xe8>
 80085c2:	fab2 f282 	clz	r2, r2
 80085c6:	b152      	cbz	r2, 80085de <__udivmoddi4+0x32>
 80085c8:	fa01 f302 	lsl.w	r3, r1, r2
 80085cc:	f1c2 0120 	rsb	r1, r2, #32
 80085d0:	fa20 f101 	lsr.w	r1, r0, r1
 80085d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80085d8:	ea41 0803 	orr.w	r8, r1, r3
 80085dc:	4094      	lsls	r4, r2
 80085de:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80085e2:	fbb8 f7f1 	udiv	r7, r8, r1
 80085e6:	fa1f fe8c 	uxth.w	lr, ip
 80085ea:	fb01 8817 	mls	r8, r1, r7, r8
 80085ee:	fb07 f00e 	mul.w	r0, r7, lr
 80085f2:	0c23      	lsrs	r3, r4, #16
 80085f4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80085f8:	4298      	cmp	r0, r3
 80085fa:	d90a      	bls.n	8008612 <__udivmoddi4+0x66>
 80085fc:	eb1c 0303 	adds.w	r3, ip, r3
 8008600:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8008604:	f080 811e 	bcs.w	8008844 <__udivmoddi4+0x298>
 8008608:	4298      	cmp	r0, r3
 800860a:	f240 811b 	bls.w	8008844 <__udivmoddi4+0x298>
 800860e:	3f02      	subs	r7, #2
 8008610:	4463      	add	r3, ip
 8008612:	1a1b      	subs	r3, r3, r0
 8008614:	fbb3 f0f1 	udiv	r0, r3, r1
 8008618:	fb01 3310 	mls	r3, r1, r0, r3
 800861c:	fb00 fe0e 	mul.w	lr, r0, lr
 8008620:	b2a4      	uxth	r4, r4
 8008622:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8008626:	45a6      	cmp	lr, r4
 8008628:	d90a      	bls.n	8008640 <__udivmoddi4+0x94>
 800862a:	eb1c 0404 	adds.w	r4, ip, r4
 800862e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008632:	f080 8109 	bcs.w	8008848 <__udivmoddi4+0x29c>
 8008636:	45a6      	cmp	lr, r4
 8008638:	f240 8106 	bls.w	8008848 <__udivmoddi4+0x29c>
 800863c:	4464      	add	r4, ip
 800863e:	3802      	subs	r0, #2
 8008640:	2100      	movs	r1, #0
 8008642:	eba4 040e 	sub.w	r4, r4, lr
 8008646:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800864a:	b11e      	cbz	r6, 8008654 <__udivmoddi4+0xa8>
 800864c:	2300      	movs	r3, #0
 800864e:	40d4      	lsrs	r4, r2
 8008650:	e9c6 4300 	strd	r4, r3, [r6]
 8008654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008658:	428b      	cmp	r3, r1
 800865a:	d908      	bls.n	800866e <__udivmoddi4+0xc2>
 800865c:	2e00      	cmp	r6, #0
 800865e:	f000 80ee 	beq.w	800883e <__udivmoddi4+0x292>
 8008662:	2100      	movs	r1, #0
 8008664:	e9c6 0500 	strd	r0, r5, [r6]
 8008668:	4608      	mov	r0, r1
 800866a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800866e:	fab3 f183 	clz	r1, r3
 8008672:	2900      	cmp	r1, #0
 8008674:	d14a      	bne.n	800870c <__udivmoddi4+0x160>
 8008676:	42ab      	cmp	r3, r5
 8008678:	d302      	bcc.n	8008680 <__udivmoddi4+0xd4>
 800867a:	4282      	cmp	r2, r0
 800867c:	f200 80fc 	bhi.w	8008878 <__udivmoddi4+0x2cc>
 8008680:	1a84      	subs	r4, r0, r2
 8008682:	eb65 0303 	sbc.w	r3, r5, r3
 8008686:	2001      	movs	r0, #1
 8008688:	4698      	mov	r8, r3
 800868a:	2e00      	cmp	r6, #0
 800868c:	d0e2      	beq.n	8008654 <__udivmoddi4+0xa8>
 800868e:	e9c6 4800 	strd	r4, r8, [r6]
 8008692:	e7df      	b.n	8008654 <__udivmoddi4+0xa8>
 8008694:	b902      	cbnz	r2, 8008698 <__udivmoddi4+0xec>
 8008696:	deff      	udf	#255	; 0xff
 8008698:	fab2 f282 	clz	r2, r2
 800869c:	2a00      	cmp	r2, #0
 800869e:	f040 8091 	bne.w	80087c4 <__udivmoddi4+0x218>
 80086a2:	eba1 000c 	sub.w	r0, r1, ip
 80086a6:	2101      	movs	r1, #1
 80086a8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80086ac:	fa1f fe8c 	uxth.w	lr, ip
 80086b0:	fbb0 f3f7 	udiv	r3, r0, r7
 80086b4:	fb07 0013 	mls	r0, r7, r3, r0
 80086b8:	0c25      	lsrs	r5, r4, #16
 80086ba:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80086be:	fb0e f003 	mul.w	r0, lr, r3
 80086c2:	42a8      	cmp	r0, r5
 80086c4:	d908      	bls.n	80086d8 <__udivmoddi4+0x12c>
 80086c6:	eb1c 0505 	adds.w	r5, ip, r5
 80086ca:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80086ce:	d202      	bcs.n	80086d6 <__udivmoddi4+0x12a>
 80086d0:	42a8      	cmp	r0, r5
 80086d2:	f200 80ce 	bhi.w	8008872 <__udivmoddi4+0x2c6>
 80086d6:	4643      	mov	r3, r8
 80086d8:	1a2d      	subs	r5, r5, r0
 80086da:	fbb5 f0f7 	udiv	r0, r5, r7
 80086de:	fb07 5510 	mls	r5, r7, r0, r5
 80086e2:	fb0e fe00 	mul.w	lr, lr, r0
 80086e6:	b2a4      	uxth	r4, r4
 80086e8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80086ec:	45a6      	cmp	lr, r4
 80086ee:	d908      	bls.n	8008702 <__udivmoddi4+0x156>
 80086f0:	eb1c 0404 	adds.w	r4, ip, r4
 80086f4:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80086f8:	d202      	bcs.n	8008700 <__udivmoddi4+0x154>
 80086fa:	45a6      	cmp	lr, r4
 80086fc:	f200 80b6 	bhi.w	800886c <__udivmoddi4+0x2c0>
 8008700:	4628      	mov	r0, r5
 8008702:	eba4 040e 	sub.w	r4, r4, lr
 8008706:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800870a:	e79e      	b.n	800864a <__udivmoddi4+0x9e>
 800870c:	f1c1 0720 	rsb	r7, r1, #32
 8008710:	408b      	lsls	r3, r1
 8008712:	fa22 fc07 	lsr.w	ip, r2, r7
 8008716:	ea4c 0c03 	orr.w	ip, ip, r3
 800871a:	fa25 fa07 	lsr.w	sl, r5, r7
 800871e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8008722:	fbba f8f9 	udiv	r8, sl, r9
 8008726:	fa20 f307 	lsr.w	r3, r0, r7
 800872a:	fb09 aa18 	mls	sl, r9, r8, sl
 800872e:	408d      	lsls	r5, r1
 8008730:	fa1f fe8c 	uxth.w	lr, ip
 8008734:	431d      	orrs	r5, r3
 8008736:	fa00 f301 	lsl.w	r3, r0, r1
 800873a:	fb08 f00e 	mul.w	r0, r8, lr
 800873e:	0c2c      	lsrs	r4, r5, #16
 8008740:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8008744:	42a0      	cmp	r0, r4
 8008746:	fa02 f201 	lsl.w	r2, r2, r1
 800874a:	d90b      	bls.n	8008764 <__udivmoddi4+0x1b8>
 800874c:	eb1c 0404 	adds.w	r4, ip, r4
 8008750:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008754:	f080 8088 	bcs.w	8008868 <__udivmoddi4+0x2bc>
 8008758:	42a0      	cmp	r0, r4
 800875a:	f240 8085 	bls.w	8008868 <__udivmoddi4+0x2bc>
 800875e:	f1a8 0802 	sub.w	r8, r8, #2
 8008762:	4464      	add	r4, ip
 8008764:	1a24      	subs	r4, r4, r0
 8008766:	fbb4 f0f9 	udiv	r0, r4, r9
 800876a:	fb09 4410 	mls	r4, r9, r0, r4
 800876e:	fb00 fe0e 	mul.w	lr, r0, lr
 8008772:	b2ad      	uxth	r5, r5
 8008774:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8008778:	45a6      	cmp	lr, r4
 800877a:	d908      	bls.n	800878e <__udivmoddi4+0x1e2>
 800877c:	eb1c 0404 	adds.w	r4, ip, r4
 8008780:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8008784:	d26c      	bcs.n	8008860 <__udivmoddi4+0x2b4>
 8008786:	45a6      	cmp	lr, r4
 8008788:	d96a      	bls.n	8008860 <__udivmoddi4+0x2b4>
 800878a:	3802      	subs	r0, #2
 800878c:	4464      	add	r4, ip
 800878e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8008792:	fba0 9502 	umull	r9, r5, r0, r2
 8008796:	eba4 040e 	sub.w	r4, r4, lr
 800879a:	42ac      	cmp	r4, r5
 800879c:	46c8      	mov	r8, r9
 800879e:	46ae      	mov	lr, r5
 80087a0:	d356      	bcc.n	8008850 <__udivmoddi4+0x2a4>
 80087a2:	d053      	beq.n	800884c <__udivmoddi4+0x2a0>
 80087a4:	2e00      	cmp	r6, #0
 80087a6:	d069      	beq.n	800887c <__udivmoddi4+0x2d0>
 80087a8:	ebb3 0208 	subs.w	r2, r3, r8
 80087ac:	eb64 040e 	sbc.w	r4, r4, lr
 80087b0:	fa22 f301 	lsr.w	r3, r2, r1
 80087b4:	fa04 f707 	lsl.w	r7, r4, r7
 80087b8:	431f      	orrs	r7, r3
 80087ba:	40cc      	lsrs	r4, r1
 80087bc:	e9c6 7400 	strd	r7, r4, [r6]
 80087c0:	2100      	movs	r1, #0
 80087c2:	e747      	b.n	8008654 <__udivmoddi4+0xa8>
 80087c4:	fa0c fc02 	lsl.w	ip, ip, r2
 80087c8:	f1c2 0120 	rsb	r1, r2, #32
 80087cc:	fa25 f301 	lsr.w	r3, r5, r1
 80087d0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80087d4:	fa20 f101 	lsr.w	r1, r0, r1
 80087d8:	4095      	lsls	r5, r2
 80087da:	430d      	orrs	r5, r1
 80087dc:	fbb3 f1f7 	udiv	r1, r3, r7
 80087e0:	fb07 3311 	mls	r3, r7, r1, r3
 80087e4:	fa1f fe8c 	uxth.w	lr, ip
 80087e8:	0c28      	lsrs	r0, r5, #16
 80087ea:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80087ee:	fb01 f30e 	mul.w	r3, r1, lr
 80087f2:	4283      	cmp	r3, r0
 80087f4:	fa04 f402 	lsl.w	r4, r4, r2
 80087f8:	d908      	bls.n	800880c <__udivmoddi4+0x260>
 80087fa:	eb1c 0000 	adds.w	r0, ip, r0
 80087fe:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8008802:	d22f      	bcs.n	8008864 <__udivmoddi4+0x2b8>
 8008804:	4283      	cmp	r3, r0
 8008806:	d92d      	bls.n	8008864 <__udivmoddi4+0x2b8>
 8008808:	3902      	subs	r1, #2
 800880a:	4460      	add	r0, ip
 800880c:	1ac0      	subs	r0, r0, r3
 800880e:	fbb0 f3f7 	udiv	r3, r0, r7
 8008812:	fb07 0013 	mls	r0, r7, r3, r0
 8008816:	b2ad      	uxth	r5, r5
 8008818:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800881c:	fb03 f00e 	mul.w	r0, r3, lr
 8008820:	42a8      	cmp	r0, r5
 8008822:	d908      	bls.n	8008836 <__udivmoddi4+0x28a>
 8008824:	eb1c 0505 	adds.w	r5, ip, r5
 8008828:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800882c:	d216      	bcs.n	800885c <__udivmoddi4+0x2b0>
 800882e:	42a8      	cmp	r0, r5
 8008830:	d914      	bls.n	800885c <__udivmoddi4+0x2b0>
 8008832:	3b02      	subs	r3, #2
 8008834:	4465      	add	r5, ip
 8008836:	1a28      	subs	r0, r5, r0
 8008838:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800883c:	e738      	b.n	80086b0 <__udivmoddi4+0x104>
 800883e:	4631      	mov	r1, r6
 8008840:	4630      	mov	r0, r6
 8008842:	e707      	b.n	8008654 <__udivmoddi4+0xa8>
 8008844:	462f      	mov	r7, r5
 8008846:	e6e4      	b.n	8008612 <__udivmoddi4+0x66>
 8008848:	4618      	mov	r0, r3
 800884a:	e6f9      	b.n	8008640 <__udivmoddi4+0x94>
 800884c:	454b      	cmp	r3, r9
 800884e:	d2a9      	bcs.n	80087a4 <__udivmoddi4+0x1f8>
 8008850:	ebb9 0802 	subs.w	r8, r9, r2
 8008854:	eb65 0e0c 	sbc.w	lr, r5, ip
 8008858:	3801      	subs	r0, #1
 800885a:	e7a3      	b.n	80087a4 <__udivmoddi4+0x1f8>
 800885c:	4643      	mov	r3, r8
 800885e:	e7ea      	b.n	8008836 <__udivmoddi4+0x28a>
 8008860:	4628      	mov	r0, r5
 8008862:	e794      	b.n	800878e <__udivmoddi4+0x1e2>
 8008864:	4641      	mov	r1, r8
 8008866:	e7d1      	b.n	800880c <__udivmoddi4+0x260>
 8008868:	46d0      	mov	r8, sl
 800886a:	e77b      	b.n	8008764 <__udivmoddi4+0x1b8>
 800886c:	4464      	add	r4, ip
 800886e:	3802      	subs	r0, #2
 8008870:	e747      	b.n	8008702 <__udivmoddi4+0x156>
 8008872:	3b02      	subs	r3, #2
 8008874:	4465      	add	r5, ip
 8008876:	e72f      	b.n	80086d8 <__udivmoddi4+0x12c>
 8008878:	4608      	mov	r0, r1
 800887a:	e706      	b.n	800868a <__udivmoddi4+0xde>
 800887c:	4631      	mov	r1, r6
 800887e:	e6e9      	b.n	8008654 <__udivmoddi4+0xa8>

08008880 <__aeabi_idiv0>:
 8008880:	4770      	bx	lr
 8008882:	bf00      	nop

08008884 <Reset_Handler>:
 8008884:	2100      	movs	r1, #0
 8008886:	e003      	b.n	8008890 <DataInit>

08008888 <CopyData>:
 8008888:	4b0a      	ldr	r3, [pc, #40]	; (80088b4 <Zerobss+0x10>)
 800888a:	585b      	ldr	r3, [r3, r1]
 800888c:	5043      	str	r3, [r0, r1]
 800888e:	3104      	adds	r1, #4

08008890 <DataInit>:
 8008890:	4809      	ldr	r0, [pc, #36]	; (80088b8 <Zerobss+0x14>)
 8008892:	4b0a      	ldr	r3, [pc, #40]	; (80088bc <Zerobss+0x18>)
 8008894:	1842      	adds	r2, r0, r1
 8008896:	429a      	cmp	r2, r3
 8008898:	d3f6      	bcc.n	8008888 <CopyData>
 800889a:	4a09      	ldr	r2, [pc, #36]	; (80088c0 <Zerobss+0x1c>)
 800889c:	e002      	b.n	80088a4 <Zerobss>

0800889e <FillZerobss>:
 800889e:	2300      	movs	r3, #0
 80088a0:	f842 3b04 	str.w	r3, [r2], #4

080088a4 <Zerobss>:
 80088a4:	4b07      	ldr	r3, [pc, #28]	; (80088c4 <Zerobss+0x20>)
 80088a6:	429a      	cmp	r2, r3
 80088a8:	d3f9      	bcc.n	800889e <FillZerobss>
 80088aa:	f00b fe6f 	bl	801458c <SystemInit>
 80088ae:	f000 f961 	bl	8008b74 <main>
 80088b2:	4770      	bx	lr
 80088b4:	08018734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, pc}
 80088b8:	20000000 	andcs	r0, r0, r0
 80088bc:	200000f8 	strdcs	r0, [r0], -r8
 80088c0:	200000f8 	strdcs	r0, [r0], -r8
 80088c4:	20011c34 	andcs	r1, r1, r4, lsr ip

080088c8 <ADC0_1_IRQHandler>:
 80088c8:	e7fe      	b.n	80088c8 <ADC0_1_IRQHandler>

080088ca <memcmp>:
 80088ca:	b510      	push	{r4, lr}
 80088cc:	3901      	subs	r1, #1
 80088ce:	4402      	add	r2, r0
 80088d0:	4290      	cmp	r0, r2
 80088d2:	d008      	beq.n	80088e6 <memcmp+0x1c>
 80088d4:	7803      	ldrb	r3, [r0, #0]
 80088d6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80088da:	42a3      	cmp	r3, r4
 80088dc:	d001      	beq.n	80088e2 <memcmp+0x18>
 80088de:	1b18      	subs	r0, r3, r4
 80088e0:	bd10      	pop	{r4, pc}
 80088e2:	3001      	adds	r0, #1
 80088e4:	e7f4      	b.n	80088d0 <memcmp+0x6>
 80088e6:	2000      	movs	r0, #0
 80088e8:	e7fa      	b.n	80088e0 <memcmp+0x16>

080088ea <DisplayUdfHandler::~DisplayUdfHandler()>:
 80088ea:	4770      	bx	lr

080088ec <DisplayUdfHandler::ShowLongName(char const*)>:
 80088ec:	4770      	bx	lr

080088ee <DisplayHandler::~DisplayHandler()>:
 80088ee:	4770      	bx	lr

080088f0 <ArtNetReboot::~ArtNetReboot()>:
 80088f0:	4770      	bx	lr

080088f2 <dmxconfigudp::atoi(char const*, unsigned char)>:
 80088f2:	b530      	push	{r4, r5, lr}
 80088f4:	1e42      	subs	r2, r0, #1
 80088f6:	240a      	movs	r4, #10
 80088f8:	2000      	movs	r0, #0
 80088fa:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80088fe:	3b30      	subs	r3, #48	; 0x30
 8008900:	b2dd      	uxtb	r5, r3
 8008902:	2d09      	cmp	r5, #9
 8008904:	d805      	bhi.n	8008912 <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8008906:	3901      	subs	r1, #1
 8008908:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 800890c:	fb04 3000 	mla	r0, r4, r0, r3
 8008910:	d1f3      	bne.n	80088fa <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 8008912:	bd30      	pop	{r4, r5, pc}

08008914 <ArtNetReboot::Run()>:
 8008914:	b510      	push	{r4, lr}
 8008916:	4c07      	ldr	r4, [pc, #28]	; (8008934 <ArtNetReboot::Run()+0x20>)
 8008918:	6820      	ldr	r0, [r4, #0]
 800891a:	f002 f887 	bl	800aa2c <ArtNetNode::Stop()>
 800891e:	6823      	ldr	r3, [r4, #0]
 8008920:	6898      	ldr	r0, [r3, #8]
 8008922:	b128      	cbz	r0, 8008930 <ArtNetReboot::Run()+0x1c>
 8008924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008928:	6803      	ldr	r3, [r0, #0]
 800892a:	2101      	movs	r1, #1
 800892c:	695b      	ldr	r3, [r3, #20]
 800892e:	4718      	bx	r3
 8008930:	bd10      	pop	{r4, pc}
 8008932:	bf00      	nop
 8008934:	2000314c 	andcs	r3, r0, ip, asr #2

08008938 <ArtNetReboot::~ArtNetReboot()>:
 8008938:	b510      	push	{r4, lr}
 800893a:	4604      	mov	r4, r0
 800893c:	f00b f874 	bl	8013a28 <operator delete(void*)>
 8008940:	4620      	mov	r0, r4
 8008942:	bd10      	pop	{r4, pc}

08008944 <DisplayHandler::~DisplayHandler()>:
 8008944:	b510      	push	{r4, lr}
 8008946:	4604      	mov	r4, r0
 8008948:	f00b f86e 	bl	8013a28 <operator delete(void*)>
 800894c:	4620      	mov	r0, r4
 800894e:	bd10      	pop	{r4, pc}

08008950 <DisplayUdfHandler::~DisplayUdfHandler()>:
 8008950:	b510      	push	{r4, lr}
 8008952:	4604      	mov	r4, r0
 8008954:	f00b f868 	bl	8013a28 <operator delete(void*)>
 8008958:	4620      	mov	r0, r4
 800895a:	bd10      	pop	{r4, pc}

0800895c <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)>:
 800895c:	4b02      	ldr	r3, [pc, #8]	; (8008968 <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)+0xc>)
 800895e:	6819      	ldr	r1, [r3, #0]
 8008960:	4b02      	ldr	r3, [pc, #8]	; (800896c <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)+0x10>)
 8008962:	6818      	ldr	r0, [r3, #0]
 8008964:	f00a b892 	b.w	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008968:	2000314c 	andcs	r3, r0, ip, asr #2
 800896c:	2000d290 	mulcs	r0, r0, r2

08008970 <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)>:
 8008970:	4b02      	ldr	r3, [pc, #8]	; (800897c <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)+0xc>)
 8008972:	6819      	ldr	r1, [r3, #0]
 8008974:	4b02      	ldr	r3, [pc, #8]	; (8008980 <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)+0x10>)
 8008976:	6818      	ldr	r0, [r3, #0]
 8008978:	f00a b888 	b.w	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 800897c:	2000314c 	andcs	r3, r0, ip, asr #2
 8008980:	2000d290 	mulcs	r0, r0, r2

08008984 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)>:
 8008984:	4b02      	ldr	r3, [pc, #8]	; (8008990 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)+0xc>)
 8008986:	6819      	ldr	r1, [r3, #0]
 8008988:	4b02      	ldr	r3, [pc, #8]	; (8008994 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)+0x10>)
 800898a:	6818      	ldr	r0, [r3, #0]
 800898c:	f00a b87e 	b.w	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008990:	2000314c 	andcs	r3, r0, ip, asr #2
 8008994:	2000d290 	mulcs	r0, r0, r2

08008998 <DisplayUdfHandler::ShowNetSwitch(unsigned char)>:
 8008998:	4b02      	ldr	r3, [pc, #8]	; (80089a4 <DisplayUdfHandler::ShowNetSwitch(unsigned char)+0xc>)
 800899a:	6819      	ldr	r1, [r3, #0]
 800899c:	4b02      	ldr	r3, [pc, #8]	; (80089a8 <DisplayUdfHandler::ShowNetSwitch(unsigned char)+0x10>)
 800899e:	6818      	ldr	r0, [r3, #0]
 80089a0:	f00a b874 	b.w	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 80089a4:	2000314c 	andcs	r3, r0, ip, asr #2
 80089a8:	2000d290 	mulcs	r0, r0, r2

080089ac <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)>:
 80089ac:	4b02      	ldr	r3, [pc, #8]	; (80089b8 <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)+0xc>)
 80089ae:	6819      	ldr	r1, [r3, #0]
 80089b0:	4b02      	ldr	r3, [pc, #8]	; (80089bc <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)+0x10>)
 80089b2:	6818      	ldr	r0, [r3, #0]
 80089b4:	f00a b86a 	b.w	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 80089b8:	2000314c 	andcs	r3, r0, ip, asr #2
 80089bc:	2000d290 	mulcs	r0, r0, r2

080089c0 <DisplayUdfHandler::ShowShortName(char const*)>:
 80089c0:	4b02      	ldr	r3, [pc, #8]	; (80089cc <DisplayUdfHandler::ShowShortName(char const*)+0xc>)
 80089c2:	6819      	ldr	r1, [r3, #0]
 80089c4:	4b02      	ldr	r3, [pc, #8]	; (80089d0 <DisplayUdfHandler::ShowShortName(char const*)+0x10>)
 80089c6:	6818      	ldr	r0, [r3, #0]
 80089c8:	f00a b83e 	b.w	8012a48 <DisplayUdf::ShowNodeName(ArtNetNode*)>
 80089cc:	2000314c 	andcs	r3, r0, ip, asr #2
 80089d0:	2000d290 	mulcs	r0, r0, r2

080089d4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80089d4:	b110      	cbz	r0, 80089dc <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80089d6:	6803      	ldr	r3, [r0, #0]
 80089d8:	6a1b      	ldr	r3, [r3, #32]
 80089da:	4718      	bx	r3
 80089dc:	4770      	bx	lr

080089de <Display::PutChar(int) [clone .isra.0]>:
 80089de:	b110      	cbz	r0, 80089e6 <Display::PutChar(int) [clone .isra.0]+0x8>
 80089e0:	6803      	ldr	r3, [r0, #0]
 80089e2:	695b      	ldr	r3, [r3, #20]
 80089e4:	4718      	bx	r3
 80089e6:	4770      	bx	lr

080089e8 <DisplayHandler::Print(unsigned int)>:
 80089e8:	b538      	push	{r3, r4, r5, lr}
 80089ea:	7903      	ldrb	r3, [r0, #4]
 80089ec:	b1f3      	cbz	r3, 8008a2c <DisplayHandler::Print(unsigned int)+0x44>
 80089ee:	2904      	cmp	r1, #4
 80089f0:	bf98      	it	ls
 80089f2:	4b0f      	ldrls	r3, [pc, #60]	; (8008a30 <DisplayHandler::Print(unsigned int)+0x48>)
 80089f4:	4d0f      	ldr	r5, [pc, #60]	; (8008a34 <DisplayHandler::Print(unsigned int)+0x4c>)
 80089f6:	bf98      	it	ls
 80089f8:	5c5c      	ldrbls	r4, [r3, r1]
 80089fa:	682b      	ldr	r3, [r5, #0]
 80089fc:	bf88      	it	hi
 80089fe:	2455      	movhi	r4, #85	; 0x55
 8008a00:	6998      	ldr	r0, [r3, #24]
 8008a02:	b178      	cbz	r0, 8008a24 <DisplayHandler::Print(unsigned int)+0x3c>
 8008a04:	7901      	ldrb	r1, [r0, #4]
 8008a06:	3901      	subs	r1, #1
 8008a08:	b2c9      	uxtb	r1, r1
 8008a0a:	b168      	cbz	r0, 8008a28 <DisplayHandler::Print(unsigned int)+0x40>
 8008a0c:	7942      	ldrb	r2, [r0, #5]
 8008a0e:	3a01      	subs	r2, #1
 8008a10:	b2d2      	uxtb	r2, r2
 8008a12:	f7ff ffdf 	bl	80089d4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008a16:	682b      	ldr	r3, [r5, #0]
 8008a18:	4621      	mov	r1, r4
 8008a1a:	6998      	ldr	r0, [r3, #24]
 8008a1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008a20:	f7ff bfdd 	b.w	80089de <Display::PutChar(int) [clone .isra.0]>
 8008a24:	4601      	mov	r1, r0
 8008a26:	e7ee      	b.n	8008a06 <DisplayHandler::Print(unsigned int)+0x1e>
 8008a28:	4602      	mov	r2, r0
 8008a2a:	e7f0      	b.n	8008a0e <DisplayHandler::Print(unsigned int)+0x26>
 8008a2c:	bd38      	pop	{r3, r4, r5, pc}
 8008a2e:	bf00      	nop
 8008a30:	080165a0 	stmdaeq	r1, {r5, r7, r8, sl, sp, lr}
 8008a34:	2000d298 	mulcs	r0, r8, r2

08008a38 <Display::SetSleep(bool)>:
 8008a38:	b538      	push	{r3, r4, r5, lr}
 8008a3a:	4604      	mov	r4, r0
 8008a3c:	6980      	ldr	r0, [r0, #24]
 8008a3e:	460d      	mov	r5, r1
 8008a40:	b138      	cbz	r0, 8008a52 <Display::SetSleep(bool)+0x1a>
 8008a42:	6803      	ldr	r3, [r0, #0]
 8008a44:	7421      	strb	r1, [r4, #16]
 8008a46:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008a48:	4798      	blx	r3
 8008a4a:	b915      	cbnz	r5, 8008a52 <Display::SetSleep(bool)+0x1a>
 8008a4c:	4b01      	ldr	r3, [pc, #4]	; (8008a54 <Display::SetSleep(bool)+0x1c>)
 8008a4e:	681b      	ldr	r3, [r3, #0]
 8008a50:	6063      	str	r3, [r4, #4]
 8008a52:	bd38      	pop	{r3, r4, r5, pc}
 8008a54:	2000d3ac 	andcs	sp, r0, ip, lsr #7

08008a58 <Display::TextStatus(char const*)>:
 8008a58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008a5c:	4604      	mov	r4, r0
 8008a5e:	6980      	ldr	r0, [r0, #24]
 8008a60:	460d      	mov	r5, r1
 8008a62:	b360      	cbz	r0, 8008abe <Display::TextStatus(char const*)+0x66>
 8008a64:	7947      	ldrb	r7, [r0, #5]
 8008a66:	2100      	movs	r1, #0
 8008a68:	1e7e      	subs	r6, r7, #1
 8008a6a:	b2f6      	uxtb	r6, r6
 8008a6c:	4632      	mov	r2, r6
 8008a6e:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008a72:	f04f 0800 	mov.w	r8, #0
 8008a76:	f7ff ffad 	bl	80089d4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008a7a:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008a7e:	45c1      	cmp	r9, r8
 8008a80:	69a0      	ldr	r0, [r4, #24]
 8008a82:	d905      	bls.n	8008a90 <Display::TextStatus(char const*)+0x38>
 8008a84:	2120      	movs	r1, #32
 8008a86:	f7ff ffaa 	bl	80089de <Display::PutChar(int) [clone .isra.0]>
 8008a8a:	f108 0801 	add.w	r8, r8, #1
 8008a8e:	e7f6      	b.n	8008a7e <Display::TextStatus(char const*)+0x26>
 8008a90:	4632      	mov	r2, r6
 8008a92:	2100      	movs	r1, #0
 8008a94:	f7ff ff9e 	bl	80089d4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008a98:	69a0      	ldr	r0, [r4, #24]
 8008a9a:	b180      	cbz	r0, 8008abe <Display::TextStatus(char const*)+0x66>
 8008a9c:	2300      	movs	r3, #0
 8008a9e:	7901      	ldrb	r1, [r0, #4]
 8008aa0:	5cea      	ldrb	r2, [r5, r3]
 8008aa2:	b11a      	cbz	r2, 8008aac <Display::TextStatus(char const*)+0x54>
 8008aa4:	1c5a      	adds	r2, r3, #1
 8008aa6:	4299      	cmp	r1, r3
 8008aa8:	4613      	mov	r3, r2
 8008aaa:	dcf9      	bgt.n	8008aa0 <Display::TextStatus(char const*)+0x48>
 8008aac:	6802      	ldr	r2, [r0, #0]
 8008aae:	4639      	mov	r1, r7
 8008ab0:	69d4      	ldr	r4, [r2, #28]
 8008ab2:	b2db      	uxtb	r3, r3
 8008ab4:	462a      	mov	r2, r5
 8008ab6:	46a4      	mov	ip, r4
 8008ab8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008abc:	4760      	bx	ip
 8008abe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008ac2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008ac4:	4605      	mov	r5, r0
 8008ac6:	461e      	mov	r6, r3
 8008ac8:	460f      	mov	r7, r1
 8008aca:	4614      	mov	r4, r2
 8008acc:	f7ff ffc4 	bl	8008a58 <Display::TextStatus(char const*)>
 8008ad0:	7c6b      	ldrb	r3, [r5, #17]
 8008ad2:	b19b      	cbz	r3, 8008afc <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008ad4:	43e2      	mvns	r2, r4
 8008ad6:	2312      	movs	r3, #18
 8008ad8:	7a28      	ldrb	r0, [r5, #8]
 8008ada:	f88d 3004 	strb.w	r3, [sp, #4]
 8008ade:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008ae2:	f88d 3005 	strb.w	r3, [sp, #5]
 8008ae6:	f88d 2006 	strb.w	r2, [sp, #6]
 8008aea:	f00c fccd 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 8008aee:	68e8      	ldr	r0, [r5, #12]
 8008af0:	f00c fcc2 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 8008af4:	2103      	movs	r1, #3
 8008af6:	a801      	add	r0, sp, #4
 8008af8:	f00c fccc 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8008afc:	1c73      	adds	r3, r6, #1
 8008afe:	d006      	beq.n	8008b0e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008b00:	4639      	mov	r1, r7
 8008b02:	4630      	mov	r0, r6
 8008b04:	b003      	add	sp, #12
 8008b06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008b0a:	f00a be2b 	b.w	8013764 <console_status>
 8008b0e:	b003      	add	sp, #12
 8008b10:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008b12 <RDMDevice::Init()>:
 8008b12:	b538      	push	{r3, r4, r5, lr}
 8008b14:	f890 2073 	ldrb.w	r2, [r0, #115]	; 0x73
 8008b18:	2301      	movs	r3, #1
 8008b1a:	2a20      	cmp	r2, #32
 8008b1c:	bf28      	it	cs
 8008b1e:	2220      	movcs	r2, #32
 8008b20:	4604      	mov	r4, r0
 8008b22:	4611      	mov	r1, r2
 8008b24:	f880 3052 	strb.w	r3, [r0, #82]	; 0x52
 8008b28:	f100 050a 	add.w	r5, r0, #10
 8008b2c:	f100 0353 	add.w	r3, r0, #83	; 0x53
 8008b30:	3901      	subs	r1, #1
 8008b32:	d304      	bcc.n	8008b3e <RDMDevice::Init()+0x2c>
 8008b34:	f813 0b01 	ldrb.w	r0, [r3], #1
 8008b38:	f803 0c4a 	strb.w	r0, [r3, #-74]
 8008b3c:	e7f8      	b.n	8008b30 <RDMDevice::Init()+0x1e>
 8008b3e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 8008b40:	f884 202a 	strb.w	r2, [r4, #42]	; 0x2a
 8008b44:	b118      	cbz	r0, 8008b4e <RDMDevice::Init()+0x3c>
 8008b46:	6803      	ldr	r3, [r0, #0]
 8008b48:	4629      	mov	r1, r5
 8008b4a:	689b      	ldr	r3, [r3, #8]
 8008b4c:	4798      	blx	r3
 8008b4e:	4629      	mov	r1, r5
 8008b50:	f06f 0509 	mvn.w	r5, #9
 8008b54:	f894 3073 	ldrb.w	r3, [r4, #115]	; 0x73
 8008b58:	f894 002a 	ldrb.w	r0, [r4, #42]	; 0x2a
 8008b5c:	1b2d      	subs	r5, r5, r4
 8008b5e:	186a      	adds	r2, r5, r1
 8008b60:	4290      	cmp	r0, r2
 8008b62:	d904      	bls.n	8008b6e <RDMDevice::Init()+0x5c>
 8008b64:	f811 2b01 	ldrb.w	r2, [r1], #1
 8008b68:	4413      	add	r3, r2
 8008b6a:	b29b      	uxth	r3, r3
 8008b6c:	e7f7      	b.n	8008b5e <RDMDevice::Init()+0x4c>
 8008b6e:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 8008b72:	bd38      	pop	{r3, r4, r5, pc}

08008b74 <main>:
 8008b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008b78:	2601      	movs	r6, #1
 8008b7a:	f5ad 5dc6 	sub.w	sp, sp, #6336	; 0x18c0
 8008b7e:	b084      	sub	sp, #16
 8008b80:	a81a      	add	r0, sp, #104	; 0x68
 8008b82:	f00a fea3 	bl	80138cc <Hardware::Hardware()>
 8008b86:	a87f      	add	r0, sp, #508	; 0x1fc
 8008b88:	f008 fab6 	bl	80110f8 <Network::Network()>
 8008b8c:	a81f      	add	r0, sp, #124	; 0x7c
 8008b8e:	f00a fe47 	bl	8013820 <LedBlink::LedBlink()>
 8008b92:	a846      	add	r0, sp, #280	; 0x118
 8008b94:	f009 fc0e 	bl	80123b4 <DisplayUdf::DisplayUdf()>
 8008b98:	ad0c      	add	r5, sp, #48	; 0x30
 8008b9a:	4aac      	ldr	r2, [pc, #688]	; (8008e4c <main+0x2d8>)
 8008b9c:	4bac      	ldr	r3, [pc, #688]	; (8008e50 <main+0x2dc>)
 8008b9e:	49ad      	ldr	r1, [pc, #692]	; (8008e54 <main+0x2e0>)
 8008ba0:	a805      	add	r0, sp, #20
 8008ba2:	f00a fdf7 	bl	8013794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008ba6:	f1a5 0018 	sub.w	r0, r5, #24
 8008baa:	f007 f967 	bl	800fe7c <FlashRom::FlashRom()>
 8008bae:	a807      	add	r0, sp, #28
 8008bb0:	f006 fdaa 	bl	800f708 <SpiFlashStore::SpiFlashStore()>
 8008bb4:	49a8      	ldr	r1, [pc, #672]	; (8008e58 <main+0x2e4>)
 8008bb6:	a805      	add	r0, sp, #20
 8008bb8:	f00a fe24 	bl	8013804 <FirmwareVersion::Print(char const*)>
 8008bbc:	4ba7      	ldr	r3, [pc, #668]	; (8008e5c <main+0x2e8>)
 8008bbe:	2004      	movs	r0, #4
 8008bc0:	611e      	str	r6, [r3, #16]
 8008bc2:	f00a ff35 	bl	8013a30 <operator new(unsigned int)>
 8008bc6:	4ba6      	ldr	r3, [pc, #664]	; (8008e60 <main+0x2ec>)
 8008bc8:	2400      	movs	r4, #0
 8008bca:	6003      	str	r3, [r0, #0]
 8008bcc:	901d      	str	r0, [sp, #116]	; 0x74
 8008bce:	2008      	movs	r0, #8
 8008bd0:	ab1a      	add	r3, sp, #104	; 0x68
 8008bd2:	f00a ff2d 	bl	8013a30 <operator new(unsigned int)>
 8008bd6:	4ba3      	ldr	r3, [pc, #652]	; (8008e64 <main+0x2f0>)
 8008bd8:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008bdc:	6003      	str	r3, [r0, #0]
 8008bde:	4ba2      	ldr	r3, [pc, #648]	; (8008e68 <main+0x2f4>)
 8008be0:	49a2      	ldr	r1, [pc, #648]	; (8008e6c <main+0x2f8>)
 8008be2:	681b      	ldr	r3, [r3, #0]
 8008be4:	3b00      	subs	r3, #0
 8008be6:	bf18      	it	ne
 8008be8:	2301      	movne	r3, #1
 8008bea:	7103      	strb	r3, [r0, #4]
 8008bec:	9022      	str	r0, [sp, #136]	; 0x88
 8008bee:	ab1f      	add	r3, sp, #124	; 0x7c
 8008bf0:	a846      	add	r0, sp, #280	; 0x118
 8008bf2:	2303      	movs	r3, #3
 8008bf4:	f7ff ff65 	bl	8008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008bf8:	a810      	add	r0, sp, #64	; 0x40
 8008bfa:	f007 f8a1 	bl	800fd40 <StoreNetwork::StoreNetwork()>
 8008bfe:	ab7f      	add	r3, sp, #508	; 0x1fc
 8008c00:	4618      	mov	r0, r3
 8008c02:	aa11      	add	r2, sp, #68	; 0x44
 8008c04:	a910      	add	r1, sp, #64	; 0x40
 8008c06:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8008c0a:	f008 facd 	bl	80111a8 <Network::Init(NetworkParamsStore*)>
 8008c0e:	a87f      	add	r0, sp, #508	; 0x1fc
 8008c10:	f008 fca0 	bl	8011554 <Network::Print()>
 8008c14:	a808      	add	r0, sp, #32
 8008c16:	f007 fea7 	bl	8010968 <MDNS::MDNS()>
 8008c1a:	a808      	add	r0, sp, #32
 8008c1c:	f007 ff68 	bl	8010af0 <MDNS::Start()>
 8008c20:	f642 1305 	movw	r3, #10501	; 0x2905
 8008c24:	4621      	mov	r1, r4
 8008c26:	4a92      	ldr	r2, [pc, #584]	; (8008e70 <main+0x2fc>)
 8008c28:	e9cd 4400 	strd	r4, r4, [sp]
 8008c2c:	a808      	add	r0, sp, #32
 8008c2e:	f008 f8cb 	bl	8010dc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008c32:	4b90      	ldr	r3, [pc, #576]	; (8008e74 <main+0x300>)
 8008c34:	4621      	mov	r1, r4
 8008c36:	4a90      	ldr	r2, [pc, #576]	; (8008e78 <main+0x304>)
 8008c38:	e9cd 6300 	strd	r6, r3, [sp]
 8008c3c:	a808      	add	r0, sp, #32
 8008c3e:	2350      	movs	r3, #80	; 0x50
 8008c40:	f008 f8c2 	bl	8010dc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008c44:	a808      	add	r0, sp, #32
 8008c46:	f008 fa07 	bl	8011058 <MDNS::Print()>
 8008c4a:	2303      	movs	r3, #3
 8008c4c:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008c50:	498a      	ldr	r1, [pc, #552]	; (8008e7c <main+0x308>)
 8008c52:	a846      	add	r0, sp, #280	; 0x118
 8008c54:	f7ff ff35 	bl	8008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008c58:	a812      	add	r0, sp, #72	; 0x48
 8008c5a:	f006 ff59 	bl	800fb10 <StoreArtNet::StoreArtNet()>
 8008c5e:	a912      	add	r1, sp, #72	; 0x48
 8008c60:	a85c      	add	r0, sp, #368	; 0x170
 8008c62:	f003 fb99 	bl	800c398 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>
 8008c66:	4631      	mov	r1, r6
 8008c68:	f60d 00b4 	addw	r0, sp, #2228	; 0x8b4
 8008c6c:	f001 fe12 	bl	800a894 <ArtNet4Node::ArtNet4Node(unsigned char)>
 8008c70:	a85c      	add	r0, sp, #368	; 0x170
 8008c72:	f003 fbb5 	bl	800c3e0 <ArtNetParams::Load()>
 8008c76:	b138      	cbz	r0, 8008c88 <main+0x114>
 8008c78:	a85c      	add	r0, sp, #368	; 0x170
 8008c7a:	f60d 01b8 	addw	r1, sp, #2232	; 0x8b8
 8008c7e:	f003 fbbd 	bl	800c3fc <ArtNetParams::Set(ArtNetNode*)>
 8008c82:	a85c      	add	r0, sp, #368	; 0x170
 8008c84:	f003 fc4c 	bl	800c520 <ArtNetParams::Dump()>
 8008c88:	4a7d      	ldr	r2, [pc, #500]	; (8008e80 <main+0x30c>)
 8008c8a:	ab09      	add	r3, sp, #36	; 0x24
 8008c8c:	601a      	str	r2, [r3, #0]
 8008c8e:	f1a5 030c 	sub.w	r3, r5, #12
 8008c92:	f8cd 38dc 	str.w	r3, [sp, #2268]	; 0x8dc
 8008c96:	4b7b      	ldr	r3, [pc, #492]	; (8008e84 <main+0x310>)
 8008c98:	681b      	ldr	r3, [r3, #0]
 8008c9a:	b103      	cbz	r3, 8008c9e <main+0x12a>
 8008c9c:	3304      	adds	r3, #4
 8008c9e:	2400      	movs	r4, #0
 8008ca0:	f44f 5600 	mov.w	r6, #8192	; 0x2000
 8008ca4:	f8cd 38d8 	str.w	r3, [sp, #2264]	; 0x8d8
 8008ca8:	f60d 07b8 	addw	r7, sp, #2232	; 0x8b8
 8008cac:	2c03      	cmp	r4, #3
 8008cae:	d811      	bhi.n	8008cd4 <main+0x160>
 8008cb0:	995d      	ldr	r1, [sp, #372]	; 0x174
 8008cb2:	fa06 f204 	lsl.w	r2, r6, r4
 8008cb6:	ab5c      	add	r3, sp, #368	; 0x170
 8008cb8:	4423      	add	r3, r4
 8008cba:	438a      	bics	r2, r1
 8008cbc:	f893 306b 	ldrb.w	r3, [r3, #107]	; 0x6b
 8008cc0:	d108      	bne.n	8008cd4 <main+0x160>
 8008cc2:	f89d 21ea 	ldrb.w	r2, [sp, #490]	; 0x1ea
 8008cc6:	4621      	mov	r1, r4
 8008cc8:	4122      	asrs	r2, r4
 8008cca:	4638      	mov	r0, r7
 8008ccc:	f002 0201 	and.w	r2, r2, #1
 8008cd0:	f002 f97d 	bl	800afce <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 8008cd4:	3401      	adds	r4, #1
 8008cd6:	2c08      	cmp	r4, #8
 8008cd8:	d1e8      	bne.n	8008cac <main+0x138>
 8008cda:	a80a      	add	r0, sp, #40	; 0x28
 8008cdc:	f006 ff84 	bl	800fbe8 <StoreDmxSend::StoreDmxSend()>
 8008ce0:	ab16      	add	r3, sp, #88	; 0x58
 8008ce2:	4618      	mov	r0, r3
 8008ce4:	a90a      	add	r1, sp, #40	; 0x28
 8008ce6:	9303      	str	r3, [sp, #12]
 8008ce8:	f005 fbbc 	bl	800e464 <DmxParams::DmxParams(DmxParamsStore*)>
 8008cec:	a839      	add	r0, sp, #228	; 0xe4
 8008cee:	f006 f975 	bl	800efdc <Dmx::Dmx()>
 8008cf2:	9803      	ldr	r0, [sp, #12]
 8008cf4:	f005 fbc2 	bl	800e47c <DmxParams::Load()>
 8008cf8:	b130      	cbz	r0, 8008d08 <main+0x194>
 8008cfa:	9803      	ldr	r0, [sp, #12]
 8008cfc:	f005 fd0a 	bl	800e714 <DmxParams::Dump()>
 8008d00:	9803      	ldr	r0, [sp, #12]
 8008d02:	a939      	add	r1, sp, #228	; 0xe4
 8008d04:	f005 fcdc 	bl	800e6c0 <DmxParams::Set(Dmx*)>
 8008d08:	4a5f      	ldr	r2, [pc, #380]	; (8008e88 <main+0x314>)
 8008d0a:	1f2c      	subs	r4, r5, #4
 8008d0c:	4620      	mov	r0, r4
 8008d0e:	920b      	str	r2, [sp, #44]	; 0x2c
 8008d10:	ab0b      	add	r3, sp, #44	; 0x2c
 8008d12:	f005 fb4d 	bl	800e3b0 <DmxSend::Print()>
 8008d16:	f89d 6f9a 	ldrb.w	r6, [sp, #3994]	; 0xf9a
 8008d1a:	b16e      	cbz	r6, 8008d38 <main+0x1c4>
 8008d1c:	2001      	movs	r0, #1
 8008d1e:	f8cd 48c0 	str.w	r4, [sp, #2240]	; 0x8c0
 8008d22:	f00a fe85 	bl	8013a30 <operator new(unsigned int)>
 8008d26:	4b59      	ldr	r3, [pc, #356]	; (8008e8c <main+0x318>)
 8008d28:	4606      	mov	r6, r0
 8008d2a:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008d2e:	6818      	ldr	r0, [r3, #0]
 8008d30:	f008 fa12 	bl	8011158 <Network::Begin(unsigned short)>
 8008d34:	4b56      	ldr	r3, [pc, #344]	; (8008e90 <main+0x31c>)
 8008d36:	6018      	str	r0, [r3, #0]
 8008d38:	4628      	mov	r0, r5
 8008d3a:	f000 fa69 	bl	8009210 <DmxInput::DmxInput()>
 8008d3e:	f89d 3f9b 	ldrb.w	r3, [sp, #3995]	; 0xf9b
 8008d42:	b10b      	cbz	r3, 8008d48 <main+0x1d4>
 8008d44:	f8cd 58cc 	str.w	r5, [sp, #2252]	; 0x8cc
 8008d48:	a814      	add	r0, sp, #80	; 0x50
 8008d4a:	f007 f857 	bl	800fdfc <StoreRDMDevice::StoreRDMDevice()>
 8008d4e:	f89d 3f9a 	ldrb.w	r3, [sp, #3994]	; 0xf9a
 8008d52:	2b00      	cmp	r3, #0
 8008d54:	d03f      	beq.n	8008dd6 <main+0x262>
 8008d56:	9b5d      	ldr	r3, [sp, #372]	; 0x174
 8008d58:	069b      	lsls	r3, r3, #26
 8008d5a:	d53c      	bpl.n	8008dd6 <main+0x262>
 8008d5c:	20a0      	movs	r0, #160	; 0xa0
 8008d5e:	f00a fe67 	bl	8013a30 <operator new(unsigned int)>
 8008d62:	2108      	movs	r1, #8
 8008d64:	4604      	mov	r4, r0
 8008d66:	f004 feb9 	bl	800dadc <ArtNetRdmController::ArtNetRdmController(unsigned int)>
 8008d6a:	a914      	add	r1, sp, #80	; 0x50
 8008d6c:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008d6e:	f005 f9f9 	bl	800e164 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008d72:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008d74:	f005 fa08 	bl	800e188 <RDMDeviceParams::Load()>
 8008d78:	1d27      	adds	r7, r4, #4
 8008d7a:	b130      	cbz	r0, 8008d8a <main+0x216>
 8008d7c:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008d7e:	4639      	mov	r1, r7
 8008d80:	f005 fa0d 	bl	800e19e <RDMDeviceParams::Set(RDMDevice*)>
 8008d84:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008d86:	f005 fa3f 	bl	800e208 <RDMDeviceParams::Dump()>
 8008d8a:	4638      	mov	r0, r7
 8008d8c:	f7ff fec1 	bl	8008b12 <RDMDevice::Init()>
 8008d90:	4638      	mov	r0, r7
 8008d92:	f005 f973 	bl	800e07c <RDMDevice::Print()>
 8008d96:	2303      	movs	r3, #3
 8008d98:	f44f 42da 	mov.w	r2, #27904	; 0x6d00
 8008d9c:	493d      	ldr	r1, [pc, #244]	; (8008e94 <main+0x320>)
 8008d9e:	a846      	add	r0, sp, #280	; 0x118
 8008da0:	f7ff fe8f 	bl	8008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008da4:	2700      	movs	r7, #0
 8008da6:	f60d 08b8 	addw	r8, sp, #2232	; 0x8b8
 8008daa:	f104 0980 	add.w	r9, r4, #128	; 0x80
 8008dae:	2301      	movs	r3, #1
 8008db0:	4639      	mov	r1, r7
 8008db2:	4640      	mov	r0, r8
 8008db4:	aa2f      	add	r2, sp, #188	; 0xbc
 8008db6:	f002 f8dd 	bl	800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 8008dba:	b118      	cbz	r0, 8008dc4 <main+0x250>
 8008dbc:	f859 0027 	ldr.w	r0, [r9, r7, lsl #2]
 8008dc0:	f005 f88a 	bl	800ded8 <RDMDiscovery::Full()>
 8008dc4:	3701      	adds	r7, #1
 8008dc6:	2f04      	cmp	r7, #4
 8008dc8:	d1f1      	bne.n	8008dae <main+0x23a>
 8008dca:	2200      	movs	r2, #0
 8008dcc:	4621      	mov	r1, r4
 8008dce:	f60d 00b8 	addw	r0, sp, #2232	; 0x8b8
 8008dd2:	f003 f926 	bl	800c022 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)>
 8008dd6:	f60d 00b4 	addw	r0, sp, #2228	; 0x8b4
 8008dda:	f001 fdb9 	bl	800a950 <ArtNet4Node::Print()>
 8008dde:	f89d 3f9a 	ldrb.w	r3, [sp, #3994]	; 0xf9a
 8008de2:	f89d 4f9b 	ldrb.w	r4, [sp, #3995]	; 0xf9b
 8008de6:	492c      	ldr	r1, [pc, #176]	; (8008e98 <main+0x324>)
 8008de8:	441c      	add	r4, r3
 8008dea:	4622      	mov	r2, r4
 8008dec:	a846      	add	r0, sp, #280	; 0x118
 8008dee:	f009 faf7 	bl	80123e0 <DisplayUdf::SetTitle(char const*, ...)>
 8008df2:	2206      	movs	r2, #6
 8008df4:	2102      	movs	r1, #2
 8008df6:	a846      	add	r0, sp, #280	; 0x118
 8008df8:	f009 fc48 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008dfc:	2202      	movs	r2, #2
 8008dfe:	2103      	movs	r1, #3
 8008e00:	a846      	add	r0, sp, #280	; 0x118
 8008e02:	f009 fc43 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008e06:	2203      	movs	r2, #3
 8008e08:	2104      	movs	r1, #4
 8008e0a:	a846      	add	r0, sp, #280	; 0x118
 8008e0c:	f009 fc3e 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008e10:	2208      	movs	r2, #8
 8008e12:	2105      	movs	r1, #5
 8008e14:	a846      	add	r0, sp, #280	; 0x118
 8008e16:	f009 fc39 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008e1a:	2209      	movs	r2, #9
 8008e1c:	2106      	movs	r1, #6
 8008e1e:	a846      	add	r0, sp, #280	; 0x118
 8008e20:	f009 fc34 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008e24:	a80d      	add	r0, sp, #52	; 0x34
 8008e26:	f006 feab 	bl	800fb80 <StoreDisplayUdf::StoreDisplayUdf()>
 8008e2a:	a90d      	add	r1, sp, #52	; 0x34
 8008e2c:	a82f      	add	r0, sp, #188	; 0xbc
 8008e2e:	f009 fc6f 	bl	8012710 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008e32:	a82f      	add	r0, sp, #188	; 0xbc
 8008e34:	f009 fc79 	bl	801272a <DisplayUdfParams::Load()>
 8008e38:	b380      	cbz	r0, 8008e9c <main+0x328>
 8008e3a:	a82f      	add	r0, sp, #188	; 0xbc
 8008e3c:	a946      	add	r1, sp, #280	; 0x118
 8008e3e:	f009 fdaa 	bl	8012996 <DisplayUdfParams::Set(DisplayUdf*)>
 8008e42:	a82f      	add	r0, sp, #188	; 0xbc
 8008e44:	f009 fdda 	bl	80129fc <DisplayUdfParams::Dump()>
 8008e48:	e028      	b.n	8008e9c <main+0x328>
 8008e4a:	bf00      	nop
 8008e4c:	080164ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sl, sp, lr}
 8008e50:	080164a5 	stmdaeq	r1, {r0, r2, r5, r7, sl, sp, lr}
 8008e54:	080165a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, sp, lr}
 8008e58:	080164ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, sl, sp, lr}
 8008e5c:	40011000 	andmi	r1, r1, r0
 8008e60:	08016594 	stmdaeq	r1, {r2, r4, r7, r8, sl, sp, lr}
 8008e64:	08016580 	stmdaeq	r1, {r7, r8, sl, sp, lr}
 8008e68:	2000d298 	mulcs	r0, r8, r2
 8008e6c:	08017e64 	stmdaeq	r1, {r2, r5, r6, r9, sl, fp, ip, sp, lr}
 8008e70:	080164f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, sl, sp, lr}
 8008e74:	08016504 	stmdaeq	r1, {r2, r8, sl, sp, lr}
 8008e78:	080164fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, sp, lr}
 8008e7c:	080176ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, ip, sp, lr}
 8008e80:	08016554 	stmdaeq	r1, {r2, r4, r6, r8, sl, sp, lr}
 8008e84:	20005360 	andcs	r5, r0, r0, ror #6
 8008e88:	08017bb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, fp, ip, sp, lr}
 8008e8c:	2000cc60 	andcs	ip, r0, r0, ror #24
 8008e90:	20000004 	andcs	r0, r0, r4
 8008e94:	080176c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, ip, sp, lr}
 8008e98:	0801651b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, sp, lr}
 8008e9c:	f60d 01b8 	addw	r1, sp, #2232	; 0x8b8
 8008ea0:	a846      	add	r0, sp, #280	; 0x118
 8008ea2:	f009 fe9f 	bl	8012be4 <DisplayUdf::Show(ArtNetNode*)>
 8008ea6:	9a5d      	ldr	r2, [sp, #372]	; 0x174
 8008ea8:	4623      	mov	r3, r4
 8008eaa:	2100      	movs	r1, #0
 8008eac:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8008eb0:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008eb2:	f000 fb09 	bl	80094c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008eb6:	a80e      	add	r0, sp, #56	; 0x38
 8008eb8:	f006 ffd6 	bl	800fe68 <StoreRemoteConfig::StoreRemoteConfig()>
 8008ebc:	a90e      	add	r1, sp, #56	; 0x38
 8008ebe:	a826      	add	r0, sp, #152	; 0x98
 8008ec0:	f000 fe04 	bl	8009acc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008ec4:	a826      	add	r0, sp, #152	; 0x98
 8008ec6:	f000 fe0b 	bl	8009ae0 <RemoteConfigParams::Load()>
 8008eca:	b130      	cbz	r0, 8008eda <main+0x366>
 8008ecc:	a826      	add	r0, sp, #152	; 0x98
 8008ece:	a9b1      	add	r1, sp, #708	; 0x2c4
 8008ed0:	f000 ff2d 	bl	8009d2e <RemoteConfigParams::Set(RemoteConfig*)>
 8008ed4:	a826      	add	r0, sp, #152	; 0x98
 8008ed6:	f000 ff4e 	bl	8009d76 <RemoteConfigParams::Dump()>
 8008eda:	a807      	add	r0, sp, #28
 8008edc:	f006 fcc0 	bl	800f860 <SpiFlashStore::Flash()>
 8008ee0:	2800      	cmp	r0, #0
 8008ee2:	d1fa      	bne.n	8008eda <main+0x366>
 8008ee4:	2303      	movs	r3, #3
 8008ee6:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008eea:	498a      	ldr	r1, [pc, #552]	; (8009114 <main+0x5a0>)
 8008eec:	a846      	add	r0, sp, #280	; 0x118
 8008eee:	f7ff fde8 	bl	8008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ef2:	f60d 00b4 	addw	r0, sp, #2228	; 0x8b4
 8008ef6:	f001 fce1 	bl	800a8bc <ArtNet4Node::Start()>
 8008efa:	f248 0280 	movw	r2, #32896	; 0x8080
 8008efe:	2302      	movs	r3, #2
 8008f00:	4985      	ldr	r1, [pc, #532]	; (8009118 <main+0x5a4>)
 8008f02:	a846      	add	r0, sp, #280	; 0x118
 8008f04:	f7ff fddd 	bl	8008ac2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008f08:	2102      	movs	r1, #2
 8008f0a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008f0e:	f00b fcc5 	bl	801489c <fwdgt_config>
 8008f12:	2801      	cmp	r0, #1
 8008f14:	bf0c      	ite	eq
 8008f16:	2201      	moveq	r2, #1
 8008f18:	2200      	movne	r2, #0
 8008f1a:	ab1a      	add	r3, sp, #104	; 0x68
 8008f1c:	741a      	strb	r2, [r3, #16]
 8008f1e:	d101      	bne.n	8008f24 <main+0x3b0>
 8008f20:	f00b fcac 	bl	801487c <fwdgt_enable>
 8008f24:	4f7d      	ldr	r7, [pc, #500]	; (800911c <main+0x5a8>)
 8008f26:	f8df 81f8 	ldr.w	r8, [pc, #504]	; 8009120 <main+0x5ac>
 8008f2a:	f00b fcaf 	bl	801488c <fwdgt_counter_reload>
 8008f2e:	f7fe fb27 	bl	8007580 <net_handle>
 8008f32:	f60d 00b4 	addw	r0, sp, #2228	; 0x8b4
 8008f36:	f001 fcfc 	bl	800a932 <ArtNet4Node::Run()>
 8008f3a:	a8b1      	add	r0, sp, #708	; 0x2c4
 8008f3c:	f000 fc76 	bl	800982c <RemoteConfig::Run()>
 8008f40:	a807      	add	r0, sp, #28
 8008f42:	f006 fc8d 	bl	800f860 <SpiFlashStore::Flash()>
 8008f46:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8008f48:	aa1f      	add	r2, sp, #124	; 0x7c
 8008f4a:	b1a0      	cbz	r0, 8008f76 <main+0x402>
 8008f4c:	4c75      	ldr	r4, [pc, #468]	; (8009124 <main+0x5b0>)
 8008f4e:	6993      	ldr	r3, [r2, #24]
 8008f50:	6821      	ldr	r1, [r4, #0]
 8008f52:	f8d7 c000 	ldr.w	ip, [r7]
 8008f56:	1ac9      	subs	r1, r1, r3
 8008f58:	4288      	cmp	r0, r1
 8008f5a:	d80c      	bhi.n	8008f76 <main+0x402>
 8008f5c:	6821      	ldr	r1, [r4, #0]
 8008f5e:	f42c 1360 	bic.w	r3, ip, #3670016	; 0x380000
 8008f62:	6191      	str	r1, [r2, #24]
 8008f64:	6951      	ldr	r1, [r2, #20]
 8008f66:	2901      	cmp	r1, #1
 8008f68:	f081 0001 	eor.w	r0, r1, #1
 8008f6c:	bf08      	it	eq
 8008f6e:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 8008f72:	6150      	str	r0, [r2, #20]
 8008f74:	603b      	str	r3, [r7, #0]
 8008f76:	4b6c      	ldr	r3, [pc, #432]	; (8009128 <main+0x5b4>)
 8008f78:	683a      	ldr	r2, [r7, #0]
 8008f7a:	6819      	ldr	r1, [r3, #0]
 8008f7c:	428a      	cmp	r2, r1
 8008f7e:	d02a      	beq.n	8008fd6 <main+0x462>
 8008f80:	2110      	movs	r1, #16
 8008f82:	486a      	ldr	r0, [pc, #424]	; (800912c <main+0x5b8>)
 8008f84:	601a      	str	r2, [r3, #0]
 8008f86:	f00b fd09 	bl	801499c <gpio_bit_reset>
 8008f8a:	f3bf 8f6f 	isb	sy
 8008f8e:	f04f 0918 	mov.w	r9, #24
 8008f92:	f44f 0a00 	mov.w	sl, #8388608	; 0x800000
 8008f96:	4c65      	ldr	r4, [pc, #404]	; (800912c <main+0x5b8>)
 8008f98:	683b      	ldr	r3, [r7, #0]
 8008f9a:	2104      	movs	r1, #4
 8008f9c:	ea1a 0f03 	tst.w	sl, r3
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	d060      	beq.n	8009066 <main+0x4f2>
 8008fa4:	f00b fcf8 	bl	8014998 <gpio_bit_set>
 8008fa8:	f3bf 8f6f 	isb	sy
 8008fac:	2108      	movs	r1, #8
 8008fae:	4620      	mov	r0, r4
 8008fb0:	f00b fcf4 	bl	801499c <gpio_bit_reset>
 8008fb4:	f3bf 8f6f 	isb	sy
 8008fb8:	2108      	movs	r1, #8
 8008fba:	4620      	mov	r0, r4
 8008fbc:	f00b fcec 	bl	8014998 <gpio_bit_set>
 8008fc0:	f1b9 0901 	subs.w	r9, r9, #1
 8008fc4:	ea4f 0a5a 	mov.w	sl, sl, lsr #1
 8008fc8:	d1e6      	bne.n	8008f98 <main+0x424>
 8008fca:	2110      	movs	r1, #16
 8008fcc:	4857      	ldr	r0, [pc, #348]	; (800912c <main+0x5b8>)
 8008fce:	f00b fce3 	bl	8014998 <gpio_bit_set>
 8008fd2:	f3bf 8f6f 	isb	sy
 8008fd6:	994b      	ldr	r1, [sp, #300]	; 0x12c
 8008fd8:	aa46      	add	r2, sp, #280	; 0x118
 8008fda:	b161      	cbz	r1, 8008ff6 <main+0x482>
 8008fdc:	7c13      	ldrb	r3, [r2, #16]
 8008fde:	2b00      	cmp	r3, #0
 8008fe0:	d144      	bne.n	800906c <main+0x4f8>
 8008fe2:	4b50      	ldr	r3, [pc, #320]	; (8009124 <main+0x5b0>)
 8008fe4:	6852      	ldr	r2, [r2, #4]
 8008fe6:	681b      	ldr	r3, [r3, #0]
 8008fe8:	1a9b      	subs	r3, r3, r2
 8008fea:	4299      	cmp	r1, r3
 8008fec:	d203      	bcs.n	8008ff6 <main+0x482>
 8008fee:	2101      	movs	r1, #1
 8008ff0:	a846      	add	r0, sp, #280	; 0x118
 8008ff2:	f7ff fd21 	bl	8008a38 <Display::SetSleep(bool)>
 8008ff6:	b396      	cbz	r6, 800905e <main+0x4ea>
 8008ff8:	f1a5 030e 	sub.w	r3, r5, #14
 8008ffc:	f8df 9130 	ldr.w	r9, [pc, #304]	; 8009130 <main+0x5bc>
 8009000:	484c      	ldr	r0, [pc, #304]	; (8009134 <main+0x5c0>)
 8009002:	9300      	str	r3, [sp, #0]
 8009004:	2210      	movs	r2, #16
 8009006:	4649      	mov	r1, r9
 8009008:	7800      	ldrb	r0, [r0, #0]
 800900a:	ab0f      	add	r3, sp, #60	; 0x3c
 800900c:	f007 fb78 	bl	8010700 <udp_recv>
 8009010:	280a      	cmp	r0, #10
 8009012:	4604      	mov	r4, r0
 8009014:	d923      	bls.n	800905e <main+0x4ea>
 8009016:	2204      	movs	r2, #4
 8009018:	4649      	mov	r1, r9
 800901a:	4847      	ldr	r0, [pc, #284]	; (8009138 <main+0x5c4>)
 800901c:	f7ff fc55 	bl	80088ca <memcmp>
 8009020:	b9e8      	cbnz	r0, 800905e <main+0x4ea>
 8009022:	44a1      	add	r9, r4
 8009024:	f819 3c01 	ldrb.w	r3, [r9, #-1]
 8009028:	2b0a      	cmp	r3, #10
 800902a:	d103      	bne.n	8009034 <main+0x4c0>
 800902c:	3c01      	subs	r4, #1
 800902e:	b2a4      	uxth	r4, r4
 8009030:	2c0a      	cmp	r4, #10
 8009032:	d057      	beq.n	80090e4 <main+0x570>
 8009034:	2c0e      	cmp	r4, #14
 8009036:	d853      	bhi.n	80090e0 <main+0x56c>
 8009038:	2206      	movs	r2, #6
 800903a:	f8d8 1000 	ldr.w	r1, [r8]
 800903e:	483f      	ldr	r0, [pc, #252]	; (800913c <main+0x5c8>)
 8009040:	f7ff fc43 	bl	80088ca <memcmp>
 8009044:	2800      	cmp	r0, #0
 8009046:	d14d      	bne.n	80090e4 <main+0x570>
 8009048:	2104      	movs	r1, #4
 800904a:	483d      	ldr	r0, [pc, #244]	; (8009140 <main+0x5cc>)
 800904c:	f7ff fc51 	bl	80088f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8009050:	285b      	cmp	r0, #91	; 0x5b
 8009052:	4601      	mov	r1, r0
 8009054:	d903      	bls.n	800905e <main+0x4ea>
 8009056:	4b3b      	ldr	r3, [pc, #236]	; (8009144 <main+0x5d0>)
 8009058:	6818      	ldr	r0, [r3, #0]
 800905a:	f006 f94d 	bl	800f2f8 <Dmx::SetDmxBreakTime(unsigned int)>
 800905e:	a808      	add	r0, sp, #32
 8009060:	f007 ffd6 	bl	8011010 <MDNS::Run()>
 8009064:	e761      	b.n	8008f2a <main+0x3b6>
 8009066:	f00b fc99 	bl	801499c <gpio_bit_reset>
 800906a:	e79d      	b.n	8008fa8 <main+0x434>
 800906c:	f00a f943 	bl	80132f6 <display::timeout::gpio_renew()>
 8009070:	2800      	cmp	r0, #0
 8009072:	d0c0      	beq.n	8008ff6 <main+0x482>
 8009074:	2100      	movs	r1, #0
 8009076:	e7bb      	b.n	8008ff0 <main+0x47c>
 8009078:	2c0c      	cmp	r4, #12
 800907a:	d916      	bls.n	80090aa <main+0x536>
 800907c:	2c0e      	cmp	r4, #14
 800907e:	d82c      	bhi.n	80090da <main+0x566>
 8009080:	2208      	movs	r2, #8
 8009082:	f8d8 1000 	ldr.w	r1, [r8]
 8009086:	4830      	ldr	r0, [pc, #192]	; (8009148 <main+0x5d4>)
 8009088:	f7ff fc1f 	bl	80088ca <memcmp>
 800908c:	bb28      	cbnz	r0, 80090da <main+0x566>
 800908e:	2102      	movs	r1, #2
 8009090:	482e      	ldr	r0, [pc, #184]	; (800914c <main+0x5d8>)
 8009092:	f7ff fc2e 	bl	80088f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 8009096:	4601      	mov	r1, r0
 8009098:	b110      	cbz	r0, 80090a0 <main+0x52c>
 800909a:	4b2d      	ldr	r3, [pc, #180]	; (8009150 <main+0x5dc>)
 800909c:	fbb3 f1f0 	udiv	r1, r3, r0
 80090a0:	4b28      	ldr	r3, [pc, #160]	; (8009144 <main+0x5d0>)
 80090a2:	6818      	ldr	r0, [r3, #0]
 80090a4:	f006 f8e8 	bl	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 80090a8:	e7d9      	b.n	800905e <main+0x4ea>
 80090aa:	2c0a      	cmp	r4, #10
 80090ac:	d0d7      	beq.n	800905e <main+0x4ea>
 80090ae:	2206      	movs	r2, #6
 80090b0:	f8d8 1000 	ldr.w	r1, [r8]
 80090b4:	4827      	ldr	r0, [pc, #156]	; (8009154 <main+0x5e0>)
 80090b6:	f7ff fc08 	bl	80088ca <memcmp>
 80090ba:	2800      	cmp	r0, #0
 80090bc:	d1cf      	bne.n	800905e <main+0x4ea>
 80090be:	2103      	movs	r1, #3
 80090c0:	481f      	ldr	r0, [pc, #124]	; (8009140 <main+0x5cc>)
 80090c2:	f7ff fc16 	bl	80088f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 80090c6:	1e83      	subs	r3, r0, #2
 80090c8:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80090cc:	d8c7      	bhi.n	800905e <main+0x4ea>
 80090ce:	4b1d      	ldr	r3, [pc, #116]	; (8009144 <main+0x5d0>)
 80090d0:	b281      	uxth	r1, r0
 80090d2:	6818      	ldr	r0, [r3, #0]
 80090d4:	f006 f924 	bl	800f320 <Dmx::SetDmxSlots(unsigned short)>
 80090d8:	e7c1      	b.n	800905e <main+0x4ea>
 80090da:	2c0d      	cmp	r4, #13
 80090dc:	d0e7      	beq.n	80090ae <main+0x53a>
 80090de:	e7be      	b.n	800905e <main+0x4ea>
 80090e0:	2c10      	cmp	r4, #16
 80090e2:	d8bc      	bhi.n	800905e <main+0x4ea>
 80090e4:	2204      	movs	r2, #4
 80090e6:	f8d8 1000 	ldr.w	r1, [r8]
 80090ea:	481b      	ldr	r0, [pc, #108]	; (8009158 <main+0x5e4>)
 80090ec:	f7ff fbed 	bl	80088ca <memcmp>
 80090f0:	2800      	cmp	r0, #0
 80090f2:	d1c1      	bne.n	8009078 <main+0x504>
 80090f4:	2107      	movs	r1, #7
 80090f6:	4819      	ldr	r0, [pc, #100]	; (800915c <main+0x5e8>)
 80090f8:	f7ff fbfb 	bl	80088f2 <dmxconfigudp::atoi(char const*, unsigned char)>
 80090fc:	4b18      	ldr	r3, [pc, #96]	; (8009160 <main+0x5ec>)
 80090fe:	f1a0 020c 	sub.w	r2, r0, #12
 8009102:	429a      	cmp	r2, r3
 8009104:	4601      	mov	r1, r0
 8009106:	d8aa      	bhi.n	800905e <main+0x4ea>
 8009108:	4b0e      	ldr	r3, [pc, #56]	; (8009144 <main+0x5d0>)
 800910a:	6818      	ldr	r0, [r3, #0]
 800910c:	f006 f8fe 	bl	800f30c <Dmx::SetDmxMabTime(unsigned int)>
 8009110:	e7a5      	b.n	800905e <main+0x4ea>
 8009112:	bf00      	nop
 8009114:	0801769c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, ip, sp, lr}
 8009118:	080176d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 800911c:	2000d390 	mulcs	r0, r0, r3
 8009120:	20000000 	andcs	r0, r0, r0
 8009124:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8009128:	2000d38c 	andcs	sp, r0, ip, lsl #7
 800912c:	40011800 	andmi	r1, r1, r0, lsl #16
 8009130:	20003271 	andcs	r3, r0, r1, ror r2
 8009134:	20000004 	andcs	r0, r0, r4
 8009138:	08016528 	stmdaeq	r1, {r3, r5, r8, sl, sp, lr}
 800913c:	0801652d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, sp, lr}
 8009140:	2000327b 	andcs	r3, r0, fp, ror r2
 8009144:	20004328 	andcs	r4, r0, r8, lsr #6
 8009148:	08016539 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, sp, lr}
 800914c:	2000327d 	andcs	r3, r0, sp, ror r2
 8009150:	000f4240 	andeq	r4, pc, r0, asr #4
 8009154:	08016542 	stmdaeq	r1, {r1, r6, r8, sl, sp, lr}
 8009158:	08016534 	stmdaeq	r1, {r2, r4, r5, r8, sl, sp, lr}
 800915c:	20003279 	andcs	r3, r0, r9, ror r2
 8009160:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08009164 <DmxInput::~DmxInput()>:
 8009164:	4770      	bx	lr
	...

08009168 <DmxInput::Start(unsigned int)>:
 8009168:	2301      	movs	r3, #1
 800916a:	b410      	push	{r4}
 800916c:	4c08      	ldr	r4, [pc, #32]	; (8009190 <DmxInput::Start(unsigned int)+0x28>)
 800916e:	fa03 f001 	lsl.w	r0, r3, r1
 8009172:	7822      	ldrb	r2, [r4, #0]
 8009174:	ea30 0c02 	bics.w	ip, r0, r2
 8009178:	d007      	beq.n	800918a <DmxInput::Start(unsigned int)+0x22>
 800917a:	4302      	orrs	r2, r0
 800917c:	4805      	ldr	r0, [pc, #20]	; (8009194 <DmxInput::Start(unsigned int)+0x2c>)
 800917e:	7022      	strb	r2, [r4, #0]
 8009180:	6800      	ldr	r0, [r0, #0]
 8009182:	461a      	mov	r2, r3
 8009184:	bc10      	pop	{r4}
 8009186:	f005 beef 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800918a:	bc10      	pop	{r4}
 800918c:	4770      	bx	lr
 800918e:	bf00      	nop
 8009190:	200000f8 	strdcs	r0, [r0], -r8
 8009194:	20004328 	andcs	r4, r0, r8, lsr #6

08009198 <DmxInput::Stop(unsigned int)>:
 8009198:	2201      	movs	r2, #1
 800919a:	b410      	push	{r4}
 800919c:	4c08      	ldr	r4, [pc, #32]	; (80091c0 <DmxInput::Stop(unsigned int)+0x28>)
 800919e:	fa02 f001 	lsl.w	r0, r2, r1
 80091a2:	7823      	ldrb	r3, [r4, #0]
 80091a4:	ea30 0c03 	bics.w	ip, r0, r3
 80091a8:	d108      	bne.n	80091bc <DmxInput::Stop(unsigned int)+0x24>
 80091aa:	ea23 0300 	bic.w	r3, r3, r0
 80091ae:	4805      	ldr	r0, [pc, #20]	; (80091c4 <DmxInput::Stop(unsigned int)+0x2c>)
 80091b0:	7023      	strb	r3, [r4, #0]
 80091b2:	6800      	ldr	r0, [r0, #0]
 80091b4:	2300      	movs	r3, #0
 80091b6:	bc10      	pop	{r4}
 80091b8:	f005 bed6 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 80091bc:	bc10      	pop	{r4}
 80091be:	4770      	bx	lr
 80091c0:	200000f8 	strdcs	r0, [r0], -r8
 80091c4:	20004328 	andcs	r4, r0, r8, lsr #6

080091c8 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 80091c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80091cc:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8009200 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x38>
 80091d0:	461e      	mov	r6, r3
 80091d2:	f8d8 0000 	ldr.w	r0, [r8]
 80091d6:	460f      	mov	r7, r1
 80091d8:	4615      	mov	r5, r2
 80091da:	f006 f8e5 	bl	800f3a8 <Dmx::GetDmxAvailable(unsigned int)>
 80091de:	4639      	mov	r1, r7
 80091e0:	4604      	mov	r4, r0
 80091e2:	f8d8 0000 	ldr.w	r0, [r8]
 80091e6:	f006 f8f3 	bl	800f3d0 <Dmx::GetUpdatesPerSecond(unsigned int)>
 80091ea:	6030      	str	r0, [r6, #0]
 80091ec:	b134      	cbz	r4, 80091fc <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x34>
 80091ee:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 80091f2:	3401      	adds	r4, #1
 80091f4:	4620      	mov	r0, r4
 80091f6:	602b      	str	r3, [r5, #0]
 80091f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80091fc:	4623      	mov	r3, r4
 80091fe:	e7f9      	b.n	80091f4 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2c>
 8009200:	20004328 	andcs	r4, r0, r8, lsr #6

08009204 <DmxInput::~DmxInput()>:
 8009204:	b510      	push	{r4, lr}
 8009206:	4604      	mov	r4, r0
 8009208:	f00a fc0e 	bl	8013a28 <operator delete(void*)>
 800920c:	4620      	mov	r0, r4
 800920e:	bd10      	pop	{r4, pc}

08009210 <DmxInput::DmxInput()>:
 8009210:	b538      	push	{r3, r4, r5, lr}
 8009212:	4604      	mov	r4, r0
 8009214:	2500      	movs	r5, #0
 8009216:	4b05      	ldr	r3, [pc, #20]	; (800922c <DmxInput::DmxInput()+0x1c>)
 8009218:	6003      	str	r3, [r0, #0]
 800921a:	4629      	mov	r1, r5
 800921c:	4620      	mov	r0, r4
 800921e:	3501      	adds	r5, #1
 8009220:	f7ff ffba 	bl	8009198 <DmxInput::Stop(unsigned int)>
 8009224:	2d08      	cmp	r5, #8
 8009226:	d1f8      	bne.n	800921a <DmxInput::DmxInput()+0xa>
 8009228:	4620      	mov	r0, r4
 800922a:	bd38      	pop	{r3, r4, r5, pc}
 800922c:	080165b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, sp, lr}

08009230 <RemoteConfig::HandleList()>:
 8009230:	2212      	movs	r2, #18
 8009232:	6803      	ldr	r3, [r0, #0]
 8009234:	4931      	ldr	r1, [pc, #196]	; (80092fc <RemoteConfig::HandleList()+0xcc>)
 8009236:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800923a:	fb02 1103 	mla	r1, r2, r3, r1
 800923e:	220c      	movs	r2, #12
 8009240:	4604      	mov	r4, r0
 8009242:	6843      	ldr	r3, [r0, #4]
 8009244:	482e      	ldr	r0, [pc, #184]	; (8009300 <RemoteConfig::HandleList()+0xd0>)
 8009246:	4e2f      	ldr	r6, [pc, #188]	; (8009304 <RemoteConfig::HandleList()+0xd4>)
 8009248:	fb02 0003 	mla	r0, r2, r3, r0
 800924c:	4b2e      	ldr	r3, [pc, #184]	; (8009308 <RemoteConfig::HandleList()+0xd8>)
 800924e:	4f2f      	ldr	r7, [pc, #188]	; (800930c <RemoteConfig::HandleList()+0xdc>)
 8009250:	681b      	ldr	r3, [r3, #0]
 8009252:	6835      	ldr	r5, [r6, #0]
 8009254:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8009258:	f897 9009 	ldrb.w	r9, [r7, #9]
 800925c:	fa5f f38c 	uxtb.w	r3, ip
 8009260:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8009264:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8009268:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800926c:	b089      	sub	sp, #36	; 0x24
 800926e:	3507      	adds	r5, #7
 8009270:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8009274:	f1b9 0f00 	cmp.w	r9, #0
 8009278:	d023      	beq.n	80092c2 <RemoteConfig::HandleList()+0x92>
 800927a:	b2d2      	uxtb	r2, r2
 800927c:	3709      	adds	r7, #9
 800927e:	9201      	str	r2, [sp, #4]
 8009280:	fa5f f28c 	uxtb.w	r2, ip
 8009284:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8009288:	9200      	str	r2, [sp, #0]
 800928a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800928e:	4628      	mov	r0, r5
 8009290:	e9cd 8705 	strd	r8, r7, [sp, #20]
 8009294:	4a1e      	ldr	r2, [pc, #120]	; (8009310 <RemoteConfig::HandleList()+0xe0>)
 8009296:	f8cd e008 	str.w	lr, [sp, #8]
 800929a:	f00a fff7 	bl	801428c <snprintf>
 800929e:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 80092a2:	2b05      	cmp	r3, #5
 80092a4:	d11d      	bne.n	80092e2 <RemoteConfig::HandleList()+0xb2>
 80092a6:	f642 1305 	movw	r3, #10501	; 0x2905
 80092aa:	9300      	str	r3, [sp, #0]
 80092ac:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80092b0:	b282      	uxth	r2, r0
 80092b2:	4629      	mov	r1, r5
 80092b4:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 80092b8:	f007 fa7e 	bl	80107b8 <udp_send>
 80092bc:	b009      	add	sp, #36	; 0x24
 80092be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80092c2:	b2d2      	uxtb	r2, r2
 80092c4:	9201      	str	r2, [sp, #4]
 80092c6:	fa5f f28c 	uxtb.w	r2, ip
 80092ca:	e9cd 0804 	strd	r0, r8, [sp, #16]
 80092ce:	e9cd e102 	strd	lr, r1, [sp, #8]
 80092d2:	9200      	str	r2, [sp, #0]
 80092d4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80092d8:	4628      	mov	r0, r5
 80092da:	4a0e      	ldr	r2, [pc, #56]	; (8009314 <RemoteConfig::HandleList()+0xe4>)
 80092dc:	f00a ffd6 	bl	801428c <snprintf>
 80092e0:	e7dd      	b.n	800929e <RemoteConfig::HandleList()+0x6e>
 80092e2:	2b06      	cmp	r3, #6
 80092e4:	d1ea      	bne.n	80092bc <RemoteConfig::HandleList()+0x8c>
 80092e6:	6833      	ldr	r3, [r6, #0]
 80092e8:	799b      	ldrb	r3, [r3, #6]
 80092ea:	2b2a      	cmp	r3, #42	; 0x2a
 80092ec:	d1e6      	bne.n	80092bc <RemoteConfig::HandleList()+0x8c>
 80092ee:	f642 1305 	movw	r3, #10501	; 0x2905
 80092f2:	9300      	str	r3, [sp, #0]
 80092f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80092f8:	e7da      	b.n	80092b0 <RemoteConfig::HandleList()+0x80>
 80092fa:	bf00      	nop
 80092fc:	0801668e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, sp, lr}
 8009300:	08016730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, lr}
 8009304:	200000fc 	strdcs	r0, [r0], -ip
 8009308:	2000cc60 	andcs	ip, r0, r0, ror #24
 800930c:	20000100 	andcs	r0, r0, r0, lsl #2
 8009310:	080165c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, sp, lr}
 8009314:	080165e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, sp, lr}

08009318 <RemoteConfig::HandleDisplayGet()>:
 8009318:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800931c:	2b08      	cmp	r3, #8
 800931e:	d11d      	bne.n	800935c <RemoteConfig::HandleDisplayGet()+0x44>
 8009320:	4b0f      	ldr	r3, [pc, #60]	; (8009360 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009322:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	4d0f      	ldr	r5, [pc, #60]	; (8009364 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009328:	7c19      	ldrb	r1, [r3, #16]
 800932a:	4a0f      	ldr	r2, [pc, #60]	; (8009368 <RemoteConfig::HandleDisplayGet()+0x50>)
 800932c:	4b0f      	ldr	r3, [pc, #60]	; (800936c <RemoteConfig::HandleDisplayGet()+0x54>)
 800932e:	4604      	mov	r4, r0
 8009330:	2900      	cmp	r1, #0
 8009332:	bf18      	it	ne
 8009334:	4613      	movne	r3, r2
 8009336:	6828      	ldr	r0, [r5, #0]
 8009338:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800933c:	4a0c      	ldr	r2, [pc, #48]	; (8009370 <RemoteConfig::HandleDisplayGet()+0x58>)
 800933e:	f00a ffa5 	bl	801428c <snprintf>
 8009342:	f642 1305 	movw	r3, #10501	; 0x2905
 8009346:	9300      	str	r3, [sp, #0]
 8009348:	b282      	uxth	r2, r0
 800934a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800934e:	6829      	ldr	r1, [r5, #0]
 8009350:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009354:	f007 fa30 	bl	80107b8 <udp_send>
 8009358:	b003      	add	sp, #12
 800935a:	bd30      	pop	{r4, r5, pc}
 800935c:	4770      	bx	lr
 800935e:	bf00      	nop
 8009360:	2000d298 	mulcs	r0, r8, r2
 8009364:	200000fc 	strdcs	r0, [r0], -ip
 8009368:	080165fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, sp, lr}
 800936c:	080165f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, sl, sp, lr}
 8009370:	080165fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sl, sp, lr}

08009374 <RemoteConfig::HandleTftpSet()>:
 8009374:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 8009378:	2a06      	cmp	r2, #6
 800937a:	d109      	bne.n	8009390 <RemoteConfig::HandleTftpSet()+0x1c>
 800937c:	4a05      	ldr	r2, [pc, #20]	; (8009394 <RemoteConfig::HandleTftpSet()+0x20>)
 800937e:	6812      	ldr	r2, [r2, #0]
 8009380:	7992      	ldrb	r2, [r2, #6]
 8009382:	3a30      	subs	r2, #48	; 0x30
 8009384:	bf18      	it	ne
 8009386:	2201      	movne	r2, #1
 8009388:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800938c:	f000 bd72 	b.w	8009e74 <RemoteConfig::PlatformHandleTftpSet()>
 8009390:	4770      	bx	lr
 8009392:	bf00      	nop
 8009394:	200000fc 	strdcs	r0, [r0], -ip

08009398 <RemoteConfig::HandleTftpGet()>:
 8009398:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800939a:	4604      	mov	r4, r0
 800939c:	f000 fd72 	bl	8009e84 <RemoteConfig::PlatformHandleTftpGet()>
 80093a0:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 80093a4:	2b05      	cmp	r3, #5
 80093a6:	d118      	bne.n	80093da <RemoteConfig::HandleTftpGet()+0x42>
 80093a8:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 80093ac:	4d0c      	ldr	r5, [pc, #48]	; (80093e0 <RemoteConfig::HandleTftpGet()+0x48>)
 80093ae:	4a0d      	ldr	r2, [pc, #52]	; (80093e4 <RemoteConfig::HandleTftpGet()+0x4c>)
 80093b0:	4b0d      	ldr	r3, [pc, #52]	; (80093e8 <RemoteConfig::HandleTftpGet()+0x50>)
 80093b2:	6828      	ldr	r0, [r5, #0]
 80093b4:	2900      	cmp	r1, #0
 80093b6:	bf08      	it	eq
 80093b8:	4613      	moveq	r3, r2
 80093ba:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80093be:	4a0b      	ldr	r2, [pc, #44]	; (80093ec <RemoteConfig::HandleTftpGet()+0x54>)
 80093c0:	f00a ff64 	bl	801428c <snprintf>
 80093c4:	f642 1305 	movw	r3, #10501	; 0x2905
 80093c8:	b282      	uxth	r2, r0
 80093ca:	9300      	str	r3, [sp, #0]
 80093cc:	6829      	ldr	r1, [r5, #0]
 80093ce:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80093d2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 80093d6:	f007 f9ef 	bl	80107b8 <udp_send>
 80093da:	b003      	add	sp, #12
 80093dc:	bd30      	pop	{r4, r5, pc}
 80093de:	bf00      	nop
 80093e0:	200000fc 	strdcs	r0, [r0], -ip
 80093e4:	080165fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, sl, sp, lr}
 80093e8:	080165f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, sl, sp, lr}
 80093ec:	0801660a 	stmdaeq	r1, {r1, r3, r9, sl, sp, lr}

080093f0 <RemoteConfig::HandleVersion()>:
 80093f0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 80093f4:	2b08      	cmp	r3, #8
 80093f6:	d116      	bne.n	8009426 <RemoteConfig::HandleVersion()+0x36>
 80093f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80093fa:	4d0b      	ldr	r5, [pc, #44]	; (8009428 <RemoteConfig::HandleVersion()+0x38>)
 80093fc:	4604      	mov	r4, r0
 80093fe:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009402:	4b0a      	ldr	r3, [pc, #40]	; (800942c <RemoteConfig::HandleVersion()+0x3c>)
 8009404:	4a0a      	ldr	r2, [pc, #40]	; (8009430 <RemoteConfig::HandleVersion()+0x40>)
 8009406:	6828      	ldr	r0, [r5, #0]
 8009408:	f00a ff40 	bl	801428c <snprintf>
 800940c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009410:	9300      	str	r3, [sp, #0]
 8009412:	b282      	uxth	r2, r0
 8009414:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8009418:	6829      	ldr	r1, [r5, #0]
 800941a:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800941e:	f007 f9cb 	bl	80107b8 <udp_send>
 8009422:	b003      	add	sp, #12
 8009424:	bd30      	pop	{r4, r5, pc}
 8009426:	4770      	bx	lr
 8009428:	200000fc 	strdcs	r0, [r0], -ip
 800942c:	2000d33e 	andcs	sp, r0, lr, lsr r3
 8009430:	08016613 	stmdaeq	r1, {r0, r1, r4, r9, sl, sp, lr}

08009434 <RemoteConfig::HandleUptime()>:
 8009434:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 8009438:	b1fb      	cbz	r3, 800947a <RemoteConfig::HandleUptime()+0x46>
 800943a:	4b10      	ldr	r3, [pc, #64]	; (800947c <RemoteConfig::HandleUptime()+0x48>)
 800943c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800943e:	681a      	ldr	r2, [r3, #0]
 8009440:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 8009444:	4604      	mov	r4, r0
 8009446:	2b07      	cmp	r3, #7
 8009448:	d115      	bne.n	8009476 <RemoteConfig::HandleUptime()+0x42>
 800944a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800944e:	4d0c      	ldr	r5, [pc, #48]	; (8009480 <RemoteConfig::HandleUptime()+0x4c>)
 8009450:	fbb2 f3f3 	udiv	r3, r2, r3
 8009454:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009458:	4a0a      	ldr	r2, [pc, #40]	; (8009484 <RemoteConfig::HandleUptime()+0x50>)
 800945a:	6828      	ldr	r0, [r5, #0]
 800945c:	f00a ff16 	bl	801428c <snprintf>
 8009460:	f642 1305 	movw	r3, #10501	; 0x2905
 8009464:	9300      	str	r3, [sp, #0]
 8009466:	b282      	uxth	r2, r0
 8009468:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800946c:	6829      	ldr	r1, [r5, #0]
 800946e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009472:	f007 f9a1 	bl	80107b8 <udp_send>
 8009476:	b003      	add	sp, #12
 8009478:	bd30      	pop	{r4, r5, pc}
 800947a:	4770      	bx	lr
 800947c:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8009480:	200000fc 	strdcs	r0, [r0], -ip
 8009484:	0801661e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, sp, lr}

08009488 <RemoteConfig::HandleDisplaySet()>:
 8009488:	b538      	push	{r3, r4, r5, lr}
 800948a:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800948e:	2b09      	cmp	r3, #9
 8009490:	d113      	bne.n	80094ba <RemoteConfig::HandleDisplaySet()+0x32>
 8009492:	4b0a      	ldr	r3, [pc, #40]	; (80094bc <RemoteConfig::HandleDisplaySet()+0x34>)
 8009494:	681c      	ldr	r4, [r3, #0]
 8009496:	4b0a      	ldr	r3, [pc, #40]	; (80094c0 <RemoteConfig::HandleDisplaySet()+0x38>)
 8009498:	69a0      	ldr	r0, [r4, #24]
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	7a5d      	ldrb	r5, [r3, #9]
 800949e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80094a2:	4259      	negs	r1, r3
 80094a4:	4159      	adcs	r1, r3
 80094a6:	b140      	cbz	r0, 80094ba <RemoteConfig::HandleDisplaySet()+0x32>
 80094a8:	6803      	ldr	r3, [r0, #0]
 80094aa:	7421      	strb	r1, [r4, #16]
 80094ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80094ae:	4798      	blx	r3
 80094b0:	2d30      	cmp	r5, #48	; 0x30
 80094b2:	bf1e      	ittt	ne
 80094b4:	4b03      	ldrne	r3, [pc, #12]	; (80094c4 <RemoteConfig::HandleDisplaySet()+0x3c>)
 80094b6:	681b      	ldrne	r3, [r3, #0]
 80094b8:	6063      	strne	r3, [r4, #4]
 80094ba:	bd38      	pop	{r3, r4, r5, pc}
 80094bc:	2000d298 	mulcs	r0, r8, r2
 80094c0:	200000fc 	strdcs	r0, [r0], -ip
 80094c4:	2000d3ac 	andcs	sp, r0, ip, lsr #7

080094c8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80094c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80094cc:	f100 0a0c 	add.w	sl, r0, #12
 80094d0:	4604      	mov	r4, r0
 80094d2:	e9c0 1200 	strd	r1, r2, [r0]
 80094d6:	6083      	str	r3, [r0, #8]
 80094d8:	4650      	mov	r0, sl
 80094da:	4690      	mov	r8, r2
 80094dc:	4689      	mov	r9, r1
 80094de:	461f      	mov	r7, r3
 80094e0:	f000 fd10 	bl	8009f04 <HttpDaemon::HttpDaemon()>
 80094e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80094e8:	2500      	movs	r5, #0
 80094ea:	4e16      	ldr	r6, [pc, #88]	; (8009544 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 80094ec:	f8df b058 	ldr.w	fp, [pc, #88]	; 8009548 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 80094f0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 80094f4:	4b15      	ldr	r3, [pc, #84]	; (800954c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 80094f6:	4631      	mov	r1, r6
 80094f8:	f8db 0000 	ldr.w	r0, [fp]
 80094fc:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 8009500:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 8009504:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 8009508:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800950c:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 8009510:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 8009514:	601c      	str	r4, [r3, #0]
 8009516:	f007 fe25 	bl	8011164 <Network::MacAddressCopyTo(unsigned char*)>
 800951a:	f642 1105 	movw	r1, #10501	; 0x2905
 800951e:	f8db 0000 	ldr.w	r0, [fp]
 8009522:	f886 9006 	strb.w	r9, [r6, #6]
 8009526:	f886 8007 	strb.w	r8, [r6, #7]
 800952a:	7237      	strb	r7, [r6, #8]
 800952c:	7275      	strb	r5, [r6, #9]
 800952e:	f007 fe13 	bl	8011158 <Network::Begin(unsigned short)>
 8009532:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8009536:	4650      	mov	r0, sl
 8009538:	f000 fcfc 	bl	8009f34 <HttpDaemon::Start()>
 800953c:	4620      	mov	r0, r4
 800953e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009542:	bf00      	nop
 8009544:	20000100 	andcs	r0, r0, r0, lsl #2
 8009548:	2000cc60 	andcs	ip, r0, r0, ror #24
 800954c:	20000124 	andcs	r0, r0, r4, lsr #2

08009550 <RemoteConfig::GetStringNode() const>:
 8009550:	2012      	movs	r0, #18
 8009552:	4b03      	ldr	r3, [pc, #12]	; (8009560 <RemoteConfig::GetStringNode() const+0x10>)
 8009554:	799a      	ldrb	r2, [r3, #6]
 8009556:	4b03      	ldr	r3, [pc, #12]	; (8009564 <RemoteConfig::GetStringNode() const+0x14>)
 8009558:	fb00 3002 	mla	r0, r0, r2, r3
 800955c:	4770      	bx	lr
 800955e:	bf00      	nop
 8009560:	20000100 	andcs	r0, r0, r0, lsl #2
 8009564:	0801668e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, sp, lr}

08009568 <RemoteConfig::GetStringOutput() const>:
 8009568:	200c      	movs	r0, #12
 800956a:	4b03      	ldr	r3, [pc, #12]	; (8009578 <RemoteConfig::GetStringOutput() const+0x10>)
 800956c:	79da      	ldrb	r2, [r3, #7]
 800956e:	4b03      	ldr	r3, [pc, #12]	; (800957c <RemoteConfig::GetStringOutput() const+0x14>)
 8009570:	fb00 3002 	mla	r0, r0, r2, r3
 8009574:	4770      	bx	lr
 8009576:	bf00      	nop
 8009578:	20000100 	andcs	r0, r0, r0, lsl #2
 800957c:	08016730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, lr}

08009580 <RemoteConfig::SetDisable(bool)>:
 8009580:	b538      	push	{r3, r4, r5, lr}
 8009582:	4604      	mov	r4, r0
 8009584:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 8009588:	b171      	cbz	r1, 80095a8 <RemoteConfig::SetDisable(bool)+0x28>
 800958a:	b963      	cbnz	r3, 80095a6 <RemoteConfig::SetDisable(bool)+0x26>
 800958c:	4b0d      	ldr	r3, [pc, #52]	; (80095c4 <RemoteConfig::SetDisable(bool)+0x44>)
 800958e:	f642 1105 	movw	r1, #10501	; 0x2905
 8009592:	6818      	ldr	r0, [r3, #0]
 8009594:	f007 fde3 	bl	801115e <Network::End(unsigned short)>
 8009598:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800959c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 80095a0:	2301      	movs	r3, #1
 80095a2:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 80095a6:	bd38      	pop	{r3, r4, r5, pc}
 80095a8:	2b00      	cmp	r3, #0
 80095aa:	d0fc      	beq.n	80095a6 <RemoteConfig::SetDisable(bool)+0x26>
 80095ac:	4b05      	ldr	r3, [pc, #20]	; (80095c4 <RemoteConfig::SetDisable(bool)+0x44>)
 80095ae:	460d      	mov	r5, r1
 80095b0:	6818      	ldr	r0, [r3, #0]
 80095b2:	f642 1105 	movw	r1, #10501	; 0x2905
 80095b6:	f007 fdcf 	bl	8011158 <Network::Begin(unsigned short)>
 80095ba:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 80095be:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 80095c2:	e7f0      	b.n	80095a6 <RemoteConfig::SetDisable(bool)+0x26>
 80095c4:	2000cc60 	andcs	ip, r0, r0, ror #24

080095c8 <RemoteConfig::SetDisplayName(char const*)>:
 80095c8:	2217      	movs	r2, #23
 80095ca:	4809      	ldr	r0, [pc, #36]	; (80095f0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 80095cc:	b508      	push	{r3, lr}
 80095ce:	1e4b      	subs	r3, r1, #1
 80095d0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80095d4:	b931      	cbnz	r1, 80095e4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 80095d6:	f00a fb01 	bl	8013bdc <memset>
 80095da:	2200      	movs	r2, #0
 80095dc:	4b05      	ldr	r3, [pc, #20]	; (80095f4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80095de:	f883 2020 	strb.w	r2, [r3, #32]
 80095e2:	bd08      	pop	{r3, pc}
 80095e4:	3a01      	subs	r2, #1
 80095e6:	f800 1b01 	strb.w	r1, [r0], #1
 80095ea:	d1f1      	bne.n	80095d0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 80095ec:	e7f5      	b.n	80095da <RemoteConfig::SetDisplayName(char const*)+0x12>
 80095ee:	bf00      	nop
 80095f0:	20000109 	andcs	r0, r0, r9, lsl #2
 80095f4:	20000100 	andcs	r0, r0, r0, lsl #2

080095f8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80095f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095fa:	4604      	mov	r4, r0
 80095fc:	4616      	mov	r6, r2
 80095fe:	460d      	mov	r5, r1
 8009600:	4f29      	ldr	r7, [pc, #164]	; (80096a8 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009602:	b085      	sub	sp, #20
 8009604:	b9b9      	cbnz	r1, 8009636 <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 8009606:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800960a:	6839      	ldr	r1, [r7, #0]
 800960c:	aa03      	add	r2, sp, #12
 800960e:	3105      	adds	r1, #5
 8009610:	9303      	str	r3, [sp, #12]
 8009612:	f000 fc05 	bl	8009e20 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009616:	1e03      	subs	r3, r0, #0
 8009618:	da1d      	bge.n	8009656 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800961a:	f642 1305 	movw	r3, #10501	; 0x2905
 800961e:	220b      	movs	r2, #11
 8009620:	9300      	str	r3, [sp, #0]
 8009622:	4922      	ldr	r1, [pc, #136]	; (80096ac <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009624:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8009628:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800962c:	f007 f8c4 	bl	80107b8 <udp_send>
 8009630:	200c      	movs	r0, #12
 8009632:	b005      	add	sp, #20
 8009634:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009636:	9203      	str	r2, [sp, #12]
 8009638:	aa03      	add	r2, sp, #12
 800963a:	6039      	str	r1, [r7, #0]
 800963c:	f000 fbf0 	bl	8009e20 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009640:	1e03      	subs	r3, r0, #0
 8009642:	da08      	bge.n	8009656 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 8009644:	2e0b      	cmp	r6, #11
 8009646:	4632      	mov	r2, r6
 8009648:	4628      	mov	r0, r5
 800964a:	bf28      	it	cs
 800964c:	220b      	movcs	r2, #11
 800964e:	4917      	ldr	r1, [pc, #92]	; (80096ac <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009650:	f00a faa2 	bl	8013b98 <memcpy>
 8009654:	e7ec      	b.n	8009630 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 8009656:	201c      	movs	r0, #28
 8009658:	4343      	muls	r3, r0
 800965a:	4915      	ldr	r1, [pc, #84]	; (80096b0 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800965c:	18ca      	adds	r2, r1, r3
 800965e:	6852      	ldr	r2, [r2, #4]
 8009660:	58cb      	ldr	r3, [r1, r3]
 8009662:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009666:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800966a:	07d2      	lsls	r2, r2, #31
 800966c:	bf48      	it	mi
 800966e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009672:	a903      	add	r1, sp, #12
 8009674:	bf48      	it	mi
 8009676:	58d3      	ldrmi	r3, [r2, r3]
 8009678:	4798      	blx	r3
 800967a:	9a03      	ldr	r2, [sp, #12]
 800967c:	b965      	cbnz	r5, 8009698 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800967e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009682:	6839      	ldr	r1, [r7, #0]
 8009684:	9300      	str	r3, [sp, #0]
 8009686:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800968a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800968e:	b292      	uxth	r2, r2
 8009690:	f007 f892 	bl	80107b8 <udp_send>
 8009694:	9803      	ldr	r0, [sp, #12]
 8009696:	e7cc      	b.n	8009632 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009698:	42b2      	cmp	r2, r6
 800969a:	bf28      	it	cs
 800969c:	4632      	movcs	r2, r6
 800969e:	4628      	mov	r0, r5
 80096a0:	6839      	ldr	r1, [r7, #0]
 80096a2:	f00a fa84 	bl	8013bae <memmove>
 80096a6:	e7f5      	b.n	8009694 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 80096a8:	200000fc 	strdcs	r0, [r0], -ip
 80096ac:	0801662b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, sp, lr}
 80096b0:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}

080096b4 <RemoteConfig::HandleGetNoParams()>:
 80096b4:	2200      	movs	r2, #0
 80096b6:	4611      	mov	r1, r2
 80096b8:	f7ff bf9e 	b.w	80095f8 <RemoteConfig::HandleGet(void*, unsigned int)>

080096bc <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 80096bc:	b510      	push	{r4, lr}
 80096be:	460c      	mov	r4, r1
 80096c0:	4b07      	ldr	r3, [pc, #28]	; (80096e0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 80096c2:	b08a      	sub	sp, #40	; 0x28
 80096c4:	6819      	ldr	r1, [r3, #0]
 80096c6:	a801      	add	r0, sp, #4
 80096c8:	f000 fa00 	bl	8009acc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80096cc:	4905      	ldr	r1, [pc, #20]	; (80096e4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 80096ce:	4623      	mov	r3, r4
 80096d0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80096d4:	6809      	ldr	r1, [r1, #0]
 80096d6:	a801      	add	r0, sp, #4
 80096d8:	f000 fb1c 	bl	8009d14 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 80096dc:	b00a      	add	sp, #40	; 0x28
 80096de:	bd10      	pop	{r4, pc}
 80096e0:	20005378 	andcs	r5, r0, r8, ror r3
 80096e4:	200000fc 	strdcs	r0, [r0], -ip

080096e8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80096e8:	b513      	push	{r0, r1, r4, lr}
 80096ea:	460c      	mov	r4, r1
 80096ec:	4b07      	ldr	r3, [pc, #28]	; (800970c <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80096ee:	a801      	add	r0, sp, #4
 80096f0:	6819      	ldr	r1, [r3, #0]
 80096f2:	f007 ffb7 	bl	8011664 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80096f6:	4906      	ldr	r1, [pc, #24]	; (8009710 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80096f8:	4623      	mov	r3, r4
 80096fa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80096fe:	6809      	ldr	r1, [r1, #0]
 8009700:	a801      	add	r0, sp, #4
 8009702:	f008 fa1d 	bl	8011b40 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009706:	b002      	add	sp, #8
 8009708:	bd10      	pop	{r4, pc}
 800970a:	bf00      	nop
 800970c:	20005370 	andcs	r5, r0, r0, ror r3
 8009710:	200000fc 	strdcs	r0, [r0], -ip

08009714 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 8009714:	b510      	push	{r4, lr}
 8009716:	460c      	mov	r4, r1
 8009718:	4b07      	ldr	r3, [pc, #28]	; (8009738 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800971a:	b08a      	sub	sp, #40	; 0x28
 800971c:	6819      	ldr	r1, [r3, #0]
 800971e:	a801      	add	r0, sp, #4
 8009720:	f003 ff14 	bl	800d54c <E131Params::E131Params(E131ParamsStore*)>
 8009724:	4905      	ldr	r1, [pc, #20]	; (800973c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 8009726:	4623      	mov	r3, r4
 8009728:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800972c:	6809      	ldr	r1, [r1, #0]
 800972e:	a801      	add	r0, sp, #4
 8009730:	f004 f954 	bl	800d9dc <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009734:	b00a      	add	sp, #40	; 0x28
 8009736:	bd10      	pop	{r4, pc}
 8009738:	2000536c 	andcs	r5, r0, ip, ror #6
 800973c:	200000fc 	strdcs	r0, [r0], -ip

08009740 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009740:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009742:	460c      	mov	r4, r1
 8009744:	4b07      	ldr	r3, [pc, #28]	; (8009764 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 8009746:	4668      	mov	r0, sp
 8009748:	6819      	ldr	r1, [r3, #0]
 800974a:	f004 fe8b 	bl	800e464 <DmxParams::DmxParams(DmxParamsStore*)>
 800974e:	4906      	ldr	r1, [pc, #24]	; (8009768 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009750:	4623      	mov	r3, r4
 8009752:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009756:	4668      	mov	r0, sp
 8009758:	6809      	ldr	r1, [r1, #0]
 800975a:	f004 ffa3 	bl	800e6a4 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800975e:	b004      	add	sp, #16
 8009760:	bd10      	pop	{r4, pc}
 8009762:	bf00      	nop
 8009764:	20005368 	andcs	r5, r0, r8, ror #6
 8009768:	200000fc 	strdcs	r0, [r0], -ip

0800976c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800976c:	b510      	push	{r4, lr}
 800976e:	460c      	mov	r4, r1
 8009770:	4b07      	ldr	r3, [pc, #28]	; (8009790 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009772:	b08a      	sub	sp, #40	; 0x28
 8009774:	6819      	ldr	r1, [r3, #0]
 8009776:	4668      	mov	r0, sp
 8009778:	f008 ffca 	bl	8012710 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800977c:	4905      	ldr	r1, [pc, #20]	; (8009794 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800977e:	4623      	mov	r3, r4
 8009780:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009784:	4668      	mov	r0, sp
 8009786:	6809      	ldr	r1, [r1, #0]
 8009788:	f009 f8f8 	bl	801297c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800978c:	b00a      	add	sp, #40	; 0x28
 800978e:	bd10      	pop	{r4, pc}
 8009790:	20005364 	andcs	r5, r0, r4, ror #6
 8009794:	200000fc 	strdcs	r0, [r0], -ip

08009798 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009798:	b530      	push	{r4, r5, lr}
 800979a:	b085      	sub	sp, #20
 800979c:	4604      	mov	r4, r0
 800979e:	9201      	str	r2, [sp, #4]
 80097a0:	b9c9      	cbnz	r1, 80097d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 80097a2:	f240 33ff 	movw	r3, #1023	; 0x3ff
 80097a6:	9303      	str	r3, [sp, #12]
 80097a8:	4b1d      	ldr	r3, [pc, #116]	; (8009820 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 80097aa:	aa03      	add	r2, sp, #12
 80097ac:	6819      	ldr	r1, [r3, #0]
 80097ae:	3101      	adds	r1, #1
 80097b0:	f000 fb36 	bl	8009e20 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80097b4:	2800      	cmp	r0, #0
 80097b6:	db24      	blt.n	8009802 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80097b8:	221c      	movs	r2, #28
 80097ba:	4b1a      	ldr	r3, [pc, #104]	; (8009824 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 80097bc:	fb02 3300 	mla	r3, r2, r0, r3
 80097c0:	68da      	ldr	r2, [r3, #12]
 80097c2:	689b      	ldr	r3, [r3, #8]
 80097c4:	1051      	asrs	r1, r2, #1
 80097c6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80097ca:	07d2      	lsls	r2, r2, #31
 80097cc:	bf44      	itt	mi
 80097ce:	5862      	ldrmi	r2, [r4, r1]
 80097d0:	58d3      	ldrmi	r3, [r2, r3]
 80097d2:	4798      	blx	r3
 80097d4:	e015      	b.n	8009802 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80097d6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80097da:	460d      	mov	r5, r1
 80097dc:	4611      	mov	r1, r2
 80097de:	d810      	bhi.n	8009802 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80097e0:	2200      	movs	r2, #0
 80097e2:	4b11      	ldr	r3, [pc, #68]	; (8009828 <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 80097e4:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 80097e8:	781b      	ldrb	r3, [r3, #0]
 80097ea:	07d8      	lsls	r0, r3, #31
 80097ec:	d50b      	bpl.n	8009806 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80097ee:	782b      	ldrb	r3, [r5, #0]
 80097f0:	2b7b      	cmp	r3, #123	; 0x7b
 80097f2:	d108      	bne.n	8009806 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80097f4:	3901      	subs	r1, #1
 80097f6:	4628      	mov	r0, r5
 80097f8:	b289      	uxth	r1, r1
 80097fa:	f009 fa31 	bl	8012c60 <properties::convert_json_file(char*, unsigned short, bool)>
 80097fe:	2800      	cmp	r0, #0
 8009800:	dc09      	bgt.n	8009816 <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 8009802:	b005      	add	sp, #20
 8009804:	bd30      	pop	{r4, r5, pc}
 8009806:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 800980a:	4b05      	ldr	r3, [pc, #20]	; (8009820 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800980c:	4620      	mov	r0, r4
 800980e:	601d      	str	r5, [r3, #0]
 8009810:	aa01      	add	r2, sp, #4
 8009812:	1c69      	adds	r1, r5, #1
 8009814:	e7cc      	b.n	80097b0 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009816:	b280      	uxth	r0, r0
 8009818:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800981c:	e7f5      	b.n	800980a <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 800981e:	bf00      	nop
 8009820:	200000fc 	strdcs	r0, [r0], -ip
 8009824:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 8009828:	2000d294 	mulcs	r0, r4, r2

0800982c <RemoteConfig::Run()>:
 800982c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009830:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 8009834:	2b00      	cmp	r3, #0
 8009836:	d15e      	bne.n	80098f6 <RemoteConfig::Run()+0xca>
 8009838:	4604      	mov	r4, r0
 800983a:	4d4b      	ldr	r5, [pc, #300]	; (8009968 <RemoteConfig::Run()+0x13c>)
 800983c:	300c      	adds	r0, #12
 800983e:	f000 fdf3 	bl	800a428 <HttpDaemon::Run()>
 8009842:	4629      	mov	r1, r5
 8009844:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009848:	f10d 030e 	add.w	r3, sp, #14
 800984c:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 8009850:	f006 ff8c 	bl	801076c <udp_recv2>
 8009854:	2803      	cmp	r0, #3
 8009856:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800985a:	d94c      	bls.n	80098f6 <RemoteConfig::Run()+0xca>
 800985c:	682b      	ldr	r3, [r5, #0]
 800985e:	3801      	subs	r0, #1
 8009860:	5c1a      	ldrb	r2, [r3, r0]
 8009862:	2a0a      	cmp	r2, #10
 8009864:	bf08      	it	eq
 8009866:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800986a:	7819      	ldrb	r1, [r3, #0]
 800986c:	293f      	cmp	r1, #63	; 0x3f
 800986e:	d137      	bne.n	80098e0 <RemoteConfig::Run()+0xb4>
 8009870:	493e      	ldr	r1, [pc, #248]	; (800996c <RemoteConfig::Run()+0x140>)
 8009872:	2200      	movs	r2, #0
 8009874:	460f      	mov	r7, r1
 8009876:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800987a:	3801      	subs	r0, #1
 800987c:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8009880:	7b8e      	ldrb	r6, [r1, #14]
 8009882:	898d      	ldrh	r5, [r1, #12]
 8009884:	b176      	cbz	r6, 80098a4 <RemoteConfig::Run()+0x78>
 8009886:	4285      	cmp	r5, r0
 8009888:	d30e      	bcc.n	80098a8 <RemoteConfig::Run()+0x7c>
 800988a:	3201      	adds	r2, #1
 800988c:	2a09      	cmp	r2, #9
 800988e:	f101 0110 	add.w	r1, r1, #16
 8009892:	d1f5      	bne.n	8009880 <RemoteConfig::Run()+0x54>
 8009894:	f642 1305 	movw	r3, #10501	; 0x2905
 8009898:	9300      	str	r3, [sp, #0]
 800989a:	2208      	movs	r2, #8
 800989c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80098a0:	4933      	ldr	r1, [pc, #204]	; (8009970 <RemoteConfig::Run()+0x144>)
 80098a2:	e054      	b.n	800994e <RemoteConfig::Run()+0x122>
 80098a4:	4285      	cmp	r5, r0
 80098a6:	d1f0      	bne.n	800988a <RemoteConfig::Run()+0x5e>
 80098a8:	688e      	ldr	r6, [r1, #8]
 80098aa:	f103 0c01 	add.w	ip, r3, #1
 80098ae:	4435      	add	r5, r6
 80098b0:	42b5      	cmp	r5, r6
 80098b2:	d006      	beq.n	80098c2 <RemoteConfig::Run()+0x96>
 80098b4:	f81c 8b01 	ldrb.w	r8, [ip], #1
 80098b8:	f816 eb01 	ldrb.w	lr, [r6], #1
 80098bc:	45f0      	cmp	r8, lr
 80098be:	d0f7      	beq.n	80098b0 <RemoteConfig::Run()+0x84>
 80098c0:	e7e3      	b.n	800988a <RemoteConfig::Run()+0x5e>
 80098c2:	0113      	lsls	r3, r2, #4
 80098c4:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 80098c8:	6852      	ldr	r2, [r2, #4]
 80098ca:	58fb      	ldr	r3, [r7, r3]
 80098cc:	1051      	asrs	r1, r2, #1
 80098ce:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80098d2:	07d2      	lsls	r2, r2, #31
 80098d4:	d401      	bmi.n	80098da <RemoteConfig::Run()+0xae>
 80098d6:	4798      	blx	r3
 80098d8:	e00d      	b.n	80098f6 <RemoteConfig::Run()+0xca>
 80098da:	5862      	ldr	r2, [r4, r1]
 80098dc:	58d3      	ldr	r3, [r2, r3]
 80098de:	e7fa      	b.n	80098d6 <RemoteConfig::Run()+0xaa>
 80098e0:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 80098e4:	b93a      	cbnz	r2, 80098f6 <RemoteConfig::Run()+0xca>
 80098e6:	2923      	cmp	r1, #35	; 0x23
 80098e8:	d108      	bne.n	80098fc <RemoteConfig::Run()+0xd0>
 80098ea:	4611      	mov	r1, r2
 80098ec:	4620      	mov	r0, r4
 80098ee:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 80098f2:	f7ff ff51 	bl	8009798 <RemoteConfig::HandleSet(void*, unsigned int)>
 80098f6:	b004      	add	sp, #16
 80098f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80098fc:	2921      	cmp	r1, #33	; 0x21
 80098fe:	d1fa      	bne.n	80098f6 <RemoteConfig::Run()+0xca>
 8009900:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 8009904:	3a01      	subs	r2, #1
 8009906:	2a05      	cmp	r2, #5
 8009908:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 800990c:	d918      	bls.n	8009940 <RemoteConfig::Run()+0x114>
 800990e:	1c59      	adds	r1, r3, #1
 8009910:	4608      	mov	r0, r1
 8009912:	4d18      	ldr	r5, [pc, #96]	; (8009974 <RemoteConfig::Run()+0x148>)
 8009914:	f103 0c06 	add.w	ip, r3, #6
 8009918:	4560      	cmp	r0, ip
 800991a:	d01d      	beq.n	8009958 <RemoteConfig::Run()+0x12c>
 800991c:	f810 7b01 	ldrb.w	r7, [r0], #1
 8009920:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009924:	42b7      	cmp	r7, r6
 8009926:	d0f7      	beq.n	8009918 <RemoteConfig::Run()+0xec>
 8009928:	2a08      	cmp	r2, #8
 800992a:	d909      	bls.n	8009940 <RemoteConfig::Run()+0x114>
 800992c:	4a12      	ldr	r2, [pc, #72]	; (8009978 <RemoteConfig::Run()+0x14c>)
 800992e:	3309      	adds	r3, #9
 8009930:	428b      	cmp	r3, r1
 8009932:	d017      	beq.n	8009964 <RemoteConfig::Run()+0x138>
 8009934:	f811 5b01 	ldrb.w	r5, [r1], #1
 8009938:	f812 0b01 	ldrb.w	r0, [r2], #1
 800993c:	4285      	cmp	r5, r0
 800993e:	d0f7      	beq.n	8009930 <RemoteConfig::Run()+0x104>
 8009940:	f642 1305 	movw	r3, #10501	; 0x2905
 8009944:	2208      	movs	r2, #8
 8009946:	9300      	str	r3, [sp, #0]
 8009948:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800994c:	490b      	ldr	r1, [pc, #44]	; (800997c <RemoteConfig::Run()+0x150>)
 800994e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009952:	f006 ff31 	bl	80107b8 <udp_send>
 8009956:	e7ce      	b.n	80098f6 <RemoteConfig::Run()+0xca>
 8009958:	2300      	movs	r3, #0
 800995a:	4a09      	ldr	r2, [pc, #36]	; (8009980 <RemoteConfig::Run()+0x154>)
 800995c:	011b      	lsls	r3, r3, #4
 800995e:	4620      	mov	r0, r4
 8009960:	58d3      	ldr	r3, [r2, r3]
 8009962:	e7b8      	b.n	80098d6 <RemoteConfig::Run()+0xaa>
 8009964:	2301      	movs	r3, #1
 8009966:	e7f8      	b.n	800995a <RemoteConfig::Run()+0x12e>
 8009968:	200000fc 	strdcs	r0, [r0], -ip
 800996c:	080167c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, sp, lr}
 8009970:	0801664f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, sl, sp, lr}
 8009974:	08016637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp, lr}
 8009978:	0801663d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, sp, lr}
 800997c:	08016646 	stmdaeq	r1, {r1, r2, r6, r9, sl, sp, lr}
 8009980:	08016850 	stmdaeq	r1, {r4, r6, fp, sp, lr}

08009984 <RemoteConfig::HandleSetRconfig()>:
 8009984:	b510      	push	{r4, lr}
 8009986:	4604      	mov	r4, r0
 8009988:	4b09      	ldr	r3, [pc, #36]	; (80099b0 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800998a:	b08a      	sub	sp, #40	; 0x28
 800998c:	6819      	ldr	r1, [r3, #0]
 800998e:	a801      	add	r0, sp, #4
 8009990:	f000 f89c 	bl	8009acc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009994:	4b07      	ldr	r3, [pc, #28]	; (80099b4 <RemoteConfig::HandleSetRconfig()+0x30>)
 8009996:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800999a:	6819      	ldr	r1, [r3, #0]
 800999c:	a801      	add	r0, sp, #4
 800999e:	f000 f8ab 	bl	8009af8 <RemoteConfigParams::Load(char const*, unsigned int)>
 80099a2:	4621      	mov	r1, r4
 80099a4:	a801      	add	r0, sp, #4
 80099a6:	f000 f9c2 	bl	8009d2e <RemoteConfigParams::Set(RemoteConfig*)>
 80099aa:	b00a      	add	sp, #40	; 0x28
 80099ac:	bd10      	pop	{r4, pc}
 80099ae:	bf00      	nop
 80099b0:	20005378 	andcs	r5, r0, r8, ror r3
 80099b4:	200000fc 	strdcs	r0, [r0], -ip

080099b8 <RemoteConfig::HandleSetNetworkTxt()>:
 80099b8:	b513      	push	{r0, r1, r4, lr}
 80099ba:	4604      	mov	r4, r0
 80099bc:	4b06      	ldr	r3, [pc, #24]	; (80099d8 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 80099be:	a801      	add	r0, sp, #4
 80099c0:	6819      	ldr	r1, [r3, #0]
 80099c2:	f007 fe4f 	bl	8011664 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80099c6:	4b05      	ldr	r3, [pc, #20]	; (80099dc <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 80099c8:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 80099cc:	6819      	ldr	r1, [r3, #0]
 80099ce:	a801      	add	r0, sp, #4
 80099d0:	f007 fe68 	bl	80116a4 <NetworkParams::Load(char const*, unsigned int)>
 80099d4:	b002      	add	sp, #8
 80099d6:	bd10      	pop	{r4, pc}
 80099d8:	20005370 	andcs	r5, r0, r0, ror r3
 80099dc:	200000fc 	strdcs	r0, [r0], -ip

080099e0 <RemoteConfig::HandleSetE131Txt()>:
 80099e0:	b510      	push	{r4, lr}
 80099e2:	4604      	mov	r4, r0
 80099e4:	4b07      	ldr	r3, [pc, #28]	; (8009a04 <RemoteConfig::HandleSetE131Txt()+0x24>)
 80099e6:	b08a      	sub	sp, #40	; 0x28
 80099e8:	6819      	ldr	r1, [r3, #0]
 80099ea:	a801      	add	r0, sp, #4
 80099ec:	f003 fdae 	bl	800d54c <E131Params::E131Params(E131ParamsStore*)>
 80099f0:	4b05      	ldr	r3, [pc, #20]	; (8009a08 <RemoteConfig::HandleSetE131Txt()+0x28>)
 80099f2:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 80099f6:	6819      	ldr	r1, [r3, #0]
 80099f8:	a801      	add	r0, sp, #4
 80099fa:	f003 fdc7 	bl	800d58c <E131Params::Load(char const*, unsigned int)>
 80099fe:	b00a      	add	sp, #40	; 0x28
 8009a00:	bd10      	pop	{r4, pc}
 8009a02:	bf00      	nop
 8009a04:	2000536c 	andcs	r5, r0, ip, ror #6
 8009a08:	200000fc 	strdcs	r0, [r0], -ip

08009a0c <RemoteConfig::HandleSetParamsTxt()>:
 8009a0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009a0e:	4604      	mov	r4, r0
 8009a10:	4b06      	ldr	r3, [pc, #24]	; (8009a2c <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8009a12:	4668      	mov	r0, sp
 8009a14:	6819      	ldr	r1, [r3, #0]
 8009a16:	f004 fd25 	bl	800e464 <DmxParams::DmxParams(DmxParamsStore*)>
 8009a1a:	4b05      	ldr	r3, [pc, #20]	; (8009a30 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 8009a1c:	4668      	mov	r0, sp
 8009a1e:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 8009a22:	6819      	ldr	r1, [r3, #0]
 8009a24:	f004 fd36 	bl	800e494 <DmxParams::Load(char const*, unsigned int)>
 8009a28:	b004      	add	sp, #16
 8009a2a:	bd10      	pop	{r4, pc}
 8009a2c:	20005368 	andcs	r5, r0, r8, ror #6
 8009a30:	200000fc 	strdcs	r0, [r0], -ip

08009a34 <RemoteConfig::HandleSetDisplayTxt()>:
 8009a34:	b510      	push	{r4, lr}
 8009a36:	4604      	mov	r4, r0
 8009a38:	4b07      	ldr	r3, [pc, #28]	; (8009a58 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8009a3a:	b08a      	sub	sp, #40	; 0x28
 8009a3c:	6819      	ldr	r1, [r3, #0]
 8009a3e:	4668      	mov	r0, sp
 8009a40:	f008 fe66 	bl	8012710 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009a44:	4b05      	ldr	r3, [pc, #20]	; (8009a5c <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 8009a46:	4668      	mov	r0, sp
 8009a48:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 8009a4c:	6819      	ldr	r1, [r3, #0]
 8009a4e:	f008 fe79 	bl	8012744 <DisplayUdfParams::Load(char const*, unsigned int)>
 8009a52:	b00a      	add	sp, #40	; 0x28
 8009a54:	bd10      	pop	{r4, pc}
 8009a56:	bf00      	nop
 8009a58:	20005364 	andcs	r5, r0, r4, ror #6
 8009a5c:	200000fc 	strdcs	r0, [r0], -ip

08009a60 <RemoteConfig::HandleFactory()>:
 8009a60:	b538      	push	{r3, r4, r5, lr}
 8009a62:	2400      	movs	r4, #0
 8009a64:	4d04      	ldr	r5, [pc, #16]	; (8009a78 <RemoteConfig::HandleFactory()+0x18>)
 8009a66:	4621      	mov	r1, r4
 8009a68:	6828      	ldr	r0, [r5, #0]
 8009a6a:	3401      	adds	r4, #1
 8009a6c:	f005 fe72 	bl	800f754 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009a70:	2c1c      	cmp	r4, #28
 8009a72:	d1f8      	bne.n	8009a66 <RemoteConfig::HandleFactory()+0x6>
 8009a74:	bd38      	pop	{r3, r4, r5, pc}
 8009a76:	bf00      	nop
 8009a78:	20005358 	andcs	r5, r0, r8, asr r3

08009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009a7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a7e:	460b      	mov	r3, r1
 8009a80:	8885      	ldrh	r5, [r0, #4]
 8009a82:	88c1      	ldrh	r1, [r0, #6]
 8009a84:	42a9      	cmp	r1, r5
 8009a86:	d214      	bcs.n	8009ab2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009a88:	4604      	mov	r4, r0
 8009a8a:	6800      	ldr	r0, [r0, #0]
 8009a8c:	1a6d      	subs	r5, r5, r1
 8009a8e:	4408      	add	r0, r1
 8009a90:	7a21      	ldrb	r1, [r4, #8]
 8009a92:	b91a      	cbnz	r2, 8009a9c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009a94:	b919      	cbnz	r1, 8009a9e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009a96:	4a0a      	ldr	r2, [pc, #40]	; (8009ac0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009a98:	9100      	str	r1, [sp, #0]
 8009a9a:	e002      	b.n	8009aa2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009a9c:	b159      	cbz	r1, 8009ab6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009a9e:	9200      	str	r2, [sp, #0]
 8009aa0:	4a08      	ldr	r2, [pc, #32]	; (8009ac4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009aa2:	4629      	mov	r1, r5
 8009aa4:	f00a fbf2 	bl	801428c <snprintf>
 8009aa8:	4285      	cmp	r5, r0
 8009aaa:	bfa2      	ittt	ge
 8009aac:	88e3      	ldrhge	r3, [r4, #6]
 8009aae:	181b      	addge	r3, r3, r0
 8009ab0:	80e3      	strhge	r3, [r4, #6]
 8009ab2:	b003      	add	sp, #12
 8009ab4:	bd30      	pop	{r4, r5, pc}
 8009ab6:	2201      	movs	r2, #1
 8009ab8:	9200      	str	r2, [sp, #0]
 8009aba:	4a03      	ldr	r2, [pc, #12]	; (8009ac8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009abc:	e7f1      	b.n	8009aa2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009abe:	bf00      	nop
 8009ac0:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 8009ac4:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 8009ac8:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

08009acc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009acc:	b510      	push	{r4, lr}
 8009ace:	4604      	mov	r4, r0
 8009ad0:	2220      	movs	r2, #32
 8009ad2:	f840 1b04 	str.w	r1, [r0], #4
 8009ad6:	2100      	movs	r1, #0
 8009ad8:	f00a f880 	bl	8013bdc <memset>
 8009adc:	4620      	mov	r0, r4
 8009ade:	bd10      	pop	{r4, pc}

08009ae0 <RemoteConfigParams::Load()>:
 8009ae0:	b508      	push	{r3, lr}
 8009ae2:	2300      	movs	r3, #0
 8009ae4:	4601      	mov	r1, r0
 8009ae6:	6043      	str	r3, [r0, #4]
 8009ae8:	6800      	ldr	r0, [r0, #0]
 8009aea:	b120      	cbz	r0, 8009af6 <RemoteConfigParams::Load()+0x16>
 8009aec:	6803      	ldr	r3, [r0, #0]
 8009aee:	3104      	adds	r1, #4
 8009af0:	68db      	ldr	r3, [r3, #12]
 8009af2:	4798      	blx	r3
 8009af4:	2001      	movs	r0, #1
 8009af6:	bd08      	pop	{r3, pc}

08009af8 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009af8:	2300      	movs	r3, #0
 8009afa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009afc:	460d      	mov	r5, r1
 8009afe:	4616      	mov	r6, r2
 8009b00:	4604      	mov	r4, r0
 8009b02:	6043      	str	r3, [r0, #4]
 8009b04:	4602      	mov	r2, r0
 8009b06:	490a      	ldr	r1, [pc, #40]	; (8009b30 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009b08:	4668      	mov	r0, sp
 8009b0a:	f009 f9f7 	bl	8012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009b0e:	4632      	mov	r2, r6
 8009b10:	4629      	mov	r1, r5
 8009b12:	4668      	mov	r0, sp
 8009b14:	f009 f9f6 	bl	8012f04 <ReadConfigFile::Read(char const*, unsigned int)>
 8009b18:	4621      	mov	r1, r4
 8009b1a:	f851 0b04 	ldr.w	r0, [r1], #4
 8009b1e:	6803      	ldr	r3, [r0, #0]
 8009b20:	689b      	ldr	r3, [r3, #8]
 8009b22:	4798      	blx	r3
 8009b24:	4668      	mov	r0, sp
 8009b26:	f009 f9ec 	bl	8012f02 <ReadConfigFile::~ReadConfigFile()>
 8009b2a:	b002      	add	sp, #8
 8009b2c:	bd70      	pop	{r4, r5, r6, pc}
 8009b2e:	bf00      	nop
 8009b30:	08009bf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, ip, pc}

08009b34 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009b34:	6843      	ldr	r3, [r0, #4]
 8009b36:	b111      	cbz	r1, 8009b3e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009b38:	4313      	orrs	r3, r2
 8009b3a:	6043      	str	r3, [r0, #4]
 8009b3c:	4770      	bx	lr
 8009b3e:	ea23 0302 	bic.w	r3, r3, r2
 8009b42:	e7fa      	b.n	8009b3a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009b44 <RemoteConfigParams::callbackFunction(char const*)>:
 8009b44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009b46:	460d      	mov	r5, r1
 8009b48:	4604      	mov	r4, r0
 8009b4a:	4923      	ldr	r1, [pc, #140]	; (8009bd8 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009b4c:	4628      	mov	r0, r5
 8009b4e:	f10d 0203 	add.w	r2, sp, #3
 8009b52:	f009 fae5 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009b56:	b938      	cbnz	r0, 8009b68 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 8009b58:	2201      	movs	r2, #1
 8009b5a:	4620      	mov	r0, r4
 8009b5c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009b60:	f7ff ffe8 	bl	8009b34 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009b64:	b003      	add	sp, #12
 8009b66:	bd30      	pop	{r4, r5, pc}
 8009b68:	4628      	mov	r0, r5
 8009b6a:	491c      	ldr	r1, [pc, #112]	; (8009bdc <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009b6c:	f10d 0203 	add.w	r2, sp, #3
 8009b70:	f009 fad6 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009b74:	b908      	cbnz	r0, 8009b7a <RemoteConfigParams::callbackFunction(char const*)+0x36>
 8009b76:	2202      	movs	r2, #2
 8009b78:	e7ef      	b.n	8009b5a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009b7a:	4628      	mov	r0, r5
 8009b7c:	4918      	ldr	r1, [pc, #96]	; (8009be0 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009b7e:	f10d 0203 	add.w	r2, sp, #3
 8009b82:	f009 facd 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009b86:	b908      	cbnz	r0, 8009b8c <RemoteConfigParams::callbackFunction(char const*)+0x48>
 8009b88:	2204      	movs	r2, #4
 8009b8a:	e7e6      	b.n	8009b5a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009b8c:	4628      	mov	r0, r5
 8009b8e:	4915      	ldr	r1, [pc, #84]	; (8009be4 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009b90:	f10d 0203 	add.w	r2, sp, #3
 8009b94:	f009 fac4 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009b98:	b908      	cbnz	r0, 8009b9e <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 8009b9a:	2208      	movs	r2, #8
 8009b9c:	e7dd      	b.n	8009b5a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009b9e:	4628      	mov	r0, r5
 8009ba0:	4911      	ldr	r1, [pc, #68]	; (8009be8 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009ba2:	f10d 0203 	add.w	r2, sp, #3
 8009ba6:	f009 fabb 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009baa:	b908      	cbnz	r0, 8009bb0 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 8009bac:	2220      	movs	r2, #32
 8009bae:	e7d4      	b.n	8009b5a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009bb0:	2317      	movs	r3, #23
 8009bb2:	4628      	mov	r0, r5
 8009bb4:	9301      	str	r3, [sp, #4]
 8009bb6:	490d      	ldr	r1, [pc, #52]	; (8009bec <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009bb8:	ab01      	add	r3, sp, #4
 8009bba:	f104 020c 	add.w	r2, r4, #12
 8009bbe:	f009 f9d5 	bl	8012f6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009bc2:	2800      	cmp	r0, #0
 8009bc4:	d1ce      	bne.n	8009b64 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 8009bc6:	9b01      	ldr	r3, [sp, #4]
 8009bc8:	4423      	add	r3, r4
 8009bca:	7318      	strb	r0, [r3, #12]
 8009bcc:	6863      	ldr	r3, [r4, #4]
 8009bce:	f043 0310 	orr.w	r3, r3, #16
 8009bd2:	6063      	str	r3, [r4, #4]
 8009bd4:	e7c6      	b.n	8009b64 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 8009bd6:	bf00      	nop
 8009bd8:	08016c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, sp, lr}
 8009bdc:	08016c82 	stmdaeq	r1, {r1, r7, sl, fp, sp, lr}
 8009be0:	08016c90 	stmdaeq	r1, {r4, r7, sl, fp, sp, lr}
 8009be4:	08016c9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, fp, sp, lr}
 8009be8:	08016cac 	stmdaeq	r1, {r2, r3, r5, r7, sl, fp, sp, lr}
 8009bec:	08016c75 	stmdaeq	r1, {r0, r2, r4, r5, r6, sl, fp, sp, lr}

08009bf0 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009bf0:	f7ff bfa8 	b.w	8009b44 <RemoteConfigParams::callbackFunction(char const*)>

08009bf4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009bf4:	b570      	push	{r4, r5, r6, lr}
 8009bf6:	4604      	mov	r4, r0
 8009bf8:	4615      	mov	r5, r2
 8009bfa:	461e      	mov	r6, r3
 8009bfc:	b086      	sub	sp, #24
 8009bfe:	3004      	adds	r0, #4
 8009c00:	2900      	cmp	r1, #0
 8009c02:	d040      	beq.n	8009c86 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 8009c04:	2220      	movs	r2, #32
 8009c06:	f009 ffd2 	bl	8013bae <memmove>
 8009c0a:	4633      	mov	r3, r6
 8009c0c:	462a      	mov	r2, r5
 8009c0e:	4937      	ldr	r1, [pc, #220]	; (8009cec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009c10:	a803      	add	r0, sp, #12
 8009c12:	f009 f8d3 	bl	8012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009c16:	6862      	ldr	r2, [r4, #4]
 8009c18:	4935      	ldr	r1, [pc, #212]	; (8009cf0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009c1a:	f002 0201 	and.w	r2, r2, #1
 8009c1e:	a803      	add	r0, sp, #12
 8009c20:	f7ff ff2c 	bl	8009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009c24:	6862      	ldr	r2, [r4, #4]
 8009c26:	4933      	ldr	r1, [pc, #204]	; (8009cf4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009c28:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009c2c:	a803      	add	r0, sp, #12
 8009c2e:	f7ff ff25 	bl	8009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009c32:	6862      	ldr	r2, [r4, #4]
 8009c34:	4930      	ldr	r1, [pc, #192]	; (8009cf8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8009c36:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009c3a:	a803      	add	r0, sp, #12
 8009c3c:	f7ff ff1e 	bl	8009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009c40:	6862      	ldr	r2, [r4, #4]
 8009c42:	492e      	ldr	r1, [pc, #184]	; (8009cfc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009c44:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009c48:	a803      	add	r0, sp, #12
 8009c4a:	f7ff ff17 	bl	8009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009c4e:	6862      	ldr	r2, [r4, #4]
 8009c50:	492b      	ldr	r1, [pc, #172]	; (8009d00 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009c52:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009c56:	a803      	add	r0, sp, #12
 8009c58:	f7ff ff10 	bl	8009a7c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009c5c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009c60:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009c64:	42a9      	cmp	r1, r5
 8009c66:	d223      	bcs.n	8009cb0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 8009c68:	9803      	ldr	r0, [sp, #12]
 8009c6a:	1a6d      	subs	r5, r5, r1
 8009c6c:	4408      	add	r0, r1
 8009c6e:	6861      	ldr	r1, [r4, #4]
 8009c70:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009c74:	06c9      	lsls	r1, r1, #27
 8009c76:	f104 030c 	add.w	r3, r4, #12
 8009c7a:	d40b      	bmi.n	8009c94 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 8009c7c:	b95a      	cbnz	r2, 8009c96 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8009c7e:	9300      	str	r3, [sp, #0]
 8009c80:	4a20      	ldr	r2, [pc, #128]	; (8009d04 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009c82:	4b21      	ldr	r3, [pc, #132]	; (8009d08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009c84:	e00a      	b.n	8009c9c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009c86:	6823      	ldr	r3, [r4, #0]
 8009c88:	4601      	mov	r1, r0
 8009c8a:	681a      	ldr	r2, [r3, #0]
 8009c8c:	4618      	mov	r0, r3
 8009c8e:	68d2      	ldr	r2, [r2, #12]
 8009c90:	4790      	blx	r2
 8009c92:	e7ba      	b.n	8009c0a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8009c94:	b32a      	cbz	r2, 8009ce2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 8009c96:	9300      	str	r3, [sp, #0]
 8009c98:	4a1c      	ldr	r2, [pc, #112]	; (8009d0c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8009c9a:	4b1b      	ldr	r3, [pc, #108]	; (8009d08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009c9c:	4629      	mov	r1, r5
 8009c9e:	f00a faf5 	bl	801428c <snprintf>
 8009ca2:	4285      	cmp	r5, r0
 8009ca4:	bfa2      	ittt	ge
 8009ca6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009caa:	18c0      	addge	r0, r0, r3
 8009cac:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009cb0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009cb4:	b17b      	cbz	r3, 8009cd6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 8009cb6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009cba:	9b03      	ldr	r3, [sp, #12]
 8009cbc:	4413      	add	r3, r2
 8009cbe:	227d      	movs	r2, #125	; 0x7d
 8009cc0:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009cc4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009cc8:	9903      	ldr	r1, [sp, #12]
 8009cca:	54ca      	strb	r2, [r1, r3]
 8009ccc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009cd0:	3301      	adds	r3, #1
 8009cd2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009cd6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009cda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009cdc:	601a      	str	r2, [r3, #0]
 8009cde:	b006      	add	sp, #24
 8009ce0:	bd70      	pop	{r4, r5, r6, pc}
 8009ce2:	9300      	str	r3, [sp, #0]
 8009ce4:	4a0a      	ldr	r2, [pc, #40]	; (8009d10 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009ce6:	4b08      	ldr	r3, [pc, #32]	; (8009d08 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009ce8:	e7d8      	b.n	8009c9c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009cea:	bf00      	nop
 8009cec:	08016c69 	stmdaeq	r1, {r0, r3, r5, r6, sl, fp, sp, lr}
 8009cf0:	08016c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, sp, lr}
 8009cf4:	08016c82 	stmdaeq	r1, {r1, r7, sl, fp, sp, lr}
 8009cf8:	08016c90 	stmdaeq	r1, {r4, r7, sl, fp, sp, lr}
 8009cfc:	08016c9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, sl, fp, sp, lr}
 8009d00:	08016cac 	stmdaeq	r1, {r2, r3, r5, r7, sl, fp, sp, lr}
 8009d04:	0801688c 	stmdaeq	r1, {r2, r3, r7, fp, sp, lr}
 8009d08:	08016c75 	stmdaeq	r1, {r0, r2, r4, r5, r6, sl, fp, sp, lr}
 8009d0c:	08016881 	stmdaeq	r1, {r0, r7, fp, sp, lr}
 8009d10:	0801688d 	stmdaeq	r1, {r0, r2, r3, r7, fp, sp, lr}

08009d14 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009d14:	b513      	push	{r0, r1, r4, lr}
 8009d16:	6804      	ldr	r4, [r0, #0]
 8009d18:	b914      	cbnz	r4, 8009d20 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009d1a:	601c      	str	r4, [r3, #0]
 8009d1c:	b002      	add	sp, #8
 8009d1e:	bd10      	pop	{r4, pc}
 8009d20:	9300      	str	r3, [sp, #0]
 8009d22:	4613      	mov	r3, r2
 8009d24:	460a      	mov	r2, r1
 8009d26:	2100      	movs	r1, #0
 8009d28:	f7ff ff64 	bl	8009bf4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009d2c:	e7f6      	b.n	8009d1c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009d2e <RemoteConfigParams::Set(RemoteConfig*)>:
 8009d2e:	b538      	push	{r3, r4, r5, lr}
 8009d30:	460c      	mov	r4, r1
 8009d32:	4605      	mov	r5, r0
 8009d34:	6841      	ldr	r1, [r0, #4]
 8009d36:	4620      	mov	r0, r4
 8009d38:	f001 0101 	and.w	r1, r1, #1
 8009d3c:	f7ff fc20 	bl	8009580 <RemoteConfig::SetDisable(bool)>
 8009d40:	686b      	ldr	r3, [r5, #4]
 8009d42:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8009d46:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 8009d4a:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009d4e:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 8009d52:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009d56:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 8009d5a:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009d5e:	06db      	lsls	r3, r3, #27
 8009d60:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 8009d64:	d506      	bpl.n	8009d74 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 8009d66:	4620      	mov	r0, r4
 8009d68:	f105 010c 	add.w	r1, r5, #12
 8009d6c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009d70:	f7ff bc2a 	b.w	80095c8 <RemoteConfig::SetDisplayName(char const*)>
 8009d74:	bd38      	pop	{r3, r4, r5, pc}

08009d76 <RemoteConfigParams::Dump()>:
 8009d76:	4770      	bx	lr

08009d78 <RemoteConfig::HandleReboot()>:
 8009d78:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 8009d7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d7e:	2b00      	cmp	r3, #0
 8009d80:	d03e      	beq.n	8009e00 <RemoteConfig::HandleReboot()+0x88>
 8009d82:	2301      	movs	r3, #1
 8009d84:	4c1f      	ldr	r4, [pc, #124]	; (8009e04 <RemoteConfig::HandleReboot()+0x8c>)
 8009d86:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 8009d8a:	6825      	ldr	r5, [r4, #0]
 8009d8c:	69a8      	ldr	r0, [r5, #24]
 8009d8e:	b138      	cbz	r0, 8009da0 <RemoteConfig::HandleReboot()+0x28>
 8009d90:	2100      	movs	r1, #0
 8009d92:	6803      	ldr	r3, [r0, #0]
 8009d94:	7429      	strb	r1, [r5, #16]
 8009d96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d98:	4798      	blx	r3
 8009d9a:	4b1b      	ldr	r3, [pc, #108]	; (8009e08 <RemoteConfig::HandleReboot()+0x90>)
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	606b      	str	r3, [r5, #4]
 8009da0:	4d1a      	ldr	r5, [pc, #104]	; (8009e0c <RemoteConfig::HandleReboot()+0x94>)
 8009da2:	6828      	ldr	r0, [r5, #0]
 8009da4:	f005 fd5c 	bl	800f860 <SpiFlashStore::Flash()>
 8009da8:	2800      	cmp	r0, #0
 8009daa:	d1fa      	bne.n	8009da2 <RemoteConfig::HandleReboot()+0x2a>
 8009dac:	4b18      	ldr	r3, [pc, #96]	; (8009e10 <RemoteConfig::HandleReboot()+0x98>)
 8009dae:	6818      	ldr	r0, [r3, #0]
 8009db0:	f007 f9ca 	bl	8011148 <Network::Shutdown()>
 8009db4:	4817      	ldr	r0, [pc, #92]	; (8009e14 <RemoteConfig::HandleReboot()+0x9c>)
 8009db6:	f00a fa41 	bl	801423c <printf>
 8009dba:	6823      	ldr	r3, [r4, #0]
 8009dbc:	6998      	ldr	r0, [r3, #24]
 8009dbe:	b110      	cbz	r0, 8009dc6 <RemoteConfig::HandleReboot()+0x4e>
 8009dc0:	6803      	ldr	r3, [r0, #0]
 8009dc2:	68db      	ldr	r3, [r3, #12]
 8009dc4:	4798      	blx	r3
 8009dc6:	6824      	ldr	r4, [r4, #0]
 8009dc8:	4913      	ldr	r1, [pc, #76]	; (8009e18 <RemoteConfig::HandleReboot()+0xa0>)
 8009dca:	4620      	mov	r0, r4
 8009dcc:	f7fe fe44 	bl	8008a58 <Display::TextStatus(char const*)>
 8009dd0:	7c63      	ldrb	r3, [r4, #17]
 8009dd2:	b18b      	cbz	r3, 8009df8 <RemoteConfig::HandleReboot()+0x80>
 8009dd4:	2312      	movs	r3, #18
 8009dd6:	f88d 3004 	strb.w	r3, [sp, #4]
 8009dda:	23bf      	movs	r3, #191	; 0xbf
 8009ddc:	7a20      	ldrb	r0, [r4, #8]
 8009dde:	f88d 3005 	strb.w	r3, [sp, #5]
 8009de2:	f88d 3006 	strb.w	r3, [sp, #6]
 8009de6:	f00b fb4f 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 8009dea:	68e0      	ldr	r0, [r4, #12]
 8009dec:	f00b fb44 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 8009df0:	2103      	movs	r1, #3
 8009df2:	a801      	add	r0, sp, #4
 8009df4:	f00b fb4e 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8009df8:	4b08      	ldr	r3, [pc, #32]	; (8009e1c <RemoteConfig::HandleReboot()+0xa4>)
 8009dfa:	6818      	ldr	r0, [r3, #0]
 8009dfc:	f009 fdd6 	bl	80139ac <Hardware::Reboot()>
 8009e00:	b003      	add	sp, #12
 8009e02:	bd30      	pop	{r4, r5, pc}
 8009e04:	2000d298 	mulcs	r0, r8, r2
 8009e08:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8009e0c:	20005358 	andcs	r5, r0, r8, asr r3
 8009e10:	2000cc60 	andcs	ip, r0, r0, ror #24
 8009e14:	08016894 	stmdaeq	r1, {r2, r4, r7, fp, sp, lr}
 8009e18:	080168a3 	stmdaeq	r1, {r0, r1, r5, r7, fp, sp, lr}
 8009e1c:	2000d388 	andcs	sp, r0, r8, lsl #7

08009e20 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009e20:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009e24:	2000      	movs	r0, #0
 8009e26:	4d12      	ldr	r5, [pc, #72]	; (8009e70 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009e28:	f10d 0c04 	add.w	ip, sp, #4
 8009e2c:	6814      	ldr	r4, [r2, #0]
 8009e2e:	7d2b      	ldrb	r3, [r5, #20]
 8009e30:	692e      	ldr	r6, [r5, #16]
 8009e32:	42a3      	cmp	r3, r4
 8009e34:	bf34      	ite	cc
 8009e36:	4664      	movcc	r4, ip
 8009e38:	4614      	movcs	r4, r2
 8009e3a:	9301      	str	r3, [sp, #4]
 8009e3c:	6827      	ldr	r7, [r4, #0]
 8009e3e:	460c      	mov	r4, r1
 8009e40:	3e01      	subs	r6, #1
 8009e42:	440f      	add	r7, r1
 8009e44:	42bc      	cmp	r4, r7
 8009e46:	d011      	beq.n	8009e6c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009e48:	f894 8000 	ldrb.w	r8, [r4]
 8009e4c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009e50:	45f0      	cmp	r8, lr
 8009e52:	d009      	beq.n	8009e68 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 8009e54:	3001      	adds	r0, #1
 8009e56:	2805      	cmp	r0, #5
 8009e58:	f105 051c 	add.w	r5, r5, #28
 8009e5c:	d1e6      	bne.n	8009e2c <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8009e5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009e62:	b002      	add	sp, #8
 8009e64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009e68:	3401      	adds	r4, #1
 8009e6a:	e7eb      	b.n	8009e44 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8009e6c:	6013      	str	r3, [r2, #0]
 8009e6e:	e7f8      	b.n	8009e62 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 8009e70:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}

08009e74 <RemoteConfig::PlatformHandleTftpSet()>:
 8009e74:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 8009e78:	b109      	cbz	r1, 8009e7e <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8009e7a:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8009e7e:	2002      	movs	r0, #2
 8009e80:	f00a bc0a 	b.w	8014698 <bkp_data_write>

08009e84 <RemoteConfig::PlatformHandleTftpGet()>:
 8009e84:	b510      	push	{r4, lr}
 8009e86:	4604      	mov	r4, r0
 8009e88:	2002      	movs	r0, #2
 8009e8a:	f00a fc1b 	bl	80146c4 <bkp_data_read>
 8009e8e:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8009e92:	1ac3      	subs	r3, r0, r3
 8009e94:	4258      	negs	r0, r3
 8009e96:	4158      	adcs	r0, r3
 8009e98:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 8009e9c:	bd10      	pop	{r4, pc}

08009e9e <strcmp>:
 8009e9e:	1e43      	subs	r3, r0, #1
 8009ea0:	3901      	subs	r1, #1
 8009ea2:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009ea6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009eaa:	4290      	cmp	r0, r2
 8009eac:	d102      	bne.n	8009eb4 <strcmp+0x16>
 8009eae:	2800      	cmp	r0, #0
 8009eb0:	d1f7      	bne.n	8009ea2 <strcmp+0x4>
 8009eb2:	4770      	bx	lr
 8009eb4:	1a80      	subs	r0, r0, r2
 8009eb6:	4770      	bx	lr

08009eb8 <strcasecmp>:
 8009eb8:	b530      	push	{r4, r5, lr}
 8009eba:	1e42      	subs	r2, r0, #1
 8009ebc:	3901      	subs	r1, #1
 8009ebe:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009ec2:	4604      	mov	r4, r0
 8009ec4:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8009ec8:	2b19      	cmp	r3, #25
 8009eca:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009ece:	bf98      	it	ls
 8009ed0:	f100 0420 	addls.w	r4, r0, #32
 8009ed4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009ed8:	2d19      	cmp	r5, #25
 8009eda:	bf98      	it	ls
 8009edc:	3320      	addls	r3, #32
 8009ede:	42a3      	cmp	r3, r4
 8009ee0:	d102      	bne.n	8009ee8 <strcasecmp+0x30>
 8009ee2:	2800      	cmp	r0, #0
 8009ee4:	d1eb      	bne.n	8009ebe <strcasecmp+0x6>
 8009ee6:	bd30      	pop	{r4, r5, pc}
 8009ee8:	1ae0      	subs	r0, r4, r3
 8009eea:	e7fc      	b.n	8009ee6 <strcasecmp+0x2e>

08009eec <PropertiesConfig::EnableJSON(bool)>:
 8009eec:	4a04      	ldr	r2, [pc, #16]	; (8009f00 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8009eee:	7813      	ldrb	r3, [r2, #0]
 8009ef0:	b118      	cbz	r0, 8009efa <PropertiesConfig::EnableJSON(bool)+0xe>
 8009ef2:	f043 0301 	orr.w	r3, r3, #1
 8009ef6:	7013      	strb	r3, [r2, #0]
 8009ef8:	4770      	bx	lr
 8009efa:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009efe:	e7fa      	b.n	8009ef6 <PropertiesConfig::EnableJSON(bool)+0xa>
 8009f00:	2000d294 	mulcs	r0, r4, r2

08009f04 <HttpDaemon::HttpDaemon()>:
 8009f04:	4a0a      	ldr	r2, [pc, #40]	; (8009f30 <HttpDaemon::HttpDaemon()+0x2c>)
 8009f06:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009f0a:	6002      	str	r2, [r0, #0]
 8009f0c:	2200      	movs	r2, #0
 8009f0e:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8009f12:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8009f16:	2102      	movs	r1, #2
 8009f18:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009f1c:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009f20:	60c2      	str	r2, [r0, #12]
 8009f22:	8402      	strh	r2, [r0, #32]
 8009f24:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 8009f28:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 8009f2c:	4770      	bx	lr
 8009f2e:	bf00      	nop
 8009f30:	08016be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, sp, lr}

08009f34 <HttpDaemon::Start()>:
 8009f34:	4b04      	ldr	r3, [pc, #16]	; (8009f48 <HttpDaemon::Start()+0x14>)
 8009f36:	b510      	push	{r4, lr}
 8009f38:	2150      	movs	r1, #80	; 0x50
 8009f3a:	4604      	mov	r4, r0
 8009f3c:	6818      	ldr	r0, [r3, #0]
 8009f3e:	f007 fb85 	bl	801164c <Network::TcpBegin(unsigned short)>
 8009f42:	6120      	str	r0, [r4, #16]
 8009f44:	bd10      	pop	{r4, pc}
 8009f46:	bf00      	nop
 8009f48:	2000cc60 	andcs	ip, r0, r0, ror #24

08009f4c <HttpDaemon::ParseMethod(char*)>:
 8009f4c:	b538      	push	{r3, r4, r5, lr}
 8009f4e:	4604      	mov	r4, r0
 8009f50:	4608      	mov	r0, r1
 8009f52:	491b      	ldr	r1, [pc, #108]	; (8009fc0 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009f54:	f00a f9ca 	bl	80142ec <strtok>
 8009f58:	4605      	mov	r5, r0
 8009f5a:	b370      	cbz	r0, 8009fba <HttpDaemon::ParseMethod(char*)+0x6e>
 8009f5c:	4919      	ldr	r1, [pc, #100]	; (8009fc4 <HttpDaemon::ParseMethod(char*)+0x78>)
 8009f5e:	f7ff ff9e 	bl	8009e9e <strcmp>
 8009f62:	b940      	cbnz	r0, 8009f76 <HttpDaemon::ParseMethod(char*)+0x2a>
 8009f64:	61e0      	str	r0, [r4, #28]
 8009f66:	2000      	movs	r0, #0
 8009f68:	4915      	ldr	r1, [pc, #84]	; (8009fc0 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009f6a:	f00a f9bf 	bl	80142ec <strtok>
 8009f6e:	b950      	cbnz	r0, 8009f86 <HttpDaemon::ParseMethod(char*)+0x3a>
 8009f70:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009f74:	bd38      	pop	{r3, r4, r5, pc}
 8009f76:	4628      	mov	r0, r5
 8009f78:	4913      	ldr	r1, [pc, #76]	; (8009fc8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8009f7a:	f7ff ff90 	bl	8009e9e <strcmp>
 8009f7e:	b9e0      	cbnz	r0, 8009fba <HttpDaemon::ParseMethod(char*)+0x6e>
 8009f80:	2301      	movs	r3, #1
 8009f82:	61e3      	str	r3, [r4, #28]
 8009f84:	e7ef      	b.n	8009f66 <HttpDaemon::ParseMethod(char*)+0x1a>
 8009f86:	6060      	str	r0, [r4, #4]
 8009f88:	4910      	ldr	r1, [pc, #64]	; (8009fcc <HttpDaemon::ParseMethod(char*)+0x80>)
 8009f8a:	2000      	movs	r0, #0
 8009f8c:	f00a f9ae 	bl	80142ec <strtok>
 8009f90:	2800      	cmp	r0, #0
 8009f92:	d0ed      	beq.n	8009f70 <HttpDaemon::ParseMethod(char*)+0x24>
 8009f94:	490e      	ldr	r1, [pc, #56]	; (8009fd0 <HttpDaemon::ParseMethod(char*)+0x84>)
 8009f96:	f7ff ff82 	bl	8009e9e <strcmp>
 8009f9a:	2800      	cmp	r0, #0
 8009f9c:	d1e8      	bne.n	8009f70 <HttpDaemon::ParseMethod(char*)+0x24>
 8009f9e:	490d      	ldr	r1, [pc, #52]	; (8009fd4 <HttpDaemon::ParseMethod(char*)+0x88>)
 8009fa0:	f00a f9a4 	bl	80142ec <strtok>
 8009fa4:	2800      	cmp	r0, #0
 8009fa6:	d0e3      	beq.n	8009f70 <HttpDaemon::ParseMethod(char*)+0x24>
 8009fa8:	490b      	ldr	r1, [pc, #44]	; (8009fd8 <HttpDaemon::ParseMethod(char*)+0x8c>)
 8009faa:	f7ff ff78 	bl	8009e9e <strcmp>
 8009fae:	2800      	cmp	r0, #0
 8009fb0:	f240 10f9 	movw	r0, #505	; 0x1f9
 8009fb4:	bf08      	it	eq
 8009fb6:	20c8      	moveq	r0, #200	; 0xc8
 8009fb8:	e7dc      	b.n	8009f74 <HttpDaemon::ParseMethod(char*)+0x28>
 8009fba:	f240 10f5 	movw	r0, #501	; 0x1f5
 8009fbe:	e7d9      	b.n	8009f74 <HttpDaemon::ParseMethod(char*)+0x28>
 8009fc0:	08018187 	stmdaeq	r1, {r0, r1, r2, r7, r8, pc}
 8009fc4:	08016978 	stmdaeq	r1, {r3, r4, r5, r6, r8, fp, sp, lr}
 8009fc8:	0801697c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, sp, lr}
 8009fcc:	080169e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, fp, sp, lr}
 8009fd0:	08016981 	stmdaeq	r1, {r0, r7, r8, fp, sp, lr}
 8009fd4:	08016986 	stmdaeq	r1, {r1, r2, r7, r8, fp, sp, lr}
 8009fd8:	08016989 	stmdaeq	r1, {r0, r3, r7, r8, fp, sp, lr}

08009fdc <HttpDaemon::ParseHeaderField(char*)>:
 8009fdc:	b538      	push	{r3, r4, r5, lr}
 8009fde:	4605      	mov	r5, r0
 8009fe0:	4608      	mov	r0, r1
 8009fe2:	491d      	ldr	r1, [pc, #116]	; (800a058 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009fe4:	f00a f982 	bl	80142ec <strtok>
 8009fe8:	4604      	mov	r4, r0
 8009fea:	b910      	cbnz	r0, 8009ff2 <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009fec:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009ff0:	bd38      	pop	{r3, r4, r5, pc}
 8009ff2:	491a      	ldr	r1, [pc, #104]	; (800a05c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009ff4:	f7ff ff60 	bl	8009eb8 <strcasecmp>
 8009ff8:	b970      	cbnz	r0, 800a018 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009ffa:	4919      	ldr	r1, [pc, #100]	; (800a060 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009ffc:	f00a f976 	bl	80142ec <strtok>
 800a000:	2800      	cmp	r0, #0
 800a002:	d0f3      	beq.n	8009fec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a004:	4917      	ldr	r1, [pc, #92]	; (800a064 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a006:	f7ff ff4a 	bl	8009e9e <strcmp>
 800a00a:	b108      	cbz	r0, 800a010 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a00c:	20c8      	movs	r0, #200	; 0xc8
 800a00e:	e7ef      	b.n	8009ff0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a010:	2301      	movs	r3, #1
 800a012:	f885 3020 	strb.w	r3, [r5, #32]
 800a016:	e7f9      	b.n	800a00c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a018:	4620      	mov	r0, r4
 800a01a:	4913      	ldr	r1, [pc, #76]	; (800a068 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a01c:	f7ff ff4c 	bl	8009eb8 <strcasecmp>
 800a020:	4604      	mov	r4, r0
 800a022:	2800      	cmp	r0, #0
 800a024:	d1f2      	bne.n	800a00c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a026:	4911      	ldr	r1, [pc, #68]	; (800a06c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a028:	f00a f960 	bl	80142ec <strtok>
 800a02c:	2800      	cmp	r0, #0
 800a02e:	d0dd      	beq.n	8009fec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a030:	1e42      	subs	r2, r0, #1
 800a032:	4623      	mov	r3, r4
 800a034:	200a      	movs	r0, #10
 800a036:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a03a:	b151      	cbz	r1, 800a052 <HttpDaemon::ParseHeaderField(char*)+0x76>
 800a03c:	3930      	subs	r1, #48	; 0x30
 800a03e:	2909      	cmp	r1, #9
 800a040:	d8d4      	bhi.n	8009fec <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a042:	fb00 1303 	mla	r3, r0, r3, r1
 800a046:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a04a:	d9f4      	bls.n	800a036 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a04c:	f240 109d 	movw	r0, #413	; 0x19d
 800a050:	e7ce      	b.n	8009ff0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a052:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800a056:	e7d9      	b.n	800a00c <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a058:	0801698d 	stmdaeq	r1, {r0, r2, r3, r7, r8, fp, sp, lr}
 800a05c:	0801698f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, fp, sp, lr}
 800a060:	0801699c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, sp, lr}
 800a064:	0801699f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, fp, sp, lr}
 800a068:	080169b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, sp, lr}
 800a06c:	08018187 	stmdaeq	r1, {r0, r1, r2, r7, r8, pc}

0800a070 <HttpDaemon::ParseRequest()>:
 800a070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a072:	2400      	movs	r4, #0
 800a074:	4605      	mov	r5, r0
 800a076:	4622      	mov	r2, r4
 800a078:	4626      	mov	r6, r4
 800a07a:	68c1      	ldr	r1, [r0, #12]
 800a07c:	f880 4020 	strb.w	r4, [r0, #32]
 800a080:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800a084:	8aab      	ldrh	r3, [r5, #20]
 800a086:	42a3      	cmp	r3, r4
 800a088:	d923      	bls.n	800a0d2 <HttpDaemon::ParseRequest()+0x62>
 800a08a:	68eb      	ldr	r3, [r5, #12]
 800a08c:	5d18      	ldrb	r0, [r3, r4]
 800a08e:	280a      	cmp	r0, #10
 800a090:	d10e      	bne.n	800a0b0 <HttpDaemon::ParseRequest()+0x40>
 800a092:	4423      	add	r3, r4
 800a094:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a098:	1c57      	adds	r7, r2, #1
 800a09a:	b962      	cbnz	r2, 800a0b6 <HttpDaemon::ParseRequest()+0x46>
 800a09c:	4628      	mov	r0, r5
 800a09e:	f7ff ff55 	bl	8009f4c <HttpDaemon::ParseMethod(char*)>
 800a0a2:	28c8      	cmp	r0, #200	; 0xc8
 800a0a4:	d116      	bne.n	800a0d4 <HttpDaemon::ParseRequest()+0x64>
 800a0a6:	463a      	mov	r2, r7
 800a0a8:	68e9      	ldr	r1, [r5, #12]
 800a0aa:	3401      	adds	r4, #1
 800a0ac:	b2a4      	uxth	r4, r4
 800a0ae:	4421      	add	r1, r4
 800a0b0:	3401      	adds	r4, #1
 800a0b2:	b2a4      	uxth	r4, r4
 800a0b4:	e7e6      	b.n	800a084 <HttpDaemon::ParseRequest()+0x14>
 800a0b6:	7808      	ldrb	r0, [r1, #0]
 800a0b8:	b968      	cbnz	r0, 800a0d6 <HttpDaemon::ParseRequest()+0x66>
 800a0ba:	696b      	ldr	r3, [r5, #20]
 800a0bc:	3b01      	subs	r3, #1
 800a0be:	1b1b      	subs	r3, r3, r4
 800a0c0:	b29b      	uxth	r3, r3
 800a0c2:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800a0c6:	b123      	cbz	r3, 800a0d2 <HttpDaemon::ParseRequest()+0x62>
 800a0c8:	68ea      	ldr	r2, [r5, #12]
 800a0ca:	3401      	adds	r4, #1
 800a0cc:	4414      	add	r4, r2
 800a0ce:	60ac      	str	r4, [r5, #8]
 800a0d0:	54e0      	strb	r0, [r4, r3]
 800a0d2:	20c8      	movs	r0, #200	; 0xc8
 800a0d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a0d6:	4628      	mov	r0, r5
 800a0d8:	f7ff ff80 	bl	8009fdc <HttpDaemon::ParseHeaderField(char*)>
 800a0dc:	e7e1      	b.n	800a0a2 <HttpDaemon::ParseRequest()+0x32>
	...

0800a0e0 <HttpDaemon::HandleGetTxt()>:
 800a0e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0e4:	6847      	ldr	r7, [r0, #4]
 800a0e6:	4604      	mov	r4, r0
 800a0e8:	1dbd      	adds	r5, r7, #6
 800a0ea:	462b      	mov	r3, r5
 800a0ec:	4618      	mov	r0, r3
 800a0ee:	7802      	ldrb	r2, [r0, #0]
 800a0f0:	3301      	adds	r3, #1
 800a0f2:	2a00      	cmp	r2, #0
 800a0f4:	d1fa      	bne.n	800a0ec <HttpDaemon::HandleGetTxt()+0xc>
 800a0f6:	1b40      	subs	r0, r0, r5
 800a0f8:	2804      	cmp	r0, #4
 800a0fa:	d925      	bls.n	800a148 <HttpDaemon::HandleGetTxt()+0x68>
 800a0fc:	3804      	subs	r0, #4
 800a0fe:	4915      	ldr	r1, [pc, #84]	; (800a154 <HttpDaemon::HandleGetTxt()+0x74>)
 800a100:	4428      	add	r0, r5
 800a102:	f7ff fecc 	bl	8009e9e <strcmp>
 800a106:	b9f8      	cbnz	r0, 800a148 <HttpDaemon::HandleGetTxt()+0x68>
 800a108:	4b13      	ldr	r3, [pc, #76]	; (800a158 <HttpDaemon::HandleGetTxt()+0x78>)
 800a10a:	2001      	movs	r0, #1
 800a10c:	f893 8000 	ldrb.w	r8, [r3]
 800a110:	f7ff feec 	bl	8009eec <PropertiesConfig::EnableJSON(bool)>
 800a114:	4b11      	ldr	r3, [pc, #68]	; (800a15c <HttpDaemon::HandleGetTxt()+0x7c>)
 800a116:	f240 529b 	movw	r2, #1435	; 0x59b
 800a11a:	4629      	mov	r1, r5
 800a11c:	6818      	ldr	r0, [r3, #0]
 800a11e:	f7ff fa6b 	bl	80095f8 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a122:	4606      	mov	r6, r0
 800a124:	f008 0801 	and.w	r8, r8, #1
 800a128:	4640      	mov	r0, r8
 800a12a:	f7ff fedf 	bl	8009eec <PropertiesConfig::EnableJSON(bool)>
 800a12e:	b15e      	cbz	r6, 800a148 <HttpDaemon::HandleGetTxt()+0x68>
 800a130:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800a134:	3606      	adds	r6, #6
 800a136:	3422      	adds	r4, #34	; 0x22
 800a138:	443e      	add	r6, r7
 800a13a:	42b5      	cmp	r5, r6
 800a13c:	d008      	beq.n	800a150 <HttpDaemon::HandleGetTxt()+0x70>
 800a13e:	f815 3b01 	ldrb.w	r3, [r5], #1
 800a142:	f804 3b01 	strb.w	r3, [r4], #1
 800a146:	e7f8      	b.n	800a13a <HttpDaemon::HandleGetTxt()+0x5a>
 800a148:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a14c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a150:	20c8      	movs	r0, #200	; 0xc8
 800a152:	e7fb      	b.n	800a14c <HttpDaemon::HandleGetTxt()+0x6c>
 800a154:	080168d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, fp, sp, lr}
 800a158:	2000d294 	mulcs	r0, r4, r2
 800a15c:	20000124 	andcs	r0, r0, r4, lsr #2

0800a160 <HttpDaemon::HandleGet()>:
 800a160:	b570      	push	{r4, r5, r6, lr}
 800a162:	6845      	ldr	r5, [r0, #4]
 800a164:	4604      	mov	r4, r0
 800a166:	4943      	ldr	r1, [pc, #268]	; (800a274 <HttpDaemon::HandleGet()+0x114>)
 800a168:	4628      	mov	r0, r5
 800a16a:	f7ff fe98 	bl	8009e9e <strcmp>
 800a16e:	b120      	cbz	r0, 800a17a <HttpDaemon::HandleGet()+0x1a>
 800a170:	4628      	mov	r0, r5
 800a172:	4941      	ldr	r1, [pc, #260]	; (800a278 <HttpDaemon::HandleGet()+0x118>)
 800a174:	f7ff fe93 	bl	8009e9e <strcmp>
 800a178:	b960      	cbnz	r0, 800a194 <HttpDaemon::HandleGet()+0x34>
 800a17a:	4621      	mov	r1, r4
 800a17c:	4b3f      	ldr	r3, [pc, #252]	; (800a27c <HttpDaemon::HandleGet()+0x11c>)
 800a17e:	4840      	ldr	r0, [pc, #256]	; (800a280 <HttpDaemon::HandleGet()+0x120>)
 800a180:	f841 3b22 	str.w	r3, [r1], #34
 800a184:	f000 fa7a 	bl	800a67c <get_file_content(char const*, char*)>
 800a188:	2800      	cmp	r0, #0
 800a18a:	dd1e      	ble.n	800a1ca <HttpDaemon::HandleGet()+0x6a>
 800a18c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a190:	20c8      	movs	r0, #200	; 0xc8
 800a192:	bd70      	pop	{r4, r5, r6, pc}
 800a194:	4628      	mov	r0, r5
 800a196:	493b      	ldr	r1, [pc, #236]	; (800a284 <HttpDaemon::HandleGet()+0x124>)
 800a198:	f7ff fe81 	bl	8009e9e <strcmp>
 800a19c:	b928      	cbnz	r0, 800a1aa <HttpDaemon::HandleGet()+0x4a>
 800a19e:	4621      	mov	r1, r4
 800a1a0:	4b39      	ldr	r3, [pc, #228]	; (800a288 <HttpDaemon::HandleGet()+0x128>)
 800a1a2:	483a      	ldr	r0, [pc, #232]	; (800a28c <HttpDaemon::HandleGet()+0x12c>)
 800a1a4:	f841 3b22 	str.w	r3, [r1], #34
 800a1a8:	e7ec      	b.n	800a184 <HttpDaemon::HandleGet()+0x24>
 800a1aa:	4628      	mov	r0, r5
 800a1ac:	4938      	ldr	r1, [pc, #224]	; (800a290 <HttpDaemon::HandleGet()+0x130>)
 800a1ae:	f7ff fe76 	bl	8009e9e <strcmp>
 800a1b2:	b168      	cbz	r0, 800a1d0 <HttpDaemon::HandleGet()+0x70>
 800a1b4:	4a37      	ldr	r2, [pc, #220]	; (800a294 <HttpDaemon::HandleGet()+0x134>)
 800a1b6:	1e6b      	subs	r3, r5, #1
 800a1b8:	1d6e      	adds	r6, r5, #5
 800a1ba:	42b3      	cmp	r3, r6
 800a1bc:	d00e      	beq.n	800a1dc <HttpDaemon::HandleGet()+0x7c>
 800a1be:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a1c2:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a1c6:	4288      	cmp	r0, r1
 800a1c8:	d0f7      	beq.n	800a1ba <HttpDaemon::HandleGet()+0x5a>
 800a1ca:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a1ce:	e7e0      	b.n	800a192 <HttpDaemon::HandleGet()+0x32>
 800a1d0:	4621      	mov	r1, r4
 800a1d2:	4b31      	ldr	r3, [pc, #196]	; (800a298 <HttpDaemon::HandleGet()+0x138>)
 800a1d4:	4831      	ldr	r0, [pc, #196]	; (800a29c <HttpDaemon::HandleGet()+0x13c>)
 800a1d6:	f841 3b22 	str.w	r3, [r1], #34
 800a1da:	e7d3      	b.n	800a184 <HttpDaemon::HandleGet()+0x24>
 800a1dc:	4b30      	ldr	r3, [pc, #192]	; (800a2a0 <HttpDaemon::HandleGet()+0x140>)
 800a1de:	3506      	adds	r5, #6
 800a1e0:	4628      	mov	r0, r5
 800a1e2:	4930      	ldr	r1, [pc, #192]	; (800a2a4 <HttpDaemon::HandleGet()+0x144>)
 800a1e4:	6023      	str	r3, [r4, #0]
 800a1e6:	f7ff fe5a 	bl	8009e9e <strcmp>
 800a1ea:	b930      	cbnz	r0, 800a1fa <HttpDaemon::HandleGet()+0x9a>
 800a1ec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a1f0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a1f4:	f000 f9ca 	bl	800a58c <remoteconfig::json_get_list(char*, unsigned short)>
 800a1f8:	e7c6      	b.n	800a188 <HttpDaemon::HandleGet()+0x28>
 800a1fa:	4628      	mov	r0, r5
 800a1fc:	492a      	ldr	r1, [pc, #168]	; (800a2a8 <HttpDaemon::HandleGet()+0x148>)
 800a1fe:	f7ff fe4e 	bl	8009e9e <strcmp>
 800a202:	b930      	cbnz	r0, 800a212 <HttpDaemon::HandleGet()+0xb2>
 800a204:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a208:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a20c:	f000 f9f2 	bl	800a5f4 <remoteconfig::json_get_version(char*, unsigned short)>
 800a210:	e7ba      	b.n	800a188 <HttpDaemon::HandleGet()+0x28>
 800a212:	4628      	mov	r0, r5
 800a214:	4925      	ldr	r1, [pc, #148]	; (800a2ac <HttpDaemon::HandleGet()+0x14c>)
 800a216:	f7ff fe42 	bl	8009e9e <strcmp>
 800a21a:	b958      	cbnz	r0, 800a234 <HttpDaemon::HandleGet()+0xd4>
 800a21c:	4b24      	ldr	r3, [pc, #144]	; (800a2b0 <HttpDaemon::HandleGet()+0x150>)
 800a21e:	681b      	ldr	r3, [r3, #0]
 800a220:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800a224:	b31b      	cbz	r3, 800a26e <HttpDaemon::HandleGet()+0x10e>
 800a226:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a22a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a22e:	f000 f9fd 	bl	800a62c <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a232:	e7a9      	b.n	800a188 <HttpDaemon::HandleGet()+0x28>
 800a234:	4628      	mov	r0, r5
 800a236:	491f      	ldr	r1, [pc, #124]	; (800a2b4 <HttpDaemon::HandleGet()+0x154>)
 800a238:	f7ff fe31 	bl	8009e9e <strcmp>
 800a23c:	b930      	cbnz	r0, 800a24c <HttpDaemon::HandleGet()+0xec>
 800a23e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a242:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a246:	f000 fa01 	bl	800a64c <remoteconfig::json_get_display(char*, unsigned short)>
 800a24a:	e79d      	b.n	800a188 <HttpDaemon::HandleGet()+0x28>
 800a24c:	4628      	mov	r0, r5
 800a24e:	491a      	ldr	r1, [pc, #104]	; (800a2b8 <HttpDaemon::HandleGet()+0x158>)
 800a250:	f7ff fe25 	bl	8009e9e <strcmp>
 800a254:	b930      	cbnz	r0, 800a264 <HttpDaemon::HandleGet()+0x104>
 800a256:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a25a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a25e:	f000 fa05 	bl	800a66c <remoteconfig::json_get_directory(char*, unsigned short)>
 800a262:	e791      	b.n	800a188 <HttpDaemon::HandleGet()+0x28>
 800a264:	4620      	mov	r0, r4
 800a266:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a26a:	f7ff bf39 	b.w	800a0e0 <HttpDaemon::HandleGetTxt()>
 800a26e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a272:	e78e      	b.n	800a192 <HttpDaemon::HandleGet()+0x32>
 800a274:	080169e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, fp, sp, lr}
 800a278:	080169bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, fp, sp, lr}
 800a27c:	08016be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, sp, lr}
 800a280:	080169c0 	stmdaeq	r1, {r6, r7, r8, fp, sp, lr}
 800a284:	080169cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, fp, sp, lr}
 800a288:	08016c01 	stmdaeq	r1, {r0, sl, fp, sp, lr}
 800a28c:	080169cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, sp, lr}
 800a290:	080169d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, fp, sp, lr}
 800a294:	080169e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, fp, sp, lr}
 800a298:	08016c21 	stmdaeq	r1, {r0, r5, sl, fp, sp, lr}
 800a29c:	080169d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, sp, lr}
 800a2a0:	08016c41 	stmdaeq	r1, {r0, r6, sl, fp, sp, lr}
 800a2a4:	080169e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, sp, lr}
 800a2a8:	080169ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, fp, sp, lr}
 800a2ac:	080169f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, fp, sp, lr}
 800a2b0:	20000124 	andcs	r0, r0, r4, lsr #2
 800a2b4:	080169fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 800a2b8:	08016a04 	stmdaeq	r1, {r2, r9, fp, sp, lr}

0800a2bc <HttpDaemon::HandlePost(bool)>:
 800a2bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a2be:	4604      	mov	r4, r0
 800a2c0:	2900      	cmp	r1, #0
 800a2c2:	f040 8091 	bne.w	800a3e8 <HttpDaemon::HandlePost(bool)+0x12c>
 800a2c6:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a2ca:	2b00      	cmp	r3, #0
 800a2cc:	d05d      	beq.n	800a38a <HttpDaemon::HandlePost(bool)+0xce>
 800a2ce:	6845      	ldr	r5, [r0, #4]
 800a2d0:	4948      	ldr	r1, [pc, #288]	; (800a3f4 <HttpDaemon::HandlePost(bool)+0x138>)
 800a2d2:	4628      	mov	r0, r5
 800a2d4:	f7ff fde3 	bl	8009e9e <strcmp>
 800a2d8:	2800      	cmp	r0, #0
 800a2da:	bf0c      	ite	eq
 800a2dc:	2301      	moveq	r3, #1
 800a2de:	2300      	movne	r3, #0
 800a2e0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a2e4:	d055      	beq.n	800a392 <HttpDaemon::HandlePost(bool)+0xd6>
 800a2e6:	4628      	mov	r0, r5
 800a2e8:	4943      	ldr	r1, [pc, #268]	; (800a3f8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a2ea:	f7ff fdd8 	bl	8009e9e <strcmp>
 800a2ee:	2800      	cmp	r0, #0
 800a2f0:	d04f      	beq.n	800a392 <HttpDaemon::HandlePost(bool)+0xd6>
 800a2f2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a2f6:	e04a      	b.n	800a38e <HttpDaemon::HandlePost(bool)+0xd2>
 800a2f8:	4940      	ldr	r1, [pc, #256]	; (800a3fc <HttpDaemon::HandlePost(bool)+0x140>)
 800a2fa:	68a0      	ldr	r0, [r4, #8]
 800a2fc:	f10d 0207 	add.w	r2, sp, #7
 800a300:	f008 ff0e 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a304:	b9e8      	cbnz	r0, 800a342 <HttpDaemon::HandlePost(bool)+0x86>
 800a306:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a30a:	4b3d      	ldr	r3, [pc, #244]	; (800a400 <HttpDaemon::HandlePost(bool)+0x144>)
 800a30c:	fab6 f186 	clz	r1, r6
 800a310:	681d      	ldr	r5, [r3, #0]
 800a312:	0949      	lsrs	r1, r1, #5
 800a314:	69a8      	ldr	r0, [r5, #24]
 800a316:	b138      	cbz	r0, 800a328 <HttpDaemon::HandlePost(bool)+0x6c>
 800a318:	6803      	ldr	r3, [r0, #0]
 800a31a:	7429      	strb	r1, [r5, #16]
 800a31c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a31e:	4798      	blx	r3
 800a320:	b116      	cbz	r6, 800a328 <HttpDaemon::HandlePost(bool)+0x6c>
 800a322:	4b38      	ldr	r3, [pc, #224]	; (800a404 <HttpDaemon::HandlePost(bool)+0x148>)
 800a324:	681b      	ldr	r3, [r3, #0]
 800a326:	606b      	str	r3, [r5, #4]
 800a328:	4620      	mov	r0, r4
 800a32a:	4b37      	ldr	r3, [pc, #220]	; (800a408 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a32c:	f240 519f 	movw	r1, #1439	; 0x59f
 800a330:	4a36      	ldr	r2, [pc, #216]	; (800a40c <HttpDaemon::HandlePost(bool)+0x150>)
 800a332:	f840 3b22 	str.w	r3, [r0], #34
 800a336:	f009 ffa9 	bl	801428c <snprintf>
 800a33a:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a33e:	20c8      	movs	r0, #200	; 0xc8
 800a340:	e025      	b.n	800a38e <HttpDaemon::HandlePost(bool)+0xd2>
 800a342:	4933      	ldr	r1, [pc, #204]	; (800a410 <HttpDaemon::HandlePost(bool)+0x154>)
 800a344:	68a0      	ldr	r0, [r4, #8]
 800a346:	f10d 0207 	add.w	r2, sp, #7
 800a34a:	f008 fee9 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a34e:	b9e0      	cbnz	r0, 800a38a <HttpDaemon::HandlePost(bool)+0xce>
 800a350:	4b30      	ldr	r3, [pc, #192]	; (800a414 <HttpDaemon::HandlePost(bool)+0x158>)
 800a352:	6818      	ldr	r0, [r3, #0]
 800a354:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a358:	b11b      	cbz	r3, 800a362 <HttpDaemon::HandlePost(bool)+0xa6>
 800a35a:	2104      	movs	r1, #4
 800a35c:	f009 fa82 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800a360:	e7e2      	b.n	800a328 <HttpDaemon::HandlePost(bool)+0x6c>
 800a362:	2102      	movs	r1, #2
 800a364:	e7fa      	b.n	800a35c <HttpDaemon::HandlePost(bool)+0xa0>
 800a366:	4b2c      	ldr	r3, [pc, #176]	; (800a418 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a368:	2001      	movs	r0, #1
 800a36a:	781d      	ldrb	r5, [r3, #0]
 800a36c:	f7ff fdbe 	bl	8009eec <PropertiesConfig::EnableJSON(bool)>
 800a370:	4b2a      	ldr	r3, [pc, #168]	; (800a41c <HttpDaemon::HandlePost(bool)+0x160>)
 800a372:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800a376:	6818      	ldr	r0, [r3, #0]
 800a378:	68a1      	ldr	r1, [r4, #8]
 800a37a:	f005 0501 	and.w	r5, r5, #1
 800a37e:	f7ff fa0b 	bl	8009798 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a382:	4628      	mov	r0, r5
 800a384:	f7ff fdb2 	bl	8009eec <PropertiesConfig::EnableJSON(bool)>
 800a388:	e7ce      	b.n	800a328 <HttpDaemon::HandlePost(bool)+0x6c>
 800a38a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a38e:	b002      	add	sp, #8
 800a390:	bd70      	pop	{r4, r5, r6, pc}
 800a392:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800a396:	6962      	ldr	r2, [r4, #20]
 800a398:	429a      	cmp	r2, r3
 800a39a:	dbd0      	blt.n	800a33e <HttpDaemon::HandlePost(bool)+0x82>
 800a39c:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a3a0:	2b00      	cmp	r3, #0
 800a3a2:	d0cc      	beq.n	800a33e <HttpDaemon::HandlePost(bool)+0x82>
 800a3a4:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a3a8:	2b00      	cmp	r3, #0
 800a3aa:	d0dc      	beq.n	800a366 <HttpDaemon::HandlePost(bool)+0xaa>
 800a3ac:	2201      	movs	r2, #1
 800a3ae:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800a3b2:	68a0      	ldr	r0, [r4, #8]
 800a3b4:	f008 fc54 	bl	8012c60 <properties::convert_json_file(char*, unsigned short, bool)>
 800a3b8:	2800      	cmp	r0, #0
 800a3ba:	dde6      	ble.n	800a38a <HttpDaemon::HandlePost(bool)+0xce>
 800a3bc:	4918      	ldr	r1, [pc, #96]	; (800a420 <HttpDaemon::HandlePost(bool)+0x164>)
 800a3be:	68a0      	ldr	r0, [r4, #8]
 800a3c0:	f10d 0207 	add.w	r2, sp, #7
 800a3c4:	f008 feac 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a3c8:	2800      	cmp	r0, #0
 800a3ca:	d195      	bne.n	800a2f8 <HttpDaemon::HandlePost(bool)+0x3c>
 800a3cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a3d0:	2b00      	cmp	r3, #0
 800a3d2:	d0a9      	beq.n	800a328 <HttpDaemon::HandlePost(bool)+0x6c>
 800a3d4:	4b11      	ldr	r3, [pc, #68]	; (800a41c <HttpDaemon::HandlePost(bool)+0x160>)
 800a3d6:	681b      	ldr	r3, [r3, #0]
 800a3d8:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800a3dc:	2b00      	cmp	r3, #0
 800a3de:	d0d4      	beq.n	800a38a <HttpDaemon::HandlePost(bool)+0xce>
 800a3e0:	4b10      	ldr	r3, [pc, #64]	; (800a424 <HttpDaemon::HandlePost(bool)+0x168>)
 800a3e2:	6818      	ldr	r0, [r3, #0]
 800a3e4:	f009 fae2 	bl	80139ac <Hardware::Reboot()>
 800a3e8:	68c3      	ldr	r3, [r0, #12]
 800a3ea:	6083      	str	r3, [r0, #8]
 800a3ec:	6943      	ldr	r3, [r0, #20]
 800a3ee:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800a3f2:	e7d7      	b.n	800a3a4 <HttpDaemon::HandlePost(bool)+0xe8>
 800a3f4:	08016a0e 	stmdaeq	r1, {r1, r2, r3, r9, fp, sp, lr}
 800a3f8:	080169aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, sp, lr}
 800a3fc:	080169fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 800a400:	2000d298 	mulcs	r0, r8, r2
 800a404:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800a408:	08016be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, sp, lr}
 800a40c:	08016a2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, fp, sp, lr}
 800a410:	08016a22 	stmdaeq	r1, {r1, r5, r9, fp, sp, lr}
 800a414:	2000d384 	andcs	sp, r0, r4, lsl #7
 800a418:	2000d294 	mulcs	r0, r4, r2
 800a41c:	20000124 	andcs	r0, r0, r4, lsr #2
 800a420:	08016a1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, fp, sp, lr}
 800a424:	2000d388 	andcs	sp, r0, r8, lsl #7

0800a428 <HttpDaemon::Run()>:
 800a428:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a42a:	4e4a      	ldr	r6, [pc, #296]	; (800a554 <HttpDaemon::Run()+0x12c>)
 800a42c:	4604      	mov	r4, r0
 800a42e:	6901      	ldr	r1, [r0, #16]
 800a430:	f100 020c 	add.w	r2, r0, #12
 800a434:	b085      	sub	sp, #20
 800a436:	6830      	ldr	r0, [r6, #0]
 800a438:	f007 f90b 	bl	8011652 <Network::TcpRead(int, unsigned char const**)>
 800a43c:	6160      	str	r0, [r4, #20]
 800a43e:	2800      	cmp	r0, #0
 800a440:	d061      	beq.n	800a506 <HttpDaemon::Run()+0xde>
 800a442:	69a3      	ldr	r3, [r4, #24]
 800a444:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a448:	d15f      	bne.n	800a50a <HttpDaemon::Run()+0xe2>
 800a44a:	4620      	mov	r0, r4
 800a44c:	f7ff fe10 	bl	800a070 <HttpDaemon::ParseRequest()>
 800a450:	28c8      	cmp	r0, #200	; 0xc8
 800a452:	61a0      	str	r0, [r4, #24]
 800a454:	d106      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a456:	69e3      	ldr	r3, [r4, #28]
 800a458:	2b00      	cmp	r3, #0
 800a45a:	d147      	bne.n	800a4ec <HttpDaemon::Run()+0xc4>
 800a45c:	4620      	mov	r0, r4
 800a45e:	f7ff fe7f 	bl	800a160 <HttpDaemon::HandleGet()>
 800a462:	61a0      	str	r0, [r4, #24]
 800a464:	69a3      	ldr	r3, [r4, #24]
 800a466:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800a46a:	2bc8      	cmp	r3, #200	; 0xc8
 800a46c:	d06f      	beq.n	800a54e <HttpDaemon::Run()+0x126>
 800a46e:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a472:	d062      	beq.n	800a53a <HttpDaemon::Run()+0x112>
 800a474:	dc52      	bgt.n	800a51c <HttpDaemon::Run()+0xf4>
 800a476:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a47a:	d060      	beq.n	800a53e <HttpDaemon::Run()+0x116>
 800a47c:	f240 129d 	movw	r2, #413	; 0x19d
 800a480:	4293      	cmp	r3, r2
 800a482:	d05e      	beq.n	800a542 <HttpDaemon::Run()+0x11a>
 800a484:	4d34      	ldr	r5, [pc, #208]	; (800a558 <HttpDaemon::Run()+0x130>)
 800a486:	4a35      	ldr	r2, [pc, #212]	; (800a55c <HttpDaemon::Run()+0x134>)
 800a488:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a48c:	bf18      	it	ne
 800a48e:	4615      	movne	r5, r2
 800a490:	4a33      	ldr	r2, [pc, #204]	; (800a560 <HttpDaemon::Run()+0x138>)
 800a492:	f240 519f 	movw	r1, #1439	; 0x59f
 800a496:	6022      	str	r2, [r4, #0]
 800a498:	4638      	mov	r0, r7
 800a49a:	e9cd 5500 	strd	r5, r5, [sp]
 800a49e:	4a31      	ldr	r2, [pc, #196]	; (800a564 <HttpDaemon::Run()+0x13c>)
 800a4a0:	f009 fef4 	bl	801428c <snprintf>
 800a4a4:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a4a8:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a4ac:	f240 519f 	movw	r1, #1439	; 0x59f
 800a4b0:	9303      	str	r3, [sp, #12]
 800a4b2:	6823      	ldr	r3, [r4, #0]
 800a4b4:	4a2c      	ldr	r2, [pc, #176]	; (800a568 <HttpDaemon::Run()+0x140>)
 800a4b6:	9302      	str	r3, [sp, #8]
 800a4b8:	4b2c      	ldr	r3, [pc, #176]	; (800a56c <HttpDaemon::Run()+0x144>)
 800a4ba:	68e0      	ldr	r0, [r4, #12]
 800a4bc:	e9cd 5300 	strd	r5, r3, [sp]
 800a4c0:	69a3      	ldr	r3, [r4, #24]
 800a4c2:	f009 fee3 	bl	801428c <snprintf>
 800a4c6:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a4ca:	b283      	uxth	r3, r0
 800a4cc:	6830      	ldr	r0, [r6, #0]
 800a4ce:	f007 f8c4 	bl	801165a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a4d2:	463a      	mov	r2, r7
 800a4d4:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a4d8:	6921      	ldr	r1, [r4, #16]
 800a4da:	6830      	ldr	r0, [r6, #0]
 800a4dc:	f007 f8bd 	bl	801165a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a4e0:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a4e4:	2302      	movs	r3, #2
 800a4e6:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a4ea:	e00c      	b.n	800a506 <HttpDaemon::Run()+0xde>
 800a4ec:	2b01      	cmp	r3, #1
 800a4ee:	d1b9      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a4f0:	2100      	movs	r1, #0
 800a4f2:	4620      	mov	r0, r4
 800a4f4:	f7ff fee2 	bl	800a2bc <HttpDaemon::HandlePost(bool)>
 800a4f8:	28c8      	cmp	r0, #200	; 0xc8
 800a4fa:	61a0      	str	r0, [r4, #24]
 800a4fc:	d1b2      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a4fe:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a502:	2b00      	cmp	r3, #0
 800a504:	d1ae      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a506:	b005      	add	sp, #20
 800a508:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a50a:	2bc8      	cmp	r3, #200	; 0xc8
 800a50c:	d1aa      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a50e:	69e1      	ldr	r1, [r4, #28]
 800a510:	2901      	cmp	r1, #1
 800a512:	d1a7      	bne.n	800a464 <HttpDaemon::Run()+0x3c>
 800a514:	4620      	mov	r0, r4
 800a516:	f7ff fed1 	bl	800a2bc <HttpDaemon::HandlePost(bool)>
 800a51a:	e7a2      	b.n	800a462 <HttpDaemon::Run()+0x3a>
 800a51c:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a520:	4293      	cmp	r3, r2
 800a522:	d010      	beq.n	800a546 <HttpDaemon::Run()+0x11e>
 800a524:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a528:	4293      	cmp	r3, r2
 800a52a:	d00e      	beq.n	800a54a <HttpDaemon::Run()+0x122>
 800a52c:	4d10      	ldr	r5, [pc, #64]	; (800a570 <HttpDaemon::Run()+0x148>)
 800a52e:	4a0b      	ldr	r2, [pc, #44]	; (800a55c <HttpDaemon::Run()+0x134>)
 800a530:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a534:	bf18      	it	ne
 800a536:	4615      	movne	r5, r2
 800a538:	e7aa      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a53a:	4d0e      	ldr	r5, [pc, #56]	; (800a574 <HttpDaemon::Run()+0x14c>)
 800a53c:	e7a8      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a53e:	4d0e      	ldr	r5, [pc, #56]	; (800a578 <HttpDaemon::Run()+0x150>)
 800a540:	e7a6      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a542:	4d0e      	ldr	r5, [pc, #56]	; (800a57c <HttpDaemon::Run()+0x154>)
 800a544:	e7a4      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a546:	4d0e      	ldr	r5, [pc, #56]	; (800a580 <HttpDaemon::Run()+0x158>)
 800a548:	e7a2      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a54a:	4d0e      	ldr	r5, [pc, #56]	; (800a584 <HttpDaemon::Run()+0x15c>)
 800a54c:	e7a0      	b.n	800a490 <HttpDaemon::Run()+0x68>
 800a54e:	4d0e      	ldr	r5, [pc, #56]	; (800a588 <HttpDaemon::Run()+0x160>)
 800a550:	e7aa      	b.n	800a4a8 <HttpDaemon::Run()+0x80>
 800a552:	bf00      	nop
 800a554:	2000cc60 	andcs	ip, r0, r0, ror #24
 800a558:	08016aec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, fp, sp, lr}
 800a55c:	08016af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, sp, lr}
 800a560:	08016be1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, fp, sp, lr}
 800a564:	08016b1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, fp, sp, lr}
 800a568:	08016b7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, fp, sp, lr}
 800a56c:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 800a570:	08016b06 	stmdaeq	r1, {r1, r2, r8, r9, fp, sp, lr}
 800a574:	08016aaa 	stmdaeq	r1, {r1, r3, r5, r7, r9, fp, sp, lr}
 800a578:	08016aa0 	stmdaeq	r1, {r5, r7, r9, fp, sp, lr}
 800a57c:	08016a87 	stmdaeq	r1, {r0, r1, r2, r7, r9, fp, sp, lr}
 800a580:	08016ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp, sp, lr}
 800a584:	08016abf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, fp, sp, lr}
 800a588:	08016b1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, fp, sp, lr}

0800a58c <remoteconfig::json_get_list(char*, unsigned short)>:
 800a58c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a590:	4b14      	ldr	r3, [pc, #80]	; (800a5e4 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a592:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a5e8 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	b088      	sub	sp, #32
 800a59a:	4605      	mov	r5, r0
 800a59c:	f8d8 0000 	ldr.w	r0, [r8]
 800a5a0:	691c      	ldr	r4, [r3, #16]
 800a5a2:	460e      	mov	r6, r1
 800a5a4:	f7fe ffd4 	bl	8009550 <RemoteConfig::GetStringNode() const>
 800a5a8:	4607      	mov	r7, r0
 800a5aa:	f8d8 0000 	ldr.w	r0, [r8]
 800a5ae:	f7fe ffdb 	bl	8009568 <RemoteConfig::GetStringOutput() const>
 800a5b2:	4b0e      	ldr	r3, [pc, #56]	; (800a5ec <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a5b4:	4631      	mov	r1, r6
 800a5b6:	7a1a      	ldrb	r2, [r3, #8]
 800a5b8:	3309      	adds	r3, #9
 800a5ba:	9303      	str	r3, [sp, #12]
 800a5bc:	0e23      	lsrs	r3, r4, #24
 800a5be:	9302      	str	r3, [sp, #8]
 800a5c0:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a5c4:	9301      	str	r3, [sp, #4]
 800a5c6:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a5ca:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a5ce:	9300      	str	r3, [sp, #0]
 800a5d0:	4628      	mov	r0, r5
 800a5d2:	4a07      	ldr	r2, [pc, #28]	; (800a5f0 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a5d4:	9704      	str	r7, [sp, #16]
 800a5d6:	b2e3      	uxtb	r3, r4
 800a5d8:	f009 fe58 	bl	801428c <snprintf>
 800a5dc:	b280      	uxth	r0, r0
 800a5de:	b008      	add	sp, #32
 800a5e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a5e4:	2000cc60 	andcs	ip, r0, r0, ror #24
 800a5e8:	20000124 	andcs	r0, r0, r4, lsr #2
 800a5ec:	20000100 	andcs	r0, r0, r0, lsl #2
 800a5f0:	08016cbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, sl, fp, sp, lr}

0800a5f4 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a5f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5f6:	2208      	movs	r2, #8
 800a5f8:	4b09      	ldr	r3, [pc, #36]	; (800a620 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a5fa:	9204      	str	r2, [sp, #16]
 800a5fc:	f1a3 020b 	sub.w	r2, r3, #11
 800a600:	9203      	str	r2, [sp, #12]
 800a602:	220b      	movs	r2, #11
 800a604:	9202      	str	r2, [sp, #8]
 800a606:	4a07      	ldr	r2, [pc, #28]	; (800a624 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a608:	9305      	str	r3, [sp, #20]
 800a60a:	3b0e      	subs	r3, #14
 800a60c:	9201      	str	r2, [sp, #4]
 800a60e:	9300      	str	r3, [sp, #0]
 800a610:	4a05      	ldr	r2, [pc, #20]	; (800a628 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a612:	2303      	movs	r3, #3
 800a614:	f009 fe3a 	bl	801428c <snprintf>
 800a618:	b280      	uxth	r0, r0
 800a61a:	b007      	add	sp, #28
 800a61c:	f85d fb04 	ldr.w	pc, [sp], #4
 800a620:	2000d336 	andcs	sp, r0, r6, lsr r3
 800a624:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 800a628:	08016d1a 	stmdaeq	r1, {r1, r3, r4, r8, sl, fp, sp, lr}

0800a62c <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a62c:	b508      	push	{r3, lr}
 800a62e:	4b05      	ldr	r3, [pc, #20]	; (800a644 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a630:	681a      	ldr	r2, [r3, #0]
 800a632:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a636:	fbb2 f3f3 	udiv	r3, r2, r3
 800a63a:	4a03      	ldr	r2, [pc, #12]	; (800a648 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a63c:	f009 fe26 	bl	801428c <snprintf>
 800a640:	b280      	uxth	r0, r0
 800a642:	bd08      	pop	{r3, pc}
 800a644:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800a648:	08016d60 	stmdaeq	r1, {r5, r6, r8, sl, fp, sp, lr}

0800a64c <remoteconfig::json_get_display(char*, unsigned short)>:
 800a64c:	b508      	push	{r3, lr}
 800a64e:	4b05      	ldr	r3, [pc, #20]	; (800a664 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a650:	4a05      	ldr	r2, [pc, #20]	; (800a668 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a652:	681b      	ldr	r3, [r3, #0]
 800a654:	7c1b      	ldrb	r3, [r3, #16]
 800a656:	f083 0301 	eor.w	r3, r3, #1
 800a65a:	f009 fe17 	bl	801428c <snprintf>
 800a65e:	b280      	uxth	r0, r0
 800a660:	bd08      	pop	{r3, pc}
 800a662:	bf00      	nop
 800a664:	2000d298 	mulcs	r0, r8, r2
 800a668:	08016d6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}

0800a66c <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a66c:	b508      	push	{r3, lr}
 800a66e:	4a02      	ldr	r2, [pc, #8]	; (800a678 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a670:	f009 fe0c 	bl	801428c <snprintf>
 800a674:	b280      	uxth	r0, r0
 800a676:	bd08      	pop	{r3, pc}
 800a678:	08016d7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sl, fp, sp, lr}

0800a67c <get_file_content(char const*, char*)>:
 800a67c:	2300      	movs	r3, #0
 800a67e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a680:	4a18      	ldr	r2, [pc, #96]	; (800a6e4 <get_file_content(char const*, char*)+0x68>)
 800a682:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800a686:	1e46      	subs	r6, r0, #1
 800a688:	1e6f      	subs	r7, r5, #1
 800a68a:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800a68e:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800a692:	4564      	cmp	r4, ip
 800a694:	d119      	bne.n	800a6ca <get_file_content(char const*, char*)+0x4e>
 800a696:	2c00      	cmp	r4, #0
 800a698:	d1f7      	bne.n	800a68a <get_file_content(char const*, char*)+0xe>
 800a69a:	460c      	mov	r4, r1
 800a69c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a6a0:	685b      	ldr	r3, [r3, #4]
 800a6a2:	3b01      	subs	r3, #1
 800a6a4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a6a8:	f804 2b01 	strb.w	r2, [r4], #1
 800a6ac:	2a00      	cmp	r2, #0
 800a6ae:	d1f9      	bne.n	800a6a4 <get_file_content(char const*, char*)+0x28>
 800a6b0:	1a64      	subs	r4, r4, r1
 800a6b2:	3c01      	subs	r4, #1
 800a6b4:	232e      	movs	r3, #46	; 0x2e
 800a6b6:	e9cd 5400 	strd	r5, r4, [sp]
 800a6ba:	4a0b      	ldr	r2, [pc, #44]	; (800a6e8 <get_file_content(char const*, char*)+0x6c>)
 800a6bc:	490b      	ldr	r1, [pc, #44]	; (800a6ec <get_file_content(char const*, char*)+0x70>)
 800a6be:	480c      	ldr	r0, [pc, #48]	; (800a6f0 <get_file_content(char const*, char*)+0x74>)
 800a6c0:	f009 fdbc 	bl	801423c <printf>
 800a6c4:	4620      	mov	r0, r4
 800a6c6:	b003      	add	sp, #12
 800a6c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6ca:	3301      	adds	r3, #1
 800a6cc:	2b03      	cmp	r3, #3
 800a6ce:	d1d8      	bne.n	800a682 <get_file_content(char const*, char*)+0x6>
 800a6d0:	2333      	movs	r3, #51	; 0x33
 800a6d2:	4a06      	ldr	r2, [pc, #24]	; (800a6ec <get_file_content(char const*, char*)+0x70>)
 800a6d4:	4904      	ldr	r1, [pc, #16]	; (800a6e8 <get_file_content(char const*, char*)+0x6c>)
 800a6d6:	4807      	ldr	r0, [pc, #28]	; (800a6f4 <get_file_content(char const*, char*)+0x78>)
 800a6d8:	f009 fdb0 	bl	801423c <printf>
 800a6dc:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800a6e0:	e7f0      	b.n	800a6c4 <get_file_content(char const*, char*)+0x48>
 800a6e2:	bf00      	nop
 800a6e4:	0801711c 	stmdaeq	r1, {r2, r3, r4, r8, ip, sp, lr}
 800a6e8:	08016e17 	stmdaeq	r1, {r0, r1, r2, r4, r9, sl, fp, sp, lr}
 800a6ec:	08016e36 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, fp, sp, lr}
 800a6f0:	08016e47 	stmdaeq	r1, {r0, r1, r2, r6, r9, sl, fp, sp, lr}
 800a6f4:	08016e63 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, fp, sp, lr}

0800a6f8 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)>:
 800a6f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a6fa:	4616      	mov	r6, r2
 800a6fc:	1d07      	adds	r7, r0, #4
 800a6fe:	4604      	mov	r4, r0
 800a700:	4613      	mov	r3, r2
 800a702:	4638      	mov	r0, r7
 800a704:	f10d 0206 	add.w	r2, sp, #6
 800a708:	460d      	mov	r5, r1
 800a70a:	f000 fc1d 	bl	800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a70e:	b1b6      	cbz	r6, 800a73e <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a710:	b1a8      	cbz	r0, 800a73e <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a712:	4629      	mov	r1, r5
 800a714:	4638      	mov	r0, r7
 800a716:	f000 fd95 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a71a:	2801      	cmp	r0, #1
 800a71c:	d10f      	bne.n	800a73e <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a71e:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800a722:	b123      	cbz	r3, 800a72e <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x36>
 800a724:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a728:	3301      	adds	r3, #1
 800a72a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a72e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a732:	b933      	cbnz	r3, 800a742 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x4a>
 800a734:	2202      	movs	r2, #2
 800a736:	4629      	mov	r1, r5
 800a738:	4638      	mov	r0, r7
 800a73a:	f000 fc48 	bl	800afce <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800a73e:	b003      	add	sp, #12
 800a740:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a742:	1e71      	subs	r1, r6, #1
 800a744:	424a      	negs	r2, r1
 800a746:	414a      	adcs	r2, r1
 800a748:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a74c:	4629      	mov	r1, r5
 800a74e:	f002 f863 	bl	800c818 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800a752:	e7f4      	b.n	800a73e <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>

0800a754 <ArtNet4Node::~ArtNet4Node()>:
 800a754:	b510      	push	{r4, lr}
 800a756:	4604      	mov	r4, r0
 800a758:	4b05      	ldr	r3, [pc, #20]	; (800a770 <ArtNet4Node::~ArtNet4Node()+0x1c>)
 800a75a:	6003      	str	r3, [r0, #0]
 800a75c:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a760:	f001 ff6a 	bl	800c638 <E131Bridge::Stop()>
 800a764:	1d20      	adds	r0, r4, #4
 800a766:	f000 f961 	bl	800aa2c <ArtNetNode::Stop()>
 800a76a:	4620      	mov	r0, r4
 800a76c:	bd10      	pop	{r4, pc}
 800a76e:	bf00      	nop
 800a770:	08017684 	stmdaeq	r1, {r2, r7, r9, sl, ip, sp, lr}

0800a774 <ArtNet4Node::HandleAddress(unsigned char)>:
 800a774:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a776:	4605      	mov	r5, r0
 800a778:	460c      	mov	r4, r1
 800a77a:	2600      	movs	r6, #0
 800a77c:	1d07      	adds	r7, r0, #4
 800a77e:	792b      	ldrb	r3, [r5, #4]
 800a780:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800a784:	d224      	bcs.n	800a7d0 <ArtNet4Node::HandleAddress(unsigned char)+0x5c>
 800a786:	2301      	movs	r3, #1
 800a788:	4631      	mov	r1, r6
 800a78a:	4638      	mov	r0, r7
 800a78c:	f10d 0206 	add.w	r2, sp, #6
 800a790:	f000 fbda 	bl	800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a794:	b150      	cbz	r0, 800a7ac <ArtNet4Node::HandleAddress(unsigned char)+0x38>
 800a796:	f895 30a4 	ldrb.w	r3, [r5, #164]	; 0xa4
 800a79a:	b123      	cbz	r3, 800a7a6 <ArtNet4Node::HandleAddress(unsigned char)+0x32>
 800a79c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a7a0:	3301      	adds	r3, #1
 800a7a2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a7a6:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a7aa:	b90b      	cbnz	r3, 800a7b0 <ArtNet4Node::HandleAddress(unsigned char)+0x3c>
 800a7ac:	3601      	adds	r6, #1
 800a7ae:	e7e6      	b.n	800a77e <ArtNet4Node::HandleAddress(unsigned char)+0xa>
 800a7b0:	4631      	mov	r1, r6
 800a7b2:	4638      	mov	r0, r7
 800a7b4:	f000 fd46 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a7b8:	4602      	mov	r2, r0
 800a7ba:	2a01      	cmp	r2, #1
 800a7bc:	bf18      	it	ne
 800a7be:	2202      	movne	r2, #2
 800a7c0:	4631      	mov	r1, r6
 800a7c2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a7c6:	f605 008c 	addw	r0, r5, #2188	; 0x88c
 800a7ca:	f002 f825 	bl	800c818 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800a7ce:	e7ed      	b.n	800a7ac <ArtNet4Node::HandleAddress(unsigned char)+0x38>
 800a7d0:	2c13      	cmp	r4, #19
 800a7d2:	f004 0603 	and.w	r6, r4, #3
 800a7d6:	d80a      	bhi.n	800a7ee <ArtNet4Node::HandleAddress(unsigned char)+0x7a>
 800a7d8:	2c0f      	cmp	r4, #15
 800a7da:	d819      	bhi.n	800a810 <ArtNet4Node::HandleAddress(unsigned char)+0x9c>
 800a7dc:	2c02      	cmp	r4, #2
 800a7de:	d015      	beq.n	800a80c <ArtNet4Node::HandleAddress(unsigned char)+0x98>
 800a7e0:	3c03      	subs	r4, #3
 800a7e2:	2c01      	cmp	r4, #1
 800a7e4:	d810      	bhi.n	800a808 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a7e6:	2300      	movs	r3, #0
 800a7e8:	f885 3894 	strb.w	r3, [r5, #2196]	; 0x894
 800a7ec:	e00c      	b.n	800a808 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a7ee:	2c53      	cmp	r4, #83	; 0x53
 800a7f0:	d806      	bhi.n	800a800 <ArtNet4Node::HandleAddress(unsigned char)+0x8c>
 800a7f2:	2c4f      	cmp	r4, #79	; 0x4f
 800a7f4:	d908      	bls.n	800a808 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a7f6:	2144      	movs	r1, #68	; 0x44
 800a7f8:	2300      	movs	r3, #0
 800a7fa:	fb01 5506 	mla	r5, r1, r6, r5
 800a7fe:	e00b      	b.n	800a818 <ArtNet4Node::HandleAddress(unsigned char)+0xa4>
 800a800:	3470      	adds	r4, #112	; 0x70
 800a802:	b2e4      	uxtb	r4, r4
 800a804:	2c03      	cmp	r4, #3
 800a806:	d90a      	bls.n	800a81e <ArtNet4Node::HandleAddress(unsigned char)+0xaa>
 800a808:	b003      	add	sp, #12
 800a80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a80c:	2301      	movs	r3, #1
 800a80e:	e7eb      	b.n	800a7e8 <ArtNet4Node::HandleAddress(unsigned char)+0x74>
 800a810:	2144      	movs	r1, #68	; 0x44
 800a812:	2301      	movs	r3, #1
 800a814:	fb01 5506 	mla	r5, r1, r6, r5
 800a818:	f8c5 3dd8 	str.w	r3, [r5, #3544]	; 0xdd8
 800a81c:	e7f4      	b.n	800a808 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a81e:	4631      	mov	r1, r6
 800a820:	1d28      	adds	r0, r5, #4
 800a822:	f000 fd0f 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a826:	2801      	cmp	r0, #1
 800a828:	d1ee      	bne.n	800a808 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a82a:	4631      	mov	r1, r6
 800a82c:	f605 008c 	addw	r0, r5, #2188	; 0x88c
 800a830:	b003      	add	sp, #12
 800a832:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a836:	f002 bb09 	b.w	800ce4c <E131Bridge::Clear(unsigned int)>

0800a83a <ArtNet4Node::IsStatusChanged()>:
 800a83a:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a83e:	f002 bafd 	b.w	800ce3c <E131Bridge::IsStatusChanged()>

0800a842 <ArtNet4Node::~ArtNet4Node()>:
 800a842:	b510      	push	{r4, lr}
 800a844:	4604      	mov	r4, r0
 800a846:	f7ff ff85 	bl	800a754 <ArtNet4Node::~ArtNet4Node()>
 800a84a:	4620      	mov	r0, r4
 800a84c:	f009 f8ec 	bl	8013a28 <operator delete(void*)>
 800a850:	4620      	mov	r0, r4
 800a852:	bd10      	pop	{r4, pc}

0800a854 <ArtNet4Node::GetStatus(unsigned int)>:
 800a854:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a856:	2301      	movs	r3, #1
 800a858:	4604      	mov	r4, r0
 800a85a:	f10d 0206 	add.w	r2, sp, #6
 800a85e:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a862:	460d      	mov	r5, r1
 800a864:	f002 f850 	bl	800c908 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a868:	b188      	cbz	r0, 800a88e <ArtNet4Node::GetStatus(unsigned int)+0x3a>
 800a86a:	2144      	movs	r1, #68	; 0x44
 800a86c:	fb01 4405 	mla	r4, r1, r5, r4
 800a870:	f894 3dde 	ldrb.w	r3, [r4, #3550]	; 0xdde
 800a874:	2b00      	cmp	r3, #0
 800a876:	f894 3ddd 	ldrb.w	r3, [r4, #3549]	; 0xddd
 800a87a:	bf14      	ite	ne
 800a87c:	2080      	movne	r0, #128	; 0x80
 800a87e:	2000      	moveq	r0, #0
 800a880:	2b00      	cmp	r3, #0
 800a882:	bf14      	ite	ne
 800a884:	2308      	movne	r3, #8
 800a886:	2300      	moveq	r3, #0
 800a888:	4318      	orrs	r0, r3
 800a88a:	f040 0001 	orr.w	r0, r0, #1
 800a88e:	b003      	add	sp, #12
 800a890:	bd30      	pop	{r4, r5, pc}
	...

0800a894 <ArtNet4Node::ArtNet4Node(unsigned char)>:
 800a894:	b538      	push	{r3, r4, r5, lr}
 800a896:	4604      	mov	r4, r0
 800a898:	1d05      	adds	r5, r0, #4
 800a89a:	4628      	mov	r0, r5
 800a89c:	f000 f964 	bl	800ab68 <ArtNetNode::ArtNetNode(unsigned char)>
 800a8a0:	4b05      	ldr	r3, [pc, #20]	; (800a8b8 <ArtNet4Node::ArtNet4Node(unsigned char)+0x24>)
 800a8a2:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a8a6:	6023      	str	r3, [r4, #0]
 800a8a8:	f001 ff16 	bl	800c6d8 <E131Bridge::E131Bridge()>
 800a8ac:	4628      	mov	r0, r5
 800a8ae:	4621      	mov	r1, r4
 800a8b0:	f000 f866 	bl	800a980 <ArtNetNode::SetArtNet4Handler(ArtNet4Handler*)>
 800a8b4:	4620      	mov	r0, r4
 800a8b6:	bd38      	pop	{r3, r4, r5, pc}
 800a8b8:	08017684 	stmdaeq	r1, {r2, r7, r9, sl, ip, sp, lr}

0800a8bc <ArtNet4Node::Start()>:
 800a8bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8be:	4604      	mov	r4, r0
 800a8c0:	2500      	movs	r5, #0
 800a8c2:	1d06      	adds	r6, r0, #4
 800a8c4:	7923      	ldrb	r3, [r4, #4]
 800a8c6:	ebb5 0f83 	cmp.w	r5, r3, lsl #2
 800a8ca:	d218      	bcs.n	800a8fe <ArtNet4Node::Start()+0x42>
 800a8cc:	2301      	movs	r3, #1
 800a8ce:	4629      	mov	r1, r5
 800a8d0:	4630      	mov	r0, r6
 800a8d2:	f10d 0206 	add.w	r2, sp, #6
 800a8d6:	f000 fb37 	bl	800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a8da:	b170      	cbz	r0, 800a8fa <ArtNet4Node::Start()+0x3e>
 800a8dc:	4629      	mov	r1, r5
 800a8de:	4630      	mov	r0, r6
 800a8e0:	f000 fcb0 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a8e4:	2801      	cmp	r0, #1
 800a8e6:	d108      	bne.n	800a8fa <ArtNet4Node::Start()+0x3e>
 800a8e8:	4629      	mov	r1, r5
 800a8ea:	4630      	mov	r0, r6
 800a8ec:	f000 fcdb 	bl	800b2a6 <ArtNetNode::GetMergeMode(unsigned int) const>
 800a8f0:	2344      	movs	r3, #68	; 0x44
 800a8f2:	436b      	muls	r3, r5
 800a8f4:	f604 52d8 	addw	r2, r4, #3544	; 0xdd8
 800a8f8:	50d0      	str	r0, [r2, r3]
 800a8fa:	3501      	adds	r5, #1
 800a8fc:	e7e2      	b.n	800a8c4 <ArtNet4Node::Start()+0x8>
 800a8fe:	f8d4 36d4 	ldr.w	r3, [r4, #1748]	; 0x6d4
 800a902:	4630      	mov	r0, r6
 800a904:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a908:	bf2c      	ite	cs
 800a90a:	2300      	movcs	r3, #0
 800a90c:	2301      	movcc	r3, #1
 800a90e:	f884 3d85 	strb.w	r3, [r4, #3461]	; 0xd85
 800a912:	f894 36e4 	ldrb.w	r3, [r4, #1764]	; 0x6e4
 800a916:	f884 3d86 	strb.w	r3, [r4, #3462]	; 0xd86
 800a91a:	68e3      	ldr	r3, [r4, #12]
 800a91c:	f8c4 3890 	str.w	r3, [r4, #2192]	; 0x890
 800a920:	f000 f840 	bl	800a9a4 <ArtNetNode::Start()>
 800a924:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a928:	b002      	add	sp, #8
 800a92a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a92e:	f001 be47 	b.w	800c5c0 <E131Bridge::Start()>

0800a932 <ArtNet4Node::Run()>:
 800a932:	b510      	push	{r4, lr}
 800a934:	4604      	mov	r4, r0
 800a936:	3004      	adds	r0, #4
 800a938:	f000 fa28 	bl	800ad8c <ArtNetNode::Run()>
 800a93c:	f894 3d97 	ldrb.w	r3, [r4, #3479]	; 0xd97
 800a940:	b12b      	cbz	r3, 800a94e <ArtNet4Node::Run()+0x1c>
 800a942:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a946:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a94a:	f002 bae1 	b.w	800cf10 <E131Bridge::Run()>
 800a94e:	bd10      	pop	{r4, pc}

0800a950 <ArtNet4Node::Print()>:
 800a950:	b510      	push	{r4, lr}
 800a952:	4604      	mov	r4, r0
 800a954:	3004      	adds	r0, #4
 800a956:	f001 fc51 	bl	800c1fc <ArtNetNode::Print()>
 800a95a:	f894 36e6 	ldrb.w	r3, [r4, #1766]	; 0x6e6
 800a95e:	b15b      	cbz	r3, 800a978 <ArtNet4Node::Print()+0x28>
 800a960:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800a964:	b113      	cbz	r3, 800a96c <ArtNet4Node::Print()+0x1c>
 800a966:	4805      	ldr	r0, [pc, #20]	; (800a97c <ArtNet4Node::Print()+0x2c>)
 800a968:	f009 fc68 	bl	801423c <printf>
 800a96c:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a970:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a974:	f002 bd20 	b.w	800d3b8 <E131Bridge::Print()>
 800a978:	bd10      	pop	{r4, pc}
 800a97a:	bf00      	nop
 800a97c:	0801765e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, sl, ip, sp, lr}

0800a980 <ArtNetNode::SetArtNet4Handler(ArtNet4Handler*)>:
 800a980:	61c1      	str	r1, [r0, #28]
 800a982:	4770      	bx	lr

0800a984 <strncpy.isra.0>:
 800a984:	3901      	subs	r1, #1
 800a986:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a98a:	b92b      	cbnz	r3, 800a998 <strncpy.isra.0+0x14>
 800a98c:	4402      	add	r2, r0
 800a98e:	4290      	cmp	r0, r2
 800a990:	d007      	beq.n	800a9a2 <strncpy.isra.0+0x1e>
 800a992:	f800 3b01 	strb.w	r3, [r0], #1
 800a996:	e7fa      	b.n	800a98e <strncpy.isra.0+0xa>
 800a998:	3a01      	subs	r2, #1
 800a99a:	f800 3b01 	strb.w	r3, [r0], #1
 800a99e:	d1f2      	bne.n	800a986 <strncpy.isra.0+0x2>
 800a9a0:	4770      	bx	lr
 800a9a2:	4770      	bx	lr

0800a9a4 <ArtNetNode::Start()>:
 800a9a4:	b570      	push	{r4, r5, r6, lr}
 800a9a6:	4d1f      	ldr	r5, [pc, #124]	; (800aa24 <ArtNetNode::Start()+0x80>)
 800a9a8:	f990 3098 	ldrsb.w	r3, [r0, #152]	; 0x98
 800a9ac:	682a      	ldr	r2, [r5, #0]
 800a9ae:	f023 0302 	bic.w	r3, r3, #2
 800a9b2:	7851      	ldrb	r1, [r2, #1]
 800a9b4:	4604      	mov	r4, r0
 800a9b6:	2900      	cmp	r1, #0
 800a9b8:	bf14      	ite	ne
 800a9ba:	2102      	movne	r1, #2
 800a9bc:	2100      	moveq	r1, #0
 800a9be:	430b      	orrs	r3, r1
 800a9c0:	f880 3098 	strb.w	r3, [r0, #152]	; 0x98
 800a9c4:	7812      	ldrb	r2, [r2, #0]
 800a9c6:	f023 0304 	bic.w	r3, r3, #4
 800a9ca:	2a00      	cmp	r2, #0
 800a9cc:	bf14      	ite	ne
 800a9ce:	2204      	movne	r2, #4
 800a9d0:	2200      	moveq	r2, #0
 800a9d2:	4313      	orrs	r3, r2
 800a9d4:	f880 3098 	strb.w	r3, [r0, #152]	; 0x98
 800a9d8:	f001 f904 	bl	800bbe4 <ArtNetNode::FillPollReply()>
 800a9dc:	f641 1136 	movw	r1, #6454	; 0x1936
 800a9e0:	6828      	ldr	r0, [r5, #0]
 800a9e2:	f006 fbb9 	bl	8011158 <Network::Begin(unsigned short)>
 800a9e6:	2302      	movs	r3, #2
 800a9e8:	f884 36d9 	strb.w	r3, [r4, #1753]	; 0x6d9
 800a9ec:	6963      	ldr	r3, [r4, #20]
 800a9ee:	6060      	str	r0, [r4, #4]
 800a9f0:	b16b      	cbz	r3, 800aa0e <ArtNetNode::Start()+0x6a>
 800a9f2:	2500      	movs	r5, #0
 800a9f4:	f604 060c 	addw	r6, r4, #2060	; 0x80c
 800a9f8:	012b      	lsls	r3, r5, #4
 800a9fa:	5cf3      	ldrb	r3, [r6, r3]
 800a9fc:	b123      	cbz	r3, 800aa08 <ArtNetNode::Start()+0x64>
 800a9fe:	6960      	ldr	r0, [r4, #20]
 800aa00:	4629      	mov	r1, r5
 800aa02:	6803      	ldr	r3, [r0, #0]
 800aa04:	689b      	ldr	r3, [r3, #8]
 800aa06:	4798      	blx	r3
 800aa08:	3501      	adds	r5, #1
 800aa0a:	2d04      	cmp	r5, #4
 800aa0c:	d1f4      	bne.n	800a9f8 <ArtNetNode::Start()+0x54>
 800aa0e:	4b06      	ldr	r3, [pc, #24]	; (800aa28 <ArtNetNode::Start()+0x84>)
 800aa10:	2102      	movs	r1, #2
 800aa12:	6818      	ldr	r0, [r3, #0]
 800aa14:	f008 ff26 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800aa18:	4620      	mov	r0, r4
 800aa1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800aa1e:	2100      	movs	r1, #0
 800aa20:	f001 b952 	b.w	800bcc8 <ArtNetNode::SendPollRelply(bool)>
 800aa24:	2000cc60 	andcs	ip, r0, r0, ror #24
 800aa28:	2000d384 	andcs	sp, r0, r4, lsl #7

0800aa2c <ArtNetNode::Stop()>:
 800aa2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa30:	2500      	movs	r5, #0
 800aa32:	4604      	mov	r4, r0
 800aa34:	4606      	mov	r6, r0
 800aa36:	46a9      	mov	r9, r5
 800aa38:	f04f 0a01 	mov.w	sl, #1
 800aa3c:	4f1f      	ldr	r7, [pc, #124]	; (800aabc <ArtNetNode::Stop()+0x90>)
 800aa3e:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800aac0 <ArtNetNode::Stop()+0x94>
 800aa42:	f8d6 3704 	ldr.w	r3, [r6, #1796]	; 0x704
 800aa46:	b97b      	cbnz	r3, 800aa68 <ArtNetNode::Stop()+0x3c>
 800aa48:	68a0      	ldr	r0, [r4, #8]
 800aa4a:	b118      	cbz	r0, 800aa54 <ArtNetNode::Stop()+0x28>
 800aa4c:	6803      	ldr	r3, [r0, #0]
 800aa4e:	4629      	mov	r1, r5
 800aa50:	68db      	ldr	r3, [r3, #12]
 800aa52:	4798      	blx	r3
 800aa54:	f8d8 3000 	ldr.w	r3, [r8]
 800aa58:	f8c7 9600 	str.w	r9, [r7, #1536]	; 0x600
 800aa5c:	07db      	lsls	r3, r3, #31
 800aa5e:	bf58      	it	pl
 800aa60:	f8c8 a000 	strpl.w	sl, [r8]
 800aa64:	f886 9709 	strb.w	r9, [r6, #1801]	; 0x709
 800aa68:	3501      	adds	r5, #1
 800aa6a:	2d08      	cmp	r5, #8
 800aa6c:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800aa70:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800aa74:	d1e5      	bne.n	800aa42 <ArtNetNode::Stop()+0x16>
 800aa76:	6963      	ldr	r3, [r4, #20]
 800aa78:	b16b      	cbz	r3, 800aa96 <ArtNetNode::Stop()+0x6a>
 800aa7a:	2500      	movs	r5, #0
 800aa7c:	f604 060c 	addw	r6, r4, #2060	; 0x80c
 800aa80:	012b      	lsls	r3, r5, #4
 800aa82:	5cf3      	ldrb	r3, [r6, r3]
 800aa84:	b123      	cbz	r3, 800aa90 <ArtNetNode::Stop()+0x64>
 800aa86:	6960      	ldr	r0, [r4, #20]
 800aa88:	4629      	mov	r1, r5
 800aa8a:	6803      	ldr	r3, [r0, #0]
 800aa8c:	68db      	ldr	r3, [r3, #12]
 800aa8e:	4798      	blx	r3
 800aa90:	3501      	adds	r5, #1
 800aa92:	2d04      	cmp	r5, #4
 800aa94:	d1f4      	bne.n	800aa80 <ArtNetNode::Stop()+0x54>
 800aa96:	4b0b      	ldr	r3, [pc, #44]	; (800aac4 <ArtNetNode::Stop()+0x98>)
 800aa98:	2100      	movs	r1, #0
 800aa9a:	6818      	ldr	r0, [r3, #0]
 800aa9c:	f008 fee2 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800aaa0:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800aaa4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800aaa8:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800aaac:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800aab0:	2300      	movs	r3, #0
 800aab2:	f884 36d9 	strb.w	r3, [r4, #1753]	; 0x6d9
 800aab6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aaba:	bf00      	nop
 800aabc:	2000012c 	andcs	r0, r0, ip, lsr #2
 800aac0:	20000128 	andcs	r0, r0, r8, lsr #2
 800aac4:	2000d384 	andcs	sp, r0, r4, lsl #7

0800aac8 <ArtNetNode::SetShortName(char const*)>:
 800aac8:	b570      	push	{r4, r5, r6, lr}
 800aaca:	f100 0544 	add.w	r5, r0, #68	; 0x44
 800aace:	4604      	mov	r4, r0
 800aad0:	2211      	movs	r2, #17
 800aad2:	4628      	mov	r0, r5
 800aad4:	f7ff ff56 	bl	800a984 <strncpy.isra.0>
 800aad8:	2300      	movs	r3, #0
 800aada:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800aade:	462b      	mov	r3, r5
 800aae0:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800aae4:	428b      	cmp	r3, r1
 800aae6:	d004      	beq.n	800aaf2 <ArtNetNode::SetShortName(char const*)+0x2a>
 800aae8:	f813 2b01 	ldrb.w	r2, [r3], #1
 800aaec:	f883 254d 	strb.w	r2, [r3, #1357]	; 0x54d
 800aaf0:	e7f8      	b.n	800aae4 <ArtNetNode::SetShortName(char const*)+0x1c>
 800aaf2:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800aaf6:	2b02      	cmp	r3, #2
 800aaf8:	d10d      	bne.n	800ab16 <ArtNetNode::SetShortName(char const*)+0x4e>
 800aafa:	6a20      	ldr	r0, [r4, #32]
 800aafc:	b118      	cbz	r0, 800ab06 <ArtNetNode::SetShortName(char const*)+0x3e>
 800aafe:	6803      	ldr	r3, [r0, #0]
 800ab00:	4629      	mov	r1, r5
 800ab02:	689b      	ldr	r3, [r3, #8]
 800ab04:	4798      	blx	r3
 800ab06:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800ab08:	b128      	cbz	r0, 800ab16 <ArtNetNode::SetShortName(char const*)+0x4e>
 800ab0a:	6803      	ldr	r3, [r0, #0]
 800ab0c:	4629      	mov	r1, r5
 800ab0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab12:	689b      	ldr	r3, [r3, #8]
 800ab14:	4718      	bx	r3
 800ab16:	bd70      	pop	{r4, r5, r6, pc}

0800ab18 <ArtNetNode::SetLongName(char const*)>:
 800ab18:	b570      	push	{r4, r5, r6, lr}
 800ab1a:	f100 0556 	add.w	r5, r0, #86	; 0x56
 800ab1e:	4604      	mov	r4, r0
 800ab20:	223f      	movs	r2, #63	; 0x3f
 800ab22:	4628      	mov	r0, r5
 800ab24:	f7ff ff2e 	bl	800a984 <strncpy.isra.0>
 800ab28:	2300      	movs	r3, #0
 800ab2a:	f884 3095 	strb.w	r3, [r4, #149]	; 0x95
 800ab2e:	462b      	mov	r3, r5
 800ab30:	f104 0196 	add.w	r1, r4, #150	; 0x96
 800ab34:	428b      	cmp	r3, r1
 800ab36:	d004      	beq.n	800ab42 <ArtNetNode::SetLongName(char const*)+0x2a>
 800ab38:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ab3c:	f883 254d 	strb.w	r2, [r3, #1357]	; 0x54d
 800ab40:	e7f8      	b.n	800ab34 <ArtNetNode::SetLongName(char const*)+0x1c>
 800ab42:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800ab46:	2b02      	cmp	r3, #2
 800ab48:	d10d      	bne.n	800ab66 <ArtNetNode::SetLongName(char const*)+0x4e>
 800ab4a:	6a20      	ldr	r0, [r4, #32]
 800ab4c:	b118      	cbz	r0, 800ab56 <ArtNetNode::SetLongName(char const*)+0x3e>
 800ab4e:	6803      	ldr	r3, [r0, #0]
 800ab50:	4629      	mov	r1, r5
 800ab52:	68db      	ldr	r3, [r3, #12]
 800ab54:	4798      	blx	r3
 800ab56:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800ab58:	b128      	cbz	r0, 800ab66 <ArtNetNode::SetLongName(char const*)+0x4e>
 800ab5a:	6803      	ldr	r3, [r0, #0]
 800ab5c:	4629      	mov	r1, r5
 800ab5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ab62:	68db      	ldr	r3, [r3, #12]
 800ab64:	4718      	bx	r3
 800ab66:	bd70      	pop	{r4, r5, r6, pc}

0800ab68 <ArtNetNode::ArtNetNode(unsigned char)>:
 800ab68:	2300      	movs	r3, #0
 800ab6a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ab6e:	2902      	cmp	r1, #2
 800ab70:	bf28      	it	cs
 800ab72:	2102      	movcs	r1, #2
 800ab74:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ab76:	4604      	mov	r4, r0
 800ab78:	e9c0 2301 	strd	r2, r3, [r0, #4]
 800ab7c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ab80:	4a41      	ldr	r2, [pc, #260]	; (800ac88 <ArtNetNode::ArtNetNode(unsigned char)+0x120>)
 800ab82:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ab86:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ab8a:	7001      	strb	r1, [r0, #0]
 800ab8c:	6010      	str	r0, [r2, #0]
 800ab8e:	b085      	sub	sp, #20
 800ab90:	6243      	str	r3, [r0, #36]	; 0x24
 800ab92:	f8c0 3668 	str.w	r3, [r0, #1640]	; 0x668
 800ab96:	f8c0 366c 	str.w	r3, [r0, #1644]	; 0x66c
 800ab9a:	f880 3672 	strb.w	r3, [r0, #1650]	; 0x672
 800ab9e:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800aba2:	f100 01a4 	add.w	r1, r0, #164	; 0xa4
 800aba6:	428a      	cmp	r2, r1
 800aba8:	d002      	beq.n	800abb0 <ArtNetNode::ArtNetNode(unsigned char)+0x48>
 800abaa:	f802 3b01 	strb.w	r3, [r2], #1
 800abae:	e7fa      	b.n	800aba6 <ArtNetNode::ArtNetNode(unsigned char)+0x3e>
 800abb0:	4b36      	ldr	r3, [pc, #216]	; (800ac8c <ArtNetNode::ArtNetNode(unsigned char)+0x124>)
 800abb2:	f104 0138 	add.w	r1, r4, #56	; 0x38
 800abb6:	6818      	ldr	r0, [r3, #0]
 800abb8:	6903      	ldr	r3, [r0, #16]
 800abba:	62a3      	str	r3, [r4, #40]	; 0x28
 800abbc:	6982      	ldr	r2, [r0, #24]
 800abbe:	ea63 0302 	orn	r3, r3, r2
 800abc2:	62e3      	str	r3, [r4, #44]	; 0x2c
 800abc4:	6363      	str	r3, [r4, #52]	; 0x34
 800abc6:	f006 facd 	bl	8011164 <Network::MacAddressCopyTo(unsigned char*)>
 800abca:	23d0      	movs	r3, #208	; 0xd0
 800abcc:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800abd0:	f244 0318 	movw	r3, #16408	; 0x4018
 800abd4:	2200      	movs	r2, #0
 800abd6:	f8a4 3098 	strh.w	r3, [r4, #152]	; 0x98
 800abda:	f504 61dd 	add.w	r1, r4, #1768	; 0x6e8
 800abde:	f204 63c4 	addw	r3, r4, #1732	; 0x6c4
 800abe2:	428b      	cmp	r3, r1
 800abe4:	d002      	beq.n	800abec <ArtNetNode::ArtNetNode(unsigned char)+0x84>
 800abe6:	f803 2b01 	strb.w	r2, [r3], #1
 800abea:	e7fa      	b.n	800abe2 <ArtNetNode::ArtNetNode(unsigned char)+0x7a>
 800abec:	f240 1201 	movw	r2, #257	; 0x101
 800abf0:	f8a4 26d8 	strh.w	r2, [r4, #1752]	; 0x6d8
 800abf4:	f242 7210 	movw	r2, #10000	; 0x2710
 800abf8:	2500      	movs	r5, #0
 800abfa:	2708      	movs	r7, #8
 800abfc:	f8c4 26d0 	str.w	r2, [r4, #1744]	; 0x6d0
 800ac00:	f604 0108 	addw	r1, r4, #2056	; 0x808
 800ac04:	f604 0688 	addw	r6, r4, #2184	; 0x888
 800ac08:	f103 0024 	add.w	r0, r3, #36	; 0x24
 800ac0c:	4283      	cmp	r3, r0
 800ac0e:	d005      	beq.n	800ac1c <ArtNetNode::ArtNetNode(unsigned char)+0xb4>
 800ac10:	f803 5b01 	strb.w	r5, [r3], #1
 800ac14:	e7fa      	b.n	800ac0c <ArtNetNode::ArtNetNode(unsigned char)+0xa4>
 800ac16:	4603      	mov	r3, r0
 800ac18:	4611      	mov	r1, r2
 800ac1a:	e7f5      	b.n	800ac08 <ArtNetNode::ArtNetNode(unsigned char)+0xa0>
 800ac1c:	460a      	mov	r2, r1
 800ac1e:	f101 0310 	add.w	r3, r1, #16
 800ac22:	429a      	cmp	r2, r3
 800ac24:	d002      	beq.n	800ac2c <ArtNetNode::ArtNetNode(unsigned char)+0xc4>
 800ac26:	f802 5b01 	strb.w	r5, [r2], #1
 800ac2a:	e7fa      	b.n	800ac22 <ArtNetNode::ArtNetNode(unsigned char)+0xba>
 800ac2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ac2e:	4296      	cmp	r6, r2
 800ac30:	608b      	str	r3, [r1, #8]
 800ac32:	70cf      	strb	r7, [r1, #3]
 800ac34:	d1ef      	bne.n	800ac16 <ArtNetNode::ArtNetNode(unsigned char)+0xae>
 800ac36:	4620      	mov	r0, r4
 800ac38:	4915      	ldr	r1, [pc, #84]	; (800ac90 <ArtNetNode::ArtNetNode(unsigned char)+0x128>)
 800ac3a:	f7ff ff45 	bl	800aac8 <ArtNetNode::SetShortName(char const*)>
 800ac3e:	4b15      	ldr	r3, [pc, #84]	; (800ac94 <ArtNetNode::ArtNetNode(unsigned char)+0x12c>)
 800ac40:	f204 6583 	addw	r5, r4, #1667	; 0x683
 800ac44:	9302      	str	r3, [sp, #8]
 800ac46:	2304      	movs	r3, #4
 800ac48:	9301      	str	r3, [sp, #4]
 800ac4a:	4b13      	ldr	r3, [pc, #76]	; (800ac98 <ArtNetNode::ArtNetNode(unsigned char)+0x130>)
 800ac4c:	4a13      	ldr	r2, [pc, #76]	; (800ac9c <ArtNetNode::ArtNetNode(unsigned char)+0x134>)
 800ac4e:	9300      	str	r3, [sp, #0]
 800ac50:	2140      	movs	r1, #64	; 0x40
 800ac52:	4b13      	ldr	r3, [pc, #76]	; (800aca0 <ArtNetNode::ArtNetNode(unsigned char)+0x138>)
 800ac54:	4628      	mov	r0, r5
 800ac56:	f009 fb19 	bl	801428c <snprintf>
 800ac5a:	4629      	mov	r1, r5
 800ac5c:	4620      	mov	r0, r4
 800ac5e:	f7ff ff5b 	bl	800ab18 <ArtNetNode::SetLongName(char const*)>
 800ac62:	4b10      	ldr	r3, [pc, #64]	; (800aca4 <ArtNetNode::ArtNetNode(unsigned char)+0x13c>)
 800ac64:	f204 6073 	addw	r0, r4, #1651	; 0x673
 800ac68:	781a      	ldrb	r2, [r3, #0]
 800ac6a:	490f      	ldr	r1, [pc, #60]	; (800aca8 <ArtNetNode::ArtNetNode(unsigned char)+0x140>)
 800ac6c:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 800ac70:	785b      	ldrb	r3, [r3, #1]
 800ac72:	220f      	movs	r2, #15
 800ac74:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ac78:	f7ff fe84 	bl	800a984 <strncpy.isra.0>
 800ac7c:	2300      	movs	r3, #0
 800ac7e:	4620      	mov	r0, r4
 800ac80:	f884 3682 	strb.w	r3, [r4, #1666]	; 0x682
 800ac84:	b005      	add	sp, #20
 800ac86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac88:	2000314c 	andcs	r3, r0, ip, asr #2
 800ac8c:	2000cc60 	andcs	ip, r0, r0, ror #24
 800ac90:	08017718 	stmdaeq	r1, {r3, r4, r8, r9, sl, ip, sp, lr}
 800ac94:	080176f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800ac98:	08017710 	stmdaeq	r1, {r4, r8, r9, sl, ip, sp, lr}
 800ac9c:	080176e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, ip, sp, lr}
 800aca0:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 800aca4:	0801782c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, lr}
 800aca8:	08017707 	stmdaeq	r1, {r0, r1, r2, r8, r9, sl, ip, sp, lr}

0800acac <ArtNetNode::SetOemValue(unsigned char const*)>:
 800acac:	780b      	ldrb	r3, [r1, #0]
 800acae:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
 800acb2:	784b      	ldrb	r3, [r1, #1]
 800acb4:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
 800acb8:	4770      	bx	lr
	...

0800acbc <ArtNetNode::SetNetworkDataLossCondition()>:
 800acbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800acc0:	2400      	movs	r4, #0
 800acc2:	4606      	mov	r6, r0
 800acc4:	4605      	mov	r5, r0
 800acc6:	46a0      	mov	r8, r4
 800acc8:	46a2      	mov	sl, r4
 800acca:	4f1a      	ldr	r7, [pc, #104]	; (800ad34 <ArtNetNode::SetNetworkDataLossCondition()+0x78>)
 800accc:	f8df 9068 	ldr.w	r9, [pc, #104]	; 800ad38 <ArtNetNode::SetNetworkDataLossCondition()+0x7c>
 800acd0:	f880 46de 	strb.w	r4, [r0, #1758]	; 0x6de
 800acd4:	f880 46dd 	strb.w	r4, [r0, #1757]	; 0x6dd
 800acd8:	7833      	ldrb	r3, [r6, #0]
 800acda:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800acde:	d227      	bcs.n	800ad30 <ArtNetNode::SetNetworkDataLossCondition()+0x74>
 800ace0:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800ace4:	b953      	cbnz	r3, 800acfc <ArtNetNode::SetNetworkDataLossCondition()+0x40>
 800ace6:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800acea:	b13b      	cbz	r3, 800acfc <ArtNetNode::SetNetworkDataLossCondition()+0x40>
 800acec:	68b0      	ldr	r0, [r6, #8]
 800acee:	b118      	cbz	r0, 800acf8 <ArtNetNode::SetNetworkDataLossCondition()+0x3c>
 800acf0:	6803      	ldr	r3, [r0, #0]
 800acf2:	4621      	mov	r1, r4
 800acf4:	68db      	ldr	r3, [r3, #12]
 800acf6:	4798      	blx	r3
 800acf8:	f885 8709 	strb.w	r8, [r5, #1801]	; 0x709
 800acfc:	f895 36eb 	ldrb.w	r3, [r5, #1771]	; 0x6eb
 800ad00:	f8c5 86f4 	str.w	r8, [r5, #1780]	; 0x6f4
 800ad04:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800ad08:	f885 36eb 	strb.w	r3, [r5, #1771]	; 0x6eb
 800ad0c:	f8c5 86fc 	str.w	r8, [r5, #1788]	; 0x6fc
 800ad10:	f8d9 3000 	ldr.w	r3, [r9]
 800ad14:	f8c7 a600 	str.w	sl, [r7, #1536]	; 0x600
 800ad18:	07db      	lsls	r3, r3, #31
 800ad1a:	bf58      	it	pl
 800ad1c:	2301      	movpl	r3, #1
 800ad1e:	f104 0401 	add.w	r4, r4, #1
 800ad22:	bf58      	it	pl
 800ad24:	f8c9 3000 	strpl.w	r3, [r9]
 800ad28:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800ad2c:	3524      	adds	r5, #36	; 0x24
 800ad2e:	e7d3      	b.n	800acd8 <ArtNetNode::SetNetworkDataLossCondition()+0x1c>
 800ad30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ad34:	2000012c 	andcs	r0, r0, ip, lsr #2
 800ad38:	20000128 	andcs	r0, r0, r8, lsr #2

0800ad3c <ArtNetNode::GetType()>:
 800ad3c:	f8b0 3574 	ldrh.w	r3, [r0, #1396]	; 0x574
 800ad40:	b530      	push	{r4, r5, lr}
 800ad42:	2b0b      	cmp	r3, #11
 800ad44:	d803      	bhi.n	800ad4e <ArtNetNode::GetType()+0x12>
 800ad46:	2300      	movs	r3, #0
 800ad48:	f8a0 3576 	strh.w	r3, [r0, #1398]	; 0x576
 800ad4c:	bd30      	pop	{r4, r5, pc}
 800ad4e:	f890 30ae 	ldrb.w	r3, [r0, #174]	; 0xae
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	d1f7      	bne.n	800ad46 <ArtNetNode::GetType()+0xa>
 800ad56:	f890 30af 	ldrb.w	r3, [r0, #175]	; 0xaf
 800ad5a:	2b0e      	cmp	r3, #14
 800ad5c:	d1f3      	bne.n	800ad46 <ArtNetNode::GetType()+0xa>
 800ad5e:	4a0a      	ldr	r2, [pc, #40]	; (800ad88 <ArtNetNode::GetType()+0x4c>)
 800ad60:	f100 03a4 	add.w	r3, r0, #164	; 0xa4
 800ad64:	f100 05ac 	add.w	r5, r0, #172	; 0xac
 800ad68:	42ab      	cmp	r3, r5
 800ad6a:	d006      	beq.n	800ad7a <ArtNetNode::GetType()+0x3e>
 800ad6c:	f813 4b01 	ldrb.w	r4, [r3], #1
 800ad70:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ad74:	428c      	cmp	r4, r1
 800ad76:	d0f7      	beq.n	800ad68 <ArtNetNode::GetType()+0x2c>
 800ad78:	e7e5      	b.n	800ad46 <ArtNetNode::GetType()+0xa>
 800ad7a:	f890 20ad 	ldrb.w	r2, [r0, #173]	; 0xad
 800ad7e:	f890 30ac 	ldrb.w	r3, [r0, #172]	; 0xac
 800ad82:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ad86:	e7df      	b.n	800ad48 <ArtNetNode::GetType()+0xc>
 800ad88:	08016484 	stmdaeq	r1, {r2, r7, sl, sp, lr}

0800ad8c <ArtNetNode::Run()>:
 800ad8c:	b530      	push	{r4, r5, lr}
 800ad8e:	b085      	sub	sp, #20
 800ad90:	f10d 030e 	add.w	r3, sp, #14
 800ad94:	9300      	str	r3, [sp, #0]
 800ad96:	4604      	mov	r4, r0
 800ad98:	f500 63ae 	add.w	r3, r0, #1392	; 0x570
 800ad9c:	f100 01a4 	add.w	r1, r0, #164	; 0xa4
 800ada0:	f240 42cc 	movw	r2, #1228	; 0x4cc
 800ada4:	7900      	ldrb	r0, [r0, #4]
 800ada6:	f005 fcab 	bl	8010700 <udp_recv>
 800adaa:	4b65      	ldr	r3, [pc, #404]	; (800af40 <ArtNetNode::Run()+0x1b4>)
 800adac:	681b      	ldr	r3, [r3, #0]
 800adae:	f8c4 3668 	str.w	r3, [r4, #1640]	; 0x668
 800adb2:	2800      	cmp	r0, #0
 800adb4:	d143      	bne.n	800ae3e <ArtNetNode::Run()+0xb2>
 800adb6:	f8d4 26d0 	ldr.w	r2, [r4, #1744]	; 0x6d0
 800adba:	b13a      	cbz	r2, 800adcc <ArtNetNode::Run()+0x40>
 800adbc:	f8d4 166c 	ldr.w	r1, [r4, #1644]	; 0x66c
 800adc0:	1a5b      	subs	r3, r3, r1
 800adc2:	429a      	cmp	r2, r3
 800adc4:	d802      	bhi.n	800adcc <ArtNetNode::Run()+0x40>
 800adc6:	4620      	mov	r0, r4
 800adc8:	f7ff ff78 	bl	800acbc <ArtNetNode::SetNetworkDataLossCondition()>
 800adcc:	f894 36da 	ldrb.w	r3, [r4, #1754]	; 0x6da
 800add0:	b16b      	cbz	r3, 800adee <ArtNetNode::Run()+0x62>
 800add2:	69e0      	ldr	r0, [r4, #28]
 800add4:	f894 56df 	ldrb.w	r5, [r4, #1759]	; 0x6df
 800add8:	b120      	cbz	r0, 800ade4 <ArtNetNode::Run()+0x58>
 800adda:	6803      	ldr	r3, [r0, #0]
 800addc:	695b      	ldr	r3, [r3, #20]
 800adde:	4798      	blx	r3
 800ade0:	4305      	orrs	r5, r0
 800ade2:	b2ed      	uxtb	r5, r5
 800ade4:	b11d      	cbz	r5, 800adee <ArtNetNode::Run()+0x62>
 800ade6:	2100      	movs	r1, #0
 800ade8:	4620      	mov	r0, r4
 800adea:	f000 ff6d 	bl	800bcc8 <ArtNetNode::SendPollRelply(bool)>
 800adee:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800adf2:	f8d4 266c 	ldr.w	r2, [r4, #1644]	; 0x66c
 800adf6:	1a9b      	subs	r3, r3, r2
 800adf8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800adfc:	d305      	bcc.n	800ae0a <ArtNetNode::Run()+0x7e>
 800adfe:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800ae02:	f023 0302 	bic.w	r3, r3, #2
 800ae06:	f884 36e1 	strb.w	r3, [r4, #1761]	; 0x6e1
 800ae0a:	6963      	ldr	r3, [r4, #20]
 800ae0c:	b113      	cbz	r3, 800ae14 <ArtNetNode::Run()+0x88>
 800ae0e:	4620      	mov	r0, r4
 800ae10:	f000 fd4a 	bl	800b8a8 <ArtNetNode::HandleDmxIn()>
 800ae14:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800ae18:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ae1c:	2bc0      	cmp	r3, #192	; 0xc0
 800ae1e:	d10c      	bne.n	800ae3a <ArtNetNode::Run()+0xae>
 800ae20:	4b48      	ldr	r3, [pc, #288]	; (800af44 <ArtNetNode::Run()+0x1b8>)
 800ae22:	6818      	ldr	r0, [r3, #0]
 800ae24:	6883      	ldr	r3, [r0, #8]
 800ae26:	2b04      	cmp	r3, #4
 800ae28:	d007      	beq.n	800ae3a <ArtNetNode::Run()+0xae>
 800ae2a:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800ae2e:	2b00      	cmp	r3, #0
 800ae30:	f000 8084 	beq.w	800af3c <ArtNetNode::Run()+0x1b0>
 800ae34:	2103      	movs	r1, #3
 800ae36:	f008 fd15 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800ae3a:	b005      	add	sp, #20
 800ae3c:	bd30      	pop	{r4, r5, pc}
 800ae3e:	f8a4 0574 	strh.w	r0, [r4, #1396]	; 0x574
 800ae42:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
 800ae46:	4620      	mov	r0, r4
 800ae48:	f7ff ff78 	bl	800ad3c <ArtNetNode::GetType()>
 800ae4c:	f894 36dd 	ldrb.w	r3, [r4, #1757]	; 0x6dd
 800ae50:	b153      	cbz	r3, 800ae68 <ArtNetNode::Run()+0xdc>
 800ae52:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800ae56:	f8d4 26d4 	ldr.w	r2, [r4, #1748]	; 0x6d4
 800ae5a:	1a9b      	subs	r3, r3, r2
 800ae5c:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 800ae60:	bf24      	itt	cs
 800ae62:	2300      	movcs	r3, #0
 800ae64:	f884 36dd 	strbcs.w	r3, [r4, #1757]	; 0x6dd
 800ae68:	f8b4 3576 	ldrh.w	r3, [r4, #1398]	; 0x576
 800ae6c:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
 800ae70:	d04c      	beq.n	800af0c <ArtNetNode::Run()+0x180>
 800ae72:	d81d      	bhi.n	800aeb0 <ArtNetNode::Run()+0x124>
 800ae74:	f5b3 4fa4 	cmp.w	r3, #20992	; 0x5200
 800ae78:	d039      	beq.n	800aeee <ArtNetNode::Run()+0x162>
 800ae7a:	d80c      	bhi.n	800ae96 <ArtNetNode::Run()+0x10a>
 800ae7c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800ae80:	d031      	beq.n	800aee6 <ArtNetNode::Run()+0x15a>
 800ae82:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800ae86:	d1c0      	bne.n	800ae0a <ArtNetNode::Run()+0x7e>
 800ae88:	68a3      	ldr	r3, [r4, #8]
 800ae8a:	2b00      	cmp	r3, #0
 800ae8c:	d0bd      	beq.n	800ae0a <ArtNetNode::Run()+0x7e>
 800ae8e:	4620      	mov	r0, r4
 800ae90:	f000 fc24 	bl	800b6dc <ArtNetNode::HandleDmx()>
 800ae94:	e7b9      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800ae96:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800ae9a:	d02f      	beq.n	800aefc <ArtNetNode::Run()+0x170>
 800ae9c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800aea0:	d1b3      	bne.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aea2:	6923      	ldr	r3, [r4, #16]
 800aea4:	2b00      	cmp	r3, #0
 800aea6:	d0b0      	beq.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aea8:	4620      	mov	r0, r4
 800aeaa:	f001 f89f 	bl	800bfec <ArtNetNode::HandleTodRequest()>
 800aeae:	e7ac      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aeb0:	f5b3 4f18 	cmp.w	r3, #38912	; 0x9800
 800aeb4:	d026      	beq.n	800af04 <ArtNetNode::Run()+0x178>
 800aeb6:	d80c      	bhi.n	800aed2 <ArtNetNode::Run()+0x146>
 800aeb8:	f5b3 4f03 	cmp.w	r3, #33536	; 0x8300
 800aebc:	d02e      	beq.n	800af1c <ArtNetNode::Run()+0x190>
 800aebe:	f5b3 4f17 	cmp.w	r3, #38656	; 0x9700
 800aec2:	d1a2      	bne.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aec4:	68e3      	ldr	r3, [r4, #12]
 800aec6:	2b00      	cmp	r3, #0
 800aec8:	d09f      	beq.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aeca:	4620      	mov	r0, r4
 800aecc:	f001 f96e 	bl	800c1ac <ArtNetNode::HandleTimeCode()>
 800aed0:	e79b      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aed2:	f5b3 4f19 	cmp.w	r3, #39168	; 0x9900
 800aed6:	d029      	beq.n	800af2c <ArtNetNode::Run()+0x1a0>
 800aed8:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 800aedc:	d195      	bne.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aede:	4620      	mov	r0, r4
 800aee0:	f000 fdb4 	bl	800ba4c <ArtNetNode::HandleIpProg()>
 800aee4:	e791      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aee6:	4620      	mov	r0, r4
 800aee8:	f000 ffb2 	bl	800be50 <ArtNetNode::HandlePoll()>
 800aeec:	e78d      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aeee:	68a3      	ldr	r3, [r4, #8]
 800aef0:	2b00      	cmp	r3, #0
 800aef2:	d08a      	beq.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aef4:	4620      	mov	r0, r4
 800aef6:	f001 f90d 	bl	800c114 <ArtNetNode::HandleSync()>
 800aefa:	e786      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800aefc:	4620      	mov	r0, r4
 800aefe:	f000 f9d9 	bl	800b2b4 <ArtNetNode::HandleAddress()>
 800af02:	e782      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800af04:	4620      	mov	r0, r4
 800af06:	f001 f957 	bl	800c1b8 <ArtNetNode::HandleTimeSync()>
 800af0a:	e77e      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800af0c:	6923      	ldr	r3, [r4, #16]
 800af0e:	2b00      	cmp	r3, #0
 800af10:	f43f af7b 	beq.w	800ae0a <ArtNetNode::Run()+0x7e>
 800af14:	4620      	mov	r0, r4
 800af16:	f001 f82f 	bl	800bf78 <ArtNetNode::HandleTodControl()>
 800af1a:	e776      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800af1c:	6923      	ldr	r3, [r4, #16]
 800af1e:	2b00      	cmp	r3, #0
 800af20:	f43f af73 	beq.w	800ae0a <ArtNetNode::Run()+0x7e>
 800af24:	4620      	mov	r0, r4
 800af26:	f001 f887 	bl	800c038 <ArtNetNode::HandleRdm()>
 800af2a:	e76e      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800af2c:	69a3      	ldr	r3, [r4, #24]
 800af2e:	2b00      	cmp	r3, #0
 800af30:	f43f af6b 	beq.w	800ae0a <ArtNetNode::Run()+0x7e>
 800af34:	4620      	mov	r0, r4
 800af36:	f001 faf4 	bl	800c522 <ArtNetNode::HandleTrigger()>
 800af3a:	e766      	b.n	800ae0a <ArtNetNode::Run()+0x7e>
 800af3c:	2102      	movs	r1, #2
 800af3e:	e77a      	b.n	800ae36 <ArtNetNode::Run()+0xaa>
 800af40:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800af44:	2000d384 	andcs	sp, r0, r4, lsl #7

0800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>:
 800af48:	b93b      	cbnz	r3, 800af5a <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x12>
 800af4a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800af4e:	f8b0 3808 	ldrh.w	r3, [r0, #2056]	; 0x808
 800af52:	f890 080c 	ldrb.w	r0, [r0, #2060]	; 0x80c
 800af56:	8013      	strh	r3, [r2, #0]
 800af58:	4770      	bx	lr
 800af5a:	2b01      	cmp	r3, #1
 800af5c:	bf01      	itttt	eq
 800af5e:	2324      	moveq	r3, #36	; 0x24
 800af60:	fb03 0001 	mlaeq	r0, r3, r1, r0
 800af64:	f8b0 36e8 	ldrheq.w	r3, [r0, #1768]	; 0x6e8
 800af68:	f890 06ec 	ldrbeq.w	r0, [r0, #1772]	; 0x6ec
 800af6c:	bf0c      	ite	eq
 800af6e:	8013      	strheq	r3, [r2, #0]
 800af70:	2000      	movne	r0, #0
 800af72:	4770      	bx	lr

0800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>:
 800af74:	b94b      	cbnz	r3, 800af8a <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const+0x16>
 800af76:	2907      	cmp	r1, #7
 800af78:	d810      	bhi.n	800af9c <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const+0x28>
 800af7a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800af7e:	f890 380a 	ldrb.w	r3, [r0, #2058]	; 0x80a
 800af82:	7013      	strb	r3, [r2, #0]
 800af84:	f890 080c 	ldrb.w	r0, [r0, #2060]	; 0x80c
 800af88:	4770      	bx	lr
 800af8a:	2324      	movs	r3, #36	; 0x24
 800af8c:	fb03 0001 	mla	r0, r3, r1, r0
 800af90:	f890 36ea 	ldrb.w	r3, [r0, #1770]	; 0x6ea
 800af94:	7013      	strb	r3, [r2, #0]
 800af96:	f890 06ec 	ldrb.w	r0, [r0, #1772]	; 0x6ec
 800af9a:	4770      	bx	lr
 800af9c:	4618      	mov	r0, r3
 800af9e:	4770      	bx	lr

0800afa0 <ArtNetNode::GetSubnetSwitch(unsigned int) const>:
 800afa0:	4408      	add	r0, r1
 800afa2:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
 800afa6:	4770      	bx	lr

0800afa8 <ArtNetNode::GetNetSwitch(unsigned int) const>:
 800afa8:	4408      	add	r0, r1
 800afaa:	f890 003e 	ldrb.w	r0, [r0, #62]	; 0x3e
 800afae:	4770      	bx	lr

0800afb0 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>:
 800afb0:	4402      	add	r2, r0
 800afb2:	f892 303e 	ldrb.w	r3, [r2, #62]	; 0x3e
 800afb6:	f892 0040 	ldrb.w	r0, [r2, #64]	; 0x40
 800afba:	021b      	lsls	r3, r3, #8
 800afbc:	0100      	lsls	r0, r0, #4
 800afbe:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
 800afc2:	b2c0      	uxtb	r0, r0
 800afc4:	4318      	orrs	r0, r3
 800afc6:	f001 010f 	and.w	r1, r1, #15
 800afca:	4308      	orrs	r0, r1
 800afcc:	4770      	bx	lr

0800afce <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>:
 800afce:	2907      	cmp	r1, #7
 800afd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800afd4:	4604      	mov	r4, r0
 800afd6:	460d      	mov	r5, r1
 800afd8:	4617      	mov	r7, r2
 800afda:	461e      	mov	r6, r3
 800afdc:	f200 80a8 	bhi.w	800b130 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x162>
 800afe0:	2a02      	cmp	r2, #2
 800afe2:	d121      	bne.n	800b028 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x5a>
 800afe4:	2324      	movs	r3, #36	; 0x24
 800afe6:	fb03 0301 	mla	r3, r3, r1, r0
 800afea:	f893 26ec 	ldrb.w	r2, [r3, #1772]	; 0x6ec
 800afee:	b13a      	cbz	r2, 800b000 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x32>
 800aff0:	2200      	movs	r2, #0
 800aff2:	f883 26ec 	strb.w	r2, [r3, #1772]	; 0x6ec
 800aff6:	f890 36e2 	ldrb.w	r3, [r0, #1762]	; 0x6e2
 800affa:	3b01      	subs	r3, #1
 800affc:	f880 36e2 	strb.w	r3, [r0, #1762]	; 0x6e2
 800b000:	eb04 1505 	add.w	r5, r4, r5, lsl #4
 800b004:	f895 380c 	ldrb.w	r3, [r5, #2060]	; 0x80c
 800b008:	b90b      	cbnz	r3, 800b00e <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x40>
 800b00a:	2000      	movs	r0, #0
 800b00c:	e00a      	b.n	800b024 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x56>
 800b00e:	2308      	movs	r3, #8
 800b010:	2000      	movs	r0, #0
 800b012:	f885 380b 	strb.w	r3, [r5, #2059]	; 0x80b
 800b016:	f885 080c 	strb.w	r0, [r5, #2060]	; 0x80c
 800b01a:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800b01e:	3b01      	subs	r3, #1
 800b020:	f884 36e3 	strb.w	r3, [r4, #1763]	; 0x6e3
 800b024:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b028:	2a00      	cmp	r2, #0
 800b02a:	d13e      	bne.n	800b0aa <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xdc>
 800b02c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800b030:	f893 380c 	ldrb.w	r3, [r3, #2060]	; 0x80c
 800b034:	ea4f 1801 	mov.w	r8, r1, lsl #4
 800b038:	b923      	cbnz	r3, 800b044 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x76>
 800b03a:	f890 36e3 	ldrb.w	r3, [r0, #1763]	; 0x6e3
 800b03e:	3301      	adds	r3, #1
 800b040:	f880 36e3 	strb.w	r3, [r0, #1763]	; 0x6e3
 800b044:	2301      	movs	r3, #1
 800b046:	f04f 0900 	mov.w	r9, #0
 800b04a:	44a0      	add	r8, r4
 800b04c:	f888 380c 	strb.w	r3, [r8, #2060]	; 0x80c
 800b050:	f006 030f 	and.w	r3, r6, #15
 800b054:	f888 380a 	strb.w	r3, [r8, #2058]	; 0x80a
 800b058:	08aa      	lsrs	r2, r5, #2
 800b05a:	4631      	mov	r1, r6
 800b05c:	4620      	mov	r0, r4
 800b05e:	f888 980b 	strb.w	r9, [r8, #2059]	; 0x80b
 800b062:	f7ff ffa5 	bl	800afb0 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800b066:	2324      	movs	r3, #36	; 0x24
 800b068:	fb03 4305 	mla	r3, r3, r5, r4
 800b06c:	f893 26ec 	ldrb.w	r2, [r3, #1772]	; 0x6ec
 800b070:	f8a8 0808 	strh.w	r0, [r8, #2056]	; 0x808
 800b074:	b132      	cbz	r2, 800b084 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800b076:	f883 96ec 	strb.w	r9, [r3, #1772]	; 0x6ec
 800b07a:	f894 36e2 	ldrb.w	r3, [r4, #1762]	; 0x6e2
 800b07e:	3b01      	subs	r3, #1
 800b080:	f884 36e2 	strb.w	r3, [r4, #1762]	; 0x6e2
 800b084:	69e0      	ldr	r0, [r4, #28]
 800b086:	2800      	cmp	r0, #0
 800b088:	d044      	beq.n	800b114 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x146>
 800b08a:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800b08e:	2b02      	cmp	r3, #2
 800b090:	d13b      	bne.n	800b10a <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x13c>
 800b092:	6a20      	ldr	r0, [r4, #32]
 800b094:	2800      	cmp	r0, #0
 800b096:	d143      	bne.n	800b120 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x152>
 800b098:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800b09a:	2800      	cmp	r0, #0
 800b09c:	d0b5      	beq.n	800b00a <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800b09e:	6803      	ldr	r3, [r0, #0]
 800b0a0:	4632      	mov	r2, r6
 800b0a2:	4629      	mov	r1, r5
 800b0a4:	691b      	ldr	r3, [r3, #16]
 800b0a6:	4798      	blx	r3
 800b0a8:	e7af      	b.n	800b00a <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800b0aa:	2a01      	cmp	r2, #1
 800b0ac:	d1ea      	bne.n	800b084 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800b0ae:	f04f 0824 	mov.w	r8, #36	; 0x24
 800b0b2:	fb08 0301 	mla	r3, r8, r1, r0
 800b0b6:	f893 36ec 	ldrb.w	r3, [r3, #1772]	; 0x6ec
 800b0ba:	b923      	cbnz	r3, 800b0c6 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xf8>
 800b0bc:	f890 36e2 	ldrb.w	r3, [r0, #1762]	; 0x6e2
 800b0c0:	3301      	adds	r3, #1
 800b0c2:	f880 36e2 	strb.w	r3, [r0, #1762]	; 0x6e2
 800b0c6:	2301      	movs	r3, #1
 800b0c8:	fb08 4805 	mla	r8, r8, r5, r4
 800b0cc:	f888 36ec 	strb.w	r3, [r8, #1772]	; 0x6ec
 800b0d0:	f006 030f 	and.w	r3, r6, #15
 800b0d4:	f888 36ea 	strb.w	r3, [r8, #1770]	; 0x6ea
 800b0d8:	08aa      	lsrs	r2, r5, #2
 800b0da:	4631      	mov	r1, r6
 800b0dc:	4620      	mov	r0, r4
 800b0de:	f7ff ff67 	bl	800afb0 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800b0e2:	eb04 1305 	add.w	r3, r4, r5, lsl #4
 800b0e6:	f893 280c 	ldrb.w	r2, [r3, #2060]	; 0x80c
 800b0ea:	f8a8 06e8 	strh.w	r0, [r8, #1768]	; 0x6e8
 800b0ee:	2a00      	cmp	r2, #0
 800b0f0:	d0c8      	beq.n	800b084 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800b0f2:	2200      	movs	r2, #0
 800b0f4:	f883 280c 	strb.w	r2, [r3, #2060]	; 0x80c
 800b0f8:	2208      	movs	r2, #8
 800b0fa:	f883 280b 	strb.w	r2, [r3, #2059]	; 0x80b
 800b0fe:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800b102:	3b01      	subs	r3, #1
 800b104:	f884 36e3 	strb.w	r3, [r4, #1763]	; 0x6e3
 800b108:	e7bc      	b.n	800b084 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800b10a:	6803      	ldr	r3, [r0, #0]
 800b10c:	463a      	mov	r2, r7
 800b10e:	4629      	mov	r1, r5
 800b110:	689b      	ldr	r3, [r3, #8]
 800b112:	4798      	blx	r3
 800b114:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800b118:	2b02      	cmp	r3, #2
 800b11a:	f47f af76 	bne.w	800b00a <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800b11e:	e7b8      	b.n	800b092 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xc4>
 800b120:	2d03      	cmp	r5, #3
 800b122:	d8b9      	bhi.n	800b098 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xca>
 800b124:	6803      	ldr	r3, [r0, #0]
 800b126:	4632      	mov	r2, r6
 800b128:	4629      	mov	r1, r5
 800b12a:	691b      	ldr	r3, [r3, #16]
 800b12c:	4798      	blx	r3
 800b12e:	e7b3      	b.n	800b098 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xca>
 800b130:	f06f 0004 	mvn.w	r0, #4
 800b134:	e776      	b.n	800b024 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x56>

0800b136 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>:
 800b136:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b13a:	2524      	movs	r5, #36	; 0x24
 800b13c:	4604      	mov	r4, r0
 800b13e:	460f      	mov	r7, r1
 800b140:	4616      	mov	r6, r2
 800b142:	1883      	adds	r3, r0, r2
 800b144:	f883 1040 	strb.w	r1, [r3, #64]	; 0x40
 800b148:	0093      	lsls	r3, r2, #2
 800b14a:	b2db      	uxtb	r3, r3
 800b14c:	fb05 0503 	mla	r5, r5, r3, r0
 800b150:	f103 0905 	add.w	r9, r3, #5
 800b154:	f103 0801 	add.w	r8, r3, #1
 800b158:	45c8      	cmp	r8, r9
 800b15a:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800b15e:	d009      	beq.n	800b174 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x3e>
 800b160:	f8b5 16c4 	ldrh.w	r1, [r5, #1732]	; 0x6c4
 800b164:	089a      	lsrs	r2, r3, #2
 800b166:	4620      	mov	r0, r4
 800b168:	f7ff ff22 	bl	800afb0 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800b16c:	4643      	mov	r3, r8
 800b16e:	f8a5 06c4 	strh.w	r0, [r5, #1732]	; 0x6c4
 800b172:	e7ef      	b.n	800b154 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x1e>
 800b174:	6a20      	ldr	r0, [r4, #32]
 800b176:	b150      	cbz	r0, 800b18e <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800b178:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800b17c:	2b02      	cmp	r3, #2
 800b17e:	d106      	bne.n	800b18e <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800b180:	b92e      	cbnz	r6, 800b18e <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800b182:	6803      	ldr	r3, [r0, #0]
 800b184:	4639      	mov	r1, r7
 800b186:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b18a:	699b      	ldr	r3, [r3, #24]
 800b18c:	4718      	bx	r3
 800b18e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800b192 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>:
 800b192:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b196:	2524      	movs	r5, #36	; 0x24
 800b198:	4604      	mov	r4, r0
 800b19a:	460f      	mov	r7, r1
 800b19c:	4616      	mov	r6, r2
 800b19e:	1883      	adds	r3, r0, r2
 800b1a0:	f883 103e 	strb.w	r1, [r3, #62]	; 0x3e
 800b1a4:	0093      	lsls	r3, r2, #2
 800b1a6:	b2db      	uxtb	r3, r3
 800b1a8:	fb05 0503 	mla	r5, r5, r3, r0
 800b1ac:	f103 0905 	add.w	r9, r3, #5
 800b1b0:	f103 0801 	add.w	r8, r3, #1
 800b1b4:	45c8      	cmp	r8, r9
 800b1b6:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800b1ba:	d009      	beq.n	800b1d0 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x3e>
 800b1bc:	f8b5 16c4 	ldrh.w	r1, [r5, #1732]	; 0x6c4
 800b1c0:	089a      	lsrs	r2, r3, #2
 800b1c2:	4620      	mov	r0, r4
 800b1c4:	f7ff fef4 	bl	800afb0 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800b1c8:	4643      	mov	r3, r8
 800b1ca:	f8a5 06c4 	strh.w	r0, [r5, #1732]	; 0x6c4
 800b1ce:	e7ef      	b.n	800b1b0 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x1e>
 800b1d0:	6a20      	ldr	r0, [r4, #32]
 800b1d2:	b150      	cbz	r0, 800b1ea <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800b1d4:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800b1d8:	2b02      	cmp	r3, #2
 800b1da:	d106      	bne.n	800b1ea <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800b1dc:	b92e      	cbnz	r6, 800b1ea <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800b1de:	6803      	ldr	r3, [r0, #0]
 800b1e0:	4639      	mov	r1, r7
 800b1e2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b1e6:	695b      	ldr	r3, [r3, #20]
 800b1e8:	4718      	bx	r3
 800b1ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800b1ee <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>:
 800b1ee:	b570      	push	{r4, r5, r6, lr}
 800b1f0:	4616      	mov	r6, r2
 800b1f2:	2224      	movs	r2, #36	; 0x24
 800b1f4:	fb02 0301 	mla	r3, r2, r1, r0
 800b1f8:	fb02 0201 	mla	r2, r2, r1, r0
 800b1fc:	f8c3 6704 	str.w	r6, [r3, #1796]	; 0x704
 800b200:	f893 36eb 	ldrb.w	r3, [r3, #1771]	; 0x6eb
 800b204:	2e01      	cmp	r6, #1
 800b206:	bf0c      	ite	eq
 800b208:	f043 0301 	orreq.w	r3, r3, #1
 800b20c:	f003 03fe 	andne.w	r3, r3, #254	; 0xfe
 800b210:	f882 36eb 	strb.w	r3, [r2, #1771]	; 0x6eb
 800b214:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800b218:	4605      	mov	r5, r0
 800b21a:	2b02      	cmp	r3, #2
 800b21c:	460c      	mov	r4, r1
 800b21e:	d110      	bne.n	800b242 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800b220:	2903      	cmp	r1, #3
 800b222:	d80e      	bhi.n	800b242 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800b224:	6a00      	ldr	r0, [r0, #32]
 800b226:	b118      	cbz	r0, 800b230 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x42>
 800b228:	6803      	ldr	r3, [r0, #0]
 800b22a:	4632      	mov	r2, r6
 800b22c:	6a1b      	ldr	r3, [r3, #32]
 800b22e:	4798      	blx	r3
 800b230:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800b232:	b130      	cbz	r0, 800b242 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800b234:	6803      	ldr	r3, [r0, #0]
 800b236:	4632      	mov	r2, r6
 800b238:	4621      	mov	r1, r4
 800b23a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b23e:	6a1b      	ldr	r3, [r3, #32]
 800b240:	4718      	bx	r3
 800b242:	bd70      	pop	{r4, r5, r6, pc}

0800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>:
 800b244:	2324      	movs	r3, #36	; 0x24
 800b246:	fb03 0001 	mla	r0, r3, r1, r0
 800b24a:	f8d0 0704 	ldr.w	r0, [r0, #1796]	; 0x704
 800b24e:	4770      	bx	lr

0800b250 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>:
 800b250:	b570      	push	{r4, r5, r6, lr}
 800b252:	4616      	mov	r6, r2
 800b254:	2224      	movs	r2, #36	; 0x24
 800b256:	fb02 0301 	mla	r3, r2, r1, r0
 800b25a:	fb02 0201 	mla	r2, r2, r1, r0
 800b25e:	f8c3 6700 	str.w	r6, [r3, #1792]	; 0x700
 800b262:	f893 36eb 	ldrb.w	r3, [r3, #1771]	; 0x6eb
 800b266:	2e01      	cmp	r6, #1
 800b268:	bf0c      	ite	eq
 800b26a:	f043 0302 	orreq.w	r3, r3, #2
 800b26e:	f003 03fd 	andne.w	r3, r3, #253	; 0xfd
 800b272:	f882 36eb 	strb.w	r3, [r2, #1771]	; 0x6eb
 800b276:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800b27a:	4605      	mov	r5, r0
 800b27c:	2b02      	cmp	r3, #2
 800b27e:	460c      	mov	r4, r1
 800b280:	d110      	bne.n	800b2a4 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b282:	2903      	cmp	r1, #3
 800b284:	d80e      	bhi.n	800b2a4 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b286:	6a00      	ldr	r0, [r0, #32]
 800b288:	b118      	cbz	r0, 800b292 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x42>
 800b28a:	6803      	ldr	r3, [r0, #0]
 800b28c:	4632      	mov	r2, r6
 800b28e:	69db      	ldr	r3, [r3, #28]
 800b290:	4798      	blx	r3
 800b292:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800b294:	b130      	cbz	r0, 800b2a4 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b296:	6803      	ldr	r3, [r0, #0]
 800b298:	4632      	mov	r2, r6
 800b29a:	4621      	mov	r1, r4
 800b29c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b2a0:	69db      	ldr	r3, [r3, #28]
 800b2a2:	4718      	bx	r3
 800b2a4:	bd70      	pop	{r4, r5, r6, pc}

0800b2a6 <ArtNetNode::GetMergeMode(unsigned int) const>:
 800b2a6:	2324      	movs	r3, #36	; 0x24
 800b2a8:	fb03 0001 	mla	r0, r3, r1, r0
 800b2ac:	f8d0 0700 	ldr.w	r0, [r0, #1792]	; 0x700
 800b2b0:	4770      	bx	lr
	...

0800b2b4 <ArtNetNode::HandleAddress()>:
 800b2b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b2b8:	2301      	movs	r3, #1
 800b2ba:	f880 36d8 	strb.w	r3, [r0, #1752]	; 0x6d8
 800b2be:	f890 30b2 	ldrb.w	r3, [r0, #178]	; 0xb2
 800b2c2:	4604      	mov	r4, r0
 800b2c4:	b133      	cbz	r3, 800b2d4 <ArtNetNode::HandleAddress()+0x20>
 800b2c6:	f100 01b2 	add.w	r1, r0, #178	; 0xb2
 800b2ca:	f7ff fbfd 	bl	800aac8 <ArtNetNode::SetShortName(char const*)>
 800b2ce:	2306      	movs	r3, #6
 800b2d0:	f884 36d8 	strb.w	r3, [r4, #1752]	; 0x6d8
 800b2d4:	f894 30c4 	ldrb.w	r3, [r4, #196]	; 0xc4
 800b2d8:	b13b      	cbz	r3, 800b2ea <ArtNetNode::HandleAddress()+0x36>
 800b2da:	4620      	mov	r0, r4
 800b2dc:	f104 01c4 	add.w	r1, r4, #196	; 0xc4
 800b2e0:	f7ff fc1a 	bl	800ab18 <ArtNetNode::SetLongName(char const*)>
 800b2e4:	2307      	movs	r3, #7
 800b2e6:	f884 36d8 	strb.w	r3, [r4, #1752]	; 0x6d8
 800b2ea:	f894 50b1 	ldrb.w	r5, [r4, #177]	; 0xb1
 800b2ee:	b105      	cbz	r5, 800b2f2 <ArtNetNode::HandleAddress()+0x3e>
 800b2f0:	3d01      	subs	r5, #1
 800b2f2:	f894 110c 	ldrb.w	r1, [r4, #268]	; 0x10c
 800b2f6:	2900      	cmp	r1, #0
 800b2f8:	d13d      	bne.n	800b376 <ArtNetNode::HandleAddress()+0xc2>
 800b2fa:	462a      	mov	r2, r5
 800b2fc:	4620      	mov	r0, r4
 800b2fe:	f7ff ff1a 	bl	800b136 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>
 800b302:	f894 10b0 	ldrb.w	r1, [r4, #176]	; 0xb0
 800b306:	2900      	cmp	r1, #0
 800b308:	d13b      	bne.n	800b382 <ArtNetNode::HandleAddress()+0xce>
 800b30a:	462a      	mov	r2, r5
 800b30c:	4620      	mov	r0, r4
 800b30e:	f7ff ff40 	bl	800b192 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>
 800b312:	00ad      	lsls	r5, r5, #2
 800b314:	b2ed      	uxtb	r5, r5
 800b316:	4627      	mov	r7, r4
 800b318:	462e      	mov	r6, r5
 800b31a:	f504 7884 	add.w	r8, r4, #264	; 0x108
 800b31e:	f504 7986 	add.w	r9, r4, #268	; 0x10c
 800b322:	f818 3b01 	ldrb.w	r3, [r8], #1
 800b326:	2b7f      	cmp	r3, #127	; 0x7f
 800b328:	d006      	beq.n	800b338 <ArtNetNode::HandleAddress()+0x84>
 800b32a:	bb83      	cbnz	r3, 800b38e <ArtNetNode::HandleAddress()+0xda>
 800b32c:	2301      	movs	r3, #1
 800b32e:	2201      	movs	r2, #1
 800b330:	4631      	mov	r1, r6
 800b332:	4620      	mov	r0, r4
 800b334:	f7ff fe4b 	bl	800afce <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800b338:	f818 2c05 	ldrb.w	r2, [r8, #-5]
 800b33c:	2a7f      	cmp	r2, #127	; 0x7f
 800b33e:	d005      	beq.n	800b34c <ArtNetNode::HandleAddress()+0x98>
 800b340:	bb52      	cbnz	r2, 800b398 <ArtNetNode::HandleAddress()+0xe4>
 800b342:	2301      	movs	r3, #1
 800b344:	4631      	mov	r1, r6
 800b346:	4620      	mov	r0, r4
 800b348:	f7ff fe41 	bl	800afce <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800b34c:	3601      	adds	r6, #1
 800b34e:	45c1      	cmp	r9, r8
 800b350:	b2f6      	uxtb	r6, r6
 800b352:	d1e6      	bne.n	800b322 <ArtNetNode::HandleAddress()+0x6e>
 800b354:	f894 110e 	ldrb.w	r1, [r4, #270]	; 0x10e
 800b358:	2913      	cmp	r1, #19
 800b35a:	d823      	bhi.n	800b3a4 <ArtNetNode::HandleAddress()+0xf0>
 800b35c:	290f      	cmp	r1, #15
 800b35e:	f200 8092 	bhi.w	800b486 <ArtNetNode::HandleAddress()+0x1d2>
 800b362:	3901      	subs	r1, #1
 800b364:	b2cb      	uxtb	r3, r1
 800b366:	2b03      	cmp	r3, #3
 800b368:	d82a      	bhi.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b36a:	2903      	cmp	r1, #3
 800b36c:	d828      	bhi.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b36e:	e8df f001 	tbb	[pc, r1]
 800b372:	7e726654 	mrcvc	6, 3, r6, cr2, cr4, {2}
 800b376:	060f      	lsls	r7, r1, #24
 800b378:	d5c3      	bpl.n	800b302 <ArtNetNode::HandleAddress()+0x4e>
 800b37a:	462a      	mov	r2, r5
 800b37c:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800b380:	e7bc      	b.n	800b2fc <ArtNetNode::HandleAddress()+0x48>
 800b382:	060e      	lsls	r6, r1, #24
 800b384:	d5c5      	bpl.n	800b312 <ArtNetNode::HandleAddress()+0x5e>
 800b386:	462a      	mov	r2, r5
 800b388:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800b38c:	e7be      	b.n	800b30c <ArtNetNode::HandleAddress()+0x58>
 800b38e:	0618      	lsls	r0, r3, #24
 800b390:	d5d2      	bpl.n	800b338 <ArtNetNode::HandleAddress()+0x84>
 800b392:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b396:	e7ca      	b.n	800b32e <ArtNetNode::HandleAddress()+0x7a>
 800b398:	0611      	lsls	r1, r2, #24
 800b39a:	d5d7      	bpl.n	800b34c <ArtNetNode::HandleAddress()+0x98>
 800b39c:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 800b3a0:	2200      	movs	r2, #0
 800b3a2:	e7cf      	b.n	800b344 <ArtNetNode::HandleAddress()+0x90>
 800b3a4:	2973      	cmp	r1, #115	; 0x73
 800b3a6:	d818      	bhi.n	800b3da <ArtNetNode::HandleAddress()+0x126>
 800b3a8:	296f      	cmp	r1, #111	; 0x6f
 800b3aa:	d87a      	bhi.n	800b4a2 <ArtNetNode::HandleAddress()+0x1ee>
 800b3ac:	2953      	cmp	r1, #83	; 0x53
 800b3ae:	d803      	bhi.n	800b3b8 <ArtNetNode::HandleAddress()+0x104>
 800b3b0:	294f      	cmp	r1, #79	; 0x4f
 800b3b2:	d905      	bls.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b3b4:	2200      	movs	r2, #0
 800b3b6:	e067      	b.n	800b488 <ArtNetNode::HandleAddress()+0x1d4>
 800b3b8:	f1a1 0360 	sub.w	r3, r1, #96	; 0x60
 800b3bc:	2b03      	cmp	r3, #3
 800b3be:	d969      	bls.n	800b494 <ArtNetNode::HandleAddress()+0x1e0>
 800b3c0:	69e0      	ldr	r0, [r4, #28]
 800b3c2:	b120      	cbz	r0, 800b3ce <ArtNetNode::HandleAddress()+0x11a>
 800b3c4:	6803      	ldr	r3, [r0, #0]
 800b3c6:	f894 110e 	ldrb.w	r1, [r4, #270]	; 0x10e
 800b3ca:	68db      	ldr	r3, [r3, #12]
 800b3cc:	4798      	blx	r3
 800b3ce:	4620      	mov	r0, r4
 800b3d0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b3d4:	2101      	movs	r1, #1
 800b3d6:	f000 bc77 	b.w	800bcc8 <ArtNetNode::SendPollRelply(bool)>
 800b3da:	f101 0370 	add.w	r3, r1, #112	; 0x70
 800b3de:	b2db      	uxtb	r3, r3
 800b3e0:	2b03      	cmp	r3, #3
 800b3e2:	d8ed      	bhi.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b3e4:	4b45      	ldr	r3, [pc, #276]	; (800b4fc <ArtNetNode::HandleAddress()+0x248>)
 800b3e6:	f001 0103 	and.w	r1, r1, #3
 800b3ea:	681a      	ldr	r2, [r3, #0]
 800b3ec:	440d      	add	r5, r1
 800b3ee:	07d2      	lsls	r2, r2, #31
 800b3f0:	bf5c      	itt	pl
 800b3f2:	2201      	movpl	r2, #1
 800b3f4:	601a      	strpl	r2, [r3, #0]
 800b3f6:	f240 6204 	movw	r2, #1540	; 0x604
 800b3fa:	b2ed      	uxtb	r5, r5
 800b3fc:	436a      	muls	r2, r5
 800b3fe:	4b40      	ldr	r3, [pc, #256]	; (800b500 <ArtNetNode::HandleAddress()+0x24c>)
 800b400:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b404:	441a      	add	r2, r3
 800b406:	4611      	mov	r1, r2
 800b408:	2600      	movs	r6, #0
 800b40a:	68a0      	ldr	r0, [r4, #8]
 800b40c:	f502 7700 	add.w	r7, r2, #512	; 0x200
 800b410:	42b9      	cmp	r1, r7
 800b412:	d048      	beq.n	800b4a6 <ArtNetNode::HandleAddress()+0x1f2>
 800b414:	f801 6b01 	strb.w	r6, [r1], #1
 800b418:	e7fa      	b.n	800b410 <ArtNetNode::HandleAddress()+0x15c>
 800b41a:	2300      	movs	r3, #0
 800b41c:	2224      	movs	r2, #36	; 0x24
 800b41e:	f884 36de 	strb.w	r3, [r4, #1758]	; 0x6de
 800b422:	7823      	ldrb	r3, [r4, #0]
 800b424:	009b      	lsls	r3, r3, #2
 800b426:	fb02 4303 	mla	r3, r2, r3, r4
 800b42a:	429f      	cmp	r7, r3
 800b42c:	d0c8      	beq.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b42e:	f897 26eb 	ldrb.w	r2, [r7, #1771]	; 0x6eb
 800b432:	3724      	adds	r7, #36	; 0x24
 800b434:	f022 0208 	bic.w	r2, r2, #8
 800b438:	f887 26c7 	strb.w	r2, [r7, #1735]	; 0x6c7
 800b43c:	e7f5      	b.n	800b42a <ArtNetNode::HandleAddress()+0x176>
 800b43e:	4b31      	ldr	r3, [pc, #196]	; (800b504 <ArtNetNode::HandleAddress()+0x250>)
 800b440:	2102      	movs	r1, #2
 800b442:	6818      	ldr	r0, [r3, #0]
 800b444:	f008 fa0e 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800b448:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b44c:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800b450:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800b454:	e7b4      	b.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b456:	4b2b      	ldr	r3, [pc, #172]	; (800b504 <ArtNetNode::HandleAddress()+0x250>)
 800b458:	2100      	movs	r1, #0
 800b45a:	6818      	ldr	r0, [r3, #0]
 800b45c:	f008 fa02 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800b460:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b464:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b468:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b46c:	e7f0      	b.n	800b450 <ArtNetNode::HandleAddress()+0x19c>
 800b46e:	4b25      	ldr	r3, [pc, #148]	; (800b504 <ArtNetNode::HandleAddress()+0x250>)
 800b470:	2104      	movs	r1, #4
 800b472:	6818      	ldr	r0, [r3, #0]
 800b474:	f008 f9f6 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800b478:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b47c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b480:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b484:	e7e4      	b.n	800b450 <ArtNetNode::HandleAddress()+0x19c>
 800b486:	2201      	movs	r2, #1
 800b488:	4620      	mov	r0, r4
 800b48a:	f001 0103 	and.w	r1, r1, #3
 800b48e:	f7ff fedf 	bl	800b250 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800b492:	e795      	b.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b494:	2200      	movs	r2, #0
 800b496:	4620      	mov	r0, r4
 800b498:	f001 0103 	and.w	r1, r1, #3
 800b49c:	f7ff fea7 	bl	800b1ee <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800b4a0:	e78e      	b.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b4a2:	2201      	movs	r2, #1
 800b4a4:	e7f7      	b.n	800b496 <ArtNetNode::HandleAddress()+0x1e2>
 800b4a6:	f240 6104 	movw	r1, #1540	; 0x604
 800b4aa:	fb01 3105 	mla	r1, r1, r5, r3
 800b4ae:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b4b2:	f8c1 3600 	str.w	r3, [r1, #1536]	; 0x600
 800b4b6:	6801      	ldr	r1, [r0, #0]
 800b4b8:	690e      	ldr	r6, [r1, #16]
 800b4ba:	4629      	mov	r1, r5
 800b4bc:	47b0      	blx	r6
 800b4be:	2d07      	cmp	r5, #7
 800b4c0:	f63f af7e 	bhi.w	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b4c4:	2624      	movs	r6, #36	; 0x24
 800b4c6:	fb06 4605 	mla	r6, r6, r5, r4
 800b4ca:	f8d6 3704 	ldr.w	r3, [r6, #1796]	; 0x704
 800b4ce:	2b00      	cmp	r3, #0
 800b4d0:	f47f af76 	bne.w	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b4d4:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800b4d8:	2b00      	cmp	r3, #0
 800b4da:	f47f af71 	bne.w	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b4de:	68a0      	ldr	r0, [r4, #8]
 800b4e0:	4629      	mov	r1, r5
 800b4e2:	6803      	ldr	r3, [r0, #0]
 800b4e4:	689b      	ldr	r3, [r3, #8]
 800b4e6:	4798      	blx	r3
 800b4e8:	2301      	movs	r3, #1
 800b4ea:	f886 3709 	strb.w	r3, [r6, #1801]	; 0x709
 800b4ee:	f896 36eb 	ldrb.w	r3, [r6, #1771]	; 0x6eb
 800b4f2:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b4f6:	f886 36eb 	strb.w	r3, [r6, #1771]	; 0x6eb
 800b4fa:	e761      	b.n	800b3c0 <ArtNetNode::HandleAddress()+0x10c>
 800b4fc:	20000128 	andcs	r0, r0, r8, lsr #2
 800b500:	2000012c 	andcs	r0, r0, ip, lsr #2
 800b504:	2000d384 	andcs	sp, r0, r4, lsl #7

0800b508 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800b508:	f240 6304 	movw	r3, #1540	; 0x604
 800b50c:	fb03 0101 	mla	r1, r3, r1, r0
 800b510:	2300      	movs	r3, #0
 800b512:	b510      	push	{r4, lr}
 800b514:	4293      	cmp	r3, r2
 800b516:	d00a      	beq.n	800b52e <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 800b518:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b51c:	3301      	adds	r3, #1
 800b51e:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 800b522:	42a0      	cmp	r0, r4
 800b524:	bf38      	it	cc
 800b526:	4620      	movcc	r0, r4
 800b528:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 800b52c:	e7f2      	b.n	800b514 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 800b52e:	bd10      	pop	{r4, pc}

0800b530 <memcpy.isra.0>:
 800b530:	3801      	subs	r0, #1
 800b532:	440a      	add	r2, r1
 800b534:	4291      	cmp	r1, r2
 800b536:	d004      	beq.n	800b542 <memcpy.isra.0+0x12>
 800b538:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b53c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b540:	e7f8      	b.n	800b534 <memcpy.isra.0+0x4>
 800b542:	4770      	bx	lr

0800b544 <lightset::Data::Get()>:
 800b544:	4b03      	ldr	r3, [pc, #12]	; (800b554 <lightset::Data::Get()+0x10>)
 800b546:	4804      	ldr	r0, [pc, #16]	; (800b558 <lightset::Data::Get()+0x14>)
 800b548:	681a      	ldr	r2, [r3, #0]
 800b54a:	07d2      	lsls	r2, r2, #31
 800b54c:	bf5c      	itt	pl
 800b54e:	2201      	movpl	r2, #1
 800b550:	601a      	strpl	r2, [r3, #0]
 800b552:	4770      	bx	lr
 800b554:	20000128 	andcs	r0, r0, r8, lsr #2
 800b558:	2000012c 	andcs	r0, r0, ip, lsr #2

0800b55c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800b55c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b560:	4615      	mov	r5, r2
 800b562:	460f      	mov	r7, r1
 800b564:	4604      	mov	r4, r0
 800b566:	f7ff ffed 	bl	800b544 <lightset::Data::Get()>
 800b56a:	4606      	mov	r6, r0
 800b56c:	f240 6004 	movw	r0, #1540	; 0x604
 800b570:	4344      	muls	r4, r0
 800b572:	eb06 0804 	add.w	r8, r6, r4
 800b576:	462a      	mov	r2, r5
 800b578:	4639      	mov	r1, r7
 800b57a:	4640      	mov	r0, r8
 800b57c:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b580:	f7ff ffd6 	bl	800b530 <memcpy.isra.0>
 800b584:	462a      	mov	r2, r5
 800b586:	4639      	mov	r1, r7
 800b588:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800b58c:	1930      	adds	r0, r6, r4
 800b58e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b592:	f7ff bfcd 	b.w	800b530 <memcpy.isra.0>

0800b596 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800b596:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b59a:	4680      	mov	r8, r0
 800b59c:	f240 6404 	movw	r4, #1540	; 0x604
 800b5a0:	4615      	mov	r5, r2
 800b5a2:	460f      	mov	r7, r1
 800b5a4:	4699      	mov	r9, r3
 800b5a6:	f7ff ffcd 	bl	800b544 <lightset::Data::Get()>
 800b5aa:	fb04 f408 	mul.w	r4, r4, r8
 800b5ae:	eb00 0a04 	add.w	sl, r0, r4
 800b5b2:	4606      	mov	r6, r0
 800b5b4:	462a      	mov	r2, r5
 800b5b6:	4639      	mov	r1, r7
 800b5b8:	4650      	mov	r0, sl
 800b5ba:	f7ff ffb9 	bl	800b530 <memcpy.isra.0>
 800b5be:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800b5c2:	f1b9 0f00 	cmp.w	r9, #0
 800b5c6:	d106      	bne.n	800b5d6 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800b5c8:	462a      	mov	r2, r5
 800b5ca:	4641      	mov	r1, r8
 800b5cc:	4630      	mov	r0, r6
 800b5ce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b5d2:	f7ff bf99 	b.w	800b508 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800b5d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b5da:	462a      	mov	r2, r5
 800b5dc:	4639      	mov	r1, r7
 800b5de:	1930      	adds	r0, r6, r4
 800b5e0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b5e4:	f7ff bfa4 	b.w	800b530 <memcpy.isra.0>

0800b5e8 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800b5e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b5ec:	4616      	mov	r6, r2
 800b5ee:	4699      	mov	r9, r3
 800b5f0:	4680      	mov	r8, r0
 800b5f2:	460f      	mov	r7, r1
 800b5f4:	f7ff ffa6 	bl	800b544 <lightset::Data::Get()>
 800b5f8:	f240 6404 	movw	r4, #1540	; 0x604
 800b5fc:	4605      	mov	r5, r0
 800b5fe:	fb04 f408 	mul.w	r4, r4, r8
 800b602:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800b606:	4632      	mov	r2, r6
 800b608:	4639      	mov	r1, r7
 800b60a:	4428      	add	r0, r5
 800b60c:	f7ff ff90 	bl	800b530 <memcpy.isra.0>
 800b610:	192b      	adds	r3, r5, r4
 800b612:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800b616:	f1b9 0f00 	cmp.w	r9, #0
 800b61a:	d106      	bne.n	800b62a <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800b61c:	4632      	mov	r2, r6
 800b61e:	4641      	mov	r1, r8
 800b620:	4628      	mov	r0, r5
 800b622:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b626:	f7ff bf6f 	b.w	800b508 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800b62a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b62e:	4632      	mov	r2, r6
 800b630:	4639      	mov	r1, r7
 800b632:	1928      	adds	r0, r5, r4
 800b634:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b638:	f7ff bf7a 	b.w	800b530 <memcpy.isra.0>

0800b63c <ArtNetNode::UpdateMergeStatus(unsigned int)>:
 800b63c:	f890 36de 	ldrb.w	r3, [r0, #1758]	; 0x6de
 800b640:	b91b      	cbnz	r3, 800b64a <ArtNetNode::UpdateMergeStatus(unsigned int)+0xe>
 800b642:	f240 1301 	movw	r3, #257	; 0x101
 800b646:	f8a0 36de 	strh.w	r3, [r0, #1758]	; 0x6de
 800b64a:	2324      	movs	r3, #36	; 0x24
 800b64c:	fb03 0001 	mla	r0, r3, r1, r0
 800b650:	f890 36eb 	ldrb.w	r3, [r0, #1771]	; 0x6eb
 800b654:	f043 0308 	orr.w	r3, r3, #8
 800b658:	f880 36eb 	strb.w	r3, [r0, #1771]	; 0x6eb
 800b65c:	4770      	bx	lr

0800b65e <ArtNetNode::CheckMergeTimeouts(unsigned int)>:
 800b65e:	2324      	movs	r3, #36	; 0x24
 800b660:	b530      	push	{r4, r5, lr}
 800b662:	f242 7510 	movw	r5, #10000	; 0x2710
 800b666:	fb03 0301 	mla	r3, r3, r1, r0
 800b66a:	f8d0 2668 	ldr.w	r2, [r0, #1640]	; 0x668
 800b66e:	f8d3 46f0 	ldr.w	r4, [r3, #1776]	; 0x6f0
 800b672:	1b14      	subs	r4, r2, r4
 800b674:	42ac      	cmp	r4, r5
 800b676:	d908      	bls.n	800b68a <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x2c>
 800b678:	2400      	movs	r4, #0
 800b67a:	f8c3 46f4 	str.w	r4, [r3, #1780]	; 0x6f4
 800b67e:	f893 46eb 	ldrb.w	r4, [r3, #1771]	; 0x6eb
 800b682:	f024 0408 	bic.w	r4, r4, #8
 800b686:	f883 46eb 	strb.w	r4, [r3, #1771]	; 0x6eb
 800b68a:	2324      	movs	r3, #36	; 0x24
 800b68c:	fb03 0101 	mla	r1, r3, r1, r0
 800b690:	f8d1 36f8 	ldr.w	r3, [r1, #1784]	; 0x6f8
 800b694:	1ad2      	subs	r2, r2, r3
 800b696:	f242 7310 	movw	r3, #10000	; 0x2710
 800b69a:	429a      	cmp	r2, r3
 800b69c:	d908      	bls.n	800b6b0 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x52>
 800b69e:	2300      	movs	r3, #0
 800b6a0:	f8c1 36fc 	str.w	r3, [r1, #1788]	; 0x6fc
 800b6a4:	f891 36eb 	ldrb.w	r3, [r1, #1771]	; 0x6eb
 800b6a8:	f023 0308 	bic.w	r3, r3, #8
 800b6ac:	f881 36eb 	strb.w	r3, [r1, #1771]	; 0x6eb
 800b6b0:	2124      	movs	r1, #36	; 0x24
 800b6b2:	7803      	ldrb	r3, [r0, #0]
 800b6b4:	4602      	mov	r2, r0
 800b6b6:	009b      	lsls	r3, r3, #2
 800b6b8:	fb01 0303 	mla	r3, r1, r3, r0
 800b6bc:	2100      	movs	r1, #0
 800b6be:	429a      	cmp	r2, r3
 800b6c0:	d006      	beq.n	800b6d0 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x72>
 800b6c2:	f892 46eb 	ldrb.w	r4, [r2, #1771]	; 0x6eb
 800b6c6:	3224      	adds	r2, #36	; 0x24
 800b6c8:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 800b6cc:	4321      	orrs	r1, r4
 800b6ce:	e7f6      	b.n	800b6be <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x60>
 800b6d0:	b919      	cbnz	r1, 800b6da <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x7c>
 800b6d2:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b6d6:	f8a0 36de 	strh.w	r3, [r0, #1758]	; 0x6de
 800b6da:	bd30      	pop	{r4, r5, pc}

0800b6dc <ArtNetNode::HandleDmx()>:
 800b6dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6e0:	f8b0 70b4 	ldrh.w	r7, [r0, #180]	; 0xb4
 800b6e4:	4604      	mov	r4, r0
 800b6e6:	ba7f      	rev16	r7, r7
 800b6e8:	b2bf      	uxth	r7, r7
 800b6ea:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 800b6ee:	bf28      	it	cs
 800b6f0:	f44f 7700 	movcs.w	r7, #512	; 0x200
 800b6f4:	4605      	mov	r5, r0
 800b6f6:	2600      	movs	r6, #0
 800b6f8:	f04f 0901 	mov.w	r9, #1
 800b6fc:	f100 08b6 	add.w	r8, r0, #182	; 0xb6
 800b700:	7823      	ldrb	r3, [r4, #0]
 800b702:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800b706:	f080 809f 	bcs.w	800b848 <ArtNetNode::HandleDmx()+0x16c>
 800b70a:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d056      	beq.n	800b7c0 <ArtNetNode::HandleDmx()+0xe4>
 800b712:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800b716:	2b00      	cmp	r3, #0
 800b718:	d152      	bne.n	800b7c0 <ArtNetNode::HandleDmx()+0xe4>
 800b71a:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800b71e:	f8b5 36e8 	ldrh.w	r3, [r5, #1768]	; 0x6e8
 800b722:	429a      	cmp	r2, r3
 800b724:	d14c      	bne.n	800b7c0 <ArtNetNode::HandleDmx()+0xe4>
 800b726:	f895 36eb 	ldrb.w	r3, [r5, #1771]	; 0x6eb
 800b72a:	f8d5 b6f4 	ldr.w	fp, [r5, #1780]	; 0x6f4
 800b72e:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b732:	f885 36eb 	strb.w	r3, [r5, #1771]	; 0x6eb
 800b736:	f894 36de 	ldrb.w	r3, [r4, #1758]	; 0x6de
 800b73a:	f8d5 a6fc 	ldr.w	sl, [r5, #1788]	; 0x6fc
 800b73e:	b133      	cbz	r3, 800b74e <ArtNetNode::HandleDmx()+0x72>
 800b740:	f894 36e0 	ldrb.w	r3, [r4, #1760]	; 0x6e0
 800b744:	b91b      	cbnz	r3, 800b74e <ArtNetNode::HandleDmx()+0x72>
 800b746:	4631      	mov	r1, r6
 800b748:	4620      	mov	r0, r4
 800b74a:	f7ff ff88 	bl	800b65e <ArtNetNode::CheckMergeTimeouts(unsigned int)>
 800b74e:	ea5b 020a 	orrs.w	r2, fp, sl
 800b752:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800b756:	d136      	bne.n	800b7c6 <ArtNetNode::HandleDmx()+0xea>
 800b758:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
 800b75c:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b760:	463a      	mov	r2, r7
 800b762:	4641      	mov	r1, r8
 800b764:	4630      	mov	r0, r6
 800b766:	f8c5 36f0 	str.w	r3, [r5, #1776]	; 0x6f0
 800b76a:	f7ff fef7 	bl	800b55c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b76e:	f894 36dd 	ldrb.w	r3, [r4, #1757]	; 0x6dd
 800b772:	b9fb      	cbnz	r3, 800b7b4 <ArtNetNode::HandleDmx()+0xd8>
 800b774:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800b778:	f7ff fee4 	bl	800b544 <lightset::Data::Get()>
 800b77c:	f240 6304 	movw	r3, #1540	; 0x604
 800b780:	4373      	muls	r3, r6
 800b782:	18c1      	adds	r1, r0, r3
 800b784:	f503 6280 	add.w	r2, r3, #1024	; 0x400
 800b788:	f8da 3000 	ldr.w	r3, [sl]
 800b78c:	4402      	add	r2, r0
 800b78e:	f8d3 b010 	ldr.w	fp, [r3, #16]
 800b792:	4650      	mov	r0, sl
 800b794:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800b798:	4631      	mov	r1, r6
 800b79a:	47d8      	blx	fp
 800b79c:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800b7a0:	b943      	cbnz	r3, 800b7b4 <ArtNetNode::HandleDmx()+0xd8>
 800b7a2:	68a0      	ldr	r0, [r4, #8]
 800b7a4:	4631      	mov	r1, r6
 800b7a6:	6803      	ldr	r3, [r0, #0]
 800b7a8:	689b      	ldr	r3, [r3, #8]
 800b7aa:	4798      	blx	r3
 800b7ac:	f884 96df 	strb.w	r9, [r4, #1759]	; 0x6df
 800b7b0:	f885 9709 	strb.w	r9, [r5, #1801]	; 0x709
 800b7b4:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800b7b8:	f043 0302 	orr.w	r3, r3, #2
 800b7bc:	f884 36e1 	strb.w	r3, [r4, #1761]	; 0x6e1
 800b7c0:	3601      	adds	r6, #1
 800b7c2:	3524      	adds	r5, #36	; 0x24
 800b7c4:	e79c      	b.n	800b700 <ArtNetNode::HandleDmx()+0x24>
 800b7c6:	459b      	cmp	fp, r3
 800b7c8:	d104      	bne.n	800b7d4 <ArtNetNode::HandleDmx()+0xf8>
 800b7ca:	f1ba 0f00 	cmp.w	sl, #0
 800b7ce:	d0c5      	beq.n	800b75c <ArtNetNode::HandleDmx()+0x80>
 800b7d0:	b11b      	cbz	r3, 800b7da <ArtNetNode::HandleDmx()+0xfe>
 800b7d2:	e037      	b.n	800b844 <ArtNetNode::HandleDmx()+0x168>
 800b7d4:	f1bb 0f00 	cmp.w	fp, #0
 800b7d8:	d132      	bne.n	800b840 <ArtNetNode::HandleDmx()+0x164>
 800b7da:	459a      	cmp	sl, r3
 800b7dc:	d11d      	bne.n	800b81a <ArtNetNode::HandleDmx()+0x13e>
 800b7de:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b7e2:	f8c5 36f8 	str.w	r3, [r5, #1784]	; 0x6f8
 800b7e6:	f7ff fead 	bl	800b544 <lightset::Data::Get()>
 800b7ea:	f240 6304 	movw	r3, #1540	; 0x604
 800b7ee:	4683      	mov	fp, r0
 800b7f0:	fb03 fa06 	mul.w	sl, r3, r6
 800b7f4:	f50a 7000 	add.w	r0, sl, #512	; 0x200
 800b7f8:	463a      	mov	r2, r7
 800b7fa:	4641      	mov	r1, r8
 800b7fc:	4458      	add	r0, fp
 800b7fe:	f7ff fe97 	bl	800b530 <memcpy.isra.0>
 800b802:	eb0b 030a 	add.w	r3, fp, sl
 800b806:	f50a 6080 	add.w	r0, sl, #1024	; 0x400
 800b80a:	463a      	mov	r2, r7
 800b80c:	4641      	mov	r1, r8
 800b80e:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b812:	4458      	add	r0, fp
 800b814:	f7ff fe8c 	bl	800b530 <memcpy.isra.0>
 800b818:	e7a9      	b.n	800b76e <ArtNetNode::HandleDmx()+0x92>
 800b81a:	b9bb      	cbnz	r3, 800b84c <ArtNetNode::HandleDmx()+0x170>
 800b81c:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
 800b820:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b824:	4631      	mov	r1, r6
 800b826:	4620      	mov	r0, r4
 800b828:	f8c5 36f0 	str.w	r3, [r5, #1776]	; 0x6f0
 800b82c:	f7ff ff06 	bl	800b63c <ArtNetNode::UpdateMergeStatus(unsigned int)>
 800b830:	463a      	mov	r2, r7
 800b832:	4641      	mov	r1, r8
 800b834:	4630      	mov	r0, r6
 800b836:	f8d5 3700 	ldr.w	r3, [r5, #1792]	; 0x700
 800b83a:	f7ff feac 	bl	800b596 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b83e:	e796      	b.n	800b76e <ArtNetNode::HandleDmx()+0x92>
 800b840:	459b      	cmp	fp, r3
 800b842:	d118      	bne.n	800b876 <ArtNetNode::HandleDmx()+0x19a>
 800b844:	459a      	cmp	sl, r3
 800b846:	d1eb      	bne.n	800b820 <ArtNetNode::HandleDmx()+0x144>
 800b848:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b84c:	f1ba 0f00 	cmp.w	sl, #0
 800b850:	d1e4      	bne.n	800b81c <ArtNetNode::HandleDmx()+0x140>
 800b852:	f8c5 36fc 	str.w	r3, [r5, #1788]	; 0x6fc
 800b856:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b85a:	4631      	mov	r1, r6
 800b85c:	4620      	mov	r0, r4
 800b85e:	f8c5 36f8 	str.w	r3, [r5, #1784]	; 0x6f8
 800b862:	f7ff feeb 	bl	800b63c <ArtNetNode::UpdateMergeStatus(unsigned int)>
 800b866:	463a      	mov	r2, r7
 800b868:	4641      	mov	r1, r8
 800b86a:	4630      	mov	r0, r6
 800b86c:	f8d5 3700 	ldr.w	r3, [r5, #1792]	; 0x700
 800b870:	f7ff feba 	bl	800b5e8 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b874:	e77b      	b.n	800b76e <ArtNetNode::HandleDmx()+0x92>
 800b876:	f1ba 0f00 	cmp.w	sl, #0
 800b87a:	d0ea      	beq.n	800b852 <ArtNetNode::HandleDmx()+0x176>
 800b87c:	459a      	cmp	sl, r3
 800b87e:	d0ea      	beq.n	800b856 <ArtNetNode::HandleDmx()+0x17a>
 800b880:	e7e2      	b.n	800b848 <ArtNetNode::HandleDmx()+0x16c>
	...

0800b884 <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)>:
 800b884:	2907      	cmp	r1, #7
 800b886:	b510      	push	{r4, lr}
 800b888:	d80b      	bhi.n	800b8a2 <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)+0x1e>
 800b88a:	4b06      	ldr	r3, [pc, #24]	; (800b8a4 <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)+0x20>)
 800b88c:	3181      	adds	r1, #129	; 0x81
 800b88e:	681c      	ldr	r4, [r3, #0]
 800b890:	0109      	lsls	r1, r1, #4
 800b892:	6923      	ldr	r3, [r4, #16]
 800b894:	69a4      	ldr	r4, [r4, #24]
 800b896:	4053      	eors	r3, r2
 800b898:	4223      	tst	r3, r4
 800b89a:	bf16      	itet	ne
 800b89c:	6ac3      	ldrne	r3, [r0, #44]	; 0x2c
 800b89e:	5042      	streq	r2, [r0, r1]
 800b8a0:	5043      	strne	r3, [r0, r1]
 800b8a2:	bd10      	pop	{r4, pc}
 800b8a4:	2000cc60 	andcs	ip, r0, r0, ror #24

0800b8a8 <ArtNetNode::HandleDmxIn()>:
 800b8a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b8ac:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 800b8b0:	ab05      	add	r3, sp, #20
 800b8b2:	4607      	mov	r7, r0
 800b8b4:	2208      	movs	r2, #8
 800b8b6:	461e      	mov	r6, r3
 800b8b8:	4953      	ldr	r1, [pc, #332]	; (800ba08 <ArtNetNode::HandleDmxIn()+0x160>)
 800b8ba:	3a01      	subs	r2, #1
 800b8bc:	d304      	bcc.n	800b8c8 <ArtNetNode::HandleDmxIn()+0x20>
 800b8be:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b8c2:	f803 0b01 	strb.w	r0, [r3], #1
 800b8c6:	e7f8      	b.n	800b8ba <ArtNetNode::HandleDmxIn()+0x12>
 800b8c8:	f44f 43a0 	mov.w	r3, #20480	; 0x5000
 800b8cc:	2500      	movs	r5, #0
 800b8ce:	8133      	strh	r3, [r6, #8]
 800b8d0:	230e      	movs	r3, #14
 800b8d2:	463c      	mov	r4, r7
 800b8d4:	f8df 8134 	ldr.w	r8, [pc, #308]	; 800ba0c <ArtNetNode::HandleDmxIn()+0x164>
 800b8d8:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800ba10 <ArtNetNode::HandleDmxIn()+0x168>
 800b8dc:	72b5      	strb	r5, [r6, #10]
 800b8de:	72f3      	strb	r3, [r6, #11]
 800b8e0:	f894 380c 	ldrb.w	r3, [r4, #2060]	; 0x80c
 800b8e4:	2b00      	cmp	r3, #0
 800b8e6:	d057      	beq.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800b8e8:	6978      	ldr	r0, [r7, #20]
 800b8ea:	4629      	mov	r1, r5
 800b8ec:	6803      	ldr	r3, [r0, #0]
 800b8ee:	aa03      	add	r2, sp, #12
 800b8f0:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b8f4:	ab04      	add	r3, sp, #16
 800b8f6:	47d0      	blx	sl
 800b8f8:	2800      	cmp	r0, #0
 800b8fa:	d056      	beq.n	800b9aa <ArtNetNode::HandleDmxIn()+0x102>
 800b8fc:	f894 3814 	ldrb.w	r3, [r4, #2068]	; 0x814
 800b900:	7375      	strb	r5, [r6, #13]
 800b902:	3301      	adds	r3, #1
 800b904:	b2db      	uxtb	r3, r3
 800b906:	f884 3814 	strb.w	r3, [r4, #2068]	; 0x814
 800b90a:	7333      	strb	r3, [r6, #12]
 800b90c:	f8b4 3808 	ldrh.w	r3, [r4, #2056]	; 0x808
 800b910:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800b914:	81f3      	strh	r3, [r6, #14]
 800b916:	9b03      	ldr	r3, [sp, #12]
 800b918:	eb00 0c03 	add.w	ip, r0, r3
 800b91c:	4584      	cmp	ip, r0
 800b91e:	d004      	beq.n	800b92a <ArtNetNode::HandleDmxIn()+0x82>
 800b920:	f810 1b01 	ldrb.w	r1, [r0], #1
 800b924:	f802 1b01 	strb.w	r1, [r2], #1
 800b928:	e7f8      	b.n	800b91c <ArtNetNode::HandleDmxIn()+0x74>
 800b92a:	07da      	lsls	r2, r3, #31
 800b92c:	d504      	bpl.n	800b938 <ArtNetNode::HandleDmxIn()+0x90>
 800b92e:	2100      	movs	r1, #0
 800b930:	18f2      	adds	r2, r6, r3
 800b932:	3301      	adds	r3, #1
 800b934:	7491      	strb	r1, [r2, #18]
 800b936:	9303      	str	r3, [sp, #12]
 800b938:	9b03      	ldr	r3, [sp, #12]
 800b93a:	4631      	mov	r1, r6
 800b93c:	0a1a      	lsrs	r2, r3, #8
 800b93e:	7473      	strb	r3, [r6, #17]
 800b940:	2380      	movs	r3, #128	; 0x80
 800b942:	f884 380b 	strb.w	r3, [r4, #2059]	; 0x80b
 800b946:	f641 1336 	movw	r3, #6454	; 0x1936
 800b94a:	7432      	strb	r2, [r6, #16]
 800b94c:	9300      	str	r3, [sp, #0]
 800b94e:	f240 2212 	movw	r2, #530	; 0x212
 800b952:	f8d4 3810 	ldr.w	r3, [r4, #2064]	; 0x810
 800b956:	7938      	ldrb	r0, [r7, #4]
 800b958:	f004 ff2e 	bl	80107b8 <udp_send>
 800b95c:	2201      	movs	r2, #1
 800b95e:	f8d8 1000 	ldr.w	r1, [r8]
 800b962:	fa02 f305 	lsl.w	r3, r2, r5
 800b966:	ea33 0001 	bics.w	r0, r3, r1
 800b96a:	d015      	beq.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800b96c:	4319      	orrs	r1, r3
 800b96e:	f8c8 1000 	str.w	r1, [r8]
 800b972:	f897 16e1 	ldrb.w	r1, [r7, #1761]	; 0x6e1
 800b976:	4311      	orrs	r1, r2
 800b978:	f887 16e1 	strb.w	r1, [r7, #1761]	; 0x6e1
 800b97c:	fab3 f383 	clz	r3, r3
 800b980:	b2db      	uxtb	r3, r3
 800b982:	3b17      	subs	r3, #23
 800b984:	4093      	lsls	r3, r2
 800b986:	fa02 f303 	lsl.w	r3, r2, r3
 800b98a:	f8d9 2000 	ldr.w	r2, [r9]
 800b98e:	4313      	orrs	r3, r2
 800b990:	f483 1360 	eor.w	r3, r3, #3670016	; 0x380000
 800b994:	f8c9 3000 	str.w	r3, [r9]
 800b998:	3501      	adds	r5, #1
 800b99a:	2d04      	cmp	r5, #4
 800b99c:	f104 0410 	add.w	r4, r4, #16
 800b9a0:	d19e      	bne.n	800b8e0 <ArtNetNode::HandleDmxIn()+0x38>
 800b9a2:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
 800b9a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b9aa:	f994 280b 	ldrsb.w	r2, [r4, #2059]	; 0x80b
 800b9ae:	f894 380b 	ldrb.w	r3, [r4, #2059]	; 0x80b
 800b9b2:	2a00      	cmp	r2, #0
 800b9b4:	daf0      	bge.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800b9b6:	9a04      	ldr	r2, [sp, #16]
 800b9b8:	2a00      	cmp	r2, #0
 800b9ba:	d1ed      	bne.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800b9bc:	2201      	movs	r2, #1
 800b9be:	f8d8 1000 	ldr.w	r1, [r8]
 800b9c2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b9c6:	f884 380b 	strb.w	r3, [r4, #2059]	; 0x80b
 800b9ca:	fa02 f305 	lsl.w	r3, r2, r5
 800b9ce:	ea21 0103 	bic.w	r1, r1, r3
 800b9d2:	f8c8 1000 	str.w	r1, [r8]
 800b9d6:	fab3 f383 	clz	r3, r3
 800b9da:	b2db      	uxtb	r3, r3
 800b9dc:	3b17      	subs	r3, #23
 800b9de:	4093      	lsls	r3, r2
 800b9e0:	fa02 f303 	lsl.w	r3, r2, r3
 800b9e4:	f8d9 2000 	ldr.w	r2, [r9]
 800b9e8:	ea22 0203 	bic.w	r2, r2, r3
 800b9ec:	f482 1260 	eor.w	r2, r2, #3670016	; 0x380000
 800b9f0:	f8c9 2000 	str.w	r2, [r9]
 800b9f4:	2900      	cmp	r1, #0
 800b9f6:	d1cf      	bne.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800b9f8:	f897 36e1 	ldrb.w	r3, [r7, #1761]	; 0x6e1
 800b9fc:	f023 0301 	bic.w	r3, r3, #1
 800ba00:	f887 36e1 	strb.w	r3, [r7, #1761]	; 0x6e1
 800ba04:	e7c8      	b.n	800b998 <ArtNetNode::HandleDmxIn()+0xf0>
 800ba06:	bf00      	nop
 800ba08:	08017729 	stmdaeq	r1, {r0, r3, r5, r8, r9, sl, ip, sp, lr}
 800ba0c:	20003150 	andcs	r3, r0, r0, asr r1
 800ba10:	2000d390 	mulcs	r0, r0, r3

0800ba14 <memcmp.constprop.0>:
 800ba14:	b510      	push	{r4, lr}
 800ba16:	4c07      	ldr	r4, [pc, #28]	; (800ba34 <memcmp.constprop.0+0x20>)
 800ba18:	1e42      	subs	r2, r0, #1
 800ba1a:	3003      	adds	r0, #3
 800ba1c:	4282      	cmp	r2, r0
 800ba1e:	d007      	beq.n	800ba30 <memcmp.constprop.0+0x1c>
 800ba20:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800ba24:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ba28:	428b      	cmp	r3, r1
 800ba2a:	d0f7      	beq.n	800ba1c <memcmp.constprop.0+0x8>
 800ba2c:	1a58      	subs	r0, r3, r1
 800ba2e:	bd10      	pop	{r4, pc}
 800ba30:	2000      	movs	r0, #0
 800ba32:	e7fc      	b.n	800ba2e <memcmp.constprop.0+0x1a>
 800ba34:	20003154 	andcs	r3, r0, r4, asr r1

0800ba38 <memcpy.constprop.0.isra.0>:
 800ba38:	3801      	subs	r0, #1
 800ba3a:	1d0a      	adds	r2, r1, #4
 800ba3c:	4291      	cmp	r1, r2
 800ba3e:	d004      	beq.n	800ba4a <memcpy.constprop.0.isra.0+0x12>
 800ba40:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ba44:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ba48:	e7f8      	b.n	800ba3c <memcpy.constprop.0.isra.0+0x4>
 800ba4a:	4770      	bx	lr

0800ba4c <ArtNetNode::HandleIpProg()>:
 800ba4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba50:	f100 03a4 	add.w	r3, r0, #164	; 0xa4
 800ba54:	b085      	sub	sp, #20
 800ba56:	4604      	mov	r4, r0
 800ba58:	9303      	str	r3, [sp, #12]
 800ba5a:	2300      	movs	r3, #0
 800ba5c:	4d5a      	ldr	r5, [pc, #360]	; (800bbc8 <ArtNetNode::HandleIpProg()+0x17c>)
 800ba5e:	f890 70b2 	ldrb.w	r7, [r0, #178]	; 0xb2
 800ba62:	6828      	ldr	r0, [r5, #0]
 800ba64:	f890 b001 	ldrb.w	fp, [r0, #1]
 800ba68:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
 800ba6c:	f06f 0306 	mvn.w	r3, #6
 800ba70:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800ba74:	f007 03c0 	and.w	r3, r7, #192	; 0xc0
 800ba78:	2bc0      	cmp	r3, #192	; 0xc0
 800ba7a:	d101      	bne.n	800ba80 <ArtNetNode::HandleIpProg()+0x34>
 800ba7c:	f005 fd20 	bl	80114c0 <Network::EnableDhcp()>
 800ba80:	f007 0388 	and.w	r3, r7, #136	; 0x88
 800ba84:	2b88      	cmp	r3, #136	; 0x88
 800ba86:	d103      	bne.n	800ba90 <ArtNetNode::HandleIpProg()+0x44>
 800ba88:	2100      	movs	r1, #0
 800ba8a:	6828      	ldr	r0, [r5, #0]
 800ba8c:	f005 fcbc 	bl	8011408 <Network::SetIp(unsigned int)>
 800ba90:	f007 0384 	and.w	r3, r7, #132	; 0x84
 800ba94:	2b84      	cmp	r3, #132	; 0x84
 800ba96:	4e4d      	ldr	r6, [pc, #308]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800ba98:	f104 08b4 	add.w	r8, r4, #180	; 0xb4
 800ba9c:	d107      	bne.n	800baae <ArtNetNode::HandleIpProg()+0x62>
 800ba9e:	4641      	mov	r1, r8
 800baa0:	4630      	mov	r0, r6
 800baa2:	f7ff ffc9 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800baa6:	6831      	ldr	r1, [r6, #0]
 800baa8:	6828      	ldr	r0, [r5, #0]
 800baaa:	f005 fcad 	bl	8011408 <Network::SetIp(unsigned int)>
 800baae:	f007 0382 	and.w	r3, r7, #130	; 0x82
 800bab2:	2b82      	cmp	r3, #130	; 0x82
 800bab4:	f104 09b8 	add.w	r9, r4, #184	; 0xb8
 800bab8:	d107      	bne.n	800baca <ArtNetNode::HandleIpProg()+0x7e>
 800baba:	4649      	mov	r1, r9
 800babc:	4843      	ldr	r0, [pc, #268]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800babe:	f7ff ffbb 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bac2:	6831      	ldr	r1, [r6, #0]
 800bac4:	6828      	ldr	r0, [r5, #0]
 800bac6:	f005 fccd 	bl	8011464 <Network::SetNetmask(unsigned int)>
 800baca:	f007 0790 	and.w	r7, r7, #144	; 0x90
 800bace:	2f90      	cmp	r7, #144	; 0x90
 800bad0:	f104 0abe 	add.w	sl, r4, #190	; 0xbe
 800bad4:	d107      	bne.n	800bae6 <ArtNetNode::HandleIpProg()+0x9a>
 800bad6:	4651      	mov	r1, sl
 800bad8:	483c      	ldr	r0, [pc, #240]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800bada:	f7ff ffad 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bade:	6831      	ldr	r1, [r6, #0]
 800bae0:	6828      	ldr	r0, [r5, #0]
 800bae2:	f005 fcd5 	bl	8011490 <Network::SetGatewayIp(unsigned int)>
 800bae6:	2200      	movs	r2, #0
 800bae8:	6829      	ldr	r1, [r5, #0]
 800baea:	7848      	ldrb	r0, [r1, #1]
 800baec:	f884 20bf 	strb.w	r2, [r4, #191]	; 0xbf
 800baf0:	4290      	cmp	r0, r2
 800baf2:	bf0c      	ite	eq
 800baf4:	4610      	moveq	r0, r2
 800baf6:	2040      	movne	r0, #64	; 0x40
 800baf8:	f884 00be 	strb.w	r0, [r4, #190]	; 0xbe
 800bafc:	7848      	ldrb	r0, [r1, #1]
 800bafe:	6909      	ldr	r1, [r1, #16]
 800bb00:	ea8b 0b00 	eor.w	fp, fp, r0
 800bb04:	4640      	mov	r0, r8
 800bb06:	6031      	str	r1, [r6, #0]
 800bb08:	f7ff ff84 	bl	800ba14 <memcmp.constprop.0>
 800bb0c:	492f      	ldr	r1, [pc, #188]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800bb0e:	4607      	mov	r7, r0
 800bb10:	4640      	mov	r0, r8
 800bb12:	f7ff ff91 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bb16:	6829      	ldr	r1, [r5, #0]
 800bb18:	4648      	mov	r0, r9
 800bb1a:	6989      	ldr	r1, [r1, #24]
 800bb1c:	6031      	str	r1, [r6, #0]
 800bb1e:	f7ff ff79 	bl	800ba14 <memcmp.constprop.0>
 800bb22:	492a      	ldr	r1, [pc, #168]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800bb24:	9003      	str	r0, [sp, #12]
 800bb26:	4648      	mov	r0, r9
 800bb28:	f7ff ff86 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bb2c:	6829      	ldr	r1, [r5, #0]
 800bb2e:	4650      	mov	r0, sl
 800bb30:	6949      	ldr	r1, [r1, #20]
 800bb32:	6031      	str	r1, [r6, #0]
 800bb34:	f7ff ff6e 	bl	800ba14 <memcmp.constprop.0>
 800bb38:	9b03      	ldr	r3, [sp, #12]
 800bb3a:	4924      	ldr	r1, [pc, #144]	; (800bbcc <ArtNetNode::HandleIpProg()+0x180>)
 800bb3c:	431f      	orrs	r7, r3
 800bb3e:	ea57 0300 	orrs.w	r3, r7, r0
 800bb42:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800bb46:	bf0c      	ite	eq
 800bb48:	465e      	moveq	r6, fp
 800bb4a:	f04b 0601 	orrne.w	r6, fp, #1
 800bb4e:	f7ff ff73 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bb52:	2200      	movs	r2, #0
 800bb54:	f641 1336 	movw	r3, #6454	; 0x1936
 800bb58:	f884 20c4 	strb.w	r2, [r4, #196]	; 0xc4
 800bb5c:	f884 20c5 	strb.w	r2, [r4, #197]	; 0xc5
 800bb60:	9300      	str	r3, [sp, #0]
 800bb62:	2222      	movs	r2, #34	; 0x22
 800bb64:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800bb68:	7920      	ldrb	r0, [r4, #4]
 800bb6a:	f104 01a4 	add.w	r1, r4, #164	; 0xa4
 800bb6e:	f004 fe23 	bl	80107b8 <udp_send>
 800bb72:	b336      	cbz	r6, 800bbc2 <ArtNetNode::HandleIpProg()+0x176>
 800bb74:	682a      	ldr	r2, [r5, #0]
 800bb76:	f204 5082 	addw	r0, r4, #1410	; 0x582
 800bb7a:	6913      	ldr	r3, [r2, #16]
 800bb7c:	62a3      	str	r3, [r4, #40]	; 0x28
 800bb7e:	6991      	ldr	r1, [r2, #24]
 800bb80:	7852      	ldrb	r2, [r2, #1]
 800bb82:	ea63 0301 	orn	r3, r3, r1
 800bb86:	2a00      	cmp	r2, #0
 800bb88:	bf14      	ite	ne
 800bb8a:	2202      	movne	r2, #2
 800bb8c:	2200      	moveq	r2, #0
 800bb8e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800bb90:	f994 3098 	ldrsb.w	r3, [r4, #152]	; 0x98
 800bb94:	4641      	mov	r1, r8
 800bb96:	f023 0302 	bic.w	r3, r3, #2
 800bb9a:	4313      	orrs	r3, r2
 800bb9c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800bba0:	f7ff ff4a 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bba4:	4641      	mov	r1, r8
 800bba6:	f204 6047 	addw	r0, r4, #1607	; 0x647
 800bbaa:	f7ff ff45 	bl	800ba38 <memcpy.constprop.0.isra.0>
 800bbae:	f894 36da 	ldrb.w	r3, [r4, #1754]	; 0x6da
 800bbb2:	b133      	cbz	r3, 800bbc2 <ArtNetNode::HandleIpProg()+0x176>
 800bbb4:	2101      	movs	r1, #1
 800bbb6:	4620      	mov	r0, r4
 800bbb8:	b005      	add	sp, #20
 800bbba:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbbe:	f000 b883 	b.w	800bcc8 <ArtNetNode::SendPollRelply(bool)>
 800bbc2:	b005      	add	sp, #20
 800bbc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbc8:	2000cc60 	andcs	ip, r0, r0, ror #24
 800bbcc:	20003154 	andcs	r3, r0, r4, asr r1

0800bbd0 <memcpy.isra.0>:
 800bbd0:	3801      	subs	r0, #1
 800bbd2:	440a      	add	r2, r1
 800bbd4:	4291      	cmp	r1, r2
 800bbd6:	d004      	beq.n	800bbe2 <memcpy.isra.0+0x12>
 800bbd8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bbdc:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bbe0:	e7f8      	b.n	800bbd4 <memcpy.isra.0+0x4>
 800bbe2:	4770      	bx	lr

0800bbe4 <ArtNetNode::FillPollReply()>:
 800bbe4:	b538      	push	{r3, r4, r5, lr}
 800bbe6:	4604      	mov	r4, r0
 800bbe8:	f500 60af 	add.w	r0, r0, #1400	; 0x578
 800bbec:	4603      	mov	r3, r0
 800bbee:	2200      	movs	r2, #0
 800bbf0:	f204 6167 	addw	r1, r4, #1639	; 0x667
 800bbf4:	4299      	cmp	r1, r3
 800bbf6:	d002      	beq.n	800bbfe <ArtNetNode::FillPollReply()+0x1a>
 800bbf8:	f803 2b01 	strb.w	r2, [r3], #1
 800bbfc:	e7fa      	b.n	800bbf4 <ArtNetNode::FillPollReply()+0x10>
 800bbfe:	2208      	movs	r2, #8
 800bc00:	492d      	ldr	r1, [pc, #180]	; (800bcb8 <ArtNetNode::FillPollReply()+0xd4>)
 800bc02:	f7ff ffe5 	bl	800bbd0 <memcpy.isra.0>
 800bc06:	f44f 5304 	mov.w	r3, #8448	; 0x2100
 800bc0a:	4d2c      	ldr	r5, [pc, #176]	; (800bcbc <ArtNetNode::FillPollReply()+0xd8>)
 800bc0c:	f8a4 3580 	strh.w	r3, [r4, #1408]	; 0x580
 800bc10:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800bc12:	4629      	mov	r1, r5
 800bc14:	f204 5082 	addw	r0, r4, #1410	; 0x582
 800bc18:	2204      	movs	r2, #4
 800bc1a:	602b      	str	r3, [r5, #0]
 800bc1c:	f7ff ffd8 	bl	800bbd0 <memcpy.isra.0>
 800bc20:	f641 1336 	movw	r3, #6454	; 0x1936
 800bc24:	f8a4 3586 	strh.w	r3, [r4, #1414]	; 0x586
 800bc28:	4b25      	ldr	r3, [pc, #148]	; (800bcc0 <ArtNetNode::FillPollReply()+0xdc>)
 800bc2a:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800bc2e:	781a      	ldrb	r2, [r3, #0]
 800bc30:	f204 5092 	addw	r0, r4, #1426	; 0x592
 800bc34:	f884 2588 	strb.w	r2, [r4, #1416]	; 0x588
 800bc38:	785b      	ldrb	r3, [r3, #1]
 800bc3a:	f884 3589 	strb.w	r3, [r4, #1417]	; 0x589
 800bc3e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800bc42:	f8a4 358c 	strh.w	r3, [r4, #1420]	; 0x58c
 800bc46:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800bc4a:	f884 358f 	strb.w	r3, [r4, #1423]	; 0x58f
 800bc4e:	4b1d      	ldr	r3, [pc, #116]	; (800bcc4 <ArtNetNode::FillPollReply()+0xe0>)
 800bc50:	785a      	ldrb	r2, [r3, #1]
 800bc52:	781b      	ldrb	r3, [r3, #0]
 800bc54:	f884 2590 	strb.w	r2, [r4, #1424]	; 0x590
 800bc58:	f884 3591 	strb.w	r3, [r4, #1425]	; 0x591
 800bc5c:	2212      	movs	r2, #18
 800bc5e:	f7ff ffb7 	bl	800bbd0 <memcpy.isra.0>
 800bc62:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800bc66:	f204 50a4 	addw	r0, r4, #1444	; 0x5a4
 800bc6a:	2240      	movs	r2, #64	; 0x40
 800bc6c:	f7ff ffb0 	bl	800bbd0 <memcpy.isra.0>
 800bc70:	2300      	movs	r3, #0
 800bc72:	f104 0138 	add.w	r1, r4, #56	; 0x38
 800bc76:	f884 3640 	strb.w	r3, [r4, #1600]	; 0x640
 800bc7a:	f204 6041 	addw	r0, r4, #1601	; 0x641
 800bc7e:	2206      	movs	r2, #6
 800bc80:	f7ff ffa6 	bl	800bbd0 <memcpy.isra.0>
 800bc84:	4629      	mov	r1, r5
 800bc86:	f204 6047 	addw	r0, r4, #1607	; 0x647
 800bc8a:	2204      	movs	r2, #4
 800bc8c:	f7ff ffa0 	bl	800bbd0 <memcpy.isra.0>
 800bc90:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 800bc94:	f104 019a 	add.w	r1, r4, #154	; 0x9a
 800bc98:	f884 364c 	strb.w	r3, [r4, #1612]	; 0x64c
 800bc9c:	f894 3099 	ldrb.w	r3, [r4, #153]	; 0x99
 800bca0:	f204 6052 	addw	r0, r4, #1618	; 0x652
 800bca4:	f884 3651 	strb.w	r3, [r4, #1617]	; 0x651
 800bca8:	2304      	movs	r3, #4
 800bcaa:	2206      	movs	r2, #6
 800bcac:	f884 3625 	strb.w	r3, [r4, #1573]	; 0x625
 800bcb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bcb4:	f7ff bf8c 	b.w	800bbd0 <memcpy.isra.0>
 800bcb8:	08017744 	stmdaeq	r1, {r2, r6, r8, r9, sl, ip, sp, lr}
 800bcbc:	20003158 	andcs	r3, r0, r8, asr r1
 800bcc0:	08017830 	stmdaeq	r1, {r4, r5, fp, ip, sp, lr}
 800bcc4:	0801782e 	stmdaeq	r1, {r1, r2, r3, r5, fp, ip, sp, lr}

0800bcc8 <ArtNetNode::SendPollRelply(bool)>:
 800bcc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bccc:	4604      	mov	r4, r0
 800bcce:	b087      	sub	sp, #28
 800bcd0:	b941      	cbnz	r1, 800bce4 <ArtNetNode::SendPollRelply(bool)+0x1c>
 800bcd2:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800bcd6:	2b02      	cmp	r3, #2
 800bcd8:	bf02      	ittt	eq
 800bcda:	f8d0 36c4 	ldreq.w	r3, [r0, #1732]	; 0x6c4
 800bcde:	3301      	addeq	r3, #1
 800bce0:	f8c0 36c4 	streq.w	r3, [r0, #1732]	; 0x6c4
 800bce4:	f04f 0900 	mov.w	r9, #0
 800bce8:	46c8      	mov	r8, r9
 800bcea:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800bcee:	f884 358f 	strb.w	r3, [r4, #1423]	; 0x58f
 800bcf2:	f104 033e 	add.w	r3, r4, #62	; 0x3e
 800bcf6:	9303      	str	r3, [sp, #12]
 800bcf8:	7823      	ldrb	r3, [r4, #0]
 800bcfa:	4543      	cmp	r3, r8
 800bcfc:	f340 80a0 	ble.w	800be40 <ArtNetNode::SendPollRelply(bool)+0x178>
 800bd00:	9a03      	ldr	r2, [sp, #12]
 800bd02:	2590      	movs	r5, #144	; 0x90
 800bd04:	f812 3b01 	ldrb.w	r3, [r2], #1
 800bd08:	4649      	mov	r1, r9
 800bd0a:	f884 358a 	strb.w	r3, [r4, #1418]	; 0x58a
 800bd0e:	7853      	ldrb	r3, [r2, #1]
 800bd10:	9203      	str	r2, [sp, #12]
 800bd12:	f884 358b 	strb.w	r3, [r4, #1419]	; 0x58b
 800bd16:	f108 0301 	add.w	r3, r8, #1
 800bd1a:	f884 364b 	strb.w	r3, [r4, #1611]	; 0x64b
 800bd1e:	fa5f f389 	uxtb.w	r3, r9
 800bd22:	2bfb      	cmp	r3, #251	; 0xfb
 800bd24:	bf8c      	ite	hi
 800bd26:	2201      	movhi	r2, #1
 800bd28:	2205      	movls	r2, #5
 800bd2a:	f04f 0a00 	mov.w	sl, #0
 800bd2e:	fb05 4508 	mla	r5, r5, r8, r4
 800bd32:	eb04 1b88 	add.w	fp, r4, r8, lsl #6
 800bd36:	f204 6726 	addw	r7, r4, #1574	; 0x626
 800bd3a:	2a01      	cmp	r2, #1
 800bd3c:	d061      	beq.n	800be02 <ArtNetNode::SendPollRelply(bool)+0x13a>
 800bd3e:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800bd42:	f895 66eb 	ldrb.w	r6, [r5, #1771]	; 0x6eb
 800bd46:	2b00      	cmp	r3, #0
 800bd48:	d144      	bne.n	800bdd4 <ArtNetNode::SendPollRelply(bool)+0x10c>
 800bd4a:	f8d5 36f4 	ldr.w	r3, [r5, #1780]	; 0x6f4
 800bd4e:	f006 067f 	and.w	r6, r6, #127	; 0x7f
 800bd52:	b14b      	cbz	r3, 800bd68 <ArtNetNode::SendPollRelply(bool)+0xa0>
 800bd54:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800bd58:	f8d5 06f0 	ldr.w	r0, [r5, #1776]	; 0x6f0
 800bd5c:	1a1b      	subs	r3, r3, r0
 800bd5e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800bd62:	bf38      	it	cc
 800bd64:	f046 0680 	orrcc.w	r6, r6, #128	; 0x80
 800bd68:	f8d5 36fc 	ldr.w	r3, [r5, #1788]	; 0x6fc
 800bd6c:	b14b      	cbz	r3, 800bd82 <ArtNetNode::SendPollRelply(bool)+0xba>
 800bd6e:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800bd72:	f8d5 06f8 	ldr.w	r0, [r5, #1784]	; 0x6f8
 800bd76:	1a1b      	subs	r3, r3, r0
 800bd78:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800bd7c:	d201      	bcs.n	800bd82 <ArtNetNode::SendPollRelply(bool)+0xba>
 800bd7e:	f046 0680 	orr.w	r6, r6, #128	; 0x80
 800bd82:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800bd86:	f885 66eb 	strb.w	r6, [r5, #1771]	; 0x6eb
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	d037      	beq.n	800bdfe <ArtNetNode::SendPollRelply(bool)+0x136>
 800bd8e:	f06f 037f 	mvn.w	r3, #127	; 0x7f
 800bd92:	f10a 0a01 	add.w	sl, sl, #1
 800bd96:	703b      	strb	r3, [r7, #0]
 800bd98:	723e      	strb	r6, [r7, #8]
 800bd9a:	f895 36ea 	ldrb.w	r3, [r5, #1770]	; 0x6ea
 800bd9e:	743b      	strb	r3, [r7, #16]
 800bda0:	b2cb      	uxtb	r3, r1
 800bda2:	2b03      	cmp	r3, #3
 800bda4:	d80e      	bhi.n	800bdc4 <ArtNetNode::SendPollRelply(bool)+0xfc>
 800bda6:	f89b 380c 	ldrb.w	r3, [fp, #2060]	; 0x80c
 800bdaa:	b12b      	cbz	r3, 800bdb8 <ArtNetNode::SendPollRelply(bool)+0xf0>
 800bdac:	783b      	ldrb	r3, [r7, #0]
 800bdae:	f10a 0a01 	add.w	sl, sl, #1
 800bdb2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bdb6:	703b      	strb	r3, [r7, #0]
 800bdb8:	f89b 380b 	ldrb.w	r3, [fp, #2059]	; 0x80b
 800bdbc:	713b      	strb	r3, [r7, #4]
 800bdbe:	f89b 380a 	ldrb.w	r3, [fp, #2058]	; 0x80a
 800bdc2:	733b      	strb	r3, [r7, #12]
 800bdc4:	1e53      	subs	r3, r2, #1
 800bdc6:	3101      	adds	r1, #1
 800bdc8:	b2da      	uxtb	r2, r3
 800bdca:	f10b 0b10 	add.w	fp, fp, #16
 800bdce:	3701      	adds	r7, #1
 800bdd0:	3524      	adds	r5, #36	; 0x24
 800bdd2:	e7b2      	b.n	800bd3a <ArtNetNode::SendPollRelply(bool)+0x72>
 800bdd4:	69e0      	ldr	r0, [r4, #28]
 800bdd6:	2800      	cmp	r0, #0
 800bdd8:	d0d3      	beq.n	800bd82 <ArtNetNode::SendPollRelply(bool)+0xba>
 800bdda:	6803      	ldr	r3, [r0, #0]
 800bddc:	9205      	str	r2, [sp, #20]
 800bdde:	9104      	str	r1, [sp, #16]
 800bde0:	691b      	ldr	r3, [r3, #16]
 800bde2:	4798      	blx	r3
 800bde4:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
 800bde8:	f000 0089 	and.w	r0, r0, #137	; 0x89
 800bdec:	f006 0676 	and.w	r6, r6, #118	; 0x76
 800bdf0:	4306      	orrs	r6, r0
 800bdf2:	f010 0001 	ands.w	r0, r0, #1
 800bdf6:	bf08      	it	eq
 800bdf8:	f8c5 0704 	streq.w	r0, [r5, #1796]	; 0x704
 800bdfc:	e7c1      	b.n	800bd82 <ArtNetNode::SendPollRelply(bool)+0xba>
 800bdfe:	703b      	strb	r3, [r7, #0]
 800be00:	e7ca      	b.n	800bd98 <ArtNetNode::SendPollRelply(bool)+0xd0>
 800be02:	f204 6373 	addw	r3, r4, #1651	; 0x673
 800be06:	9301      	str	r3, [sp, #4]
 800be08:	f8d4 36c4 	ldr.w	r3, [r4, #1732]	; 0x6c4
 800be0c:	2140      	movs	r1, #64	; 0x40
 800be0e:	4a0f      	ldr	r2, [pc, #60]	; (800be4c <ArtNetNode::SendPollRelply(bool)+0x184>)
 800be10:	9300      	str	r3, [sp, #0]
 800be12:	f884 a625 	strb.w	sl, [r4, #1573]	; 0x625
 800be16:	f894 36d8 	ldrb.w	r3, [r4, #1752]	; 0x6d8
 800be1a:	f204 50e4 	addw	r0, r4, #1508	; 0x5e4
 800be1e:	f008 fa35 	bl	801428c <snprintf>
 800be22:	f641 1336 	movw	r3, #6454	; 0x1936
 800be26:	22ef      	movs	r2, #239	; 0xef
 800be28:	9300      	str	r3, [sp, #0]
 800be2a:	7920      	ldrb	r0, [r4, #4]
 800be2c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800be2e:	f504 61af 	add.w	r1, r4, #1400	; 0x578
 800be32:	f004 fcc1 	bl	80107b8 <udp_send>
 800be36:	f108 0801 	add.w	r8, r8, #1
 800be3a:	f109 0904 	add.w	r9, r9, #4
 800be3e:	e75b      	b.n	800bcf8 <ArtNetNode::SendPollRelply(bool)+0x30>
 800be40:	2300      	movs	r3, #0
 800be42:	f884 36df 	strb.w	r3, [r4, #1759]	; 0x6df
 800be46:	b007      	add	sp, #28
 800be48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be4c:	08017731 	stmdaeq	r1, {r0, r4, r5, r8, r9, sl, ip, sp, lr}

0800be50 <ArtNetNode::HandlePoll()>:
 800be50:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 800be54:	b410      	push	{r4}
 800be56:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800be5a:	f880 26da 	strb.w	r2, [r0, #1754]	; 0x6da
 800be5e:	f013 0204 	ands.w	r2, r3, #4
 800be62:	d02e      	beq.n	800bec2 <ArtNetNode::HandlePoll()+0x72>
 800be64:	2201      	movs	r2, #1
 800be66:	f8d0 16cc 	ldr.w	r1, [r0, #1740]	; 0x6cc
 800be6a:	f890 46dc 	ldrb.w	r4, [r0, #1756]	; 0x6dc
 800be6e:	f880 26db 	strb.w	r2, [r0, #1755]	; 0x6db
 800be72:	b979      	cbnz	r1, 800be94 <ArtNetNode::HandlePoll()+0x44>
 800be74:	f8d0 2570 	ldr.w	r2, [r0, #1392]	; 0x570
 800be78:	f8c0 26cc 	str.w	r2, [r0, #1740]	; 0x6cc
 800be7c:	b19c      	cbz	r4, 800bea6 <ArtNetNode::HandlePoll()+0x56>
 800be7e:	f890 36e4 	ldrb.w	r3, [r0, #1764]	; 0x6e4
 800be82:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 800be86:	4293      	cmp	r3, r2
 800be88:	bf28      	it	cs
 800be8a:	4613      	movcs	r3, r2
 800be8c:	f880 36e4 	strb.w	r3, [r0, #1764]	; 0x6e4
 800be90:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800be92:	e010      	b.n	800beb6 <ArtNetNode::HandlePoll()+0x66>
 800be94:	2c00      	cmp	r4, #0
 800be96:	d1f2      	bne.n	800be7e <ArtNetNode::HandlePoll()+0x2e>
 800be98:	f8d0 4570 	ldr.w	r4, [r0, #1392]	; 0x570
 800be9c:	42a1      	cmp	r1, r4
 800be9e:	d002      	beq.n	800bea6 <ArtNetNode::HandlePoll()+0x56>
 800bea0:	f880 26dc 	strb.w	r2, [r0, #1756]	; 0x6dc
 800bea4:	e7eb      	b.n	800be7e <ArtNetNode::HandlePoll()+0x2e>
 800bea6:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 800beaa:	071b      	lsls	r3, r3, #28
 800beac:	f880 26e4 	strb.w	r2, [r0, #1764]	; 0x6e4
 800beb0:	d5ee      	bpl.n	800be90 <ArtNetNode::HandlePoll()+0x40>
 800beb2:	f8d0 3570 	ldr.w	r3, [r0, #1392]	; 0x570
 800beb6:	f8c0 36c8 	str.w	r3, [r0, #1736]	; 0x6c8
 800beba:	2101      	movs	r1, #1
 800bebc:	bc10      	pop	{r4}
 800bebe:	f7ff bf03 	b.w	800bcc8 <ArtNetNode::SendPollRelply(bool)>
 800bec2:	f880 26db 	strb.w	r2, [r0, #1755]	; 0x6db
 800bec6:	f8c0 26c8 	str.w	r2, [r0, #1736]	; 0x6c8
 800beca:	e7f6      	b.n	800beba <ArtNetNode::HandlePoll()+0x6a>

0800becc <ArtNetNode::SendTod(unsigned int)>:
 800becc:	f06f 037e 	mvn.w	r3, #126	; 0x7e
 800bed0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bed4:	2500      	movs	r5, #0
 800bed6:	f880 30ad 	strb.w	r3, [r0, #173]	; 0xad
 800beda:	2301      	movs	r3, #1
 800bedc:	4688      	mov	r8, r1
 800bede:	4604      	mov	r4, r0
 800bee0:	f880 30b0 	strb.w	r3, [r0, #176]	; 0xb0
 800bee4:	f880 50ac 	strb.w	r5, [r0, #172]	; 0xac
 800bee8:	6900      	ldr	r0, [r0, #16]
 800beea:	088f      	lsrs	r7, r1, #2
 800beec:	6803      	ldr	r3, [r0, #0]
 800beee:	68db      	ldr	r3, [r3, #12]
 800bef0:	4798      	blx	r3
 800bef2:	f008 0303 	and.w	r3, r8, #3
 800bef6:	3301      	adds	r3, #1
 800bef8:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 800befc:	1c7b      	adds	r3, r7, #1
 800befe:	b2ff      	uxtb	r7, r7
 800bf00:	f884 50b2 	strb.w	r5, [r4, #178]	; 0xb2
 800bf04:	f884 50b3 	strb.w	r5, [r4, #179]	; 0xb3
 800bf08:	f884 50b4 	strb.w	r5, [r4, #180]	; 0xb4
 800bf0c:	f884 50b5 	strb.w	r5, [r4, #181]	; 0xb5
 800bf10:	f884 50b6 	strb.w	r5, [r4, #182]	; 0xb6
 800bf14:	f884 50b7 	strb.w	r5, [r4, #183]	; 0xb7
 800bf18:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800bf1c:	4427      	add	r7, r4
 800bf1e:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 800bf22:	f884 50ba 	strb.w	r5, [r4, #186]	; 0xba
 800bf26:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800bf2a:	2324      	movs	r3, #36	; 0x24
 800bf2c:	fb03 4308 	mla	r3, r3, r8, r4
 800bf30:	f893 36ea 	ldrb.w	r3, [r3, #1770]	; 0x6ea
 800bf34:	b2c6      	uxtb	r6, r0
 800bf36:	6920      	ldr	r0, [r4, #16]
 800bf38:	f884 50bc 	strb.w	r5, [r4, #188]	; 0xbc
 800bf3c:	f884 50be 	strb.w	r5, [r4, #190]	; 0xbe
 800bf40:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800bf44:	f884 60bd 	strb.w	r6, [r4, #189]	; 0xbd
 800bf48:	f884 60bf 	strb.w	r6, [r4, #191]	; 0xbf
 800bf4c:	6803      	ldr	r3, [r0, #0]
 800bf4e:	4641      	mov	r1, r8
 800bf50:	f104 02c0 	add.w	r2, r4, #192	; 0xc0
 800bf54:	691b      	ldr	r3, [r3, #16]
 800bf56:	4798      	blx	r3
 800bf58:	2206      	movs	r2, #6
 800bf5a:	f641 1336 	movw	r3, #6454	; 0x1936
 800bf5e:	4372      	muls	r2, r6
 800bf60:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800bf64:	9300      	str	r3, [sp, #0]
 800bf66:	4629      	mov	r1, r5
 800bf68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bf6a:	7920      	ldrb	r0, [r4, #4]
 800bf6c:	321c      	adds	r2, #28
 800bf6e:	f004 fc23 	bl	80107b8 <udp_send>
 800bf72:	b002      	add	sp, #8
 800bf74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bf78 <ArtNetNode::HandleTodControl()>:
 800bf78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf7a:	4604      	mov	r4, r0
 800bf7c:	4606      	mov	r6, r0
 800bf7e:	2500      	movs	r5, #0
 800bf80:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bf84:	f890 70bb 	ldrb.w	r7, [r0, #187]	; 0xbb
 800bf88:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800bf8c:	f8b6 36e8 	ldrh.w	r3, [r6, #1768]	; 0x6e8
 800bf90:	42bb      	cmp	r3, r7
 800bf92:	d125      	bne.n	800bfe0 <ArtNetNode::HandleTodControl()+0x68>
 800bf94:	f896 36ec 	ldrb.w	r3, [r6, #1772]	; 0x6ec
 800bf98:	b313      	cbz	r3, 800bfe0 <ArtNetNode::HandleTodControl()+0x68>
 800bf9a:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800bf9e:	b13b      	cbz	r3, 800bfb0 <ArtNetNode::HandleTodControl()+0x38>
 800bfa0:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800bfa4:	b923      	cbnz	r3, 800bfb0 <ArtNetNode::HandleTodControl()+0x38>
 800bfa6:	68a0      	ldr	r0, [r4, #8]
 800bfa8:	4629      	mov	r1, r5
 800bfaa:	6803      	ldr	r3, [r0, #0]
 800bfac:	68db      	ldr	r3, [r3, #12]
 800bfae:	4798      	blx	r3
 800bfb0:	f894 30ba 	ldrb.w	r3, [r4, #186]	; 0xba
 800bfb4:	2b01      	cmp	r3, #1
 800bfb6:	d104      	bne.n	800bfc2 <ArtNetNode::HandleTodControl()+0x4a>
 800bfb8:	6920      	ldr	r0, [r4, #16]
 800bfba:	4629      	mov	r1, r5
 800bfbc:	6803      	ldr	r3, [r0, #0]
 800bfbe:	689b      	ldr	r3, [r3, #8]
 800bfc0:	4798      	blx	r3
 800bfc2:	4629      	mov	r1, r5
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	f7ff ff81 	bl	800becc <ArtNetNode::SendTod(unsigned int)>
 800bfca:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800bfce:	b13b      	cbz	r3, 800bfe0 <ArtNetNode::HandleTodControl()+0x68>
 800bfd0:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800bfd4:	b923      	cbnz	r3, 800bfe0 <ArtNetNode::HandleTodControl()+0x68>
 800bfd6:	68a0      	ldr	r0, [r4, #8]
 800bfd8:	4629      	mov	r1, r5
 800bfda:	6803      	ldr	r3, [r0, #0]
 800bfdc:	689b      	ldr	r3, [r3, #8]
 800bfde:	4798      	blx	r3
 800bfe0:	3501      	adds	r5, #1
 800bfe2:	2d04      	cmp	r5, #4
 800bfe4:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800bfe8:	d1d0      	bne.n	800bf8c <ArtNetNode::HandleTodControl()+0x14>
 800bfea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bfec <ArtNetNode::HandleTodRequest()>:
 800bfec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bfee:	4604      	mov	r4, r0
 800bff0:	4606      	mov	r6, r0
 800bff2:	2500      	movs	r5, #0
 800bff4:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bff8:	f890 70bc 	ldrb.w	r7, [r0, #188]	; 0xbc
 800bffc:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800c000:	f8b6 36e8 	ldrh.w	r3, [r6, #1768]	; 0x6e8
 800c004:	42bb      	cmp	r3, r7
 800c006:	d106      	bne.n	800c016 <ArtNetNode::HandleTodRequest()+0x2a>
 800c008:	f896 36ec 	ldrb.w	r3, [r6, #1772]	; 0x6ec
 800c00c:	b11b      	cbz	r3, 800c016 <ArtNetNode::HandleTodRequest()+0x2a>
 800c00e:	4629      	mov	r1, r5
 800c010:	4620      	mov	r0, r4
 800c012:	f7ff ff5b 	bl	800becc <ArtNetNode::SendTod(unsigned int)>
 800c016:	3501      	adds	r5, #1
 800c018:	2d04      	cmp	r5, #4
 800c01a:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800c01e:	d1ef      	bne.n	800c000 <ArtNetNode::HandleTodRequest()+0x14>
 800c020:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c022 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)>:
 800c022:	b141      	cbz	r1, 800c036 <ArtNetNode::SetRdmHandler(ArtNetRdm*, bool)+0x14>
 800c024:	f890 3097 	ldrb.w	r3, [r0, #151]	; 0x97
 800c028:	6101      	str	r1, [r0, #16]
 800c02a:	f043 0302 	orr.w	r3, r3, #2
 800c02e:	f880 2672 	strb.w	r2, [r0, #1650]	; 0x672
 800c032:	f880 3097 	strb.w	r3, [r0, #151]	; 0x97
 800c036:	4770      	bx	lr

0800c038 <ArtNetNode::HandleRdm()>:
 800c038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c03c:	4604      	mov	r4, r0
 800c03e:	4605      	mov	r5, r0
 800c040:	2600      	movs	r6, #0
 800c042:	f04f 0b01 	mov.w	fp, #1
 800c046:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800c04a:	f890 70bb 	ldrb.w	r7, [r0, #187]	; 0xbb
 800c04e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800c110 <ArtNetNode::HandleRdm()+0xd8>
 800c052:	f100 09a4 	add.w	r9, r0, #164	; 0xa4
 800c056:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800c05a:	f100 08bc 	add.w	r8, r0, #188	; 0xbc
 800c05e:	f8b5 36e8 	ldrh.w	r3, [r5, #1768]	; 0x6e8
 800c062:	42bb      	cmp	r3, r7
 800c064:	d148      	bne.n	800c0f8 <ArtNetNode::HandleRdm()+0xc0>
 800c066:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800c06a:	2b00      	cmp	r3, #0
 800c06c:	d044      	beq.n	800c0f8 <ArtNetNode::HandleRdm()+0xc0>
 800c06e:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800c072:	b9c3      	cbnz	r3, 800c0a6 <ArtNetNode::HandleRdm()+0x6e>
 800c074:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800c078:	2b01      	cmp	r3, #1
 800c07a:	d10c      	bne.n	800c096 <ArtNetNode::HandleRdm()+0x5e>
 800c07c:	69e0      	ldr	r0, [r4, #28]
 800c07e:	b150      	cbz	r0, 800c096 <ArtNetNode::HandleRdm()+0x5e>
 800c080:	6803      	ldr	r3, [r0, #0]
 800c082:	4631      	mov	r1, r6
 800c084:	691b      	ldr	r3, [r3, #16]
 800c086:	4798      	blx	r3
 800c088:	f010 0f89 	tst.w	r0, #137	; 0x89
 800c08c:	bf14      	ite	ne
 800c08e:	2301      	movne	r3, #1
 800c090:	2300      	moveq	r3, #0
 800c092:	f885 3709 	strb.w	r3, [r5, #1801]	; 0x709
 800c096:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800c09a:	b123      	cbz	r3, 800c0a6 <ArtNetNode::HandleRdm()+0x6e>
 800c09c:	68a0      	ldr	r0, [r4, #8]
 800c09e:	4631      	mov	r1, r6
 800c0a0:	6803      	ldr	r3, [r0, #0]
 800c0a2:	68db      	ldr	r3, [r3, #12]
 800c0a4:	4798      	blx	r3
 800c0a6:	6920      	ldr	r0, [r4, #16]
 800c0a8:	4642      	mov	r2, r8
 800c0aa:	6803      	ldr	r3, [r0, #0]
 800c0ac:	4631      	mov	r1, r6
 800c0ae:	695b      	ldr	r3, [r3, #20]
 800c0b0:	4798      	blx	r3
 800c0b2:	b348      	cbz	r0, 800c108 <ArtNetNode::HandleRdm()+0xd0>
 800c0b4:	4641      	mov	r1, r8
 800c0b6:	f884 b0b0 	strb.w	fp, [r4, #176]	; 0xb0
 800c0ba:	7882      	ldrb	r2, [r0, #2]
 800c0bc:	3001      	adds	r0, #1
 800c0be:	1c53      	adds	r3, r2, #1
 800c0c0:	3b01      	subs	r3, #1
 800c0c2:	d304      	bcc.n	800c0ce <ArtNetNode::HandleRdm()+0x96>
 800c0c4:	f810 cb01 	ldrb.w	ip, [r0], #1
 800c0c8:	f801 cb01 	strb.w	ip, [r1], #1
 800c0cc:	e7f8      	b.n	800c0c0 <ArtNetNode::HandleRdm()+0x88>
 800c0ce:	f641 1336 	movw	r3, #6454	; 0x1936
 800c0d2:	4649      	mov	r1, r9
 800c0d4:	9300      	str	r3, [sp, #0]
 800c0d6:	7920      	ldrb	r0, [r4, #4]
 800c0d8:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800c0dc:	3219      	adds	r2, #25
 800c0de:	f004 fb6b 	bl	80107b8 <udp_send>
 800c0e2:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800c0e6:	b13b      	cbz	r3, 800c0f8 <ArtNetNode::HandleRdm()+0xc0>
 800c0e8:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800c0ec:	b923      	cbnz	r3, 800c0f8 <ArtNetNode::HandleRdm()+0xc0>
 800c0ee:	68a0      	ldr	r0, [r4, #8]
 800c0f0:	4631      	mov	r1, r6
 800c0f2:	6803      	ldr	r3, [r0, #0]
 800c0f4:	689b      	ldr	r3, [r3, #8]
 800c0f6:	4798      	blx	r3
 800c0f8:	3601      	adds	r6, #1
 800c0fa:	2e04      	cmp	r6, #4
 800c0fc:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800c100:	d1ad      	bne.n	800c05e <ArtNetNode::HandleRdm()+0x26>
 800c102:	b003      	add	sp, #12
 800c104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c108:	4650      	mov	r0, sl
 800c10a:	f008 f897 	bl	801423c <printf>
 800c10e:	e7e8      	b.n	800c0e2 <ArtNetNode::HandleRdm()+0xaa>
 800c110:	0801774c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, ip, sp, lr}

0800c114 <ArtNetNode::HandleSync()>:
 800c114:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c118:	2600      	movs	r6, #0
 800c11a:	2301      	movs	r3, #1
 800c11c:	4604      	mov	r4, r0
 800c11e:	4605      	mov	r5, r0
 800c120:	46b1      	mov	r9, r6
 800c122:	f880 36dd 	strb.w	r3, [r0, #1757]	; 0x6dd
 800c126:	4b1e      	ldr	r3, [pc, #120]	; (800c1a0 <ArtNetNode::HandleSync()+0x8c>)
 800c128:	4f1e      	ldr	r7, [pc, #120]	; (800c1a4 <ArtNetNode::HandleSync()+0x90>)
 800c12a:	681b      	ldr	r3, [r3, #0]
 800c12c:	f8df 8078 	ldr.w	r8, [pc, #120]	; 800c1a8 <ArtNetNode::HandleSync()+0x94>
 800c130:	f8c0 36d4 	str.w	r3, [r0, #1748]	; 0x6d4
 800c134:	7823      	ldrb	r3, [r4, #0]
 800c136:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800c13a:	d22f      	bcs.n	800c19c <ArtNetNode::HandleSync()+0x88>
 800c13c:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800c140:	bb3b      	cbnz	r3, 800c192 <ArtNetNode::HandleSync()+0x7e>
 800c142:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800c146:	b323      	cbz	r3, 800c192 <ArtNetNode::HandleSync()+0x7e>
 800c148:	f8d8 3000 	ldr.w	r3, [r8]
 800c14c:	68a0      	ldr	r0, [r4, #8]
 800c14e:	07da      	lsls	r2, r3, #31
 800c150:	bf5c      	itt	pl
 800c152:	2301      	movpl	r3, #1
 800c154:	f8c8 3000 	strpl.w	r3, [r8]
 800c158:	6803      	ldr	r3, [r0, #0]
 800c15a:	4631      	mov	r1, r6
 800c15c:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800c160:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 800c164:	f8d7 3600 	ldr.w	r3, [r7, #1536]	; 0x600
 800c168:	47d0      	blx	sl
 800c16a:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800c16e:	b93b      	cbnz	r3, 800c180 <ArtNetNode::HandleSync()+0x6c>
 800c170:	68a0      	ldr	r0, [r4, #8]
 800c172:	4631      	mov	r1, r6
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	689b      	ldr	r3, [r3, #8]
 800c178:	4798      	blx	r3
 800c17a:	2301      	movs	r3, #1
 800c17c:	f885 3709 	strb.w	r3, [r5, #1801]	; 0x709
 800c180:	f8d8 3000 	ldr.w	r3, [r8]
 800c184:	f8c7 9600 	str.w	r9, [r7, #1536]	; 0x600
 800c188:	07db      	lsls	r3, r3, #31
 800c18a:	bf5c      	itt	pl
 800c18c:	2301      	movpl	r3, #1
 800c18e:	f8c8 3000 	strpl.w	r3, [r8]
 800c192:	3601      	adds	r6, #1
 800c194:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800c198:	3524      	adds	r5, #36	; 0x24
 800c19a:	e7cb      	b.n	800c134 <ArtNetNode::HandleSync()+0x20>
 800c19c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c1a0:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800c1a4:	2000012c 	andcs	r0, r0, ip, lsr #2
 800c1a8:	20000128 	andcs	r0, r0, r8, lsr #2

0800c1ac <ArtNetNode::HandleTimeCode()>:
 800c1ac:	4601      	mov	r1, r0
 800c1ae:	68c0      	ldr	r0, [r0, #12]
 800c1b0:	31b2      	adds	r1, #178	; 0xb2
 800c1b2:	6803      	ldr	r3, [r0, #0]
 800c1b4:	691b      	ldr	r3, [r3, #16]
 800c1b6:	4718      	bx	r3

0800c1b8 <ArtNetNode::HandleTimeSync()>:
 800c1b8:	b500      	push	{lr}
 800c1ba:	f890 30b3 	ldrb.w	r3, [r0, #179]	; 0xb3
 800c1be:	b08b      	sub	sp, #44	; 0x2c
 800c1c0:	9301      	str	r3, [sp, #4]
 800c1c2:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800c1c6:	f890 20b8 	ldrb.w	r2, [r0, #184]	; 0xb8
 800c1ca:	9302      	str	r3, [sp, #8]
 800c1cc:	f890 30b5 	ldrb.w	r3, [r0, #181]	; 0xb5
 800c1d0:	a901      	add	r1, sp, #4
 800c1d2:	9303      	str	r3, [sp, #12]
 800c1d4:	f890 30b6 	ldrb.w	r3, [r0, #182]	; 0xb6
 800c1d8:	9304      	str	r3, [sp, #16]
 800c1da:	f890 30b7 	ldrb.w	r3, [r0, #183]	; 0xb7
 800c1de:	9305      	str	r3, [sp, #20]
 800c1e0:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800c1e4:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800c1e8:	9306      	str	r3, [sp, #24]
 800c1ea:	4b03      	ldr	r3, [pc, #12]	; (800c1f8 <ArtNetNode::HandleTimeSync()+0x40>)
 800c1ec:	6818      	ldr	r0, [r3, #0]
 800c1ee:	f007 fbdb 	bl	80139a8 <Hardware::SetTime(tm const*)>
 800c1f2:	b00b      	add	sp, #44	; 0x2c
 800c1f4:	f85d fb04 	ldr.w	pc, [sp], #4
 800c1f8:	2000d388 	andcs	sp, r0, r8, lsl #7

0800c1fc <ArtNetNode::Print()>:
 800c1fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c200:	4605      	mov	r5, r0
 800c202:	4604      	mov	r4, r0
 800c204:	b08b      	sub	sp, #44	; 0x2c
 800c206:	f815 2b44 	ldrb.w	r2, [r5], #68
 800c20a:	2104      	movs	r1, #4
 800c20c:	4853      	ldr	r0, [pc, #332]	; (800c35c <ArtNetNode::Print()+0x160>)
 800c20e:	f008 f815 	bl	801423c <printf>
 800c212:	4b53      	ldr	r3, [pc, #332]	; (800c360 <ArtNetNode::Print()+0x164>)
 800c214:	4853      	ldr	r0, [pc, #332]	; (800c364 <ArtNetNode::Print()+0x168>)
 800c216:	7819      	ldrb	r1, [r3, #0]
 800c218:	785a      	ldrb	r2, [r3, #1]
 800c21a:	f008 f80f 	bl	801423c <printf>
 800c21e:	4629      	mov	r1, r5
 800c220:	4851      	ldr	r0, [pc, #324]	; (800c368 <ArtNetNode::Print()+0x16c>)
 800c222:	f008 f80b 	bl	801423c <printf>
 800c226:	4851      	ldr	r0, [pc, #324]	; (800c36c <ArtNetNode::Print()+0x170>)
 800c228:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800c22c:	f008 f806 	bl	801423c <printf>
 800c230:	f894 36e2 	ldrb.w	r3, [r4, #1762]	; 0x6e2
 800c234:	2b00      	cmp	r3, #0
 800c236:	d044      	beq.n	800c2c2 <ArtNetNode::Print()+0xc6>
 800c238:	484d      	ldr	r0, [pc, #308]	; (800c370 <ArtNetNode::Print()+0x174>)
 800c23a:	f007 ffff 	bl	801423c <printf>
 800c23e:	4626      	mov	r6, r4
 800c240:	2500      	movs	r5, #0
 800c242:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800c374 <ArtNetNode::Print()+0x178>
 800c246:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c378 <ArtNetNode::Print()+0x17c>
 800c24a:	7823      	ldrb	r3, [r4, #0]
 800c24c:	ebb5 0f83 	cmp.w	r5, r3, lsl #2
 800c250:	d237      	bcs.n	800c2c2 <ArtNetNode::Print()+0xc6>
 800c252:	2301      	movs	r3, #1
 800c254:	4629      	mov	r1, r5
 800c256:	4620      	mov	r0, r4
 800c258:	f10d 0225 	add.w	r2, sp, #37	; 0x25
 800c25c:	f7fe fe8a 	bl	800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 800c260:	b360      	cbz	r0, 800c2bc <ArtNetNode::Print()+0xc0>
 800c262:	eb04 0395 	add.w	r3, r4, r5, lsr #2
 800c266:	f893 a03e 	ldrb.w	sl, [r3, #62]	; 0x3e
 800c26a:	f893 b040 	ldrb.w	fp, [r3, #64]	; 0x40
 800c26e:	4629      	mov	r1, r5
 800c270:	2301      	movs	r3, #1
 800c272:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800c276:	4620      	mov	r0, r4
 800c278:	f7fe fe66 	bl	800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800c27c:	f8d6 0700 	ldr.w	r0, [r6, #1792]	; 0x700
 800c280:	493e      	ldr	r1, [pc, #248]	; (800c37c <ArtNetNode::Print()+0x180>)
 800c282:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800c286:	2800      	cmp	r0, #0
 800c288:	bf18      	it	ne
 800c28a:	4641      	movne	r1, r8
 800c28c:	f8bd 2026 	ldrh.w	r2, [sp, #38]	; 0x26
 800c290:	08af      	lsrs	r7, r5, #2
 800c292:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800c296:	e9cd b300 	strd	fp, r3, [sp]
 800c29a:	463a      	mov	r2, r7
 800c29c:	4653      	mov	r3, sl
 800c29e:	4629      	mov	r1, r5
 800c2a0:	4648      	mov	r0, r9
 800c2a2:	f007 ffcb 	bl	801423c <printf>
 800c2a6:	f8d6 1704 	ldr.w	r1, [r6, #1796]	; 0x704
 800c2aa:	4a35      	ldr	r2, [pc, #212]	; (800c380 <ArtNetNode::Print()+0x184>)
 800c2ac:	4b35      	ldr	r3, [pc, #212]	; (800c384 <ArtNetNode::Print()+0x188>)
 800c2ae:	4836      	ldr	r0, [pc, #216]	; (800c388 <ArtNetNode::Print()+0x18c>)
 800c2b0:	2900      	cmp	r1, #0
 800c2b2:	bf0c      	ite	eq
 800c2b4:	4611      	moveq	r1, r2
 800c2b6:	4619      	movne	r1, r3
 800c2b8:	f007 ffc0 	bl	801423c <printf>
 800c2bc:	3501      	adds	r5, #1
 800c2be:	3624      	adds	r6, #36	; 0x24
 800c2c0:	e7c3      	b.n	800c24a <ArtNetNode::Print()+0x4e>
 800c2c2:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800c2c6:	2b00      	cmp	r3, #0
 800c2c8:	d045      	beq.n	800c356 <ArtNetNode::Print()+0x15a>
 800c2ca:	4830      	ldr	r0, [pc, #192]	; (800c38c <ArtNetNode::Print()+0x190>)
 800c2cc:	f007 ffb6 	bl	801423c <printf>
 800c2d0:	f04f 0b00 	mov.w	fp, #0
 800c2d4:	4e2e      	ldr	r6, [pc, #184]	; (800c390 <ArtNetNode::Print()+0x194>)
 800c2d6:	4f2f      	ldr	r7, [pc, #188]	; (800c394 <ArtNetNode::Print()+0x198>)
 800c2d8:	7823      	ldrb	r3, [r4, #0]
 800c2da:	ebbb 0f83 	cmp.w	fp, r3, lsl #2
 800c2de:	d23a      	bcs.n	800c356 <ArtNetNode::Print()+0x15a>
 800c2e0:	2300      	movs	r3, #0
 800c2e2:	4659      	mov	r1, fp
 800c2e4:	4620      	mov	r0, r4
 800c2e6:	f10d 0225 	add.w	r2, sp, #37	; 0x25
 800c2ea:	f7fe fe43 	bl	800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 800c2ee:	b378      	cbz	r0, 800c350 <ArtNetNode::Print()+0x154>
 800c2f0:	eb04 039b 	add.w	r3, r4, fp, lsr #2
 800c2f4:	f893 903e 	ldrb.w	r9, [r3, #62]	; 0x3e
 800c2f8:	f893 a040 	ldrb.w	sl, [r3, #64]	; 0x40
 800c2fc:	eb04 130b 	add.w	r3, r4, fp, lsl #4
 800c300:	f8d3 5810 	ldr.w	r5, [r3, #2064]	; 0x810
 800c304:	ea4f 089b 	mov.w	r8, fp, lsr #2
 800c308:	b925      	cbnz	r5, 800c314 <ArtNetNode::Print()+0x118>
 800c30a:	683b      	ldr	r3, [r7, #0]
 800c30c:	699a      	ldr	r2, [r3, #24]
 800c30e:	691d      	ldr	r5, [r3, #16]
 800c310:	ea65 0502 	orn	r5, r5, r2
 800c314:	2300      	movs	r3, #0
 800c316:	4659      	mov	r1, fp
 800c318:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800c31c:	4620      	mov	r0, r4
 800c31e:	f7fe fe13 	bl	800af48 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800c322:	0e2b      	lsrs	r3, r5, #24
 800c324:	9306      	str	r3, [sp, #24]
 800c326:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800c32a:	9305      	str	r3, [sp, #20]
 800c32c:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800c330:	9304      	str	r3, [sp, #16]
 800c332:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800c336:	b2ed      	uxtb	r5, r5
 800c338:	9302      	str	r3, [sp, #8]
 800c33a:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800c33e:	4642      	mov	r2, r8
 800c340:	e9cd a300 	strd	sl, r3, [sp]
 800c344:	4659      	mov	r1, fp
 800c346:	464b      	mov	r3, r9
 800c348:	4630      	mov	r0, r6
 800c34a:	9503      	str	r5, [sp, #12]
 800c34c:	f007 ff76 	bl	801423c <printf>
 800c350:	f10b 0b01 	add.w	fp, fp, #1
 800c354:	e7c0      	b.n	800c2d8 <ArtNetNode::Print()+0xdc>
 800c356:	b00b      	add	sp, #44	; 0x2c
 800c358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c35c:	08017772 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 800c360:	08017830 	stmdaeq	r1, {r4, r5, fp, ip, sp, lr}
 800c364:	08017780 	stmdaeq	r1, {r7, r8, r9, sl, ip, sp, lr}
 800c368:	08017795 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, ip, sp, lr}
 800c36c:	080177a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, sl, ip, sp, lr}
 800c370:	080177b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800c374:	08017761 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800c378:	080177c2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, ip, sp, lr}
 800c37c:	0801775d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800c380:	08017765 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}
 800c384:	0801776d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
 800c388:	080177ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800c38c:	080177f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800c390:	080177f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800c394:	2000cc60 	andcs	ip, r0, r0, ror #24

0800c398 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>:
 800c398:	b510      	push	{r4, lr}
 800c39a:	2287      	movs	r2, #135	; 0x87
 800c39c:	4604      	mov	r4, r0
 800c39e:	f840 1b04 	str.w	r1, [r0], #4
 800c3a2:	2100      	movs	r1, #0
 800c3a4:	f007 fc1a 	bl	8013bdc <memset>
 800c3a8:	2301      	movs	r3, #1
 800c3aa:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c3ae:	f240 3302 	movw	r3, #770	; 0x302
 800c3b2:	f8a4 306c 	strh.w	r3, [r4, #108]	; 0x6c
 800c3b6:	2304      	movs	r3, #4
 800c3b8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800c3bc:	4b07      	ldr	r3, [pc, #28]	; (800c3dc <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x44>)
 800c3be:	4620      	mov	r0, r4
 800c3c0:	785a      	ldrb	r2, [r3, #1]
 800c3c2:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 800c3c6:	781b      	ldrb	r3, [r3, #0]
 800c3c8:	f884 3065 	strb.w	r3, [r4, #101]	; 0x65
 800c3cc:	230a      	movs	r3, #10
 800c3ce:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800c3d2:	23ff      	movs	r3, #255	; 0xff
 800c3d4:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
 800c3d8:	bd10      	pop	{r4, pc}
 800c3da:	bf00      	nop
 800c3dc:	0801782c 	stmdaeq	r1, {r2, r3, r5, fp, ip, sp, lr}

0800c3e0 <ArtNetParams::Load()>:
 800c3e0:	b508      	push	{r3, lr}
 800c3e2:	2300      	movs	r3, #0
 800c3e4:	4601      	mov	r1, r0
 800c3e6:	6043      	str	r3, [r0, #4]
 800c3e8:	f8a0 3062 	strh.w	r3, [r0, #98]	; 0x62
 800c3ec:	6800      	ldr	r0, [r0, #0]
 800c3ee:	b120      	cbz	r0, 800c3fa <ArtNetParams::Load()+0x1a>
 800c3f0:	6803      	ldr	r3, [r0, #0]
 800c3f2:	3104      	adds	r1, #4
 800c3f4:	68db      	ldr	r3, [r3, #12]
 800c3f6:	4798      	blx	r3
 800c3f8:	2001      	movs	r0, #1
 800c3fa:	bd08      	pop	{r3, pc}

0800c3fc <ArtNetParams::Set(ArtNetNode*)>:
 800c3fc:	6843      	ldr	r3, [r0, #4]
 800c3fe:	2b00      	cmp	r3, #0
 800c400:	f000 808d 	beq.w	800c51e <ArtNetParams::Set(ArtNetNode*)+0x122>
 800c404:	079a      	lsls	r2, r3, #30
 800c406:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c40a:	4604      	mov	r4, r0
 800c40c:	460d      	mov	r5, r1
 800c40e:	d504      	bpl.n	800c41a <ArtNetParams::Set(ArtNetNode*)+0x1e>
 800c410:	f100 0110 	add.w	r1, r0, #16
 800c414:	4628      	mov	r0, r5
 800c416:	f7fe fb57 	bl	800aac8 <ArtNetNode::SetShortName(char const*)>
 800c41a:	6863      	ldr	r3, [r4, #4]
 800c41c:	07db      	lsls	r3, r3, #31
 800c41e:	d504      	bpl.n	800c42a <ArtNetParams::Set(ArtNetNode*)+0x2e>
 800c420:	4628      	mov	r0, r5
 800c422:	f104 0122 	add.w	r1, r4, #34	; 0x22
 800c426:	f7fe fb77 	bl	800ab18 <ArtNetNode::SetLongName(char const*)>
 800c42a:	6863      	ldr	r3, [r4, #4]
 800c42c:	075f      	lsls	r7, r3, #29
 800c42e:	d504      	bpl.n	800c43a <ArtNetParams::Set(ArtNetNode*)+0x3e>
 800c430:	2200      	movs	r2, #0
 800c432:	4628      	mov	r0, r5
 800c434:	7a21      	ldrb	r1, [r4, #8]
 800c436:	f7fe feac 	bl	800b192 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>
 800c43a:	6863      	ldr	r3, [r4, #4]
 800c43c:	071e      	lsls	r6, r3, #28
 800c43e:	d504      	bpl.n	800c44a <ArtNetParams::Set(ArtNetNode*)+0x4e>
 800c440:	2200      	movs	r2, #0
 800c442:	4628      	mov	r0, r5
 800c444:	7a61      	ldrb	r1, [r4, #9]
 800c446:	f7fe fe76 	bl	800b136 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>
 800c44a:	6863      	ldr	r3, [r4, #4]
 800c44c:	0558      	lsls	r0, r3, #21
 800c44e:	d504      	bpl.n	800c45a <ArtNetParams::Set(ArtNetNode*)+0x5e>
 800c450:	4628      	mov	r0, r5
 800c452:	f104 0164 	add.w	r1, r4, #100	; 0x64
 800c456:	f7fe fc29 	bl	800acac <ArtNetNode::SetOemValue(unsigned char const*)>
 800c45a:	6863      	ldr	r3, [r4, #4]
 800c45c:	2600      	movs	r6, #0
 800c45e:	0519      	lsls	r1, r3, #20
 800c460:	bf44      	itt	mi
 800c462:	f44f 727a 	movmi.w	r2, #1000	; 0x3e8
 800c466:	f894 3066 	ldrbmi.w	r3, [r4, #102]	; 0x66
 800c46a:	f44f 2880 	mov.w	r8, #262144	; 0x40000
 800c46e:	bf44      	itt	mi
 800c470:	4353      	mulmi	r3, r2
 800c472:	f8c5 36d0 	strmi.w	r3, [r5, #1744]	; 0x6d0
 800c476:	6863      	ldr	r3, [r4, #4]
 800c478:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
 800c47c:	04da      	lsls	r2, r3, #19
 800c47e:	bf48      	it	mi
 800c480:	2301      	movmi	r3, #1
 800c482:	f04f 0a01 	mov.w	sl, #1
 800c486:	bf48      	it	mi
 800c488:	f885 36e0 	strbmi.w	r3, [r5, #1760]	; 0x6e0
 800c48c:	f104 0770 	add.w	r7, r4, #112	; 0x70
 800c490:	6863      	ldr	r3, [r4, #4]
 800c492:	fa08 f206 	lsl.w	r2, r8, r6
 800c496:	ea32 0303 	bics.w	r3, r2, r3
 800c49a:	bf0c      	ite	eq
 800c49c:	783a      	ldrbeq	r2, [r7, #0]
 800c49e:	f894 206f 	ldrbne.w	r2, [r4, #111]	; 0x6f
 800c4a2:	4631      	mov	r1, r6
 800c4a4:	4628      	mov	r0, r5
 800c4a6:	f7fe fed3 	bl	800b250 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800c4aa:	6863      	ldr	r3, [r4, #4]
 800c4ac:	fa09 f206 	lsl.w	r2, r9, r6
 800c4b0:	ea32 0303 	bics.w	r3, r2, r3
 800c4b4:	bf0c      	ite	eq
 800c4b6:	797a      	ldrbeq	r2, [r7, #5]
 800c4b8:	f894 2074 	ldrbne.w	r2, [r4, #116]	; 0x74
 800c4bc:	4631      	mov	r1, r6
 800c4be:	4628      	mov	r0, r5
 800c4c0:	f7fe fe95 	bl	800b1ee <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800c4c4:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800c4c8:	fa0a f306 	lsl.w	r3, sl, r6
 800c4cc:	b29b      	uxth	r3, r3
 800c4ce:	4393      	bics	r3, r2
 800c4d0:	d109      	bne.n	800c4e6 <ArtNetParams::Set(ArtNetNode*)+0xea>
 800c4d2:	f106 031c 	add.w	r3, r6, #28
 800c4d6:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800c4da:	4631      	mov	r1, r6
 800c4dc:	4628      	mov	r0, r5
 800c4de:	f8d3 200b 	ldr.w	r2, [r3, #11]
 800c4e2:	f7ff f9cf 	bl	800b884 <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)>
 800c4e6:	3601      	adds	r6, #1
 800c4e8:	2e04      	cmp	r6, #4
 800c4ea:	f107 0701 	add.w	r7, r7, #1
 800c4ee:	d1cf      	bne.n	800c490 <ArtNetParams::Set(ArtNetNode*)+0x94>
 800c4f0:	4631      	mov	r1, r6
 800c4f2:	4628      	mov	r0, r5
 800c4f4:	f894 206f 	ldrb.w	r2, [r4, #111]	; 0x6f
 800c4f8:	f7fe feaa 	bl	800b250 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800c4fc:	4631      	mov	r1, r6
 800c4fe:	4628      	mov	r0, r5
 800c500:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 800c504:	3601      	adds	r6, #1
 800c506:	f7fe fe72 	bl	800b1ee <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800c50a:	2e08      	cmp	r6, #8
 800c50c:	d1f0      	bne.n	800c4f0 <ArtNetParams::Set(ArtNetNode*)+0xf4>
 800c50e:	6863      	ldr	r3, [r4, #4]
 800c510:	011b      	lsls	r3, r3, #4
 800c512:	bf44      	itt	mi
 800c514:	2301      	movmi	r3, #1
 800c516:	f885 30a0 	strbmi.w	r3, [r5, #160]	; 0xa0
 800c51a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c51e:	4770      	bx	lr

0800c520 <ArtNetParams::Dump()>:
 800c520:	4770      	bx	lr

0800c522 <ArtNetNode::HandleTrigger()>:
 800c522:	f890 30b2 	ldrb.w	r3, [r0, #178]	; 0xb2
 800c526:	4601      	mov	r1, r0
 800c528:	2bff      	cmp	r3, #255	; 0xff
 800c52a:	d103      	bne.n	800c534 <ArtNetNode::HandleTrigger()+0x12>
 800c52c:	f890 20b3 	ldrb.w	r2, [r0, #179]	; 0xb3
 800c530:	2aff      	cmp	r2, #255	; 0xff
 800c532:	d009      	beq.n	800c548 <ArtNetNode::HandleTrigger()+0x26>
 800c534:	f891 2042 	ldrb.w	r2, [r1, #66]	; 0x42
 800c538:	429a      	cmp	r2, r3
 800c53a:	d10a      	bne.n	800c552 <ArtNetNode::HandleTrigger()+0x30>
 800c53c:	f891 20b3 	ldrb.w	r2, [r1, #179]	; 0xb3
 800c540:	f891 3043 	ldrb.w	r3, [r1, #67]	; 0x43
 800c544:	429a      	cmp	r2, r3
 800c546:	d104      	bne.n	800c552 <ArtNetNode::HandleTrigger()+0x30>
 800c548:	6988      	ldr	r0, [r1, #24]
 800c54a:	31b4      	adds	r1, #180	; 0xb4
 800c54c:	6803      	ldr	r3, [r0, #0]
 800c54e:	689b      	ldr	r3, [r3, #8]
 800c550:	4718      	bx	r3
 800c552:	4770      	bx	lr

0800c554 <e131::universe_to_multicast_ip(unsigned short)>:
 800c554:	b513      	push	{r0, r1, r4, lr}
 800c556:	4604      	mov	r4, r0
 800c558:	a901      	add	r1, sp, #4
 800c55a:	4806      	ldr	r0, [pc, #24]	; (800c574 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800c55c:	f007 fa6c 	bl	8013a38 <inet_aton>
 800c560:	9801      	ldr	r0, [sp, #4]
 800c562:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800c566:	0224      	lsls	r4, r4, #8
 800c568:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800c56c:	4320      	orrs	r0, r4
 800c56e:	b002      	add	sp, #8
 800c570:	bd10      	pop	{r4, pc}
 800c572:	bf00      	nop
 800c574:	08017832 	stmdaeq	r1, {r1, r4, r5, fp, ip, sp, lr}

0800c578 <memset.constprop.0.isra.0>:
 800c578:	2300      	movs	r3, #0
 800c57a:	4401      	add	r1, r0
 800c57c:	4288      	cmp	r0, r1
 800c57e:	d002      	beq.n	800c586 <memset.constprop.0.isra.0+0xe>
 800c580:	f800 3b01 	strb.w	r3, [r0], #1
 800c584:	e7fa      	b.n	800c57c <memset.constprop.0.isra.0+0x4>
 800c586:	4770      	bx	lr

0800c588 <memcpy.isra.0>:
 800c588:	3801      	subs	r0, #1
 800c58a:	440a      	add	r2, r1
 800c58c:	4291      	cmp	r1, r2
 800c58e:	d004      	beq.n	800c59a <memcpy.isra.0+0x12>
 800c590:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c594:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c598:	e7f8      	b.n	800c58c <memcpy.isra.0+0x4>
 800c59a:	4770      	bx	lr

0800c59c <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 800c59c:	f240 6304 	movw	r3, #1540	; 0x604
 800c5a0:	b470      	push	{r4, r5, r6}
 800c5a2:	4605      	mov	r5, r0
 800c5a4:	4608      	mov	r0, r1
 800c5a6:	4353      	muls	r3, r2
 800c5a8:	4611      	mov	r1, r2
 800c5aa:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 800c5ae:	18ea      	adds	r2, r5, r3
 800c5b0:	6803      	ldr	r3, [r0, #0]
 800c5b2:	691e      	ldr	r6, [r3, #16]
 800c5b4:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 800c5b8:	46b4      	mov	ip, r6
 800c5ba:	192a      	adds	r2, r5, r4
 800c5bc:	bc70      	pop	{r4, r5, r6}
 800c5be:	4760      	bx	ip

0800c5c0 <E131Bridge::Start()>:
 800c5c0:	6943      	ldr	r3, [r0, #20]
 800c5c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c5c4:	4604      	mov	r4, r0
 800c5c6:	b35b      	cbz	r3, 800c620 <E131Bridge::Start()+0x60>
 800c5c8:	6983      	ldr	r3, [r0, #24]
 800c5ca:	b9cb      	cbnz	r3, 800c600 <E131Bridge::Start()+0x40>
 800c5cc:	a901      	add	r1, sp, #4
 800c5ce:	4818      	ldr	r0, [pc, #96]	; (800c630 <E131Bridge::Start()+0x70>)
 800c5d0:	f007 fa32 	bl	8013a38 <inet_aton>
 800c5d4:	9b01      	ldr	r3, [sp, #4]
 800c5d6:	f240 207e 	movw	r0, #638	; 0x27e
 800c5da:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800c5de:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800c5e2:	6223      	str	r3, [r4, #32]
 800c5e4:	f007 fa24 	bl	8013a30 <operator new(unsigned int)>
 800c5e8:	61a0      	str	r0, [r4, #24]
 800c5ea:	4620      	mov	r0, r4
 800c5ec:	f000 fdc6 	bl	800d17c <E131Bridge::FillDataPacket()>
 800c5f0:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800c5f4:	f007 fa1c 	bl	8013a30 <operator new(unsigned int)>
 800c5f8:	61e0      	str	r0, [r4, #28]
 800c5fa:	4620      	mov	r0, r4
 800c5fc:	f000 fd14 	bl	800d028 <E131Bridge::FillDiscoveryPacket()>
 800c600:	2500      	movs	r5, #0
 800c602:	270c      	movs	r7, #12
 800c604:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800c608:	fb07 f305 	mul.w	r3, r7, r5
 800c60c:	5cf3      	ldrb	r3, [r6, r3]
 800c60e:	b123      	cbz	r3, 800c61a <E131Bridge::Start()+0x5a>
 800c610:	6960      	ldr	r0, [r4, #20]
 800c612:	4629      	mov	r1, r5
 800c614:	6803      	ldr	r3, [r0, #0]
 800c616:	689b      	ldr	r3, [r3, #8]
 800c618:	4798      	blx	r3
 800c61a:	3501      	adds	r5, #1
 800c61c:	2d08      	cmp	r5, #8
 800c61e:	d1f3      	bne.n	800c608 <E131Bridge::Start()+0x48>
 800c620:	2102      	movs	r1, #2
 800c622:	4b04      	ldr	r3, [pc, #16]	; (800c634 <E131Bridge::Start()+0x74>)
 800c624:	6818      	ldr	r0, [r3, #0]
 800c626:	b003      	add	sp, #12
 800c628:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800c62c:	f007 b91a 	b.w	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800c630:	08017832 	stmdaeq	r1, {r1, r4, r5, fp, ip, sp, lr}
 800c634:	2000d384 	andcs	sp, r0, r4, lsl #7

0800c638 <E131Bridge::Stop()>:
 800c638:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c63c:	2500      	movs	r5, #0
 800c63e:	2301      	movs	r3, #1
 800c640:	4604      	mov	r4, r0
 800c642:	f240 6804 	movw	r8, #1540	; 0x604
 800c646:	462e      	mov	r6, r5
 800c648:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800c64c:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 800c650:	6860      	ldr	r0, [r4, #4]
 800c652:	b118      	cbz	r0, 800c65c <E131Bridge::Stop()+0x24>
 800c654:	6803      	ldr	r3, [r0, #0]
 800c656:	4629      	mov	r1, r5
 800c658:	68db      	ldr	r3, [r3, #12]
 800c65a:	4798      	blx	r3
 800c65c:	f7fe ff72 	bl	800b544 <lightset::Data::Get()>
 800c660:	2344      	movs	r3, #68	; 0x44
 800c662:	fb08 0005 	mla	r0, r8, r5, r0
 800c666:	436b      	muls	r3, r5
 800c668:	3501      	adds	r5, #1
 800c66a:	2d08      	cmp	r5, #8
 800c66c:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800c670:	54fe      	strb	r6, [r7, r3]
 800c672:	d1ed      	bne.n	800c650 <E131Bridge::Stop()+0x18>
 800c674:	6963      	ldr	r3, [r4, #20]
 800c676:	b17b      	cbz	r3, 800c698 <E131Bridge::Stop()+0x60>
 800c678:	2500      	movs	r5, #0
 800c67a:	270c      	movs	r7, #12
 800c67c:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800c680:	fb07 f305 	mul.w	r3, r7, r5
 800c684:	5cf3      	ldrb	r3, [r6, r3]
 800c686:	b123      	cbz	r3, 800c692 <E131Bridge::Stop()+0x5a>
 800c688:	6960      	ldr	r0, [r4, #20]
 800c68a:	4629      	mov	r1, r5
 800c68c:	6803      	ldr	r3, [r0, #0]
 800c68e:	68db      	ldr	r3, [r3, #12]
 800c690:	4798      	blx	r3
 800c692:	3501      	adds	r5, #1
 800c694:	2d08      	cmp	r5, #8
 800c696:	d1f3      	bne.n	800c680 <E131Bridge::Stop()+0x48>
 800c698:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c69c:	4b02      	ldr	r3, [pc, #8]	; (800c6a8 <E131Bridge::Stop()+0x70>)
 800c69e:	2100      	movs	r1, #0
 800c6a0:	6818      	ldr	r0, [r3, #0]
 800c6a2:	f007 b8df 	b.w	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800c6a6:	bf00      	nop
 800c6a8:	2000d384 	andcs	sp, r0, r4, lsl #7

0800c6ac <E131Bridge::SetSourceName(char const*)>:
 800c6ac:	223f      	movs	r2, #63	; 0x3f
 800c6ae:	b510      	push	{r4, lr}
 800c6b0:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800c6b4:	3901      	subs	r1, #1
 800c6b6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c6ba:	b92c      	cbnz	r4, 800c6c8 <E131Bridge::SetSourceName(char const*)+0x1c>
 800c6bc:	441a      	add	r2, r3
 800c6be:	4293      	cmp	r3, r2
 800c6c0:	d006      	beq.n	800c6d0 <E131Bridge::SetSourceName(char const*)+0x24>
 800c6c2:	f803 4b01 	strb.w	r4, [r3], #1
 800c6c6:	e7fa      	b.n	800c6be <E131Bridge::SetSourceName(char const*)+0x12>
 800c6c8:	3a01      	subs	r2, #1
 800c6ca:	f803 4b01 	strb.w	r4, [r3], #1
 800c6ce:	d1f2      	bne.n	800c6b6 <E131Bridge::SetSourceName(char const*)+0xa>
 800c6d0:	2300      	movs	r3, #0
 800c6d2:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 800c6d6:	bd10      	pop	{r4, pc}

0800c6d8 <E131Bridge::E131Bridge()>:
 800c6d8:	2300      	movs	r3, #0
 800c6da:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800c6de:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c6e0:	e9c0 2300 	strd	r2, r3, [r0]
 800c6e4:	2201      	movs	r2, #1
 800c6e6:	4604      	mov	r4, r0
 800c6e8:	2764      	movs	r7, #100	; 0x64
 800c6ea:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c6ee:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800c6f2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800c6f6:	6743      	str	r3, [r0, #116]	; 0x74
 800c6f8:	4b1e      	ldr	r3, [pc, #120]	; (800c774 <E131Bridge::E131Bridge()+0x9c>)
 800c6fa:	7202      	strb	r2, [r0, #8]
 800c6fc:	b093      	sub	sp, #76	; 0x4c
 800c6fe:	6018      	str	r0, [r3, #0]
 800c700:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 800c704:	f500 62e6 	add.w	r2, r0, #1840	; 0x730
 800c708:	f500 66f2 	add.w	r6, r0, #1936	; 0x790
 800c70c:	4628      	mov	r0, r5
 800c70e:	2144      	movs	r1, #68	; 0x44
 800c710:	f7ff ff32 	bl	800c578 <memset.constprop.0.isra.0>
 800c714:	4610      	mov	r0, r2
 800c716:	210c      	movs	r1, #12
 800c718:	f7ff ff2e 	bl	800c578 <memset.constprop.0.isra.0>
 800c71c:	320c      	adds	r2, #12
 800c71e:	f802 7c03 	strb.w	r7, [r2, #-3]
 800c722:	42b2      	cmp	r2, r6
 800c724:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800c728:	d1f0      	bne.n	800c70c <E131Bridge::E131Bridge()+0x34>
 800c72a:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800c72e:	211c      	movs	r1, #28
 800c730:	f7ff ff22 	bl	800c578 <memset.constprop.0.isra.0>
 800c734:	2301      	movs	r3, #1
 800c736:	4d10      	ldr	r5, [pc, #64]	; (800c778 <E131Bridge::E131Bridge()+0xa0>)
 800c738:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800c73c:	4a0f      	ldr	r2, [pc, #60]	; (800c77c <E131Bridge::E131Bridge()+0xa4>)
 800c73e:	682b      	ldr	r3, [r5, #0]
 800c740:	2140      	movs	r1, #64	; 0x40
 800c742:	331c      	adds	r3, #28
 800c744:	9200      	str	r2, [sp, #0]
 800c746:	a802      	add	r0, sp, #8
 800c748:	4a0d      	ldr	r2, [pc, #52]	; (800c780 <E131Bridge::E131Bridge()+0xa8>)
 800c74a:	f007 fd9f 	bl	801428c <snprintf>
 800c74e:	4620      	mov	r0, r4
 800c750:	a902      	add	r1, sp, #8
 800c752:	f7ff ffab 	bl	800c6ac <E131Bridge::SetSourceName(char const*)>
 800c756:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800c75a:	6828      	ldr	r0, [r5, #0]
 800c75c:	f004 fcfc 	bl	8011158 <Network::Begin(unsigned short)>
 800c760:	4621      	mov	r1, r4
 800c762:	4b08      	ldr	r3, [pc, #32]	; (800c784 <E131Bridge::E131Bridge()+0xac>)
 800c764:	f841 0b24 	str.w	r0, [r1], #36
 800c768:	6818      	ldr	r0, [r3, #0]
 800c76a:	f007 f901 	bl	8013970 <Hardware::GetUuid(unsigned char*)>
 800c76e:	4620      	mov	r0, r4
 800c770:	b013      	add	sp, #76	; 0x4c
 800c772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c774:	2000315c 	andcs	r3, r0, ip, asr r1
 800c778:	2000cc60 	andcs	ip, r0, r0, ror #24
 800c77c:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 800c780:	0801783e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp, lr}
 800c784:	2000d388 	andcs	sp, r0, r8, lsl #7

0800c788 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800c788:	b570      	push	{r4, r5, r6, lr}
 800c78a:	4604      	mov	r4, r0
 800c78c:	2300      	movs	r3, #0
 800c78e:	2544      	movs	r5, #68	; 0x44
 800c790:	4610      	mov	r0, r2
 800c792:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 800c796:	4299      	cmp	r1, r3
 800c798:	d004      	beq.n	800c7a4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800c79a:	fb05 f603 	mul.w	r6, r5, r3
 800c79e:	5b96      	ldrh	r6, [r2, r6]
 800c7a0:	4286      	cmp	r6, r0
 800c7a2:	d00e      	beq.n	800c7c2 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800c7a4:	3301      	adds	r3, #1
 800c7a6:	2b08      	cmp	r3, #8
 800c7a8:	d1f5      	bne.n	800c796 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800c7aa:	4b06      	ldr	r3, [pc, #24]	; (800c7c4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800c7ac:	6824      	ldr	r4, [r4, #0]
 800c7ae:	681d      	ldr	r5, [r3, #0]
 800c7b0:	f7ff fed0 	bl	800c554 <e131::universe_to_multicast_ip(unsigned short)>
 800c7b4:	4621      	mov	r1, r4
 800c7b6:	4602      	mov	r2, r0
 800c7b8:	4628      	mov	r0, r5
 800c7ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7be:	f004 bcdf 	b.w	8011180 <Network::LeaveGroup(int, unsigned int)>
 800c7c2:	bd70      	pop	{r4, r5, r6, pc}
 800c7c4:	2000cc60 	andcs	ip, r0, r0, ror #24

0800c7c8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800c7c8:	b570      	push	{r4, r5, r6, lr}
 800c7ca:	4604      	mov	r4, r0
 800c7cc:	461d      	mov	r5, r3
 800c7ce:	b191      	cbz	r1, 800c7f6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 800c7d0:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800c7d4:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800c7d8:	b99a      	cbnz	r2, 800c802 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800c7da:	4b0e      	ldr	r3, [pc, #56]	; (800c814 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 800c7dc:	8035      	strh	r5, [r6, #0]
 800c7de:	4628      	mov	r0, r5
 800c7e0:	6826      	ldr	r6, [r4, #0]
 800c7e2:	681c      	ldr	r4, [r3, #0]
 800c7e4:	f7ff feb6 	bl	800c554 <e131::universe_to_multicast_ip(unsigned short)>
 800c7e8:	4631      	mov	r1, r6
 800c7ea:	4602      	mov	r2, r0
 800c7ec:	4620      	mov	r0, r4
 800c7ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7f2:	f004 bcc2 	b.w	801117a <Network::JoinGroup(int, unsigned int)>
 800c7f6:	b15a      	cbz	r2, 800c810 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800c7f8:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800c7fc:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800c800:	e7ea      	b.n	800c7d8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800c802:	42aa      	cmp	r2, r5
 800c804:	d004      	beq.n	800c810 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800c806:	2108      	movs	r1, #8
 800c808:	4620      	mov	r0, r4
 800c80a:	f7ff ffbd 	bl	800c788 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c80e:	e7e4      	b.n	800c7da <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 800c810:	bd70      	pop	{r4, r5, r6, pc}
 800c812:	bf00      	nop
 800c814:	2000cc60 	andcs	ip, r0, r0, ror #24

0800c818 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800c818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c81c:	4604      	mov	r4, r0
 800c81e:	460d      	mov	r5, r1
 800c820:	461e      	mov	r6, r3
 800c822:	bb02      	cbnz	r2, 800c866 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800c824:	2907      	cmp	r1, #7
 800c826:	d843      	bhi.n	800c8b0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800c828:	230c      	movs	r3, #12
 800c82a:	fb03 0301 	mla	r3, r3, r1, r0
 800c82e:	f893 2732 	ldrb.w	r2, [r3, #1842]	; 0x732
 800c832:	b12a      	cbz	r2, 800c840 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800c834:	f8b3 3730 	ldrh.w	r3, [r3, #1840]	; 0x730
 800c838:	42b3      	cmp	r3, r6
 800c83a:	d109      	bne.n	800c850 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800c83c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c840:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800c844:	3201      	adds	r2, #1
 800c846:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800c84a:	2201      	movs	r2, #1
 800c84c:	f883 2732 	strb.w	r2, [r3, #1842]	; 0x732
 800c850:	210c      	movs	r1, #12
 800c852:	fb01 4405 	mla	r4, r1, r5, r4
 800c856:	4630      	mov	r0, r6
 800c858:	f8a4 6730 	strh.w	r6, [r4, #1840]	; 0x730
 800c85c:	f7ff fe7a 	bl	800c554 <e131::universe_to_multicast_ip(unsigned short)>
 800c860:	f8c4 0734 	str.w	r0, [r4, #1844]	; 0x734
 800c864:	e7ea      	b.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c866:	2a02      	cmp	r2, #2
 800c868:	d122      	bne.n	800c8b0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800c86a:	2907      	cmp	r1, #7
 800c86c:	d8e6      	bhi.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c86e:	2344      	movs	r3, #68	; 0x44
 800c870:	fb03 0301 	mla	r3, r3, r1, r0
 800c874:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800c878:	b152      	cbz	r2, 800c890 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800c87a:	2200      	movs	r2, #0
 800c87c:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800c880:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800c884:	4632      	mov	r2, r6
 800c886:	3b01      	subs	r3, #1
 800c888:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800c88c:	f7ff ff7c 	bl	800c788 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c890:	210c      	movs	r1, #12
 800c892:	fb01 4505 	mla	r5, r1, r5, r4
 800c896:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800c89a:	2b00      	cmp	r3, #0
 800c89c:	d0ce      	beq.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c89e:	2300      	movs	r3, #0
 800c8a0:	f885 3732 	strb.w	r3, [r5, #1842]	; 0x732
 800c8a4:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800c8a8:	3b01      	subs	r3, #1
 800c8aa:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800c8ae:	e7c5      	b.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c8b0:	2344      	movs	r3, #68	; 0x44
 800c8b2:	fb03 4305 	mla	r3, r3, r5, r4
 800c8b6:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800c8ba:	b1d2      	cbz	r2, 800c8f2 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800c8bc:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 800c8c0:	42b3      	cmp	r3, r6
 800c8c2:	d0bb      	beq.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c8c4:	4632      	mov	r2, r6
 800c8c6:	4629      	mov	r1, r5
 800c8c8:	4620      	mov	r0, r4
 800c8ca:	f7ff ff5d 	bl	800c788 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800c8ce:	4b0d      	ldr	r3, [pc, #52]	; (800c904 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800c8d0:	4630      	mov	r0, r6
 800c8d2:	681f      	ldr	r7, [r3, #0]
 800c8d4:	f8d4 8000 	ldr.w	r8, [r4]
 800c8d8:	f7ff fe3c 	bl	800c554 <e131::universe_to_multicast_ip(unsigned short)>
 800c8dc:	4641      	mov	r1, r8
 800c8de:	4602      	mov	r2, r0
 800c8e0:	4638      	mov	r0, r7
 800c8e2:	f004 fc4a 	bl	801117a <Network::JoinGroup(int, unsigned int)>
 800c8e6:	2144      	movs	r1, #68	; 0x44
 800c8e8:	fb01 4405 	mla	r4, r1, r5, r4
 800c8ec:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 800c8f0:	e7a4      	b.n	800c83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800c8f2:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800c8f6:	3201      	adds	r2, #1
 800c8f8:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800c8fc:	2201      	movs	r2, #1
 800c8fe:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800c902:	e7e4      	b.n	800c8ce <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800c904:	2000cc60 	andcs	ip, r0, r0, ror #24

0800c908 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800c908:	b953      	cbnz	r3, 800c920 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800c90a:	2907      	cmp	r1, #7
 800c90c:	d811      	bhi.n	800c932 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800c90e:	230c      	movs	r3, #12
 800c910:	fb03 0001 	mla	r0, r3, r1, r0
 800c914:	f8b0 3730 	ldrh.w	r3, [r0, #1840]	; 0x730
 800c918:	f890 0732 	ldrb.w	r0, [r0, #1842]	; 0x732
 800c91c:	8013      	strh	r3, [r2, #0]
 800c91e:	4770      	bx	lr
 800c920:	2344      	movs	r3, #68	; 0x44
 800c922:	fb03 0001 	mla	r0, r3, r1, r0
 800c926:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 800c92a:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 800c92e:	8013      	strh	r3, [r2, #0]
 800c930:	4770      	bx	lr
 800c932:	4618      	mov	r0, r3
 800c934:	4770      	bx	lr

0800c936 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800c936:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800c93a:	b923      	cbnz	r3, 800c946 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800c93c:	2301      	movs	r3, #1
 800c93e:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800c942:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800c946:	2344      	movs	r3, #68	; 0x44
 800c948:	fb03 0001 	mla	r0, r3, r1, r0
 800c94c:	2301      	movs	r3, #1
 800c94e:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 800c952:	4770      	bx	lr

0800c954 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800c954:	4602      	mov	r2, r0
 800c956:	2044      	movs	r0, #68	; 0x44
 800c958:	4348      	muls	r0, r1
 800c95a:	b570      	push	{r4, r5, r6, lr}
 800c95c:	1815      	adds	r5, r2, r0
 800c95e:	460c      	mov	r4, r1
 800c960:	68d3      	ldr	r3, [r2, #12]
 800c962:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800c966:	1a5b      	subs	r3, r3, r1
 800c968:	f242 7110 	movw	r1, #10000	; 0x2710
 800c96c:	428b      	cmp	r3, r1
 800c96e:	d90a      	bls.n	800c986 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800c970:	2600      	movs	r6, #0
 800c972:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800c976:	2110      	movs	r1, #16
 800c978:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 800c97c:	4410      	add	r0, r2
 800c97e:	f7ff fdfb 	bl	800c578 <memset.constprop.0.isra.0>
 800c982:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800c986:	2044      	movs	r0, #68	; 0x44
 800c988:	4344      	muls	r4, r0
 800c98a:	1915      	adds	r5, r2, r4
 800c98c:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 800c990:	68d3      	ldr	r3, [r2, #12]
 800c992:	1a5b      	subs	r3, r3, r1
 800c994:	f242 7110 	movw	r1, #10000	; 0x2710
 800c998:	428b      	cmp	r3, r1
 800c99a:	d90a      	bls.n	800c9b2 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800c99c:	2600      	movs	r6, #0
 800c99e:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 800c9a2:	2110      	movs	r1, #16
 800c9a4:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800c9a8:	1910      	adds	r0, r2, r4
 800c9aa:	f7ff fde5 	bl	800c578 <memset.constprop.0.isra.0>
 800c9ae:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800c9b2:	4611      	mov	r1, r2
 800c9b4:	2300      	movs	r3, #0
 800c9b6:	f502 7008 	add.w	r0, r2, #544	; 0x220
 800c9ba:	f891 4551 	ldrb.w	r4, [r1, #1361]	; 0x551
 800c9be:	3144      	adds	r1, #68	; 0x44
 800c9c0:	4281      	cmp	r1, r0
 800c9c2:	ea43 0304 	orr.w	r3, r3, r4
 800c9c6:	d1f8      	bne.n	800c9ba <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 800c9c8:	b923      	cbnz	r3, 800c9d4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800c9ca:	2101      	movs	r1, #1
 800c9cc:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800c9d0:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800c9d4:	bd70      	pop	{r4, r5, r6, pc}

0800c9d6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800c9d6:	2244      	movs	r2, #68	; 0x44
 800c9d8:	fb02 0101 	mla	r1, r2, r1, r0
 800c9dc:	68c3      	ldr	r3, [r0, #12]
 800c9de:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 800c9e2:	b510      	push	{r4, lr}
 800c9e4:	1a1a      	subs	r2, r3, r0
 800c9e6:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 800c9ea:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 800c9ee:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800c9f2:	b171      	cbz	r1, 800ca12 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800c9f4:	1b1b      	subs	r3, r3, r4
 800c9f6:	b128      	cbz	r0, 800ca04 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800c9f8:	f242 700f 	movw	r0, #9999	; 0x270f
 800c9fc:	4283      	cmp	r3, r0
 800c9fe:	d90d      	bls.n	800ca1c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800ca00:	4282      	cmp	r2, r0
 800ca02:	e002      	b.n	800ca0a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800ca04:	f242 7010 	movw	r0, #10000	; 0x2710
 800ca08:	4283      	cmp	r3, r0
 800ca0a:	bf94      	ite	ls
 800ca0c:	2000      	movls	r0, #0
 800ca0e:	2001      	movhi	r0, #1
 800ca10:	bd10      	pop	{r4, pc}
 800ca12:	2800      	cmp	r0, #0
 800ca14:	d0fc      	beq.n	800ca10 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800ca16:	f242 7010 	movw	r0, #10000	; 0x2710
 800ca1a:	e7f1      	b.n	800ca00 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800ca1c:	2000      	movs	r0, #0
 800ca1e:	e7f7      	b.n	800ca10 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800ca20 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800ca20:	684a      	ldr	r2, [r1, #4]
 800ca22:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800ca24:	b510      	push	{r4, lr}
 800ca26:	429a      	cmp	r2, r3
 800ca28:	d10b      	bne.n	800ca42 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 800ca2a:	f100 0392 	add.w	r3, r0, #146	; 0x92
 800ca2e:	3108      	adds	r1, #8
 800ca30:	30a2      	adds	r0, #162	; 0xa2
 800ca32:	4298      	cmp	r0, r3
 800ca34:	d007      	beq.n	800ca46 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800ca36:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ca3a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ca3e:	4294      	cmp	r4, r2
 800ca40:	d0f7      	beq.n	800ca32 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800ca42:	2000      	movs	r0, #0
 800ca44:	bd10      	pop	{r4, pc}
 800ca46:	2001      	movs	r0, #1
 800ca48:	e7fc      	b.n	800ca44 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

0800ca4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800ca4c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca50:	2301      	movs	r3, #1
 800ca52:	4605      	mov	r5, r0
 800ca54:	4690      	mov	r8, r2
 800ca56:	460f      	mov	r7, r1
 800ca58:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800ca5c:	2900      	cmp	r1, #0
 800ca5e:	d03d      	beq.n	800cadc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800ca60:	2a00      	cmp	r2, #0
 800ca62:	d03b      	beq.n	800cadc <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800ca64:	2600      	movs	r6, #0
 800ca66:	f240 6804 	movw	r8, #1540	; 0x604
 800ca6a:	4637      	mov	r7, r6
 800ca6c:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800ca70:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800ca74:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 800ca78:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800ca7c:	b1e3      	cbz	r3, 800cab8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 800ca7e:	6868      	ldr	r0, [r5, #4]
 800ca80:	4631      	mov	r1, r6
 800ca82:	6803      	ldr	r3, [r0, #0]
 800ca84:	68db      	ldr	r3, [r3, #12]
 800ca86:	4798      	blx	r3
 800ca88:	2110      	movs	r1, #16
 800ca8a:	4620      	mov	r0, r4
 800ca8c:	f844 7c04 	str.w	r7, [r4, #-4]
 800ca90:	f7ff fd72 	bl	800c578 <memset.constprop.0.isra.0>
 800ca94:	2110      	movs	r1, #16
 800ca96:	f104 001c 	add.w	r0, r4, #28
 800ca9a:	61a7      	str	r7, [r4, #24]
 800ca9c:	f7ff fd6c 	bl	800c578 <memset.constprop.0.isra.0>
 800caa0:	f7fe fd50 	bl	800b544 <lightset::Data::Get()>
 800caa4:	fb08 0006 	mla	r0, r8, r6, r0
 800caa8:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800caac:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 800cab0:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 800cab4:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 800cab8:	3601      	adds	r6, #1
 800caba:	2e08      	cmp	r6, #8
 800cabc:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800cac0:	d1da      	bne.n	800ca78 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 800cac2:	4b25      	ldr	r3, [pc, #148]	; (800cb58 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 800cac4:	2102      	movs	r1, #2
 800cac6:	6818      	ldr	r0, [r3, #0]
 800cac8:	f006 fecc 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800cacc:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 800cad0:	f023 0302 	bic.w	r3, r3, #2
 800cad4:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 800cad8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cadc:	2600      	movs	r6, #0
 800cade:	f240 6b04 	movw	fp, #1540	; 0x604
 800cae2:	46b1      	mov	r9, r6
 800cae4:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 800cae8:	7ea3      	ldrb	r3, [r4, #26]
 800caea:	b373      	cbz	r3, 800cb4a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800caec:	b15f      	cbz	r7, 800cb06 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800caee:	f854 3c20 	ldr.w	r3, [r4, #-32]
 800caf2:	b143      	cbz	r3, 800cb06 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800caf4:	2110      	movs	r1, #16
 800caf6:	f844 9c20 	str.w	r9, [r4, #-32]
 800cafa:	f1a4 001c 	sub.w	r0, r4, #28
 800cafe:	f7ff fd3b 	bl	800c578 <memset.constprop.0.isra.0>
 800cb02:	f884 9019 	strb.w	r9, [r4, #25]
 800cb06:	f1b8 0f00 	cmp.w	r8, #0
 800cb0a:	d00a      	beq.n	800cb22 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800cb0c:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800cb10:	b13b      	cbz	r3, 800cb22 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800cb12:	2110      	movs	r1, #16
 800cb14:	4620      	mov	r0, r4
 800cb16:	f844 9c04 	str.w	r9, [r4, #-4]
 800cb1a:	f7ff fd2d 	bl	800c578 <memset.constprop.0.isra.0>
 800cb1e:	f884 9019 	strb.w	r9, [r4, #25]
 800cb22:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800cb26:	f1ba 0f00 	cmp.w	sl, #0
 800cb2a:	d10e      	bne.n	800cb4a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800cb2c:	6868      	ldr	r0, [r5, #4]
 800cb2e:	4631      	mov	r1, r6
 800cb30:	6803      	ldr	r3, [r0, #0]
 800cb32:	68db      	ldr	r3, [r3, #12]
 800cb34:	4798      	blx	r3
 800cb36:	f7fe fd05 	bl	800b544 <lightset::Data::Get()>
 800cb3a:	fb0b 0006 	mla	r0, fp, r6, r0
 800cb3e:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800cb42:	f884 a018 	strb.w	sl, [r4, #24]
 800cb46:	f884 a01a 	strb.w	sl, [r4, #26]
 800cb4a:	3601      	adds	r6, #1
 800cb4c:	2e08      	cmp	r6, #8
 800cb4e:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800cb52:	d1c9      	bne.n	800cae8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800cb54:	e7b5      	b.n	800cac2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800cb56:	bf00      	nop
 800cb58:	2000d384 	andcs	sp, r0, r4, lsl #7

0800cb5c <E131Bridge::HandleDmx()>:
 800cb5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cb60:	4604      	mov	r4, r0
 800cb62:	2600      	movs	r6, #0
 800cb64:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800cb68:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800cb6c:	ba7f      	rev16	r7, r7
 800cb6e:	b2bf      	uxth	r7, r7
 800cb70:	3f01      	subs	r7, #1
 800cb72:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800cb76:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800cb7a:	b353      	cbz	r3, 800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cb7c:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800cb80:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800cb84:	ba5b      	rev16	r3, r3
 800cb86:	b29b      	uxth	r3, r3
 800cb88:	429a      	cmp	r2, r3
 800cb8a:	d122      	bne.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cb8c:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800cb90:	f1a5 0108 	sub.w	r1, r5, #8
 800cb94:	4620      	mov	r0, r4
 800cb96:	9300      	str	r3, [sp, #0]
 800cb98:	f7ff ff42 	bl	800ca20 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800cb9c:	f105 0114 	add.w	r1, r5, #20
 800cba0:	4682      	mov	sl, r0
 800cba2:	4620      	mov	r0, r4
 800cba4:	f7ff ff3c 	bl	800ca20 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800cba8:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800cbac:	4680      	mov	r8, r0
 800cbae:	f1ba 0f00 	cmp.w	sl, #0
 800cbb2:	d016      	beq.n	800cbe2 <E131Bridge::HandleDmx()+0x86>
 800cbb4:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cbb8:	7c2a      	ldrb	r2, [r5, #16]
 800cbba:	742b      	strb	r3, [r5, #16]
 800cbbc:	3313      	adds	r3, #19
 800cbbe:	1a9b      	subs	r3, r3, r2
 800cbc0:	b2db      	uxtb	r3, r3
 800cbc2:	2b13      	cmp	r3, #19
 800cbc4:	d905      	bls.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cbc6:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800cbca:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800cbce:	2a00      	cmp	r2, #0
 800cbd0:	da10      	bge.n	800cbf4 <E131Bridge::HandleDmx()+0x98>
 800cbd2:	3601      	adds	r6, #1
 800cbd4:	2e08      	cmp	r6, #8
 800cbd6:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800cbda:	d1cc      	bne.n	800cb76 <E131Bridge::HandleDmx()+0x1a>
 800cbdc:	b003      	add	sp, #12
 800cbde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cbe2:	2800      	cmp	r0, #0
 800cbe4:	d0ef      	beq.n	800cbc6 <E131Bridge::HandleDmx()+0x6a>
 800cbe6:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cbea:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800cbee:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800cbf2:	e7e3      	b.n	800cbbc <E131Bridge::HandleDmx()+0x60>
 800cbf4:	065a      	lsls	r2, r3, #25
 800cbf6:	d50b      	bpl.n	800cc10 <E131Bridge::HandleDmx()+0xb4>
 800cbf8:	f1ba 0f00 	cmp.w	sl, #0
 800cbfc:	d102      	bne.n	800cc04 <E131Bridge::HandleDmx()+0xa8>
 800cbfe:	f1b8 0f00 	cmp.w	r8, #0
 800cc02:	d0e6      	beq.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cc04:	4642      	mov	r2, r8
 800cc06:	4651      	mov	r1, sl
 800cc08:	4620      	mov	r0, r4
 800cc0a:	f7ff ff1f 	bl	800ca4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800cc0e:	e7e0      	b.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cc10:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800cc14:	b133      	cbz	r3, 800cc24 <E131Bridge::HandleDmx()+0xc8>
 800cc16:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800cc1a:	b91b      	cbnz	r3, 800cc24 <E131Bridge::HandleDmx()+0xc8>
 800cc1c:	4631      	mov	r1, r6
 800cc1e:	4620      	mov	r0, r4
 800cc20:	f7ff fe98 	bl	800c954 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800cc24:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800cc28:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800cc2c:	4293      	cmp	r3, r2
 800cc2e:	d259      	bcs.n	800cce4 <E131Bridge::HandleDmx()+0x188>
 800cc30:	4631      	mov	r1, r6
 800cc32:	4620      	mov	r0, r4
 800cc34:	9301      	str	r3, [sp, #4]
 800cc36:	f7ff fece 	bl	800c9d6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800cc3a:	2800      	cmp	r0, #0
 800cc3c:	d0c9      	beq.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cc3e:	9b01      	ldr	r3, [sp, #4]
 800cc40:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800cc44:	9b00      	ldr	r3, [sp, #0]
 800cc46:	2b00      	cmp	r3, #0
 800cc48:	d154      	bne.n	800ccf4 <E131Bridge::HandleDmx()+0x198>
 800cc4a:	f1bb 0f00 	cmp.w	fp, #0
 800cc4e:	d15c      	bne.n	800cd0a <E131Bridge::HandleDmx()+0x1ae>
 800cc50:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800cc52:	2210      	movs	r2, #16
 800cc54:	f845 3c04 	str.w	r3, [r5, #-4]
 800cc58:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cc5c:	4628      	mov	r0, r5
 800cc5e:	742b      	strb	r3, [r5, #16]
 800cc60:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800cc64:	f7ff fc90 	bl	800c588 <memcpy.isra.0>
 800cc68:	68e3      	ldr	r3, [r4, #12]
 800cc6a:	463a      	mov	r2, r7
 800cc6c:	4649      	mov	r1, r9
 800cc6e:	4630      	mov	r0, r6
 800cc70:	f845 3c08 	str.w	r3, [r5, #-8]
 800cc74:	f7fe fc72 	bl	800b55c <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800cc78:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800cc7c:	069b      	lsls	r3, r3, #26
 800cc7e:	f100 80ad 	bmi.w	800cddc <E131Bridge::HandleDmx()+0x280>
 800cc82:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800cc86:	b29a      	uxth	r2, r3
 800cc88:	2a00      	cmp	r2, #0
 800cc8a:	f000 80ab 	beq.w	800cde4 <E131Bridge::HandleDmx()+0x288>
 800cc8e:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800cc92:	2a00      	cmp	r2, #0
 800cc94:	f040 80a6 	bne.w	800cde4 <E131Bridge::HandleDmx()+0x288>
 800cc98:	ba5b      	rev16	r3, r3
 800cc9a:	b29b      	uxth	r3, r3
 800cc9c:	f1ba 0f00 	cmp.w	sl, #0
 800cca0:	f040 8099 	bne.w	800cdd6 <E131Bridge::HandleDmx()+0x27a>
 800cca4:	f1b8 0f00 	cmp.w	r8, #0
 800cca8:	f040 8095 	bne.w	800cdd6 <E131Bridge::HandleDmx()+0x27a>
 800ccac:	69aa      	ldr	r2, [r5, #24]
 800ccae:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800ccb2:	3a00      	subs	r2, #0
 800ccb4:	bf18      	it	ne
 800ccb6:	2201      	movne	r2, #1
 800ccb8:	3900      	subs	r1, #0
 800ccba:	bf18      	it	ne
 800ccbc:	2101      	movne	r1, #1
 800ccbe:	4620      	mov	r0, r4
 800ccc0:	f7ff fd82 	bl	800c7c8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800ccc4:	f240 1301 	movw	r3, #257	; 0x101
 800ccc8:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800cccc:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800ccd0:	2b00      	cmp	r3, #0
 800ccd2:	f040 808c 	bne.w	800cdee <E131Bridge::HandleDmx()+0x292>
 800ccd6:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800ccda:	f043 0302 	orr.w	r3, r3, #2
 800ccde:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800cce2:	e776      	b.n	800cbd2 <E131Bridge::HandleDmx()+0x76>
 800cce4:	d9ae      	bls.n	800cc44 <E131Bridge::HandleDmx()+0xe8>
 800cce6:	2200      	movs	r2, #0
 800cce8:	f845 2c04 	str.w	r2, [r5, #-4]
 800ccec:	61aa      	str	r2, [r5, #24]
 800ccee:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800ccf2:	e7a5      	b.n	800cc40 <E131Bridge::HandleDmx()+0xe4>
 800ccf4:	f1ba 0f00 	cmp.w	sl, #0
 800ccf8:	f000 8092 	beq.w	800ce20 <E131Bridge::HandleDmx()+0x2c4>
 800ccfc:	f1bb 0f00 	cmp.w	fp, #0
 800cd00:	d15c      	bne.n	800cdbc <E131Bridge::HandleDmx()+0x260>
 800cd02:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cd06:	742b      	strb	r3, [r5, #16]
 800cd08:	e7ae      	b.n	800cc68 <E131Bridge::HandleDmx()+0x10c>
 800cd0a:	f1b8 0f00 	cmp.w	r8, #0
 800cd0e:	d03b      	beq.n	800cd88 <E131Bridge::HandleDmx()+0x22c>
 800cd10:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cd14:	f240 6b04 	movw	fp, #1540	; 0x604
 800cd18:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800cd1c:	68e3      	ldr	r3, [r4, #12]
 800cd1e:	fb0b fb06 	mul.w	fp, fp, r6
 800cd22:	616b      	str	r3, [r5, #20]
 800cd24:	f7fe fc0e 	bl	800b544 <lightset::Data::Get()>
 800cd28:	4603      	mov	r3, r0
 800cd2a:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800cd2e:	463a      	mov	r2, r7
 800cd30:	4649      	mov	r1, r9
 800cd32:	4418      	add	r0, r3
 800cd34:	9300      	str	r3, [sp, #0]
 800cd36:	f7ff fc27 	bl	800c588 <memcpy.isra.0>
 800cd3a:	9b00      	ldr	r3, [sp, #0]
 800cd3c:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800cd40:	eb03 020b 	add.w	r2, r3, fp
 800cd44:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800cd48:	4649      	mov	r1, r9
 800cd4a:	463a      	mov	r2, r7
 800cd4c:	4418      	add	r0, r3
 800cd4e:	f7ff fc1b 	bl	800c588 <memcpy.isra.0>
 800cd52:	e791      	b.n	800cc78 <E131Bridge::HandleDmx()+0x11c>
 800cd54:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800cd56:	2210      	movs	r2, #16
 800cd58:	61ab      	str	r3, [r5, #24]
 800cd5a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cd5e:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800cd62:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800cd66:	f105 001c 	add.w	r0, r5, #28
 800cd6a:	f7ff fc0d 	bl	800c588 <memcpy.isra.0>
 800cd6e:	68e3      	ldr	r3, [r4, #12]
 800cd70:	4631      	mov	r1, r6
 800cd72:	4620      	mov	r0, r4
 800cd74:	616b      	str	r3, [r5, #20]
 800cd76:	f7ff fdde 	bl	800c936 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800cd7a:	463a      	mov	r2, r7
 800cd7c:	4649      	mov	r1, r9
 800cd7e:	4630      	mov	r0, r6
 800cd80:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800cd82:	f7fe fc31 	bl	800b5e8 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800cd86:	e777      	b.n	800cc78 <E131Bridge::HandleDmx()+0x11c>
 800cd88:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800cd8a:	2210      	movs	r2, #16
 800cd8c:	f845 3c04 	str.w	r3, [r5, #-4]
 800cd90:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cd94:	4628      	mov	r0, r5
 800cd96:	742b      	strb	r3, [r5, #16]
 800cd98:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800cd9c:	f7ff fbf4 	bl	800c588 <memcpy.isra.0>
 800cda0:	68e3      	ldr	r3, [r4, #12]
 800cda2:	4631      	mov	r1, r6
 800cda4:	4620      	mov	r0, r4
 800cda6:	f845 3c08 	str.w	r3, [r5, #-8]
 800cdaa:	f7ff fdc4 	bl	800c936 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800cdae:	463a      	mov	r2, r7
 800cdb0:	4649      	mov	r1, r9
 800cdb2:	4630      	mov	r0, r6
 800cdb4:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800cdb6:	f7fe fbee 	bl	800b596 <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800cdba:	e75d      	b.n	800cc78 <E131Bridge::HandleDmx()+0x11c>
 800cdbc:	f1b8 0f00 	cmp.w	r8, #0
 800cdc0:	d103      	bne.n	800cdca <E131Bridge::HandleDmx()+0x26e>
 800cdc2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800cdc6:	742b      	strb	r3, [r5, #16]
 800cdc8:	e7ea      	b.n	800cda0 <E131Bridge::HandleDmx()+0x244>
 800cdca:	481b      	ldr	r0, [pc, #108]	; (800ce38 <E131Bridge::HandleDmx()+0x2dc>)
 800cdcc:	b003      	add	sp, #12
 800cdce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdd2:	f007 ba33 	b.w	801423c <printf>
 800cdd6:	4642      	mov	r2, r8
 800cdd8:	4651      	mov	r1, sl
 800cdda:	e770      	b.n	800ccbe <E131Bridge::HandleDmx()+0x162>
 800cddc:	f04f 0300 	mov.w	r3, #0
 800cde0:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800cde4:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	f47f af6f 	bne.w	800cccc <E131Bridge::HandleDmx()+0x170>
 800cdee:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800cdf2:	f7fe fba7 	bl	800b544 <lightset::Data::Get()>
 800cdf6:	4632      	mov	r2, r6
 800cdf8:	4641      	mov	r1, r8
 800cdfa:	f7ff fbcf 	bl	800c59c <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800cdfe:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800ce02:	2b00      	cmp	r3, #0
 800ce04:	f47f af67 	bne.w	800ccd6 <E131Bridge::HandleDmx()+0x17a>
 800ce08:	6860      	ldr	r0, [r4, #4]
 800ce0a:	4631      	mov	r1, r6
 800ce0c:	6803      	ldr	r3, [r0, #0]
 800ce0e:	689b      	ldr	r3, [r3, #8]
 800ce10:	4798      	blx	r3
 800ce12:	f04f 0301 	mov.w	r3, #1
 800ce16:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800ce1a:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800ce1e:	e75a      	b.n	800ccd6 <E131Bridge::HandleDmx()+0x17a>
 800ce20:	f1bb 0f00 	cmp.w	fp, #0
 800ce24:	d096      	beq.n	800cd54 <E131Bridge::HandleDmx()+0x1f8>
 800ce26:	f1b8 0f00 	cmp.w	r8, #0
 800ce2a:	d0ce      	beq.n	800cdca <E131Bridge::HandleDmx()+0x26e>
 800ce2c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ce30:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ce34:	e79b      	b.n	800cd6e <E131Bridge::HandleDmx()+0x212>
 800ce36:	bf00      	nop
 800ce38:	08017847 	stmdaeq	r1, {r0, r1, r2, r6, fp, ip, sp, lr}

0800ce3c <E131Bridge::IsStatusChanged()>:
 800ce3c:	4603      	mov	r3, r0
 800ce3e:	f890 04f8 	ldrb.w	r0, [r0, #1272]	; 0x4f8
 800ce42:	b110      	cbz	r0, 800ce4a <E131Bridge::IsStatusChanged()+0xe>
 800ce44:	2200      	movs	r2, #0
 800ce46:	f883 24f8 	strb.w	r2, [r3, #1272]	; 0x4f8
 800ce4a:	4770      	bx	lr

0800ce4c <E131Bridge::Clear(unsigned int)>:
 800ce4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce4e:	460d      	mov	r5, r1
 800ce50:	4604      	mov	r4, r0
 800ce52:	6847      	ldr	r7, [r0, #4]
 800ce54:	f7fe fb76 	bl	800b544 <lightset::Data::Get()>
 800ce58:	f240 6204 	movw	r2, #1540	; 0x604
 800ce5c:	4606      	mov	r6, r0
 800ce5e:	436a      	muls	r2, r5
 800ce60:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 800ce64:	4430      	add	r0, r6
 800ce66:	f44f 7100 	mov.w	r1, #512	; 0x200
 800ce6a:	f7ff fb85 	bl	800c578 <memset.constprop.0.isra.0>
 800ce6e:	4432      	add	r2, r6
 800ce70:	4630      	mov	r0, r6
 800ce72:	2644      	movs	r6, #68	; 0x44
 800ce74:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ce78:	fb06 4605 	mla	r6, r6, r5, r4
 800ce7c:	f8c2 3600 	str.w	r3, [r2, #1536]	; 0x600
 800ce80:	4639      	mov	r1, r7
 800ce82:	462a      	mov	r2, r5
 800ce84:	f7ff fb8a 	bl	800c59c <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800ce88:	f896 3512 	ldrb.w	r3, [r6, #1298]	; 0x512
 800ce8c:	b153      	cbz	r3, 800cea4 <E131Bridge::Clear(unsigned int)+0x58>
 800ce8e:	f896 3552 	ldrb.w	r3, [r6, #1362]	; 0x552
 800ce92:	b93b      	cbnz	r3, 800cea4 <E131Bridge::Clear(unsigned int)+0x58>
 800ce94:	6860      	ldr	r0, [r4, #4]
 800ce96:	4629      	mov	r1, r5
 800ce98:	6803      	ldr	r3, [r0, #0]
 800ce9a:	689b      	ldr	r3, [r3, #8]
 800ce9c:	4798      	blx	r3
 800ce9e:	2301      	movs	r3, #1
 800cea0:	f886 3552 	strb.w	r3, [r6, #1362]	; 0x552
 800cea4:	2300      	movs	r3, #0
 800cea6:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800ceaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ceac <E131Bridge::IsValidRoot()>:
 800ceac:	4a0d      	ldr	r2, [pc, #52]	; (800cee4 <E131Bridge::IsValidRoot()+0x38>)
 800ceae:	b530      	push	{r4, r5, lr}
 800ceb0:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800ceb4:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 800ceb8:	42ab      	cmp	r3, r5
 800ceba:	d007      	beq.n	800cecc <E131Bridge::IsValidRoot()+0x20>
 800cebc:	f813 4b01 	ldrb.w	r4, [r3], #1
 800cec0:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cec4:	428c      	cmp	r4, r1
 800cec6:	d0f7      	beq.n	800ceb8 <E131Bridge::IsValidRoot()+0xc>
 800cec8:	2000      	movs	r0, #0
 800ceca:	e008      	b.n	800cede <E131Bridge::IsValidRoot()+0x32>
 800cecc:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800ced0:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800ced4:	d004      	beq.n	800cee0 <E131Bridge::IsValidRoot()+0x34>
 800ced6:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800ceda:	4258      	negs	r0, r3
 800cedc:	4158      	adcs	r0, r3
 800cede:	bd30      	pop	{r4, r5, pc}
 800cee0:	2001      	movs	r0, #1
 800cee2:	e7fc      	b.n	800cede <E131Bridge::IsValidRoot()+0x32>
 800cee4:	080179b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, ip, sp, lr}

0800cee8 <E131Bridge::IsValidDataPacket()>:
 800cee8:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800ceec:	2b02      	cmp	r3, #2
 800ceee:	d10d      	bne.n	800cf0c <E131Bridge::IsValidDataPacket()+0x24>
 800cef0:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800cef4:	2ba1      	cmp	r3, #161	; 0xa1
 800cef6:	d109      	bne.n	800cf0c <E131Bridge::IsValidDataPacket()+0x24>
 800cef8:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800cefc:	b933      	cbnz	r3, 800cf0c <E131Bridge::IsValidDataPacket()+0x24>
 800cefe:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800cf02:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800cf06:	4258      	negs	r0, r3
 800cf08:	4158      	adcs	r0, r3
 800cf0a:	4770      	bx	lr
 800cf0c:	2000      	movs	r0, #0
 800cf0e:	4770      	bx	lr

0800cf10 <E131Bridge::Run()>:
 800cf10:	b530      	push	{r4, r5, lr}
 800cf12:	4601      	mov	r1, r0
 800cf14:	4604      	mov	r4, r0
 800cf16:	b085      	sub	sp, #20
 800cf18:	f10d 030e 	add.w	r3, sp, #14
 800cf1c:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800cf20:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800cf24:	9300      	str	r3, [sp, #0]
 800cf26:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800cf2a:	f003 fbe9 	bl	8010700 <udp_recv>
 800cf2e:	4b3c      	ldr	r3, [pc, #240]	; (800d020 <E131Bridge::Run()+0x110>)
 800cf30:	681d      	ldr	r5, [r3, #0]
 800cf32:	60e5      	str	r5, [r4, #12]
 800cf34:	2800      	cmp	r0, #0
 800cf36:	d13b      	bne.n	800cfb0 <E131Bridge::Run()+0xa0>
 800cf38:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800cf3c:	b183      	cbz	r3, 800cf60 <E131Bridge::Run()+0x50>
 800cf3e:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800cf42:	bb73      	cbnz	r3, 800cfa2 <E131Bridge::Run()+0x92>
 800cf44:	6923      	ldr	r3, [r4, #16]
 800cf46:	1aed      	subs	r5, r5, r3
 800cf48:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800cf4c:	429d      	cmp	r5, r3
 800cf4e:	d928      	bls.n	800cfa2 <E131Bridge::Run()+0x92>
 800cf50:	6863      	ldr	r3, [r4, #4]
 800cf52:	b9eb      	cbnz	r3, 800cf90 <E131Bridge::Run()+0x80>
 800cf54:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800cf58:	f023 0302 	bic.w	r3, r3, #2
 800cf5c:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800cf60:	6963      	ldr	r3, [r4, #20]
 800cf62:	b12b      	cbz	r3, 800cf70 <E131Bridge::Run()+0x60>
 800cf64:	4620      	mov	r0, r4
 800cf66:	f000 f94f 	bl	800d208 <E131Bridge::HandleDmxIn()>
 800cf6a:	4620      	mov	r0, r4
 800cf6c:	f000 f8ca 	bl	800d104 <E131Bridge::SendDiscoveryPacket()>
 800cf70:	7a23      	ldrb	r3, [r4, #8]
 800cf72:	b15b      	cbz	r3, 800cf8c <E131Bridge::Run()+0x7c>
 800cf74:	4b2b      	ldr	r3, [pc, #172]	; (800d024 <E131Bridge::Run()+0x114>)
 800cf76:	6818      	ldr	r0, [r3, #0]
 800cf78:	6843      	ldr	r3, [r0, #4]
 800cf7a:	2b04      	cmp	r3, #4
 800cf7c:	d006      	beq.n	800cf8c <E131Bridge::Run()+0x7c>
 800cf7e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800cf82:	2b00      	cmp	r3, #0
 800cf84:	d049      	beq.n	800d01a <E131Bridge::Run()+0x10a>
 800cf86:	2103      	movs	r1, #3
 800cf88:	f006 fc6c 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800cf8c:	b005      	add	sp, #20
 800cf8e:	bd30      	pop	{r4, r5, pc}
 800cf90:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800cf94:	2b00      	cmp	r3, #0
 800cf96:	d1dd      	bne.n	800cf54 <E131Bridge::Run()+0x44>
 800cf98:	2201      	movs	r2, #1
 800cf9a:	4620      	mov	r0, r4
 800cf9c:	4611      	mov	r1, r2
 800cf9e:	f7ff fd55 	bl	800ca4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800cfa2:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800cfa6:	1a9b      	subs	r3, r3, r2
 800cfa8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800cfac:	d3d8      	bcc.n	800cf60 <E131Bridge::Run()+0x50>
 800cfae:	e7d1      	b.n	800cf54 <E131Bridge::Run()+0x44>
 800cfb0:	4620      	mov	r0, r4
 800cfb2:	f7ff ff7b 	bl	800ceac <E131Bridge::IsValidRoot()>
 800cfb6:	2800      	cmp	r0, #0
 800cfb8:	d0e8      	beq.n	800cf8c <E131Bridge::Run()+0x7c>
 800cfba:	2300      	movs	r3, #0
 800cfbc:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800cfc0:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800cfc4:	6125      	str	r5, [r4, #16]
 800cfc6:	b15b      	cbz	r3, 800cfe0 <E131Bridge::Run()+0xd0>
 800cfc8:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800cfcc:	b943      	cbnz	r3, 800cfe0 <E131Bridge::Run()+0xd0>
 800cfce:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800cfd2:	1aad      	subs	r5, r5, r2
 800cfd4:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800cfd8:	4295      	cmp	r5, r2
 800cfda:	bf88      	it	hi
 800cfdc:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800cfe0:	6863      	ldr	r3, [r4, #4]
 800cfe2:	2b00      	cmp	r3, #0
 800cfe4:	d0bc      	beq.n	800cf60 <E131Bridge::Run()+0x50>
 800cfe6:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800cfea:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800cfee:	ba1a      	rev	r2, r3
 800cff0:	d108      	bne.n	800d004 <E131Bridge::Run()+0xf4>
 800cff2:	4620      	mov	r0, r4
 800cff4:	f7ff ff78 	bl	800cee8 <E131Bridge::IsValidDataPacket()>
 800cff8:	2800      	cmp	r0, #0
 800cffa:	d0b1      	beq.n	800cf60 <E131Bridge::Run()+0x50>
 800cffc:	4620      	mov	r0, r4
 800cffe:	f7ff fdad 	bl	800cb5c <E131Bridge::HandleDmx()>
 800d002:	e7ad      	b.n	800cf60 <E131Bridge::Run()+0x50>
 800d004:	2a08      	cmp	r2, #8
 800d006:	d1ab      	bne.n	800cf60 <E131Bridge::Run()+0x50>
 800d008:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d00c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d010:	d1a6      	bne.n	800cf60 <E131Bridge::Run()+0x50>
 800d012:	4620      	mov	r0, r4
 800d014:	f000 f972 	bl	800d2fc <E131Bridge::HandleSynchronization()>
 800d018:	e7a2      	b.n	800cf60 <E131Bridge::Run()+0x50>
 800d01a:	2102      	movs	r1, #2
 800d01c:	e7b4      	b.n	800cf88 <E131Bridge::Run()+0x78>
 800d01e:	bf00      	nop
 800d020:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800d024:	2000d384 	andcs	sp, r0, r4, lsl #7

0800d028 <E131Bridge::FillDiscoveryPacket()>:
 800d028:	2200      	movs	r2, #0
 800d02a:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d02e:	b510      	push	{r4, lr}
 800d030:	333c      	adds	r3, #60	; 0x3c
 800d032:	005b      	lsls	r3, r3, #1
 800d034:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800d038:	69c3      	ldr	r3, [r0, #28]
 800d03a:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800d03e:	428b      	cmp	r3, r1
 800d040:	d002      	beq.n	800d048 <E131Bridge::FillDiscoveryPacket()+0x20>
 800d042:	f803 2b01 	strb.w	r2, [r3], #1
 800d046:	e7fa      	b.n	800d03e <E131Bridge::FillDiscoveryPacket()+0x16>
 800d048:	69c3      	ldr	r3, [r0, #28]
 800d04a:	492d      	ldr	r1, [pc, #180]	; (800d100 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800d04c:	701a      	strb	r2, [r3, #0]
 800d04e:	2210      	movs	r2, #16
 800d050:	705a      	strb	r2, [r3, #1]
 800d052:	1d1a      	adds	r2, r3, #4
 800d054:	3310      	adds	r3, #16
 800d056:	4293      	cmp	r3, r2
 800d058:	d004      	beq.n	800d064 <E131Bridge::FillDiscoveryPacket()+0x3c>
 800d05a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d05e:	f802 4b01 	strb.w	r4, [r2], #1
 800d062:	e7f8      	b.n	800d056 <E131Bridge::FillDiscoveryPacket()+0x2e>
 800d064:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800d068:	69c3      	ldr	r3, [r0, #28]
 800d06a:	3234      	adds	r2, #52	; 0x34
 800d06c:	0052      	lsls	r2, r2, #1
 800d06e:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d072:	ba52      	rev16	r2, r2
 800d074:	821a      	strh	r2, [r3, #16]
 800d076:	2200      	movs	r2, #0
 800d078:	749a      	strb	r2, [r3, #18]
 800d07a:	74da      	strb	r2, [r3, #19]
 800d07c:	751a      	strb	r2, [r3, #20]
 800d07e:	2208      	movs	r2, #8
 800d080:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800d084:	755a      	strb	r2, [r3, #21]
 800d086:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800d08a:	3316      	adds	r3, #22
 800d08c:	42a1      	cmp	r1, r4
 800d08e:	d004      	beq.n	800d09a <E131Bridge::FillDiscoveryPacket()+0x72>
 800d090:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d094:	f803 2b01 	strb.w	r2, [r3], #1
 800d098:	e7f8      	b.n	800d08c <E131Bridge::FillDiscoveryPacket()+0x64>
 800d09a:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800d09e:	69c3      	ldr	r3, [r0, #28]
 800d0a0:	3229      	adds	r2, #41	; 0x29
 800d0a2:	0052      	lsls	r2, r2, #1
 800d0a4:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d0a8:	ba52      	rev16	r2, r2
 800d0aa:	84da      	strh	r2, [r3, #38]	; 0x26
 800d0ac:	2200      	movs	r2, #0
 800d0ae:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800d0b2:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800d0b6:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800d0ba:	2202      	movs	r2, #2
 800d0bc:	332c      	adds	r3, #44	; 0x2c
 800d0be:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d0c2:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800d0c6:	42a1      	cmp	r1, r4
 800d0c8:	d004      	beq.n	800d0d4 <E131Bridge::FillDiscoveryPacket()+0xac>
 800d0ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d0ce:	f803 2b01 	strb.w	r2, [r3], #1
 800d0d2:	e7f8      	b.n	800d0c6 <E131Bridge::FillDiscoveryPacket()+0x9e>
 800d0d4:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d0d8:	69c2      	ldr	r2, [r0, #28]
 800d0da:	3304      	adds	r3, #4
 800d0dc:	005b      	lsls	r3, r3, #1
 800d0de:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800d0e2:	ba5b      	rev16	r3, r3
 800d0e4:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800d0e8:	2300      	movs	r3, #0
 800d0ea:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800d0ee:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800d0f2:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800d0f6:	2301      	movs	r3, #1
 800d0f8:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800d0fc:	bd10      	pop	{r4, pc}
 800d0fe:	bf00      	nop
 800d100:	080179b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, ip, sp, lr}

0800d104 <E131Bridge::SendDiscoveryPacket()>:
 800d104:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d106:	f242 710f 	movw	r1, #9999	; 0x270f
 800d10a:	68c2      	ldr	r2, [r0, #12]
 800d10c:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800d110:	4604      	mov	r4, r0
 800d112:	1ad3      	subs	r3, r2, r3
 800d114:	428b      	cmp	r3, r1
 800d116:	d924      	bls.n	800d162 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800d118:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d11c:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800d120:	b1ab      	cbz	r3, 800d14e <E131Bridge::SendDiscoveryPacket()+0x4a>
 800d122:	2500      	movs	r5, #0
 800d124:	462e      	mov	r6, r5
 800d126:	2300      	movs	r3, #0
 800d128:	4629      	mov	r1, r5
 800d12a:	4620      	mov	r0, r4
 800d12c:	f10d 020e 	add.w	r2, sp, #14
 800d130:	f7ff fbea 	bl	800c908 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800d134:	b140      	cbz	r0, 800d148 <E131Bridge::SendDiscoveryPacket()+0x44>
 800d136:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d13a:	69e2      	ldr	r2, [r4, #28]
 800d13c:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800d140:	ba5b      	rev16	r3, r3
 800d142:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800d146:	3601      	adds	r6, #1
 800d148:	3501      	adds	r5, #1
 800d14a:	2d08      	cmp	r5, #8
 800d14c:	d1eb      	bne.n	800d126 <E131Bridge::SendDiscoveryPacket()+0x22>
 800d14e:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800d152:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800d156:	9300      	str	r3, [sp, #0]
 800d158:	69e1      	ldr	r1, [r4, #28]
 800d15a:	6a23      	ldr	r3, [r4, #32]
 800d15c:	7820      	ldrb	r0, [r4, #0]
 800d15e:	f003 fb2b 	bl	80107b8 <udp_send>
 800d162:	b004      	add	sp, #16
 800d164:	bd70      	pop	{r4, r5, r6, pc}

0800d166 <memcpy.isra.0>:
 800d166:	3801      	subs	r0, #1
 800d168:	440a      	add	r2, r1
 800d16a:	4291      	cmp	r1, r2
 800d16c:	d004      	beq.n	800d178 <memcpy.isra.0+0x12>
 800d16e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d172:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d176:	e7f8      	b.n	800d16a <memcpy.isra.0+0x4>
 800d178:	4770      	bx	lr
	...

0800d17c <E131Bridge::FillDataPacket()>:
 800d17c:	b570      	push	{r4, r5, r6, lr}
 800d17e:	2400      	movs	r4, #0
 800d180:	2610      	movs	r6, #16
 800d182:	4605      	mov	r5, r0
 800d184:	6980      	ldr	r0, [r0, #24]
 800d186:	220c      	movs	r2, #12
 800d188:	7046      	strb	r6, [r0, #1]
 800d18a:	7004      	strb	r4, [r0, #0]
 800d18c:	7084      	strb	r4, [r0, #2]
 800d18e:	70c4      	strb	r4, [r0, #3]
 800d190:	491c      	ldr	r1, [pc, #112]	; (800d204 <E131Bridge::FillDataPacket()+0x88>)
 800d192:	3004      	adds	r0, #4
 800d194:	f7ff ffe7 	bl	800d166 <memcpy.isra.0>
 800d198:	2304      	movs	r3, #4
 800d19a:	4632      	mov	r2, r6
 800d19c:	2602      	movs	r6, #2
 800d19e:	69a8      	ldr	r0, [r5, #24]
 800d1a0:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800d1a4:	7543      	strb	r3, [r0, #21]
 800d1a6:	7484      	strb	r4, [r0, #18]
 800d1a8:	74c4      	strb	r4, [r0, #19]
 800d1aa:	7504      	strb	r4, [r0, #20]
 800d1ac:	3016      	adds	r0, #22
 800d1ae:	f7ff ffda 	bl	800d166 <memcpy.isra.0>
 800d1b2:	69a8      	ldr	r0, [r5, #24]
 800d1b4:	2240      	movs	r2, #64	; 0x40
 800d1b6:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800d1ba:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800d1be:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800d1c2:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800d1c6:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800d1ca:	302c      	adds	r0, #44	; 0x2c
 800d1cc:	f7ff ffcb 	bl	800d166 <memcpy.isra.0>
 800d1d0:	22a1      	movs	r2, #161	; 0xa1
 800d1d2:	69ab      	ldr	r3, [r5, #24]
 800d1d4:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800d1d8:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800d1dc:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800d1e0:	69ab      	ldr	r3, [r5, #24]
 800d1e2:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800d1e6:	69ab      	ldr	r3, [r5, #24]
 800d1e8:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800d1ec:	2201      	movs	r2, #1
 800d1ee:	69ab      	ldr	r3, [r5, #24]
 800d1f0:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800d1f4:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800d1f8:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800d1fc:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800d200:	bd70      	pop	{r4, r5, r6, pc}
 800d202:	bf00      	nop
 800d204:	080179b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, ip, sp, lr}

0800d208 <E131Bridge::HandleDmxIn()>:
 800d208:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d20c:	4604      	mov	r4, r0
 800d20e:	4605      	mov	r5, r0
 800d210:	2600      	movs	r6, #0
 800d212:	4f39      	ldr	r7, [pc, #228]	; (800d2f8 <E131Bridge::HandleDmxIn()+0xf0>)
 800d214:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800d218:	2b00      	cmp	r3, #0
 800d21a:	d053      	beq.n	800d2c4 <E131Bridge::HandleDmxIn()+0xbc>
 800d21c:	6960      	ldr	r0, [r4, #20]
 800d21e:	4631      	mov	r1, r6
 800d220:	6803      	ldr	r3, [r0, #0]
 800d222:	aa02      	add	r2, sp, #8
 800d224:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800d228:	ab03      	add	r3, sp, #12
 800d22a:	47c0      	blx	r8
 800d22c:	4601      	mov	r1, r0
 800d22e:	2800      	cmp	r0, #0
 800d230:	d050      	beq.n	800d2d4 <E131Bridge::HandleDmxIn()+0xcc>
 800d232:	9b02      	ldr	r3, [sp, #8]
 800d234:	69a0      	ldr	r0, [r4, #24]
 800d236:	b29b      	uxth	r3, r3
 800d238:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800d23c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d240:	ba52      	rev16	r2, r2
 800d242:	8202      	strh	r2, [r0, #16]
 800d244:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800d248:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d24c:	ba52      	rev16	r2, r2
 800d24e:	84c2      	strh	r2, [r0, #38]	; 0x26
 800d250:	f895 2739 	ldrb.w	r2, [r5, #1849]	; 0x739
 800d254:	330a      	adds	r3, #10
 800d256:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800d25a:	f895 2738 	ldrb.w	r2, [r5, #1848]	; 0x738
 800d25e:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800d262:	1c50      	adds	r0, r2, #1
 800d264:	f885 0738 	strb.w	r0, [r5, #1848]	; 0x738
 800d268:	69a0      	ldr	r0, [r4, #24]
 800d26a:	ba5b      	rev16	r3, r3
 800d26c:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800d270:	f8b5 2730 	ldrh.w	r2, [r5, #1840]	; 0x730
 800d274:	69a0      	ldr	r0, [r4, #24]
 800d276:	ba52      	rev16	r2, r2
 800d278:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800d27c:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800d280:	9a02      	ldr	r2, [sp, #8]
 800d282:	307d      	adds	r0, #125	; 0x7d
 800d284:	f7ff ff6f 	bl	800d166 <memcpy.isra.0>
 800d288:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d28c:	69a1      	ldr	r1, [r4, #24]
 800d28e:	ba53      	rev16	r3, r2
 800d290:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800d294:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800d298:	327d      	adds	r2, #125	; 0x7d
 800d29a:	9300      	str	r3, [sp, #0]
 800d29c:	f8d5 3734 	ldr.w	r3, [r5, #1844]	; 0x734
 800d2a0:	b292      	uxth	r2, r2
 800d2a2:	7820      	ldrb	r0, [r4, #0]
 800d2a4:	f003 fa88 	bl	80107b8 <udp_send>
 800d2a8:	2301      	movs	r3, #1
 800d2aa:	683a      	ldr	r2, [r7, #0]
 800d2ac:	40b3      	lsls	r3, r6
 800d2ae:	ea33 0102 	bics.w	r1, r3, r2
 800d2b2:	d007      	beq.n	800d2c4 <E131Bridge::HandleDmxIn()+0xbc>
 800d2b4:	4313      	orrs	r3, r2
 800d2b6:	603b      	str	r3, [r7, #0]
 800d2b8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d2bc:	f043 0301 	orr.w	r3, r3, #1
 800d2c0:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800d2c4:	3601      	adds	r6, #1
 800d2c6:	2e08      	cmp	r6, #8
 800d2c8:	f105 050c 	add.w	r5, r5, #12
 800d2cc:	d1a2      	bne.n	800d214 <E131Bridge::HandleDmxIn()+0xc>
 800d2ce:	b004      	add	sp, #16
 800d2d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d2d4:	9b03      	ldr	r3, [sp, #12]
 800d2d6:	2b00      	cmp	r3, #0
 800d2d8:	d1f4      	bne.n	800d2c4 <E131Bridge::HandleDmxIn()+0xbc>
 800d2da:	2301      	movs	r3, #1
 800d2dc:	fa03 f206 	lsl.w	r2, r3, r6
 800d2e0:	683b      	ldr	r3, [r7, #0]
 800d2e2:	ea23 0302 	bic.w	r3, r3, r2
 800d2e6:	603b      	str	r3, [r7, #0]
 800d2e8:	2b00      	cmp	r3, #0
 800d2ea:	d1eb      	bne.n	800d2c4 <E131Bridge::HandleDmxIn()+0xbc>
 800d2ec:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d2f0:	f023 0301 	bic.w	r3, r3, #1
 800d2f4:	e7e4      	b.n	800d2c0 <E131Bridge::HandleDmxIn()+0xb8>
 800d2f6:	bf00      	nop
 800d2f8:	20003160 	andcs	r3, r0, r0, ror #2

0800d2fc <E131Bridge::HandleSynchronization()>:
 800d2fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d300:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800d304:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800d308:	ba5b      	rev16	r3, r3
 800d30a:	b29b      	uxth	r3, r3
 800d30c:	429a      	cmp	r2, r3
 800d30e:	4604      	mov	r4, r0
 800d310:	d00a      	beq.n	800d328 <E131Bridge::HandleSynchronization()+0x2c>
 800d312:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800d316:	429a      	cmp	r2, r3
 800d318:	d006      	beq.n	800d328 <E131Bridge::HandleSynchronization()+0x2c>
 800d31a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d31e:	4b23      	ldr	r3, [pc, #140]	; (800d3ac <E131Bridge::HandleSynchronization()+0xb0>)
 800d320:	2102      	movs	r1, #2
 800d322:	6818      	ldr	r0, [r3, #0]
 800d324:	f006 ba9e 	b.w	8013864 <LedBlink::SetMode(ledblink::Mode)>
 800d328:	2500      	movs	r5, #0
 800d32a:	4627      	mov	r7, r4
 800d32c:	46a9      	mov	r9, r5
 800d32e:	68e3      	ldr	r3, [r4, #12]
 800d330:	4e1f      	ldr	r6, [pc, #124]	; (800d3b0 <E131Bridge::HandleSynchronization()+0xb4>)
 800d332:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800d3b4 <E131Bridge::HandleSynchronization()+0xb8>
 800d336:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800d33a:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800d33e:	b323      	cbz	r3, 800d38a <E131Bridge::HandleSynchronization()+0x8e>
 800d340:	f8d8 3000 	ldr.w	r3, [r8]
 800d344:	6860      	ldr	r0, [r4, #4]
 800d346:	07da      	lsls	r2, r3, #31
 800d348:	bf5c      	itt	pl
 800d34a:	2301      	movpl	r3, #1
 800d34c:	f8c8 3000 	strpl.w	r3, [r8]
 800d350:	6803      	ldr	r3, [r0, #0]
 800d352:	4629      	mov	r1, r5
 800d354:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800d358:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800d35c:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800d360:	47d0      	blx	sl
 800d362:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800d366:	b93b      	cbnz	r3, 800d378 <E131Bridge::HandleSynchronization()+0x7c>
 800d368:	6860      	ldr	r0, [r4, #4]
 800d36a:	4629      	mov	r1, r5
 800d36c:	6803      	ldr	r3, [r0, #0]
 800d36e:	689b      	ldr	r3, [r3, #8]
 800d370:	4798      	blx	r3
 800d372:	2301      	movs	r3, #1
 800d374:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800d378:	f8d8 3000 	ldr.w	r3, [r8]
 800d37c:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800d380:	07db      	lsls	r3, r3, #31
 800d382:	bf5c      	itt	pl
 800d384:	2301      	movpl	r3, #1
 800d386:	f8c8 3000 	strpl.w	r3, [r8]
 800d38a:	3501      	adds	r5, #1
 800d38c:	2d08      	cmp	r5, #8
 800d38e:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800d392:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800d396:	d1d0      	bne.n	800d33a <E131Bridge::HandleSynchronization()+0x3e>
 800d398:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800d39a:	b120      	cbz	r0, 800d3a6 <E131Bridge::HandleSynchronization()+0xaa>
 800d39c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3a0:	6803      	ldr	r3, [r0, #0]
 800d3a2:	689b      	ldr	r3, [r3, #8]
 800d3a4:	4718      	bx	r3
 800d3a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3aa:	bf00      	nop
 800d3ac:	2000d384 	andcs	sp, r0, r4, lsl #7
 800d3b0:	2000012c 	andcs	r0, r0, ip, lsr #2
 800d3b4:	20000128 	andcs	r0, r0, r8, lsr #2

0800d3b8 <E131Bridge::Print()>:
 800d3b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d3bc:	2500      	movs	r5, #0
 800d3be:	4604      	mov	r4, r0
 800d3c0:	b08c      	sub	sp, #48	; 0x30
 800d3c2:	a902      	add	r1, sp, #8
 800d3c4:	3024      	adds	r0, #36	; 0x24
 800d3c6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800d3ca:	f000 ffaf 	bl	800e32c <uuid_unparse>
 800d3ce:	482c      	ldr	r0, [pc, #176]	; (800d480 <E131Bridge::Print()+0xc8>)
 800d3d0:	f006 ff34 	bl	801423c <printf>
 800d3d4:	4b2b      	ldr	r3, [pc, #172]	; (800d484 <E131Bridge::Print()+0xcc>)
 800d3d6:	482c      	ldr	r0, [pc, #176]	; (800d488 <E131Bridge::Print()+0xd0>)
 800d3d8:	7819      	ldrb	r1, [r3, #0]
 800d3da:	785a      	ldrb	r2, [r3, #1]
 800d3dc:	f006 ff2e 	bl	801423c <printf>
 800d3e0:	482a      	ldr	r0, [pc, #168]	; (800d48c <E131Bridge::Print()+0xd4>)
 800d3e2:	a902      	add	r1, sp, #8
 800d3e4:	f006 ff2a 	bl	801423c <printf>
 800d3e8:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800d3ec:	b303      	cbz	r3, 800d430 <E131Bridge::Print()+0x78>
 800d3ee:	4828      	ldr	r0, [pc, #160]	; (800d490 <E131Bridge::Print()+0xd8>)
 800d3f0:	f006 ff24 	bl	801423c <printf>
 800d3f4:	4e27      	ldr	r6, [pc, #156]	; (800d494 <E131Bridge::Print()+0xdc>)
 800d3f6:	4f28      	ldr	r7, [pc, #160]	; (800d498 <E131Bridge::Print()+0xe0>)
 800d3f8:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800d49c <E131Bridge::Print()+0xe4>
 800d3fc:	2301      	movs	r3, #1
 800d3fe:	4629      	mov	r1, r5
 800d400:	4620      	mov	r0, r4
 800d402:	f10d 0206 	add.w	r2, sp, #6
 800d406:	f7ff fa7f 	bl	800c908 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800d40a:	b170      	cbz	r0, 800d42a <E131Bridge::Print()+0x72>
 800d40c:	2344      	movs	r3, #68	; 0x44
 800d40e:	436b      	muls	r3, r5
 800d410:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800d414:	58d3      	ldr	r3, [r2, r3]
 800d416:	4629      	mov	r1, r5
 800d418:	2b00      	cmp	r3, #0
 800d41a:	bf0c      	ite	eq
 800d41c:	4633      	moveq	r3, r6
 800d41e:	463b      	movne	r3, r7
 800d420:	4640      	mov	r0, r8
 800d422:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d426:	f006 ff09 	bl	801423c <printf>
 800d42a:	3501      	adds	r5, #1
 800d42c:	2d08      	cmp	r5, #8
 800d42e:	d1e5      	bne.n	800d3fc <E131Bridge::Print()+0x44>
 800d430:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800d434:	b1d3      	cbz	r3, 800d46c <E131Bridge::Print()+0xb4>
 800d436:	481a      	ldr	r0, [pc, #104]	; (800d4a0 <E131Bridge::Print()+0xe8>)
 800d438:	f006 ff00 	bl	801423c <printf>
 800d43c:	2500      	movs	r5, #0
 800d43e:	4e19      	ldr	r6, [pc, #100]	; (800d4a4 <E131Bridge::Print()+0xec>)
 800d440:	2300      	movs	r3, #0
 800d442:	4629      	mov	r1, r5
 800d444:	4620      	mov	r0, r4
 800d446:	f10d 0206 	add.w	r2, sp, #6
 800d44a:	f7ff fa5d 	bl	800c908 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800d44e:	b150      	cbz	r0, 800d466 <E131Bridge::Print()+0xae>
 800d450:	230c      	movs	r3, #12
 800d452:	436b      	muls	r3, r5
 800d454:	f204 7239 	addw	r2, r4, #1849	; 0x739
 800d458:	5cd3      	ldrb	r3, [r2, r3]
 800d45a:	4629      	mov	r1, r5
 800d45c:	4630      	mov	r0, r6
 800d45e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d462:	f006 feeb 	bl	801423c <printf>
 800d466:	3501      	adds	r5, #1
 800d468:	2d08      	cmp	r5, #8
 800d46a:	d1e9      	bne.n	800d440 <E131Bridge::Print()+0x88>
 800d46c:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800d470:	b113      	cbz	r3, 800d478 <E131Bridge::Print()+0xc0>
 800d472:	480d      	ldr	r0, [pc, #52]	; (800d4a8 <E131Bridge::Print()+0xf0>)
 800d474:	f006 fee2 	bl	801423c <printf>
 800d478:	b00c      	add	sp, #48	; 0x30
 800d47a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d47e:	bf00      	nop
 800d480:	08017874 	stmdaeq	r1, {r2, r4, r5, r6, fp, ip, sp, lr}
 800d484:	080179bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, fp, ip, sp, lr}
 800d488:	0801787c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip, sp, lr}
 800d48c:	0801788f 	stmdaeq	r1, {r0, r1, r2, r3, r7, fp, ip, sp, lr}
 800d490:	080177b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 800d494:	0801775d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800d498:	08017761 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 800d49c:	0801789f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, fp, ip, sp, lr}
 800d4a0:	080177f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 800d4a4:	080178be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, ip, sp, lr}
 800d4a8:	080178dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, fp, ip, sp, lr}

0800d4ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800d4ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d4ae:	88c5      	ldrh	r5, [r0, #6]
 800d4b0:	8886      	ldrh	r6, [r0, #4]
 800d4b2:	42b5      	cmp	r5, r6
 800d4b4:	d216      	bcs.n	800d4e4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800d4b6:	4604      	mov	r4, r0
 800d4b8:	6800      	ldr	r0, [r0, #0]
 800d4ba:	4428      	add	r0, r5
 800d4bc:	1b75      	subs	r5, r6, r5
 800d4be:	7a26      	ldrb	r6, [r4, #8]
 800d4c0:	b923      	cbnz	r3, 800d4cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800d4c2:	b926      	cbnz	r6, 800d4ce <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800d4c4:	9200      	str	r2, [sp, #0]
 800d4c6:	460b      	mov	r3, r1
 800d4c8:	4a09      	ldr	r2, [pc, #36]	; (800d4f0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800d4ca:	e003      	b.n	800d4d4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800d4cc:	b166      	cbz	r6, 800d4e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800d4ce:	460b      	mov	r3, r1
 800d4d0:	9200      	str	r2, [sp, #0]
 800d4d2:	4a08      	ldr	r2, [pc, #32]	; (800d4f4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800d4d4:	4629      	mov	r1, r5
 800d4d6:	f006 fed9 	bl	801428c <snprintf>
 800d4da:	4285      	cmp	r5, r0
 800d4dc:	bfa2      	ittt	ge
 800d4de:	88e3      	ldrhge	r3, [r4, #6]
 800d4e0:	181b      	addge	r3, r3, r0
 800d4e2:	80e3      	strhge	r3, [r4, #6]
 800d4e4:	b002      	add	sp, #8
 800d4e6:	bd70      	pop	{r4, r5, r6, pc}
 800d4e8:	9200      	str	r2, [sp, #0]
 800d4ea:	460b      	mov	r3, r1
 800d4ec:	4a02      	ldr	r2, [pc, #8]	; (800d4f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d4ee:	e7f1      	b.n	800d4d4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800d4f0:	0801688c 	stmdaeq	r1, {r2, r3, r7, fp, sp, lr}
 800d4f4:	08016881 	stmdaeq	r1, {r0, r7, fp, sp, lr}
 800d4f8:	0801688d 	stmdaeq	r1, {r0, r2, r3, r7, fp, sp, lr}

0800d4fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800d4fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4fe:	460b      	mov	r3, r1
 800d500:	8885      	ldrh	r5, [r0, #4]
 800d502:	88c1      	ldrh	r1, [r0, #6]
 800d504:	42a9      	cmp	r1, r5
 800d506:	d214      	bcs.n	800d532 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800d508:	4604      	mov	r4, r0
 800d50a:	6800      	ldr	r0, [r0, #0]
 800d50c:	1a6d      	subs	r5, r5, r1
 800d50e:	4408      	add	r0, r1
 800d510:	7a21      	ldrb	r1, [r4, #8]
 800d512:	b91a      	cbnz	r2, 800d51c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800d514:	b919      	cbnz	r1, 800d51e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800d516:	4a0a      	ldr	r2, [pc, #40]	; (800d540 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800d518:	9100      	str	r1, [sp, #0]
 800d51a:	e002      	b.n	800d522 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d51c:	b159      	cbz	r1, 800d536 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800d51e:	9200      	str	r2, [sp, #0]
 800d520:	4a08      	ldr	r2, [pc, #32]	; (800d544 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800d522:	4629      	mov	r1, r5
 800d524:	f006 feb2 	bl	801428c <snprintf>
 800d528:	4285      	cmp	r5, r0
 800d52a:	bfa2      	ittt	ge
 800d52c:	88e3      	ldrhge	r3, [r4, #6]
 800d52e:	181b      	addge	r3, r3, r0
 800d530:	80e3      	strhge	r3, [r4, #6]
 800d532:	b003      	add	sp, #12
 800d534:	bd30      	pop	{r4, r5, pc}
 800d536:	2201      	movs	r2, #1
 800d538:	9200      	str	r2, [sp, #0]
 800d53a:	4a03      	ldr	r2, [pc, #12]	; (800d548 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800d53c:	e7f1      	b.n	800d522 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800d53e:	bf00      	nop
 800d540:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 800d544:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 800d548:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

0800d54c <E131Params::E131Params(E131ParamsStore*)>:
 800d54c:	b510      	push	{r4, lr}
 800d54e:	221a      	movs	r2, #26
 800d550:	4604      	mov	r4, r0
 800d552:	f840 1b04 	str.w	r1, [r0], #4
 800d556:	2100      	movs	r1, #0
 800d558:	f006 fb40 	bl	8013bdc <memset>
 800d55c:	2300      	movs	r3, #0
 800d55e:	2201      	movs	r2, #1
 800d560:	7323      	strb	r3, [r4, #12]
 800d562:	72e2      	strb	r2, [r4, #11]
 800d564:	73a3      	strb	r3, [r4, #14]
 800d566:	2202      	movs	r2, #2
 800d568:	7423      	strb	r3, [r4, #16]
 800d56a:	74a3      	strb	r3, [r4, #18]
 800d56c:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800d570:	7362      	strb	r2, [r4, #13]
 800d572:	83e3      	strh	r3, [r4, #30]
 800d574:	2203      	movs	r2, #3
 800d576:	f246 4364 	movw	r3, #25700	; 0x6464
 800d57a:	73e2      	strb	r2, [r4, #15]
 800d57c:	8423      	strh	r3, [r4, #32]
 800d57e:	2204      	movs	r2, #4
 800d580:	2364      	movs	r3, #100	; 0x64
 800d582:	4620      	mov	r0, r4
 800d584:	7462      	strb	r2, [r4, #17]
 800d586:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800d58a:	bd10      	pop	{r4, pc}

0800d58c <E131Params::Load(char const*, unsigned int)>:
 800d58c:	6803      	ldr	r3, [r0, #0]
 800d58e:	b1d3      	cbz	r3, 800d5c6 <E131Params::Load(char const*, unsigned int)+0x3a>
 800d590:	2300      	movs	r3, #0
 800d592:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d594:	460d      	mov	r5, r1
 800d596:	4616      	mov	r6, r2
 800d598:	4604      	mov	r4, r0
 800d59a:	6043      	str	r3, [r0, #4]
 800d59c:	4602      	mov	r2, r0
 800d59e:	490a      	ldr	r1, [pc, #40]	; (800d5c8 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800d5a0:	4668      	mov	r0, sp
 800d5a2:	f005 fcab 	bl	8012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d5a6:	4632      	mov	r2, r6
 800d5a8:	4629      	mov	r1, r5
 800d5aa:	4668      	mov	r0, sp
 800d5ac:	f005 fcaa 	bl	8012f04 <ReadConfigFile::Read(char const*, unsigned int)>
 800d5b0:	4621      	mov	r1, r4
 800d5b2:	f851 0b04 	ldr.w	r0, [r1], #4
 800d5b6:	6803      	ldr	r3, [r0, #0]
 800d5b8:	689b      	ldr	r3, [r3, #8]
 800d5ba:	4798      	blx	r3
 800d5bc:	4668      	mov	r0, sp
 800d5be:	f005 fca0 	bl	8012f02 <ReadConfigFile::~ReadConfigFile()>
 800d5c2:	b002      	add	sp, #8
 800d5c4:	bd70      	pop	{r4, r5, r6, pc}
 800d5c6:	4770      	bx	lr
 800d5c8:	0800d795 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, ip, lr, pc}

0800d5cc <E131Params::callbackFunction(char const*)>:
 800d5cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5d0:	4604      	mov	r4, r0
 800d5d2:	460e      	mov	r6, r1
 800d5d4:	2500      	movs	r5, #0
 800d5d6:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800d77c <E131Params::callbackFunction(char const*)+0x1b0>
 800d5da:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800d780 <E131Params::callbackFunction(char const*)+0x1b4>
 800d5de:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800d784 <E131Params::callbackFunction(char const*)+0x1b8>
 800d5e2:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800d788 <E131Params::callbackFunction(char const*)+0x1bc>
 800d5e6:	b087      	sub	sp, #28
 800d5e8:	4649      	mov	r1, r9
 800d5ea:	4630      	mov	r0, r6
 800d5ec:	f10d 0202 	add.w	r2, sp, #2
 800d5f0:	f005 fd78 	bl	80130e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d5f4:	b9c8      	cbnz	r0, 800d62a <E131Params::callbackFunction(char const*)+0x5e>
 800d5f6:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800d5fa:	2110      	movs	r1, #16
 800d5fc:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800d600:	6863      	ldr	r3, [r4, #4]
 800d602:	1e42      	subs	r2, r0, #1
 800d604:	b292      	uxth	r2, r2
 800d606:	42b2      	cmp	r2, r6
 800d608:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800d60c:	fa01 f105 	lsl.w	r1, r1, r5
 800d610:	bf85      	ittet	hi
 800d612:	1912      	addhi	r2, r2, r4
 800d614:	3501      	addhi	r5, #1
 800d616:	1912      	addls	r2, r2, r4
 800d618:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800d61c:	bf8e      	itee	hi
 800d61e:	438b      	bichi	r3, r1
 800d620:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800d624:	430b      	orrls	r3, r1
 800d626:	6063      	str	r3, [r4, #4]
 800d628:	e05e      	b.n	800d6e8 <E131Params::callbackFunction(char const*)+0x11c>
 800d62a:	2712      	movs	r7, #18
 800d62c:	2303      	movs	r3, #3
 800d62e:	436f      	muls	r7, r5
 800d630:	9301      	str	r3, [sp, #4]
 800d632:	4630      	mov	r0, r6
 800d634:	ab01      	add	r3, sp, #4
 800d636:	aa02      	add	r2, sp, #8
 800d638:	eb0a 0107 	add.w	r1, sl, r7
 800d63c:	f005 fc96 	bl	8012f6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d640:	b9f8      	cbnz	r0, 800d682 <E131Params::callbackFunction(char const*)+0xb6>
 800d642:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d646:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800d64a:	40ab      	lsls	r3, r5
 800d64c:	f041 0120 	orr.w	r1, r1, #32
 800d650:	296c      	cmp	r1, #108	; 0x6c
 800d652:	6862      	ldr	r2, [r4, #4]
 800d654:	4425      	add	r5, r4
 800d656:	d10f      	bne.n	800d678 <E131Params::callbackFunction(char const*)+0xac>
 800d658:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800d65c:	f041 0120 	orr.w	r1, r1, #32
 800d660:	2974      	cmp	r1, #116	; 0x74
 800d662:	d109      	bne.n	800d678 <E131Params::callbackFunction(char const*)+0xac>
 800d664:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800d668:	f041 0120 	orr.w	r1, r1, #32
 800d66c:	2970      	cmp	r1, #112	; 0x70
 800d66e:	d103      	bne.n	800d678 <E131Params::callbackFunction(char const*)+0xac>
 800d670:	2101      	movs	r1, #1
 800d672:	7529      	strb	r1, [r5, #20]
 800d674:	4313      	orrs	r3, r2
 800d676:	e7d6      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d678:	2100      	movs	r1, #0
 800d67a:	ea22 0303 	bic.w	r3, r2, r3
 800d67e:	7529      	strb	r1, [r5, #20]
 800d680:	e7d1      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d682:	2305      	movs	r3, #5
 800d684:	4630      	mov	r0, r6
 800d686:	9301      	str	r3, [sp, #4]
 800d688:	aa02      	add	r2, sp, #8
 800d68a:	ab01      	add	r3, sp, #4
 800d68c:	eb0b 0107 	add.w	r1, fp, r7
 800d690:	f005 fc6c 	bl	8012f6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d694:	bb58      	cbnz	r0, 800d6ee <E131Params::callbackFunction(char const*)+0x122>
 800d696:	2301      	movs	r3, #1
 800d698:	7fa2      	ldrb	r2, [r4, #30]
 800d69a:	40ab      	lsls	r3, r5
 800d69c:	ea22 0303 	bic.w	r3, r2, r3
 800d6a0:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800d6a4:	77a3      	strb	r3, [r4, #30]
 800d6a6:	f042 0220 	orr.w	r2, r2, #32
 800d6aa:	2a69      	cmp	r2, #105	; 0x69
 800d6ac:	d117      	bne.n	800d6de <E131Params::callbackFunction(char const*)+0x112>
 800d6ae:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800d6b2:	f042 0220 	orr.w	r2, r2, #32
 800d6b6:	2a6e      	cmp	r2, #110	; 0x6e
 800d6b8:	d111      	bne.n	800d6de <E131Params::callbackFunction(char const*)+0x112>
 800d6ba:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800d6be:	f042 0220 	orr.w	r2, r2, #32
 800d6c2:	2a70      	cmp	r2, #112	; 0x70
 800d6c4:	d10b      	bne.n	800d6de <E131Params::callbackFunction(char const*)+0x112>
 800d6c6:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800d6ca:	f042 0220 	orr.w	r2, r2, #32
 800d6ce:	2a75      	cmp	r2, #117	; 0x75
 800d6d0:	d105      	bne.n	800d6de <E131Params::callbackFunction(char const*)+0x112>
 800d6d2:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800d6d6:	f042 0220 	orr.w	r2, r2, #32
 800d6da:	2a74      	cmp	r2, #116	; 0x74
 800d6dc:	d004      	beq.n	800d6e8 <E131Params::callbackFunction(char const*)+0x11c>
 800d6de:	2201      	movs	r2, #1
 800d6e0:	fa02 f505 	lsl.w	r5, r2, r5
 800d6e4:	432b      	orrs	r3, r5
 800d6e6:	77a3      	strb	r3, [r4, #30]
 800d6e8:	b007      	add	sp, #28
 800d6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6ee:	4641      	mov	r1, r8
 800d6f0:	4630      	mov	r0, r6
 800d6f2:	f10d 0201 	add.w	r2, sp, #1
 800d6f6:	f005 fd13 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d6fa:	b998      	cbnz	r0, 800d724 <E131Params::callbackFunction(char const*)+0x158>
 800d6fc:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800d700:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800d704:	40aa      	lsls	r2, r5
 800d706:	1e48      	subs	r0, r1, #1
 800d708:	b2c0      	uxtb	r0, r0
 800d70a:	28c7      	cmp	r0, #199	; 0xc7
 800d70c:	6863      	ldr	r3, [r4, #4]
 800d70e:	4425      	add	r5, r4
 800d710:	d803      	bhi.n	800d71a <E131Params::callbackFunction(char const*)+0x14e>
 800d712:	2964      	cmp	r1, #100	; 0x64
 800d714:	d001      	beq.n	800d71a <E131Params::callbackFunction(char const*)+0x14e>
 800d716:	77e9      	strb	r1, [r5, #31]
 800d718:	e7ac      	b.n	800d674 <E131Params::callbackFunction(char const*)+0xa8>
 800d71a:	2164      	movs	r1, #100	; 0x64
 800d71c:	ea23 0302 	bic.w	r3, r3, r2
 800d720:	77e9      	strb	r1, [r5, #31]
 800d722:	e780      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d724:	3501      	adds	r5, #1
 800d726:	2d04      	cmp	r5, #4
 800d728:	f109 0910 	add.w	r9, r9, #16
 800d72c:	f108 0812 	add.w	r8, r8, #18
 800d730:	f47f af5a 	bne.w	800d5e8 <E131Params::callbackFunction(char const*)+0x1c>
 800d734:	4630      	mov	r0, r6
 800d736:	4915      	ldr	r1, [pc, #84]	; (800d78c <E131Params::callbackFunction(char const*)+0x1c0>)
 800d738:	f10d 0201 	add.w	r2, sp, #1
 800d73c:	f005 fcf0 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d740:	b948      	cbnz	r0, 800d756 <E131Params::callbackFunction(char const*)+0x18a>
 800d742:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d746:	6863      	ldr	r3, [r4, #4]
 800d748:	b112      	cbz	r2, 800d750 <E131Params::callbackFunction(char const*)+0x184>
 800d74a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800d74e:	e76a      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d750:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800d754:	e767      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d756:	4630      	mov	r0, r6
 800d758:	490d      	ldr	r1, [pc, #52]	; (800d790 <E131Params::callbackFunction(char const*)+0x1c4>)
 800d75a:	f10d 0201 	add.w	r2, sp, #1
 800d75e:	f005 fcdf 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d762:	2800      	cmp	r0, #0
 800d764:	d1c0      	bne.n	800d6e8 <E131Params::callbackFunction(char const*)+0x11c>
 800d766:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d76a:	6863      	ldr	r3, [r4, #4]
 800d76c:	b112      	cbz	r2, 800d774 <E131Params::callbackFunction(char const*)+0x1a8>
 800d76e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d772:	e758      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d774:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d778:	e755      	b.n	800d626 <E131Params::callbackFunction(char const*)+0x5a>
 800d77a:	bf00      	nop
 800d77c:	08018208 	stmdaeq	r1, {r3, r9, pc}
 800d780:	0801795f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, fp, ip, sp, lr}
 800d784:	08018248 	stmdaeq	r1, {r3, r6, r9, pc}
 800d788:	080182ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, pc}
 800d78c:	0801793d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, ip, sp, lr}
 800d790:	08017927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip, sp, lr}

0800d794 <E131Params::staticCallbackFunction(void*, char const*)>:
 800d794:	f7ff bf1a 	b.w	800d5cc <E131Params::callbackFunction(char const*)>

0800d798 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800d798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d79c:	4604      	mov	r4, r0
 800d79e:	4615      	mov	r5, r2
 800d7a0:	461e      	mov	r6, r3
 800d7a2:	b086      	sub	sp, #24
 800d7a4:	3004      	adds	r0, #4
 800d7a6:	2900      	cmp	r1, #0
 800d7a8:	d045      	beq.n	800d836 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800d7aa:	221f      	movs	r2, #31
 800d7ac:	f006 f9ff 	bl	8013bae <memmove>
 800d7b0:	4633      	mov	r3, r6
 800d7b2:	462a      	mov	r2, r5
 800d7b4:	4978      	ldr	r1, [pc, #480]	; (800d998 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800d7b6:	a803      	add	r0, sp, #12
 800d7b8:	f005 fb00 	bl	8012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d7bc:	2500      	movs	r5, #0
 800d7be:	4e77      	ldr	r6, [pc, #476]	; (800d99c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800d7c0:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800d9a0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800d7c4:	4f77      	ldr	r7, [pc, #476]	; (800d9a4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d7c6:	7fa3      	ldrb	r3, [r4, #30]
 800d7c8:	4631      	mov	r1, r6
 800d7ca:	412b      	asrs	r3, r5
 800d7cc:	f013 0f01 	tst.w	r3, #1
 800d7d0:	ea6f 0303 	mvn.w	r3, r3
 800d7d4:	bf0c      	ite	eq
 800d7d6:	4642      	moveq	r2, r8
 800d7d8:	463a      	movne	r2, r7
 800d7da:	f003 0301 	and.w	r3, r3, #1
 800d7de:	a803      	add	r0, sp, #12
 800d7e0:	3501      	adds	r5, #1
 800d7e2:	f7ff fe63 	bl	800d4ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d7e6:	2d04      	cmp	r5, #4
 800d7e8:	f106 0612 	add.w	r6, r6, #18
 800d7ec:	d1eb      	bne.n	800d7c6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800d7ee:	2600      	movs	r6, #0
 800d7f0:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800d9a8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800d7f4:	4f6d      	ldr	r7, [pc, #436]	; (800d9ac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d7f6:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800d9b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800d7fa:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800d9b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800d7fe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d802:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d806:	42ab      	cmp	r3, r5
 800d808:	d22c      	bcs.n	800d864 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800d80a:	2110      	movs	r1, #16
 800d80c:	9803      	ldr	r0, [sp, #12]
 800d80e:	1aed      	subs	r5, r5, r3
 800d810:	4418      	add	r0, r3
 800d812:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800d816:	f8b3 200b 	ldrh.w	r2, [r3, #11]
 800d81a:	6863      	ldr	r3, [r4, #4]
 800d81c:	40b1      	lsls	r1, r6
 800d81e:	ea31 0303 	bics.w	r3, r1, r3
 800d822:	f89d c014 	ldrb.w	ip, [sp, #20]
 800d826:	d00d      	beq.n	800d844 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800d828:	f1bc 0f00 	cmp.w	ip, #0
 800d82c:	d10d      	bne.n	800d84a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb2>
 800d82e:	9200      	str	r2, [sp, #0]
 800d830:	4653      	mov	r3, sl
 800d832:	464a      	mov	r2, r9
 800d834:	e00c      	b.n	800d850 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800d836:	6823      	ldr	r3, [r4, #0]
 800d838:	4601      	mov	r1, r0
 800d83a:	681a      	ldr	r2, [r3, #0]
 800d83c:	4618      	mov	r0, r3
 800d83e:	68d2      	ldr	r2, [r2, #12]
 800d840:	4790      	blx	r2
 800d842:	e7b5      	b.n	800d7b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800d844:	f1bc 0f00 	cmp.w	ip, #0
 800d848:	d05d      	beq.n	800d906 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16e>
 800d84a:	9200      	str	r2, [sp, #0]
 800d84c:	4653      	mov	r3, sl
 800d84e:	463a      	mov	r2, r7
 800d850:	4629      	mov	r1, r5
 800d852:	f006 fd1b 	bl	801428c <snprintf>
 800d856:	4285      	cmp	r5, r0
 800d858:	bfa2      	ittt	ge
 800d85a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d85e:	18c0      	addge	r0, r0, r3
 800d860:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d864:	3601      	adds	r6, #1
 800d866:	2e04      	cmp	r6, #4
 800d868:	f10a 0a10 	add.w	sl, sl, #16
 800d86c:	d1c7      	bne.n	800d7fe <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800d86e:	4952      	ldr	r1, [pc, #328]	; (800d9b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800d870:	a803      	add	r0, sp, #12
 800d872:	f005 fb29 	bl	8012ec8 <PropertiesBuilder::AddComment(char const*)>
 800d876:	2500      	movs	r5, #0
 800d878:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800d87c:	4e4f      	ldr	r6, [pc, #316]	; (800d9bc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800d87e:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800d9c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800d882:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800d9c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800d886:	f104 0714 	add.w	r7, r4, #20
 800d88a:	6861      	ldr	r1, [r4, #4]
 800d88c:	fa0a f305 	lsl.w	r3, sl, r5
 800d890:	f817 2b01 	ldrb.w	r2, [r7], #1
 800d894:	438b      	bics	r3, r1
 800d896:	bf0c      	ite	eq
 800d898:	2301      	moveq	r3, #1
 800d89a:	2300      	movne	r3, #0
 800d89c:	4631      	mov	r1, r6
 800d89e:	2a00      	cmp	r2, #0
 800d8a0:	bf0c      	ite	eq
 800d8a2:	464a      	moveq	r2, r9
 800d8a4:	4642      	movne	r2, r8
 800d8a6:	a803      	add	r0, sp, #12
 800d8a8:	3501      	adds	r5, #1
 800d8aa:	f7ff fdff 	bl	800d4ac <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d8ae:	2d04      	cmp	r5, #4
 800d8b0:	f106 0612 	add.w	r6, r6, #18
 800d8b4:	d1e9      	bne.n	800d88a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 800d8b6:	4944      	ldr	r1, [pc, #272]	; (800d9c8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800d8b8:	a803      	add	r0, sp, #12
 800d8ba:	f005 fb05 	bl	8012ec8 <PropertiesBuilder::AddComment(char const*)>
 800d8be:	2600      	movs	r6, #0
 800d8c0:	f8df a108 	ldr.w	sl, [pc, #264]	; 800d9cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800d8c4:	4f39      	ldr	r7, [pc, #228]	; (800d9ac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800d8c6:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800d9b0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800d8ca:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800d9b4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800d8ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d8d2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d8d6:	42ab      	cmp	r3, r5
 800d8d8:	d229      	bcs.n	800d92e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800d8da:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800d8de:	9803      	ldr	r0, [sp, #12]
 800d8e0:	1aed      	subs	r5, r5, r3
 800d8e2:	4418      	add	r0, r3
 800d8e4:	f104 031f 	add.w	r3, r4, #31
 800d8e8:	5d9a      	ldrb	r2, [r3, r6]
 800d8ea:	6863      	ldr	r3, [r4, #4]
 800d8ec:	40b1      	lsls	r1, r6
 800d8ee:	ea31 0303 	bics.w	r3, r1, r3
 800d8f2:	f89d c014 	ldrb.w	ip, [sp, #20]
 800d8f6:	d00a      	beq.n	800d90e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800d8f8:	f1bc 0f00 	cmp.w	ip, #0
 800d8fc:	d10a      	bne.n	800d914 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800d8fe:	9200      	str	r2, [sp, #0]
 800d900:	4653      	mov	r3, sl
 800d902:	464a      	mov	r2, r9
 800d904:	e009      	b.n	800d91a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800d906:	9200      	str	r2, [sp, #0]
 800d908:	4653      	mov	r3, sl
 800d90a:	4642      	mov	r2, r8
 800d90c:	e7a0      	b.n	800d850 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800d90e:	f1bc 0f00 	cmp.w	ip, #0
 800d912:	d03d      	beq.n	800d990 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800d914:	9200      	str	r2, [sp, #0]
 800d916:	4653      	mov	r3, sl
 800d918:	463a      	mov	r2, r7
 800d91a:	4629      	mov	r1, r5
 800d91c:	f006 fcb6 	bl	801428c <snprintf>
 800d920:	4285      	cmp	r5, r0
 800d922:	bfa2      	ittt	ge
 800d924:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d928:	18c0      	addge	r0, r0, r3
 800d92a:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d92e:	3601      	adds	r6, #1
 800d930:	2e04      	cmp	r6, #4
 800d932:	f10a 0a12 	add.w	sl, sl, #18
 800d936:	d1ca      	bne.n	800d8ce <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x136>
 800d938:	4925      	ldr	r1, [pc, #148]	; (800d9d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800d93a:	a803      	add	r0, sp, #12
 800d93c:	f005 fac4 	bl	8012ec8 <PropertiesBuilder::AddComment(char const*)>
 800d940:	6862      	ldr	r2, [r4, #4]
 800d942:	4924      	ldr	r1, [pc, #144]	; (800d9d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800d944:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800d948:	a803      	add	r0, sp, #12
 800d94a:	f7ff fdd7 	bl	800d4fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d94e:	6862      	ldr	r2, [r4, #4]
 800d950:	4921      	ldr	r1, [pc, #132]	; (800d9d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800d952:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800d956:	a803      	add	r0, sp, #12
 800d958:	f7ff fdd0 	bl	800d4fc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800d95c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d960:	b17b      	cbz	r3, 800d982 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800d962:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d966:	9b03      	ldr	r3, [sp, #12]
 800d968:	4413      	add	r3, r2
 800d96a:	227d      	movs	r2, #125	; 0x7d
 800d96c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d970:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d974:	9903      	ldr	r1, [sp, #12]
 800d976:	54ca      	strb	r2, [r1, r3]
 800d978:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d97c:	3301      	adds	r3, #1
 800d97e:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d982:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d986:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d988:	601a      	str	r2, [r3, #0]
 800d98a:	b006      	add	sp, #24
 800d98c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d990:	9200      	str	r2, [sp, #0]
 800d992:	4653      	mov	r3, sl
 800d994:	4642      	mov	r2, r8
 800d996:	e7c0      	b.n	800d91a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800d998:	080179a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, fp, ip, sp, lr}
 800d99c:	080182ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, pc}
 800d9a0:	080178f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, fp, ip, sp, lr}
 800d9a4:	080178fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, fp, ip, sp, lr}
 800d9a8:	08018208 	stmdaeq	r1, {r3, r9, pc}
 800d9ac:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 800d9b0:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}
 800d9b4:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 800d9b8:	0801790c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp, lr}
 800d9bc:	08018248 	stmdaeq	r1, {r3, r6, r9, pc}
 800d9c0:	08017904 	stmdaeq	r1, {r2, r8, fp, ip, sp, lr}
 800d9c4:	08017908 	stmdaeq	r1, {r3, r8, fp, ip, sp, lr}
 800d9c8:	08017917 	stmdaeq	r1, {r0, r1, r2, r4, r8, fp, ip, sp, lr}
 800d9cc:	0801795f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, fp, ip, sp, lr}
 800d9d0:	08017921 	stmdaeq	r1, {r0, r5, r8, fp, ip, sp, lr}
 800d9d4:	0801793d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, ip, sp, lr}
 800d9d8:	08017927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip, sp, lr}

0800d9dc <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800d9dc:	b513      	push	{r0, r1, r4, lr}
 800d9de:	6804      	ldr	r4, [r0, #0]
 800d9e0:	b914      	cbnz	r4, 800d9e8 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800d9e2:	601c      	str	r4, [r3, #0]
 800d9e4:	b002      	add	sp, #8
 800d9e6:	bd10      	pop	{r4, pc}
 800d9e8:	9300      	str	r3, [sp, #0]
 800d9ea:	4613      	mov	r3, r2
 800d9ec:	460a      	mov	r2, r1
 800d9ee:	2100      	movs	r1, #0
 800d9f0:	f7ff fed2 	bl	800d798 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800d9f4:	e7f6      	b.n	800d9e4 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800d9f6 <ArtNetRdmController::GetUidCount(unsigned int)>:
 800d9f6:	3120      	adds	r1, #32
 800d9f8:	f850 3021 	ldr.w	r3, [r0, r1, lsl #2]
 800d9fc:	6818      	ldr	r0, [r3, #0]
 800d9fe:	4770      	bx	lr

0800da00 <ArtNetRdmController::Copy(unsigned int, unsigned char*)>:
 800da00:	b530      	push	{r4, r5, lr}
 800da02:	2300      	movs	r3, #0
 800da04:	2506      	movs	r5, #6
 800da06:	3120      	adds	r1, #32
 800da08:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 800da0c:	6844      	ldr	r4, [r0, #4]
 800da0e:	6801      	ldr	r1, [r0, #0]
 800da10:	4369      	muls	r1, r5
 800da12:	4299      	cmp	r1, r3
 800da14:	d903      	bls.n	800da1e <ArtNetRdmController::Copy(unsigned int, unsigned char*)+0x1e>
 800da16:	5ce1      	ldrb	r1, [r4, r3]
 800da18:	54d1      	strb	r1, [r2, r3]
 800da1a:	3301      	adds	r3, #1
 800da1c:	e7f7      	b.n	800da0e <ArtNetRdmController::Copy(unsigned int, unsigned char*)+0xe>
 800da1e:	bd30      	pop	{r4, r5, pc}

0800da20 <ArtNetRdmController::~ArtNetRdmController()>:
 800da20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800da24:	2600      	movs	r6, #0
 800da26:	4604      	mov	r4, r0
 800da28:	4605      	mov	r5, r0
 800da2a:	46b0      	mov	r8, r6
 800da2c:	4b0d      	ldr	r3, [pc, #52]	; (800da64 <ArtNetRdmController::~ArtNetRdmController()+0x44>)
 800da2e:	f8df 9038 	ldr.w	r9, [pc, #56]	; 800da68 <ArtNetRdmController::~ArtNetRdmController()+0x48>
 800da32:	f844 3b80 	str.w	r3, [r4], #128
 800da36:	f8d9 3000 	ldr.w	r3, [r9]
 800da3a:	42b3      	cmp	r3, r6
 800da3c:	d90f      	bls.n	800da5e <ArtNetRdmController::~ArtNetRdmController()+0x3e>
 800da3e:	6827      	ldr	r7, [r4, #0]
 800da40:	b157      	cbz	r7, 800da58 <ArtNetRdmController::~ArtNetRdmController()+0x38>
 800da42:	6878      	ldr	r0, [r7, #4]
 800da44:	f8c7 8000 	str.w	r8, [r7]
 800da48:	b108      	cbz	r0, 800da4e <ArtNetRdmController::~ArtNetRdmController()+0x2e>
 800da4a:	f005 ffef 	bl	8013a2c <operator delete[](void*)>
 800da4e:	4638      	mov	r0, r7
 800da50:	f005 ffea 	bl	8013a28 <operator delete(void*)>
 800da54:	f8c4 8000 	str.w	r8, [r4]
 800da58:	3601      	adds	r6, #1
 800da5a:	3404      	adds	r4, #4
 800da5c:	e7eb      	b.n	800da36 <ArtNetRdmController::~ArtNetRdmController()+0x16>
 800da5e:	4628      	mov	r0, r5
 800da60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800da64:	080179d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, ip, sp, lr}
 800da68:	20003264 	andcs	r3, r0, r4, ror #4

0800da6c <ArtNetRdmController::~ArtNetRdmController()>:
 800da6c:	b510      	push	{r4, lr}
 800da6e:	4604      	mov	r4, r0
 800da70:	f7ff ffd6 	bl	800da20 <ArtNetRdmController::~ArtNetRdmController()>
 800da74:	4620      	mov	r0, r4
 800da76:	f005 ffd7 	bl	8013a28 <operator delete(void*)>
 800da7a:	4620      	mov	r0, r4
 800da7c:	bd10      	pop	{r4, pc}

0800da7e <ArtNetRdmController::Full(unsigned int)>:
 800da7e:	3120      	adds	r1, #32
 800da80:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 800da84:	f000 ba28 	b.w	800ded8 <RDMDiscovery::Full()>

0800da88 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)>:
 800da88:	b538      	push	{r3, r4, r5, lr}
 800da8a:	460d      	mov	r5, r1
 800da8c:	4614      	mov	r4, r2
 800da8e:	b1f2      	cbz	r2, 800dace <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x46>
 800da90:	f006 fefc 	bl	801488c <fwdgt_counter_reload>
 800da94:	4628      	mov	r0, r5
 800da96:	f000 fe3f 	bl	800e718 <Rdm::Receive(unsigned int)>
 800da9a:	2800      	cmp	r0, #0
 800da9c:	d1f8      	bne.n	800da90 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x8>
 800da9e:	4621      	mov	r1, r4
 800daa0:	7863      	ldrb	r3, [r4, #1]
 800daa2:	4a0c      	ldr	r2, [pc, #48]	; (800dad4 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x4c>)
 800daa4:	3b01      	subs	r3, #1
 800daa6:	1cd8      	adds	r0, r3, #3
 800daa8:	d004      	beq.n	800dab4 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x2c>
 800daaa:	f811 0b01 	ldrb.w	r0, [r1], #1
 800daae:	f802 0b01 	strb.w	r0, [r2], #1
 800dab2:	e7f7      	b.n	800daa4 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x1c>
 800dab4:	7862      	ldrb	r2, [r4, #1]
 800dab6:	4628      	mov	r0, r5
 800dab8:	4907      	ldr	r1, [pc, #28]	; (800dad8 <ArtNetRdmController::Handler(unsigned int, unsigned char const*)+0x50>)
 800daba:	3202      	adds	r2, #2
 800dabc:	f000 fe3c 	bl	800e738 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 800dac0:	4628      	mov	r0, r5
 800dac2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dac6:	f64e 2160 	movw	r1, #60000	; 0xea60
 800daca:	f000 be2d 	b.w	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800dace:	4610      	mov	r0, r2
 800dad0:	bd38      	pop	{r3, r4, r5, pc}
 800dad2:	bf00      	nop
 800dad4:	20003165 	andcs	r3, r0, r5, ror #2
 800dad8:	20003164 	andcs	r3, r0, r4, ror #2

0800dadc <ArtNetRdmController::ArtNetRdmController(unsigned int)>:
 800dadc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dae0:	4605      	mov	r5, r0
 800dae2:	f04f 0a00 	mov.w	sl, #0
 800dae6:	462e      	mov	r6, r5
 800dae8:	460f      	mov	r7, r1
 800daea:	46d1      	mov	r9, sl
 800daec:	f100 0804 	add.w	r8, r0, #4
 800daf0:	4640      	mov	r0, r8
 800daf2:	f000 fb05 	bl	800e100 <RDMDeviceController::RDMDeviceController()>
 800daf6:	4b1c      	ldr	r3, [pc, #112]	; (800db68 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x8c>)
 800daf8:	f846 3b80 	str.w	r3, [r6], #128
 800dafc:	4b1b      	ldr	r3, [pc, #108]	; (800db6c <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x90>)
 800dafe:	601f      	str	r7, [r3, #0]
 800db00:	45ba      	cmp	sl, r7
 800db02:	d02b      	beq.n	800db5c <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x80>
 800db04:	f44f 7090 	mov.w	r0, #288	; 0x120
 800db08:	f005 ff92 	bl	8013a30 <operator new(unsigned int)>
 800db0c:	4604      	mov	r4, r0
 800db0e:	f8c0 9000 	str.w	r9, [r0]
 800db12:	f44f 6096 	mov.w	r0, #1200	; 0x4b0
 800db16:	f005 ff8d 	bl	8013a34 <operator new[](unsigned int)>
 800db1a:	2200      	movs	r2, #0
 800db1c:	6060      	str	r0, [r4, #4]
 800db1e:	6863      	ldr	r3, [r4, #4]
 800db20:	4813      	ldr	r0, [pc, #76]	; (800db70 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x94>)
 800db22:	4413      	add	r3, r2
 800db24:	1e59      	subs	r1, r3, #1
 800db26:	3305      	adds	r3, #5
 800db28:	428b      	cmp	r3, r1
 800db2a:	d004      	beq.n	800db36 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x5a>
 800db2c:	f810 cb01 	ldrb.w	ip, [r0], #1
 800db30:	f801 cf01 	strb.w	ip, [r1, #1]!
 800db34:	e7f8      	b.n	800db28 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x4c>
 800db36:	3206      	adds	r2, #6
 800db38:	f5b2 6f96 	cmp.w	r2, #1200	; 0x4b0
 800db3c:	d1ef      	bne.n	800db1e <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x42>
 800db3e:	f104 000c 	add.w	r0, r4, #12
 800db42:	f8c4 a008 	str.w	sl, [r4, #8]
 800db46:	f000 fb6b 	bl	800e220 <RDMMessage::RDMMessage()>
 800db4a:	4641      	mov	r1, r8
 800db4c:	4620      	mov	r0, r4
 800db4e:	f846 4b04 	str.w	r4, [r6], #4
 800db52:	f000 f84c 	bl	800dbee <RDMDiscovery::SetUid(unsigned char const*)>
 800db56:	f10a 0a01 	add.w	sl, sl, #1
 800db5a:	e7d1      	b.n	800db00 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x24>
 800db5c:	22cc      	movs	r2, #204	; 0xcc
 800db5e:	4b05      	ldr	r3, [pc, #20]	; (800db74 <ArtNetRdmController::ArtNetRdmController(unsigned int)+0x98>)
 800db60:	4628      	mov	r0, r5
 800db62:	701a      	strb	r2, [r3, #0]
 800db64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db68:	080179d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, ip, sp, lr}
 800db6c:	20003264 	andcs	r3, r0, r4, ror #4
 800db70:	080179c0 	stmdaeq	r1, {r6, r7, r8, fp, ip, sp, lr}
 800db74:	20003164 	andcs	r3, r0, r4, ror #2

0800db78 <memcmp.constprop.0>:
 800db78:	b510      	push	{r4, lr}
 800db7a:	1e4a      	subs	r2, r1, #1
 800db7c:	1e43      	subs	r3, r0, #1
 800db7e:	3105      	adds	r1, #5
 800db80:	428a      	cmp	r2, r1
 800db82:	d007      	beq.n	800db94 <memcmp.constprop.0+0x1c>
 800db84:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800db88:	f812 4f01 	ldrb.w	r4, [r2, #1]!
 800db8c:	42a0      	cmp	r0, r4
 800db8e:	d0f7      	beq.n	800db80 <memcmp.constprop.0+0x8>
 800db90:	1b00      	subs	r0, r0, r4
 800db92:	bd10      	pop	{r4, pc}
 800db94:	2000      	movs	r0, #0
 800db96:	e7fc      	b.n	800db92 <memcmp.constprop.0+0x1a>

0800db98 <memcpy.constprop.0.isra.0>:
 800db98:	3801      	subs	r0, #1
 800db9a:	1d8a      	adds	r2, r1, #6
 800db9c:	4291      	cmp	r1, r2
 800db9e:	d004      	beq.n	800dbaa <memcpy.constprop.0.isra.0+0x12>
 800dba0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dba4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dba8:	e7f8      	b.n	800db9c <memcpy.constprop.0.isra.0+0x4>
 800dbaa:	4770      	bx	lr

0800dbac <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>:
 800dbac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dbb0:	6805      	ldr	r5, [r0, #0]
 800dbb2:	4604      	mov	r4, r0
 800dbb4:	2dc8      	cmp	r5, #200	; 0xc8
 800dbb6:	460e      	mov	r6, r1
 800dbb8:	d017      	beq.n	800dbea <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x3e>
 800dbba:	2700      	movs	r7, #0
 800dbbc:	f04f 0906 	mov.w	r9, #6
 800dbc0:	f8d0 8004 	ldr.w	r8, [r0, #4]
 800dbc4:	42bd      	cmp	r5, r7
 800dbc6:	d007      	beq.n	800dbd8 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x2c>
 800dbc8:	4631      	mov	r1, r6
 800dbca:	fb09 8007 	mla	r0, r9, r7, r8
 800dbce:	f7ff ffd3 	bl	800db78 <memcmp.constprop.0>
 800dbd2:	b150      	cbz	r0, 800dbea <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x3e>
 800dbd4:	3701      	adds	r7, #1
 800dbd6:	e7f5      	b.n	800dbc4 <RDMTod::AddUid(unsigned char const*) [clone .isra.0]+0x18>
 800dbd8:	1c6b      	adds	r3, r5, #1
 800dbda:	4631      	mov	r1, r6
 800dbdc:	fb09 8005 	mla	r0, r9, r5, r8
 800dbe0:	6023      	str	r3, [r4, #0]
 800dbe2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dbe6:	f7ff bfd7 	b.w	800db98 <memcpy.constprop.0.isra.0>
 800dbea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800dbee <RDMDiscovery::SetUid(unsigned char const*)>:
 800dbee:	b538      	push	{r3, r4, r5, lr}
 800dbf0:	4604      	mov	r4, r0
 800dbf2:	460d      	mov	r5, r1
 800dbf4:	f200 100b 	addw	r0, r0, #267	; 0x10b
 800dbf8:	f7ff ffce 	bl	800db98 <memcpy.constprop.0.isra.0>
 800dbfc:	4629      	mov	r1, r5
 800dbfe:	f104 000c 	add.w	r0, r4, #12
 800dc02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dc06:	f000 bb29 	b.w	800e25c <RDMMessage::SetSrcUid(unsigned char const*)>

0800dc0a <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)>:
 800dc0a:	780b      	ldrb	r3, [r1, #0]
 800dc0c:	b530      	push	{r4, r5, lr}
 800dc0e:	2bfe      	cmp	r3, #254	; 0xfe
 800dc10:	d001      	beq.n	800dc16 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0xc>
 800dc12:	2000      	movs	r0, #0
 800dc14:	bd30      	pop	{r4, r5, pc}
 800dc16:	7a48      	ldrb	r0, [r1, #9]
 800dc18:	7a0b      	ldrb	r3, [r1, #8]
 800dc1a:	1e54      	subs	r4, r2, #1
 800dc1c:	4003      	ands	r3, r0
 800dc1e:	7013      	strb	r3, [r2, #0]
 800dc20:	7ac8      	ldrb	r0, [r1, #11]
 800dc22:	7a8b      	ldrb	r3, [r1, #10]
 800dc24:	3205      	adds	r2, #5
 800dc26:	4003      	ands	r3, r0
 800dc28:	f802 3c04 	strb.w	r3, [r2, #-4]
 800dc2c:	7b48      	ldrb	r0, [r1, #13]
 800dc2e:	7b0b      	ldrb	r3, [r1, #12]
 800dc30:	4003      	ands	r3, r0
 800dc32:	f802 3c03 	strb.w	r3, [r2, #-3]
 800dc36:	7bc8      	ldrb	r0, [r1, #15]
 800dc38:	7b8b      	ldrb	r3, [r1, #14]
 800dc3a:	4003      	ands	r3, r0
 800dc3c:	f802 3c02 	strb.w	r3, [r2, #-2]
 800dc40:	7c48      	ldrb	r0, [r1, #17]
 800dc42:	7c0b      	ldrb	r3, [r1, #16]
 800dc44:	4003      	ands	r3, r0
 800dc46:	f802 3c01 	strb.w	r3, [r2, #-1]
 800dc4a:	7cc8      	ldrb	r0, [r1, #19]
 800dc4c:	7c8b      	ldrb	r3, [r1, #18]
 800dc4e:	4003      	ands	r3, r0
 800dc50:	7013      	strb	r3, [r2, #0]
 800dc52:	7d4b      	ldrb	r3, [r1, #21]
 800dc54:	7d08      	ldrb	r0, [r1, #20]
 800dc56:	4018      	ands	r0, r3
 800dc58:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800dc5c:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800dc60:	442b      	add	r3, r5
 800dc62:	4294      	cmp	r4, r2
 800dc64:	b29b      	uxth	r3, r3
 800dc66:	d1f9      	bne.n	800dc5c <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x52>
 800dc68:	ebb0 2f13 	cmp.w	r0, r3, lsr #8
 800dc6c:	d1d1      	bne.n	800dc12 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0x8>
 800dc6e:	7d88      	ldrb	r0, [r1, #22]
 800dc70:	7dca      	ldrb	r2, [r1, #23]
 800dc72:	b2db      	uxtb	r3, r3
 800dc74:	4010      	ands	r0, r2
 800dc76:	1ac3      	subs	r3, r0, r3
 800dc78:	4258      	negs	r0, r3
 800dc7a:	4158      	adcs	r0, r3
 800dc7c:	e7ca      	b.n	800dc14 <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)+0xa>
	...

0800dc80 <RDMDiscovery::QuickFind(unsigned char const*)>:
 800dc80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dc82:	4605      	mov	r5, r0
 800dc84:	460e      	mov	r6, r1
 800dc86:	f105 040c 	add.w	r4, r5, #12
 800dc8a:	f006 fdff 	bl	801488c <fwdgt_counter_reload>
 800dc8e:	2110      	movs	r1, #16
 800dc90:	4620      	mov	r0, r4
 800dc92:	f000 faeb 	bl	800e26c <RDMMessage::SetCc(unsigned char)>
 800dc96:	2102      	movs	r1, #2
 800dc98:	4620      	mov	r0, r4
 800dc9a:	f000 fae9 	bl	800e270 <RDMMessage::SetPid(unsigned short)>
 800dc9e:	4631      	mov	r1, r6
 800dca0:	4620      	mov	r0, r4
 800dca2:	f000 fadf 	bl	800e264 <RDMMessage::SetDstUid(unsigned char const*)>
 800dca6:	2200      	movs	r2, #0
 800dca8:	4620      	mov	r0, r4
 800dcaa:	4611      	mov	r1, r2
 800dcac:	f000 fae4 	bl	800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 800dcb0:	4620      	mov	r0, r4
 800dcb2:	68a9      	ldr	r1, [r5, #8]
 800dcb4:	f241 62a8 	movw	r2, #5800	; 0x16a8
 800dcb8:	f000 faf0 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800dcbc:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800dcc0:	68a8      	ldr	r0, [r5, #8]
 800dcc2:	f000 fd31 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800dcc6:	b160      	cbz	r0, 800dce2 <RDMDiscovery::QuickFind(unsigned char const*)+0x62>
 800dcc8:	7d03      	ldrb	r3, [r0, #20]
 800dcca:	2b11      	cmp	r3, #17
 800dccc:	d109      	bne.n	800dce2 <RDMDiscovery::QuickFind(unsigned char const*)+0x62>
 800dcce:	f100 0109 	add.w	r1, r0, #9
 800dcd2:	4630      	mov	r0, r6
 800dcd4:	f7ff ff50 	bl	800db78 <memcmp.constprop.0>
 800dcd8:	b918      	cbnz	r0, 800dce2 <RDMDiscovery::QuickFind(unsigned char const*)+0x62>
 800dcda:	4631      	mov	r1, r6
 800dcdc:	4628      	mov	r0, r5
 800dcde:	f7ff ff65 	bl	800dbac <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>
 800dce2:	f006 fdd3 	bl	801488c <fwdgt_counter_reload>
 800dce6:	4620      	mov	r0, r4
 800dce8:	491a      	ldr	r1, [pc, #104]	; (800dd54 <RDMDiscovery::QuickFind(unsigned char const*)+0xd4>)
 800dcea:	f000 fabb 	bl	800e264 <RDMMessage::SetDstUid(unsigned char const*)>
 800dcee:	4620      	mov	r0, r4
 800dcf0:	2110      	movs	r1, #16
 800dcf2:	f000 fabb 	bl	800e26c <RDMMessage::SetCc(unsigned char)>
 800dcf6:	4620      	mov	r0, r4
 800dcf8:	2101      	movs	r1, #1
 800dcfa:	f000 fab9 	bl	800e270 <RDMMessage::SetPid(unsigned short)>
 800dcfe:	4620      	mov	r0, r4
 800dd00:	220c      	movs	r2, #12
 800dd02:	f205 1111 	addw	r1, r5, #273	; 0x111
 800dd06:	f000 fab7 	bl	800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 800dd0a:	4620      	mov	r0, r4
 800dd0c:	f241 62a8 	movw	r2, #5800	; 0x16a8
 800dd10:	68a9      	ldr	r1, [r5, #8]
 800dd12:	f000 fac3 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800dd16:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800dd1a:	68a8      	ldr	r0, [r5, #8]
 800dd1c:	f000 fd04 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800dd20:	4604      	mov	r4, r0
 800dd22:	f006 fdb3 	bl	801488c <fwdgt_counter_reload>
 800dd26:	b14c      	cbz	r4, 800dd3c <RDMDiscovery::QuickFind(unsigned char const*)+0xbc>
 800dd28:	466a      	mov	r2, sp
 800dd2a:	4621      	mov	r1, r4
 800dd2c:	4628      	mov	r0, r5
 800dd2e:	f7ff ff6c 	bl	800dc0a <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)>
 800dd32:	b130      	cbz	r0, 800dd42 <RDMDiscovery::QuickFind(unsigned char const*)+0xc2>
 800dd34:	4669      	mov	r1, sp
 800dd36:	4628      	mov	r0, r5
 800dd38:	f7ff ffa2 	bl	800dc80 <RDMDiscovery::QuickFind(unsigned char const*)>
 800dd3c:	2000      	movs	r0, #0
 800dd3e:	b002      	add	sp, #8
 800dd40:	bd70      	pop	{r4, r5, r6, pc}
 800dd42:	466a      	mov	r2, sp
 800dd44:	4628      	mov	r0, r5
 800dd46:	f7ff ff60 	bl	800dc0a <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)>
 800dd4a:	f080 0001 	eor.w	r0, r0, #1
 800dd4e:	b2c0      	uxtb	r0, r0
 800dd50:	e7f5      	b.n	800dd3e <RDMDiscovery::QuickFind(unsigned char const*)+0xbe>
 800dd52:	bf00      	nop
 800dd54:	080179e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, ip, sp, lr}

0800dd58 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)>:
 800dd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd5c:	4691      	mov	r9, r2
 800dd5e:	469b      	mov	fp, r3
 800dd60:	b085      	sub	sp, #20
 800dd62:	4605      	mov	r5, r0
 800dd64:	e9dd 780e 	ldrd	r7, r8, [sp, #56]	; 0x38
 800dd68:	f006 fd90 	bl	801488c <fwdgt_counter_reload>
 800dd6c:	45c3      	cmp	fp, r8
 800dd6e:	bf08      	it	eq
 800dd70:	45b9      	cmpeq	r9, r7
 800dd72:	ea4f 430b 	mov.w	r3, fp, lsl #16
 800dd76:	ea43 4319 	orr.w	r3, r3, r9, lsr #16
 800dd7a:	ea4f 4209 	mov.w	r2, r9, lsl #16
 800dd7e:	4c54      	ldr	r4, [pc, #336]	; (800ded0 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x178>)
 800dd80:	f105 060c 	add.w	r6, r5, #12
 800dd84:	ba12      	rev	r2, r2
 800dd86:	ba1b      	rev	r3, r3
 800dd88:	d136      	bne.n	800ddf8 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0xa0>
 800dd8a:	4621      	mov	r1, r4
 800dd8c:	a802      	add	r0, sp, #8
 800dd8e:	e9c4 3200 	strd	r3, r2, [r4]
 800dd92:	f7ff ff01 	bl	800db98 <memcpy.constprop.0.isra.0>
 800dd96:	2110      	movs	r1, #16
 800dd98:	4630      	mov	r0, r6
 800dd9a:	f000 fa67 	bl	800e26c <RDMMessage::SetCc(unsigned char)>
 800dd9e:	2102      	movs	r1, #2
 800dda0:	4630      	mov	r0, r6
 800dda2:	f000 fa65 	bl	800e270 <RDMMessage::SetPid(unsigned short)>
 800dda6:	4630      	mov	r0, r6
 800dda8:	a902      	add	r1, sp, #8
 800ddaa:	f000 fa5b 	bl	800e264 <RDMMessage::SetDstUid(unsigned char const*)>
 800ddae:	2200      	movs	r2, #0
 800ddb0:	4630      	mov	r0, r6
 800ddb2:	4611      	mov	r1, r2
 800ddb4:	f000 fa60 	bl	800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 800ddb8:	4630      	mov	r0, r6
 800ddba:	68a9      	ldr	r1, [r5, #8]
 800ddbc:	f241 62a8 	movw	r2, #5800	; 0x16a8
 800ddc0:	f000 fa6c 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800ddc4:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800ddc8:	68a8      	ldr	r0, [r5, #8]
 800ddca:	f000 fcad 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800ddce:	2800      	cmp	r0, #0
 800ddd0:	d07c      	beq.n	800decc <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x174>
 800ddd2:	7d03      	ldrb	r3, [r0, #20]
 800ddd4:	2b11      	cmp	r3, #17
 800ddd6:	d003      	beq.n	800dde0 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x88>
 800ddd8:	2000      	movs	r0, #0
 800ddda:	b005      	add	sp, #20
 800dddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dde0:	f100 0109 	add.w	r1, r0, #9
 800dde4:	a802      	add	r0, sp, #8
 800dde6:	f7ff fec7 	bl	800db78 <memcmp.constprop.0>
 800ddea:	2800      	cmp	r0, #0
 800ddec:	d1f4      	bne.n	800ddd8 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x80>
 800ddee:	4628      	mov	r0, r5
 800ddf0:	a902      	add	r1, sp, #8
 800ddf2:	f7ff fedb 	bl	800dbac <RDMTod::AddUid(unsigned char const*) [clone .isra.0]>
 800ddf6:	e7ef      	b.n	800ddd8 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x80>
 800ddf8:	f205 1a11 	addw	sl, r5, #273	; 0x111
 800ddfc:	4621      	mov	r1, r4
 800ddfe:	4650      	mov	r0, sl
 800de00:	e9c4 3200 	strd	r3, r2, [r4]
 800de04:	f7ff fec8 	bl	800db98 <memcpy.constprop.0.isra.0>
 800de08:	ea4f 4308 	mov.w	r3, r8, lsl #16
 800de0c:	ea43 4317 	orr.w	r3, r3, r7, lsr #16
 800de10:	043a      	lsls	r2, r7, #16
 800de12:	ba1b      	rev	r3, r3
 800de14:	ba12      	rev	r2, r2
 800de16:	4621      	mov	r1, r4
 800de18:	f205 1017 	addw	r0, r5, #279	; 0x117
 800de1c:	e9c4 3200 	strd	r3, r2, [r4]
 800de20:	f7ff feba 	bl	800db98 <memcpy.constprop.0.isra.0>
 800de24:	4630      	mov	r0, r6
 800de26:	492b      	ldr	r1, [pc, #172]	; (800ded4 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x17c>)
 800de28:	f000 fa1c 	bl	800e264 <RDMMessage::SetDstUid(unsigned char const*)>
 800de2c:	2110      	movs	r1, #16
 800de2e:	4630      	mov	r0, r6
 800de30:	f000 fa1c 	bl	800e26c <RDMMessage::SetCc(unsigned char)>
 800de34:	2101      	movs	r1, #1
 800de36:	4630      	mov	r0, r6
 800de38:	f000 fa1a 	bl	800e270 <RDMMessage::SetPid(unsigned short)>
 800de3c:	220c      	movs	r2, #12
 800de3e:	4651      	mov	r1, sl
 800de40:	4630      	mov	r0, r6
 800de42:	f000 fa19 	bl	800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 800de46:	f241 62a8 	movw	r2, #5800	; 0x16a8
 800de4a:	4630      	mov	r0, r6
 800de4c:	68a9      	ldr	r1, [r5, #8]
 800de4e:	f000 fa25 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800de52:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800de56:	68a8      	ldr	r0, [r5, #8]
 800de58:	f000 fc66 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800de5c:	4601      	mov	r1, r0
 800de5e:	2800      	cmp	r0, #0
 800de60:	d0ba      	beq.n	800ddd8 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x80>
 800de62:	4628      	mov	r0, r5
 800de64:	aa02      	add	r2, sp, #8
 800de66:	f7ff fed0 	bl	800dc0a <RDMDiscovery::IsValidDiscoveryResponse(unsigned char const*, unsigned char*)>
 800de6a:	bb40      	cbnz	r0, 800debe <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x166>
 800de6c:	ea4f 0a58 	mov.w	sl, r8, lsr #1
 800de70:	ea4f 035b 	mov.w	r3, fp, lsr #1
 800de74:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800de78:	f40a 4a80 	and.w	sl, sl, #16384	; 0x4000
 800de7c:	eb19 0607 	adds.w	r6, r9, r7
 800de80:	449a      	add	sl, r3
 800de82:	f3c8 020e 	ubfx	r2, r8, #0, #15
 800de86:	f3cb 030e 	ubfx	r3, fp, #0, #15
 800de8a:	eb43 0302 	adc.w	r3, r3, r2
 800de8e:	0876      	lsrs	r6, r6, #1
 800de90:	ea46 76c3 	orr.w	r6, r6, r3, lsl #31
 800de94:	eb0a 0a53 	add.w	sl, sl, r3, lsr #1
 800de98:	464a      	mov	r2, r9
 800de9a:	465b      	mov	r3, fp
 800de9c:	4628      	mov	r0, r5
 800de9e:	e9cd 6a00 	strd	r6, sl, [sp]
 800dea2:	f7ff ff59 	bl	800dd58 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)>
 800dea6:	1c72      	adds	r2, r6, #1
 800dea8:	4604      	mov	r4, r0
 800deaa:	e9cd 7800 	strd	r7, r8, [sp]
 800deae:	4628      	mov	r0, r5
 800deb0:	f14a 0300 	adc.w	r3, sl, #0
 800deb4:	f7ff ff50 	bl	800dd58 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)>
 800deb8:	4320      	orrs	r0, r4
 800deba:	b2c0      	uxtb	r0, r0
 800debc:	e78d      	b.n	800ddda <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x82>
 800debe:	4628      	mov	r0, r5
 800dec0:	a902      	add	r1, sp, #8
 800dec2:	f7ff fedd 	bl	800dc80 <RDMDiscovery::QuickFind(unsigned char const*)>
 800dec6:	2800      	cmp	r0, #0
 800dec8:	d1d0      	bne.n	800de6c <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x114>
 800deca:	e785      	b.n	800ddd8 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x80>
 800decc:	2001      	movs	r0, #1
 800dece:	e784      	b.n	800ddda <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)+0x82>
 800ded0:	20003268 	andcs	r3, r0, r8, ror #4
 800ded4:	080179e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, ip, sp, lr}

0800ded8 <RDMDiscovery::Full()>:
 800ded8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800deda:	4604      	mov	r4, r0
 800dedc:	2500      	movs	r5, #0
 800dede:	2606      	movs	r6, #6
 800dee0:	4f2a      	ldr	r7, [pc, #168]	; (800df8c <RDMDiscovery::Full()+0xb4>)
 800dee2:	6823      	ldr	r3, [r4, #0]
 800dee4:	42ab      	cmp	r3, r5
 800dee6:	d907      	bls.n	800def8 <RDMDiscovery::Full()+0x20>
 800dee8:	6860      	ldr	r0, [r4, #4]
 800deea:	4639      	mov	r1, r7
 800deec:	fb06 0005 	mla	r0, r6, r5, r0
 800def0:	f7ff fe52 	bl	800db98 <memcpy.constprop.0.isra.0>
 800def4:	3501      	adds	r5, #1
 800def6:	e7f4      	b.n	800dee2 <RDMDiscovery::Full()+0xa>
 800def8:	2600      	movs	r6, #0
 800defa:	4625      	mov	r5, r4
 800defc:	f845 6b0c 	str.w	r6, [r5], #12
 800df00:	f006 fcc4 	bl	801488c <fwdgt_counter_reload>
 800df04:	4628      	mov	r0, r5
 800df06:	4921      	ldr	r1, [pc, #132]	; (800df8c <RDMDiscovery::Full()+0xb4>)
 800df08:	f000 f9ac 	bl	800e264 <RDMMessage::SetDstUid(unsigned char const*)>
 800df0c:	4628      	mov	r0, r5
 800df0e:	2110      	movs	r1, #16
 800df10:	f000 f9ac 	bl	800e26c <RDMMessage::SetCc(unsigned char)>
 800df14:	4628      	mov	r0, r5
 800df16:	2103      	movs	r1, #3
 800df18:	f000 f9aa 	bl	800e270 <RDMMessage::SetPid(unsigned short)>
 800df1c:	4632      	mov	r2, r6
 800df1e:	4631      	mov	r1, r6
 800df20:	4628      	mov	r0, r5
 800df22:	f000 f9a9 	bl	800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>
 800df26:	4632      	mov	r2, r6
 800df28:	4628      	mov	r0, r5
 800df2a:	68a1      	ldr	r1, [r4, #8]
 800df2c:	f000 f9b6 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800df30:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800df34:	68a0      	ldr	r0, [r4, #8]
 800df36:	f000 fbf7 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800df3a:	f006 fca7 	bl	801488c <fwdgt_counter_reload>
 800df3e:	4631      	mov	r1, r6
 800df40:	f44f 602f 	mov.w	r0, #2800	; 0xaf0
 800df44:	f007 fd22 	bl	801598c <udelay(unsigned int, unsigned int)>
 800df48:	f006 fca0 	bl	801488c <fwdgt_counter_reload>
 800df4c:	4632      	mov	r2, r6
 800df4e:	4628      	mov	r0, r5
 800df50:	68a1      	ldr	r1, [r4, #8]
 800df52:	f000 f9a3 	bl	800e29c <RDMMessage::Send(unsigned int, unsigned int)>
 800df56:	f44f 612f 	mov.w	r1, #2800	; 0xaf0
 800df5a:	68a0      	ldr	r0, [r4, #8]
 800df5c:	f000 fbe4 	bl	800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>
 800df60:	f006 fc94 	bl	801488c <fwdgt_counter_reload>
 800df64:	4631      	mov	r1, r6
 800df66:	f44f 602f 	mov.w	r0, #2800	; 0xaf0
 800df6a:	f007 fd0f 	bl	801598c <udelay(unsigned int, unsigned int)>
 800df6e:	f006 fc8d 	bl	801488c <fwdgt_counter_reload>
 800df72:	f06f 0201 	mvn.w	r2, #1
 800df76:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800df7a:	4620      	mov	r0, r4
 800df7c:	e9cd 2300 	strd	r2, r3, [sp]
 800df80:	2200      	movs	r2, #0
 800df82:	2300      	movs	r3, #0
 800df84:	f7ff fee8 	bl	800dd58 <RDMDiscovery::FindDevices(unsigned long long, unsigned long long)>
 800df88:	b003      	add	sp, #12
 800df8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df8c:	080179e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, ip, sp, lr}

0800df90 <RDMDevice::RDMDevice()>:
 800df90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800df92:	4b35      	ldr	r3, [pc, #212]	; (800e068 <RDMDevice::RDMDevice()+0xd8>)
 800df94:	4a35      	ldr	r2, [pc, #212]	; (800e06c <RDMDevice::RDMDevice()+0xdc>)
 800df96:	7859      	ldrb	r1, [r3, #1]
 800df98:	4604      	mov	r4, r0
 800df9a:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 800df9e:	7818      	ldrb	r0, [r3, #0]
 800dfa0:	2300      	movs	r3, #0
 800dfa2:	4615      	mov	r5, r2
 800dfa4:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 800dfa8:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800dfac:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800dfb0:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 800dfb4:	67a3      	str	r3, [r4, #120]	; 0x78
 800dfb6:	4613      	mov	r3, r2
 800dfb8:	781e      	ldrb	r6, [r3, #0]
 800dfba:	3201      	adds	r2, #1
 800dfbc:	2e00      	cmp	r6, #0
 800dfbe:	d1fa      	bne.n	800dfb6 <RDMDevice::RDMDevice()+0x26>
 800dfc0:	1b5b      	subs	r3, r3, r5
 800dfc2:	2b20      	cmp	r3, #32
 800dfc4:	bf28      	it	cs
 800dfc6:	2320      	movcs	r3, #32
 800dfc8:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800dfcc:	462e      	mov	r6, r5
 800dfce:	461a      	mov	r2, r3
 800dfd0:	4f26      	ldr	r7, [pc, #152]	; (800e06c <RDMDevice::RDMDevice()+0xdc>)
 800dfd2:	3a01      	subs	r2, #1
 800dfd4:	d304      	bcc.n	800dfe0 <RDMDevice::RDMDevice()+0x50>
 800dfd6:	f817 cb01 	ldrb.w	ip, [r7], #1
 800dfda:	f806 cb01 	strb.w	ip, [r6], #1
 800dfde:	e7f8      	b.n	800dfd2 <RDMDevice::RDMDevice()+0x42>
 800dfe0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800dfe4:	4b22      	ldr	r3, [pc, #136]	; (800e070 <RDMDevice::RDMDevice()+0xe0>)
 800dfe6:	7020      	strb	r0, [r4, #0]
 800dfe8:	7061      	strb	r1, [r4, #1]
 800dfea:	6818      	ldr	r0, [r3, #0]
 800dfec:	4669      	mov	r1, sp
 800dfee:	f003 f8b9 	bl	8011164 <Network::MacAddressCopyTo(unsigned char*)>
 800dff2:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800dff6:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800dffa:	70a3      	strb	r3, [r4, #2]
 800dffc:	7263      	strb	r3, [r4, #9]
 800dffe:	4b1d      	ldr	r3, [pc, #116]	; (800e074 <RDMDevice::RDMDevice()+0xe4>)
 800e000:	70e2      	strb	r2, [r4, #3]
 800e002:	7222      	strb	r2, [r4, #8]
 800e004:	461a      	mov	r2, r3
 800e006:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800e00a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800e00e:	7121      	strb	r1, [r4, #4]
 800e010:	7160      	strb	r0, [r4, #5]
 800e012:	71a0      	strb	r0, [r4, #6]
 800e014:	71e1      	strb	r1, [r4, #7]
 800e016:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800e01a:	2900      	cmp	r1, #0
 800e01c:	d1fb      	bne.n	800e016 <RDMDevice::RDMDevice()+0x86>
 800e01e:	1a9b      	subs	r3, r3, r2
 800e020:	2b20      	cmp	r3, #32
 800e022:	bf28      	it	cs
 800e024:	2320      	movcs	r3, #32
 800e026:	461a      	mov	r2, r3
 800e028:	4912      	ldr	r1, [pc, #72]	; (800e074 <RDMDevice::RDMDevice()+0xe4>)
 800e02a:	3a01      	subs	r2, #1
 800e02c:	d304      	bcc.n	800e038 <RDMDevice::RDMDevice()+0xa8>
 800e02e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800e032:	f805 0b01 	strb.w	r0, [r5], #1
 800e036:	e7f8      	b.n	800e02a <RDMDevice::RDMDevice()+0x9a>
 800e038:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800e03c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800e040:	64e3      	str	r3, [r4, #76]	; 0x4c
 800e042:	2319      	movs	r3, #25
 800e044:	4a0c      	ldr	r2, [pc, #48]	; (800e078 <RDMDevice::RDMDevice()+0xe8>)
 800e046:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800e04a:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800e04e:	f104 0353 	add.w	r3, r4, #83	; 0x53
 800e052:	4298      	cmp	r0, r3
 800e054:	d004      	beq.n	800e060 <RDMDevice::RDMDevice()+0xd0>
 800e056:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e05a:	f803 1b01 	strb.w	r1, [r3], #1
 800e05e:	e7f8      	b.n	800e052 <RDMDevice::RDMDevice()+0xc2>
 800e060:	4620      	mov	r0, r4
 800e062:	b003      	add	sp, #12
 800e064:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e066:	bf00      	nop
 800e068:	08017afe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr}
 800e06c:	08017b00 	stmdaeq	r1, {r8, r9, fp, ip, sp, lr}
 800e070:	2000cc60 	andcs	ip, r0, r0, ror #24
 800e074:	080176f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800e078:	08017ac2 	stmdaeq	r1, {r1, r6, r7, r9, fp, ip, sp, lr}

0800e07c <RDMDevice::Print()>:
 800e07c:	b513      	push	{r0, r1, r4, lr}
 800e07e:	4604      	mov	r4, r0
 800e080:	4818      	ldr	r0, [pc, #96]	; (800e0e4 <RDMDevice::Print()+0x68>)
 800e082:	f006 f8db 	bl	801423c <printf>
 800e086:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800e08a:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800e08e:	4816      	ldr	r0, [pc, #88]	; (800e0e8 <RDMDevice::Print()+0x6c>)
 800e090:	f006 f8d4 	bl	801423c <printf>
 800e094:	7862      	ldrb	r2, [r4, #1]
 800e096:	7821      	ldrb	r1, [r4, #0]
 800e098:	4814      	ldr	r0, [pc, #80]	; (800e0ec <RDMDevice::Print()+0x70>)
 800e09a:	f006 f8cf 	bl	801423c <printf>
 800e09e:	79a3      	ldrb	r3, [r4, #6]
 800e0a0:	7a22      	ldrb	r2, [r4, #8]
 800e0a2:	7a61      	ldrb	r1, [r4, #9]
 800e0a4:	9300      	str	r3, [sp, #0]
 800e0a6:	4812      	ldr	r0, [pc, #72]	; (800e0f0 <RDMDevice::Print()+0x74>)
 800e0a8:	79e3      	ldrb	r3, [r4, #7]
 800e0aa:	f006 f8c7 	bl	801423c <printf>
 800e0ae:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800e0b2:	f104 020a 	add.w	r2, r4, #10
 800e0b6:	480f      	ldr	r0, [pc, #60]	; (800e0f4 <RDMDevice::Print()+0x78>)
 800e0b8:	f006 f8c0 	bl	801423c <printf>
 800e0bc:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800e0c0:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800e0c4:	0a09      	lsrs	r1, r1, #8
 800e0c6:	480c      	ldr	r0, [pc, #48]	; (800e0f8 <RDMDevice::Print()+0x7c>)
 800e0c8:	f006 f8b8 	bl	801423c <printf>
 800e0cc:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e0d0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800e0d4:	4809      	ldr	r0, [pc, #36]	; (800e0fc <RDMDevice::Print()+0x80>)
 800e0d6:	0a09      	lsrs	r1, r1, #8
 800e0d8:	b002      	add	sp, #8
 800e0da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e0de:	f006 b8ad 	b.w	801423c <printf>
 800e0e2:	bf00      	nop
 800e0e4:	080179ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, fp, ip, sp, lr}
 800e0e8:	08017a08 	stmdaeq	r1, {r3, r9, fp, ip, sp, lr}
 800e0ec:	08017a23 	stmdaeq	r1, {r0, r1, r5, r9, fp, ip, sp, lr}
 800e0f0:	08017a42 	stmdaeq	r1, {r1, r6, r9, fp, ip, sp, lr}
 800e0f4:	08017a69 	stmdaeq	r1, {r0, r3, r5, r6, r9, fp, ip, sp, lr}
 800e0f8:	08017a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, sp, lr}
 800e0fc:	08017aa3 	stmdaeq	r1, {r0, r1, r5, r7, r9, fp, ip, sp, lr}

0800e100 <RDMDeviceController::RDMDeviceController()>:
 800e100:	b538      	push	{r3, r4, r5, lr}
 800e102:	4604      	mov	r4, r0
 800e104:	f7ff ff44 	bl	800df90 <RDMDevice::RDMDevice()>
 800e108:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800e10c:	b1b3      	cbz	r3, 800e13c <RDMDeviceController::RDMDeviceController()+0x3c>
 800e10e:	f104 010a 	add.w	r1, r4, #10
 800e112:	460b      	mov	r3, r1
 800e114:	4a11      	ldr	r2, [pc, #68]	; (800e15c <RDMDeviceController::RDMDeviceController()+0x5c>)
 800e116:	f104 0523 	add.w	r5, r4, #35	; 0x23
 800e11a:	429d      	cmp	r5, r3
 800e11c:	d004      	beq.n	800e128 <RDMDeviceController::RDMDeviceController()+0x28>
 800e11e:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e122:	f803 0b01 	strb.w	r0, [r3], #1
 800e126:	e7f8      	b.n	800e11a <RDMDeviceController::RDMDeviceController()+0x1a>
 800e128:	2219      	movs	r2, #25
 800e12a:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800e12c:	f884 202a 	strb.w	r2, [r4, #42]	; 0x2a
 800e130:	b110      	cbz	r0, 800e138 <RDMDeviceController::RDMDeviceController()+0x38>
 800e132:	6803      	ldr	r3, [r0, #0]
 800e134:	689b      	ldr	r3, [r3, #8]
 800e136:	4798      	blx	r3
 800e138:	4620      	mov	r0, r4
 800e13a:	bd38      	pop	{r3, r4, r5, pc}
 800e13c:	4a07      	ldr	r2, [pc, #28]	; (800e15c <RDMDeviceController::RDMDeviceController()+0x5c>)
 800e13e:	f104 0353 	add.w	r3, r4, #83	; 0x53
 800e142:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800e146:	4283      	cmp	r3, r0
 800e148:	d004      	beq.n	800e154 <RDMDeviceController::RDMDeviceController()+0x54>
 800e14a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e14e:	f803 1b01 	strb.w	r1, [r3], #1
 800e152:	e7f8      	b.n	800e146 <RDMDeviceController::RDMDeviceController()+0x46>
 800e154:	2319      	movs	r3, #25
 800e156:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800e15a:	e7ed      	b.n	800e138 <RDMDeviceController::RDMDeviceController()+0x38>
 800e15c:	08017adc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, fp, ip, sp, lr}

0800e160 <memcpy.isra.0>:
 800e160:	f005 bd1a 	b.w	8013b98 <memcpy>

0800e164 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800e164:	b510      	push	{r4, lr}
 800e166:	6001      	str	r1, [r0, #0]
 800e168:	2100      	movs	r1, #0
 800e16a:	4604      	mov	r4, r0
 800e16c:	6041      	str	r1, [r0, #4]
 800e16e:	2220      	movs	r2, #32
 800e170:	3008      	adds	r0, #8
 800e172:	f005 fd33 	bl	8013bdc <memset>
 800e176:	4b03      	ldr	r3, [pc, #12]	; (800e184 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800e178:	4620      	mov	r0, r4
 800e17a:	62a3      	str	r3, [r4, #40]	; 0x28
 800e17c:	237f      	movs	r3, #127	; 0x7f
 800e17e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800e182:	bd10      	pop	{r4, pc}
 800e184:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800e188 <RDMDeviceParams::Load()>:
 800e188:	4601      	mov	r1, r0
 800e18a:	6800      	ldr	r0, [r0, #0]
 800e18c:	b130      	cbz	r0, 800e19c <RDMDeviceParams::Load()+0x14>
 800e18e:	b508      	push	{r3, lr}
 800e190:	6803      	ldr	r3, [r0, #0]
 800e192:	3104      	adds	r1, #4
 800e194:	68db      	ldr	r3, [r3, #12]
 800e196:	4798      	blx	r3
 800e198:	2001      	movs	r0, #1
 800e19a:	bd08      	pop	{r3, pc}
 800e19c:	4770      	bx	lr

0800e19e <RDMDeviceParams::Set(RDMDevice*)>:
 800e19e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e1a0:	6843      	ldr	r3, [r0, #4]
 800e1a2:	460c      	mov	r4, r1
 800e1a4:	07d9      	lsls	r1, r3, #31
 800e1a6:	4605      	mov	r5, r0
 800e1a8:	d518      	bpl.n	800e1dc <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800e1aa:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800e1ae:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800e1b2:	2e20      	cmp	r6, #32
 800e1b4:	bf28      	it	cs
 800e1b6:	2620      	movcs	r6, #32
 800e1b8:	f100 0108 	add.w	r1, r0, #8
 800e1bc:	b1e3      	cbz	r3, 800e1f8 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800e1be:	f104 070a 	add.w	r7, r4, #10
 800e1c2:	4638      	mov	r0, r7
 800e1c4:	4632      	mov	r2, r6
 800e1c6:	f7ff ffcb 	bl	800e160 <memcpy.isra.0>
 800e1ca:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800e1cc:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800e1d0:	b120      	cbz	r0, 800e1dc <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800e1d2:	6803      	ldr	r3, [r0, #0]
 800e1d4:	4632      	mov	r2, r6
 800e1d6:	4639      	mov	r1, r7
 800e1d8:	689b      	ldr	r3, [r3, #8]
 800e1da:	4798      	blx	r3
 800e1dc:	686b      	ldr	r3, [r5, #4]
 800e1de:	079a      	lsls	r2, r3, #30
 800e1e0:	bf44      	itt	mi
 800e1e2:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800e1e6:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800e1ea:	075b      	lsls	r3, r3, #29
 800e1ec:	bf44      	itt	mi
 800e1ee:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800e1f2:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800e1f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e1f8:	4632      	mov	r2, r6
 800e1fa:	f104 0053 	add.w	r0, r4, #83	; 0x53
 800e1fe:	f7ff ffaf 	bl	800e160 <memcpy.isra.0>
 800e202:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 800e206:	e7e9      	b.n	800e1dc <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800e208 <RDMDeviceParams::Dump()>:
 800e208:	4770      	bx	lr

0800e20a <memcpy.isra.0>:
 800e20a:	3801      	subs	r0, #1
 800e20c:	440a      	add	r2, r1
 800e20e:	4291      	cmp	r1, r2
 800e210:	d004      	beq.n	800e21c <memcpy.isra.0+0x12>
 800e212:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e216:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e21a:	e7f8      	b.n	800e20e <memcpy.isra.0+0x4>
 800e21c:	4770      	bx	lr
	...

0800e220 <RDMMessage::RDMMessage()>:
 800e220:	23cc      	movs	r3, #204	; 0xcc
 800e222:	b570      	push	{r4, r5, r6, lr}
 800e224:	7003      	strb	r3, [r0, #0]
 800e226:	2501      	movs	r5, #1
 800e228:	2318      	movs	r3, #24
 800e22a:	4604      	mov	r4, r0
 800e22c:	4e0a      	ldr	r6, [pc, #40]	; (800e258 <RDMMessage::RDMMessage()+0x38>)
 800e22e:	7083      	strb	r3, [r0, #2]
 800e230:	7045      	strb	r5, [r0, #1]
 800e232:	4631      	mov	r1, r6
 800e234:	2206      	movs	r2, #6
 800e236:	3009      	adds	r0, #9
 800e238:	f7ff ffe7 	bl	800e20a <memcpy.isra.0>
 800e23c:	1ce0      	adds	r0, r4, #3
 800e23e:	2206      	movs	r2, #6
 800e240:	4631      	mov	r1, r6
 800e242:	f7ff ffe2 	bl	800e20a <memcpy.isra.0>
 800e246:	2300      	movs	r3, #0
 800e248:	4620      	mov	r0, r4
 800e24a:	7425      	strb	r5, [r4, #16]
 800e24c:	7463      	strb	r3, [r4, #17]
 800e24e:	74a3      	strb	r3, [r4, #18]
 800e250:	74e3      	strb	r3, [r4, #19]
 800e252:	75e3      	strb	r3, [r4, #23]
 800e254:	bd70      	pop	{r4, r5, r6, pc}
 800e256:	bf00      	nop
 800e258:	08017af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, ip, sp, lr}

0800e25c <RDMMessage::SetSrcUid(unsigned char const*)>:
 800e25c:	2206      	movs	r2, #6
 800e25e:	3009      	adds	r0, #9
 800e260:	f7ff bfd3 	b.w	800e20a <memcpy.isra.0>

0800e264 <RDMMessage::SetDstUid(unsigned char const*)>:
 800e264:	2206      	movs	r2, #6
 800e266:	3003      	adds	r0, #3
 800e268:	f7ff bfcf 	b.w	800e20a <memcpy.isra.0>

0800e26c <RDMMessage::SetCc(unsigned char)>:
 800e26c:	7501      	strb	r1, [r0, #20]
 800e26e:	4770      	bx	lr

0800e270 <RDMMessage::SetPid(unsigned short)>:
 800e270:	0a0b      	lsrs	r3, r1, #8
 800e272:	7543      	strb	r3, [r0, #21]
 800e274:	7581      	strb	r1, [r0, #22]
 800e276:	4770      	bx	lr

0800e278 <RDMMessage::SetPd(unsigned char const*, unsigned char)>:
 800e278:	b538      	push	{r3, r4, r5, lr}
 800e27a:	4604      	mov	r4, r0
 800e27c:	7883      	ldrb	r3, [r0, #2]
 800e27e:	7dc0      	ldrb	r0, [r0, #23]
 800e280:	4615      	mov	r5, r2
 800e282:	1a1b      	subs	r3, r3, r0
 800e284:	70a3      	strb	r3, [r4, #2]
 800e286:	75e2      	strb	r2, [r4, #23]
 800e288:	b121      	cbz	r1, 800e294 <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x1c>
 800e28a:	b11a      	cbz	r2, 800e294 <RDMMessage::SetPd(unsigned char const*, unsigned char)+0x1c>
 800e28c:	f104 0018 	add.w	r0, r4, #24
 800e290:	f7ff ffbb 	bl	800e20a <memcpy.isra.0>
 800e294:	78a2      	ldrb	r2, [r4, #2]
 800e296:	4415      	add	r5, r2
 800e298:	70a5      	strb	r5, [r4, #2]
 800e29a:	bd38      	pop	{r3, r4, r5, pc}

0800e29c <RDMMessage::Send(unsigned int, unsigned int)>:
 800e29c:	460b      	mov	r3, r1
 800e29e:	4601      	mov	r1, r0
 800e2a0:	4618      	mov	r0, r3
 800e2a2:	f001 b949 	b.w	800f538 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)>

0800e2a6 <uuid_unparse_x>:
 800e2a6:	4603      	mov	r3, r0
 800e2a8:	b530      	push	{r4, r5, lr}
 800e2aa:	4608      	mov	r0, r1
 800e2ac:	4611      	mov	r1, r2
 800e2ae:	681a      	ldr	r2, [r3, #0]
 800e2b0:	b08f      	sub	sp, #60	; 0x3c
 800e2b2:	ba12      	rev	r2, r2
 800e2b4:	920a      	str	r2, [sp, #40]	; 0x28
 800e2b6:	889a      	ldrh	r2, [r3, #4]
 800e2b8:	891c      	ldrh	r4, [r3, #8]
 800e2ba:	ba52      	rev16	r2, r2
 800e2bc:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e2c0:	88da      	ldrh	r2, [r3, #6]
 800e2c2:	ba64      	rev16	r4, r4
 800e2c4:	ba52      	rev16	r2, r2
 800e2c6:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e2ca:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800e2ce:	f103 020a 	add.w	r2, r3, #10
 800e2d2:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800e2d6:	3310      	adds	r3, #16
 800e2d8:	4293      	cmp	r3, r2
 800e2da:	d122      	bne.n	800e322 <uuid_unparse_x+0x7c>
 800e2dc:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800e2e0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e2e4:	9208      	str	r2, [sp, #32]
 800e2e6:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800e2ea:	0a1b      	lsrs	r3, r3, #8
 800e2ec:	9207      	str	r2, [sp, #28]
 800e2ee:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800e2f2:	9301      	str	r3, [sp, #4]
 800e2f4:	9206      	str	r2, [sp, #24]
 800e2f6:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800e2fa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e2fe:	9205      	str	r2, [sp, #20]
 800e300:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800e304:	9300      	str	r3, [sp, #0]
 800e306:	9204      	str	r2, [sp, #16]
 800e308:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800e30c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800e310:	9203      	str	r2, [sp, #12]
 800e312:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800e316:	9202      	str	r2, [sp, #8]
 800e318:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e31a:	f005 ff9f 	bl	801425c <sprintf>
 800e31e:	b00f      	add	sp, #60	; 0x3c
 800e320:	bd30      	pop	{r4, r5, pc}
 800e322:	f812 5b01 	ldrb.w	r5, [r2], #1
 800e326:	f804 5b01 	strb.w	r5, [r4], #1
 800e32a:	e7d5      	b.n	800e2d8 <uuid_unparse_x+0x32>

0800e32c <uuid_unparse>:
 800e32c:	4a01      	ldr	r2, [pc, #4]	; (800e334 <uuid_unparse+0x8>)
 800e32e:	f7ff bfba 	b.w	800e2a6 <uuid_unparse_x>
 800e332:	bf00      	nop
 800e334:	08017b1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, fp, ip, sp, lr}

0800e338 <LightSet::Blackout(bool)>:
 800e338:	4770      	bx	lr

0800e33a <DmxSend::~DmxSend()>:
 800e33a:	4770      	bx	lr

0800e33c <DmxSend::Start(unsigned int)>:
 800e33c:	2301      	movs	r3, #1
 800e33e:	b410      	push	{r4}
 800e340:	4c08      	ldr	r4, [pc, #32]	; (800e364 <DmxSend::Start(unsigned int)+0x28>)
 800e342:	fa03 f001 	lsl.w	r0, r3, r1
 800e346:	7822      	ldrb	r2, [r4, #0]
 800e348:	ea30 0c02 	bics.w	ip, r0, r2
 800e34c:	d007      	beq.n	800e35e <DmxSend::Start(unsigned int)+0x22>
 800e34e:	4302      	orrs	r2, r0
 800e350:	4805      	ldr	r0, [pc, #20]	; (800e368 <DmxSend::Start(unsigned int)+0x2c>)
 800e352:	7022      	strb	r2, [r4, #0]
 800e354:	6800      	ldr	r0, [r0, #0]
 800e356:	2200      	movs	r2, #0
 800e358:	bc10      	pop	{r4}
 800e35a:	f000 be05 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e35e:	bc10      	pop	{r4}
 800e360:	4770      	bx	lr
 800e362:	bf00      	nop
 800e364:	20003270 	andcs	r3, r0, r0, ror r2
 800e368:	20004328 	andcs	r4, r0, r8, lsr #6

0800e36c <DmxSend::Stop(unsigned int)>:
 800e36c:	2201      	movs	r2, #1
 800e36e:	b410      	push	{r4}
 800e370:	4809      	ldr	r0, [pc, #36]	; (800e398 <DmxSend::Stop(unsigned int)+0x2c>)
 800e372:	408a      	lsls	r2, r1
 800e374:	7803      	ldrb	r3, [r0, #0]
 800e376:	ea03 0402 	and.w	r4, r3, r2
 800e37a:	439a      	bics	r2, r3
 800e37c:	d109      	bne.n	800e392 <DmxSend::Stop(unsigned int)+0x26>
 800e37e:	ea23 0304 	bic.w	r3, r3, r4
 800e382:	7003      	strb	r3, [r0, #0]
 800e384:	2300      	movs	r3, #0
 800e386:	4805      	ldr	r0, [pc, #20]	; (800e39c <DmxSend::Stop(unsigned int)+0x30>)
 800e388:	461a      	mov	r2, r3
 800e38a:	6800      	ldr	r0, [r0, #0]
 800e38c:	bc10      	pop	{r4}
 800e38e:	f000 bdeb 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e392:	bc10      	pop	{r4}
 800e394:	4770      	bx	lr
 800e396:	bf00      	nop
 800e398:	20003270 	andcs	r3, r0, r0, ror r2
 800e39c:	20004328 	andcs	r4, r0, r8, lsr #6

0800e3a0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800e3a0:	b11b      	cbz	r3, 800e3aa <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800e3a2:	4802      	ldr	r0, [pc, #8]	; (800e3ac <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800e3a4:	6800      	ldr	r0, [r0, #0]
 800e3a6:	f000 bfd7 	b.w	800f358 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800e3aa:	4770      	bx	lr
 800e3ac:	20004328 	andcs	r4, r0, r8, lsr #6

0800e3b0 <DmxSend::Print()>:
 800e3b0:	b510      	push	{r4, lr}
 800e3b2:	4c0e      	ldr	r4, [pc, #56]	; (800e3ec <DmxSend::Print()+0x3c>)
 800e3b4:	480e      	ldr	r0, [pc, #56]	; (800e3f0 <DmxSend::Print()+0x40>)
 800e3b6:	f005 ff41 	bl	801423c <printf>
 800e3ba:	6823      	ldr	r3, [r4, #0]
 800e3bc:	480d      	ldr	r0, [pc, #52]	; (800e3f4 <DmxSend::Print()+0x44>)
 800e3be:	6819      	ldr	r1, [r3, #0]
 800e3c0:	f005 ff3c 	bl	801423c <printf>
 800e3c4:	6823      	ldr	r3, [r4, #0]
 800e3c6:	480c      	ldr	r0, [pc, #48]	; (800e3f8 <DmxSend::Print()+0x48>)
 800e3c8:	6859      	ldr	r1, [r3, #4]
 800e3ca:	f005 ff37 	bl	801423c <printf>
 800e3ce:	6823      	ldr	r3, [r4, #0]
 800e3d0:	490a      	ldr	r1, [pc, #40]	; (800e3fc <DmxSend::Print()+0x4c>)
 800e3d2:	689b      	ldr	r3, [r3, #8]
 800e3d4:	480a      	ldr	r0, [pc, #40]	; (800e400 <DmxSend::Print()+0x50>)
 800e3d6:	fbb1 f1f3 	udiv	r1, r1, r3
 800e3da:	f005 ff2f 	bl	801423c <printf>
 800e3de:	6823      	ldr	r3, [r4, #0]
 800e3e0:	4808      	ldr	r0, [pc, #32]	; (800e404 <DmxSend::Print()+0x54>)
 800e3e2:	8a19      	ldrh	r1, [r3, #16]
 800e3e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e3e8:	f005 bf28 	b.w	801423c <printf>
 800e3ec:	20004328 	andcs	r4, r0, r8, lsr #6
 800e3f0:	08017b4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, fp, ip, sp, lr}
 800e3f4:	08017b57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp, lr}
 800e3f8:	08017b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, lr}
 800e3fc:	000f4240 	andeq	r4, pc, r0, asr #4
 800e400:	08017b7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, lr}
 800e404:	08017b93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, fp, ip, sp, lr}

0800e408 <DmxSend::~DmxSend()>:
 800e408:	b510      	push	{r4, lr}
 800e40a:	4604      	mov	r4, r0
 800e40c:	f005 fb0c 	bl	8013a28 <operator delete(void*)>
 800e410:	4620      	mov	r0, r4
 800e412:	bd10      	pop	{r4, pc}

0800e414 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800e414:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e416:	88c5      	ldrh	r5, [r0, #6]
 800e418:	8886      	ldrh	r6, [r0, #4]
 800e41a:	42b5      	cmp	r5, r6
 800e41c:	d216      	bcs.n	800e44c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800e41e:	4604      	mov	r4, r0
 800e420:	6800      	ldr	r0, [r0, #0]
 800e422:	4428      	add	r0, r5
 800e424:	1b75      	subs	r5, r6, r5
 800e426:	7a26      	ldrb	r6, [r4, #8]
 800e428:	b923      	cbnz	r3, 800e434 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800e42a:	b926      	cbnz	r6, 800e436 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800e42c:	9200      	str	r2, [sp, #0]
 800e42e:	460b      	mov	r3, r1
 800e430:	4a09      	ldr	r2, [pc, #36]	; (800e458 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800e432:	e003      	b.n	800e43c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e434:	b166      	cbz	r6, 800e450 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800e436:	460b      	mov	r3, r1
 800e438:	9200      	str	r2, [sp, #0]
 800e43a:	4a08      	ldr	r2, [pc, #32]	; (800e45c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800e43c:	4629      	mov	r1, r5
 800e43e:	f005 ff25 	bl	801428c <snprintf>
 800e442:	4285      	cmp	r5, r0
 800e444:	bfa2      	ittt	ge
 800e446:	88e3      	ldrhge	r3, [r4, #6]
 800e448:	181b      	addge	r3, r3, r0
 800e44a:	80e3      	strhge	r3, [r4, #6]
 800e44c:	b002      	add	sp, #8
 800e44e:	bd70      	pop	{r4, r5, r6, pc}
 800e450:	9200      	str	r2, [sp, #0]
 800e452:	460b      	mov	r3, r1
 800e454:	4a02      	ldr	r2, [pc, #8]	; (800e460 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800e456:	e7f1      	b.n	800e43c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800e458:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 800e45c:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 800e460:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

0800e464 <DmxParams::DmxParams(DmxParamsStore*)>:
 800e464:	6001      	str	r1, [r0, #0]
 800e466:	2100      	movs	r1, #0
 800e468:	4a03      	ldr	r2, [pc, #12]	; (800e478 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800e46a:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e46e:	f64f 7228 	movw	r2, #65320	; 0xff28
 800e472:	8182      	strh	r2, [r0, #12]
 800e474:	4770      	bx	lr
 800e476:	bf00      	nop
 800e478:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800e47c <DmxParams::Load()>:
 800e47c:	b508      	push	{r3, lr}
 800e47e:	2300      	movs	r3, #0
 800e480:	4601      	mov	r1, r0
 800e482:	6043      	str	r3, [r0, #4]
 800e484:	6800      	ldr	r0, [r0, #0]
 800e486:	b120      	cbz	r0, 800e492 <DmxParams::Load()+0x16>
 800e488:	6803      	ldr	r3, [r0, #0]
 800e48a:	3104      	adds	r1, #4
 800e48c:	68db      	ldr	r3, [r3, #12]
 800e48e:	4798      	blx	r3
 800e490:	2001      	movs	r0, #1
 800e492:	bd08      	pop	{r3, pc}

0800e494 <DmxParams::Load(char const*, unsigned int)>:
 800e494:	6803      	ldr	r3, [r0, #0]
 800e496:	b1d3      	cbz	r3, 800e4ce <DmxParams::Load(char const*, unsigned int)+0x3a>
 800e498:	2300      	movs	r3, #0
 800e49a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e49c:	460d      	mov	r5, r1
 800e49e:	4616      	mov	r6, r2
 800e4a0:	4604      	mov	r4, r0
 800e4a2:	6043      	str	r3, [r0, #4]
 800e4a4:	4602      	mov	r2, r0
 800e4a6:	490a      	ldr	r1, [pc, #40]	; (800e4d0 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800e4a8:	4668      	mov	r0, sp
 800e4aa:	f004 fd27 	bl	8012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e4ae:	4632      	mov	r2, r6
 800e4b0:	4629      	mov	r1, r5
 800e4b2:	4668      	mov	r0, sp
 800e4b4:	f004 fd26 	bl	8012f04 <ReadConfigFile::Read(char const*, unsigned int)>
 800e4b8:	4621      	mov	r1, r4
 800e4ba:	f851 0b04 	ldr.w	r0, [r1], #4
 800e4be:	6803      	ldr	r3, [r0, #0]
 800e4c0:	689b      	ldr	r3, [r3, #8]
 800e4c2:	4798      	blx	r3
 800e4c4:	4668      	mov	r0, sp
 800e4c6:	f004 fd1c 	bl	8012f02 <ReadConfigFile::~ReadConfigFile()>
 800e4ca:	b002      	add	sp, #8
 800e4cc:	bd70      	pop	{r4, r5, r6, pc}
 800e4ce:	4770      	bx	lr
 800e4d0:	0800e5a1 	stmdaeq	r0, {r0, r5, r7, r8, sl, sp, lr, pc}

0800e4d4 <DmxParams::callbackFunction(char const*)>:
 800e4d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e4d6:	460d      	mov	r5, r1
 800e4d8:	4604      	mov	r4, r0
 800e4da:	492d      	ldr	r1, [pc, #180]	; (800e590 <DmxParams::callbackFunction(char const*)+0xbc>)
 800e4dc:	4628      	mov	r0, r5
 800e4de:	f10d 0206 	add.w	r2, sp, #6
 800e4e2:	f004 fdff 	bl	80130e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e4e6:	b988      	cbnz	r0, 800e50c <DmxParams::callbackFunction(char const*)+0x38>
 800e4e8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e4ec:	6863      	ldr	r3, [r4, #4]
 800e4ee:	2a5b      	cmp	r2, #91	; 0x5b
 800e4f0:	d907      	bls.n	800e502 <DmxParams::callbackFunction(char const*)+0x2e>
 800e4f2:	2ab0      	cmp	r2, #176	; 0xb0
 800e4f4:	d005      	beq.n	800e502 <DmxParams::callbackFunction(char const*)+0x2e>
 800e4f6:	8122      	strh	r2, [r4, #8]
 800e4f8:	f043 0301 	orr.w	r3, r3, #1
 800e4fc:	6063      	str	r3, [r4, #4]
 800e4fe:	b003      	add	sp, #12
 800e500:	bd30      	pop	{r4, r5, pc}
 800e502:	22b0      	movs	r2, #176	; 0xb0
 800e504:	f023 0301 	bic.w	r3, r3, #1
 800e508:	8122      	strh	r2, [r4, #8]
 800e50a:	e7f7      	b.n	800e4fc <DmxParams::callbackFunction(char const*)+0x28>
 800e50c:	4628      	mov	r0, r5
 800e50e:	4921      	ldr	r1, [pc, #132]	; (800e594 <DmxParams::callbackFunction(char const*)+0xc0>)
 800e510:	f10d 0206 	add.w	r2, sp, #6
 800e514:	f004 fde6 	bl	80130e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e518:	b968      	cbnz	r0, 800e536 <DmxParams::callbackFunction(char const*)+0x62>
 800e51a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e51e:	6863      	ldr	r3, [r4, #4]
 800e520:	2a0c      	cmp	r2, #12
 800e522:	bf93      	iteet	ls
 800e524:	220c      	movls	r2, #12
 800e526:	8162      	strhhi	r2, [r4, #10]
 800e528:	f043 0302 	orrhi.w	r3, r3, #2
 800e52c:	8162      	strhls	r2, [r4, #10]
 800e52e:	bf98      	it	ls
 800e530:	f023 0302 	bicls.w	r3, r3, #2
 800e534:	e7e2      	b.n	800e4fc <DmxParams::callbackFunction(char const*)+0x28>
 800e536:	4628      	mov	r0, r5
 800e538:	4917      	ldr	r1, [pc, #92]	; (800e598 <DmxParams::callbackFunction(char const*)+0xc4>)
 800e53a:	f10d 0205 	add.w	r2, sp, #5
 800e53e:	f004 fdef 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e542:	b950      	cbnz	r0, 800e55a <DmxParams::callbackFunction(char const*)+0x86>
 800e544:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800e548:	6863      	ldr	r3, [r4, #4]
 800e54a:	2a28      	cmp	r2, #40	; 0x28
 800e54c:	7322      	strb	r2, [r4, #12]
 800e54e:	bf14      	ite	ne
 800e550:	f043 0304 	orrne.w	r3, r3, #4
 800e554:	f023 0304 	biceq.w	r3, r3, #4
 800e558:	e7d0      	b.n	800e4fc <DmxParams::callbackFunction(char const*)+0x28>
 800e55a:	4628      	mov	r0, r5
 800e55c:	490f      	ldr	r1, [pc, #60]	; (800e59c <DmxParams::callbackFunction(char const*)+0xc8>)
 800e55e:	f10d 0206 	add.w	r2, sp, #6
 800e562:	f004 fdbf 	bl	80130e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800e566:	2800      	cmp	r0, #0
 800e568:	d1c9      	bne.n	800e4fe <DmxParams::callbackFunction(char const*)+0x2a>
 800e56a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800e56e:	6863      	ldr	r3, [r4, #4]
 800e570:	1e91      	subs	r1, r2, #2
 800e572:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800e576:	bf2f      	iteee	cs
 800e578:	22ff      	movcs	r2, #255	; 0xff
 800e57a:	0852      	lsrcc	r2, r2, #1
 800e57c:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800e580:	7362      	strbcc	r2, [r4, #13]
 800e582:	bf32      	itee	cc
 800e584:	f043 0308 	orrcc.w	r3, r3, #8
 800e588:	7362      	strbcs	r2, [r4, #13]
 800e58a:	f023 0308 	biccs.w	r3, r3, #8
 800e58e:	e7b5      	b.n	800e4fc <DmxParams::callbackFunction(char const*)+0x28>
 800e590:	08017bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 800e594:	08017c00 	stmdaeq	r1, {sl, fp, ip, sp, lr}
 800e598:	08017bf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e59c:	08017be7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, fp, ip, sp, lr}

0800e5a0 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800e5a0:	f7ff bf98 	b.w	800e4d4 <DmxParams::callbackFunction(char const*)>

0800e5a4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800e5a4:	b570      	push	{r4, r5, r6, lr}
 800e5a6:	4604      	mov	r4, r0
 800e5a8:	4615      	mov	r5, r2
 800e5aa:	461e      	mov	r6, r3
 800e5ac:	b086      	sub	sp, #24
 800e5ae:	3004      	adds	r0, #4
 800e5b0:	b361      	cbz	r1, 800e60c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 800e5b2:	220a      	movs	r2, #10
 800e5b4:	f005 fafb 	bl	8013bae <memmove>
 800e5b8:	462a      	mov	r2, r5
 800e5ba:	4633      	mov	r3, r6
 800e5bc:	4931      	ldr	r1, [pc, #196]	; (800e684 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 800e5be:	a803      	add	r0, sp, #12
 800e5c0:	f004 fbfc 	bl	8012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e5c4:	6863      	ldr	r3, [r4, #4]
 800e5c6:	8922      	ldrh	r2, [r4, #8]
 800e5c8:	492f      	ldr	r1, [pc, #188]	; (800e688 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800e5ca:	f003 0301 	and.w	r3, r3, #1
 800e5ce:	a803      	add	r0, sp, #12
 800e5d0:	f7ff ff20 	bl	800e414 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e5d4:	6863      	ldr	r3, [r4, #4]
 800e5d6:	492d      	ldr	r1, [pc, #180]	; (800e68c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800e5d8:	8962      	ldrh	r2, [r4, #10]
 800e5da:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800e5de:	a803      	add	r0, sp, #12
 800e5e0:	f7ff ff18 	bl	800e414 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e5e4:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800e5e8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e5ec:	42a9      	cmp	r1, r5
 800e5ee:	d222      	bcs.n	800e636 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 800e5f0:	9803      	ldr	r0, [sp, #12]
 800e5f2:	1a6d      	subs	r5, r5, r1
 800e5f4:	4408      	add	r0, r1
 800e5f6:	6861      	ldr	r1, [r4, #4]
 800e5f8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800e5fc:	0749      	lsls	r1, r1, #29
 800e5fe:	7b23      	ldrb	r3, [r4, #12]
 800e600:	d40b      	bmi.n	800e61a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 800e602:	b95a      	cbnz	r2, 800e61c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800e604:	9300      	str	r3, [sp, #0]
 800e606:	4a22      	ldr	r2, [pc, #136]	; (800e690 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800e608:	4b22      	ldr	r3, [pc, #136]	; (800e694 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800e60a:	e00a      	b.n	800e622 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800e60c:	6823      	ldr	r3, [r4, #0]
 800e60e:	4601      	mov	r1, r0
 800e610:	681a      	ldr	r2, [r3, #0]
 800e612:	4618      	mov	r0, r3
 800e614:	68d2      	ldr	r2, [r2, #12]
 800e616:	4790      	blx	r2
 800e618:	e7ce      	b.n	800e5b8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800e61a:	b37a      	cbz	r2, 800e67c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 800e61c:	9300      	str	r3, [sp, #0]
 800e61e:	4a1e      	ldr	r2, [pc, #120]	; (800e698 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800e620:	4b1c      	ldr	r3, [pc, #112]	; (800e694 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800e622:	4629      	mov	r1, r5
 800e624:	f005 fe32 	bl	801428c <snprintf>
 800e628:	4285      	cmp	r5, r0
 800e62a:	bfa2      	ittt	ge
 800e62c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800e630:	18c0      	addge	r0, r0, r3
 800e632:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800e636:	7b62      	ldrb	r2, [r4, #13]
 800e638:	6863      	ldr	r3, [r4, #4]
 800e63a:	3201      	adds	r2, #1
 800e63c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800e640:	4916      	ldr	r1, [pc, #88]	; (800e69c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800e642:	0052      	lsls	r2, r2, #1
 800e644:	a803      	add	r0, sp, #12
 800e646:	f7ff fee5 	bl	800e414 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800e64a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e64e:	b17b      	cbz	r3, 800e670 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 800e650:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e654:	9b03      	ldr	r3, [sp, #12]
 800e656:	4413      	add	r3, r2
 800e658:	227d      	movs	r2, #125	; 0x7d
 800e65a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e65e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e662:	9903      	ldr	r1, [sp, #12]
 800e664:	54ca      	strb	r2, [r1, r3]
 800e666:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e66a:	3301      	adds	r3, #1
 800e66c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e670:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e676:	601a      	str	r2, [r3, #0]
 800e678:	b006      	add	sp, #24
 800e67a:	bd70      	pop	{r4, r5, r6, pc}
 800e67c:	9300      	str	r3, [sp, #0]
 800e67e:	4a08      	ldr	r2, [pc, #32]	; (800e6a0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800e680:	4b04      	ldr	r3, [pc, #16]	; (800e694 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800e682:	e7ce      	b.n	800e622 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800e684:	08017c09 	stmdaeq	r1, {r0, r3, sl, fp, ip, sp, lr}
 800e688:	08017bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 800e68c:	08017c00 	stmdaeq	r1, {sl, fp, ip, sp, lr}
 800e690:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 800e694:	08017bf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e698:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 800e69c:	08017be7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 800e6a0:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

0800e6a4 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800e6a4:	b513      	push	{r0, r1, r4, lr}
 800e6a6:	6804      	ldr	r4, [r0, #0]
 800e6a8:	b914      	cbnz	r4, 800e6b0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e6aa:	601c      	str	r4, [r3, #0]
 800e6ac:	b002      	add	sp, #8
 800e6ae:	bd10      	pop	{r4, pc}
 800e6b0:	9300      	str	r3, [sp, #0]
 800e6b2:	4613      	mov	r3, r2
 800e6b4:	460a      	mov	r2, r1
 800e6b6:	2100      	movs	r1, #0
 800e6b8:	f7ff ff74 	bl	800e5a4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800e6bc:	e7f6      	b.n	800e6ac <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800e6c0 <DmxParams::Set(Dmx*)>:
 800e6c0:	b538      	push	{r3, r4, r5, lr}
 800e6c2:	6843      	ldr	r3, [r0, #4]
 800e6c4:	4604      	mov	r4, r0
 800e6c6:	07d8      	lsls	r0, r3, #31
 800e6c8:	460d      	mov	r5, r1
 800e6ca:	d503      	bpl.n	800e6d4 <DmxParams::Set(Dmx*)+0x14>
 800e6cc:	4628      	mov	r0, r5
 800e6ce:	8921      	ldrh	r1, [r4, #8]
 800e6d0:	f000 fe12 	bl	800f2f8 <Dmx::SetDmxBreakTime(unsigned int)>
 800e6d4:	6863      	ldr	r3, [r4, #4]
 800e6d6:	0799      	lsls	r1, r3, #30
 800e6d8:	d503      	bpl.n	800e6e2 <DmxParams::Set(Dmx*)+0x22>
 800e6da:	4628      	mov	r0, r5
 800e6dc:	8961      	ldrh	r1, [r4, #10]
 800e6de:	f000 fe15 	bl	800f30c <Dmx::SetDmxMabTime(unsigned int)>
 800e6e2:	6863      	ldr	r3, [r4, #4]
 800e6e4:	075a      	lsls	r2, r3, #29
 800e6e6:	d507      	bpl.n	800e6f8 <DmxParams::Set(Dmx*)+0x38>
 800e6e8:	7b21      	ldrb	r1, [r4, #12]
 800e6ea:	b111      	cbz	r1, 800e6f2 <DmxParams::Set(Dmx*)+0x32>
 800e6ec:	4b08      	ldr	r3, [pc, #32]	; (800e710 <DmxParams::Set(Dmx*)+0x50>)
 800e6ee:	fbb3 f1f1 	udiv	r1, r3, r1
 800e6f2:	4628      	mov	r0, r5
 800e6f4:	f000 fdc0 	bl	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e6f8:	6863      	ldr	r3, [r4, #4]
 800e6fa:	071b      	lsls	r3, r3, #28
 800e6fc:	d507      	bpl.n	800e70e <DmxParams::Set(Dmx*)+0x4e>
 800e6fe:	7b61      	ldrb	r1, [r4, #13]
 800e700:	4628      	mov	r0, r5
 800e702:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e706:	3101      	adds	r1, #1
 800e708:	0049      	lsls	r1, r1, #1
 800e70a:	f000 be09 	b.w	800f320 <Dmx::SetDmxSlots(unsigned short)>
 800e70e:	bd38      	pop	{r3, r4, r5, pc}
 800e710:	000f4240 	andeq	r4, pc, r0, asr #4

0800e714 <DmxParams::Dump()>:
 800e714:	4770      	bx	lr
	...

0800e718 <Rdm::Receive(unsigned int)>:
 800e718:	4b02      	ldr	r3, [pc, #8]	; (800e724 <Rdm::Receive(unsigned int)+0xc>)
 800e71a:	4601      	mov	r1, r0
 800e71c:	6818      	ldr	r0, [r3, #0]
 800e71e:	f000 bed7 	b.w	800f4d0 <Dmx::RdmReceive(unsigned int)>
 800e722:	bf00      	nop
 800e724:	20004328 	andcs	r4, r0, r8, lsr #6

0800e728 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)>:
 800e728:	4b02      	ldr	r3, [pc, #8]	; (800e734 <Rdm::ReceiveTimeOut(unsigned int, unsigned short)+0xc>)
 800e72a:	460a      	mov	r2, r1
 800e72c:	4601      	mov	r1, r0
 800e72e:	6818      	ldr	r0, [r3, #0]
 800e730:	f000 bee0 	b.w	800f4f4 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)>
 800e734:	20004328 	andcs	r4, r0, r8, lsr #6

0800e738 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>:
 800e738:	2300      	movs	r3, #0
 800e73a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e73e:	4604      	mov	r4, r0
 800e740:	460e      	mov	r6, r1
 800e742:	4617      	mov	r7, r2
 800e744:	4d0b      	ldr	r5, [pc, #44]	; (800e774 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)+0x3c>)
 800e746:	461a      	mov	r2, r3
 800e748:	4601      	mov	r1, r0
 800e74a:	6828      	ldr	r0, [r5, #0]
 800e74c:	f000 fc0c 	bl	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e750:	463b      	mov	r3, r7
 800e752:	4632      	mov	r2, r6
 800e754:	4621      	mov	r1, r4
 800e756:	6828      	ldr	r0, [r5, #0]
 800e758:	f000 fe42 	bl	800f3e0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>
 800e75c:	2100      	movs	r1, #0
 800e75e:	2004      	movs	r0, #4
 800e760:	f007 f914 	bl	801598c <udelay(unsigned int, unsigned int)>
 800e764:	2301      	movs	r3, #1
 800e766:	4621      	mov	r1, r4
 800e768:	6828      	ldr	r0, [r5, #0]
 800e76a:	461a      	mov	r2, r3
 800e76c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e770:	f000 bbfa 	b.w	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e774:	20004328 	andcs	r4, r0, r8, lsr #6

0800e778 <gpio_mode_output(unsigned int, unsigned int)>:
 800e778:	460b      	mov	r3, r1
 800e77a:	2203      	movs	r2, #3
 800e77c:	2110      	movs	r1, #16
 800e77e:	f006 b8b7 	b.w	80148f0 <gpio_init>

0800e782 <gpio_mode_af(unsigned int, unsigned int)>:
 800e782:	460b      	mov	r3, r1
 800e784:	2203      	movs	r2, #3
 800e786:	2118      	movs	r1, #24
 800e788:	f006 b8b2 	b.w	80148f0 <gpio_init>

0800e78c <uart_dmx_config(unsigned int)>:
 800e78c:	2302      	movs	r3, #2
 800e78e:	b507      	push	{r0, r1, r2, lr}
 800e790:	2208      	movs	r2, #8
 800e792:	9300      	str	r3, [sp, #0]
 800e794:	4903      	ldr	r1, [pc, #12]	; (800e7a4 <uart_dmx_config(unsigned int)+0x18>)
 800e796:	2300      	movs	r3, #0
 800e798:	f006 ff82 	bl	80156a0 <gd32_uart_begin>
 800e79c:	b003      	add	sp, #12
 800e79e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7a2:	bf00      	nop
 800e7a4:	0003d090 	muleq	r3, r0, r0

0800e7a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800e7a8:	b570      	push	{r4, r5, r6, lr}
 800e7aa:	f3bf 8f5f 	dmb	sy
 800e7ae:	6803      	ldr	r3, [r0, #0]
 800e7b0:	4c9a      	ldr	r4, [pc, #616]	; (800ea1c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x274>)
 800e7b2:	f013 0f02 	tst.w	r3, #2
 800e7b6:	d00f      	beq.n	800e7d8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x30>
 800e7b8:	6803      	ldr	r3, [r0, #0]
 800e7ba:	2200      	movs	r2, #0
 800e7bc:	f023 0302 	bic.w	r3, r3, #2
 800e7c0:	6003      	str	r3, [r0, #0]
 800e7c2:	6843      	ldr	r3, [r0, #4]
 800e7c4:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e7c8:	fb03 4301 	mla	r3, r3, r1, r4
 800e7cc:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800e7d0:	2202      	movs	r2, #2
 800e7d2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800e7d6:	bd70      	pop	{r4, r5, r6, pc}
 800e7d8:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e7dc:	fb03 4201 	mla	r2, r3, r1, r4
 800e7e0:	6845      	ldr	r5, [r0, #4]
 800e7e2:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
 800e7e6:	f3c5 0508 	ubfx	r5, r5, #0, #9
 800e7ea:	2a0a      	cmp	r2, #10
 800e7ec:	f200 810f 	bhi.w	800ea0e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x266>
 800e7f0:	e8df f012 	tbh	[pc, r2, lsl #1]
 800e7f4:	010d000b 	tsteq	sp, fp
 800e7f8:	010d0017 	tsteq	sp, r7, lsl r0
 800e7fc:	00720042 	rsbseq	r0, r2, r2, asr #32
 800e800:	009d008d 	addseq	r0, sp, sp, lsl #1
 800e804:	00d900c1 	sbcseq	r0, r9, r1, asr #1
 800e808:	220800ef 	andcs	r0, r8, #239	; 0xef
 800e80c:	4359      	muls	r1, r3
 800e80e:	1863      	adds	r3, r4, r1
 800e810:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800e814:	2201      	movs	r2, #1
 800e816:	5465      	strb	r5, [r4, r1]
 800e818:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800e81c:	f3bf 8f5f 	dmb	sy
 800e820:	e7d9      	b.n	800e7d6 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2e>
 800e822:	b14d      	cbz	r5, 800e838 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x90>
 800e824:	2dcc      	cmp	r5, #204	; 0xcc
 800e826:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e82a:	d01b      	beq.n	800e864 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xbc>
 800e82c:	2200      	movs	r2, #0
 800e82e:	fb03 4301 	mla	r3, r3, r1, r4
 800e832:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800e836:	e7f1      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e838:	fb03 f001 	mul.w	r0, r3, r1
 800e83c:	2301      	movs	r3, #1
 800e83e:	1826      	adds	r6, r4, r0
 800e840:	f8c6 3204 	str.w	r3, [r6, #516]	; 0x204
 800e844:	4b76      	ldr	r3, [pc, #472]	; (800ea20 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x278>)
 800e846:	5425      	strb	r5, [r4, r0]
 800e848:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800e84c:	685a      	ldr	r2, [r3, #4]
 800e84e:	3201      	adds	r2, #1
 800e850:	605a      	str	r2, [r3, #4]
 800e852:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800e856:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800e85a:	60da      	str	r2, [r3, #12]
 800e85c:	2304      	movs	r3, #4
 800e85e:	f8c6 320c 	str.w	r3, [r6, #524]	; 0x20c
 800e862:	e7db      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e864:	434b      	muls	r3, r1
 800e866:	18e2      	adds	r2, r4, r3
 800e868:	54e5      	strb	r5, [r4, r3]
 800e86a:	4b6e      	ldr	r3, [pc, #440]	; (800ea24 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x27c>)
 800e86c:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800e870:	2305      	movs	r3, #5
 800e872:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
 800e876:	e7d1      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e878:	fb03 4201 	mla	r2, r3, r1, r4
 800e87c:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 800e880:	b298      	uxth	r0, r3
 800e882:	3301      	adds	r3, #1
 800e884:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e888:	5415      	strb	r5, [r2, r0]
 800e88a:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800e88e:	d905      	bls.n	800e89c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xf4>
 800e890:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800e894:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800e898:	2300      	movs	r3, #0
 800e89a:	e7ea      	b.n	800e872 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 800e89c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800e8a0:	485f      	ldr	r0, [pc, #380]	; (800ea20 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x278>)
 800e8a2:	f8d2 4424 	ldr.w	r4, [r2, #1060]	; 0x424
 800e8a6:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800e8aa:	68c3      	ldr	r3, [r0, #12]
 800e8ac:	2902      	cmp	r1, #2
 800e8ae:	ebc3 0344 	rsb	r3, r3, r4, lsl #1
 800e8b2:	60c4      	str	r4, [r0, #12]
 800e8b4:	f103 0304 	add.w	r3, r3, #4
 800e8b8:	d008      	beq.n	800e8cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x124>
 800e8ba:	2903      	cmp	r1, #3
 800e8bc:	d009      	beq.n	800e8d2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x12a>
 800e8be:	2901      	cmp	r1, #1
 800e8c0:	bf14      	ite	ne
 800e8c2:	f8c2 3434 	strne.w	r3, [r2, #1076]	; 0x434
 800e8c6:	f8c2 3438 	streq.w	r3, [r2, #1080]	; 0x438
 800e8ca:	e7a7      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e8cc:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
 800e8d0:	e7a4      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e8d2:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
 800e8d6:	e7a1      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e8d8:	fb03 4201 	mla	r2, r3, r1, r4
 800e8dc:	f8b2 0204 	ldrh.w	r0, [r2, #516]	; 0x204
 800e8e0:	f8b2 6206 	ldrh.w	r6, [r2, #518]	; 0x206
 800e8e4:	5415      	strb	r5, [r2, r0]
 800e8e6:	1c43      	adds	r3, r0, #1
 800e8e8:	3817      	subs	r0, #23
 800e8ea:	b29b      	uxth	r3, r3
 800e8ec:	4435      	add	r5, r6
 800e8ee:	28e7      	cmp	r0, #231	; 0xe7
 800e8f0:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800e8f4:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 800e8f8:	d804      	bhi.n	800e904 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15c>
 800e8fa:	7890      	ldrb	r0, [r2, #2]
 800e8fc:	4298      	cmp	r0, r3
 800e8fe:	d101      	bne.n	800e904 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15c>
 800e900:	2306      	movs	r3, #6
 800e902:	e7b6      	b.n	800e872 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 800e904:	2bff      	cmp	r3, #255	; 0xff
 800e906:	d989      	bls.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e908:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e90c:	e78e      	b.n	800e82c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x84>
 800e90e:	fb03 4301 	mla	r3, r3, r1, r4
 800e912:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800e916:	549d      	strb	r5, [r3, r2]
 800e918:	3201      	adds	r2, #1
 800e91a:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800e91e:	f8b3 2206 	ldrh.w	r2, [r3, #518]	; 0x206
 800e922:	eba2 2505 	sub.w	r5, r2, r5, lsl #8
 800e926:	f8a3 5206 	strh.w	r5, [r3, #518]	; 0x206
 800e92a:	2207      	movs	r2, #7
 800e92c:	e781      	b.n	800e832 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800e92e:	fb03 4201 	mla	r2, r3, r1, r4
 800e932:	f8b2 3204 	ldrh.w	r3, [r2, #516]	; 0x204
 800e936:	f8b2 0206 	ldrh.w	r0, [r2, #518]	; 0x206
 800e93a:	54d5      	strb	r5, [r2, r3]
 800e93c:	3301      	adds	r3, #1
 800e93e:	1b45      	subs	r5, r0, r5
 800e940:	b29b      	uxth	r3, r3
 800e942:	b2ad      	uxth	r5, r5
 800e944:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800e948:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 800e94c:	b915      	cbnz	r5, 800e954 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ac>
 800e94e:	7850      	ldrb	r0, [r2, #1]
 800e950:	2801      	cmp	r0, #1
 800e952:	d007      	beq.n	800e964 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1bc>
 800e954:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e958:	2200      	movs	r2, #0
 800e95a:	fb03 4301 	mla	r3, r3, r1, r4
 800e95e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800e962:	e7d1      	b.n	800e908 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x160>
 800e964:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800e968:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800e96c:	4b2e      	ldr	r3, [pc, #184]	; (800ea28 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x280>)
 800e96e:	685a      	ldr	r2, [r3, #4]
 800e970:	4b2e      	ldr	r3, [pc, #184]	; (800ea2c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x284>)
 800e972:	601a      	str	r2, [r3, #0]
 800e974:	e7c8      	b.n	800e908 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x160>
 800e976:	fb03 4001 	mla	r0, r3, r1, r4
 800e97a:	f8b0 3204 	ldrh.w	r3, [r0, #516]	; 0x204
 800e97e:	2daa      	cmp	r5, #170	; 0xaa
 800e980:	54c5      	strb	r5, [r0, r3]
 800e982:	f103 0301 	add.w	r3, r3, #1
 800e986:	b29b      	uxth	r3, r3
 800e988:	f8a0 3204 	strh.w	r3, [r0, #516]	; 0x204
 800e98c:	d002      	beq.n	800e994 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ec>
 800e98e:	2b09      	cmp	r3, #9
 800e990:	f47f af44 	bne.w	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e994:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e998:	2200      	movs	r2, #0
 800e99a:	fb03 4301 	mla	r3, r3, r1, r4
 800e99e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800e9a2:	2209      	movs	r2, #9
 800e9a4:	e745      	b.n	800e832 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800e9a6:	fb03 4301 	mla	r3, r3, r1, r4
 800e9aa:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800e9ae:	549d      	strb	r5, [r3, r2]
 800e9b0:	3201      	adds	r2, #1
 800e9b2:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800e9b6:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800e9ba:	3201      	adds	r2, #1
 800e9bc:	b292      	uxth	r2, r2
 800e9be:	2a0c      	cmp	r2, #12
 800e9c0:	d002      	beq.n	800e9c8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x220>
 800e9c2:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800e9c6:	e729      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e9c8:	2200      	movs	r2, #0
 800e9ca:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800e9ce:	220a      	movs	r2, #10
 800e9d0:	e72f      	b.n	800e832 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800e9d2:	fb03 4301 	mla	r3, r3, r1, r4
 800e9d6:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800e9da:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800e9de:	3101      	adds	r1, #1
 800e9e0:	b289      	uxth	r1, r1
 800e9e2:	549d      	strb	r5, [r3, r2]
 800e9e4:	3201      	adds	r2, #1
 800e9e6:	b292      	uxth	r2, r2
 800e9e8:	2904      	cmp	r1, #4
 800e9ea:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800e9ee:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800e9f2:	f47f af13 	bne.w	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800e9f6:	2100      	movs	r1, #0
 800e9f8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800e9fc:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800ea00:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800ea04:	4b08      	ldr	r3, [pc, #32]	; (800ea28 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x280>)
 800ea06:	685a      	ldr	r2, [r3, #4]
 800ea08:	4b08      	ldr	r3, [pc, #32]	; (800ea2c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x284>)
 800ea0a:	601a      	str	r2, [r3, #0]
 800ea0c:	e706      	b.n	800e81c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800ea0e:	2200      	movs	r2, #0
 800ea10:	fb03 4301 	mla	r3, r3, r1, r4
 800ea14:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800ea18:	e70b      	b.n	800e832 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800ea1a:	bf00      	nop
 800ea1c:	20003284 	andcs	r3, r0, r4, lsl #5
 800ea20:	200042e8 	andcs	r4, r0, r8, ror #5
 800ea24:	00cc0001 	sbceq	r0, ip, r1
 800ea28:	e0001000 	and	r1, r0, r0
 800ea2c:	2000432c 	andcs	r4, r0, ip, lsr #6

0800ea30 <USART1_IRQHandler>:
 800ea30:	2100      	movs	r1, #0
 800ea32:	4801      	ldr	r0, [pc, #4]	; (800ea38 <USART1_IRQHandler+0x8>)
 800ea34:	f7ff beb8 	b.w	800e7a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800ea38:	40004400 	andmi	r4, r0, r0, lsl #8

0800ea3c <USART2_IRQHandler>:
 800ea3c:	2101      	movs	r1, #1
 800ea3e:	4801      	ldr	r0, [pc, #4]	; (800ea44 <USART2_IRQHandler+0x8>)
 800ea40:	f7ff beb2 	b.w	800e7a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800ea44:	40004800 	andmi	r4, r0, r0, lsl #16

0800ea48 <UART3_IRQHandler>:
 800ea48:	2102      	movs	r1, #2
 800ea4a:	4801      	ldr	r0, [pc, #4]	; (800ea50 <UART3_IRQHandler+0x8>)
 800ea4c:	f7ff beac 	b.w	800e7a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800ea50:	40004c00 	andmi	r4, r0, r0, lsl #24

0800ea54 <UART4_IRQHandler>:
 800ea54:	2103      	movs	r1, #3
 800ea56:	4801      	ldr	r0, [pc, #4]	; (800ea5c <UART4_IRQHandler+0x8>)
 800ea58:	f7ff bea6 	b.w	800e7a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800ea5c:	40005000 	andmi	r5, r0, r0

0800ea60 <TIMER1_IRQHandler>:
 800ea60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea62:	f3bf 8f5f 	dmb	sy
 800ea66:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ea6a:	691e      	ldr	r6, [r3, #16]
 800ea6c:	4d63      	ldr	r5, [pc, #396]	; (800ebfc <TIMER1_IRQHandler+0x19c>)
 800ea6e:	07b1      	lsls	r1, r6, #30
 800ea70:	882c      	ldrh	r4, [r5, #0]
 800ea72:	d541      	bpl.n	800eaf8 <TIMER1_IRQHandler+0x98>
 800ea74:	2120      	movs	r1, #32
 800ea76:	4862      	ldr	r0, [pc, #392]	; (800ec00 <TIMER1_IRQHandler+0x1a0>)
 800ea78:	f7ff fe7e 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800ea7c:	f014 0f01 	tst.w	r4, #1
 800ea80:	4f60      	ldr	r7, [pc, #384]	; (800ec04 <TIMER1_IRQHandler+0x1a4>)
 800ea82:	d006      	beq.n	800ea92 <TIMER1_IRQHandler+0x32>
 800ea84:	882b      	ldrh	r3, [r5, #0]
 800ea86:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ea8a:	802b      	strh	r3, [r5, #0]
 800ea8c:	2320      	movs	r3, #32
 800ea8e:	f8c7 3414 	str.w	r3, [r7, #1044]	; 0x414
 800ea92:	f44f 7180 	mov.w	r1, #256	; 0x100
 800ea96:	485a      	ldr	r0, [pc, #360]	; (800ec00 <TIMER1_IRQHandler+0x1a0>)
 800ea98:	f7ff fe6e 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800ea9c:	07a2      	lsls	r2, r4, #30
 800ea9e:	d507      	bpl.n	800eab0 <TIMER1_IRQHandler+0x50>
 800eaa0:	882b      	ldrh	r3, [r5, #0]
 800eaa2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800eaa6:	802b      	strh	r3, [r5, #0]
 800eaa8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800eaac:	f8c7 3414 	str.w	r3, [r7, #1044]	; 0x414
 800eab0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800eab4:	4853      	ldr	r0, [pc, #332]	; (800ec04 <TIMER1_IRQHandler+0x1a4>)
 800eab6:	f7ff fe5f 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800eaba:	0763      	lsls	r3, r4, #29
 800eabc:	d506      	bpl.n	800eacc <TIMER1_IRQHandler+0x6c>
 800eabe:	882b      	ldrh	r3, [r5, #0]
 800eac0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800eac4:	802b      	strh	r3, [r5, #0]
 800eac6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800eaca:	617b      	str	r3, [r7, #20]
 800eacc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800ead0:	484c      	ldr	r0, [pc, #304]	; (800ec04 <TIMER1_IRQHandler+0x1a4>)
 800ead2:	f7ff fe51 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800ead6:	0724      	lsls	r4, r4, #28
 800ead8:	d506      	bpl.n	800eae8 <TIMER1_IRQHandler+0x88>
 800eada:	882b      	ldrh	r3, [r5, #0]
 800eadc:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800eae0:	802b      	strh	r3, [r5, #0]
 800eae2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800eae6:	617b      	str	r3, [r7, #20]
 800eae8:	4631      	mov	r1, r6
 800eaea:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eaee:	f006 fa6f 	bl	8014fd0 <timer_interrupt_flag_clear>
 800eaf2:	f3bf 8f5f 	dmb	sy
 800eaf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eaf8:	0770      	lsls	r0, r6, #29
 800eafa:	d51b      	bpl.n	800eb34 <TIMER1_IRQHandler+0xd4>
 800eafc:	05e1      	lsls	r1, r4, #23
 800eafe:	d503      	bpl.n	800eb08 <TIMER1_IRQHandler+0xa8>
 800eb00:	2120      	movs	r1, #32
 800eb02:	483f      	ldr	r0, [pc, #252]	; (800ec00 <TIMER1_IRQHandler+0x1a0>)
 800eb04:	f7ff fe3d 	bl	800e782 <gpio_mode_af(unsigned int, unsigned int)>
 800eb08:	05a2      	lsls	r2, r4, #22
 800eb0a:	d504      	bpl.n	800eb16 <TIMER1_IRQHandler+0xb6>
 800eb0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 800eb10:	483b      	ldr	r0, [pc, #236]	; (800ec00 <TIMER1_IRQHandler+0x1a0>)
 800eb12:	f7ff fe36 	bl	800e782 <gpio_mode_af(unsigned int, unsigned int)>
 800eb16:	0563      	lsls	r3, r4, #21
 800eb18:	d504      	bpl.n	800eb24 <TIMER1_IRQHandler+0xc4>
 800eb1a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800eb1e:	4839      	ldr	r0, [pc, #228]	; (800ec04 <TIMER1_IRQHandler+0x1a4>)
 800eb20:	f7ff fe2f 	bl	800e782 <gpio_mode_af(unsigned int, unsigned int)>
 800eb24:	0527      	lsls	r7, r4, #20
 800eb26:	d5df      	bpl.n	800eae8 <TIMER1_IRQHandler+0x88>
 800eb28:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800eb2c:	4835      	ldr	r0, [pc, #212]	; (800ec04 <TIMER1_IRQHandler+0x1a4>)
 800eb2e:	f7ff fe28 	bl	800e782 <gpio_mode_af(unsigned int, unsigned int)>
 800eb32:	e7d9      	b.n	800eae8 <TIMER1_IRQHandler+0x88>
 800eb34:	0735      	lsls	r5, r6, #28
 800eb36:	d5d7      	bpl.n	800eae8 <TIMER1_IRQHandler+0x88>
 800eb38:	05e0      	lsls	r0, r4, #23
 800eb3a:	d517      	bpl.n	800eb6c <TIMER1_IRQHandler+0x10c>
 800eb3c:	4b32      	ldr	r3, [pc, #200]	; (800ec08 <TIMER1_IRQHandler+0x1a8>)
 800eb3e:	2180      	movs	r1, #128	; 0x80
 800eb40:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800eb44:	4831      	ldr	r0, [pc, #196]	; (800ec0c <TIMER1_IRQHandler+0x1ac>)
 800eb46:	f022 0201 	bic.w	r2, r2, #1
 800eb4a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800eb4e:	4a30      	ldr	r2, [pc, #192]	; (800ec10 <TIMER1_IRQHandler+0x1b0>)
 800eb50:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800eb54:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800eb58:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800eb5c:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800eb60:	f042 0201 	orr.w	r2, r2, #1
 800eb64:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800eb68:	f006 fafe 	bl	8015168 <usart_dma_transmit_config>
 800eb6c:	05a1      	lsls	r1, r4, #22
 800eb6e:	d513      	bpl.n	800eb98 <TIMER1_IRQHandler+0x138>
 800eb70:	4b25      	ldr	r3, [pc, #148]	; (800ec08 <TIMER1_IRQHandler+0x1a8>)
 800eb72:	4828      	ldr	r0, [pc, #160]	; (800ec14 <TIMER1_IRQHandler+0x1b4>)
 800eb74:	69da      	ldr	r2, [r3, #28]
 800eb76:	f022 0201 	bic.w	r2, r2, #1
 800eb7a:	61da      	str	r2, [r3, #28]
 800eb7c:	4a24      	ldr	r2, [pc, #144]	; (800ec10 <TIMER1_IRQHandler+0x1b0>)
 800eb7e:	f502 7101 	add.w	r1, r2, #516	; 0x204
 800eb82:	f8b2 2406 	ldrh.w	r2, [r2, #1030]	; 0x406
 800eb86:	6299      	str	r1, [r3, #40]	; 0x28
 800eb88:	621a      	str	r2, [r3, #32]
 800eb8a:	69da      	ldr	r2, [r3, #28]
 800eb8c:	2180      	movs	r1, #128	; 0x80
 800eb8e:	f042 0201 	orr.w	r2, r2, #1
 800eb92:	61da      	str	r2, [r3, #28]
 800eb94:	f006 fae8 	bl	8015168 <usart_dma_transmit_config>
 800eb98:	0562      	lsls	r2, r4, #21
 800eb9a:	d515      	bpl.n	800ebc8 <TIMER1_IRQHandler+0x168>
 800eb9c:	2104      	movs	r1, #4
 800eb9e:	481e      	ldr	r0, [pc, #120]	; (800ec18 <TIMER1_IRQHandler+0x1b8>)
 800eba0:	f005 fe0f 	bl	80147c2 <dma_channel_disable>
 800eba4:	4a1a      	ldr	r2, [pc, #104]	; (800ec10 <TIMER1_IRQHandler+0x1b0>)
 800eba6:	4b18      	ldr	r3, [pc, #96]	; (800ec08 <TIMER1_IRQHandler+0x1a8>)
 800eba8:	f502 6181 	add.w	r1, r2, #1032	; 0x408
 800ebac:	f8b2 260a 	ldrh.w	r2, [r2, #1546]	; 0x60a
 800ebb0:	f8c3 1464 	str.w	r1, [r3, #1124]	; 0x464
 800ebb4:	4818      	ldr	r0, [pc, #96]	; (800ec18 <TIMER1_IRQHandler+0x1b8>)
 800ebb6:	2104      	movs	r1, #4
 800ebb8:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 800ebbc:	f005 fdf9 	bl	80147b2 <dma_channel_enable>
 800ebc0:	2180      	movs	r1, #128	; 0x80
 800ebc2:	4816      	ldr	r0, [pc, #88]	; (800ec1c <TIMER1_IRQHandler+0x1bc>)
 800ebc4:	f006 fad0 	bl	8015168 <usart_dma_transmit_config>
 800ebc8:	0523      	lsls	r3, r4, #20
 800ebca:	d58d      	bpl.n	800eae8 <TIMER1_IRQHandler+0x88>
 800ebcc:	2103      	movs	r1, #3
 800ebce:	4812      	ldr	r0, [pc, #72]	; (800ec18 <TIMER1_IRQHandler+0x1b8>)
 800ebd0:	f005 fdf7 	bl	80147c2 <dma_channel_disable>
 800ebd4:	4a0e      	ldr	r2, [pc, #56]	; (800ec10 <TIMER1_IRQHandler+0x1b0>)
 800ebd6:	4b0c      	ldr	r3, [pc, #48]	; (800ec08 <TIMER1_IRQHandler+0x1a8>)
 800ebd8:	f202 610c 	addw	r1, r2, #1548	; 0x60c
 800ebdc:	f8b2 280e 	ldrh.w	r2, [r2, #2062]	; 0x80e
 800ebe0:	f8c3 1450 	str.w	r1, [r3, #1104]	; 0x450
 800ebe4:	480c      	ldr	r0, [pc, #48]	; (800ec18 <TIMER1_IRQHandler+0x1b8>)
 800ebe6:	2103      	movs	r1, #3
 800ebe8:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
 800ebec:	f005 fde1 	bl	80147b2 <dma_channel_enable>
 800ebf0:	2180      	movs	r1, #128	; 0x80
 800ebf2:	480b      	ldr	r0, [pc, #44]	; (800ec20 <TIMER1_IRQHandler+0x1c0>)
 800ebf4:	f006 fab8 	bl	8015168 <usart_dma_transmit_config>
 800ebf8:	e776      	b.n	800eae8 <TIMER1_IRQHandler+0x88>
 800ebfa:	bf00      	nop
 800ebfc:	200042e4 	andcs	r4, r0, r4, ror #5
 800ec00:	40011400 	andmi	r1, r1, r0, lsl #8
 800ec04:	40011000 	andmi	r1, r1, r0
 800ec08:	40020000 	andmi	r0, r2, r0
 800ec0c:	40004400 	andmi	r4, r0, r0, lsl #8
 800ec10:	20003ac4 	andcs	r3, r0, r4, asr #21
 800ec14:	40004800 	andmi	r4, r0, r0, lsl #16
 800ec18:	40020400 	andmi	r0, r2, r0, lsl #8
 800ec1c:	40004c00 	andmi	r4, r0, r0, lsl #24
 800ec20:	40005000 	andmi	r5, r0, r0

0800ec24 <TIMER2_IRQHandler>:
 800ec24:	b508      	push	{r3, lr}
 800ec26:	f3bf 8f5f 	dmb	sy
 800ec2a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ec2e:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800ec32:	f011 0202 	ands.w	r2, r1, #2
 800ec36:	d013      	beq.n	800ec60 <TIMER2_IRQHandler+0x3c>
 800ec38:	4b22      	ldr	r3, [pc, #136]	; (800ecc4 <TIMER2_IRQHandler+0xa0>)
 800ec3a:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800ec3e:	2a04      	cmp	r2, #4
 800ec40:	d108      	bne.n	800ec54 <TIMER2_IRQHandler+0x30>
 800ec42:	2200      	movs	r2, #0
 800ec44:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ec48:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800ec4c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ec50:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800ec54:	481c      	ldr	r0, [pc, #112]	; (800ecc8 <TIMER2_IRQHandler+0xa4>)
 800ec56:	f006 f9bb 	bl	8014fd0 <timer_interrupt_flag_clear>
 800ec5a:	f3bf 8f5f 	dmb	sy
 800ec5e:	bd08      	pop	{r3, pc}
 800ec60:	f011 0004 	ands.w	r0, r1, #4
 800ec64:	d00d      	beq.n	800ec82 <TIMER2_IRQHandler+0x5e>
 800ec66:	4b17      	ldr	r3, [pc, #92]	; (800ecc4 <TIMER2_IRQHandler+0xa0>)
 800ec68:	f8d3 041c 	ldr.w	r0, [r3, #1052]	; 0x41c
 800ec6c:	2804      	cmp	r0, #4
 800ec6e:	d1f1      	bne.n	800ec54 <TIMER2_IRQHandler+0x30>
 800ec70:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
 800ec74:	f8d3 2414 	ldr.w	r2, [r3, #1044]	; 0x414
 800ec78:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ec7c:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
 800ec80:	e7e8      	b.n	800ec54 <TIMER2_IRQHandler+0x30>
 800ec82:	f011 0208 	ands.w	r2, r1, #8
 800ec86:	d00d      	beq.n	800eca4 <TIMER2_IRQHandler+0x80>
 800ec88:	4b0e      	ldr	r3, [pc, #56]	; (800ecc4 <TIMER2_IRQHandler+0xa0>)
 800ec8a:	f8d3 262c 	ldr.w	r2, [r3, #1580]	; 0x62c
 800ec8e:	2a04      	cmp	r2, #4
 800ec90:	d1e0      	bne.n	800ec54 <TIMER2_IRQHandler+0x30>
 800ec92:	f8d3 2624 	ldr.w	r2, [r3, #1572]	; 0x624
 800ec96:	f8c3 062c 	str.w	r0, [r3, #1580]	; 0x62c
 800ec9a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800ec9e:	f8c3 2624 	str.w	r2, [r3, #1572]	; 0x624
 800eca2:	e7d7      	b.n	800ec54 <TIMER2_IRQHandler+0x30>
 800eca4:	06cb      	lsls	r3, r1, #27
 800eca6:	d5d5      	bpl.n	800ec54 <TIMER2_IRQHandler+0x30>
 800eca8:	4b06      	ldr	r3, [pc, #24]	; (800ecc4 <TIMER2_IRQHandler+0xa0>)
 800ecaa:	f8d3 083c 	ldr.w	r0, [r3, #2108]	; 0x83c
 800ecae:	2804      	cmp	r0, #4
 800ecb0:	bf01      	itttt	eq
 800ecb2:	f8c3 283c 	streq.w	r2, [r3, #2108]	; 0x83c
 800ecb6:	f8d3 2834 	ldreq.w	r2, [r3, #2100]	; 0x834
 800ecba:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 800ecbe:	f8c3 2834 	streq.w	r2, [r3, #2100]	; 0x834
 800ecc2:	e7c7      	b.n	800ec54 <TIMER2_IRQHandler+0x30>
 800ecc4:	20003284 	andcs	r3, r0, r4, lsl #5
 800ecc8:	40000400 	andmi	r0, r0, r0, lsl #8

0800eccc <TIMER3_IRQHandler>:
 800eccc:	b508      	push	{r3, lr}
 800ecce:	f3bf 8f5f 	dmb	sy
 800ecd2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ecd6:	4804      	ldr	r0, [pc, #16]	; (800ece8 <TIMER3_IRQHandler+0x1c>)
 800ecd8:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800ecdc:	f006 f978 	bl	8014fd0 <timer_interrupt_flag_clear>
 800ece0:	f3bf 8f5f 	dmb	sy
 800ece4:	bd08      	pop	{r3, pc}
 800ece6:	bf00      	nop
 800ece8:	40000800 	andmi	r0, r0, r0, lsl #16

0800ecec <TIMER6_IRQHandler>:
 800ecec:	b538      	push	{r3, r4, r5, lr}
 800ecee:	f3bf 8f5f 	dmb	sy
 800ecf2:	2300      	movs	r3, #0
 800ecf4:	4809      	ldr	r0, [pc, #36]	; (800ed1c <TIMER6_IRQHandler+0x30>)
 800ecf6:	eb00 1203 	add.w	r2, r0, r3, lsl #4
 800ecfa:	6851      	ldr	r1, [r2, #4]
 800ecfc:	6895      	ldr	r5, [r2, #8]
 800ecfe:	011c      	lsls	r4, r3, #4
 800ed00:	1b49      	subs	r1, r1, r5
 800ed02:	5101      	str	r1, [r0, r4]
 800ed04:	6851      	ldr	r1, [r2, #4]
 800ed06:	3301      	adds	r3, #1
 800ed08:	2b04      	cmp	r3, #4
 800ed0a:	6091      	str	r1, [r2, #8]
 800ed0c:	d1f3      	bne.n	800ecf6 <TIMER6_IRQHandler+0xa>
 800ed0e:	2101      	movs	r1, #1
 800ed10:	4803      	ldr	r0, [pc, #12]	; (800ed20 <TIMER6_IRQHandler+0x34>)
 800ed12:	f006 f95d 	bl	8014fd0 <timer_interrupt_flag_clear>
 800ed16:	f3bf 8f5f 	dmb	sy
 800ed1a:	bd38      	pop	{r3, r4, r5, pc}
 800ed1c:	200042e8 	andcs	r4, r0, r8, ror #5
 800ed20:	40001400 	andmi	r1, r0, r0, lsl #8

0800ed24 <Dmx::ClearData(unsigned int)>:
 800ed24:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ed28:	b510      	push	{r4, lr}
 800ed2a:	2400      	movs	r4, #0
 800ed2c:	4a08      	ldr	r2, [pc, #32]	; (800ed50 <Dmx::ClearData(unsigned int)+0x2c>)
 800ed2e:	fb03 2301 	mla	r3, r3, r1, r2
 800ed32:	f203 2002 	addw	r0, r3, #514	; 0x202
 800ed36:	f823 4b02 	strh.w	r4, [r3], #2
 800ed3a:	4283      	cmp	r3, r0
 800ed3c:	d1fb      	bne.n	800ed36 <Dmx::ClearData(unsigned int)+0x12>
 800ed3e:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ed42:	fb03 2201 	mla	r2, r3, r1, r2
 800ed46:	f240 2301 	movw	r3, #513	; 0x201
 800ed4a:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800ed4e:	bd10      	pop	{r4, pc}
 800ed50:	20003ac4 	andcs	r3, r0, r4, asr #21

0800ed54 <Dmx::StartData(unsigned int, unsigned int)>:
 800ed54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed56:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800ed5a:	6943      	ldr	r3, [r0, #20]
 800ed5c:	460d      	mov	r5, r1
 800ed5e:	4614      	mov	r4, r2
 800ed60:	b085      	sub	sp, #20
 800ed62:	2b00      	cmp	r3, #0
 800ed64:	d16a      	bne.n	800ee3c <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800ed66:	4e52      	ldr	r6, [pc, #328]	; (800eeb0 <Dmx::StartData(unsigned int, unsigned int)+0x15c>)
 800ed68:	8835      	ldrh	r5, [r6, #0]
 800ed6a:	2d00      	cmp	r5, #0
 800ed6c:	d15b      	bne.n	800ee26 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800ed6e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800ed72:	f005 fe59 	bl	8014a28 <rcu_periph_clock_enable>
 800ed76:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ed7a:	f005 ffc9 	bl	8014d10 <timer_deinit>
 800ed7e:	2377      	movs	r3, #119	; 0x77
 800ed80:	9300      	str	r3, [sp, #0]
 800ed82:	4b4c      	ldr	r3, [pc, #304]	; (800eeb4 <Dmx::StartData(unsigned int, unsigned int)+0x160>)
 800ed84:	4669      	mov	r1, sp
 800ed86:	681b      	ldr	r3, [r3, #0]
 800ed88:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ed8c:	9302      	str	r3, [sp, #8]
 800ed8e:	f8ad 5004 	strh.w	r5, [sp, #4]
 800ed92:	f8ad 500c 	strh.w	r5, [sp, #12]
 800ed96:	f88d 500e 	strb.w	r5, [sp, #14]
 800ed9a:	f006 f85f 	bl	8014e5c <timer_init>
 800ed9e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800eda2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800eda6:	f006 f916 	bl	8014fd6 <timer_flag_clear>
 800edaa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800edae:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edb2:	f006 f90d 	bl	8014fd0 <timer_interrupt_flag_clear>
 800edb6:	2210      	movs	r2, #16
 800edb8:	4629      	mov	r1, r5
 800edba:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edbe:	f006 f8aa 	bl	8014f16 <timer_channel_output_mode_config>
 800edc2:	2210      	movs	r2, #16
 800edc4:	2101      	movs	r1, #1
 800edc6:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edca:	f006 f8a4 	bl	8014f16 <timer_channel_output_mode_config>
 800edce:	4f3a      	ldr	r7, [pc, #232]	; (800eeb8 <Dmx::StartData(unsigned int, unsigned int)+0x164>)
 800edd0:	2210      	movs	r2, #16
 800edd2:	2102      	movs	r1, #2
 800edd4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edd8:	f006 f89d 	bl	8014f16 <timer_channel_output_mode_config>
 800eddc:	462a      	mov	r2, r5
 800edde:	4629      	mov	r1, r5
 800ede0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ede4:	f006 f8bd 	bl	8014f62 <timer_channel_output_pulse_value_config>
 800ede8:	2101      	movs	r1, #1
 800edea:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800edee:	883a      	ldrh	r2, [r7, #0]
 800edf0:	f006 f8b7 	bl	8014f62 <timer_channel_output_pulse_value_config>
 800edf4:	4b31      	ldr	r3, [pc, #196]	; (800eebc <Dmx::StartData(unsigned int, unsigned int)+0x168>)
 800edf6:	683a      	ldr	r2, [r7, #0]
 800edf8:	681b      	ldr	r3, [r3, #0]
 800edfa:	2102      	movs	r1, #2
 800edfc:	441a      	add	r2, r3
 800edfe:	b292      	uxth	r2, r2
 800ee00:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee04:	f006 f8ad 	bl	8014f62 <timer_channel_output_pulse_value_config>
 800ee08:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee0c:	210e      	movs	r1, #14
 800ee0e:	f006 f8db 	bl	8014fc8 <timer_interrupt_enable>
 800ee12:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee16:	4b2a      	ldr	r3, [pc, #168]	; (800eec0 <Dmx::StartData(unsigned int, unsigned int)+0x16c>)
 800ee18:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ee1c:	f883 531c 	strb.w	r5, [r3, #796]	; 0x31c
 800ee20:	601a      	str	r2, [r3, #0]
 800ee22:	f006 f873 	bl	8014f0c <timer_enable>
 800ee26:	2201      	movs	r2, #1
 800ee28:	8831      	ldrh	r1, [r6, #0]
 800ee2a:	fa02 f304 	lsl.w	r3, r2, r4
 800ee2e:	430b      	orrs	r3, r1
 800ee30:	8033      	strh	r3, [r6, #0]
 800ee32:	4b24      	ldr	r3, [pc, #144]	; (800eec4 <Dmx::StartData(unsigned int, unsigned int)+0x170>)
 800ee34:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800ee38:	b005      	add	sp, #20
 800ee3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ee3c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ee40:	4b21      	ldr	r3, [pc, #132]	; (800eec8 <Dmx::StartData(unsigned int, unsigned int)+0x174>)
 800ee42:	fb02 3304 	mla	r3, r2, r4, r3
 800ee46:	2200      	movs	r2, #0
 800ee48:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ee4c:	2107      	movs	r1, #7
 800ee4e:	4628      	mov	r0, r5
 800ee50:	f006 f990 	bl	8015174 <usart_flag_get>
 800ee54:	2800      	cmp	r0, #0
 800ee56:	d0f9      	beq.n	800ee4c <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800ee58:	4628      	mov	r0, r5
 800ee5a:	491c      	ldr	r1, [pc, #112]	; (800eecc <Dmx::StartData(unsigned int, unsigned int)+0x178>)
 800ee5c:	f006 f9ab 	bl	80151b6 <usart_interrupt_flag_clear>
 800ee60:	f240 3105 	movw	r1, #773	; 0x305
 800ee64:	4628      	mov	r0, r5
 800ee66:	f006 f98d 	bl	8015184 <usart_interrupt_enable>
 800ee6a:	2202      	movs	r2, #2
 800ee6c:	4b15      	ldr	r3, [pc, #84]	; (800eec4 <Dmx::StartData(unsigned int, unsigned int)+0x170>)
 800ee6e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800ee72:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ee76:	2c03      	cmp	r4, #3
 800ee78:	d814      	bhi.n	800eea4 <Dmx::StartData(unsigned int, unsigned int)+0x150>
 800ee7a:	e8df f004 	tbb	[pc, r4]
 800ee7e:	130e0902 	movwne	r0, #59650	; 0xe902
 800ee82:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ee86:	f042 0202 	orr.w	r2, r2, #2
 800ee8a:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800ee8e:	e7d3      	b.n	800ee38 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800ee90:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ee94:	f042 0204 	orr.w	r2, r2, #4
 800ee98:	e7f7      	b.n	800ee8a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800ee9a:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ee9e:	f042 0208 	orr.w	r2, r2, #8
 800eea2:	e7f2      	b.n	800ee8a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800eea4:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800eea8:	f042 0210 	orr.w	r2, r2, #16
 800eeac:	e7ed      	b.n	800ee8a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800eeae:	bf00      	nop
 800eeb0:	200042e4 	andcs	r4, r0, r4, ror #5
 800eeb4:	20000008 	andcs	r0, r0, r8
 800eeb8:	20000010 	andcs	r0, r0, r0, lsl r0
 800eebc:	2000000c 	andcs	r0, r0, ip
 800eec0:	e000e100 	and	lr, r0, r0, lsl #2
 800eec4:	200042d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 800eec8:	20003284 	andcs	r3, r0, r4, lsl #5
 800eecc:	00050305 	andeq	r0, r5, r5, lsl #6

0800eed0 <Dmx::StopData(unsigned int, unsigned int)>:
 800eed0:	b538      	push	{r3, r4, r5, lr}
 800eed2:	4d22      	ldr	r5, [pc, #136]	; (800ef5c <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800eed4:	4614      	mov	r4, r2
 800eed6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800eeda:	4603      	mov	r3, r0
 800eedc:	4608      	mov	r0, r1
 800eede:	b18a      	cbz	r2, 800ef04 <Dmx::StopData(unsigned int, unsigned int)+0x34>
 800eee0:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800eee4:	695b      	ldr	r3, [r3, #20]
 800eee6:	b973      	cbnz	r3, 800ef06 <Dmx::StopData(unsigned int, unsigned int)+0x36>
 800eee8:	2201      	movs	r2, #1
 800eeea:	491d      	ldr	r1, [pc, #116]	; (800ef60 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800eeec:	f104 0308 	add.w	r3, r4, #8
 800eef0:	fa02 f303 	lsl.w	r3, r2, r3
 800eef4:	40a2      	lsls	r2, r4
 800eef6:	4313      	orrs	r3, r2
 800eef8:	880a      	ldrh	r2, [r1, #0]
 800eefa:	4013      	ands	r3, r2
 800eefc:	800b      	strh	r3, [r1, #0]
 800eefe:	2300      	movs	r3, #0
 800ef00:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800ef04:	bd38      	pop	{r3, r4, r5, pc}
 800ef06:	f240 3105 	movw	r1, #773	; 0x305
 800ef0a:	f006 f947 	bl	801519c <usart_interrupt_disable>
 800ef0e:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ef12:	4b14      	ldr	r3, [pc, #80]	; (800ef64 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800ef14:	fb02 3304 	mla	r3, r2, r4, r3
 800ef18:	2200      	movs	r2, #0
 800ef1a:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ef1e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ef22:	2c03      	cmp	r4, #3
 800ef24:	d814      	bhi.n	800ef50 <Dmx::StopData(unsigned int, unsigned int)+0x80>
 800ef26:	e8df f004 	tbb	[pc, r4]
 800ef2a:	130e0902 	movwne	r0, #59650	; 0xe902
 800ef2e:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ef32:	f022 0202 	bic.w	r2, r2, #2
 800ef36:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800ef3a:	e7e0      	b.n	800eefe <Dmx::StopData(unsigned int, unsigned int)+0x2e>
 800ef3c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ef40:	f022 0204 	bic.w	r2, r2, #4
 800ef44:	e7f7      	b.n	800ef36 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800ef46:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ef4a:	f022 0208 	bic.w	r2, r2, #8
 800ef4e:	e7f2      	b.n	800ef36 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800ef50:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ef54:	f022 0210 	bic.w	r2, r2, #16
 800ef58:	e7ed      	b.n	800ef36 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800ef5a:	bf00      	nop
 800ef5c:	200042d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 800ef60:	200042e4 	andcs	r4, r0, r4, ror #5
 800ef64:	20003284 	andcs	r3, r0, r4, lsl #5

0800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800ef68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef6c:	4616      	mov	r6, r2
 800ef6e:	461f      	mov	r7, r3
 800ef70:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800ef74:	695a      	ldr	r2, [r3, #20]
 800ef76:	028d      	lsls	r5, r1, #10
 800ef78:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800ef7c:	42b2      	cmp	r2, r6
 800ef7e:	4680      	mov	r8, r0
 800ef80:	460c      	mov	r4, r1
 800ef82:	f505 4588 	add.w	r5, r5, #17408	; 0x4400
 800ef86:	d019      	beq.n	800efbc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800ef88:	460a      	mov	r2, r1
 800ef8a:	615e      	str	r6, [r3, #20]
 800ef8c:	4629      	mov	r1, r5
 800ef8e:	f7ff ff9f 	bl	800eed0 <Dmx::StopData(unsigned int, unsigned int)>
 800ef92:	b94e      	cbnz	r6, 800efa8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800ef94:	4b10      	ldr	r3, [pc, #64]	; (800efd8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x70>)
 800ef96:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800ef9a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800ef9e:	685b      	ldr	r3, [r3, #4]
 800efa0:	6113      	str	r3, [r2, #16]
 800efa2:	b967      	cbnz	r7, 800efbe <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800efa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efa8:	2e01      	cmp	r6, #1
 800efaa:	d1fa      	bne.n	800efa2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800efac:	4b0a      	ldr	r3, [pc, #40]	; (800efd8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x70>)
 800efae:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800efb2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800efb6:	685b      	ldr	r3, [r3, #4]
 800efb8:	6153      	str	r3, [r2, #20]
 800efba:	e7f2      	b.n	800efa2 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800efbc:	b137      	cbz	r7, 800efcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800efbe:	4622      	mov	r2, r4
 800efc0:	4629      	mov	r1, r5
 800efc2:	4640      	mov	r0, r8
 800efc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800efc8:	f7ff bec4 	b.w	800ed54 <Dmx::StartData(unsigned int, unsigned int)>
 800efcc:	460a      	mov	r2, r1
 800efce:	4629      	mov	r1, r5
 800efd0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800efd4:	f7ff bf7c 	b.w	800eed0 <Dmx::StopData(unsigned int, unsigned int)>
 800efd8:	08017c14 	stmdaeq	r1, {r2, r4, sl, fp, ip, sp, lr}

0800efdc <Dmx::Dmx()>:
 800efdc:	230c      	movs	r3, #12
 800efde:	225c      	movs	r2, #92	; 0x5c
 800efe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800efe4:	e9c0 2300 	strd	r2, r3, [r0]
 800efe8:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800efec:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800eff0:	f44f 7300 	mov.w	r3, #512	; 0x200
 800eff4:	2500      	movs	r5, #0
 800eff6:	4606      	mov	r6, r0
 800eff8:	8203      	strh	r3, [r0, #16]
 800effa:	4b8d      	ldr	r3, [pc, #564]	; (800f230 <Dmx::Dmx()+0x254>)
 800effc:	4f8d      	ldr	r7, [pc, #564]	; (800f234 <Dmx::Dmx()+0x258>)
 800effe:	6018      	str	r0, [r3, #0]
 800f000:	4b8d      	ldr	r3, [pc, #564]	; (800f238 <Dmx::Dmx()+0x25c>)
 800f002:	f8df 9238 	ldr.w	r9, [pc, #568]	; 800f23c <Dmx::Dmx()+0x260>
 800f006:	f8df 8238 	ldr.w	r8, [pc, #568]	; 800f240 <Dmx::Dmx()+0x264>
 800f00a:	b089      	sub	sp, #36	; 0x24
 800f00c:	801d      	strh	r5, [r3, #0]
 800f00e:	2400      	movs	r4, #0
 800f010:	687b      	ldr	r3, [r7, #4]
 800f012:	2203      	movs	r2, #3
 800f014:	2110      	movs	r1, #16
 800f016:	f857 0b08 	ldr.w	r0, [r7], #8
 800f01a:	f005 fc69 	bl	80148f0 <gpio_init>
 800f01e:	4629      	mov	r1, r5
 800f020:	4630      	mov	r0, r6
 800f022:	f7ff fe7f 	bl	800ed24 <Dmx::ClearData(unsigned int)>
 800f026:	4623      	mov	r3, r4
 800f028:	f849 4025 	str.w	r4, [r9, r5, lsl #2]
 800f02c:	2201      	movs	r2, #1
 800f02e:	4630      	mov	r0, r6
 800f030:	f7ff ff9a 	bl	800ef68 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800f034:	f44f 7304 	mov.w	r3, #528	; 0x210
 800f038:	fb03 8305 	mla	r3, r3, r5, r8
 800f03c:	3501      	adds	r5, #1
 800f03e:	2d04      	cmp	r5, #4
 800f040:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800f044:	d1e3      	bne.n	800f00e <Dmx::Dmx()+0x32>
 800f046:	2701      	movs	r7, #1
 800f048:	f44f 5900 	mov.w	r9, #8192	; 0x2000
 800f04c:	f44f 7880 	mov.w	r8, #256	; 0x100
 800f050:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800f054:	f005 fce8 	bl	8014a28 <rcu_periph_clock_enable>
 800f058:	f240 5001 	movw	r0, #1281	; 0x501
 800f05c:	f005 fce4 	bl	8014a28 <rcu_periph_clock_enable>
 800f060:	2106      	movs	r1, #6
 800f062:	4878      	ldr	r0, [pc, #480]	; (800f244 <Dmx::Dmx()+0x268>)
 800f064:	f005 fb46 	bl	80146f4 <dma_deinit>
 800f068:	4b77      	ldr	r3, [pc, #476]	; (800f248 <Dmx::Dmx()+0x26c>)
 800f06a:	aa01      	add	r2, sp, #4
 800f06c:	2106      	movs	r1, #6
 800f06e:	4875      	ldr	r0, [pc, #468]	; (800f244 <Dmx::Dmx()+0x268>)
 800f070:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f074:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f078:	9404      	str	r4, [sp, #16]
 800f07a:	f8cd 9018 	str.w	r9, [sp, #24]
 800f07e:	f88d 701e 	strb.w	r7, [sp, #30]
 800f082:	f005 fb55 	bl	8014730 <dma_init>
 800f086:	2106      	movs	r1, #6
 800f088:	486e      	ldr	r0, [pc, #440]	; (800f244 <Dmx::Dmx()+0x268>)
 800f08a:	f005 fb82 	bl	8014792 <dma_circulation_disable>
 800f08e:	2106      	movs	r1, #6
 800f090:	486c      	ldr	r0, [pc, #432]	; (800f244 <Dmx::Dmx()+0x268>)
 800f092:	f005 fb86 	bl	80147a2 <dma_memory_to_memory_disable>
 800f096:	4639      	mov	r1, r7
 800f098:	486a      	ldr	r0, [pc, #424]	; (800f244 <Dmx::Dmx()+0x268>)
 800f09a:	f005 fb2b 	bl	80146f4 <dma_deinit>
 800f09e:	4b6b      	ldr	r3, [pc, #428]	; (800f24c <Dmx::Dmx()+0x270>)
 800f0a0:	aa01      	add	r2, sp, #4
 800f0a2:	4639      	mov	r1, r7
 800f0a4:	4867      	ldr	r0, [pc, #412]	; (800f244 <Dmx::Dmx()+0x268>)
 800f0a6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f0aa:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f0ae:	9404      	str	r4, [sp, #16]
 800f0b0:	f8cd 9018 	str.w	r9, [sp, #24]
 800f0b4:	f88d 701e 	strb.w	r7, [sp, #30]
 800f0b8:	f005 fb3a 	bl	8014730 <dma_init>
 800f0bc:	4639      	mov	r1, r7
 800f0be:	4861      	ldr	r0, [pc, #388]	; (800f244 <Dmx::Dmx()+0x268>)
 800f0c0:	f005 fb67 	bl	8014792 <dma_circulation_disable>
 800f0c4:	4639      	mov	r1, r7
 800f0c6:	485f      	ldr	r0, [pc, #380]	; (800f244 <Dmx::Dmx()+0x268>)
 800f0c8:	f005 fb6b 	bl	80147a2 <dma_memory_to_memory_disable>
 800f0cc:	4629      	mov	r1, r5
 800f0ce:	4860      	ldr	r0, [pc, #384]	; (800f250 <Dmx::Dmx()+0x274>)
 800f0d0:	f005 fb10 	bl	80146f4 <dma_deinit>
 800f0d4:	4b5f      	ldr	r3, [pc, #380]	; (800f254 <Dmx::Dmx()+0x278>)
 800f0d6:	aa01      	add	r2, sp, #4
 800f0d8:	4629      	mov	r1, r5
 800f0da:	485d      	ldr	r0, [pc, #372]	; (800f250 <Dmx::Dmx()+0x274>)
 800f0dc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f0e0:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f0e4:	9404      	str	r4, [sp, #16]
 800f0e6:	f8cd 9018 	str.w	r9, [sp, #24]
 800f0ea:	f88d 701e 	strb.w	r7, [sp, #30]
 800f0ee:	f005 fb1f 	bl	8014730 <dma_init>
 800f0f2:	4629      	mov	r1, r5
 800f0f4:	4856      	ldr	r0, [pc, #344]	; (800f250 <Dmx::Dmx()+0x274>)
 800f0f6:	f005 fb4c 	bl	8014792 <dma_circulation_disable>
 800f0fa:	4629      	mov	r1, r5
 800f0fc:	4854      	ldr	r0, [pc, #336]	; (800f250 <Dmx::Dmx()+0x274>)
 800f0fe:	f005 fb50 	bl	80147a2 <dma_memory_to_memory_disable>
 800f102:	2103      	movs	r1, #3
 800f104:	4852      	ldr	r0, [pc, #328]	; (800f250 <Dmx::Dmx()+0x274>)
 800f106:	f005 faf5 	bl	80146f4 <dma_deinit>
 800f10a:	4b53      	ldr	r3, [pc, #332]	; (800f258 <Dmx::Dmx()+0x27c>)
 800f10c:	aa01      	add	r2, sp, #4
 800f10e:	2103      	movs	r1, #3
 800f110:	484f      	ldr	r0, [pc, #316]	; (800f250 <Dmx::Dmx()+0x274>)
 800f112:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f116:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f11a:	9404      	str	r4, [sp, #16]
 800f11c:	f8cd 9018 	str.w	r9, [sp, #24]
 800f120:	f88d 701e 	strb.w	r7, [sp, #30]
 800f124:	f005 fb04 	bl	8014730 <dma_init>
 800f128:	2103      	movs	r1, #3
 800f12a:	4849      	ldr	r0, [pc, #292]	; (800f250 <Dmx::Dmx()+0x274>)
 800f12c:	f005 fb31 	bl	8014792 <dma_circulation_disable>
 800f130:	2103      	movs	r1, #3
 800f132:	4847      	ldr	r0, [pc, #284]	; (800f250 <Dmx::Dmx()+0x274>)
 800f134:	f005 fb35 	bl	80147a2 <dma_memory_to_memory_disable>
 800f138:	f240 7001 	movw	r0, #1793	; 0x701
 800f13c:	f005 fc74 	bl	8014a28 <rcu_periph_clock_enable>
 800f140:	4846      	ldr	r0, [pc, #280]	; (800f25c <Dmx::Dmx()+0x280>)
 800f142:	f005 fde5 	bl	8014d10 <timer_deinit>
 800f146:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800f14a:	2377      	movs	r3, #119	; 0x77
 800f14c:	a901      	add	r1, sp, #4
 800f14e:	4843      	ldr	r0, [pc, #268]	; (800f25c <Dmx::Dmx()+0x280>)
 800f150:	9301      	str	r3, [sp, #4]
 800f152:	f8ad 4008 	strh.w	r4, [sp, #8]
 800f156:	f8cd 800c 	str.w	r8, [sp, #12]
 800f15a:	f8ad 4010 	strh.w	r4, [sp, #16]
 800f15e:	f88d 4012 	strb.w	r4, [sp, #18]
 800f162:	f005 fe7b 	bl	8014e5c <timer_init>
 800f166:	4641      	mov	r1, r8
 800f168:	483c      	ldr	r0, [pc, #240]	; (800f25c <Dmx::Dmx()+0x280>)
 800f16a:	f005 ff34 	bl	8014fd6 <timer_flag_clear>
 800f16e:	4641      	mov	r1, r8
 800f170:	483a      	ldr	r0, [pc, #232]	; (800f25c <Dmx::Dmx()+0x280>)
 800f172:	f005 ff2d 	bl	8014fd0 <timer_interrupt_flag_clear>
 800f176:	4621      	mov	r1, r4
 800f178:	2210      	movs	r2, #16
 800f17a:	4838      	ldr	r0, [pc, #224]	; (800f25c <Dmx::Dmx()+0x280>)
 800f17c:	f005 fecb 	bl	8014f16 <timer_channel_output_mode_config>
 800f180:	4639      	mov	r1, r7
 800f182:	2210      	movs	r2, #16
 800f184:	4835      	ldr	r0, [pc, #212]	; (800f25c <Dmx::Dmx()+0x280>)
 800f186:	f005 fec6 	bl	8014f16 <timer_channel_output_mode_config>
 800f18a:	2210      	movs	r2, #16
 800f18c:	2102      	movs	r1, #2
 800f18e:	4833      	ldr	r0, [pc, #204]	; (800f25c <Dmx::Dmx()+0x280>)
 800f190:	f005 fec1 	bl	8014f16 <timer_channel_output_mode_config>
 800f194:	2210      	movs	r2, #16
 800f196:	2103      	movs	r1, #3
 800f198:	4830      	ldr	r0, [pc, #192]	; (800f25c <Dmx::Dmx()+0x280>)
 800f19a:	f005 febc 	bl	8014f16 <timer_channel_output_mode_config>
 800f19e:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800f1a2:	4d2f      	ldr	r5, [pc, #188]	; (800f260 <Dmx::Dmx()+0x284>)
 800f1a4:	482d      	ldr	r0, [pc, #180]	; (800f25c <Dmx::Dmx()+0x280>)
 800f1a6:	f885 431d 	strb.w	r4, [r5, #797]	; 0x31d
 800f1aa:	602b      	str	r3, [r5, #0]
 800f1ac:	f005 feae 	bl	8014f0c <timer_enable>
 800f1b0:	f240 7005 	movw	r0, #1797	; 0x705
 800f1b4:	f005 fc38 	bl	8014a28 <rcu_periph_clock_enable>
 800f1b8:	482a      	ldr	r0, [pc, #168]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1ba:	f005 fda9 	bl	8014d10 <timer_deinit>
 800f1be:	f642 63df 	movw	r3, #11999	; 0x2edf
 800f1c2:	f8ad 3004 	strh.w	r3, [sp, #4]
 800f1c6:	f242 7310 	movw	r3, #10000	; 0x2710
 800f1ca:	a901      	add	r1, sp, #4
 800f1cc:	4825      	ldr	r0, [pc, #148]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1ce:	9303      	str	r3, [sp, #12]
 800f1d0:	f005 fe44 	bl	8014e5c <timer_init>
 800f1d4:	4641      	mov	r1, r8
 800f1d6:	4823      	ldr	r0, [pc, #140]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1d8:	f005 fefd 	bl	8014fd6 <timer_flag_clear>
 800f1dc:	4641      	mov	r1, r8
 800f1de:	4821      	ldr	r0, [pc, #132]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1e0:	f005 fef6 	bl	8014fd0 <timer_interrupt_flag_clear>
 800f1e4:	4639      	mov	r1, r7
 800f1e6:	481f      	ldr	r0, [pc, #124]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1e8:	f005 feee 	bl	8014fc8 <timer_interrupt_enable>
 800f1ec:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800f1f0:	f885 4337 	strb.w	r4, [r5, #823]	; 0x337
 800f1f4:	481b      	ldr	r0, [pc, #108]	; (800f264 <Dmx::Dmx()+0x288>)
 800f1f6:	606b      	str	r3, [r5, #4]
 800f1f8:	f005 fe88 	bl	8014f0c <timer_enable>
 800f1fc:	481a      	ldr	r0, [pc, #104]	; (800f268 <Dmx::Dmx()+0x28c>)
 800f1fe:	f7ff fac5 	bl	800e78c <uart_dmx_config(unsigned int)>
 800f202:	2340      	movs	r3, #64	; 0x40
 800f204:	4819      	ldr	r0, [pc, #100]	; (800f26c <Dmx::Dmx()+0x290>)
 800f206:	606b      	str	r3, [r5, #4]
 800f208:	f7ff fac0 	bl	800e78c <uart_dmx_config(unsigned int)>
 800f20c:	2380      	movs	r3, #128	; 0x80
 800f20e:	4818      	ldr	r0, [pc, #96]	; (800f270 <Dmx::Dmx()+0x294>)
 800f210:	606b      	str	r3, [r5, #4]
 800f212:	f7ff fabb 	bl	800e78c <uart_dmx_config(unsigned int)>
 800f216:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800f21a:	4816      	ldr	r0, [pc, #88]	; (800f274 <Dmx::Dmx()+0x298>)
 800f21c:	606b      	str	r3, [r5, #4]
 800f21e:	f7ff fab5 	bl	800e78c <uart_dmx_config(unsigned int)>
 800f222:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 800f226:	4630      	mov	r0, r6
 800f228:	606b      	str	r3, [r5, #4]
 800f22a:	b009      	add	sp, #36	; 0x24
 800f22c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f230:	20004328 	andcs	r4, r0, r8, lsr #6
 800f234:	08017c14 	stmdaeq	r1, {r2, r4, sl, fp, ip, sp, lr}
 800f238:	200042e4 	andcs	r4, r0, r4, ror #5
 800f23c:	200042d4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 800f240:	20003284 	andcs	r3, r0, r4, lsl #5
 800f244:	40020000 	andmi	r0, r2, r0
 800f248:	40004404 	andmi	r4, r0, r4, lsl #8
 800f24c:	40004804 	andmi	r4, r0, r4, lsl #16
 800f250:	40020400 	andmi	r0, r2, r0, lsl #8
 800f254:	40004c04 	andmi	r4, r0, r4, lsl #24
 800f258:	40005004 	andmi	r5, r0, r4
 800f25c:	40000400 	andmi	r0, r0, r0, lsl #8
 800f260:	e000e100 	and	lr, r0, r0, lsl #2
 800f264:	40001400 	andmi	r1, r0, r0, lsl #8
 800f268:	40004400 	andmi	r4, r0, r0, lsl #8
 800f26c:	40004800 	andmi	r4, r0, r0, lsl #16
 800f270:	40004c00 	andmi	r4, r0, r0, lsl #24
 800f274:	40005000 	andmi	r5, r0, r0

0800f278 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800f278:	4b1b      	ldr	r3, [pc, #108]	; (800f2e8 <Dmx::SetDmxPeriodTime(unsigned int)+0x70>)
 800f27a:	b570      	push	{r4, r5, r6, lr}
 800f27c:	f8b3 4406 	ldrh.w	r4, [r3, #1030]	; 0x406
 800f280:	60c1      	str	r1, [r0, #12]
 800f282:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800f286:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800f28a:	4284      	cmp	r4, r0
 800f28c:	bf38      	it	cc
 800f28e:	4604      	movcc	r4, r0
 800f290:	f8b3 060a 	ldrh.w	r0, [r3, #1546]	; 0x60a
 800f294:	4d15      	ldr	r5, [pc, #84]	; (800f2ec <Dmx::SetDmxPeriodTime(unsigned int)+0x74>)
 800f296:	4284      	cmp	r4, r0
 800f298:	bf38      	it	cc
 800f29a:	4604      	movcc	r4, r0
 800f29c:	f8b3 080e 	ldrh.w	r0, [r3, #2062]	; 0x80e
 800f2a0:	232c      	movs	r3, #44	; 0x2c
 800f2a2:	42a0      	cmp	r0, r4
 800f2a4:	bf38      	it	cc
 800f2a6:	4620      	movcc	r0, r4
 800f2a8:	4c11      	ldr	r4, [pc, #68]	; (800f2f0 <Dmx::SetDmxPeriodTime(unsigned int)+0x78>)
 800f2aa:	4358      	muls	r0, r3
 800f2ac:	682a      	ldr	r2, [r5, #0]
 800f2ae:	6823      	ldr	r3, [r4, #0]
 800f2b0:	4413      	add	r3, r2
 800f2b2:	4403      	add	r3, r0
 800f2b4:	42b3      	cmp	r3, r6
 800f2b6:	d908      	bls.n	800f2ca <Dmx::SetDmxPeriodTime(unsigned int)+0x52>
 800f2b8:	2ab0      	cmp	r2, #176	; 0xb0
 800f2ba:	4613      	mov	r3, r2
 800f2bc:	bf28      	it	cs
 800f2be:	23b0      	movcs	r3, #176	; 0xb0
 800f2c0:	220c      	movs	r2, #12
 800f2c2:	602b      	str	r3, [r5, #0]
 800f2c4:	4413      	add	r3, r2
 800f2c6:	6022      	str	r2, [r4, #0]
 800f2c8:	4403      	add	r3, r0
 800f2ca:	4a0a      	ldr	r2, [pc, #40]	; (800f2f4 <Dmx::SetDmxPeriodTime(unsigned int)+0x7c>)
 800f2cc:	b109      	cbz	r1, 800f2d2 <Dmx::SetDmxPeriodTime(unsigned int)+0x5a>
 800f2ce:	428b      	cmp	r3, r1
 800f2d0:	d907      	bls.n	800f2e2 <Dmx::SetDmxPeriodTime(unsigned int)+0x6a>
 800f2d2:	f240 41b4 	movw	r1, #1204	; 0x4b4
 800f2d6:	332c      	adds	r3, #44	; 0x2c
 800f2d8:	428b      	cmp	r3, r1
 800f2da:	bf2c      	ite	cs
 800f2dc:	6013      	strcs	r3, [r2, #0]
 800f2de:	6011      	strcc	r1, [r2, #0]
 800f2e0:	e000      	b.n	800f2e4 <Dmx::SetDmxPeriodTime(unsigned int)+0x6c>
 800f2e2:	6011      	str	r1, [r2, #0]
 800f2e4:	bd70      	pop	{r4, r5, r6, pc}
 800f2e6:	bf00      	nop
 800f2e8:	20003ac4 	andcs	r3, r0, r4, asr #21
 800f2ec:	20000010 	andcs	r0, r0, r0, lsl r0
 800f2f0:	2000000c 	andcs	r0, r0, ip
 800f2f4:	20000008 	andcs	r0, r0, r8

0800f2f8 <Dmx::SetDmxBreakTime(unsigned int)>:
 800f2f8:	295c      	cmp	r1, #92	; 0x5c
 800f2fa:	bf38      	it	cc
 800f2fc:	215c      	movcc	r1, #92	; 0x5c
 800f2fe:	4b02      	ldr	r3, [pc, #8]	; (800f308 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800f300:	6019      	str	r1, [r3, #0]
 800f302:	68c1      	ldr	r1, [r0, #12]
 800f304:	f7ff bfb8 	b.w	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f308:	20000010 	andcs	r0, r0, r0, lsl r0

0800f30c <Dmx::SetDmxMabTime(unsigned int)>:
 800f30c:	290c      	cmp	r1, #12
 800f30e:	bf38      	it	cc
 800f310:	210c      	movcc	r1, #12
 800f312:	4b02      	ldr	r3, [pc, #8]	; (800f31c <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800f314:	6019      	str	r1, [r3, #0]
 800f316:	68c1      	ldr	r1, [r0, #12]
 800f318:	f7ff bfae 	b.w	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f31c:	2000000c 	andcs	r0, r0, ip

0800f320 <Dmx::SetDmxSlots(unsigned short)>:
 800f320:	1e8b      	subs	r3, r1, #2
 800f322:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800f326:	b410      	push	{r4}
 800f328:	d813      	bhi.n	800f352 <Dmx::SetDmxSlots(unsigned short)+0x32>
 800f32a:	8201      	strh	r1, [r0, #16]
 800f32c:	f100 0324 	add.w	r3, r0, #36	; 0x24
 800f330:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800f334:	f853 2b04 	ldr.w	r2, [r3], #4
 800f338:	b12a      	cbz	r2, 800f346 <Dmx::SetDmxSlots(unsigned short)+0x26>
 800f33a:	4291      	cmp	r1, r2
 800f33c:	bf94      	ite	ls
 800f33e:	f843 1c04 	strls.w	r1, [r3, #-4]
 800f342:	f843 2c04 	strhi.w	r2, [r3, #-4]
 800f346:	42a3      	cmp	r3, r4
 800f348:	d1f4      	bne.n	800f334 <Dmx::SetDmxSlots(unsigned short)+0x14>
 800f34a:	68c1      	ldr	r1, [r0, #12]
 800f34c:	bc10      	pop	{r4}
 800f34e:	f7ff bf93 	b.w	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f352:	bc10      	pop	{r4}
 800f354:	4770      	bx	lr
	...

0800f358 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800f358:	b4f0      	push	{r4, r5, r6, r7}
 800f35a:	8a04      	ldrh	r4, [r0, #16]
 800f35c:	4d11      	ldr	r5, [pc, #68]	; (800f3a4 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800f35e:	42a3      	cmp	r3, r4
 800f360:	bf28      	it	cs
 800f362:	4623      	movcs	r3, r4
 800f364:	f44f 7401 	mov.w	r4, #516	; 0x204
 800f368:	434c      	muls	r4, r1
 800f36a:	1c5f      	adds	r7, r3, #1
 800f36c:	192e      	adds	r6, r5, r4
 800f36e:	f892 f000 	pld	[r2]
 800f372:	3401      	adds	r4, #1
 800f374:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800f378:	442c      	add	r4, r5
 800f37a:	18d6      	adds	r6, r2, r3
 800f37c:	4296      	cmp	r6, r2
 800f37e:	d004      	beq.n	800f38a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 800f380:	f812 5b01 	ldrb.w	r5, [r2], #1
 800f384:	f804 5b01 	strb.w	r5, [r4], #1
 800f388:	e7f8      	b.n	800f37c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800f38a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800f38e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f390:	429a      	cmp	r2, r3
 800f392:	d004      	beq.n	800f39e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800f394:	bcf0      	pop	{r4, r5, r6, r7}
 800f396:	624b      	str	r3, [r1, #36]	; 0x24
 800f398:	68c1      	ldr	r1, [r0, #12]
 800f39a:	f7ff bf6d 	b.w	800f278 <Dmx::SetDmxPeriodTime(unsigned int)>
 800f39e:	bcf0      	pop	{r4, r5, r6, r7}
 800f3a0:	4770      	bx	lr
 800f3a2:	bf00      	nop
 800f3a4:	20003ac4 	andcs	r3, r0, r4, asr #21

0800f3a8 <Dmx::GetDmxAvailable(unsigned int)>:
 800f3a8:	f44f 7304 	mov.w	r3, #528	; 0x210
 800f3ac:	4807      	ldr	r0, [pc, #28]	; (800f3cc <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800f3ae:	fb03 0001 	mla	r0, r3, r1, r0
 800f3b2:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 800f3b6:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 800f3ba:	bf1b      	ittet	ne
 800f3bc:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800f3c0:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800f3c4:	4608      	moveq	r0, r1
 800f3c6:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 800f3ca:	4770      	bx	lr
 800f3cc:	20003284 	andcs	r3, r0, r4, lsl #5

0800f3d0 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800f3d0:	f3bf 8f5f 	dmb	sy
 800f3d4:	4b01      	ldr	r3, [pc, #4]	; (800f3dc <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800f3d6:	0109      	lsls	r1, r1, #4
 800f3d8:	5858      	ldr	r0, [r3, r1]
 800f3da:	4770      	bx	lr
 800f3dc:	200042e8 	andcs	r4, r0, r8, ror #5

0800f3e0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)>:
 800f3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3e4:	4615      	mov	r5, r2
 800f3e6:	4698      	mov	r8, r3
 800f3e8:	028f      	lsls	r7, r1, #10
 800f3ea:	f107 4480 	add.w	r4, r7, #1073741824	; 0x40000000
 800f3ee:	f504 4488 	add.w	r4, r4, #17408	; 0x4400
 800f3f2:	2106      	movs	r1, #6
 800f3f4:	4620      	mov	r0, r4
 800f3f6:	f005 febd 	bl	8015174 <usart_flag_get>
 800f3fa:	2800      	cmp	r0, #0
 800f3fc:	d0f9      	beq.n	800f3f2 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x12>
 800f3fe:	4b30      	ldr	r3, [pc, #192]	; (800f4c0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe0>)
 800f400:	4e30      	ldr	r6, [pc, #192]	; (800f4c4 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe4>)
 800f402:	429c      	cmp	r4, r3
 800f404:	d038      	beq.n	800f478 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x98>
 800f406:	d840      	bhi.n	800f48a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xaa>
 800f408:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f40c:	429c      	cmp	r4, r3
 800f40e:	d12b      	bne.n	800f468 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x88>
 800f410:	2120      	movs	r1, #32
 800f412:	482d      	ldr	r0, [pc, #180]	; (800f4c8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe8>)
 800f414:	f7ff f9b0 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800f418:	2320      	movs	r3, #32
 800f41a:	f8c6 3414 	str.w	r3, [r6, #1044]	; 0x414
 800f41e:	2100      	movs	r1, #0
 800f420:	20b0      	movs	r0, #176	; 0xb0
 800f422:	f006 fab3 	bl	801598c <udelay(unsigned int, unsigned int)>
 800f426:	4b26      	ldr	r3, [pc, #152]	; (800f4c0 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe0>)
 800f428:	429c      	cmp	r4, r3
 800f42a:	d036      	beq.n	800f49a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xba>
 800f42c:	d839      	bhi.n	800f4a2 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800f42e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f432:	429c      	cmp	r4, r3
 800f434:	bf0c      	ite	eq
 800f436:	2120      	moveq	r1, #32
 800f438:	f44f 7180 	movne.w	r1, #256	; 0x100
 800f43c:	4822      	ldr	r0, [pc, #136]	; (800f4c8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe8>)
 800f43e:	f7ff f9a0 	bl	800e782 <gpio_mode_af(unsigned int, unsigned int)>
 800f442:	2100      	movs	r1, #0
 800f444:	200c      	movs	r0, #12
 800f446:	f006 faa1 	bl	801598c <udelay(unsigned int, unsigned int)>
 800f44a:	4e20      	ldr	r6, [pc, #128]	; (800f4cc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xec>)
 800f44c:	44a8      	add	r8, r5
 800f44e:	443e      	add	r6, r7
 800f450:	4545      	cmp	r5, r8
 800f452:	d129      	bne.n	800f4a8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xc8>
 800f454:	4d1d      	ldr	r5, [pc, #116]	; (800f4cc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xec>)
 800f456:	443d      	add	r5, r7
 800f458:	2106      	movs	r1, #6
 800f45a:	4620      	mov	r0, r4
 800f45c:	f005 fe8a 	bl	8015174 <usart_flag_get>
 800f460:	2801      	cmp	r0, #1
 800f462:	d02b      	beq.n	800f4bc <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xdc>
 800f464:	682b      	ldr	r3, [r5, #0]
 800f466:	e7f7      	b.n	800f458 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x78>
 800f468:	f44f 7180 	mov.w	r1, #256	; 0x100
 800f46c:	4816      	ldr	r0, [pc, #88]	; (800f4c8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe8>)
 800f46e:	f7ff f983 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800f472:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f476:	e7d0      	b.n	800f41a <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x3a>
 800f478:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800f47c:	4630      	mov	r0, r6
 800f47e:	f7ff f97b 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800f482:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800f486:	6173      	str	r3, [r6, #20]
 800f488:	e7c9      	b.n	800f41e <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x3e>
 800f48a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800f48e:	4630      	mov	r0, r6
 800f490:	f7ff f972 	bl	800e778 <gpio_mode_output(unsigned int, unsigned int)>
 800f494:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800f498:	e7f5      	b.n	800f486 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xa6>
 800f49a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800f49e:	4809      	ldr	r0, [pc, #36]	; (800f4c4 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xe4>)
 800f4a0:	e7cd      	b.n	800f43e <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x5e>
 800f4a2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800f4a6:	e7fa      	b.n	800f49e <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xbe>
 800f4a8:	2107      	movs	r1, #7
 800f4aa:	4620      	mov	r0, r4
 800f4ac:	f005 fe62 	bl	8015174 <usart_flag_get>
 800f4b0:	2800      	cmp	r0, #0
 800f4b2:	d0f9      	beq.n	800f4a8 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0xc8>
 800f4b4:	f815 3b01 	ldrb.w	r3, [r5], #1
 800f4b8:	6033      	str	r3, [r6, #0]
 800f4ba:	e7c9      	b.n	800f450 <Dmx::RdmSendRaw(unsigned int, unsigned char const*, unsigned int)+0x70>
 800f4bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4c0:	40004c00 	andmi	r4, r0, r0, lsl #24
 800f4c4:	40011000 	andmi	r1, r1, r0
 800f4c8:	40011400 	andmi	r1, r1, r0, lsl #8
 800f4cc:	40004404 	andmi	r4, r0, r4, lsl #8

0800f4d0 <Dmx::RdmReceive(unsigned int)>:
 800f4d0:	f44f 7304 	mov.w	r3, #528	; 0x210
 800f4d4:	4806      	ldr	r0, [pc, #24]	; (800f4f0 <Dmx::RdmReceive(unsigned int)+0x20>)
 800f4d6:	fb03 0101 	mla	r1, r3, r1, r0
 800f4da:	f8b1 3204 	ldrh.w	r3, [r1, #516]	; 0x204
 800f4de:	f413 4080 	ands.w	r0, r3, #16384	; 0x4000
 800f4e2:	bf1e      	ittt	ne
 800f4e4:	2300      	movne	r3, #0
 800f4e6:	4608      	movne	r0, r1
 800f4e8:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800f4ec:	4770      	bx	lr
 800f4ee:	bf00      	nop
 800f4f0:	20003284 	andcs	r3, r0, r4, lsl #5

0800f4f4 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)>:
 800f4f4:	2300      	movs	r3, #0
 800f4f6:	b570      	push	{r4, r5, r6, lr}
 800f4f8:	4604      	mov	r4, r0
 800f4fa:	460d      	mov	r5, r1
 800f4fc:	4e05      	ldr	r6, [pc, #20]	; (800f514 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x20>)
 800f4fe:	6273      	str	r3, [r6, #36]	; 0x24
 800f500:	4629      	mov	r1, r5
 800f502:	4620      	mov	r0, r4
 800f504:	f7ff ffe4 	bl	800f4d0 <Dmx::RdmReceive(unsigned int)>
 800f508:	b910      	cbnz	r0, 800f510 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0x1c>
 800f50a:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800f50c:	4293      	cmp	r3, r2
 800f50e:	d3f7      	bcc.n	800f500 <Dmx::RdmReceiveTimeOut(unsigned int, unsigned short)+0xc>
 800f510:	bd70      	pop	{r4, r5, r6, pc}
 800f512:	bf00      	nop
 800f514:	40001000 	andmi	r1, r0, r0

0800f518 <micros()>:
 800f518:	b510      	push	{r4, lr}
 800f51a:	4a05      	ldr	r2, [pc, #20]	; (800f530 <micros()+0x18>)
 800f51c:	4c05      	ldr	r4, [pc, #20]	; (800f534 <micros()+0x1c>)
 800f51e:	6a51      	ldr	r1, [r2, #36]	; 0x24
 800f520:	f8d4 0c24 	ldr.w	r0, [r4, #3108]	; 0xc24
 800f524:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800f526:	428b      	cmp	r3, r1
 800f528:	d1f9      	bne.n	800f51e <micros()+0x6>
 800f52a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800f52e:	bd10      	pop	{r4, pc}
 800f530:	40015000 	andmi	r5, r1, r0
 800f534:	40014000 	andmi	r4, r1, r0

0800f538 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)>:
 800f538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f53a:	4605      	mov	r5, r0
 800f53c:	460c      	mov	r4, r1
 800f53e:	4616      	mov	r6, r2
 800f540:	b96a      	cbnz	r2, 800f55e <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x26>
 800f542:	4e18      	ldr	r6, [pc, #96]	; (800f5a4 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x6c>)
 800f544:	4622      	mov	r2, r4
 800f546:	5d73      	ldrb	r3, [r6, r5]
 800f548:	78a1      	ldrb	r1, [r4, #2]
 800f54a:	73e3      	strb	r3, [r4, #15]
 800f54c:	2300      	movs	r3, #0
 800f54e:	190f      	adds	r7, r1, r4
 800f550:	42ba      	cmp	r2, r7
 800f552:	d015      	beq.n	800f580 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x48>
 800f554:	f812 0b01 	ldrb.w	r0, [r2], #1
 800f558:	4403      	add	r3, r0
 800f55a:	b29b      	uxth	r3, r3
 800f55c:	e7f8      	b.n	800f550 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x18>
 800f55e:	f7ff ffdb 	bl	800f518 <micros()>
 800f562:	4b11      	ldr	r3, [pc, #68]	; (800f5a8 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x70>)
 800f564:	4607      	mov	r7, r0
 800f566:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800f56a:	1ac2      	subs	r2, r0, r3
 800f56c:	4296      	cmp	r6, r2
 800f56e:	d9e8      	bls.n	800f542 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0xa>
 800f570:	4433      	add	r3, r6
 800f572:	1a1e      	subs	r6, r3, r0
 800f574:	f7ff ffd0 	bl	800f518 <micros()>
 800f578:	1bc0      	subs	r0, r0, r7
 800f57a:	42b0      	cmp	r0, r6
 800f57c:	d3fa      	bcc.n	800f574 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x3c>
 800f57e:	e7e0      	b.n	800f542 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0xa>
 800f580:	0a18      	lsrs	r0, r3, #8
 800f582:	5460      	strb	r0, [r4, r1]
 800f584:	7053      	strb	r3, [r2, #1]
 800f586:	78a2      	ldrb	r2, [r4, #2]
 800f588:	4621      	mov	r1, r4
 800f58a:	4628      	mov	r0, r5
 800f58c:	3202      	adds	r2, #2
 800f58e:	f7ff f8d3 	bl	800e738 <Rdm::SendRaw(unsigned int, unsigned char const*, unsigned int)>
 800f592:	f7ff ffc1 	bl	800f518 <micros()>
 800f596:	4b04      	ldr	r3, [pc, #16]	; (800f5a8 <Rdm::Send(unsigned int, TRdmMessage*, unsigned int)+0x70>)
 800f598:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 800f59c:	5d73      	ldrb	r3, [r6, r5]
 800f59e:	3301      	adds	r3, #1
 800f5a0:	5573      	strb	r3, [r6, r5]
 800f5a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f5a4:	20004340 	andcs	r4, r0, r0, asr #6
 800f5a8:	20004330 	andcs	r4, r0, r0, lsr r3

0800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800f5ac:	2300      	movs	r3, #0
 800f5ae:	2020      	movs	r0, #32
 800f5b0:	b510      	push	{r4, lr}
 800f5b2:	4a04      	ldr	r2, [pc, #16]	; (800f5c4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800f5b4:	428b      	cmp	r3, r1
 800f5b6:	d004      	beq.n	800f5c2 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800f5b8:	f852 4b04 	ldr.w	r4, [r2], #4
 800f5bc:	3301      	adds	r3, #1
 800f5be:	4420      	add	r0, r4
 800f5c0:	e7f8      	b.n	800f5b4 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800f5c2:	bd10      	pop	{r4, pc}
 800f5c4:	08017c34 	stmdaeq	r1, {r2, r4, r5, sl, fp, ip, sp, lr}

0800f5c8 <SpiFlashStore::Init()>:
 800f5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5cc:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800f6f0 <SpiFlashStore::Init()+0x128>
 800f5d0:	4607      	mov	r7, r0
 800f5d2:	b085      	sub	sp, #20
 800f5d4:	f8d8 0000 	ldr.w	r0, [r8]
 800f5d8:	f000 fc70 	bl	800febc <FlashRom::GetSectorSize() const>
 800f5dc:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800f5e0:	4605      	mov	r5, r0
 800f5e2:	f040 8083 	bne.w	800f6ec <SpiFlashStore::Init()+0x124>
 800f5e6:	f8d8 0000 	ldr.w	r0, [r8]
 800f5ea:	f000 fc5f 	bl	800feac <FlashRom::GetSize() const>
 800f5ee:	4b41      	ldr	r3, [pc, #260]	; (800f6f4 <SpiFlashStore::Init()+0x12c>)
 800f5f0:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800f5f4:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800f5f8:	6019      	str	r1, [r3, #0]
 800f5fa:	2e00      	cmp	r6, #0
 800f5fc:	d176      	bne.n	800f6ec <SpiFlashStore::Init()+0x124>
 800f5fe:	4c3e      	ldr	r4, [pc, #248]	; (800f6f8 <SpiFlashStore::Init()+0x130>)
 800f600:	ab03      	add	r3, sp, #12
 800f602:	9300      	str	r3, [sp, #0]
 800f604:	462a      	mov	r2, r5
 800f606:	4623      	mov	r3, r4
 800f608:	f8d8 0000 	ldr.w	r0, [r8]
 800f60c:	f000 fc59 	bl	800fec2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800f610:	7823      	ldrb	r3, [r4, #0]
 800f612:	2b41      	cmp	r3, #65	; 0x41
 800f614:	bf1c      	itt	ne
 800f616:	2341      	movne	r3, #65	; 0x41
 800f618:	7023      	strbne	r3, [r4, #0]
 800f61a:	7863      	ldrb	r3, [r4, #1]
 800f61c:	bf14      	ite	ne
 800f61e:	4635      	movne	r5, r6
 800f620:	2501      	moveq	r5, #1
 800f622:	2b76      	cmp	r3, #118	; 0x76
 800f624:	bf1c      	itt	ne
 800f626:	2376      	movne	r3, #118	; 0x76
 800f628:	7063      	strbne	r3, [r4, #1]
 800f62a:	78a3      	ldrb	r3, [r4, #2]
 800f62c:	bf18      	it	ne
 800f62e:	2500      	movne	r5, #0
 800f630:	2b56      	cmp	r3, #86	; 0x56
 800f632:	bf1c      	itt	ne
 800f634:	2356      	movne	r3, #86	; 0x56
 800f636:	70a3      	strbne	r3, [r4, #2]
 800f638:	78e3      	ldrb	r3, [r4, #3]
 800f63a:	bf18      	it	ne
 800f63c:	2500      	movne	r5, #0
 800f63e:	2b10      	cmp	r3, #16
 800f640:	d01c      	beq.n	800f67c <SpiFlashStore::Init()+0xb4>
 800f642:	2310      	movs	r3, #16
 800f644:	70e3      	strb	r3, [r4, #3]
 800f646:	2201      	movs	r2, #1
 800f648:	2500      	movs	r5, #0
 800f64a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f64e:	4b2b      	ldr	r3, [pc, #172]	; (800f6fc <SpiFlashStore::Init()+0x134>)
 800f650:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800f700 <SpiFlashStore::Init()+0x138>
 800f654:	701a      	strb	r2, [r3, #0]
 800f656:	4631      	mov	r1, r6
 800f658:	4638      	mov	r0, r7
 800f65a:	f7ff ffa7 	bl	800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f65e:	1823      	adds	r3, r4, r0
 800f660:	5425      	strb	r5, [r4, r0]
 800f662:	705d      	strb	r5, [r3, #1]
 800f664:	709d      	strb	r5, [r3, #2]
 800f666:	70dd      	strb	r5, [r3, #3]
 800f668:	f858 3b04 	ldr.w	r3, [r8], #4
 800f66c:	1d02      	adds	r2, r0, #4
 800f66e:	4403      	add	r3, r0
 800f670:	4293      	cmp	r3, r2
 800f672:	d931      	bls.n	800f6d8 <SpiFlashStore::Init()+0x110>
 800f674:	f804 9002 	strb.w	r9, [r4, r2]
 800f678:	3201      	adds	r2, #1
 800f67a:	e7f9      	b.n	800f670 <SpiFlashStore::Init()+0xa8>
 800f67c:	2d00      	cmp	r5, #0
 800f67e:	d0e2      	beq.n	800f646 <SpiFlashStore::Init()+0x7e>
 800f680:	f04f 0900 	mov.w	r9, #0
 800f684:	46c8      	mov	r8, r9
 800f686:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800f704 <SpiFlashStore::Init()+0x13c>
 800f68a:	f8da b000 	ldr.w	fp, [sl]
 800f68e:	4631      	mov	r1, r6
 800f690:	4638      	mov	r0, r7
 800f692:	f7ff ff8b 	bl	800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f696:	5c23      	ldrb	r3, [r4, r0]
 800f698:	2bff      	cmp	r3, #255	; 0xff
 800f69a:	d114      	bne.n	800f6c6 <SpiFlashStore::Init()+0xfe>
 800f69c:	1823      	adds	r3, r4, r0
 800f69e:	785a      	ldrb	r2, [r3, #1]
 800f6a0:	2aff      	cmp	r2, #255	; 0xff
 800f6a2:	d110      	bne.n	800f6c6 <SpiFlashStore::Init()+0xfe>
 800f6a4:	789a      	ldrb	r2, [r3, #2]
 800f6a6:	2aff      	cmp	r2, #255	; 0xff
 800f6a8:	d10d      	bne.n	800f6c6 <SpiFlashStore::Init()+0xfe>
 800f6aa:	78da      	ldrb	r2, [r3, #3]
 800f6ac:	2aff      	cmp	r2, #255	; 0xff
 800f6ae:	d10a      	bne.n	800f6c6 <SpiFlashStore::Init()+0xfe>
 800f6b0:	46a9      	mov	r9, r5
 800f6b2:	f04f 0b01 	mov.w	fp, #1
 800f6b6:	f804 8000 	strb.w	r8, [r4, r0]
 800f6ba:	f883 8001 	strb.w	r8, [r3, #1]
 800f6be:	f883 8002 	strb.w	r8, [r3, #2]
 800f6c2:	f883 8003 	strb.w	r8, [r3, #3]
 800f6c6:	3601      	adds	r6, #1
 800f6c8:	2e1c      	cmp	r6, #28
 800f6ca:	d1e0      	bne.n	800f68e <SpiFlashStore::Init()+0xc6>
 800f6cc:	f1b9 0f00 	cmp.w	r9, #0
 800f6d0:	d008      	beq.n	800f6e4 <SpiFlashStore::Init()+0x11c>
 800f6d2:	f8ca b000 	str.w	fp, [sl]
 800f6d6:	e005      	b.n	800f6e4 <SpiFlashStore::Init()+0x11c>
 800f6d8:	3601      	adds	r6, #1
 800f6da:	2e1c      	cmp	r6, #28
 800f6dc:	d1bb      	bne.n	800f656 <SpiFlashStore::Init()+0x8e>
 800f6de:	2501      	movs	r5, #1
 800f6e0:	4b08      	ldr	r3, [pc, #32]	; (800f704 <SpiFlashStore::Init()+0x13c>)
 800f6e2:	601d      	str	r5, [r3, #0]
 800f6e4:	4628      	mov	r0, r5
 800f6e6:	b005      	add	sp, #20
 800f6e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6ec:	2500      	movs	r5, #0
 800f6ee:	e7f9      	b.n	800f6e4 <SpiFlashStore::Init()+0x11c>
 800f6f0:	2000537c 	andcs	r5, r0, ip, ror r3
 800f6f4:	20005348 	andcs	r5, r0, r8, asr #6
 800f6f8:	20004348 	andcs	r4, r0, r8, asr #6
 800f6fc:	2000535c 	andcs	r5, r0, ip, asr r3
 800f700:	08017c34 	stmdaeq	r1, {r2, r4, r5, sl, fp, ip, sp, lr}
 800f704:	20005354 	andcs	r5, r0, r4, asr r3

0800f708 <SpiFlashStore::SpiFlashStore()>:
 800f708:	b538      	push	{r3, r4, r5, lr}
 800f70a:	4b0d      	ldr	r3, [pc, #52]	; (800f740 <SpiFlashStore::SpiFlashStore()+0x38>)
 800f70c:	4604      	mov	r4, r0
 800f70e:	6018      	str	r0, [r3, #0]
 800f710:	4b0c      	ldr	r3, [pc, #48]	; (800f744 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800f712:	4d0d      	ldr	r5, [pc, #52]	; (800f748 <SpiFlashStore::SpiFlashStore()+0x40>)
 800f714:	681b      	ldr	r3, [r3, #0]
 800f716:	781b      	ldrb	r3, [r3, #0]
 800f718:	b113      	cbz	r3, 800f720 <SpiFlashStore::SpiFlashStore()+0x18>
 800f71a:	f7ff ff55 	bl	800f5c8 <SpiFlashStore::Init()>
 800f71e:	7028      	strb	r0, [r5, #0]
 800f720:	782b      	ldrb	r3, [r5, #0]
 800f722:	b153      	cbz	r3, 800f73a <SpiFlashStore::SpiFlashStore()+0x32>
 800f724:	2320      	movs	r3, #32
 800f726:	2200      	movs	r2, #0
 800f728:	4908      	ldr	r1, [pc, #32]	; (800f74c <SpiFlashStore::SpiFlashStore()+0x44>)
 800f72a:	f851 0b04 	ldr.w	r0, [r1], #4
 800f72e:	3201      	adds	r2, #1
 800f730:	2a1c      	cmp	r2, #28
 800f732:	4403      	add	r3, r0
 800f734:	d1f9      	bne.n	800f72a <SpiFlashStore::SpiFlashStore()+0x22>
 800f736:	4a06      	ldr	r2, [pc, #24]	; (800f750 <SpiFlashStore::SpiFlashStore()+0x48>)
 800f738:	6013      	str	r3, [r2, #0]
 800f73a:	4620      	mov	r0, r4
 800f73c:	bd38      	pop	{r3, r4, r5, pc}
 800f73e:	bf00      	nop
 800f740:	20005358 	andcs	r5, r0, r8, asr r3
 800f744:	2000537c 	andcs	r5, r0, ip, ror r3
 800f748:	2000534c 	andcs	r5, r0, ip, asr #6
 800f74c:	08017c34 	stmdaeq	r1, {r2, r4, r5, sl, fp, ip, sp, lr}
 800f750:	20005350 	andcs	r5, r0, r0, asr r3

0800f754 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800f754:	b508      	push	{r3, lr}
 800f756:	f7ff ff29 	bl	800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f75a:	2300      	movs	r3, #0
 800f75c:	4904      	ldr	r1, [pc, #16]	; (800f770 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800f75e:	1842      	adds	r2, r0, r1
 800f760:	540b      	strb	r3, [r1, r0]
 800f762:	7053      	strb	r3, [r2, #1]
 800f764:	7093      	strb	r3, [r2, #2]
 800f766:	70d3      	strb	r3, [r2, #3]
 800f768:	2201      	movs	r2, #1
 800f76a:	4b02      	ldr	r3, [pc, #8]	; (800f774 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800f76c:	601a      	str	r2, [r3, #0]
 800f76e:	bd08      	pop	{r3, pc}
 800f770:	20004348 	andcs	r4, r0, r8, asr #6
 800f774:	20005354 	andcs	r5, r0, r4, asr r3

0800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800f778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f77c:	461c      	mov	r4, r3
 800f77e:	4b19      	ldr	r3, [pc, #100]	; (800f7e4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800f780:	4615      	mov	r5, r2
 800f782:	781f      	ldrb	r7, [r3, #0]
 800f784:	9e07      	ldr	r6, [sp, #28]
 800f786:	b35f      	cbz	r7, 800f7e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800f788:	f7ff ff10 	bl	800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f78c:	f04f 0c00 	mov.w	ip, #0
 800f790:	4a15      	ldr	r2, [pc, #84]	; (800f7e8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800f792:	1941      	adds	r1, r0, r5
 800f794:	1e63      	subs	r3, r4, #1
 800f796:	9c06      	ldr	r4, [sp, #24]
 800f798:	4411      	add	r1, r2
 800f79a:	440c      	add	r4, r1
 800f79c:	42a1      	cmp	r1, r4
 800f79e:	d00a      	beq.n	800f7b6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800f7a0:	f891 8000 	ldrb.w	r8, [r1]
 800f7a4:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800f7a8:	3101      	adds	r1, #1
 800f7aa:	45f0      	cmp	r8, lr
 800f7ac:	bf1c      	itt	ne
 800f7ae:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800f7b2:	46bc      	movne	ip, r7
 800f7b4:	e7f2      	b.n	800f79c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800f7b6:	f1bc 0f00 	cmp.w	ip, #0
 800f7ba:	d011      	beq.n	800f7e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800f7bc:	4b0b      	ldr	r3, [pc, #44]	; (800f7ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800f7be:	6819      	ldr	r1, [r3, #0]
 800f7c0:	b109      	cbz	r1, 800f7c6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800f7c2:	2906      	cmp	r1, #6
 800f7c4:	d101      	bne.n	800f7ca <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f7c6:	2101      	movs	r1, #1
 800f7c8:	6019      	str	r1, [r3, #0]
 800f7ca:	4b09      	ldr	r3, [pc, #36]	; (800f7f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800f7cc:	6819      	ldr	r1, [r3, #0]
 800f7ce:	4b09      	ldr	r3, [pc, #36]	; (800f7f4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800f7d0:	6019      	str	r1, [r3, #0]
 800f7d2:	b12d      	cbz	r5, 800f7e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800f7d4:	b126      	cbz	r6, 800f7e0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800f7d6:	9b08      	ldr	r3, [sp, #32]
 800f7d8:	4418      	add	r0, r3
 800f7da:	5813      	ldr	r3, [r2, r0]
 800f7dc:	4333      	orrs	r3, r6
 800f7de:	5013      	str	r3, [r2, r0]
 800f7e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7e4:	2000534c 	andcs	r5, r0, ip, asr #6
 800f7e8:	20004348 	andcs	r4, r0, r8, asr #6
 800f7ec:	20005354 	andcs	r5, r0, r4, asr r3
 800f7f0:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800f7f4:	20004344 	andcs	r4, r0, r4, asr #6

0800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800f7f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7fc:	461d      	mov	r5, r3
 800f7fe:	4b15      	ldr	r3, [pc, #84]	; (800f854 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800f800:	b085      	sub	sp, #20
 800f802:	781b      	ldrb	r3, [r3, #0]
 800f804:	4607      	mov	r7, r0
 800f806:	4688      	mov	r8, r1
 800f808:	4614      	mov	r4, r2
 800f80a:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800f80e:	b1eb      	cbz	r3, 800f84c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800f810:	f7ff fecc 	bl	800f5ac <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f814:	4910      	ldr	r1, [pc, #64]	; (800f858 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800f816:	4a11      	ldr	r2, [pc, #68]	; (800f85c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800f818:	7809      	ldrb	r1, [r1, #0]
 800f81a:	eb00 0309 	add.w	r3, r0, r9
 800f81e:	189e      	adds	r6, r3, r2
 800f820:	b951      	cbnz	r1, 800f838 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800f822:	589b      	ldr	r3, [r3, r2]
 800f824:	b143      	cbz	r3, 800f838 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800f826:	3c01      	subs	r4, #1
 800f828:	4435      	add	r5, r6
 800f82a:	42b5      	cmp	r5, r6
 800f82c:	d00e      	beq.n	800f84c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800f82e:	f816 3b01 	ldrb.w	r3, [r6], #1
 800f832:	f804 3f01 	strb.w	r3, [r4, #1]!
 800f836:	e7f8      	b.n	800f82a <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800f838:	2300      	movs	r3, #0
 800f83a:	464a      	mov	r2, r9
 800f83c:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800f840:	4641      	mov	r1, r8
 800f842:	4623      	mov	r3, r4
 800f844:	4638      	mov	r0, r7
 800f846:	9500      	str	r5, [sp, #0]
 800f848:	f7ff ff96 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f84c:	b005      	add	sp, #20
 800f84e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f852:	bf00      	nop
 800f854:	2000534c 	andcs	r5, r0, ip, asr #6
 800f858:	2000535c 	andcs	r5, r0, ip, asr r3
 800f85c:	20004348 	andcs	r4, r0, r8, asr #6

0800f860 <SpiFlashStore::Flash()>:
 800f860:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f862:	4c25      	ldr	r4, [pc, #148]	; (800f8f8 <SpiFlashStore::Flash()+0x98>)
 800f864:	6820      	ldr	r0, [r4, #0]
 800f866:	2800      	cmp	r0, #0
 800f868:	d043      	beq.n	800f8f2 <SpiFlashStore::Flash()+0x92>
 800f86a:	3801      	subs	r0, #1
 800f86c:	2805      	cmp	r0, #5
 800f86e:	d831      	bhi.n	800f8d4 <SpiFlashStore::Flash()+0x74>
 800f870:	e8df f000 	tbb	[pc, r0]
 800f874:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800f878:	4b203025 	blmi	881b914 <__exidx_end+0x8031e0>
 800f87c:	681a      	ldr	r2, [r3, #0]
 800f87e:	4b20      	ldr	r3, [pc, #128]	; (800f900 <SpiFlashStore::Flash()+0xa0>)
 800f880:	601a      	str	r2, [r3, #0]
 800f882:	2302      	movs	r3, #2
 800f884:	6023      	str	r3, [r4, #0]
 800f886:	2001      	movs	r0, #1
 800f888:	e033      	b.n	800f8f2 <SpiFlashStore::Flash()+0x92>
 800f88a:	4b1c      	ldr	r3, [pc, #112]	; (800f8fc <SpiFlashStore::Flash()+0x9c>)
 800f88c:	4a1c      	ldr	r2, [pc, #112]	; (800f900 <SpiFlashStore::Flash()+0xa0>)
 800f88e:	681b      	ldr	r3, [r3, #0]
 800f890:	6812      	ldr	r2, [r2, #0]
 800f892:	1a9b      	subs	r3, r3, r2
 800f894:	2b63      	cmp	r3, #99	; 0x63
 800f896:	d9f6      	bls.n	800f886 <SpiFlashStore::Flash()+0x26>
 800f898:	2303      	movs	r3, #3
 800f89a:	e7f3      	b.n	800f884 <SpiFlashStore::Flash()+0x24>
 800f89c:	4919      	ldr	r1, [pc, #100]	; (800f904 <SpiFlashStore::Flash()+0xa4>)
 800f89e:	481a      	ldr	r0, [pc, #104]	; (800f908 <SpiFlashStore::Flash()+0xa8>)
 800f8a0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800f8a4:	6809      	ldr	r1, [r1, #0]
 800f8a6:	6800      	ldr	r0, [r0, #0]
 800f8a8:	ab03      	add	r3, sp, #12
 800f8aa:	f000 fb19 	bl	800fee0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800f8ae:	2800      	cmp	r0, #0
 800f8b0:	d0e9      	beq.n	800f886 <SpiFlashStore::Flash()+0x26>
 800f8b2:	4b12      	ldr	r3, [pc, #72]	; (800f8fc <SpiFlashStore::Flash()+0x9c>)
 800f8b4:	681a      	ldr	r2, [r3, #0]
 800f8b6:	4b12      	ldr	r3, [pc, #72]	; (800f900 <SpiFlashStore::Flash()+0xa0>)
 800f8b8:	601a      	str	r2, [r3, #0]
 800f8ba:	2305      	movs	r3, #5
 800f8bc:	e7e2      	b.n	800f884 <SpiFlashStore::Flash()+0x24>
 800f8be:	4b0f      	ldr	r3, [pc, #60]	; (800f8fc <SpiFlashStore::Flash()+0x9c>)
 800f8c0:	4a0f      	ldr	r2, [pc, #60]	; (800f900 <SpiFlashStore::Flash()+0xa0>)
 800f8c2:	681b      	ldr	r3, [r3, #0]
 800f8c4:	6812      	ldr	r2, [r2, #0]
 800f8c6:	1a9b      	subs	r3, r3, r2
 800f8c8:	2b63      	cmp	r3, #99	; 0x63
 800f8ca:	d9dc      	bls.n	800f886 <SpiFlashStore::Flash()+0x26>
 800f8cc:	2304      	movs	r3, #4
 800f8ce:	e7d9      	b.n	800f884 <SpiFlashStore::Flash()+0x24>
 800f8d0:	2306      	movs	r3, #6
 800f8d2:	e7d7      	b.n	800f884 <SpiFlashStore::Flash()+0x24>
 800f8d4:	ab03      	add	r3, sp, #12
 800f8d6:	4a0d      	ldr	r2, [pc, #52]	; (800f90c <SpiFlashStore::Flash()+0xac>)
 800f8d8:	490a      	ldr	r1, [pc, #40]	; (800f904 <SpiFlashStore::Flash()+0xa4>)
 800f8da:	480b      	ldr	r0, [pc, #44]	; (800f908 <SpiFlashStore::Flash()+0xa8>)
 800f8dc:	9300      	str	r3, [sp, #0]
 800f8de:	6812      	ldr	r2, [r2, #0]
 800f8e0:	4b0b      	ldr	r3, [pc, #44]	; (800f910 <SpiFlashStore::Flash()+0xb0>)
 800f8e2:	6809      	ldr	r1, [r1, #0]
 800f8e4:	6800      	ldr	r0, [r0, #0]
 800f8e6:	f000 fb9b 	bl	8010020 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800f8ea:	2800      	cmp	r0, #0
 800f8ec:	d0cb      	beq.n	800f886 <SpiFlashStore::Flash()+0x26>
 800f8ee:	2000      	movs	r0, #0
 800f8f0:	6020      	str	r0, [r4, #0]
 800f8f2:	b004      	add	sp, #16
 800f8f4:	bd10      	pop	{r4, pc}
 800f8f6:	bf00      	nop
 800f8f8:	20005354 	andcs	r5, r0, r4, asr r3
 800f8fc:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 800f900:	20004344 	andcs	r4, r0, r4, asr #6
 800f904:	20005348 	andcs	r5, r0, r8, asr #6
 800f908:	2000537c 	andcs	r5, r0, ip, ror r3
 800f90c:	20005350 	andcs	r5, r0, r0, asr r3
 800f910:	20004348 	andcs	r4, r0, r8, asr #6

0800f914 <StoreArtNet::~StoreArtNet()>:
 800f914:	4770      	bx	lr

0800f916 <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
 800f916:	3804      	subs	r0, #4
 800f918:	4770      	bx	lr
	...

0800f91c <StoreArtNet::Update(artnetparams::Params const*)>:
 800f91c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f91e:	2200      	movs	r2, #0
 800f920:	460b      	mov	r3, r1
 800f922:	2187      	movs	r1, #135	; 0x87
 800f924:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f928:	4804      	ldr	r0, [pc, #16]	; (800f93c <StoreArtNet::Update(artnetparams::Params const*)+0x20>)
 800f92a:	9100      	str	r1, [sp, #0]
 800f92c:	6800      	ldr	r0, [r0, #0]
 800f92e:	2101      	movs	r1, #1
 800f930:	f7ff ff22 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f934:	b005      	add	sp, #20
 800f936:	f85d fb04 	ldr.w	pc, [sp], #4
 800f93a:	bf00      	nop
 800f93c:	20005358 	andcs	r5, r0, r8, asr r3

0800f940 <StoreArtNet::SaveShortName(char const*)>:
 800f940:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f942:	460b      	mov	r3, r1
 800f944:	2202      	movs	r2, #2
 800f946:	2100      	movs	r1, #0
 800f948:	e9cd 2101 	strd	r2, r1, [sp, #4]
 800f94c:	2212      	movs	r2, #18
 800f94e:	4805      	ldr	r0, [pc, #20]	; (800f964 <StoreArtNet::SaveShortName(char const*)+0x24>)
 800f950:	9200      	str	r2, [sp, #0]
 800f952:	2101      	movs	r1, #1
 800f954:	220c      	movs	r2, #12
 800f956:	6800      	ldr	r0, [r0, #0]
 800f958:	f7ff ff0e 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f95c:	b005      	add	sp, #20
 800f95e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f962:	bf00      	nop
 800f964:	20005358 	andcs	r5, r0, r8, asr r3

0800f968 <non-virtual thunk to StoreArtNet::SaveShortName(char const*)>:
 800f968:	f1a0 0004 	sub.w	r0, r0, #4
 800f96c:	f7ff bfe8 	b.w	800f940 <StoreArtNet::SaveShortName(char const*)>

0800f970 <StoreArtNet::SaveLongName(char const*)>:
 800f970:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f972:	460b      	mov	r3, r1
 800f974:	2200      	movs	r2, #0
 800f976:	2101      	movs	r1, #1
 800f978:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f97c:	2240      	movs	r2, #64	; 0x40
 800f97e:	4804      	ldr	r0, [pc, #16]	; (800f990 <StoreArtNet::SaveLongName(char const*)+0x20>)
 800f980:	9200      	str	r2, [sp, #0]
 800f982:	6800      	ldr	r0, [r0, #0]
 800f984:	221e      	movs	r2, #30
 800f986:	f7ff fef7 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f98a:	b005      	add	sp, #20
 800f98c:	f85d fb04 	ldr.w	pc, [sp], #4
 800f990:	20005358 	andcs	r5, r0, r8, asr r3

0800f994 <non-virtual thunk to StoreArtNet::SaveLongName(char const*)>:
 800f994:	f1a0 0004 	sub.w	r0, r0, #4
 800f998:	f7ff bfea 	b.w	800f970 <StoreArtNet::SaveLongName(char const*)>

0800f99c <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
 800f99c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f99e:	2300      	movs	r3, #0
 800f9a0:	9302      	str	r3, [sp, #8]
 800f9a2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800f9a6:	4608      	mov	r0, r1
 800f9a8:	408b      	lsls	r3, r1
 800f9aa:	2101      	movs	r1, #1
 800f9ac:	f88d 2017 	strb.w	r2, [sp, #23]
 800f9b0:	f100 0267 	add.w	r2, r0, #103	; 0x67
 800f9b4:	4805      	ldr	r0, [pc, #20]	; (800f9cc <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x30>)
 800f9b6:	9301      	str	r3, [sp, #4]
 800f9b8:	9100      	str	r1, [sp, #0]
 800f9ba:	6800      	ldr	r0, [r0, #0]
 800f9bc:	f10d 0317 	add.w	r3, sp, #23
 800f9c0:	f7ff feda 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f9c4:	b007      	add	sp, #28
 800f9c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f9ca:	bf00      	nop
 800f9cc:	20005358 	andcs	r5, r0, r8, asr r3

0800f9d0 <non-virtual thunk to StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
 800f9d0:	f1a0 0004 	sub.w	r0, r0, #4
 800f9d4:	f7ff bfe2 	b.w	800f99c <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>

0800f9d8 <StoreArtNet::SaveNetSwitch(unsigned char)>:
 800f9d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f9da:	2204      	movs	r2, #4
 800f9dc:	2300      	movs	r3, #0
 800f9de:	f88d 1017 	strb.w	r1, [sp, #23]
 800f9e2:	2101      	movs	r1, #1
 800f9e4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f9e8:	4804      	ldr	r0, [pc, #16]	; (800f9fc <StoreArtNet::SaveNetSwitch(unsigned char)+0x24>)
 800f9ea:	9100      	str	r1, [sp, #0]
 800f9ec:	6800      	ldr	r0, [r0, #0]
 800f9ee:	f10d 0317 	add.w	r3, sp, #23
 800f9f2:	f7ff fec1 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f9f6:	b007      	add	sp, #28
 800f9f8:	f85d fb04 	ldr.w	pc, [sp], #4
 800f9fc:	20005358 	andcs	r5, r0, r8, asr r3

0800fa00 <non-virtual thunk to StoreArtNet::SaveNetSwitch(unsigned char)>:
 800fa00:	f1a0 0004 	sub.w	r0, r0, #4
 800fa04:	f7ff bfe8 	b.w	800f9d8 <StoreArtNet::SaveNetSwitch(unsigned char)>

0800fa08 <StoreArtNet::SaveSubnetSwitch(unsigned char)>:
 800fa08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fa0a:	2308      	movs	r3, #8
 800fa0c:	2200      	movs	r2, #0
 800fa0e:	f88d 1017 	strb.w	r1, [sp, #23]
 800fa12:	2101      	movs	r1, #1
 800fa14:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800fa18:	4805      	ldr	r0, [pc, #20]	; (800fa30 <StoreArtNet::SaveSubnetSwitch(unsigned char)+0x28>)
 800fa1a:	9100      	str	r1, [sp, #0]
 800fa1c:	2205      	movs	r2, #5
 800fa1e:	6800      	ldr	r0, [r0, #0]
 800fa20:	f10d 0317 	add.w	r3, sp, #23
 800fa24:	f7ff fea8 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fa28:	b007      	add	sp, #28
 800fa2a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fa2e:	bf00      	nop
 800fa30:	20005358 	andcs	r5, r0, r8, asr r3

0800fa34 <non-virtual thunk to StoreArtNet::SaveSubnetSwitch(unsigned char)>:
 800fa34:	f1a0 0004 	sub.w	r0, r0, #4
 800fa38:	f7ff bfe6 	b.w	800fa08 <StoreArtNet::SaveSubnetSwitch(unsigned char)>

0800fa3c <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
 800fa3c:	b530      	push	{r4, r5, lr}
 800fa3e:	b087      	sub	sp, #28
 800fa40:	460c      	mov	r4, r1
 800fa42:	4d0f      	ldr	r5, [pc, #60]	; (800fa80 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x44>)
 800fa44:	9205      	str	r2, [sp, #20]
 800fa46:	b951      	cbnz	r1, 800fa5e <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x22>
 800fa48:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800fa4c:	9102      	str	r1, [sp, #8]
 800fa4e:	2101      	movs	r1, #1
 800fa50:	226b      	movs	r2, #107	; 0x6b
 800fa52:	e9cd 1300 	strd	r1, r3, [sp]
 800fa56:	6828      	ldr	r0, [r5, #0]
 800fa58:	ab05      	add	r3, sp, #20
 800fa5a:	f7ff fe8d 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fa5e:	2300      	movs	r3, #0
 800fa60:	9302      	str	r3, [sp, #8]
 800fa62:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800fa66:	2101      	movs	r1, #1
 800fa68:	40a3      	lsls	r3, r4
 800fa6a:	9301      	str	r3, [sp, #4]
 800fa6c:	6828      	ldr	r0, [r5, #0]
 800fa6e:	9100      	str	r1, [sp, #0]
 800fa70:	ab05      	add	r3, sp, #20
 800fa72:	f104 026c 	add.w	r2, r4, #108	; 0x6c
 800fa76:	f7ff fe7f 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fa7a:	b007      	add	sp, #28
 800fa7c:	bd30      	pop	{r4, r5, pc}
 800fa7e:	bf00      	nop
 800fa80:	20005358 	andcs	r5, r0, r8, asr r3

0800fa84 <non-virtual thunk to StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
 800fa84:	f1a0 0004 	sub.w	r0, r0, #4
 800fa88:	f7ff bfd8 	b.w	800fa3c <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>

0800fa8c <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
 800fa8c:	b530      	push	{r4, r5, lr}
 800fa8e:	b087      	sub	sp, #28
 800fa90:	460c      	mov	r4, r1
 800fa92:	4d0f      	ldr	r5, [pc, #60]	; (800fad0 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x44>)
 800fa94:	9205      	str	r2, [sp, #20]
 800fa96:	b951      	cbnz	r1, 800faae <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x22>
 800fa98:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800fa9c:	9102      	str	r1, [sp, #8]
 800fa9e:	2101      	movs	r1, #1
 800faa0:	2270      	movs	r2, #112	; 0x70
 800faa2:	e9cd 1300 	strd	r1, r3, [sp]
 800faa6:	6828      	ldr	r0, [r5, #0]
 800faa8:	ab05      	add	r3, sp, #20
 800faaa:	f7ff fe65 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800faae:	2300      	movs	r3, #0
 800fab0:	9302      	str	r3, [sp, #8]
 800fab2:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800fab6:	2101      	movs	r1, #1
 800fab8:	40a3      	lsls	r3, r4
 800faba:	9301      	str	r3, [sp, #4]
 800fabc:	6828      	ldr	r0, [r5, #0]
 800fabe:	9100      	str	r1, [sp, #0]
 800fac0:	ab05      	add	r3, sp, #20
 800fac2:	f104 0271 	add.w	r2, r4, #113	; 0x71
 800fac6:	f7ff fe57 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800faca:	b007      	add	sp, #28
 800facc:	bd30      	pop	{r4, r5, pc}
 800face:	bf00      	nop
 800fad0:	20005358 	andcs	r5, r0, r8, asr r3

0800fad4 <non-virtual thunk to StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
 800fad4:	f1a0 0004 	sub.w	r0, r0, #4
 800fad8:	f7ff bfd8 	b.w	800fa8c <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>

0800fadc <StoreArtNet::~StoreArtNet()>:
 800fadc:	b510      	push	{r4, lr}
 800fade:	4604      	mov	r4, r0
 800fae0:	f003 ffa2 	bl	8013a28 <operator delete(void*)>
 800fae4:	4620      	mov	r0, r4
 800fae6:	bd10      	pop	{r4, pc}

0800fae8 <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
 800fae8:	f1a0 0004 	sub.w	r0, r0, #4
 800faec:	e7f6      	b.n	800fadc <StoreArtNet::~StoreArtNet()>
	...

0800faf0 <StoreArtNet::Copy(artnetparams::Params*)>:
 800faf0:	2300      	movs	r3, #0
 800faf2:	b507      	push	{r0, r1, r2, lr}
 800faf4:	4805      	ldr	r0, [pc, #20]	; (800fb0c <StoreArtNet::Copy(artnetparams::Params*)+0x1c>)
 800faf6:	9300      	str	r3, [sp, #0]
 800faf8:	460a      	mov	r2, r1
 800fafa:	2387      	movs	r3, #135	; 0x87
 800fafc:	2101      	movs	r1, #1
 800fafe:	6800      	ldr	r0, [r0, #0]
 800fb00:	f7ff fe7a 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fb04:	b003      	add	sp, #12
 800fb06:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb0a:	bf00      	nop
 800fb0c:	20005358 	andcs	r5, r0, r8, asr r3

0800fb10 <StoreArtNet::StoreArtNet()>:
 800fb10:	4a04      	ldr	r2, [pc, #16]	; (800fb24 <StoreArtNet::StoreArtNet()+0x14>)
 800fb12:	f102 0108 	add.w	r1, r2, #8
 800fb16:	323c      	adds	r2, #60	; 0x3c
 800fb18:	6042      	str	r2, [r0, #4]
 800fb1a:	4a03      	ldr	r2, [pc, #12]	; (800fb28 <StoreArtNet::StoreArtNet()+0x18>)
 800fb1c:	6001      	str	r1, [r0, #0]
 800fb1e:	6010      	str	r0, [r2, #0]
 800fb20:	4770      	bx	lr
 800fb22:	bf00      	nop
 800fb24:	08017ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, ip, sp, lr}
 800fb28:	20005360 	andcs	r5, r0, r0, ror #6

0800fb2c <StoreDisplayUdf::~StoreDisplayUdf()>:
 800fb2c:	4770      	bx	lr
	...

0800fb30 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800fb30:	2300      	movs	r3, #0
 800fb32:	b507      	push	{r0, r1, r2, lr}
 800fb34:	4805      	ldr	r0, [pc, #20]	; (800fb4c <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800fb36:	9300      	str	r3, [sp, #0]
 800fb38:	460a      	mov	r2, r1
 800fb3a:	2322      	movs	r3, #34	; 0x22
 800fb3c:	210f      	movs	r1, #15
 800fb3e:	6800      	ldr	r0, [r0, #0]
 800fb40:	f7ff fe5a 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fb44:	b003      	add	sp, #12
 800fb46:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb4a:	bf00      	nop
 800fb4c:	20005358 	andcs	r5, r0, r8, asr r3

0800fb50 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800fb50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fb52:	2200      	movs	r2, #0
 800fb54:	460b      	mov	r3, r1
 800fb56:	2122      	movs	r1, #34	; 0x22
 800fb58:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fb5c:	4804      	ldr	r0, [pc, #16]	; (800fb70 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800fb5e:	9100      	str	r1, [sp, #0]
 800fb60:	6800      	ldr	r0, [r0, #0]
 800fb62:	210f      	movs	r1, #15
 800fb64:	f7ff fe08 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fb68:	b005      	add	sp, #20
 800fb6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fb6e:	bf00      	nop
 800fb70:	20005358 	andcs	r5, r0, r8, asr r3

0800fb74 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800fb74:	b510      	push	{r4, lr}
 800fb76:	4604      	mov	r4, r0
 800fb78:	f003 ff56 	bl	8013a28 <operator delete(void*)>
 800fb7c:	4620      	mov	r0, r4
 800fb7e:	bd10      	pop	{r4, pc}

0800fb80 <StoreDisplayUdf::StoreDisplayUdf()>:
 800fb80:	4a02      	ldr	r2, [pc, #8]	; (800fb8c <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800fb82:	6002      	str	r2, [r0, #0]
 800fb84:	4a02      	ldr	r2, [pc, #8]	; (800fb90 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800fb86:	6010      	str	r0, [r2, #0]
 800fb88:	4770      	bx	lr
 800fb8a:	bf00      	nop
 800fb8c:	08017d0c 	stmdaeq	r1, {r2, r3, r8, sl, fp, ip, sp, lr}
 800fb90:	20005364 	andcs	r5, r0, r4, ror #6

0800fb94 <StoreDmxSend::~StoreDmxSend()>:
 800fb94:	4770      	bx	lr
	...

0800fb98 <StoreDmxSend::Copy(TDmxParams*)>:
 800fb98:	2300      	movs	r3, #0
 800fb9a:	b507      	push	{r0, r1, r2, lr}
 800fb9c:	4805      	ldr	r0, [pc, #20]	; (800fbb4 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800fb9e:	9300      	str	r3, [sp, #0]
 800fba0:	460a      	mov	r2, r1
 800fba2:	230a      	movs	r3, #10
 800fba4:	2102      	movs	r1, #2
 800fba6:	6800      	ldr	r0, [r0, #0]
 800fba8:	f7ff fe26 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fbac:	b003      	add	sp, #12
 800fbae:	f85d fb04 	ldr.w	pc, [sp], #4
 800fbb2:	bf00      	nop
 800fbb4:	20005358 	andcs	r5, r0, r8, asr r3

0800fbb8 <StoreDmxSend::Update(TDmxParams const*)>:
 800fbb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fbba:	2200      	movs	r2, #0
 800fbbc:	460b      	mov	r3, r1
 800fbbe:	210a      	movs	r1, #10
 800fbc0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fbc4:	4804      	ldr	r0, [pc, #16]	; (800fbd8 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800fbc6:	9100      	str	r1, [sp, #0]
 800fbc8:	6800      	ldr	r0, [r0, #0]
 800fbca:	2102      	movs	r1, #2
 800fbcc:	f7ff fdd4 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fbd0:	b005      	add	sp, #20
 800fbd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fbd6:	bf00      	nop
 800fbd8:	20005358 	andcs	r5, r0, r8, asr r3

0800fbdc <StoreDmxSend::~StoreDmxSend()>:
 800fbdc:	b510      	push	{r4, lr}
 800fbde:	4604      	mov	r4, r0
 800fbe0:	f003 ff22 	bl	8013a28 <operator delete(void*)>
 800fbe4:	4620      	mov	r0, r4
 800fbe6:	bd10      	pop	{r4, pc}

0800fbe8 <StoreDmxSend::StoreDmxSend()>:
 800fbe8:	4a02      	ldr	r2, [pc, #8]	; (800fbf4 <StoreDmxSend::StoreDmxSend()+0xc>)
 800fbea:	6002      	str	r2, [r0, #0]
 800fbec:	4a02      	ldr	r2, [pc, #8]	; (800fbf8 <StoreDmxSend::StoreDmxSend()+0x10>)
 800fbee:	6010      	str	r0, [r2, #0]
 800fbf0:	4770      	bx	lr
 800fbf2:	bf00      	nop
 800fbf4:	08017d24 	stmdaeq	r1, {r2, r5, r8, sl, fp, ip, sp, lr}
 800fbf8:	20005368 	andcs	r5, r0, r8, ror #6

0800fbfc <StoreNetwork::~StoreNetwork()>:
 800fbfc:	4770      	bx	lr

0800fbfe <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fbfe:	3804      	subs	r0, #4
 800fc00:	4770      	bx	lr
	...

0800fc04 <StoreNetwork::Update(TNetworkParams const*)>:
 800fc04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fc06:	2200      	movs	r2, #0
 800fc08:	460b      	mov	r3, r1
 800fc0a:	215e      	movs	r1, #94	; 0x5e
 800fc0c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fc10:	4804      	ldr	r0, [pc, #16]	; (800fc24 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800fc12:	9100      	str	r1, [sp, #0]
 800fc14:	6800      	ldr	r0, [r0, #0]
 800fc16:	4611      	mov	r1, r2
 800fc18:	f7ff fdae 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc1c:	b005      	add	sp, #20
 800fc1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc22:	bf00      	nop
 800fc24:	20005358 	andcs	r5, r0, r8, asr r3

0800fc28 <StoreNetwork::SaveDhcp(bool)>:
 800fc28:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fc2a:	2301      	movs	r3, #1
 800fc2c:	f88d 1017 	strb.w	r1, [sp, #23]
 800fc30:	2100      	movs	r1, #0
 800fc32:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fc36:	4805      	ldr	r0, [pc, #20]	; (800fc4c <StoreNetwork::SaveDhcp(bool)+0x24>)
 800fc38:	9300      	str	r3, [sp, #0]
 800fc3a:	2214      	movs	r2, #20
 800fc3c:	6800      	ldr	r0, [r0, #0]
 800fc3e:	f10d 0317 	add.w	r3, sp, #23
 800fc42:	f7ff fd99 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc46:	b007      	add	sp, #28
 800fc48:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc4c:	20005358 	andcs	r5, r0, r8, asr r3

0800fc50 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800fc50:	f1a0 0004 	sub.w	r0, r0, #4
 800fc54:	e7e8      	b.n	800fc28 <StoreNetwork::SaveDhcp(bool)>
 800fc56:	bf00      	nop

0800fc58 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800fc58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fc5a:	2308      	movs	r3, #8
 800fc5c:	9105      	str	r1, [sp, #20]
 800fc5e:	2100      	movs	r1, #0
 800fc60:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fc64:	2304      	movs	r3, #4
 800fc66:	4805      	ldr	r0, [pc, #20]	; (800fc7c <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800fc68:	9300      	str	r3, [sp, #0]
 800fc6a:	220c      	movs	r2, #12
 800fc6c:	6800      	ldr	r0, [r0, #0]
 800fc6e:	ab05      	add	r3, sp, #20
 800fc70:	f7ff fd82 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fc74:	b007      	add	sp, #28
 800fc76:	f85d fb04 	ldr.w	pc, [sp], #4
 800fc7a:	bf00      	nop
 800fc7c:	20005358 	andcs	r5, r0, r8, asr r3

0800fc80 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800fc80:	f1a0 0004 	sub.w	r0, r0, #4
 800fc84:	e7e8      	b.n	800fc58 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800fc86:	bf00      	nop

0800fc88 <StoreNetwork::SaveNetMask(unsigned int)>:
 800fc88:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fc8a:	2304      	movs	r3, #4
 800fc8c:	9105      	str	r1, [sp, #20]
 800fc8e:	2100      	movs	r1, #0
 800fc90:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fc94:	4804      	ldr	r0, [pc, #16]	; (800fca8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800fc96:	9300      	str	r3, [sp, #0]
 800fc98:	2208      	movs	r2, #8
 800fc9a:	6800      	ldr	r0, [r0, #0]
 800fc9c:	ab05      	add	r3, sp, #20
 800fc9e:	f7ff fd6b 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fca2:	b007      	add	sp, #28
 800fca4:	f85d fb04 	ldr.w	pc, [sp], #4
 800fca8:	20005358 	andcs	r5, r0, r8, asr r3

0800fcac <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800fcac:	f1a0 0004 	sub.w	r0, r0, #4
 800fcb0:	e7ea      	b.n	800fc88 <StoreNetwork::SaveNetMask(unsigned int)>
 800fcb2:	bf00      	nop

0800fcb4 <StoreNetwork::SaveIp(unsigned int)>:
 800fcb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fcb6:	2302      	movs	r3, #2
 800fcb8:	9105      	str	r1, [sp, #20]
 800fcba:	2100      	movs	r1, #0
 800fcbc:	2204      	movs	r2, #4
 800fcbe:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800fcc2:	4804      	ldr	r0, [pc, #16]	; (800fcd4 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800fcc4:	9200      	str	r2, [sp, #0]
 800fcc6:	6800      	ldr	r0, [r0, #0]
 800fcc8:	ab05      	add	r3, sp, #20
 800fcca:	f7ff fd55 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fcce:	b007      	add	sp, #28
 800fcd0:	f85d fb04 	ldr.w	pc, [sp], #4
 800fcd4:	20005358 	andcs	r5, r0, r8, asr r3

0800fcd8 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800fcd8:	f1a0 0004 	sub.w	r0, r0, #4
 800fcdc:	e7ea      	b.n	800fcb4 <StoreNetwork::SaveIp(unsigned int)>
 800fcde:	bf00      	nop

0800fce0 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fce0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fce2:	460b      	mov	r3, r1
 800fce4:	2020      	movs	r0, #32
 800fce6:	2100      	movs	r1, #0
 800fce8:	2a40      	cmp	r2, #64	; 0x40
 800fcea:	bf28      	it	cs
 800fcec:	2240      	movcs	r2, #64	; 0x40
 800fcee:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800fcf2:	4804      	ldr	r0, [pc, #16]	; (800fd04 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800fcf4:	9200      	str	r2, [sp, #0]
 800fcf6:	6800      	ldr	r0, [r0, #0]
 800fcf8:	2215      	movs	r2, #21
 800fcfa:	f7ff fd3d 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fcfe:	b005      	add	sp, #20
 800fd00:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd04:	20005358 	andcs	r5, r0, r8, asr r3

0800fd08 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800fd08:	f1a0 0004 	sub.w	r0, r0, #4
 800fd0c:	e7e8      	b.n	800fce0 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800fd0e:	bf00      	nop

0800fd10 <StoreNetwork::~StoreNetwork()>:
 800fd10:	b510      	push	{r4, lr}
 800fd12:	4604      	mov	r4, r0
 800fd14:	f003 fe88 	bl	8013a28 <operator delete(void*)>
 800fd18:	4620      	mov	r0, r4
 800fd1a:	bd10      	pop	{r4, pc}

0800fd1c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800fd1c:	f1a0 0004 	sub.w	r0, r0, #4
 800fd20:	e7f6      	b.n	800fd10 <StoreNetwork::~StoreNetwork()>
	...

0800fd24 <StoreNetwork::Copy(TNetworkParams*)>:
 800fd24:	b507      	push	{r0, r1, r2, lr}
 800fd26:	460a      	mov	r2, r1
 800fd28:	2100      	movs	r1, #0
 800fd2a:	4804      	ldr	r0, [pc, #16]	; (800fd3c <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800fd2c:	9100      	str	r1, [sp, #0]
 800fd2e:	235e      	movs	r3, #94	; 0x5e
 800fd30:	6800      	ldr	r0, [r0, #0]
 800fd32:	f7ff fd61 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fd36:	b003      	add	sp, #12
 800fd38:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd3c:	20005358 	andcs	r5, r0, r8, asr r3

0800fd40 <StoreNetwork::StoreNetwork()>:
 800fd40:	4a03      	ldr	r2, [pc, #12]	; (800fd50 <StoreNetwork::StoreNetwork()+0x10>)
 800fd42:	6002      	str	r2, [r0, #0]
 800fd44:	322c      	adds	r2, #44	; 0x2c
 800fd46:	6042      	str	r2, [r0, #4]
 800fd48:	4a02      	ldr	r2, [pc, #8]	; (800fd54 <StoreNetwork::StoreNetwork()+0x14>)
 800fd4a:	6010      	str	r0, [r2, #0]
 800fd4c:	4770      	bx	lr
 800fd4e:	bf00      	nop
 800fd50:	08017d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, ip, sp, lr}
 800fd54:	20005370 	andcs	r5, r0, r0, ror r3

0800fd58 <StoreRDMDevice::~StoreRDMDevice()>:
 800fd58:	4770      	bx	lr

0800fd5a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800fd5a:	3804      	subs	r0, #4
 800fd5c:	4770      	bx	lr
	...

0800fd60 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800fd60:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fd62:	2200      	movs	r2, #0
 800fd64:	460b      	mov	r3, r1
 800fd66:	2129      	movs	r1, #41	; 0x29
 800fd68:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fd6c:	4804      	ldr	r0, [pc, #16]	; (800fd80 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800fd6e:	9100      	str	r1, [sp, #0]
 800fd70:	6800      	ldr	r0, [r0, #0]
 800fd72:	210b      	movs	r1, #11
 800fd74:	f7ff fd00 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fd78:	b005      	add	sp, #20
 800fd7a:	f85d fb04 	ldr.w	pc, [sp], #4
 800fd7e:	bf00      	nop
 800fd80:	20005358 	andcs	r5, r0, r8, asr r3

0800fd84 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800fd84:	b570      	push	{r4, r5, r6, lr}
 800fd86:	2401      	movs	r4, #1
 800fd88:	2600      	movs	r6, #0
 800fd8a:	4d0c      	ldr	r5, [pc, #48]	; (800fdbc <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800fd8c:	b086      	sub	sp, #24
 800fd8e:	460b      	mov	r3, r1
 800fd90:	6828      	ldr	r0, [r5, #0]
 800fd92:	f88d 2017 	strb.w	r2, [sp, #23]
 800fd96:	9200      	str	r2, [sp, #0]
 800fd98:	210b      	movs	r1, #11
 800fd9a:	2204      	movs	r2, #4
 800fd9c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800fda0:	f7ff fcea 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fda4:	2224      	movs	r2, #36	; 0x24
 800fda6:	210b      	movs	r1, #11
 800fda8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800fdac:	6828      	ldr	r0, [r5, #0]
 800fdae:	9400      	str	r4, [sp, #0]
 800fdb0:	f10d 0317 	add.w	r3, sp, #23
 800fdb4:	f7ff fce0 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fdb8:	b006      	add	sp, #24
 800fdba:	bd70      	pop	{r4, r5, r6, pc}
 800fdbc:	20005358 	andcs	r5, r0, r8, asr r3

0800fdc0 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800fdc0:	f1a0 0004 	sub.w	r0, r0, #4
 800fdc4:	e7de      	b.n	800fd84 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800fdc6:	bf00      	nop

0800fdc8 <StoreRDMDevice::~StoreRDMDevice()>:
 800fdc8:	b510      	push	{r4, lr}
 800fdca:	4604      	mov	r4, r0
 800fdcc:	f003 fe2c 	bl	8013a28 <operator delete(void*)>
 800fdd0:	4620      	mov	r0, r4
 800fdd2:	bd10      	pop	{r4, pc}

0800fdd4 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800fdd4:	f1a0 0004 	sub.w	r0, r0, #4
 800fdd8:	e7f6      	b.n	800fdc8 <StoreRDMDevice::~StoreRDMDevice()>
	...

0800fddc <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800fddc:	2300      	movs	r3, #0
 800fdde:	b507      	push	{r0, r1, r2, lr}
 800fde0:	4805      	ldr	r0, [pc, #20]	; (800fdf8 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800fde2:	9300      	str	r3, [sp, #0]
 800fde4:	460a      	mov	r2, r1
 800fde6:	2329      	movs	r3, #41	; 0x29
 800fde8:	210b      	movs	r1, #11
 800fdea:	6800      	ldr	r0, [r0, #0]
 800fdec:	f7ff fd04 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fdf0:	b003      	add	sp, #12
 800fdf2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fdf6:	bf00      	nop
 800fdf8:	20005358 	andcs	r5, r0, r8, asr r3

0800fdfc <StoreRDMDevice::StoreRDMDevice()>:
 800fdfc:	4a03      	ldr	r2, [pc, #12]	; (800fe0c <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800fdfe:	6002      	str	r2, [r0, #0]
 800fe00:	321c      	adds	r2, #28
 800fe02:	6042      	str	r2, [r0, #4]
 800fe04:	4a02      	ldr	r2, [pc, #8]	; (800fe10 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800fe06:	6010      	str	r0, [r2, #0]
 800fe08:	4770      	bx	lr
 800fe0a:	bf00      	nop
 800fe0c:	08017d8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, ip, sp, lr}
 800fe10:	20005374 	andcs	r5, r0, r4, ror r3

0800fe14 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800fe14:	4770      	bx	lr
	...

0800fe18 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800fe18:	2300      	movs	r3, #0
 800fe1a:	b507      	push	{r0, r1, r2, lr}
 800fe1c:	4805      	ldr	r0, [pc, #20]	; (800fe34 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800fe1e:	9300      	str	r3, [sp, #0]
 800fe20:	460a      	mov	r2, r1
 800fe22:	2320      	movs	r3, #32
 800fe24:	210c      	movs	r1, #12
 800fe26:	6800      	ldr	r0, [r0, #0]
 800fe28:	f7ff fce6 	bl	800f7f8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800fe2c:	b003      	add	sp, #12
 800fe2e:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe32:	bf00      	nop
 800fe34:	20005358 	andcs	r5, r0, r8, asr r3

0800fe38 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800fe38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800fe3a:	2200      	movs	r2, #0
 800fe3c:	460b      	mov	r3, r1
 800fe3e:	2120      	movs	r1, #32
 800fe40:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800fe44:	4804      	ldr	r0, [pc, #16]	; (800fe58 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800fe46:	9100      	str	r1, [sp, #0]
 800fe48:	6800      	ldr	r0, [r0, #0]
 800fe4a:	210c      	movs	r1, #12
 800fe4c:	f7ff fc94 	bl	800f778 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800fe50:	b005      	add	sp, #20
 800fe52:	f85d fb04 	ldr.w	pc, [sp], #4
 800fe56:	bf00      	nop
 800fe58:	20005358 	andcs	r5, r0, r8, asr r3

0800fe5c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800fe5c:	b510      	push	{r4, lr}
 800fe5e:	4604      	mov	r4, r0
 800fe60:	f003 fde2 	bl	8013a28 <operator delete(void*)>
 800fe64:	4620      	mov	r0, r4
 800fe66:	bd10      	pop	{r4, pc}

0800fe68 <StoreRemoteConfig::StoreRemoteConfig()>:
 800fe68:	4a02      	ldr	r2, [pc, #8]	; (800fe74 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800fe6a:	6002      	str	r2, [r0, #0]
 800fe6c:	4a02      	ldr	r2, [pc, #8]	; (800fe78 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800fe6e:	6010      	str	r0, [r2, #0]
 800fe70:	4770      	bx	lr
 800fe72:	bf00      	nop
 800fe74:	08017dbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, fp, ip, sp, lr}
 800fe78:	20005378 	andcs	r5, r0, r8, ror r3

0800fe7c <FlashRom::FlashRom()>:
 800fe7c:	4b07      	ldr	r3, [pc, #28]	; (800fe9c <FlashRom::FlashRom()+0x20>)
 800fe7e:	b510      	push	{r4, lr}
 800fe80:	6018      	str	r0, [r3, #0]
 800fe82:	2301      	movs	r3, #1
 800fe84:	4604      	mov	r4, r0
 800fe86:	7003      	strb	r3, [r0, #0]
 800fe88:	4b05      	ldr	r3, [pc, #20]	; (800fea0 <FlashRom::FlashRom()+0x24>)
 800fe8a:	4906      	ldr	r1, [pc, #24]	; (800fea4 <FlashRom::FlashRom()+0x28>)
 800fe8c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800fe90:	4805      	ldr	r0, [pc, #20]	; (800fea8 <FlashRom::FlashRom()+0x2c>)
 800fe92:	029a      	lsls	r2, r3, #10
 800fe94:	f004 f9d2 	bl	801423c <printf>
 800fe98:	4620      	mov	r0, r4
 800fe9a:	bd10      	pop	{r4, pc}
 800fe9c:	2000537c 	andcs	r5, r0, ip, ror r3
 800fea0:	1ffff700 	svcne	0x00fff700
 800fea4:	08017dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip, sp, lr}
 800fea8:	08017dd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp, lr}

0800feac <FlashRom::GetSize() const>:
 800feac:	4b02      	ldr	r3, [pc, #8]	; (800feb8 <FlashRom::GetSize() const+0xc>)
 800feae:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800feb2:	0280      	lsls	r0, r0, #10
 800feb4:	4770      	bx	lr
 800feb6:	bf00      	nop
 800feb8:	1ffff700 	svcne	0x00fff700

0800febc <FlashRom::GetSectorSize() const>:
 800febc:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800fec0:	4770      	bx	lr

0800fec2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800fec2:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800fec6:	441a      	add	r2, r3
 800fec8:	4293      	cmp	r3, r2
 800feca:	d004      	beq.n	800fed6 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800fecc:	f851 0b04 	ldr.w	r0, [r1], #4
 800fed0:	f843 0b04 	str.w	r0, [r3], #4
 800fed4:	e7f8      	b.n	800fec8 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800fed6:	2200      	movs	r2, #0
 800fed8:	9b00      	ldr	r3, [sp, #0]
 800feda:	2001      	movs	r0, #1
 800fedc:	601a      	str	r2, [r3, #0]
 800fede:	4770      	bx	lr

0800fee0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800fee0:	2000      	movs	r0, #0
 800fee2:	b538      	push	{r3, r4, r5, lr}
 800fee4:	4c47      	ldr	r4, [pc, #284]	; (8010004 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800fee6:	6018      	str	r0, [r3, #0]
 800fee8:	6823      	ldr	r3, [r4, #0]
 800feea:	2b04      	cmp	r3, #4
 800feec:	f200 8082 	bhi.w	800fff4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800fef0:	e8df f003 	tbb	[pc, r3]
 800fef4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800fef8:	4b430080 	blmi	90d0100 <__exidx_end+0x10b79cc>
 800fefc:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ff00:	6019      	str	r1, [r3, #0]
 800ff02:	4b42      	ldr	r3, [pc, #264]	; (801000c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ff04:	601a      	str	r2, [r3, #0]
 800ff06:	4b42      	ldr	r3, [pc, #264]	; (8010010 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800ff08:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ff0c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ff10:	4b40      	ldr	r3, [pc, #256]	; (8010014 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ff12:	d807      	bhi.n	800ff24 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800ff14:	2201      	movs	r2, #1
 800ff16:	701a      	strb	r2, [r3, #0]
 800ff18:	f004 fc5c 	bl	80147d4 <fmc_bank0_unlock>
 800ff1c:	2301      	movs	r3, #1
 800ff1e:	6023      	str	r3, [r4, #0]
 800ff20:	2000      	movs	r0, #0
 800ff22:	e026      	b.n	800ff72 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ff24:	4a3c      	ldr	r2, [pc, #240]	; (8010018 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800ff26:	4291      	cmp	r1, r2
 800ff28:	d3f4      	bcc.n	800ff14 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800ff2a:	2200      	movs	r2, #0
 800ff2c:	701a      	strb	r2, [r3, #0]
 800ff2e:	f004 fc5f 	bl	80147f0 <fmc_bank1_unlock>
 800ff32:	e7f3      	b.n	800ff1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ff34:	4d37      	ldr	r5, [pc, #220]	; (8010014 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ff36:	782b      	ldrb	r3, [r5, #0]
 800ff38:	b15b      	cbz	r3, 800ff52 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800ff3a:	f004 fc77 	bl	801482c <fmc_bank0_state_get>
 800ff3e:	2801      	cmp	r0, #1
 800ff40:	d0ee      	beq.n	800ff20 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800ff42:	7829      	ldrb	r1, [r5, #0]
 800ff44:	4b35      	ldr	r3, [pc, #212]	; (801001c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ff46:	b939      	cbnz	r1, 800ff58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800ff48:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ff4a:	f022 0202 	bic.w	r2, r2, #2
 800ff4e:	651a      	str	r2, [r3, #80]	; 0x50
 800ff50:	e006      	b.n	800ff60 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800ff52:	f004 fc7f 	bl	8014854 <fmc_bank1_state_get>
 800ff56:	e7f2      	b.n	800ff3e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800ff58:	691a      	ldr	r2, [r3, #16]
 800ff5a:	f022 0202 	bic.w	r2, r2, #2
 800ff5e:	611a      	str	r2, [r3, #16]
 800ff60:	4b2a      	ldr	r3, [pc, #168]	; (801000c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ff62:	681b      	ldr	r3, [r3, #0]
 800ff64:	b94b      	cbnz	r3, 800ff7a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800ff66:	b129      	cbz	r1, 800ff74 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800ff68:	f004 fc50 	bl	801480c <fmc_bank0_lock>
 800ff6c:	2300      	movs	r3, #0
 800ff6e:	2001      	movs	r0, #1
 800ff70:	6023      	str	r3, [r4, #0]
 800ff72:	bd38      	pop	{r3, r4, r5, pc}
 800ff74:	f004 fc52 	bl	801481c <fmc_bank1_lock>
 800ff78:	e7f8      	b.n	800ff6c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800ff7a:	2302      	movs	r3, #2
 800ff7c:	e7cf      	b.n	800ff1e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800ff7e:	4923      	ldr	r1, [pc, #140]	; (801000c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ff80:	680b      	ldr	r3, [r1, #0]
 800ff82:	2b00      	cmp	r3, #0
 800ff84:	d0ca      	beq.n	800ff1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ff86:	4b23      	ldr	r3, [pc, #140]	; (8010014 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ff88:	4a1f      	ldr	r2, [pc, #124]	; (8010008 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800ff8a:	7818      	ldrb	r0, [r3, #0]
 800ff8c:	4b23      	ldr	r3, [pc, #140]	; (801001c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ff8e:	b190      	cbz	r0, 800ffb6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800ff90:	6918      	ldr	r0, [r3, #16]
 800ff92:	f040 0002 	orr.w	r0, r0, #2
 800ff96:	6118      	str	r0, [r3, #16]
 800ff98:	6810      	ldr	r0, [r2, #0]
 800ff9a:	6158      	str	r0, [r3, #20]
 800ff9c:	6918      	ldr	r0, [r3, #16]
 800ff9e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ffa2:	6118      	str	r0, [r3, #16]
 800ffa4:	680b      	ldr	r3, [r1, #0]
 800ffa6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ffaa:	600b      	str	r3, [r1, #0]
 800ffac:	6813      	ldr	r3, [r2, #0]
 800ffae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ffb2:	6013      	str	r3, [r2, #0]
 800ffb4:	e7b2      	b.n	800ff1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ffb6:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ffb8:	f040 0002 	orr.w	r0, r0, #2
 800ffbc:	6518      	str	r0, [r3, #80]	; 0x50
 800ffbe:	6810      	ldr	r0, [r2, #0]
 800ffc0:	6558      	str	r0, [r3, #84]	; 0x54
 800ffc2:	69dd      	ldr	r5, [r3, #28]
 800ffc4:	07ad      	lsls	r5, r5, #30
 800ffc6:	bf48      	it	mi
 800ffc8:	6158      	strmi	r0, [r3, #20]
 800ffca:	4814      	ldr	r0, [pc, #80]	; (801001c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ffcc:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ffce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ffd2:	6503      	str	r3, [r0, #80]	; 0x50
 800ffd4:	680b      	ldr	r3, [r1, #0]
 800ffd6:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ffda:	600b      	str	r3, [r1, #0]
 800ffdc:	6813      	ldr	r3, [r2, #0]
 800ffde:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ffe2:	e7e6      	b.n	800ffb2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ffe4:	4b0b      	ldr	r3, [pc, #44]	; (8010014 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ffe6:	781a      	ldrb	r2, [r3, #0]
 800ffe8:	4b0c      	ldr	r3, [pc, #48]	; (801001c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ffea:	b132      	cbz	r2, 800fffa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ffec:	691a      	ldr	r2, [r3, #16]
 800ffee:	f022 0201 	bic.w	r2, r2, #1
 800fff2:	611a      	str	r2, [r3, #16]
 800fff4:	2000      	movs	r0, #0
 800fff6:	6020      	str	r0, [r4, #0]
 800fff8:	e7bb      	b.n	800ff72 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800fffa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fffc:	f022 0201 	bic.w	r2, r2, #1
 8010000:	651a      	str	r2, [r3, #80]	; 0x50
 8010002:	e7f7      	b.n	800fff4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 8010004:	20005384 	andcs	r5, r0, r4, lsl #7
 8010008:	20005388 	andcs	r5, r0, r8, lsl #7
 801000c:	20005394 	mulcs	r0, r4, r3
 8010010:	1ffff700 	svcne	0x00fff700
 8010014:	20005390 	mulcs	r0, r0, r3
 8010018:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 801001c:	40022000 	andmi	r2, r2, r0

08010020 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 8010020:	b570      	push	{r4, r5, r6, lr}
 8010022:	2400      	movs	r4, #0
 8010024:	9804      	ldr	r0, [sp, #16]
 8010026:	6004      	str	r4, [r0, #0]
 8010028:	4c48      	ldr	r4, [pc, #288]	; (801014c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 801002a:	6820      	ldr	r0, [r4, #0]
 801002c:	2804      	cmp	r0, #4
 801002e:	d848      	bhi.n	80100c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 8010030:	e8df f000 	tbb	[pc, r0]
 8010034:	22847c03 	addcs	r7, r4, #768	; 0x300
 8010038:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 801003c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8010040:	6001      	str	r1, [r0, #0]
 8010042:	4844      	ldr	r0, [pc, #272]	; (8010154 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8010044:	6003      	str	r3, [r0, #0]
 8010046:	4b44      	ldr	r3, [pc, #272]	; (8010158 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8010048:	601a      	str	r2, [r3, #0]
 801004a:	4b44      	ldr	r3, [pc, #272]	; (801015c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 801004c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 8010050:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010054:	4b42      	ldr	r3, [pc, #264]	; (8010160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8010056:	d807      	bhi.n	8010068 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8010058:	2201      	movs	r2, #1
 801005a:	701a      	strb	r2, [r3, #0]
 801005c:	f004 fbba 	bl	80147d4 <fmc_bank0_unlock>
 8010060:	2303      	movs	r3, #3
 8010062:	6023      	str	r3, [r4, #0]
 8010064:	2000      	movs	r0, #0
 8010066:	e026      	b.n	80100b6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8010068:	4a3e      	ldr	r2, [pc, #248]	; (8010164 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 801006a:	4291      	cmp	r1, r2
 801006c:	d3f4      	bcc.n	8010058 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 801006e:	2200      	movs	r2, #0
 8010070:	701a      	strb	r2, [r3, #0]
 8010072:	f004 fbbd 	bl	80147f0 <fmc_bank1_unlock>
 8010076:	e7f3      	b.n	8010060 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010078:	4d39      	ldr	r5, [pc, #228]	; (8010160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 801007a:	782b      	ldrb	r3, [r5, #0]
 801007c:	b15b      	cbz	r3, 8010096 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 801007e:	f004 fbd5 	bl	801482c <fmc_bank0_state_get>
 8010082:	2801      	cmp	r0, #1
 8010084:	d0ee      	beq.n	8010064 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 8010086:	7829      	ldrb	r1, [r5, #0]
 8010088:	4b37      	ldr	r3, [pc, #220]	; (8010168 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 801008a:	b939      	cbnz	r1, 801009c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 801008c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801008e:	f022 0201 	bic.w	r2, r2, #1
 8010092:	651a      	str	r2, [r3, #80]	; 0x50
 8010094:	e006      	b.n	80100a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 8010096:	f004 fbdd 	bl	8014854 <fmc_bank1_state_get>
 801009a:	e7f2      	b.n	8010082 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 801009c:	691a      	ldr	r2, [r3, #16]
 801009e:	f022 0201 	bic.w	r2, r2, #1
 80100a2:	611a      	str	r2, [r3, #16]
 80100a4:	4b2c      	ldr	r3, [pc, #176]	; (8010158 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80100a6:	681b      	ldr	r3, [r3, #0]
 80100a8:	b94b      	cbnz	r3, 80100be <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 80100aa:	b129      	cbz	r1, 80100b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 80100ac:	f004 fbae 	bl	801480c <fmc_bank0_lock>
 80100b0:	2300      	movs	r3, #0
 80100b2:	2001      	movs	r0, #1
 80100b4:	6023      	str	r3, [r4, #0]
 80100b6:	bd70      	pop	{r4, r5, r6, pc}
 80100b8:	f004 fbb0 	bl	801481c <fmc_bank1_lock>
 80100bc:	e7f8      	b.n	80100b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 80100be:	2304      	movs	r3, #4
 80100c0:	e7cf      	b.n	8010062 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 80100c2:	4a25      	ldr	r2, [pc, #148]	; (8010158 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 80100c4:	6813      	ldr	r3, [r2, #0]
 80100c6:	2b03      	cmp	r3, #3
 80100c8:	d91a      	bls.n	8010100 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 80100ca:	4b25      	ldr	r3, [pc, #148]	; (8010160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80100cc:	7819      	ldrb	r1, [r3, #0]
 80100ce:	4b26      	ldr	r3, [pc, #152]	; (8010168 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80100d0:	b189      	cbz	r1, 80100f6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 80100d2:	6919      	ldr	r1, [r3, #16]
 80100d4:	f041 0101 	orr.w	r1, r1, #1
 80100d8:	6119      	str	r1, [r3, #16]
 80100da:	4d1e      	ldr	r5, [pc, #120]	; (8010154 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 80100dc:	481c      	ldr	r0, [pc, #112]	; (8010150 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 80100de:	6829      	ldr	r1, [r5, #0]
 80100e0:	6803      	ldr	r3, [r0, #0]
 80100e2:	f851 6b04 	ldr.w	r6, [r1], #4
 80100e6:	f843 6b04 	str.w	r6, [r3], #4
 80100ea:	6003      	str	r3, [r0, #0]
 80100ec:	6813      	ldr	r3, [r2, #0]
 80100ee:	6029      	str	r1, [r5, #0]
 80100f0:	3b04      	subs	r3, #4
 80100f2:	6013      	str	r3, [r2, #0]
 80100f4:	e7b4      	b.n	8010060 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80100f6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80100f8:	f041 0101 	orr.w	r1, r1, #1
 80100fc:	6519      	str	r1, [r3, #80]	; 0x50
 80100fe:	e7ec      	b.n	80100da <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 8010100:	2b00      	cmp	r3, #0
 8010102:	d0ad      	beq.n	8010060 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010104:	4b16      	ldr	r3, [pc, #88]	; (8010160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8010106:	781a      	ldrb	r2, [r3, #0]
 8010108:	4b17      	ldr	r3, [pc, #92]	; (8010168 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 801010a:	b152      	cbz	r2, 8010122 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 801010c:	691a      	ldr	r2, [r3, #16]
 801010e:	f042 0201 	orr.w	r2, r2, #1
 8010112:	611a      	str	r2, [r3, #16]
 8010114:	4a0f      	ldr	r2, [pc, #60]	; (8010154 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8010116:	4b0e      	ldr	r3, [pc, #56]	; (8010150 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 8010118:	6812      	ldr	r2, [r2, #0]
 801011a:	681b      	ldr	r3, [r3, #0]
 801011c:	6812      	ldr	r2, [r2, #0]
 801011e:	601a      	str	r2, [r3, #0]
 8010120:	e79e      	b.n	8010060 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8010122:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010124:	f042 0201 	orr.w	r2, r2, #1
 8010128:	651a      	str	r2, [r3, #80]	; 0x50
 801012a:	e7f3      	b.n	8010114 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 801012c:	4b0c      	ldr	r3, [pc, #48]	; (8010160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 801012e:	781a      	ldrb	r2, [r3, #0]
 8010130:	4b0d      	ldr	r3, [pc, #52]	; (8010168 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8010132:	b132      	cbz	r2, 8010142 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8010134:	691a      	ldr	r2, [r3, #16]
 8010136:	f022 0202 	bic.w	r2, r2, #2
 801013a:	611a      	str	r2, [r3, #16]
 801013c:	2000      	movs	r0, #0
 801013e:	6020      	str	r0, [r4, #0]
 8010140:	e7b9      	b.n	80100b6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8010142:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8010144:	f022 0202 	bic.w	r2, r2, #2
 8010148:	651a      	str	r2, [r3, #80]	; 0x50
 801014a:	e7f7      	b.n	801013c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 801014c:	20005384 	andcs	r5, r0, r4, lsl #7
 8010150:	20005380 	andcs	r5, r0, r0, lsl #7
 8010154:	2000538c 	andcs	r5, r0, ip, lsl #7
 8010158:	20005394 	mulcs	r0, r4, r3
 801015c:	1ffff700 	svcne	0x00fff700
 8010160:	20005390 	mulcs	r0, r0, r3
 8010164:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8010168:	40022000 	andmi	r2, r2, r0

0801016c <net_set_ip>:
 801016c:	b510      	push	{r4, lr}
 801016e:	4c05      	ldr	r4, [pc, #20]	; (8010184 <net_set_ip+0x18>)
 8010170:	6020      	str	r0, [r4, #0]
 8010172:	4621      	mov	r1, r4
 8010174:	4804      	ldr	r0, [pc, #16]	; (8010188 <net_set_ip+0x1c>)
 8010176:	f7f7 f8d5 	bl	8007324 <arp_init>
 801017a:	4620      	mov	r0, r4
 801017c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010180:	f002 b89a 	b.w	80122b8 <ip_set_ip>
 8010184:	20005398 	mulcs	r0, r8, r3
 8010188:	200053a4 	andcs	r5, r0, r4, lsr #7

0801018c <net_set_gw>:
 801018c:	4b02      	ldr	r3, [pc, #8]	; (8010198 <net_set_gw+0xc>)
 801018e:	6098      	str	r0, [r3, #8]
 8010190:	4618      	mov	r0, r3
 8010192:	f002 b891 	b.w	80122b8 <ip_set_ip>
 8010196:	bf00      	nop
 8010198:	20005398 	mulcs	r0, r8, r3

0801019c <net_set_dhcp>:
 801019c:	b570      	push	{r4, r5, r6, lr}
 801019e:	2400      	movs	r4, #0
 80101a0:	4605      	mov	r5, r0
 80101a2:	7014      	strb	r4, [r2, #0]
 80101a4:	4616      	mov	r6, r2
 80101a6:	4810      	ldr	r0, [pc, #64]	; (80101e8 <net_set_dhcp+0x4c>)
 80101a8:	460a      	mov	r2, r1
 80101aa:	4910      	ldr	r1, [pc, #64]	; (80101ec <net_set_dhcp+0x50>)
 80101ac:	f001 fe64 	bl	8011e78 <dhcp_client>
 80101b0:	42a0      	cmp	r0, r4
 80101b2:	da17      	bge.n	80101e4 <net_set_dhcp+0x48>
 80101b4:	480d      	ldr	r0, [pc, #52]	; (80101ec <net_set_dhcp+0x50>)
 80101b6:	f000 f837 	bl	8010228 <rfc3927>
 80101ba:	7030      	strb	r0, [r6, #0]
 80101bc:	490b      	ldr	r1, [pc, #44]	; (80101ec <net_set_dhcp+0x50>)
 80101be:	480a      	ldr	r0, [pc, #40]	; (80101e8 <net_set_dhcp+0x4c>)
 80101c0:	f7f7 f8b0 	bl	8007324 <arp_init>
 80101c4:	4809      	ldr	r0, [pc, #36]	; (80101ec <net_set_dhcp+0x50>)
 80101c6:	f002 f877 	bl	80122b8 <ip_set_ip>
 80101ca:	4a08      	ldr	r2, [pc, #32]	; (80101ec <net_set_dhcp+0x50>)
 80101cc:	1e6b      	subs	r3, r5, #1
 80101ce:	350b      	adds	r5, #11
 80101d0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80101d4:	f803 1f01 	strb.w	r1, [r3, #1]!
 80101d8:	42ab      	cmp	r3, r5
 80101da:	d1f9      	bne.n	80101d0 <net_set_dhcp+0x34>
 80101dc:	4b04      	ldr	r3, [pc, #16]	; (80101f0 <net_set_dhcp+0x54>)
 80101de:	4620      	mov	r0, r4
 80101e0:	701c      	strb	r4, [r3, #0]
 80101e2:	bd70      	pop	{r4, r5, r6, pc}
 80101e4:	2401      	movs	r4, #1
 80101e6:	e7e9      	b.n	80101bc <net_set_dhcp+0x20>
 80101e8:	200053a4 	andcs	r5, r0, r4, lsr #7
 80101ec:	20005398 	mulcs	r0, r8, r3
 80101f0:	200053aa 	andcs	r5, r0, sl, lsr #7

080101f4 <net_dhcp_release>:
 80101f4:	b508      	push	{r3, lr}
 80101f6:	f001 ff47 	bl	8012088 <dhcp_client_release>
 80101fa:	2200      	movs	r2, #0
 80101fc:	4b01      	ldr	r3, [pc, #4]	; (8010204 <net_dhcp_release+0x10>)
 80101fe:	701a      	strb	r2, [r3, #0]
 8010200:	bd08      	pop	{r3, pc}
 8010202:	bf00      	nop
 8010204:	200053aa 	andcs	r5, r0, sl, lsr #7

08010208 <net_timers_run>:
 8010208:	4b05      	ldr	r3, [pc, #20]	; (8010220 <net_timers_run+0x18>)
 801020a:	4a06      	ldr	r2, [pc, #24]	; (8010224 <net_timers_run+0x1c>)
 801020c:	681b      	ldr	r3, [r3, #0]
 801020e:	6811      	ldr	r1, [r2, #0]
 8010210:	4299      	cmp	r1, r3
 8010212:	d803      	bhi.n	801021c <net_timers_run+0x14>
 8010214:	3364      	adds	r3, #100	; 0x64
 8010216:	6013      	str	r3, [r2, #0]
 8010218:	f001 bfc4 	b.w	80121a4 <igmp_timer>
 801021c:	4770      	bx	lr
 801021e:	bf00      	nop
 8010220:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8010224:	200053b0 			; <UNDEFINED> instruction: 0x200053b0

08010228 <rfc3927>:
 8010228:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801022c:	4605      	mov	r5, r0
 801022e:	26ff      	movs	r6, #255	; 0xff
 8010230:	4b18      	ldr	r3, [pc, #96]	; (8010294 <rfc3927+0x6c>)
 8010232:	4f19      	ldr	r7, [pc, #100]	; (8010298 <rfc3927+0x70>)
 8010234:	791a      	ldrb	r2, [r3, #4]
 8010236:	78dc      	ldrb	r4, [r3, #3]
 8010238:	f8df 8060 	ldr.w	r8, [pc, #96]	; 801029c <rfc3927+0x74>
 801023c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 8010240:	f8d7 9000 	ldr.w	r9, [r7]
 8010244:	f8df b058 	ldr.w	fp, [pc, #88]	; 80102a0 <rfc3927+0x78>
 8010248:	f8df a058 	ldr.w	sl, [pc, #88]	; 80102a4 <rfc3927+0x7c>
 801024c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8010250:	4659      	mov	r1, fp
 8010252:	4620      	mov	r0, r4
 8010254:	f001 fcf4 	bl	8011c40 <arp_cache_lookup>
 8010258:	b938      	cbnz	r0, 801026a <rfc3927+0x42>
 801025a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801025e:	2001      	movs	r0, #1
 8010260:	602c      	str	r4, [r5, #0]
 8010262:	60ac      	str	r4, [r5, #8]
 8010264:	606b      	str	r3, [r5, #4]
 8010266:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801026a:	ba24      	rev	r4, r4
 801026c:	3401      	adds	r4, #1
 801026e:	3e01      	subs	r6, #1
 8010270:	ba24      	rev	r4, r4
 8010272:	b2b6      	uxth	r6, r6
 8010274:	4554      	cmp	r4, sl
 8010276:	bf08      	it	eq
 8010278:	4644      	moveq	r4, r8
 801027a:	b12e      	cbz	r6, 8010288 <rfc3927+0x60>
 801027c:	683b      	ldr	r3, [r7, #0]
 801027e:	eba3 0309 	sub.w	r3, r3, r9
 8010282:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010286:	d3e3      	bcc.n	8010250 <rfc3927+0x28>
 8010288:	2000      	movs	r0, #0
 801028a:	e9c5 0001 	strd	r0, r0, [r5, #4]
 801028e:	6028      	str	r0, [r5, #0]
 8010290:	e7e9      	b.n	8010266 <rfc3927+0x3e>
 8010292:	bf00      	nop
 8010294:	200053b4 			; <UNDEFINED> instruction: 0x200053b4
 8010298:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 801029c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 80102a0:	200053bc 			; <UNDEFINED> instruction: 0x200053bc
 80102a4:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

080102a8 <_init_tcb>:
 80102a8:	b510      	push	{r4, lr}
 80102aa:	4603      	mov	r3, r0
 80102ac:	2400      	movs	r4, #0
 80102ae:	f100 0244 	add.w	r2, r0, #68	; 0x44
 80102b2:	4293      	cmp	r3, r2
 80102b4:	d10d      	bne.n	80102d2 <_init_tcb+0x2a>
 80102b6:	4b08      	ldr	r3, [pc, #32]	; (80102d8 <_init_tcb+0x30>)
 80102b8:	f640 3268 	movw	r2, #2920	; 0xb68
 80102bc:	681b      	ldr	r3, [r3, #0]
 80102be:	8702      	strh	r2, [r0, #56]	; 0x38
 80102c0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80102c4:	6283      	str	r3, [r0, #40]	; 0x28
 80102c6:	6243      	str	r3, [r0, #36]	; 0x24
 80102c8:	2301      	movs	r3, #1
 80102ca:	8001      	strh	r1, [r0, #0]
 80102cc:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 80102d0:	bd10      	pop	{r4, pc}
 80102d2:	f803 4b01 	strb.w	r4, [r3], #1
 80102d6:	e7ec      	b.n	80102b2 <_init_tcb+0xa>
 80102d8:	2000d3ac 	andcs	sp, r0, ip, lsr #7

080102dc <memcpy.isra.0>:
 80102dc:	3801      	subs	r0, #1
 80102de:	440a      	add	r2, r1
 80102e0:	4291      	cmp	r1, r2
 80102e2:	d100      	bne.n	80102e6 <memcpy.isra.0+0xa>
 80102e4:	4770      	bx	lr
 80102e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80102ea:	f800 3f01 	strb.w	r3, [r0, #1]!
 80102ee:	e7f7      	b.n	80102e0 <memcpy.isra.0+0x4>

080102f0 <_bswap32>:
 80102f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80102f2:	2204      	movs	r2, #4
 80102f4:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 80102f8:	4629      	mov	r1, r5
 80102fa:	4604      	mov	r4, r0
 80102fc:	eb0d 0002 	add.w	r0, sp, r2
 8010300:	f7ff ffec 	bl	80102dc <memcpy.isra.0>
 8010304:	2204      	movs	r2, #4
 8010306:	9b01      	ldr	r3, [sp, #4]
 8010308:	eb0d 0102 	add.w	r1, sp, r2
 801030c:	ba1b      	rev	r3, r3
 801030e:	4628      	mov	r0, r5
 8010310:	9301      	str	r3, [sp, #4]
 8010312:	f7ff ffe3 	bl	80102dc <memcpy.isra.0>
 8010316:	2204      	movs	r2, #4
 8010318:	3426      	adds	r4, #38	; 0x26
 801031a:	eb0d 0002 	add.w	r0, sp, r2
 801031e:	4621      	mov	r1, r4
 8010320:	f7ff ffdc 	bl	80102dc <memcpy.isra.0>
 8010324:	2204      	movs	r2, #4
 8010326:	9b01      	ldr	r3, [sp, #4]
 8010328:	4620      	mov	r0, r4
 801032a:	ba1b      	rev	r3, r3
 801032c:	eb0d 0102 	add.w	r1, sp, r2
 8010330:	9301      	str	r3, [sp, #4]
 8010332:	f7ff ffd3 	bl	80102dc <memcpy.isra.0>
 8010336:	b003      	add	sp, #12
 8010338:	bd30      	pop	{r4, r5, pc}
	...

0801033c <_tcp_send_package>:
 801033c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010340:	7a0b      	ldrb	r3, [r1, #8]
 8010342:	4605      	mov	r5, r0
 8010344:	f013 0f02 	tst.w	r3, #2
 8010348:	bf0c      	ite	eq
 801034a:	f04f 0905 	moveq.w	r9, #5
 801034e:	f04f 0906 	movne.w	r9, #6
 8010352:	f04f 0800 	mov.w	r8, #0
 8010356:	4c4b      	ldr	r4, [pc, #300]	; (8010484 <_tcp_send_package+0x148>)
 8010358:	460f      	mov	r7, r1
 801035a:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 801035c:	f100 0108 	add.w	r1, r0, #8
 8010360:	2206      	movs	r2, #6
 8010362:	4620      	mov	r0, r4
 8010364:	f7ff ffba 	bl	80102dc <memcpy.isra.0>
 8010368:	4a47      	ldr	r2, [pc, #284]	; (8010488 <_tcp_send_package+0x14c>)
 801036a:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 801036e:	8813      	ldrh	r3, [r2, #0]
 8010370:	b2b6      	uxth	r6, r6
 8010372:	1c59      	adds	r1, r3, #1
 8010374:	8263      	strh	r3, [r4, #18]
 8010376:	f105 0a04 	add.w	sl, r5, #4
 801037a:	f106 0314 	add.w	r3, r6, #20
 801037e:	ba5b      	rev16	r3, r3
 8010380:	8011      	strh	r1, [r2, #0]
 8010382:	f104 001e 	add.w	r0, r4, #30
 8010386:	2204      	movs	r2, #4
 8010388:	4651      	mov	r1, sl
 801038a:	8223      	strh	r3, [r4, #16]
 801038c:	f7ff ffa6 	bl	80102dc <memcpy.isra.0>
 8010390:	2114      	movs	r1, #20
 8010392:	f104 000e 	add.w	r0, r4, #14
 8010396:	f884 8018 	strb.w	r8, [r4, #24]
 801039a:	f884 8019 	strb.w	r8, [r4, #25]
 801039e:	f001 ff94 	bl	80122ca <net_chksum>
 80103a2:	882b      	ldrh	r3, [r5, #0]
 80103a4:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80103a8:	8463      	strh	r3, [r4, #34]	; 0x22
 80103aa:	886b      	ldrh	r3, [r5, #2]
 80103ac:	8320      	strh	r0, [r4, #24]
 80103ae:	84a3      	strh	r3, [r4, #36]	; 0x24
 80103b0:	683b      	ldr	r3, [r7, #0]
 80103b2:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 80103b4:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 80103b8:	687b      	ldr	r3, [r7, #4]
 80103ba:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 80103be:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 80103c2:	7a3b      	ldrb	r3, [r7, #8]
 80103c4:	8622      	strh	r2, [r4, #48]	; 0x30
 80103c6:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 80103ca:	079b      	lsls	r3, r3, #30
 80103cc:	bf48      	it	mi
 80103ce:	2302      	movmi	r3, #2
 80103d0:	8baa      	ldrh	r2, [r5, #28]
 80103d2:	bf44      	itt	mi
 80103d4:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 80103d8:	2304      	movmi	r3, #4
 80103da:	86a2      	strh	r2, [r4, #52]	; 0x34
 80103dc:	bf41      	itttt	mi
 80103de:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 80103e2:	4622      	movmi	r2, r4
 80103e4:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 80103e8:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 80103ec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 80103ee:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 80103f2:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 80103f6:	bf58      	it	pl
 80103f8:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 80103fc:	2b00      	cmp	r3, #0
 80103fe:	d13f      	bne.n	8010480 <_tcp_send_package+0x144>
 8010400:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 8010402:	4820      	ldr	r0, [pc, #128]	; (8010484 <_tcp_send_package+0x148>)
 8010404:	ba5b      	rev16	r3, r3
 8010406:	8463      	strh	r3, [r4, #34]	; 0x22
 8010408:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 801040a:	ba5b      	rev16	r3, r3
 801040c:	84a3      	strh	r3, [r4, #36]	; 0x24
 801040e:	f7ff ff6f 	bl	80102f0 <_bswap32>
 8010412:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8010414:	a801      	add	r0, sp, #4
 8010416:	ba5b      	rev16	r3, r3
 8010418:	8623      	strh	r3, [r4, #48]	; 0x30
 801041a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801041c:	220c      	movs	r2, #12
 801041e:	ba5b      	rev16	r3, r3
 8010420:	491a      	ldr	r1, [pc, #104]	; (801048c <_tcp_send_package+0x150>)
 8010422:	86a3      	strh	r3, [r4, #52]	; 0x34
 8010424:	f7ff ff5a 	bl	80102dc <memcpy.isra.0>
 8010428:	2204      	movs	r2, #4
 801042a:	4919      	ldr	r1, [pc, #100]	; (8010490 <_tcp_send_package+0x154>)
 801042c:	4817      	ldr	r0, [pc, #92]	; (801048c <_tcp_send_package+0x150>)
 801042e:	f7ff ff55 	bl	80102dc <memcpy.isra.0>
 8010432:	2204      	movs	r2, #4
 8010434:	4651      	mov	r1, sl
 8010436:	4817      	ldr	r0, [pc, #92]	; (8010494 <_tcp_send_package+0x158>)
 8010438:	f7ff ff50 	bl	80102dc <memcpy.isra.0>
 801043c:	2300      	movs	r3, #0
 801043e:	77a3      	strb	r3, [r4, #30]
 8010440:	2306      	movs	r3, #6
 8010442:	f106 010c 	add.w	r1, r6, #12
 8010446:	77e3      	strb	r3, [r4, #31]
 8010448:	4810      	ldr	r0, [pc, #64]	; (801048c <_tcp_send_package+0x150>)
 801044a:	ba73      	rev16	r3, r6
 801044c:	8423      	strh	r3, [r4, #32]
 801044e:	f001 ff3c 	bl	80122ca <net_chksum>
 8010452:	a901      	add	r1, sp, #4
 8010454:	4605      	mov	r5, r0
 8010456:	220c      	movs	r2, #12
 8010458:	480c      	ldr	r0, [pc, #48]	; (801048c <_tcp_send_package+0x150>)
 801045a:	f7ff ff3f 	bl	80102dc <memcpy.isra.0>
 801045e:	4809      	ldr	r0, [pc, #36]	; (8010484 <_tcp_send_package+0x148>)
 8010460:	f106 0122 	add.w	r1, r6, #34	; 0x22
 8010464:	8665      	strh	r5, [r4, #50]	; 0x32
 8010466:	b004      	add	sp, #16
 8010468:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801046c:	f004 bf74 	b.w	8015358 <emac_eth_send>
 8010470:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8010472:	5cc9      	ldrb	r1, [r1, r3]
 8010474:	54d1      	strb	r1, [r2, r3]
 8010476:	3301      	adds	r3, #1
 8010478:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 801047a:	4299      	cmp	r1, r3
 801047c:	d8f8      	bhi.n	8010470 <_tcp_send_package+0x134>
 801047e:	e7bf      	b.n	8010400 <_tcp_send_package+0xc4>
 8010480:	2300      	movs	r3, #0
 8010482:	e7f9      	b.n	8010478 <_tcp_send_package+0x13c>
 8010484:	20005f78 	andcs	r5, r0, r8, ror pc
 8010488:	200053c2 	andcs	r5, r0, r2, asr #7
 801048c:	20005f8e 	andcs	r5, r0, lr, lsl #31
 8010490:	20005398 	mulcs	r0, r8, r3
 8010494:	20005f92 	mulcs	r0, r2, pc	; <UNPREDICTABLE>

08010498 <_send_reset>:
 8010498:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801049a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 801049e:	4604      	mov	r4, r0
 80104a0:	075a      	lsls	r2, r3, #29
 80104a2:	460e      	mov	r6, r1
 80104a4:	d421      	bmi.n	80104ea <_send_reset+0x52>
 80104a6:	2204      	movs	r2, #4
 80104a8:	f013 0310 	ands.w	r3, r3, #16
 80104ac:	f88d 200c 	strb.w	r2, [sp, #12]
 80104b0:	d01d      	beq.n	80104ee <_send_reset+0x56>
 80104b2:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 80104b6:	4668      	mov	r0, sp
 80104b8:	f7ff ff10 	bl	80102dc <memcpy.isra.0>
 80104bc:	9b00      	ldr	r3, [sp, #0]
 80104be:	9301      	str	r3, [sp, #4]
 80104c0:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80104c4:	4668      	mov	r0, sp
 80104c6:	f3c3 0540 	ubfx	r5, r3, #1, #1
 80104ca:	f104 0126 	add.w	r1, r4, #38	; 0x26
 80104ce:	07db      	lsls	r3, r3, #31
 80104d0:	f04f 0204 	mov.w	r2, #4
 80104d4:	bf48      	it	mi
 80104d6:	3501      	addmi	r5, #1
 80104d8:	f7ff ff00 	bl	80102dc <memcpy.isra.0>
 80104dc:	9b00      	ldr	r3, [sp, #0]
 80104de:	4630      	mov	r0, r6
 80104e0:	441d      	add	r5, r3
 80104e2:	a901      	add	r1, sp, #4
 80104e4:	9502      	str	r5, [sp, #8]
 80104e6:	f7ff ff29 	bl	801033c <_tcp_send_package>
 80104ea:	b004      	add	sp, #16
 80104ec:	bd70      	pop	{r4, r5, r6, pc}
 80104ee:	9301      	str	r3, [sp, #4]
 80104f0:	2314      	movs	r3, #20
 80104f2:	f88d 300c 	strb.w	r3, [sp, #12]
 80104f6:	e7e3      	b.n	80104c0 <_send_reset+0x28>

080104f8 <tcp_begin>:
 80104f8:	b508      	push	{r3, lr}
 80104fa:	4b0a      	ldr	r3, [pc, #40]	; (8010524 <tcp_begin+0x2c>)
 80104fc:	4601      	mov	r1, r0
 80104fe:	881a      	ldrh	r2, [r3, #0]
 8010500:	4282      	cmp	r2, r0
 8010502:	d102      	bne.n	801050a <tcp_begin+0x12>
 8010504:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 8010508:	b130      	cbz	r0, 8010518 <tcp_begin+0x20>
 801050a:	b12a      	cbz	r2, 8010518 <tcp_begin+0x20>
 801050c:	4806      	ldr	r0, [pc, #24]	; (8010528 <tcp_begin+0x30>)
 801050e:	f003 f917 	bl	8013740 <console_error>
 8010512:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010516:	bd08      	pop	{r3, pc}
 8010518:	4802      	ldr	r0, [pc, #8]	; (8010524 <tcp_begin+0x2c>)
 801051a:	8019      	strh	r1, [r3, #0]
 801051c:	f7ff fec4 	bl	80102a8 <_init_tcb>
 8010520:	2000      	movs	r0, #0
 8010522:	e7f8      	b.n	8010516 <tcp_begin+0x1e>
 8010524:	20005f34 	andcs	r5, r0, r4, lsr pc
 8010528:	08017dfe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}

0801052c <tcp_write>:
 801052c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8010530:	429a      	cmp	r2, r3
 8010532:	bf28      	it	cs
 8010534:	461a      	movcs	r2, r3
 8010536:	2344      	movs	r3, #68	; 0x44
 8010538:	b530      	push	{r4, r5, lr}
 801053a:	4c0d      	ldr	r4, [pc, #52]	; (8010570 <tcp_write+0x44>)
 801053c:	b085      	sub	sp, #20
 801053e:	fb03 4400 	mla	r4, r3, r0, r4
 8010542:	6963      	ldr	r3, [r4, #20]
 8010544:	4615      	mov	r5, r2
 8010546:	9301      	str	r3, [sp, #4]
 8010548:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801054a:	62e1      	str	r1, [r4, #44]	; 0x2c
 801054c:	9302      	str	r3, [sp, #8]
 801054e:	2318      	movs	r3, #24
 8010550:	8622      	strh	r2, [r4, #48]	; 0x30
 8010552:	4620      	mov	r0, r4
 8010554:	a901      	add	r1, sp, #4
 8010556:	f88d 300c 	strb.w	r3, [sp, #12]
 801055a:	f7ff feef 	bl	801033c <_tcp_send_package>
 801055e:	2300      	movs	r3, #0
 8010560:	6962      	ldr	r2, [r4, #20]
 8010562:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010564:	442a      	add	r2, r5
 8010566:	8623      	strh	r3, [r4, #48]	; 0x30
 8010568:	6162      	str	r2, [r4, #20]
 801056a:	b005      	add	sp, #20
 801056c:	bd30      	pop	{r4, r5, pc}
 801056e:	bf00      	nop
 8010570:	20005f34 	andcs	r5, r0, r4, lsr pc

08010574 <tcp_read>:
 8010574:	2344      	movs	r3, #68	; 0x44
 8010576:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010578:	4c1c      	ldr	r4, [pc, #112]	; (80105ec <tcp_read+0x78>)
 801057a:	b085      	sub	sp, #20
 801057c:	fb03 4400 	mla	r4, r3, r0, r4
 8010580:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8010584:	2b07      	cmp	r3, #7
 8010586:	d112      	bne.n	80105ae <tcp_read+0x3a>
 8010588:	6963      	ldr	r3, [r4, #20]
 801058a:	4620      	mov	r0, r4
 801058c:	9301      	str	r3, [sp, #4]
 801058e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8010590:	a901      	add	r1, sp, #4
 8010592:	9302      	str	r3, [sp, #8]
 8010594:	2311      	movs	r3, #17
 8010596:	f88d 300c 	strb.w	r3, [sp, #12]
 801059a:	f7ff fecf 	bl	801033c <_tcp_send_package>
 801059e:	2309      	movs	r3, #9
 80105a0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80105a4:	6963      	ldr	r3, [r4, #20]
 80105a6:	3301      	adds	r3, #1
 80105a8:	6163      	str	r3, [r4, #20]
 80105aa:	2000      	movs	r0, #0
 80105ac:	e01b      	b.n	80105e6 <tcp_read+0x72>
 80105ae:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 80105b2:	4358      	muls	r0, r3
 80105b4:	4a0e      	ldr	r2, [pc, #56]	; (80105f0 <tcp_read+0x7c>)
 80105b6:	1817      	adds	r7, r2, r0
 80105b8:	887b      	ldrh	r3, [r7, #2]
 80105ba:	5a15      	ldrh	r5, [r2, r0]
 80105bc:	429d      	cmp	r5, r3
 80105be:	d0f4      	beq.n	80105aa <tcp_read+0x36>
 80105c0:	f240 55b6 	movw	r5, #1462	; 0x5b6
 80105c4:	435d      	muls	r5, r3
 80105c6:	1d06      	adds	r6, r0, #4
 80105c8:	442e      	add	r6, r5
 80105ca:	4416      	add	r6, r2
 80105cc:	4428      	add	r0, r5
 80105ce:	600e      	str	r6, [r1, #0]
 80105d0:	4402      	add	r2, r0
 80105d2:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 80105d6:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80105d8:	3301      	adds	r3, #1
 80105da:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 80105de:	f003 0301 	and.w	r3, r3, #1
 80105e2:	8722      	strh	r2, [r4, #56]	; 0x38
 80105e4:	807b      	strh	r3, [r7, #2]
 80105e6:	b005      	add	sp, #20
 80105e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105ea:	bf00      	nop
 80105ec:	20005f34 	andcs	r5, r0, r4, lsr pc
 80105f0:	200053c4 	andcs	r5, r0, r4, asr #7

080105f4 <memcpy.isra.0>:
 80105f4:	3801      	subs	r0, #1
 80105f6:	440a      	add	r2, r1
 80105f8:	4291      	cmp	r1, r2
 80105fa:	d100      	bne.n	80105fe <memcpy.isra.0+0xa>
 80105fc:	4770      	bx	lr
 80105fe:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010602:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010606:	e7f7      	b.n	80105f8 <memcpy.isra.0+0x4>

08010608 <net_memcpy>:
 8010608:	ea41 0300 	orr.w	r3, r1, r0
 801060c:	079b      	lsls	r3, r3, #30
 801060e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010610:	d115      	bne.n	801063e <net_memcpy+0x36>
 8010612:	f022 0303 	bic.w	r3, r2, #3
 8010616:	1f04      	subs	r4, r0, #4
 8010618:	0895      	lsrs	r5, r2, #2
 801061a:	18ce      	adds	r6, r1, r3
 801061c:	42b1      	cmp	r1, r6
 801061e:	d109      	bne.n	8010634 <net_memcpy+0x2c>
 8010620:	f06f 0403 	mvn.w	r4, #3
 8010624:	fb04 2205 	mla	r2, r4, r5, r2
 8010628:	4403      	add	r3, r0
 801062a:	3b01      	subs	r3, #1
 801062c:	440a      	add	r2, r1
 801062e:	4291      	cmp	r1, r2
 8010630:	d107      	bne.n	8010642 <net_memcpy+0x3a>
 8010632:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010634:	f851 7b04 	ldr.w	r7, [r1], #4
 8010638:	f844 7f04 	str.w	r7, [r4, #4]!
 801063c:	e7ee      	b.n	801061c <net_memcpy+0x14>
 801063e:	4603      	mov	r3, r0
 8010640:	e7f3      	b.n	801062a <net_memcpy+0x22>
 8010642:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010646:	f803 4f01 	strb.w	r4, [r3, #1]!
 801064a:	e7f0      	b.n	801062e <net_memcpy+0x26>

0801064c <udp_set_ip>:
 801064c:	2204      	movs	r2, #4
 801064e:	b513      	push	{r0, r1, r4, lr}
 8010650:	4604      	mov	r4, r0
 8010652:	6803      	ldr	r3, [r0, #0]
 8010654:	eb0d 0102 	add.w	r1, sp, r2
 8010658:	4808      	ldr	r0, [pc, #32]	; (801067c <udp_set_ip+0x30>)
 801065a:	9301      	str	r3, [sp, #4]
 801065c:	f7ff ffca 	bl	80105f4 <memcpy.isra.0>
 8010660:	6862      	ldr	r2, [r4, #4]
 8010662:	4b07      	ldr	r3, [pc, #28]	; (8010680 <udp_set_ip+0x34>)
 8010664:	43d1      	mvns	r1, r2
 8010666:	6019      	str	r1, [r3, #0]
 8010668:	6823      	ldr	r3, [r4, #0]
 801066a:	4013      	ands	r3, r2
 801066c:	4a05      	ldr	r2, [pc, #20]	; (8010684 <udp_set_ip+0x38>)
 801066e:	6013      	str	r3, [r2, #0]
 8010670:	68a2      	ldr	r2, [r4, #8]
 8010672:	4b05      	ldr	r3, [pc, #20]	; (8010688 <udp_set_ip+0x3c>)
 8010674:	601a      	str	r2, [r3, #0]
 8010676:	b002      	add	sp, #8
 8010678:	bd10      	pop	{r4, pc}
 801067a:	bf00      	nop
 801067c:	2000c24e 	andcs	ip, r0, lr, asr #4
 8010680:	20006564 	andcs	r6, r0, r4, ror #10
 8010684:	2000656c 	andcs	r6, r0, ip, ror #10
 8010688:	20006568 	andcs	r6, r0, r8, ror #10

0801068c <udp_bind>:
 801068c:	4a0a      	ldr	r2, [pc, #40]	; (80106b8 <udp_bind+0x2c>)
 801068e:	4603      	mov	r3, r0
 8010690:	b510      	push	{r4, lr}
 8010692:	2000      	movs	r0, #0
 8010694:	4614      	mov	r4, r2
 8010696:	f852 1b04 	ldr.w	r1, [r2], #4
 801069a:	4299      	cmp	r1, r3
 801069c:	d008      	beq.n	80106b0 <udp_bind+0x24>
 801069e:	b141      	cbz	r1, 80106b2 <udp_bind+0x26>
 80106a0:	3001      	adds	r0, #1
 80106a2:	2808      	cmp	r0, #8
 80106a4:	d1f7      	bne.n	8010696 <udp_bind+0xa>
 80106a6:	4805      	ldr	r0, [pc, #20]	; (80106bc <udp_bind+0x30>)
 80106a8:	f003 f84a 	bl	8013740 <console_error>
 80106ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80106b0:	bd10      	pop	{r4, pc}
 80106b2:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 80106b6:	e7fb      	b.n	80106b0 <udp_bind+0x24>
 80106b8:	20006574 	andcs	r6, r0, r4, ror r5
 80106bc:	08017e1e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sl, fp, ip, sp, lr}

080106c0 <udp_unbind>:
 80106c0:	4a0c      	ldr	r2, [pc, #48]	; (80106f4 <udp_unbind+0x34>)
 80106c2:	2300      	movs	r3, #0
 80106c4:	4611      	mov	r1, r2
 80106c6:	b510      	push	{r4, lr}
 80106c8:	f852 4b04 	ldr.w	r4, [r2], #4
 80106cc:	4284      	cmp	r4, r0
 80106ce:	d108      	bne.n	80106e2 <udp_unbind+0x22>
 80106d0:	2000      	movs	r0, #0
 80106d2:	f640 3294 	movw	r2, #2964	; 0xb94
 80106d6:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80106da:	4353      	muls	r3, r2
 80106dc:	4a06      	ldr	r2, [pc, #24]	; (80106f8 <udp_unbind+0x38>)
 80106de:	5098      	str	r0, [r3, r2]
 80106e0:	bd10      	pop	{r4, pc}
 80106e2:	3301      	adds	r3, #1
 80106e4:	2b08      	cmp	r3, #8
 80106e6:	d1ef      	bne.n	80106c8 <udp_unbind+0x8>
 80106e8:	4804      	ldr	r0, [pc, #16]	; (80106fc <udp_unbind+0x3c>)
 80106ea:	f003 f829 	bl	8013740 <console_error>
 80106ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80106f2:	e7f5      	b.n	80106e0 <udp_unbind+0x20>
 80106f4:	20006574 	andcs	r6, r0, r4, ror r5
 80106f8:	20006594 	mulcs	r0, r4, r5
 80106fc:	08017e23 	stmdaeq	r1, {r0, r1, r5, r9, sl, fp, ip, sp, lr}

08010700 <udp_recv>:
 8010700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010704:	4604      	mov	r4, r0
 8010706:	4698      	mov	r8, r3
 8010708:	f640 3394 	movw	r3, #2964	; 0xb94
 801070c:	435c      	muls	r4, r3
 801070e:	4608      	mov	r0, r1
 8010710:	4915      	ldr	r1, [pc, #84]	; (8010768 <udp_recv+0x68>)
 8010712:	190f      	adds	r7, r1, r4
 8010714:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 8010718:	5b0b      	ldrh	r3, [r1, r4]
 801071a:	4563      	cmp	r3, ip
 801071c:	d021      	beq.n	8010762 <udp_recv+0x62>
 801071e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8010722:	fb03 fc0c 	mul.w	ip, r3, ip
 8010726:	eb0c 0604 	add.w	r6, ip, r4
 801072a:	440e      	add	r6, r1
 801072c:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 8010730:	3404      	adds	r4, #4
 8010732:	4295      	cmp	r5, r2
 8010734:	bf28      	it	cs
 8010736:	4615      	movcs	r5, r2
 8010738:	4464      	add	r4, ip
 801073a:	462a      	mov	r2, r5
 801073c:	4421      	add	r1, r4
 801073e:	f7ff ff63 	bl	8010608 <net_memcpy>
 8010742:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8010746:	f8c8 3000 	str.w	r3, [r8]
 801074a:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 801074e:	9b06      	ldr	r3, [sp, #24]
 8010750:	801a      	strh	r2, [r3, #0]
 8010752:	887b      	ldrh	r3, [r7, #2]
 8010754:	3301      	adds	r3, #1
 8010756:	f003 0301 	and.w	r3, r3, #1
 801075a:	807b      	strh	r3, [r7, #2]
 801075c:	4628      	mov	r0, r5
 801075e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010762:	2500      	movs	r5, #0
 8010764:	e7fa      	b.n	801075c <udp_recv+0x5c>
 8010766:	bf00      	nop
 8010768:	20006594 	mulcs	r0, r4, r5

0801076c <udp_recv2>:
 801076c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801076e:	f640 3594 	movw	r5, #2964	; 0xb94
 8010772:	4368      	muls	r0, r5
 8010774:	4c0f      	ldr	r4, [pc, #60]	; (80107b4 <udp_recv2+0x48>)
 8010776:	1827      	adds	r7, r4, r0
 8010778:	887d      	ldrh	r5, [r7, #2]
 801077a:	5a26      	ldrh	r6, [r4, r0]
 801077c:	42ae      	cmp	r6, r5
 801077e:	d017      	beq.n	80107b0 <udp_recv2+0x44>
 8010780:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8010784:	fb0c f505 	mul.w	r5, ip, r5
 8010788:	1d06      	adds	r6, r0, #4
 801078a:	442e      	add	r6, r5
 801078c:	4405      	add	r5, r0
 801078e:	4426      	add	r6, r4
 8010790:	442c      	add	r4, r5
 8010792:	600e      	str	r6, [r1, #0]
 8010794:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8010798:	6011      	str	r1, [r2, #0]
 801079a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 801079e:	801a      	strh	r2, [r3, #0]
 80107a0:	887b      	ldrh	r3, [r7, #2]
 80107a2:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 80107a6:	3301      	adds	r3, #1
 80107a8:	f003 0301 	and.w	r3, r3, #1
 80107ac:	807b      	strh	r3, [r7, #2]
 80107ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107b0:	2000      	movs	r0, #0
 80107b2:	e7fc      	b.n	80107ae <udp_recv2+0x42>
 80107b4:	20006594 	mulcs	r0, r4, r5

080107b8 <udp_send>:
 80107b8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80107bc:	f8df 9130 	ldr.w	r9, [pc, #304]	; 80108f0 <udp_send+0x138>
 80107c0:	461c      	mov	r4, r3
 80107c2:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 80107c6:	4607      	mov	r7, r0
 80107c8:	4688      	mov	r8, r1
 80107ca:	4616      	mov	r6, r2
 80107cc:	2b00      	cmp	r3, #0
 80107ce:	f000 808b 	beq.w	80108e8 <udp_send+0x130>
 80107d2:	1c63      	adds	r3, r4, #1
 80107d4:	d141      	bne.n	801085a <udp_send+0xa2>
 80107d6:	4a47      	ldr	r2, [pc, #284]	; (80108f4 <udp_send+0x13c>)
 80107d8:	2307      	movs	r3, #7
 80107da:	4611      	mov	r1, r2
 80107dc:	20ff      	movs	r0, #255	; 0xff
 80107de:	e001      	b.n	80107e4 <udp_send+0x2c>
 80107e0:	f802 0b01 	strb.w	r0, [r2], #1
 80107e4:	3b01      	subs	r3, #1
 80107e6:	d1fb      	bne.n	80107e0 <udp_send+0x28>
 80107e8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80107ec:	83cb      	strh	r3, [r1, #30]
 80107ee:	840b      	strh	r3, [r1, #32]
 80107f0:	2500      	movs	r5, #0
 80107f2:	f8df a104 	ldr.w	sl, [pc, #260]	; 80108f8 <udp_send+0x140>
 80107f6:	4c3f      	ldr	r4, [pc, #252]	; (80108f4 <udp_send+0x13c>)
 80107f8:	f8ba 3000 	ldrh.w	r3, [sl]
 80107fc:	2114      	movs	r1, #20
 80107fe:	8263      	strh	r3, [r4, #18]
 8010800:	f106 031c 	add.w	r3, r6, #28
 8010804:	ba5b      	rev16	r3, r3
 8010806:	f104 000e 	add.w	r0, r4, #14
 801080a:	8223      	strh	r3, [r4, #16]
 801080c:	8325      	strh	r5, [r4, #24]
 801080e:	f001 fd5c 	bl	80122ca <net_chksum>
 8010812:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 8010816:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 801081a:	ba5b      	rev16	r3, r3
 801081c:	8463      	strh	r3, [r4, #34]	; 0x22
 801081e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8010822:	4632      	mov	r2, r6
 8010824:	ba5b      	rev16	r3, r3
 8010826:	84a3      	strh	r3, [r4, #36]	; 0x24
 8010828:	f106 0308 	add.w	r3, r6, #8
 801082c:	ba5b      	rev16	r3, r3
 801082e:	bf28      	it	cs
 8010830:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8010834:	4641      	mov	r1, r8
 8010836:	8320      	strh	r0, [r4, #24]
 8010838:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801083c:	84e3      	strh	r3, [r4, #38]	; 0x26
 801083e:	f7ff fee3 	bl	8010608 <net_memcpy>
 8010842:	4620      	mov	r0, r4
 8010844:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 8010848:	f004 fd86 	bl	8015358 <emac_eth_send>
 801084c:	f8ba 3000 	ldrh.w	r3, [sl]
 8010850:	4628      	mov	r0, r5
 8010852:	3301      	adds	r3, #1
 8010854:	f8aa 3000 	strh.w	r3, [sl]
 8010858:	e037      	b.n	80108ca <udp_send+0x112>
 801085a:	4b28      	ldr	r3, [pc, #160]	; (80108fc <udp_send+0x144>)
 801085c:	681b      	ldr	r3, [r3, #0]
 801085e:	43a3      	bics	r3, r4
 8010860:	d10f      	bne.n	8010882 <udp_send+0xca>
 8010862:	2307      	movs	r3, #7
 8010864:	21ff      	movs	r1, #255	; 0xff
 8010866:	4a23      	ldr	r2, [pc, #140]	; (80108f4 <udp_send+0x13c>)
 8010868:	e001      	b.n	801086e <udp_send+0xb6>
 801086a:	f802 1b01 	strb.w	r1, [r2], #1
 801086e:	3b01      	subs	r3, #1
 8010870:	d1fb      	bne.n	801086a <udp_send+0xb2>
 8010872:	2204      	movs	r2, #4
 8010874:	4822      	ldr	r0, [pc, #136]	; (8010900 <udp_send+0x148>)
 8010876:	eb0d 0102 	add.w	r1, sp, r2
 801087a:	9401      	str	r4, [sp, #4]
 801087c:	f7ff feba 	bl	80105f4 <memcpy.isra.0>
 8010880:	e7b6      	b.n	80107f0 <udp_send+0x38>
 8010882:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8010886:	2be0      	cmp	r3, #224	; 0xe0
 8010888:	d10e      	bne.n	80108a8 <udp_send+0xf0>
 801088a:	491e      	ldr	r1, [pc, #120]	; (8010904 <udp_send+0x14c>)
 801088c:	f3c4 2306 	ubfx	r3, r4, #8, #7
 8010890:	70cb      	strb	r3, [r1, #3]
 8010892:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8010896:	710b      	strb	r3, [r1, #4]
 8010898:	f3c4 6307 	ubfx	r3, r4, #24, #8
 801089c:	2206      	movs	r2, #6
 801089e:	4815      	ldr	r0, [pc, #84]	; (80108f4 <udp_send+0x13c>)
 80108a0:	714b      	strb	r3, [r1, #5]
 80108a2:	f7ff fea7 	bl	80105f4 <memcpy.isra.0>
 80108a6:	e7e4      	b.n	8010872 <udp_send+0xba>
 80108a8:	4b17      	ldr	r3, [pc, #92]	; (8010908 <udp_send+0x150>)
 80108aa:	681b      	ldr	r3, [r3, #0]
 80108ac:	43a3      	bics	r3, r4
 80108ae:	d00f      	beq.n	80108d0 <udp_send+0x118>
 80108b0:	4d16      	ldr	r5, [pc, #88]	; (801090c <udp_send+0x154>)
 80108b2:	4910      	ldr	r1, [pc, #64]	; (80108f4 <udp_send+0x13c>)
 80108b4:	6828      	ldr	r0, [r5, #0]
 80108b6:	f001 f9c3 	bl	8011c40 <arp_cache_lookup>
 80108ba:	682b      	ldr	r3, [r5, #0]
 80108bc:	4298      	cmp	r0, r3
 80108be:	d0d8      	beq.n	8010872 <udp_send+0xba>
 80108c0:	4813      	ldr	r0, [pc, #76]	; (8010910 <udp_send+0x158>)
 80108c2:	f002 ff3d 	bl	8013740 <console_error>
 80108c6:	f06f 0002 	mvn.w	r0, #2
 80108ca:	b002      	add	sp, #8
 80108cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80108d0:	4620      	mov	r0, r4
 80108d2:	4908      	ldr	r1, [pc, #32]	; (80108f4 <udp_send+0x13c>)
 80108d4:	f001 f9b4 	bl	8011c40 <arp_cache_lookup>
 80108d8:	42a0      	cmp	r0, r4
 80108da:	d0ca      	beq.n	8010872 <udp_send+0xba>
 80108dc:	480d      	ldr	r0, [pc, #52]	; (8010914 <udp_send+0x15c>)
 80108de:	f002 ff2f 	bl	8013740 <console_error>
 80108e2:	f06f 0001 	mvn.w	r0, #1
 80108e6:	e7f0      	b.n	80108ca <udp_send+0x112>
 80108e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80108ec:	e7ed      	b.n	80108ca <udp_send+0x112>
 80108ee:	bf00      	nop
 80108f0:	20006574 	andcs	r6, r0, r4, ror r5
 80108f4:	2000c234 	andcs	ip, r0, r4, lsr r2
 80108f8:	20006570 	andcs	r6, r0, r0, ror r5
 80108fc:	20006564 	andcs	r6, r0, r4, ror #10
 8010900:	2000c252 	andcs	ip, r0, r2, asr r2
 8010904:	20000014 	andcs	r0, r0, r4, lsl r0
 8010908:	2000656c 	andcs	r6, r0, ip, ror #10
 801090c:	20006568 	andcs	r6, r0, r8, ror #10
 8010910:	08017e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, ip, sp, lr}
 8010914:	08017e51 	stmdaeq	r1, {r0, r4, r6, r9, sl, fp, ip, sp, lr}

08010918 <strlen>:
 8010918:	4603      	mov	r3, r0
 801091a:	461a      	mov	r2, r3
 801091c:	7811      	ldrb	r1, [r2, #0]
 801091e:	3301      	adds	r3, #1
 8010920:	2900      	cmp	r1, #0
 8010922:	d1fa      	bne.n	801091a <strlen+0x2>
 8010924:	1a10      	subs	r0, r2, r0
 8010926:	4770      	bx	lr

08010928 <strcmp>:
 8010928:	1e43      	subs	r3, r0, #1
 801092a:	3901      	subs	r1, #1
 801092c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010930:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010934:	4290      	cmp	r0, r2
 8010936:	d102      	bne.n	801093e <strcmp+0x16>
 8010938:	2800      	cmp	r0, #0
 801093a:	d1f7      	bne.n	801092c <strcmp+0x4>
 801093c:	4770      	bx	lr
 801093e:	1a80      	subs	r0, r0, r2
 8010940:	4770      	bx	lr

08010942 <strcpy.isra.0>:
 8010942:	3801      	subs	r0, #1
 8010944:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010948:	f800 3f01 	strb.w	r3, [r0, #1]!
 801094c:	2b00      	cmp	r3, #0
 801094e:	d1f9      	bne.n	8010944 <strcpy.isra.0+0x2>
 8010950:	4770      	bx	lr

08010952 <strcat.isra.0>:
 8010952:	b538      	push	{r3, r4, r5, lr}
 8010954:	4604      	mov	r4, r0
 8010956:	460d      	mov	r5, r1
 8010958:	f7ff ffde 	bl	8010918 <strlen>
 801095c:	4629      	mov	r1, r5
 801095e:	4420      	add	r0, r4
 8010960:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010964:	f7ff bfed 	b.w	8010942 <strcpy.isra.0>

08010968 <MDNS::MDNS()>:
 8010968:	b513      	push	{r0, r1, r4, lr}
 801096a:	4604      	mov	r4, r0
 801096c:	a901      	add	r1, sp, #4
 801096e:	4804      	ldr	r0, [pc, #16]	; (8010980 <MDNS::MDNS()+0x18>)
 8010970:	f003 f862 	bl	8013a38 <inet_aton>
 8010974:	4620      	mov	r0, r4
 8010976:	4b03      	ldr	r3, [pc, #12]	; (8010984 <MDNS::MDNS()+0x1c>)
 8010978:	9a01      	ldr	r2, [sp, #4]
 801097a:	601a      	str	r2, [r3, #0]
 801097c:	b002      	add	sp, #8
 801097e:	bd10      	pop	{r4, pc}
 8010980:	08017e71 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, fp, ip, sp, lr}
 8010984:	2000c828 	andcs	ip, r0, r8, lsr #16

08010988 <MDNS::SetName(char const*)>:
 8010988:	b538      	push	{r3, r4, r5, lr}
 801098a:	4d0b      	ldr	r5, [pc, #44]	; (80109b8 <MDNS::SetName(char const*)+0x30>)
 801098c:	460c      	mov	r4, r1
 801098e:	6828      	ldr	r0, [r5, #0]
 8010990:	b108      	cbz	r0, 8010996 <MDNS::SetName(char const*)+0xe>
 8010992:	f003 f84b 	bl	8013a2c <operator delete[](void*)>
 8010996:	4620      	mov	r0, r4
 8010998:	f7ff ffbe 	bl	8010918 <strlen>
 801099c:	3007      	adds	r0, #7
 801099e:	f003 f849 	bl	8013a34 <operator new[](unsigned int)>
 80109a2:	4621      	mov	r1, r4
 80109a4:	6028      	str	r0, [r5, #0]
 80109a6:	f7ff ffcc 	bl	8010942 <strcpy.isra.0>
 80109aa:	6828      	ldr	r0, [r5, #0]
 80109ac:	4903      	ldr	r1, [pc, #12]	; (80109bc <MDNS::SetName(char const*)+0x34>)
 80109ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80109b2:	f7ff bfce 	b.w	8010952 <strcat.isra.0>
 80109b6:	bf00      	nop
 80109b8:	2000cc58 	andcs	ip, r0, r8, asr ip
 80109bc:	08017e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip, sp, lr}

080109c0 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 80109c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80109c4:	f04f 0e00 	mov.w	lr, #0
 80109c8:	262e      	movs	r6, #46	; 0x2e
 80109ca:	4675      	mov	r5, lr
 80109cc:	4694      	mov	ip, r2
 80109ce:	4f1d      	ldr	r7, [pc, #116]	; (8010a44 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 80109d0:	4a1d      	ldr	r2, [pc, #116]	; (8010a48 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 80109d2:	780b      	ldrb	r3, [r1, #0]
 80109d4:	1c68      	adds	r0, r5, #1
 80109d6:	b383      	cbz	r3, 8010a3a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 80109d8:	2b3f      	cmp	r3, #63	; 0x3f
 80109da:	d91d      	bls.n	8010a18 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 80109dc:	f1be 0f00 	cmp.w	lr, #0
 80109e0:	bf08      	it	eq
 80109e2:	4605      	moveq	r5, r0
 80109e4:	2000      	movs	r0, #0
 80109e6:	7849      	ldrb	r1, [r1, #1]
 80109e8:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80109ec:	430b      	orrs	r3, r1
 80109ee:	6811      	ldr	r1, [r2, #0]
 80109f0:	5ccc      	ldrb	r4, [r1, r3]
 80109f2:	3301      	adds	r3, #1
 80109f4:	440b      	add	r3, r1
 80109f6:	42a0      	cmp	r0, r4
 80109f8:	5c19      	ldrb	r1, [r3, r0]
 80109fa:	d309      	bcc.n	8010a10 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 80109fc:	f04f 0e01 	mov.w	lr, #1
 8010a00:	1919      	adds	r1, r3, r4
 8010a02:	4464      	add	r4, ip
 8010a04:	780b      	ldrb	r3, [r1, #0]
 8010a06:	b10b      	cbz	r3, 8010a0c <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 8010a08:	f804 6b01 	strb.w	r6, [r4], #1
 8010a0c:	46a4      	mov	ip, r4
 8010a0e:	e7e0      	b.n	80109d2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 8010a10:	f80c 1000 	strb.w	r1, [ip, r0]
 8010a14:	3001      	adds	r0, #1
 8010a16:	e7ee      	b.n	80109f6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 8010a18:	4688      	mov	r8, r1
 8010a1a:	eb0c 0403 	add.w	r4, ip, r3
 8010a1e:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8010a22:	f80c 9b01 	strb.w	r9, [ip], #1
 8010a26:	4564      	cmp	r4, ip
 8010a28:	d1f9      	bne.n	8010a1e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 8010a2a:	f103 0c01 	add.w	ip, r3, #1
 8010a2e:	4461      	add	r1, ip
 8010a30:	f1be 0f00 	cmp.w	lr, #0
 8010a34:	d1e6      	bne.n	8010a04 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 8010a36:	18c5      	adds	r5, r0, r3
 8010a38:	e7e4      	b.n	8010a04 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 8010a3a:	f88c 3000 	strb.w	r3, [ip]
 8010a3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a42:	bf00      	nop
 8010a44:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8010a48:	2000cc5c 	andcs	ip, r0, ip, asr ip

08010a4c <MDNS::FindFirstDotFromRight(char const*) const>:
 8010a4c:	b510      	push	{r4, lr}
 8010a4e:	4608      	mov	r0, r1
 8010a50:	460c      	mov	r4, r1
 8010a52:	f7ff ff61 	bl	8010918 <strlen>
 8010a56:	4420      	add	r0, r4
 8010a58:	42a0      	cmp	r0, r4
 8010a5a:	d903      	bls.n	8010a64 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8010a5c:	f810 3901 	ldrb.w	r3, [r0], #-1
 8010a60:	2b2e      	cmp	r3, #46	; 0x2e
 8010a62:	d1f9      	bne.n	8010a58 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8010a64:	3001      	adds	r0, #1
 8010a66:	bd10      	pop	{r4, pc}

08010a68 <MDNS::WriteDnsName(char const*, char*, bool)>:
 8010a68:	4610      	mov	r0, r2
 8010a6a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010a6c:	460f      	mov	r7, r1
 8010a6e:	1c44      	adds	r4, r0, #1
 8010a70:	463d      	mov	r5, r7
 8010a72:	f817 6b01 	ldrb.w	r6, [r7], #1
 8010a76:	b126      	cbz	r6, 8010a82 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 8010a78:	2e2e      	cmp	r6, #46	; 0x2e
 8010a7a:	d002      	beq.n	8010a82 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 8010a7c:	f804 6b01 	strb.w	r6, [r4], #1
 8010a80:	e7f6      	b.n	8010a70 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8010a82:	1a69      	subs	r1, r5, r1
 8010a84:	7001      	strb	r1, [r0, #0]
 8010a86:	7829      	ldrb	r1, [r5, #0]
 8010a88:	b921      	cbnz	r1, 8010a94 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8010a8a:	b10b      	cbz	r3, 8010a90 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 8010a8c:	f804 1b01 	strb.w	r1, [r4], #1
 8010a90:	1aa0      	subs	r0, r4, r2
 8010a92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010a94:	4620      	mov	r0, r4
 8010a96:	1c69      	adds	r1, r5, #1
 8010a98:	e7e8      	b.n	8010a6c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08010a9c <MDNS::CreateAnswerLocalIpAddress()>:
 8010a9c:	2384      	movs	r3, #132	; 0x84
 8010a9e:	b510      	push	{r4, lr}
 8010aa0:	4c0f      	ldr	r4, [pc, #60]	; (8010ae0 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8010aa2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8010aa6:	80e3      	strh	r3, [r4, #6]
 8010aa8:	2300      	movs	r3, #0
 8010aaa:	490e      	ldr	r1, [pc, #56]	; (8010ae4 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8010aac:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8010ab0:	6809      	ldr	r1, [r1, #0]
 8010ab2:	f104 0210 	add.w	r2, r4, #16
 8010ab6:	2301      	movs	r3, #1
 8010ab8:	f7ff ffd6 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010abc:	490a      	ldr	r1, [pc, #40]	; (8010ae8 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8010abe:	1813      	adds	r3, r2, r0
 8010ac0:	5011      	str	r1, [r2, r0]
 8010ac2:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 8010ac6:	605a      	str	r2, [r3, #4]
 8010ac8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010acc:	811a      	strh	r2, [r3, #8]
 8010ace:	4a07      	ldr	r2, [pc, #28]	; (8010aec <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8010ad0:	6812      	ldr	r2, [r2, #0]
 8010ad2:	6912      	ldr	r2, [r2, #16]
 8010ad4:	f8c3 200a 	str.w	r2, [r3, #10]
 8010ad8:	1b1b      	subs	r3, r3, r4
 8010ada:	330a      	adds	r3, #10
 8010adc:	6023      	str	r3, [r4, #0]
 8010ade:	bd10      	pop	{r4, pc}
 8010ae0:	2000c82c 	andcs	ip, r0, ip, lsr #16
 8010ae4:	2000cc58 	andcs	ip, r0, r8, asr ip
 8010ae8:	01800100 	orreq	r0, r0, r0, lsl #2
 8010aec:	2000cc60 	andcs	ip, r0, r0, ror #24

08010af0 <MDNS::Start()>:
 8010af0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010af2:	4c1e      	ldr	r4, [pc, #120]	; (8010b6c <MDNS::Start()+0x7c>)
 8010af4:	f241 41e9 	movw	r1, #5353	; 0x14e9
 8010af8:	4605      	mov	r5, r0
 8010afa:	6820      	ldr	r0, [r4, #0]
 8010afc:	f000 fb2c 	bl	8011158 <Network::Begin(unsigned short)>
 8010b00:	4e1b      	ldr	r6, [pc, #108]	; (8010b70 <MDNS::Start()+0x80>)
 8010b02:	4f1c      	ldr	r7, [pc, #112]	; (8010b74 <MDNS::Start()+0x84>)
 8010b04:	4601      	mov	r1, r0
 8010b06:	6030      	str	r0, [r6, #0]
 8010b08:	683a      	ldr	r2, [r7, #0]
 8010b0a:	6820      	ldr	r0, [r4, #0]
 8010b0c:	f000 fb35 	bl	801117a <Network::JoinGroup(int, unsigned int)>
 8010b10:	4b19      	ldr	r3, [pc, #100]	; (8010b78 <MDNS::Start()+0x88>)
 8010b12:	681b      	ldr	r3, [r3, #0]
 8010b14:	b923      	cbnz	r3, 8010b20 <MDNS::Start()+0x30>
 8010b16:	6821      	ldr	r1, [r4, #0]
 8010b18:	4628      	mov	r0, r5
 8010b1a:	311c      	adds	r1, #28
 8010b1c:	f7ff ff34 	bl	8010988 <MDNS::SetName(char const*)>
 8010b20:	4628      	mov	r0, r5
 8010b22:	f7ff ffbb 	bl	8010a9c <MDNS::CreateAnswerLocalIpAddress()>
 8010b26:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010b2a:	4914      	ldr	r1, [pc, #80]	; (8010b7c <MDNS::Start()+0x8c>)
 8010b2c:	7830      	ldrb	r0, [r6, #0]
 8010b2e:	f851 2b04 	ldr.w	r2, [r1], #4
 8010b32:	9300      	str	r3, [sp, #0]
 8010b34:	b292      	uxth	r2, r2
 8010b36:	683b      	ldr	r3, [r7, #0]
 8010b38:	f7ff fe3e 	bl	80107b8 <udp_send>
 8010b3c:	223f      	movs	r2, #63	; 0x3f
 8010b3e:	6820      	ldr	r0, [r4, #0]
 8010b40:	4c0f      	ldr	r4, [pc, #60]	; (8010b80 <MDNS::Start()+0x90>)
 8010b42:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 8010b46:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8010b4a:	b929      	cbnz	r1, 8010b58 <MDNS::Start()+0x68>
 8010b4c:	441a      	add	r2, r3
 8010b4e:	4293      	cmp	r3, r2
 8010b50:	d006      	beq.n	8010b60 <MDNS::Start()+0x70>
 8010b52:	f803 1b01 	strb.w	r1, [r3], #1
 8010b56:	e7fa      	b.n	8010b4e <MDNS::Start()+0x5e>
 8010b58:	3a01      	subs	r2, #1
 8010b5a:	f803 1b01 	strb.w	r1, [r3], #1
 8010b5e:	d1f2      	bne.n	8010b46 <MDNS::Start()+0x56>
 8010b60:	2300      	movs	r3, #0
 8010b62:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 8010b66:	b003      	add	sp, #12
 8010b68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b6a:	bf00      	nop
 8010b6c:	2000cc60 	andcs	ip, r0, r0, ror #24
 8010b70:	2000001c 	andcs	r0, r0, ip, lsl r0
 8010b74:	2000c828 	andcs	ip, r0, r8, lsr #16
 8010b78:	2000cc58 	andcs	ip, r0, r8, asr ip
 8010b7c:	2000c82c 	andcs	ip, r0, ip, lsr #16
 8010b80:	08017e81 	stmdaeq	r1, {r0, r7, r9, sl, fp, ip, sp, lr}

08010b84 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8010b84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010b88:	4c1b      	ldr	r4, [pc, #108]	; (8010bf8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 8010b8a:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8010b8e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8010b92:	2300      	movs	r3, #0
 8010b94:	f854 100c 	ldr.w	r1, [r4, ip]
 8010b98:	4607      	mov	r7, r0
 8010b9a:	f7ff ff65 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010b9e:	2301      	movs	r3, #1
 8010ba0:	7bac      	ldrb	r4, [r5, #14]
 8010ba2:	4616      	mov	r6, r2
 8010ba4:	4915      	ldr	r1, [pc, #84]	; (8010bfc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8010ba6:	4402      	add	r2, r0
 8010ba8:	4815      	ldr	r0, [pc, #84]	; (8010c00 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 8010baa:	429c      	cmp	r4, r3
 8010bac:	bf18      	it	ne
 8010bae:	4601      	movne	r1, r0
 8010bb0:	4638      	mov	r0, r7
 8010bb2:	f7ff ff59 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010bb6:	4b13      	ldr	r3, [pc, #76]	; (8010c04 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8010bb8:	1814      	adds	r4, r2, r0
 8010bba:	5013      	str	r3, [r2, r0]
 8010bbc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010bc0:	6063      	str	r3, [r4, #4]
 8010bc2:	4b11      	ldr	r3, [pc, #68]	; (8010c08 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8010bc4:	f8d3 8000 	ldr.w	r8, [r3]
 8010bc8:	4640      	mov	r0, r8
 8010bca:	f7ff fea5 	bl	8010918 <strlen>
 8010bce:	f100 0308 	add.w	r3, r0, #8
 8010bd2:	ba5b      	rev16	r3, r3
 8010bd4:	8123      	strh	r3, [r4, #8]
 8010bd6:	2300      	movs	r3, #0
 8010bd8:	f8c4 300a 	str.w	r3, [r4, #10]
 8010bdc:	89ab      	ldrh	r3, [r5, #12]
 8010bde:	f104 0210 	add.w	r2, r4, #16
 8010be2:	ba5b      	rev16	r3, r3
 8010be4:	81e3      	strh	r3, [r4, #14]
 8010be6:	4641      	mov	r1, r8
 8010be8:	2301      	movs	r3, #1
 8010bea:	4638      	mov	r0, r7
 8010bec:	f7ff ff3c 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010bf0:	4410      	add	r0, r2
 8010bf2:	1b80      	subs	r0, r0, r6
 8010bf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bf8:	2000ca30 	andcs	ip, r0, r0, lsr sl
 8010bfc:	08017e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}
 8010c00:	08017e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, sp, lr}
 8010c04:	01802100 	orreq	r2, r0, r0, lsl #2
 8010c08:	2000cc58 	andcs	ip, r0, r8, asr ip

08010c0c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 8010c0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c10:	4e19      	ldr	r6, [pc, #100]	; (8010c78 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 8010c12:	010f      	lsls	r7, r1, #4
 8010c14:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 8010c18:	2300      	movs	r3, #0
 8010c1a:	59f1      	ldr	r1, [r6, r7]
 8010c1c:	4604      	mov	r4, r0
 8010c1e:	f7ff ff23 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c22:	2301      	movs	r3, #1
 8010c24:	7bae      	ldrb	r6, [r5, #14]
 8010c26:	4690      	mov	r8, r2
 8010c28:	4914      	ldr	r1, [pc, #80]	; (8010c7c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 8010c2a:	4402      	add	r2, r0
 8010c2c:	4814      	ldr	r0, [pc, #80]	; (8010c80 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 8010c2e:	429e      	cmp	r6, r3
 8010c30:	bf18      	it	ne
 8010c32:	4601      	movne	r1, r0
 8010c34:	4620      	mov	r0, r4
 8010c36:	f7ff ff17 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010c3a:	4b12      	ldr	r3, [pc, #72]	; (8010c84 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 8010c3c:	1816      	adds	r6, r2, r0
 8010c3e:	5013      	str	r3, [r2, r0]
 8010c40:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010c44:	68a8      	ldr	r0, [r5, #8]
 8010c46:	6073      	str	r3, [r6, #4]
 8010c48:	f106 040b 	add.w	r4, r6, #11
 8010c4c:	b938      	cbnz	r0, 8010c5e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8010c4e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010c52:	72b0      	strb	r0, [r6, #10]
 8010c54:	8133      	strh	r3, [r6, #8]
 8010c56:	eba4 0008 	sub.w	r0, r4, r8
 8010c5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010c5e:	f7ff fe5b 	bl	8010918 <strlen>
 8010c62:	4607      	mov	r7, r0
 8010c64:	1c43      	adds	r3, r0, #1
 8010c66:	72b0      	strb	r0, [r6, #10]
 8010c68:	ba5b      	rev16	r3, r3
 8010c6a:	4620      	mov	r0, r4
 8010c6c:	68a9      	ldr	r1, [r5, #8]
 8010c6e:	8133      	strh	r3, [r6, #8]
 8010c70:	f7ff fe67 	bl	8010942 <strcpy.isra.0>
 8010c74:	443c      	add	r4, r7
 8010c76:	e7ee      	b.n	8010c56 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8010c78:	2000ca30 	andcs	ip, r0, r0, lsr sl
 8010c7c:	08017e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}
 8010c80:	08017e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, sp, lr}
 8010c84:	01801000 	orreq	r1, r0, r0

08010c88 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8010c88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010c8c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8010cf0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 8010c90:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8010c94:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8010c98:	6869      	ldr	r1, [r5, #4]
 8010c9a:	2301      	movs	r3, #1
 8010c9c:	4607      	mov	r7, r0
 8010c9e:	f7ff fee3 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010ca2:	4b14      	ldr	r3, [pc, #80]	; (8010cf4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8010ca4:	f858 8009 	ldr.w	r8, [r8, r9]
 8010ca8:	5013      	str	r3, [r2, r0]
 8010caa:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010cae:	1816      	adds	r6, r2, r0
 8010cb0:	6073      	str	r3, [r6, #4]
 8010cb2:	4640      	mov	r0, r8
 8010cb4:	4614      	mov	r4, r2
 8010cb6:	f7ff fe2f 	bl	8010918 <strlen>
 8010cba:	f100 030d 	add.w	r3, r0, #13
 8010cbe:	ba5b      	rev16	r3, r3
 8010cc0:	4641      	mov	r1, r8
 8010cc2:	8133      	strh	r3, [r6, #8]
 8010cc4:	f106 020a 	add.w	r2, r6, #10
 8010cc8:	2300      	movs	r3, #0
 8010cca:	4638      	mov	r0, r7
 8010ccc:	f7ff fecc 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010cd0:	2301      	movs	r3, #1
 8010cd2:	4402      	add	r2, r0
 8010cd4:	7bad      	ldrb	r5, [r5, #14]
 8010cd6:	4808      	ldr	r0, [pc, #32]	; (8010cf8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8010cd8:	4908      	ldr	r1, [pc, #32]	; (8010cfc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 8010cda:	429d      	cmp	r5, r3
 8010cdc:	bf18      	it	ne
 8010cde:	4601      	movne	r1, r0
 8010ce0:	4638      	mov	r0, r7
 8010ce2:	f7ff fec1 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010ce6:	4410      	add	r0, r2
 8010ce8:	1b00      	subs	r0, r0, r4
 8010cea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010cee:	bf00      	nop
 8010cf0:	2000ca30 	andcs	ip, r0, r0, lsr sl
 8010cf4:	01000c00 	tsteq	r0, r0, lsl #24
 8010cf8:	08017e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, sp, lr}
 8010cfc:	08017e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}

08010d00 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8010d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d02:	460f      	mov	r7, r1
 8010d04:	2301      	movs	r3, #1
 8010d06:	490f      	ldr	r1, [pc, #60]	; (8010d44 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 8010d08:	4606      	mov	r6, r0
 8010d0a:	f7ff fead 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d0e:	4b0e      	ldr	r3, [pc, #56]	; (8010d48 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 8010d10:	490e      	ldr	r1, [pc, #56]	; (8010d4c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 8010d12:	5013      	str	r3, [r2, r0]
 8010d14:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010d18:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 8010d1c:	684f      	ldr	r7, [r1, #4]
 8010d1e:	1815      	adds	r5, r2, r0
 8010d20:	606b      	str	r3, [r5, #4]
 8010d22:	4638      	mov	r0, r7
 8010d24:	4614      	mov	r4, r2
 8010d26:	f7ff fdf7 	bl	8010918 <strlen>
 8010d2a:	1c83      	adds	r3, r0, #2
 8010d2c:	ba5b      	rev16	r3, r3
 8010d2e:	812b      	strh	r3, [r5, #8]
 8010d30:	f105 020a 	add.w	r2, r5, #10
 8010d34:	2301      	movs	r3, #1
 8010d36:	4639      	mov	r1, r7
 8010d38:	4630      	mov	r0, r6
 8010d3a:	f7ff fe95 	bl	8010a68 <MDNS::WriteDnsName(char const*, char*, bool)>
 8010d3e:	4410      	add	r0, r2
 8010d40:	1b00      	subs	r0, r0, r4
 8010d42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010d44:	08017e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, ip, sp, lr}
 8010d48:	01000c00 	tsteq	r0, r0, lsl #24
 8010d4c:	2000ca30 	andcs	ip, r0, r0, lsr sl

08010d50 <MDNS::CreateMDNSMessage(unsigned int)>:
 8010d50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010d52:	2384      	movs	r3, #132	; 0x84
 8010d54:	4d19      	ldr	r5, [pc, #100]	; (8010dbc <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 8010d56:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8010d5a:	80eb      	strh	r3, [r5, #6]
 8010d5c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010d60:	f105 0410 	add.w	r4, r5, #16
 8010d64:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8010d68:	4622      	mov	r2, r4
 8010d6a:	4606      	mov	r6, r0
 8010d6c:	460f      	mov	r7, r1
 8010d6e:	f7ff ff09 	bl	8010b84 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8010d72:	4404      	add	r4, r0
 8010d74:	4622      	mov	r2, r4
 8010d76:	4639      	mov	r1, r7
 8010d78:	4630      	mov	r0, r6
 8010d7a:	f7ff ff47 	bl	8010c0c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8010d7e:	4404      	add	r4, r0
 8010d80:	4622      	mov	r2, r4
 8010d82:	4639      	mov	r1, r7
 8010d84:	4630      	mov	r0, r6
 8010d86:	f7ff ffbb 	bl	8010d00 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 8010d8a:	4404      	add	r4, r0
 8010d8c:	4622      	mov	r2, r4
 8010d8e:	4639      	mov	r1, r7
 8010d90:	4630      	mov	r0, r6
 8010d92:	f7ff ff79 	bl	8010c88 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8010d96:	4b0a      	ldr	r3, [pc, #40]	; (8010dc0 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8010d98:	4404      	add	r4, r0
 8010d9a:	f853 2b10 	ldr.w	r2, [r3], #16
 8010d9e:	1e60      	subs	r0, r4, #1
 8010da0:	3a0c      	subs	r2, #12
 8010da2:	4611      	mov	r1, r2
 8010da4:	3901      	subs	r1, #1
 8010da6:	d304      	bcc.n	8010db2 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8010da8:	f813 6b01 	ldrb.w	r6, [r3], #1
 8010dac:	f800 6f01 	strb.w	r6, [r0, #1]!
 8010db0:	e7f8      	b.n	8010da4 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8010db2:	4414      	add	r4, r2
 8010db4:	4a03      	ldr	r2, [pc, #12]	; (8010dc4 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 8010db6:	1aa4      	subs	r4, r4, r2
 8010db8:	602c      	str	r4, [r5, #0]
 8010dba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010dbc:	2000ca54 	andcs	ip, r0, r4, asr sl
 8010dc0:	2000c82c 	andcs	ip, r0, ip, lsr #16
 8010dc4:	2000ca58 	andcs	ip, r0, r8, asr sl

08010dc8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8010dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dcc:	4d40      	ldr	r5, [pc, #256]	; (8010ed0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 8010dce:	b085      	sub	sp, #20
 8010dd0:	682c      	ldr	r4, [r5, #0]
 8010dd2:	4680      	mov	r8, r0
 8010dd4:	460f      	mov	r7, r1
 8010dd6:	4616      	mov	r6, r2
 8010dd8:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 8010ddc:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 8010de0:	b11c      	cbz	r4, 8010dea <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 8010de2:	692a      	ldr	r2, [r5, #16]
 8010de4:	2a00      	cmp	r2, #0
 8010de6:	d16f      	bne.n	8010ec8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 8010de8:	2401      	movs	r4, #1
 8010dea:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 8010dee:	ea4f 1904 	mov.w	r9, r4, lsl #4
 8010df2:	8193      	strh	r3, [r2, #12]
 8010df4:	f882 b00e 	strb.w	fp, [r2, #14]
 8010df8:	2f00      	cmp	r7, #0
 8010dfa:	d155      	bne.n	8010ea8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe0>
 8010dfc:	4b35      	ldr	r3, [pc, #212]	; (8010ed4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8010dfe:	6818      	ldr	r0, [r3, #0]
 8010e00:	301c      	adds	r0, #28
 8010e02:	f7ff fd89 	bl	8010918 <strlen>
 8010e06:	4607      	mov	r7, r0
 8010e08:	4630      	mov	r0, r6
 8010e0a:	f7ff fd85 	bl	8010918 <strlen>
 8010e0e:	4438      	add	r0, r7
 8010e10:	3001      	adds	r0, #1
 8010e12:	f002 fe0f 	bl	8013a34 <operator new[](unsigned int)>
 8010e16:	4b2f      	ldr	r3, [pc, #188]	; (8010ed4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8010e18:	f845 0009 	str.w	r0, [r5, r9]
 8010e1c:	6819      	ldr	r1, [r3, #0]
 8010e1e:	311c      	adds	r1, #28
 8010e20:	f7ff fd8f 	bl	8010942 <strcpy.isra.0>
 8010e24:	f855 0009 	ldr.w	r0, [r5, r9]
 8010e28:	4631      	mov	r1, r6
 8010e2a:	f7ff fd92 	bl	8010952 <strcat.isra.0>
 8010e2e:	4631      	mov	r1, r6
 8010e30:	4640      	mov	r0, r8
 8010e32:	f7ff fe0b 	bl	8010a4c <MDNS::FindFirstDotFromRight(char const*) const>
 8010e36:	eb05 0709 	add.w	r7, r5, r9
 8010e3a:	4605      	mov	r5, r0
 8010e3c:	f7ff fd6c 	bl	8010918 <strlen>
 8010e40:	300d      	adds	r0, #13
 8010e42:	f002 fdf7 	bl	8013a34 <operator new[](unsigned int)>
 8010e46:	4629      	mov	r1, r5
 8010e48:	6078      	str	r0, [r7, #4]
 8010e4a:	f7ff fd7a 	bl	8010942 <strcpy.isra.0>
 8010e4e:	4922      	ldr	r1, [pc, #136]	; (8010ed8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8010e50:	6878      	ldr	r0, [r7, #4]
 8010e52:	f7ff fd7e 	bl	8010952 <strcat.isra.0>
 8010e56:	4921      	ldr	r1, [pc, #132]	; (8010edc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8010e58:	4b21      	ldr	r3, [pc, #132]	; (8010ee0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 8010e5a:	6878      	ldr	r0, [r7, #4]
 8010e5c:	f1bb 0f01 	cmp.w	fp, #1
 8010e60:	bf18      	it	ne
 8010e62:	4619      	movne	r1, r3
 8010e64:	f7ff fd75 	bl	8010952 <strcat.isra.0>
 8010e68:	f1ba 0f00 	cmp.w	sl, #0
 8010e6c:	d009      	beq.n	8010e82 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 8010e6e:	4650      	mov	r0, sl
 8010e70:	f7ff fd52 	bl	8010918 <strlen>
 8010e74:	3001      	adds	r0, #1
 8010e76:	f002 fddd 	bl	8013a34 <operator new[](unsigned int)>
 8010e7a:	4651      	mov	r1, sl
 8010e7c:	60b8      	str	r0, [r7, #8]
 8010e7e:	f7ff fd60 	bl	8010942 <strcpy.isra.0>
 8010e82:	4621      	mov	r1, r4
 8010e84:	4640      	mov	r0, r8
 8010e86:	f7ff ff63 	bl	8010d50 <MDNS::CreateMDNSMessage(unsigned int)>
 8010e8a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010e8e:	4915      	ldr	r1, [pc, #84]	; (8010ee4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8010e90:	4815      	ldr	r0, [pc, #84]	; (8010ee8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 8010e92:	f851 2b04 	ldr.w	r2, [r1], #4
 8010e96:	9300      	str	r3, [sp, #0]
 8010e98:	4b14      	ldr	r3, [pc, #80]	; (8010eec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 8010e9a:	7800      	ldrb	r0, [r0, #0]
 8010e9c:	681b      	ldr	r3, [r3, #0]
 8010e9e:	b292      	uxth	r2, r2
 8010ea0:	f7ff fc8a 	bl	80107b8 <udp_send>
 8010ea4:	2001      	movs	r0, #1
 8010ea6:	e010      	b.n	8010eca <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x102>
 8010ea8:	4638      	mov	r0, r7
 8010eaa:	f7ff fd35 	bl	8010918 <strlen>
 8010eae:	9003      	str	r0, [sp, #12]
 8010eb0:	4630      	mov	r0, r6
 8010eb2:	f7ff fd31 	bl	8010918 <strlen>
 8010eb6:	9b03      	ldr	r3, [sp, #12]
 8010eb8:	4418      	add	r0, r3
 8010eba:	3001      	adds	r0, #1
 8010ebc:	f002 fdba 	bl	8013a34 <operator new[](unsigned int)>
 8010ec0:	4639      	mov	r1, r7
 8010ec2:	f845 0009 	str.w	r0, [r5, r9]
 8010ec6:	e7ab      	b.n	8010e20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 8010ec8:	2000      	movs	r0, #0
 8010eca:	b005      	add	sp, #20
 8010ecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ed0:	2000ca30 	andcs	ip, r0, r0, lsr sl
 8010ed4:	2000cc60 	andcs	ip, r0, r0, ror #24
 8010ed8:	080168af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, fp, sp, lr}
 8010edc:	08017e7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}
 8010ee0:	08017e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, sp, lr}
 8010ee4:	2000ca54 	andcs	ip, r0, r4, asr sl
 8010ee8:	2000001c 	andcs	r0, r0, ip, lsl r0
 8010eec:	2000c828 	andcs	ip, r0, r8, lsr #16

08010ef0 <MDNS::HandleRequest(unsigned short)>:
 8010ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ef4:	4605      	mov	r5, r0
 8010ef6:	2700      	movs	r7, #0
 8010ef8:	f04f 080c 	mov.w	r8, #12
 8010efc:	b0c5      	sub	sp, #276	; 0x114
 8010efe:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8010fc4 <MDNS::HandleRequest(unsigned short)+0xd4>
 8010f02:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 8010fc8 <MDNS::HandleRequest(unsigned short)+0xd8>
 8010f06:	9103      	str	r1, [sp, #12]
 8010f08:	9b03      	ldr	r3, [sp, #12]
 8010f0a:	42bb      	cmp	r3, r7
 8010f0c:	d956      	bls.n	8010fbc <MDNS::HandleRequest(unsigned short)+0xcc>
 8010f0e:	f8da 1000 	ldr.w	r1, [sl]
 8010f12:	aa04      	add	r2, sp, #16
 8010f14:	4441      	add	r1, r8
 8010f16:	4628      	mov	r0, r5
 8010f18:	f7ff fd52 	bl	80109c0 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 8010f1c:	f8da 2000 	ldr.w	r2, [sl]
 8010f20:	4440      	add	r0, r8
 8010f22:	1813      	adds	r3, r2, r0
 8010f24:	885b      	ldrh	r3, [r3, #2]
 8010f26:	f100 0804 	add.w	r8, r0, #4
 8010f2a:	ba5b      	rev16	r3, r3
 8010f2c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8010f30:	2b01      	cmp	r3, #1
 8010f32:	d13e      	bne.n	8010fb2 <MDNS::HandleRequest(unsigned short)+0xc2>
 8010f34:	5a14      	ldrh	r4, [r2, r0]
 8010f36:	4b25      	ldr	r3, [pc, #148]	; (8010fcc <MDNS::HandleRequest(unsigned short)+0xdc>)
 8010f38:	ba64      	rev16	r4, r4
 8010f3a:	6818      	ldr	r0, [r3, #0]
 8010f3c:	a904      	add	r1, sp, #16
 8010f3e:	b2a4      	uxth	r4, r4
 8010f40:	f7ff fcf2 	bl	8010928 <strcmp>
 8010f44:	b970      	cbnz	r0, 8010f64 <MDNS::HandleRequest(unsigned short)+0x74>
 8010f46:	2c01      	cmp	r4, #1
 8010f48:	d10c      	bne.n	8010f64 <MDNS::HandleRequest(unsigned short)+0x74>
 8010f4a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010f4e:	4920      	ldr	r1, [pc, #128]	; (8010fd0 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8010f50:	4820      	ldr	r0, [pc, #128]	; (8010fd4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010f52:	f851 2b04 	ldr.w	r2, [r1], #4
 8010f56:	9300      	str	r3, [sp, #0]
 8010f58:	4b1f      	ldr	r3, [pc, #124]	; (8010fd8 <MDNS::HandleRequest(unsigned short)+0xe8>)
 8010f5a:	7800      	ldrb	r0, [r0, #0]
 8010f5c:	681b      	ldr	r3, [r3, #0]
 8010f5e:	b292      	uxth	r2, r2
 8010f60:	f7ff fc2a 	bl	80107b8 <udp_send>
 8010f64:	481d      	ldr	r0, [pc, #116]	; (8010fdc <MDNS::HandleRequest(unsigned short)+0xec>)
 8010f66:	a904      	add	r1, sp, #16
 8010f68:	f7ff fcde 	bl	8010928 <strcmp>
 8010f6c:	f04f 0900 	mov.w	r9, #0
 8010f70:	4e1b      	ldr	r6, [pc, #108]	; (8010fe0 <MDNS::HandleRequest(unsigned short)+0xf0>)
 8010f72:	9002      	str	r0, [sp, #8]
 8010f74:	6833      	ldr	r3, [r6, #0]
 8010f76:	b1c3      	cbz	r3, 8010faa <MDNS::HandleRequest(unsigned short)+0xba>
 8010f78:	9b02      	ldr	r3, [sp, #8]
 8010f7a:	b123      	cbz	r3, 8010f86 <MDNS::HandleRequest(unsigned short)+0x96>
 8010f7c:	6870      	ldr	r0, [r6, #4]
 8010f7e:	a904      	add	r1, sp, #16
 8010f80:	f7ff fcd2 	bl	8010928 <strcmp>
 8010f84:	b988      	cbnz	r0, 8010faa <MDNS::HandleRequest(unsigned short)+0xba>
 8010f86:	2c0c      	cmp	r4, #12
 8010f88:	d10f      	bne.n	8010faa <MDNS::HandleRequest(unsigned short)+0xba>
 8010f8a:	4649      	mov	r1, r9
 8010f8c:	4628      	mov	r0, r5
 8010f8e:	f7ff fedf 	bl	8010d50 <MDNS::CreateMDNSMessage(unsigned int)>
 8010f92:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010f96:	480f      	ldr	r0, [pc, #60]	; (8010fd4 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010f98:	9300      	str	r3, [sp, #0]
 8010f9a:	4b0f      	ldr	r3, [pc, #60]	; (8010fd8 <MDNS::HandleRequest(unsigned short)+0xe8>)
 8010f9c:	f8bb 2000 	ldrh.w	r2, [fp]
 8010fa0:	681b      	ldr	r3, [r3, #0]
 8010fa2:	4910      	ldr	r1, [pc, #64]	; (8010fe4 <MDNS::HandleRequest(unsigned short)+0xf4>)
 8010fa4:	7800      	ldrb	r0, [r0, #0]
 8010fa6:	f7ff fc07 	bl	80107b8 <udp_send>
 8010faa:	3610      	adds	r6, #16
 8010fac:	f1b9 0f00 	cmp.w	r9, #0
 8010fb0:	d001      	beq.n	8010fb6 <MDNS::HandleRequest(unsigned short)+0xc6>
 8010fb2:	3701      	adds	r7, #1
 8010fb4:	e7a8      	b.n	8010f08 <MDNS::HandleRequest(unsigned short)+0x18>
 8010fb6:	f04f 0901 	mov.w	r9, #1
 8010fba:	e7db      	b.n	8010f74 <MDNS::HandleRequest(unsigned short)+0x84>
 8010fbc:	b045      	add	sp, #276	; 0x114
 8010fbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010fc2:	bf00      	nop
 8010fc4:	2000cc5c 	andcs	ip, r0, ip, asr ip
 8010fc8:	2000ca54 	andcs	ip, r0, r4, asr sl
 8010fcc:	2000cc58 	andcs	ip, r0, r8, asr ip
 8010fd0:	2000c82c 	andcs	ip, r0, ip, lsr #16
 8010fd4:	2000001c 	andcs	r0, r0, ip, lsl r0
 8010fd8:	2000c828 	andcs	ip, r0, r8, lsr #16
 8010fdc:	08017e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, ip, sp, lr}
 8010fe0:	2000ca30 	andcs	ip, r0, r0, lsr sl
 8010fe4:	2000ca58 	andcs	ip, r0, r8, asr sl

08010fe8 <MDNS::Parse()>:
 8010fe8:	4b08      	ldr	r3, [pc, #32]	; (801100c <MDNS::Parse()+0x24>)
 8010fea:	681a      	ldr	r2, [r3, #0]
 8010fec:	8853      	ldrh	r3, [r2, #2]
 8010fee:	ba5b      	rev16	r3, r3
 8010ff0:	b299      	uxth	r1, r3
 8010ff2:	041b      	lsls	r3, r3, #16
 8010ff4:	d408      	bmi.n	8011008 <MDNS::Parse()+0x20>
 8010ff6:	0b8b      	lsrs	r3, r1, #14
 8010ff8:	d106      	bne.n	8011008 <MDNS::Parse()+0x20>
 8010ffa:	8891      	ldrh	r1, [r2, #4]
 8010ffc:	b28b      	uxth	r3, r1
 8010ffe:	b11b      	cbz	r3, 8011008 <MDNS::Parse()+0x20>
 8011000:	ba49      	rev16	r1, r1
 8011002:	b289      	uxth	r1, r1
 8011004:	f7ff bf74 	b.w	8010ef0 <MDNS::HandleRequest(unsigned short)>
 8011008:	4770      	bx	lr
 801100a:	bf00      	nop
 801100c:	2000cc5c 	andcs	ip, r0, ip, asr ip

08011010 <MDNS::Run()>:
 8011010:	b538      	push	{r3, r4, r5, lr}
 8011012:	4d0c      	ldr	r5, [pc, #48]	; (8011044 <MDNS::Run()+0x34>)
 8011014:	4604      	mov	r4, r0
 8011016:	480c      	ldr	r0, [pc, #48]	; (8011048 <MDNS::Run()+0x38>)
 8011018:	462b      	mov	r3, r5
 801101a:	4a0c      	ldr	r2, [pc, #48]	; (801104c <MDNS::Run()+0x3c>)
 801101c:	490c      	ldr	r1, [pc, #48]	; (8011050 <MDNS::Run()+0x40>)
 801101e:	7800      	ldrb	r0, [r0, #0]
 8011020:	f7ff fba4 	bl	801076c <udp_recv2>
 8011024:	4b0b      	ldr	r3, [pc, #44]	; (8011054 <MDNS::Run()+0x44>)
 8011026:	882a      	ldrh	r2, [r5, #0]
 8011028:	8018      	strh	r0, [r3, #0]
 801102a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801102e:	429a      	cmp	r2, r3
 8011030:	d106      	bne.n	8011040 <MDNS::Run()+0x30>
 8011032:	280c      	cmp	r0, #12
 8011034:	d904      	bls.n	8011040 <MDNS::Run()+0x30>
 8011036:	4620      	mov	r0, r4
 8011038:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801103c:	f7ff bfd4 	b.w	8010fe8 <MDNS::Parse()>
 8011040:	bd38      	pop	{r3, r4, r5, pc}
 8011042:	bf00      	nop
 8011044:	2000c824 	andcs	ip, r0, r4, lsr #16
 8011048:	2000001c 	andcs	r0, r0, ip, lsl r0
 801104c:	2000c820 	andcs	ip, r0, r0, lsr #16
 8011050:	2000cc5c 	andcs	ip, r0, ip, asr ip
 8011054:	2000ca50 	andcs	ip, r0, r0, asr sl

08011058 <MDNS::Print()>:
 8011058:	b510      	push	{r4, lr}
 801105a:	4816      	ldr	r0, [pc, #88]	; (80110b4 <MDNS::Print()+0x5c>)
 801105c:	f003 f8ee 	bl	801423c <printf>
 8011060:	4b15      	ldr	r3, [pc, #84]	; (80110b8 <MDNS::Print()+0x60>)
 8011062:	681b      	ldr	r3, [r3, #0]
 8011064:	3301      	adds	r3, #1
 8011066:	d104      	bne.n	8011072 <MDNS::Print()+0x1a>
 8011068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801106c:	4813      	ldr	r0, [pc, #76]	; (80110bc <MDNS::Print()+0x64>)
 801106e:	f003 b8e5 	b.w	801423c <printf>
 8011072:	4b13      	ldr	r3, [pc, #76]	; (80110c0 <MDNS::Print()+0x68>)
 8011074:	4c13      	ldr	r4, [pc, #76]	; (80110c4 <MDNS::Print()+0x6c>)
 8011076:	6819      	ldr	r1, [r3, #0]
 8011078:	4813      	ldr	r0, [pc, #76]	; (80110c8 <MDNS::Print()+0x70>)
 801107a:	f003 f8df 	bl	801423c <printf>
 801107e:	6823      	ldr	r3, [r4, #0]
 8011080:	b14b      	cbz	r3, 8011096 <MDNS::Print()+0x3e>
 8011082:	4a12      	ldr	r2, [pc, #72]	; (80110cc <MDNS::Print()+0x74>)
 8011084:	68a3      	ldr	r3, [r4, #8]
 8011086:	6861      	ldr	r1, [r4, #4]
 8011088:	2b00      	cmp	r3, #0
 801108a:	bf08      	it	eq
 801108c:	4613      	moveq	r3, r2
 801108e:	4810      	ldr	r0, [pc, #64]	; (80110d0 <MDNS::Print()+0x78>)
 8011090:	89a2      	ldrh	r2, [r4, #12]
 8011092:	f003 f8d3 	bl	801423c <printf>
 8011096:	6923      	ldr	r3, [r4, #16]
 8011098:	b15b      	cbz	r3, 80110b2 <MDNS::Print()+0x5a>
 801109a:	69a3      	ldr	r3, [r4, #24]
 801109c:	4a0b      	ldr	r2, [pc, #44]	; (80110cc <MDNS::Print()+0x74>)
 801109e:	6961      	ldr	r1, [r4, #20]
 80110a0:	2b00      	cmp	r3, #0
 80110a2:	bf08      	it	eq
 80110a4:	4613      	moveq	r3, r2
 80110a6:	480a      	ldr	r0, [pc, #40]	; (80110d0 <MDNS::Print()+0x78>)
 80110a8:	8ba2      	ldrh	r2, [r4, #28]
 80110aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110ae:	f003 b8c5 	b.w	801423c <printf>
 80110b2:	bd10      	pop	{r4, pc}
 80110b4:	08017ea5 	stmdaeq	r1, {r0, r2, r5, r7, r9, sl, fp, ip, sp, lr}
 80110b8:	2000001c 	andcs	r0, r0, ip, lsl r0
 80110bc:	08017eab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl, fp, ip, sp, lr}
 80110c0:	2000cc58 	andcs	ip, r0, r8, asr ip
 80110c4:	2000ca30 	andcs	ip, r0, r0, lsr sl
 80110c8:	08017eb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r9, sl, fp, ip, sp, lr}
 80110cc:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 80110d0:	08017ec5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, fp, ip, sp, lr}

080110d4 <strncpy.constprop.0.isra.0>:
 80110d4:	233f      	movs	r3, #63	; 0x3f
 80110d6:	3901      	subs	r1, #1
 80110d8:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80110dc:	b92a      	cbnz	r2, 80110ea <strncpy.constprop.0.isra.0+0x16>
 80110de:	4403      	add	r3, r0
 80110e0:	4298      	cmp	r0, r3
 80110e2:	d007      	beq.n	80110f4 <strncpy.constprop.0.isra.0+0x20>
 80110e4:	f800 2b01 	strb.w	r2, [r0], #1
 80110e8:	e7fa      	b.n	80110e0 <strncpy.constprop.0.isra.0+0xc>
 80110ea:	3b01      	subs	r3, #1
 80110ec:	f800 2b01 	strb.w	r2, [r0], #1
 80110f0:	d1f2      	bne.n	80110d8 <strncpy.constprop.0.isra.0+0x4>
 80110f2:	4770      	bx	lr
 80110f4:	4770      	bx	lr
	...

080110f8 <Network::Network()>:
 80110f8:	4a11      	ldr	r2, [pc, #68]	; (8011140 <Network::Network()+0x48>)
 80110fa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80110fe:	6010      	str	r0, [r2, #0]
 8011100:	2201      	movs	r2, #1
 8011102:	2300      	movs	r3, #0
 8011104:	e9c0 1200 	strd	r1, r2, [r0]
 8011108:	2200      	movs	r2, #0
 801110a:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 801110e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8011112:	490c      	ldr	r1, [pc, #48]	; (8011144 <Network::Network()+0x4c>)
 8011114:	60c2      	str	r2, [r0, #12]
 8011116:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 801111a:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 801111e:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 8011122:	6083      	str	r3, [r0, #8]
 8011124:	6183      	str	r3, [r0, #24]
 8011126:	7703      	strb	r3, [r0, #28]
 8011128:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 801112c:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 8011130:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011134:	f802 3b01 	strb.w	r3, [r2], #1
 8011138:	2b00      	cmp	r3, #0
 801113a:	d1f9      	bne.n	8011130 <Network::Network()+0x38>
 801113c:	4770      	bx	lr
 801113e:	bf00      	nop
 8011140:	2000cc60 	andcs	ip, r0, r0, ror #24
 8011144:	08017ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, ip, sp, lr}

08011148 <Network::Shutdown()>:
 8011148:	b508      	push	{r3, lr}
 801114a:	30b8      	adds	r0, #184	; 0xb8
 801114c:	f001 fc70 	bl	8012a30 <NetworkDisplay::ShowShutdown()>
 8011150:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011154:	f7f6 b878 	b.w	8007248 <net_shutdown>

08011158 <Network::Begin(unsigned short)>:
 8011158:	4608      	mov	r0, r1
 801115a:	f7ff ba97 	b.w	801068c <udp_bind>

0801115e <Network::End(unsigned short)>:
 801115e:	4608      	mov	r0, r1
 8011160:	f7ff baae 	b.w	80106c0 <udp_unbind>

08011164 <Network::MacAddressCopyTo(unsigned char*)>:
 8011164:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8011168:	3901      	subs	r1, #1
 801116a:	30a2      	adds	r0, #162	; 0xa2
 801116c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011170:	4283      	cmp	r3, r0
 8011172:	f801 2f01 	strb.w	r2, [r1, #1]!
 8011176:	d1f9      	bne.n	801116c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8011178:	4770      	bx	lr

0801117a <Network::JoinGroup(int, unsigned int)>:
 801117a:	4610      	mov	r0, r2
 801117c:	f001 b82c 	b.w	80121d8 <igmp_join>

08011180 <Network::LeaveGroup(int, unsigned int)>:
 8011180:	4610      	mov	r0, r2
 8011182:	f001 b855 	b.w	8012230 <igmp_leave>

08011186 <Network::SetDefaultIp()>:
 8011186:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 801118a:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 801118e:	041b      	lsls	r3, r3, #16
 8011190:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8011194:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8011198:	3302      	adds	r3, #2
 801119a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 801119e:	22ff      	movs	r2, #255	; 0xff
 80111a0:	6103      	str	r3, [r0, #16]
 80111a2:	e9c0 3205 	strd	r3, r2, [r0, #20]
 80111a6:	4770      	bx	lr

080111a8 <Network::Init(NetworkParamsStore*)>:
 80111a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111ac:	b08b      	sub	sp, #44	; 0x2c
 80111ae:	4604      	mov	r4, r0
 80111b0:	a806      	add	r0, sp, #24
 80111b2:	f000 fa57 	bl	8011664 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80111b6:	a806      	add	r0, sp, #24
 80111b8:	f000 fa64 	bl	8011684 <NetworkParams::Load()>
 80111bc:	b110      	cbz	r0, 80111c4 <Network::Init(NetworkParamsStore*)+0x1c>
 80111be:	a806      	add	r0, sp, #24
 80111c0:	f000 fccb 	bl	8011b5a <NetworkParams::Dump()>
 80111c4:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80111c8:	f8df 8224 	ldr.w	r8, [pc, #548]	; 80113f0 <Network::Init(NetworkParamsStore*)+0x248>
 80111cc:	4628      	mov	r0, r5
 80111ce:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 80111d2:	f001 fc15 	bl	8012a00 <NetworkDisplay::ShowEmacStart()>
 80111d6:	4638      	mov	r0, r7
 80111d8:	f003 fffa 	bl	80151d0 <emac_start>
 80111dc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80111e0:	f104 061c 	add.w	r6, r4, #28
 80111e4:	9307      	str	r3, [sp, #28]
 80111e6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80111ea:	9308      	str	r3, [sp, #32]
 80111ec:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80111f0:	9309      	str	r3, [sp, #36]	; 0x24
 80111f2:	f898 3014 	ldrb.w	r3, [r8, #20]
 80111f6:	7063      	strb	r3, [r4, #1]
 80111f8:	f8d8 3000 	ldr.w	r3, [r8]
 80111fc:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8011200:	bf18      	it	ne
 8011202:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 8011206:	061b      	lsls	r3, r3, #24
 8011208:	bf58      	it	pl
 801120a:	2300      	movpl	r3, #0
 801120c:	60a2      	str	r2, [r4, #8]
 801120e:	bf48      	it	mi
 8011210:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 8011214:	60e3      	str	r3, [r4, #12]
 8011216:	f898 3015 	ldrb.w	r3, [r8, #21]
 801121a:	2b00      	cmp	r3, #0
 801121c:	d15e      	bne.n	80112dc <Network::Init(NetworkParamsStore*)+0x134>
 801121e:	4632      	mov	r2, r6
 8011220:	4874      	ldr	r0, [pc, #464]	; (80113f4 <Network::Init(NetworkParamsStore*)+0x24c>)
 8011222:	f810 1b01 	ldrb.w	r1, [r0], #1
 8011226:	f103 0c01 	add.w	ip, r3, #1
 801122a:	b119      	cbz	r1, 8011234 <Network::Init(NetworkParamsStore*)+0x8c>
 801122c:	4663      	mov	r3, ip
 801122e:	f802 1b01 	strb.w	r1, [r2], #1
 8011232:	e7f6      	b.n	8011222 <Network::Init(NetworkParamsStore*)+0x7a>
 8011234:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 8011238:	18e1      	adds	r1, r4, r3
 801123a:	0910      	lsrs	r0, r2, #4
 801123c:	2a9f      	cmp	r2, #159	; 0x9f
 801123e:	f002 020f 	and.w	r2, r2, #15
 8011242:	bf94      	ite	ls
 8011244:	3030      	addls	r0, #48	; 0x30
 8011246:	3037      	addhi	r0, #55	; 0x37
 8011248:	2a09      	cmp	r2, #9
 801124a:	bf94      	ite	ls
 801124c:	3230      	addls	r2, #48	; 0x30
 801124e:	3237      	addhi	r2, #55	; 0x37
 8011250:	44a4      	add	ip, r4
 8011252:	7708      	strb	r0, [r1, #28]
 8011254:	f88c 201c 	strb.w	r2, [ip, #28]
 8011258:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 801125c:	f103 0e02 	add.w	lr, r3, #2
 8011260:	0910      	lsrs	r0, r2, #4
 8011262:	2a9f      	cmp	r2, #159	; 0x9f
 8011264:	f002 020f 	and.w	r2, r2, #15
 8011268:	bf94      	ite	ls
 801126a:	3030      	addls	r0, #48	; 0x30
 801126c:	3037      	addhi	r0, #55	; 0x37
 801126e:	f103 0903 	add.w	r9, r3, #3
 8011272:	2a09      	cmp	r2, #9
 8011274:	44a6      	add	lr, r4
 8011276:	f88e 001c 	strb.w	r0, [lr, #28]
 801127a:	bf94      	ite	ls
 801127c:	3230      	addls	r2, #48	; 0x30
 801127e:	3237      	addhi	r2, #55	; 0x37
 8011280:	eb04 0009 	add.w	r0, r4, r9
 8011284:	7702      	strb	r2, [r0, #28]
 8011286:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 801128a:	f103 0c04 	add.w	ip, r3, #4
 801128e:	0910      	lsrs	r0, r2, #4
 8011290:	2a9f      	cmp	r2, #159	; 0x9f
 8011292:	f002 020f 	and.w	r2, r2, #15
 8011296:	bf94      	ite	ls
 8011298:	3030      	addls	r0, #48	; 0x30
 801129a:	3037      	addhi	r0, #55	; 0x37
 801129c:	3305      	adds	r3, #5
 801129e:	2a09      	cmp	r2, #9
 80112a0:	4423      	add	r3, r4
 80112a2:	44a4      	add	ip, r4
 80112a4:	bf94      	ite	ls
 80112a6:	3230      	addls	r2, #48	; 0x30
 80112a8:	3237      	addhi	r2, #55	; 0x37
 80112aa:	f88c 001c 	strb.w	r0, [ip, #28]
 80112ae:	771a      	strb	r2, [r3, #28]
 80112b0:	2300      	movs	r3, #0
 80112b2:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 80112b6:	7863      	ldrb	r3, [r4, #1]
 80112b8:	b95b      	cbnz	r3, 80112d2 <Network::Init(NetworkParamsStore*)+0x12a>
 80112ba:	9b07      	ldr	r3, [sp, #28]
 80112bc:	b9b3      	cbnz	r3, 80112ec <Network::Init(NetworkParamsStore*)+0x144>
 80112be:	4620      	mov	r0, r4
 80112c0:	f7ff ff61 	bl	8011186 <Network::SetDefaultIp()>
 80112c4:	6923      	ldr	r3, [r4, #16]
 80112c6:	69a2      	ldr	r2, [r4, #24]
 80112c8:	9307      	str	r3, [sp, #28]
 80112ca:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80112ce:	7863      	ldrb	r3, [r4, #1]
 80112d0:	b19b      	cbz	r3, 80112fa <Network::Init(NetworkParamsStore*)+0x152>
 80112d2:	2101      	movs	r1, #1
 80112d4:	4628      	mov	r0, r5
 80112d6:	f001 fbb1 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80112da:	e00e      	b.n	80112fa <Network::Init(NetworkParamsStore*)+0x152>
 80112dc:	4630      	mov	r0, r6
 80112de:	4946      	ldr	r1, [pc, #280]	; (80113f8 <Network::Init(NetworkParamsStore*)+0x250>)
 80112e0:	f7ff fef8 	bl	80110d4 <strncpy.constprop.0.isra.0>
 80112e4:	2300      	movs	r3, #0
 80112e6:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 80112ea:	e7e4      	b.n	80112b6 <Network::Init(NetworkParamsStore*)+0x10e>
 80112ec:	69a1      	ldr	r1, [r4, #24]
 80112ee:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 80112f2:	4053      	eors	r3, r2
 80112f4:	420b      	tst	r3, r1
 80112f6:	d000      	beq.n	80112fa <Network::Init(NetworkParamsStore*)+0x152>
 80112f8:	9209      	str	r2, [sp, #36]	; 0x24
 80112fa:	1ce3      	adds	r3, r4, #3
 80112fc:	f104 0901 	add.w	r9, r4, #1
 8011300:	9302      	str	r3, [sp, #8]
 8011302:	9300      	str	r3, [sp, #0]
 8011304:	4632      	mov	r2, r6
 8011306:	464b      	mov	r3, r9
 8011308:	4638      	mov	r0, r7
 801130a:	a907      	add	r1, sp, #28
 801130c:	f7f5 ff4c 	bl	80071a8 <net_init>
 8011310:	78e3      	ldrb	r3, [r4, #3]
 8011312:	b11b      	cbz	r3, 801131c <Network::Init(NetworkParamsStore*)+0x174>
 8011314:	2104      	movs	r1, #4
 8011316:	4628      	mov	r0, r5
 8011318:	f001 fb90 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801131c:	f898 3014 	ldrb.w	r3, [r8, #20]
 8011320:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 8011324:	9304      	str	r3, [sp, #16]
 8011326:	233c      	movs	r3, #60	; 0x3c
 8011328:	fb03 f30a 	mul.w	r3, r3, sl
 801132c:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 80113fc <Network::Init(NetworkParamsStore*)+0x254>
 8011330:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 8011400 <Network::Init(NetworkParamsStore*)+0x258>
 8011334:	9303      	str	r3, [sp, #12]
 8011336:	78e3      	ldrb	r3, [r4, #3]
 8011338:	b95b      	cbnz	r3, 8011352 <Network::Init(NetworkParamsStore*)+0x1aa>
 801133a:	9b07      	ldr	r3, [sp, #28]
 801133c:	4628      	mov	r0, r5
 801133e:	6123      	str	r3, [r4, #16]
 8011340:	9b08      	ldr	r3, [sp, #32]
 8011342:	61a3      	str	r3, [r4, #24]
 8011344:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011346:	6163      	str	r3, [r4, #20]
 8011348:	f001 fb60 	bl	8012a0c <NetworkDisplay::ShowIp()>
 801134c:	b00b      	add	sp, #44	; 0x2c
 801134e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011352:	f1ba 0f00 	cmp.w	sl, #0
 8011356:	d0f0      	beq.n	801133a <Network::Init(NetworkParamsStore*)+0x192>
 8011358:	9b04      	ldr	r3, [sp, #16]
 801135a:	2b00      	cmp	r3, #0
 801135c:	d0ed      	beq.n	801133a <Network::Init(NetworkParamsStore*)+0x192>
 801135e:	2104      	movs	r1, #4
 8011360:	f8d8 0000 	ldr.w	r0, [r8]
 8011364:	f002 fa7e 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 8011368:	2103      	movs	r1, #3
 801136a:	4628      	mov	r0, r5
 801136c:	f001 fb66 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011370:	2000      	movs	r0, #0
 8011372:	f003 f899 	bl	80144a8 <time>
 8011376:	9005      	str	r0, [sp, #20]
 8011378:	2000      	movs	r0, #0
 801137a:	f003 f895 	bl	80144a8 <time>
 801137e:	9b05      	ldr	r3, [sp, #20]
 8011380:	1ac0      	subs	r0, r0, r3
 8011382:	9b03      	ldr	r3, [sp, #12]
 8011384:	4298      	cmp	r0, r3
 8011386:	da1a      	bge.n	80113be <Network::Init(NetworkParamsStore*)+0x216>
 8011388:	f8d8 3000 	ldr.w	r3, [r8]
 801138c:	491d      	ldr	r1, [pc, #116]	; (8011404 <Network::Init(NetworkParamsStore*)+0x25c>)
 801138e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8011392:	f1bc 0f00 	cmp.w	ip, #0
 8011396:	d0ef      	beq.n	8011378 <Network::Init(NetworkParamsStore*)+0x1d0>
 8011398:	6808      	ldr	r0, [r1, #0]
 801139a:	695a      	ldr	r2, [r3, #20]
 801139c:	1a80      	subs	r0, r0, r2
 801139e:	4584      	cmp	ip, r0
 80113a0:	d8ea      	bhi.n	8011378 <Network::Init(NetworkParamsStore*)+0x1d0>
 80113a2:	6808      	ldr	r0, [r1, #0]
 80113a4:	6158      	str	r0, [r3, #20]
 80113a6:	6918      	ldr	r0, [r3, #16]
 80113a8:	2801      	cmp	r0, #1
 80113aa:	f080 0201 	eor.w	r2, r0, #1
 80113ae:	611a      	str	r2, [r3, #16]
 80113b0:	bf16      	itet	ne
 80113b2:	2301      	movne	r3, #1
 80113b4:	f8cb 0014 	streq.w	r0, [fp, #20]
 80113b8:	f8cb 3010 	strne.w	r3, [fp, #16]
 80113bc:	e7dc      	b.n	8011378 <Network::Init(NetworkParamsStore*)+0x1d0>
 80113be:	2101      	movs	r1, #1
 80113c0:	4628      	mov	r0, r5
 80113c2:	f001 fb3b 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80113c6:	2101      	movs	r1, #1
 80113c8:	f8d8 0000 	ldr.w	r0, [r8]
 80113cc:	f002 fa4a 	bl	8013864 <LedBlink::SetMode(ledblink::Mode)>
 80113d0:	2301      	movs	r3, #1
 80113d2:	7063      	strb	r3, [r4, #1]
 80113d4:	2300      	movs	r3, #0
 80113d6:	70e3      	strb	r3, [r4, #3]
 80113d8:	9b02      	ldr	r3, [sp, #8]
 80113da:	4632      	mov	r2, r6
 80113dc:	9300      	str	r3, [sp, #0]
 80113de:	4638      	mov	r0, r7
 80113e0:	464b      	mov	r3, r9
 80113e2:	a907      	add	r1, sp, #28
 80113e4:	f7f5 fee0 	bl	80071a8 <net_init>
 80113e8:	7863      	ldrb	r3, [r4, #1]
 80113ea:	2b00      	cmp	r3, #0
 80113ec:	d0a3      	beq.n	8011336 <Network::Init(NetworkParamsStore*)+0x18e>
 80113ee:	e7a4      	b.n	801133a <Network::Init(NetworkParamsStore*)+0x192>
 80113f0:	2000cc64 	andcs	ip, r0, r4, ror #24
 80113f4:	08017ed5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 80113f8:	2000cc79 	andcs	ip, r0, r9, ror ip
 80113fc:	2000d384 	andcs	sp, r0, r4, lsl #7
 8011400:	40011000 	andmi	r1, r1, r0
 8011404:	2000d3ac 	andcs	sp, r0, ip, lsr #7

08011408 <Network::SetIp(unsigned int)>:
 8011408:	7843      	ldrb	r3, [r0, #1]
 801140a:	b570      	push	{r4, r5, r6, lr}
 801140c:	4604      	mov	r4, r0
 801140e:	460d      	mov	r5, r1
 8011410:	2600      	movs	r6, #0
 8011412:	b113      	cbz	r3, 801141a <Network::SetIp(unsigned int)+0x12>
 8011414:	7046      	strb	r6, [r0, #1]
 8011416:	f7fe feed 	bl	80101f4 <net_dhcp_release>
 801141a:	70e6      	strb	r6, [r4, #3]
 801141c:	b975      	cbnz	r5, 801143c <Network::SetIp(unsigned int)+0x34>
 801141e:	4620      	mov	r0, r4
 8011420:	f7ff feb1 	bl	8011186 <Network::SetDefaultIp()>
 8011424:	6920      	ldr	r0, [r4, #16]
 8011426:	f7fe fea1 	bl	801016c <net_set_ip>
 801142a:	34b8      	adds	r4, #184	; 0xb8
 801142c:	4620      	mov	r0, r4
 801142e:	f001 faed 	bl	8012a0c <NetworkDisplay::ShowIp()>
 8011432:	4620      	mov	r0, r4
 8011434:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011438:	f001 baee 	b.w	8012a18 <NetworkDisplay::ShowNetMask()>
 801143c:	4628      	mov	r0, r5
 801143e:	f7fe fe95 	bl	801016c <net_set_ip>
 8011442:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8011446:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801144a:	2800      	cmp	r0, #0
 801144c:	d0ed      	beq.n	801142a <Network::SetIp(unsigned int)+0x22>
 801144e:	6803      	ldr	r3, [r0, #0]
 8011450:	4629      	mov	r1, r5
 8011452:	689b      	ldr	r3, [r3, #8]
 8011454:	4798      	blx	r3
 8011456:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801145a:	2100      	movs	r1, #0
 801145c:	6803      	ldr	r3, [r0, #0]
 801145e:	699b      	ldr	r3, [r3, #24]
 8011460:	4798      	blx	r3
 8011462:	e7e2      	b.n	801142a <Network::SetIp(unsigned int)+0x22>

08011464 <Network::SetNetmask(unsigned int)>:
 8011464:	6982      	ldr	r2, [r0, #24]
 8011466:	b510      	push	{r4, lr}
 8011468:	428a      	cmp	r2, r1
 801146a:	4604      	mov	r4, r0
 801146c:	d00f      	beq.n	801148e <Network::SetNetmask(unsigned int)+0x2a>
 801146e:	6181      	str	r1, [r0, #24]
 8011470:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8011474:	b110      	cbz	r0, 801147c <Network::SetNetmask(unsigned int)+0x18>
 8011476:	6803      	ldr	r3, [r0, #0]
 8011478:	68db      	ldr	r3, [r3, #12]
 801147a:	4798      	blx	r3
 801147c:	34b8      	adds	r4, #184	; 0xb8
 801147e:	4620      	mov	r0, r4
 8011480:	f001 fac4 	bl	8012a0c <NetworkDisplay::ShowIp()>
 8011484:	4620      	mov	r0, r4
 8011486:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801148a:	f001 bac5 	b.w	8012a18 <NetworkDisplay::ShowNetMask()>
 801148e:	bd10      	pop	{r4, pc}

08011490 <Network::SetGatewayIp(unsigned int)>:
 8011490:	b538      	push	{r3, r4, r5, lr}
 8011492:	6943      	ldr	r3, [r0, #20]
 8011494:	4604      	mov	r4, r0
 8011496:	428b      	cmp	r3, r1
 8011498:	460d      	mov	r5, r1
 801149a:	d00f      	beq.n	80114bc <Network::SetGatewayIp(unsigned int)+0x2c>
 801149c:	4608      	mov	r0, r1
 801149e:	f7fe fe75 	bl	801018c <net_set_gw>
 80114a2:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 80114a6:	b118      	cbz	r0, 80114b0 <Network::SetGatewayIp(unsigned int)+0x20>
 80114a8:	6803      	ldr	r3, [r0, #0]
 80114aa:	4629      	mov	r1, r5
 80114ac:	691b      	ldr	r3, [r3, #16]
 80114ae:	4798      	blx	r3
 80114b0:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 80114b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80114b8:	f001 bab4 	b.w	8012a24 <NetworkDisplay::ShowGatewayIp()>
 80114bc:	bd38      	pop	{r3, r4, r5, pc}
	...

080114c0 <Network::EnableDhcp()>:
 80114c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114c2:	4e23      	ldr	r6, [pc, #140]	; (8011550 <Network::EnableDhcp()+0x90>)
 80114c4:	4604      	mov	r4, r0
 80114c6:	6833      	ldr	r3, [r6, #0]
 80114c8:	b085      	sub	sp, #20
 80114ca:	791f      	ldrb	r7, [r3, #4]
 80114cc:	b137      	cbz	r7, 80114dc <Network::EnableDhcp()+0x1c>
 80114ce:	2200      	movs	r2, #0
 80114d0:	2104      	movs	r1, #4
 80114d2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80114d6:	711a      	strb	r2, [r3, #4]
 80114d8:	f003 f9e0 	bl	801489c <fwdgt_config>
 80114dc:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80114e0:	2101      	movs	r1, #1
 80114e2:	4628      	mov	r0, r5
 80114e4:	f001 faaa 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80114e8:	1ce2      	adds	r2, r4, #3
 80114ea:	f104 011c 	add.w	r1, r4, #28
 80114ee:	a801      	add	r0, sp, #4
 80114f0:	f7fe fe54 	bl	801019c <net_set_dhcp>
 80114f4:	78e3      	ldrb	r3, [r4, #3]
 80114f6:	7060      	strb	r0, [r4, #1]
 80114f8:	b343      	cbz	r3, 801154c <Network::EnableDhcp()+0x8c>
 80114fa:	2104      	movs	r1, #4
 80114fc:	4628      	mov	r0, r5
 80114fe:	f001 fa9d 	bl	8012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011502:	b16f      	cbz	r7, 8011520 <Network::EnableDhcp()+0x60>
 8011504:	2102      	movs	r1, #2
 8011506:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801150a:	6836      	ldr	r6, [r6, #0]
 801150c:	f003 f9c6 	bl	801489c <fwdgt_config>
 8011510:	2801      	cmp	r0, #1
 8011512:	bf0c      	ite	eq
 8011514:	2301      	moveq	r3, #1
 8011516:	2300      	movne	r3, #0
 8011518:	7133      	strb	r3, [r6, #4]
 801151a:	d101      	bne.n	8011520 <Network::EnableDhcp()+0x60>
 801151c:	f003 f9ae 	bl	801487c <fwdgt_enable>
 8011520:	9b01      	ldr	r3, [sp, #4]
 8011522:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8011526:	6123      	str	r3, [r4, #16]
 8011528:	9b02      	ldr	r3, [sp, #8]
 801152a:	61a3      	str	r3, [r4, #24]
 801152c:	9b03      	ldr	r3, [sp, #12]
 801152e:	6163      	str	r3, [r4, #20]
 8011530:	b118      	cbz	r0, 801153a <Network::EnableDhcp()+0x7a>
 8011532:	6803      	ldr	r3, [r0, #0]
 8011534:	7861      	ldrb	r1, [r4, #1]
 8011536:	699b      	ldr	r3, [r3, #24]
 8011538:	4798      	blx	r3
 801153a:	4628      	mov	r0, r5
 801153c:	f001 fa66 	bl	8012a0c <NetworkDisplay::ShowIp()>
 8011540:	4628      	mov	r0, r5
 8011542:	f001 fa69 	bl	8012a18 <NetworkDisplay::ShowNetMask()>
 8011546:	7860      	ldrb	r0, [r4, #1]
 8011548:	b005      	add	sp, #20
 801154a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801154c:	2102      	movs	r1, #2
 801154e:	e7d5      	b.n	80114fc <Network::EnableDhcp()+0x3c>
 8011550:	2000d388 	andcs	sp, r0, r8, lsl #7

08011554 <Network::Print()>:
 8011554:	b530      	push	{r4, r5, lr}
 8011556:	4604      	mov	r4, r0
 8011558:	b085      	sub	sp, #20
 801155a:	4832      	ldr	r0, [pc, #200]	; (8011624 <Network::Print()+0xd0>)
 801155c:	f002 fe6e 	bl	801423c <printf>
 8011560:	f104 011c 	add.w	r1, r4, #28
 8011564:	4830      	ldr	r0, [pc, #192]	; (8011628 <Network::Print()+0xd4>)
 8011566:	f002 fe69 	bl	801423c <printf>
 801156a:	6861      	ldr	r1, [r4, #4]
 801156c:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 8011570:	482e      	ldr	r0, [pc, #184]	; (801162c <Network::Print()+0xd8>)
 8011572:	f002 fe63 	bl	801423c <printf>
 8011576:	69a0      	ldr	r0, [r4, #24]
 8011578:	f7f7 f804 	bl	8008584 <__popcountsi2>
 801157c:	6925      	ldr	r5, [r4, #16]
 801157e:	9001      	str	r0, [sp, #4]
 8011580:	0e2b      	lsrs	r3, r5, #24
 8011582:	9300      	str	r3, [sp, #0]
 8011584:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8011588:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801158c:	b2e9      	uxtb	r1, r5
 801158e:	4828      	ldr	r0, [pc, #160]	; (8011630 <Network::Print()+0xdc>)
 8011590:	f002 fe54 	bl	801423c <printf>
 8011594:	69a1      	ldr	r1, [r4, #24]
 8011596:	4827      	ldr	r0, [pc, #156]	; (8011634 <Network::Print()+0xe0>)
 8011598:	0e0b      	lsrs	r3, r1, #24
 801159a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801159e:	9300      	str	r3, [sp, #0]
 80115a0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80115a4:	b2c9      	uxtb	r1, r1
 80115a6:	f002 fe49 	bl	801423c <printf>
 80115aa:	6961      	ldr	r1, [r4, #20]
 80115ac:	4822      	ldr	r0, [pc, #136]	; (8011638 <Network::Print()+0xe4>)
 80115ae:	0e0b      	lsrs	r3, r1, #24
 80115b0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80115b4:	9300      	str	r3, [sp, #0]
 80115b6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80115ba:	b2c9      	uxtb	r1, r1
 80115bc:	f002 fe3e 	bl	801423c <printf>
 80115c0:	69a3      	ldr	r3, [r4, #24]
 80115c2:	6921      	ldr	r1, [r4, #16]
 80115c4:	481d      	ldr	r0, [pc, #116]	; (801163c <Network::Print()+0xe8>)
 80115c6:	ea61 0103 	orn	r1, r1, r3
 80115ca:	0e0b      	lsrs	r3, r1, #24
 80115cc:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80115d0:	9300      	str	r3, [sp, #0]
 80115d2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80115d6:	b2c9      	uxtb	r1, r1
 80115d8:	f002 fe30 	bl	801423c <printf>
 80115dc:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 80115e0:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 80115e4:	9302      	str	r3, [sp, #8]
 80115e6:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 80115ea:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 80115ee:	9301      	str	r3, [sp, #4]
 80115f0:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 80115f4:	4812      	ldr	r0, [pc, #72]	; (8011640 <Network::Print()+0xec>)
 80115f6:	9300      	str	r3, [sp, #0]
 80115f8:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 80115fc:	f002 fe1e 	bl	801423c <printf>
 8011600:	4b10      	ldr	r3, [pc, #64]	; (8011644 <Network::Print()+0xf0>)
 8011602:	681b      	ldr	r3, [r3, #0]
 8011604:	78da      	ldrb	r2, [r3, #3]
 8011606:	b952      	cbnz	r2, 801161e <Network::Print()+0xca>
 8011608:	785b      	ldrb	r3, [r3, #1]
 801160a:	2b00      	cmp	r3, #0
 801160c:	bf14      	ite	ne
 801160e:	2144      	movne	r1, #68	; 0x44
 8011610:	2153      	moveq	r1, #83	; 0x53
 8011612:	480d      	ldr	r0, [pc, #52]	; (8011648 <Network::Print()+0xf4>)
 8011614:	b005      	add	sp, #20
 8011616:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801161a:	f002 be0f 	b.w	801423c <printf>
 801161e:	215a      	movs	r1, #90	; 0x5a
 8011620:	e7f7      	b.n	8011612 <Network::Print()+0xbe>
 8011622:	bf00      	nop
 8011624:	08017ee1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8011628:	08017eea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 801162c:	08017efb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8011630:	08017f10 	stmdaeq	r1, {r4, r8, r9, sl, fp, ip, sp, lr}
 8011634:	08017f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8011638:	08017f47 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, sl, fp, ip, sp, lr}
 801163c:	08017f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8011640:	08017f7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8011644:	2000cc60 	andcs	ip, r0, r0, ror #24
 8011648:	08017fa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, sl, fp, ip, sp, lr}

0801164c <Network::TcpBegin(unsigned short)>:
 801164c:	4608      	mov	r0, r1
 801164e:	f7fe bf53 	b.w	80104f8 <tcp_begin>

08011652 <Network::TcpRead(int, unsigned char const**)>:
 8011652:	4608      	mov	r0, r1
 8011654:	4611      	mov	r1, r2
 8011656:	f7fe bf8d 	b.w	8010574 <tcp_read>

0801165a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 801165a:	4608      	mov	r0, r1
 801165c:	4611      	mov	r1, r2
 801165e:	461a      	mov	r2, r3
 8011660:	f7fe bf64 	b.w	801052c <tcp_write>

08011664 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8011664:	4b06      	ldr	r3, [pc, #24]	; (8011680 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 8011666:	b510      	push	{r4, lr}
 8011668:	225e      	movs	r2, #94	; 0x5e
 801166a:	4604      	mov	r4, r0
 801166c:	6001      	str	r1, [r0, #0]
 801166e:	2100      	movs	r1, #0
 8011670:	4618      	mov	r0, r3
 8011672:	f002 fab3 	bl	8013bdc <memset>
 8011676:	2201      	movs	r2, #1
 8011678:	7502      	strb	r2, [r0, #20]
 801167a:	4620      	mov	r0, r4
 801167c:	bd10      	pop	{r4, pc}
 801167e:	bf00      	nop
 8011680:	2000cc64 	andcs	ip, r0, r4, ror #24

08011684 <NetworkParams::Load()>:
 8011684:	b508      	push	{r3, lr}
 8011686:	2300      	movs	r3, #0
 8011688:	4905      	ldr	r1, [pc, #20]	; (80116a0 <NetworkParams::Load()+0x1c>)
 801168a:	6800      	ldr	r0, [r0, #0]
 801168c:	700b      	strb	r3, [r1, #0]
 801168e:	704b      	strb	r3, [r1, #1]
 8011690:	708b      	strb	r3, [r1, #2]
 8011692:	70cb      	strb	r3, [r1, #3]
 8011694:	b118      	cbz	r0, 801169e <NetworkParams::Load()+0x1a>
 8011696:	6803      	ldr	r3, [r0, #0]
 8011698:	68db      	ldr	r3, [r3, #12]
 801169a:	4798      	blx	r3
 801169c:	2001      	movs	r0, #1
 801169e:	bd08      	pop	{r3, pc}
 80116a0:	2000cc64 	andcs	ip, r0, r4, ror #24

080116a4 <NetworkParams::Load(char const*, unsigned int)>:
 80116a4:	6803      	ldr	r3, [r0, #0]
 80116a6:	b1eb      	cbz	r3, 80116e4 <NetworkParams::Load(char const*, unsigned int)+0x40>
 80116a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80116aa:	2300      	movs	r3, #0
 80116ac:	460e      	mov	r6, r1
 80116ae:	4617      	mov	r7, r2
 80116b0:	4605      	mov	r5, r0
 80116b2:	4c0d      	ldr	r4, [pc, #52]	; (80116e8 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 80116b4:	4602      	mov	r2, r0
 80116b6:	490d      	ldr	r1, [pc, #52]	; (80116ec <NetworkParams::Load(char const*, unsigned int)+0x48>)
 80116b8:	4668      	mov	r0, sp
 80116ba:	7023      	strb	r3, [r4, #0]
 80116bc:	7063      	strb	r3, [r4, #1]
 80116be:	70a3      	strb	r3, [r4, #2]
 80116c0:	70e3      	strb	r3, [r4, #3]
 80116c2:	f001 fc1b 	bl	8012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80116c6:	463a      	mov	r2, r7
 80116c8:	4631      	mov	r1, r6
 80116ca:	4668      	mov	r0, sp
 80116cc:	f001 fc1a 	bl	8012f04 <ReadConfigFile::Read(char const*, unsigned int)>
 80116d0:	6828      	ldr	r0, [r5, #0]
 80116d2:	4621      	mov	r1, r4
 80116d4:	6803      	ldr	r3, [r0, #0]
 80116d6:	689b      	ldr	r3, [r3, #8]
 80116d8:	4798      	blx	r3
 80116da:	4668      	mov	r0, sp
 80116dc:	f001 fc11 	bl	8012f02 <ReadConfigFile::~ReadConfigFile()>
 80116e0:	b003      	add	sp, #12
 80116e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80116e4:	4770      	bx	lr
 80116e6:	bf00      	nop
 80116e8:	2000cc64 	andcs	ip, r0, r4, ror #24
 80116ec:	0801188d 	stmdaeq	r1, {r0, r2, r3, r7, fp, ip}

080116f0 <NetworkParams::callbackFunction(char const*)>:
 80116f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80116f2:	460d      	mov	r5, r1
 80116f4:	f10d 0203 	add.w	r2, sp, #3
 80116f8:	4628      	mov	r0, r5
 80116fa:	495b      	ldr	r1, [pc, #364]	; (8011868 <NetworkParams::callbackFunction(char const*)+0x178>)
 80116fc:	f001 fd10 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011700:	b980      	cbnz	r0, 8011724 <NetworkParams::callbackFunction(char const*)+0x34>
 8011702:	495a      	ldr	r1, [pc, #360]	; (801186c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8011704:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8011708:	680b      	ldr	r3, [r1, #0]
 801170a:	b142      	cbz	r2, 801171e <NetworkParams::callbackFunction(char const*)+0x2e>
 801170c:	f023 0301 	bic.w	r3, r3, #1
 8011710:	3a00      	subs	r2, #0
 8011712:	bf18      	it	ne
 8011714:	2201      	movne	r2, #1
 8011716:	600b      	str	r3, [r1, #0]
 8011718:	750a      	strb	r2, [r1, #20]
 801171a:	b004      	add	sp, #16
 801171c:	bd70      	pop	{r4, r5, r6, pc}
 801171e:	f043 0301 	orr.w	r3, r3, #1
 8011722:	e7f5      	b.n	8011710 <NetworkParams::callbackFunction(char const*)+0x20>
 8011724:	4628      	mov	r0, r5
 8011726:	4952      	ldr	r1, [pc, #328]	; (8011870 <NetworkParams::callbackFunction(char const*)+0x180>)
 8011728:	f10d 0203 	add.w	r2, sp, #3
 801172c:	f001 fcf8 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011730:	b988      	cbnz	r0, 8011756 <NetworkParams::callbackFunction(char const*)+0x66>
 8011732:	4a4e      	ldr	r2, [pc, #312]	; (801186c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8011734:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8011738:	6813      	ldr	r3, [r2, #0]
 801173a:	1e4c      	subs	r4, r1, #1
 801173c:	2c04      	cmp	r4, #4
 801173e:	bf97      	itett	ls
 8011740:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8011744:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8011748:	6013      	strls	r3, [r2, #0]
 801174a:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 801174e:	bf84      	itt	hi
 8011750:	6013      	strhi	r3, [r2, #0]
 8011752:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 8011756:	4628      	mov	r0, r5
 8011758:	4946      	ldr	r1, [pc, #280]	; (8011874 <NetworkParams::callbackFunction(char const*)+0x184>)
 801175a:	aa01      	add	r2, sp, #4
 801175c:	f001 fc82 	bl	8013064 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011760:	b9d0      	cbnz	r0, 8011798 <NetworkParams::callbackFunction(char const*)+0xa8>
 8011762:	9b01      	ldr	r3, [sp, #4]
 8011764:	b2d9      	uxtb	r1, r3
 8011766:	29ac      	cmp	r1, #172	; 0xac
 8011768:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801176c:	d00a      	beq.n	8011784 <NetworkParams::callbackFunction(char const*)+0x94>
 801176e:	29c0      	cmp	r1, #192	; 0xc0
 8011770:	d00c      	beq.n	801178c <NetworkParams::callbackFunction(char const*)+0x9c>
 8011772:	290a      	cmp	r1, #10
 8011774:	d10d      	bne.n	8011792 <NetworkParams::callbackFunction(char const*)+0xa2>
 8011776:	4a3d      	ldr	r2, [pc, #244]	; (801186c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8011778:	6053      	str	r3, [r2, #4]
 801177a:	6813      	ldr	r3, [r2, #0]
 801177c:	f043 0302 	orr.w	r3, r3, #2
 8011780:	6013      	str	r3, [r2, #0]
 8011782:	e7ca      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011784:	3a10      	subs	r2, #16
 8011786:	2a0f      	cmp	r2, #15
 8011788:	d8c7      	bhi.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 801178a:	e7f4      	b.n	8011776 <NetworkParams::callbackFunction(char const*)+0x86>
 801178c:	2aa8      	cmp	r2, #168	; 0xa8
 801178e:	d1c4      	bne.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011790:	e7f1      	b.n	8011776 <NetworkParams::callbackFunction(char const*)+0x86>
 8011792:	2b00      	cmp	r3, #0
 8011794:	d0ef      	beq.n	8011776 <NetworkParams::callbackFunction(char const*)+0x86>
 8011796:	e7c0      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011798:	4628      	mov	r0, r5
 801179a:	4937      	ldr	r1, [pc, #220]	; (8011878 <NetworkParams::callbackFunction(char const*)+0x188>)
 801179c:	aa01      	add	r2, sp, #4
 801179e:	f001 fc61 	bl	8013064 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80117a2:	b970      	cbnz	r0, 80117c2 <NetworkParams::callbackFunction(char const*)+0xd2>
 80117a4:	9a01      	ldr	r2, [sp, #4]
 80117a6:	2a00      	cmp	r2, #0
 80117a8:	d0b7      	beq.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 80117aa:	ba13      	rev	r3, r2
 80117ac:	43d9      	mvns	r1, r3
 80117ae:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 80117b2:	d1b2      	bne.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 80117b4:	4b2d      	ldr	r3, [pc, #180]	; (801186c <NetworkParams::callbackFunction(char const*)+0x17c>)
 80117b6:	609a      	str	r2, [r3, #8]
 80117b8:	681a      	ldr	r2, [r3, #0]
 80117ba:	f042 0204 	orr.w	r2, r2, #4
 80117be:	601a      	str	r2, [r3, #0]
 80117c0:	e7ab      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 80117c2:	4628      	mov	r0, r5
 80117c4:	492d      	ldr	r1, [pc, #180]	; (801187c <NetworkParams::callbackFunction(char const*)+0x18c>)
 80117c6:	aa01      	add	r2, sp, #4
 80117c8:	f001 fc4c 	bl	8013064 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80117cc:	4c27      	ldr	r4, [pc, #156]	; (801186c <NetworkParams::callbackFunction(char const*)+0x17c>)
 80117ce:	b930      	cbnz	r0, 80117de <NetworkParams::callbackFunction(char const*)+0xee>
 80117d0:	9b01      	ldr	r3, [sp, #4]
 80117d2:	60e3      	str	r3, [r4, #12]
 80117d4:	6823      	ldr	r3, [r4, #0]
 80117d6:	f043 0308 	orr.w	r3, r3, #8
 80117da:	6023      	str	r3, [r4, #0]
 80117dc:	e79d      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 80117de:	233f      	movs	r3, #63	; 0x3f
 80117e0:	4628      	mov	r0, r5
 80117e2:	9302      	str	r3, [sp, #8]
 80117e4:	4926      	ldr	r1, [pc, #152]	; (8011880 <NetworkParams::callbackFunction(char const*)+0x190>)
 80117e6:	ab02      	add	r3, sp, #8
 80117e8:	f104 0215 	add.w	r2, r4, #21
 80117ec:	f001 fbbe 	bl	8012f6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 80117f0:	b930      	cbnz	r0, 8011800 <NetworkParams::callbackFunction(char const*)+0x110>
 80117f2:	9b02      	ldr	r3, [sp, #8]
 80117f4:	4423      	add	r3, r4
 80117f6:	7558      	strb	r0, [r3, #21]
 80117f8:	6823      	ldr	r3, [r4, #0]
 80117fa:	f043 0320 	orr.w	r3, r3, #32
 80117fe:	e7ec      	b.n	80117da <NetworkParams::callbackFunction(char const*)+0xea>
 8011800:	4628      	mov	r0, r5
 8011802:	4920      	ldr	r1, [pc, #128]	; (8011884 <NetworkParams::callbackFunction(char const*)+0x194>)
 8011804:	aa01      	add	r2, sp, #4
 8011806:	f001 fc2d 	bl	8013064 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801180a:	b958      	cbnz	r0, 8011824 <NetworkParams::callbackFunction(char const*)+0x134>
 801180c:	9a01      	ldr	r2, [sp, #4]
 801180e:	6823      	ldr	r3, [r4, #0]
 8011810:	b12a      	cbz	r2, 801181e <NetworkParams::callbackFunction(char const*)+0x12e>
 8011812:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011816:	6023      	str	r3, [r4, #0]
 8011818:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 801181c:	e77d      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 801181e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8011822:	e7f8      	b.n	8011816 <NetworkParams::callbackFunction(char const*)+0x126>
 8011824:	4628      	mov	r0, r5
 8011826:	4918      	ldr	r1, [pc, #96]	; (8011888 <NetworkParams::callbackFunction(char const*)+0x198>)
 8011828:	aa03      	add	r2, sp, #12
 801182a:	f001 fbb8 	bl	8012f9e <Sscan::Float(char const*, char const*, float&)>
 801182e:	2800      	cmp	r0, #0
 8011830:	f47f af73 	bne.w	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011834:	9e03      	ldr	r6, [sp, #12]
 8011836:	6825      	ldr	r5, [r4, #0]
 8011838:	4630      	mov	r0, r6
 801183a:	f7f6 fe65 	bl	8008508 <__aeabi_f2iz>
 801183e:	300c      	adds	r0, #12
 8011840:	281a      	cmp	r0, #26
 8011842:	d80a      	bhi.n	801185a <NetworkParams::callbackFunction(char const*)+0x16a>
 8011844:	2100      	movs	r1, #0
 8011846:	4630      	mov	r0, r6
 8011848:	f7f6 fe2c 	bl	80084a4 <__aeabi_fcmpeq>
 801184c:	b928      	cbnz	r0, 801185a <NetworkParams::callbackFunction(char const*)+0x16a>
 801184e:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 8011852:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8011856:	6025      	str	r5, [r4, #0]
 8011858:	e75f      	b.n	801171a <NetworkParams::callbackFunction(char const*)+0x2a>
 801185a:	2300      	movs	r3, #0
 801185c:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8011860:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 8011864:	e7f7      	b.n	8011856 <NetworkParams::callbackFunction(char const*)+0x166>
 8011866:	bf00      	nop
 8011868:	08018039 	stmdaeq	r1, {r0, r3, r4, r5, pc}
 801186c:	2000cc64 	andcs	ip, r0, r4, ror #24
 8011870:	08018017 	stmdaeq	r1, {r0, r1, r2, r4, pc}
 8011874:	08017fe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011878:	08018030 	stmdaeq	r1, {r4, r5, pc}
 801187c:	08018007 	stmdaeq	r1, {r0, r1, r2, pc}
 8011880:	08018027 	stmdaeq	r1, {r0, r1, r2, r5, pc}
 8011884:	08017fed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011888:	08017ff8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

0801188c <NetworkParams::staticCallbackFunction(void*, char const*)>:
 801188c:	f7ff bf30 	b.w	80116f0 <NetworkParams::callbackFunction(char const*)>

08011890 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 8011890:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011892:	4614      	mov	r4, r2
 8011894:	461d      	mov	r5, r3
 8011896:	b089      	sub	sp, #36	; 0x24
 8011898:	2900      	cmp	r1, #0
 801189a:	d040      	beq.n	801191e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 801189c:	225e      	movs	r2, #94	; 0x5e
 801189e:	4891      	ldr	r0, [pc, #580]	; (8011ae4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 80118a0:	f002 f985 	bl	8013bae <memmove>
 80118a4:	4622      	mov	r2, r4
 80118a6:	462b      	mov	r3, r5
 80118a8:	498f      	ldr	r1, [pc, #572]	; (8011ae8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 80118aa:	a805      	add	r0, sp, #20
 80118ac:	f001 fa86 	bl	8012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80118b0:	4c8c      	ldr	r4, [pc, #560]	; (8011ae4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 80118b2:	6823      	ldr	r3, [r4, #0]
 80118b4:	0798      	lsls	r0, r3, #30
 80118b6:	bf5f      	itttt	pl
 80118b8:	4a8c      	ldrpl	r2, [pc, #560]	; (8011aec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80118ba:	6812      	ldrpl	r2, [r2, #0]
 80118bc:	6912      	ldrpl	r2, [r2, #16]
 80118be:	6062      	strpl	r2, [r4, #4]
 80118c0:	0759      	lsls	r1, r3, #29
 80118c2:	bf5f      	itttt	pl
 80118c4:	4a89      	ldrpl	r2, [pc, #548]	; (8011aec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80118c6:	6812      	ldrpl	r2, [r2, #0]
 80118c8:	6992      	ldrpl	r2, [r2, #24]
 80118ca:	60a2      	strpl	r2, [r4, #8]
 80118cc:	071a      	lsls	r2, r3, #28
 80118ce:	bf5f      	itttt	pl
 80118d0:	4a86      	ldrpl	r2, [pc, #536]	; (8011aec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80118d2:	6812      	ldrpl	r2, [r2, #0]
 80118d4:	6952      	ldrpl	r2, [r2, #20]
 80118d6:	60e2      	strpl	r2, [r4, #12]
 80118d8:	069f      	lsls	r7, r3, #26
 80118da:	d40c      	bmi.n	80118f6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 80118dc:	223f      	movs	r2, #63	; 0x3f
 80118de:	4b83      	ldr	r3, [pc, #524]	; (8011aec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80118e0:	4883      	ldr	r0, [pc, #524]	; (8011af0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 80118e2:	681b      	ldr	r3, [r3, #0]
 80118e4:	331b      	adds	r3, #27
 80118e6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80118ea:	b9f1      	cbnz	r1, 801192a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 80118ec:	f002 f976 	bl	8013bdc <memset>
 80118f0:	2300      	movs	r3, #0
 80118f2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80118f6:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80118fa:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80118fe:	42a9      	cmp	r1, r5
 8011900:	d226      	bcs.n	8011950 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 8011902:	9805      	ldr	r0, [sp, #20]
 8011904:	1a6d      	subs	r5, r5, r1
 8011906:	4408      	add	r0, r1
 8011908:	6821      	ldr	r1, [r4, #0]
 801190a:	f89d 201c 	ldrb.w	r2, [sp, #28]
 801190e:	07ce      	lsls	r6, r1, #31
 8011910:	7d23      	ldrb	r3, [r4, #20]
 8011912:	d40f      	bmi.n	8011934 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8011914:	b97a      	cbnz	r2, 8011936 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 8011916:	9300      	str	r3, [sp, #0]
 8011918:	4a76      	ldr	r2, [pc, #472]	; (8011af4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 801191a:	4b77      	ldr	r3, [pc, #476]	; (8011af8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 801191c:	e00e      	b.n	801193c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 801191e:	6800      	ldr	r0, [r0, #0]
 8011920:	4970      	ldr	r1, [pc, #448]	; (8011ae4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 8011922:	6803      	ldr	r3, [r0, #0]
 8011924:	68db      	ldr	r3, [r3, #12]
 8011926:	4798      	blx	r3
 8011928:	e7bc      	b.n	80118a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 801192a:	3a01      	subs	r2, #1
 801192c:	f800 1b01 	strb.w	r1, [r0], #1
 8011930:	d1d9      	bne.n	80118e6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 8011932:	e7dd      	b.n	80118f0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 8011934:	b30a      	cbz	r2, 801197a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 8011936:	9300      	str	r3, [sp, #0]
 8011938:	4a70      	ldr	r2, [pc, #448]	; (8011afc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 801193a:	4b6f      	ldr	r3, [pc, #444]	; (8011af8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 801193c:	4629      	mov	r1, r5
 801193e:	f002 fca5 	bl	801428c <snprintf>
 8011942:	4285      	cmp	r5, r0
 8011944:	bfa2      	ittt	ge
 8011946:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 801194a:	18c0      	addge	r0, r0, r3
 801194c:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8011950:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8011954:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011958:	42a9      	cmp	r1, r5
 801195a:	d221      	bcs.n	80119a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 801195c:	9805      	ldr	r0, [sp, #20]
 801195e:	1a6d      	subs	r5, r5, r1
 8011960:	4408      	add	r0, r1
 8011962:	6821      	ldr	r1, [r4, #0]
 8011964:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8011968:	05c9      	lsls	r1, r1, #23
 801196a:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 801196e:	d408      	bmi.n	8011982 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 8011970:	b94a      	cbnz	r2, 8011986 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 8011972:	9300      	str	r3, [sp, #0]
 8011974:	4a5f      	ldr	r2, [pc, #380]	; (8011af4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8011976:	4b62      	ldr	r3, [pc, #392]	; (8011b00 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8011978:	e008      	b.n	801198c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 801197a:	9300      	str	r3, [sp, #0]
 801197c:	4a61      	ldr	r2, [pc, #388]	; (8011b04 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 801197e:	4b5e      	ldr	r3, [pc, #376]	; (8011af8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 8011980:	e7dc      	b.n	801193c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 8011982:	2a00      	cmp	r2, #0
 8011984:	d03e      	beq.n	8011a04 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 8011986:	9300      	str	r3, [sp, #0]
 8011988:	4a5c      	ldr	r2, [pc, #368]	; (8011afc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 801198a:	4b5d      	ldr	r3, [pc, #372]	; (8011b00 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 801198c:	4629      	mov	r1, r5
 801198e:	f002 fc7d 	bl	801428c <snprintf>
 8011992:	4285      	cmp	r5, r0
 8011994:	bfa2      	ittt	ge
 8011996:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 801199a:	18c0      	addge	r0, r0, r3
 801199c:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80119a0:	4959      	ldr	r1, [pc, #356]	; (8011b08 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 80119a2:	a805      	add	r0, sp, #20
 80119a4:	f001 fa90 	bl	8012ec8 <PropertiesBuilder::AddComment(char const*)>
 80119a8:	6823      	ldr	r3, [r4, #0]
 80119aa:	6862      	ldr	r2, [r4, #4]
 80119ac:	4957      	ldr	r1, [pc, #348]	; (8011b0c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 80119ae:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80119b2:	a805      	add	r0, sp, #20
 80119b4:	f001 fa44 	bl	8012e40 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80119b8:	6823      	ldr	r3, [r4, #0]
 80119ba:	68a2      	ldr	r2, [r4, #8]
 80119bc:	4954      	ldr	r1, [pc, #336]	; (8011b10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 80119be:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80119c2:	a805      	add	r0, sp, #20
 80119c4:	f001 fa3c 	bl	8012e40 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80119c8:	6823      	ldr	r3, [r4, #0]
 80119ca:	4952      	ldr	r1, [pc, #328]	; (8011b14 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 80119cc:	68e2      	ldr	r2, [r4, #12]
 80119ce:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80119d2:	a805      	add	r0, sp, #20
 80119d4:	f001 fa34 	bl	8012e40 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80119d8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80119dc:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80119e0:	42a9      	cmp	r1, r5
 80119e2:	d222      	bcs.n	8011a2a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19a>
 80119e4:	6823      	ldr	r3, [r4, #0]
 80119e6:	9805      	ldr	r0, [sp, #20]
 80119e8:	f013 0f20 	tst.w	r3, #32
 80119ec:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80119f0:	4b3f      	ldr	r3, [pc, #252]	; (8011af0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 80119f2:	4408      	add	r0, r1
 80119f4:	eba5 0501 	sub.w	r5, r5, r1
 80119f8:	d108      	bne.n	8011a0c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 80119fa:	b94a      	cbnz	r2, 8011a10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 80119fc:	9300      	str	r3, [sp, #0]
 80119fe:	4a46      	ldr	r2, [pc, #280]	; (8011b18 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8011a00:	4b46      	ldr	r3, [pc, #280]	; (8011b1c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011a02:	e008      	b.n	8011a16 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 8011a04:	9300      	str	r3, [sp, #0]
 8011a06:	4a3f      	ldr	r2, [pc, #252]	; (8011b04 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8011a08:	4b3d      	ldr	r3, [pc, #244]	; (8011b00 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8011a0a:	e7bf      	b.n	801198c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 8011a0c:	2a00      	cmp	r2, #0
 8011a0e:	d035      	beq.n	8011a7c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>
 8011a10:	9300      	str	r3, [sp, #0]
 8011a12:	4a43      	ldr	r2, [pc, #268]	; (8011b20 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8011a14:	4b41      	ldr	r3, [pc, #260]	; (8011b1c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011a16:	4629      	mov	r1, r5
 8011a18:	f002 fc38 	bl	801428c <snprintf>
 8011a1c:	4285      	cmp	r5, r0
 8011a1e:	bfa2      	ittt	ge
 8011a20:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8011a24:	18c0      	addge	r0, r0, r3
 8011a26:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8011a2a:	493e      	ldr	r1, [pc, #248]	; (8011b24 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 8011a2c:	a805      	add	r0, sp, #20
 8011a2e:	f001 fa4b 	bl	8012ec8 <PropertiesBuilder::AddComment(char const*)>
 8011a32:	6823      	ldr	r3, [r4, #0]
 8011a34:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 8011a38:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8011a3c:	493a      	ldr	r1, [pc, #232]	; (8011b28 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 8011a3e:	a805      	add	r0, sp, #20
 8011a40:	f001 f9fe 	bl	8012e40 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011a44:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011a48:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011a4c:	42ab      	cmp	r3, r5
 8011a4e:	d22a      	bcs.n	8011aa6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x216>
 8011a50:	9f05      	ldr	r7, [sp, #20]
 8011a52:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 8011a56:	441f      	add	r7, r3
 8011a58:	1aed      	subs	r5, r5, r3
 8011a5a:	f7f6 f9d9 	bl	8007e10 <__aeabi_f2d>
 8011a5e:	6823      	ldr	r3, [r4, #0]
 8011a60:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8011a64:	f013 0f80 	tst.w	r3, #128	; 0x80
 8011a68:	f04f 0301 	mov.w	r3, #1
 8011a6c:	d10a      	bne.n	8011a84 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 8011a6e:	b956      	cbnz	r6, 8011a86 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 8011a70:	9300      	str	r3, [sp, #0]
 8011a72:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011a76:	4b2d      	ldr	r3, [pc, #180]	; (8011b2c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8011a78:	4a2d      	ldr	r2, [pc, #180]	; (8011b30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8011a7a:	e009      	b.n	8011a90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 8011a7c:	9300      	str	r3, [sp, #0]
 8011a7e:	4a2d      	ldr	r2, [pc, #180]	; (8011b34 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 8011a80:	4b26      	ldr	r3, [pc, #152]	; (8011b1c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011a82:	e7c8      	b.n	8011a16 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 8011a84:	b346      	cbz	r6, 8011ad8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x248>
 8011a86:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011a8a:	9300      	str	r3, [sp, #0]
 8011a8c:	4a2a      	ldr	r2, [pc, #168]	; (8011b38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 8011a8e:	4b27      	ldr	r3, [pc, #156]	; (8011b2c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8011a90:	4629      	mov	r1, r5
 8011a92:	4638      	mov	r0, r7
 8011a94:	f002 fbfa 	bl	801428c <snprintf>
 8011a98:	4285      	cmp	r5, r0
 8011a9a:	bfa2      	ittt	ge
 8011a9c:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8011aa0:	18c0      	addge	r0, r0, r3
 8011aa2:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8011aa6:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8011aaa:	b17b      	cbz	r3, 8011acc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x23c>
 8011aac:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011ab0:	9b05      	ldr	r3, [sp, #20]
 8011ab2:	4413      	add	r3, r2
 8011ab4:	227d      	movs	r2, #125	; 0x7d
 8011ab6:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011aba:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011abe:	9905      	ldr	r1, [sp, #20]
 8011ac0:	54ca      	strb	r2, [r1, r3]
 8011ac2:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011ac6:	3301      	adds	r3, #1
 8011ac8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011acc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011ad0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ad2:	601a      	str	r2, [r3, #0]
 8011ad4:	b009      	add	sp, #36	; 0x24
 8011ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ad8:	9300      	str	r3, [sp, #0]
 8011ada:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011ade:	4b13      	ldr	r3, [pc, #76]	; (8011b2c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8011ae0:	4a16      	ldr	r2, [pc, #88]	; (8011b3c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 8011ae2:	e7d5      	b.n	8011a90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 8011ae4:	2000cc64 	andcs	ip, r0, r4, ror #24
 8011ae8:	08018042 	stmdaeq	r1, {r1, r6, pc}
 8011aec:	2000cc60 	andcs	ip, r0, r0, ror #24
 8011af0:	2000cc79 	andcs	ip, r0, r9, ror ip
 8011af4:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 8011af8:	08018039 	stmdaeq	r1, {r0, r3, r4, r5, pc}
 8011afc:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 8011b00:	08018017 	stmdaeq	r1, {r0, r1, r2, r4, pc}
 8011b04:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}
 8011b08:	08017fb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b0c:	08017fe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b10:	08018030 	stmdaeq	r1, {r4, r5, pc}
 8011b14:	08018007 	stmdaeq	r1, {r0, r1, r2, pc}
 8011b18:	0801688c 	stmdaeq	r1, {r2, r3, r7, fp, sp, lr}
 8011b1c:	08018027 	stmdaeq	r1, {r0, r1, r2, r5, pc}
 8011b20:	08016881 	stmdaeq	r1, {r0, r7, fp, sp, lr}
 8011b24:	08017fc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b28:	08017fed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b2c:	08017ff8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b30:	08017fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b34:	0801688d 	stmdaeq	r1, {r0, r2, r3, r7, fp, sp, lr}
 8011b38:	08017fcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8011b3c:	08017fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08011b40 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8011b40:	b513      	push	{r0, r1, r4, lr}
 8011b42:	6804      	ldr	r4, [r0, #0]
 8011b44:	b914      	cbnz	r4, 8011b4c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011b46:	601c      	str	r4, [r3, #0]
 8011b48:	b002      	add	sp, #8
 8011b4a:	bd10      	pop	{r4, pc}
 8011b4c:	9300      	str	r3, [sp, #0]
 8011b4e:	4613      	mov	r3, r2
 8011b50:	460a      	mov	r2, r1
 8011b52:	2100      	movs	r1, #0
 8011b54:	f7ff fe9c 	bl	8011890 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 8011b58:	e7f6      	b.n	8011b48 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011b5a <NetworkParams::Dump()>:
 8011b5a:	4770      	bx	lr

08011b5c <memcpy.isra.0>:
 8011b5c:	3801      	subs	r0, #1
 8011b5e:	440a      	add	r2, r1
 8011b60:	4291      	cmp	r1, r2
 8011b62:	d100      	bne.n	8011b66 <memcpy.isra.0+0xa>
 8011b64:	4770      	bx	lr
 8011b66:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011b6a:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011b6e:	e7f7      	b.n	8011b60 <memcpy.isra.0+0x4>

08011b70 <arp_announce>:
 8011b70:	4803      	ldr	r0, [pc, #12]	; (8011b80 <arp_announce+0x10>)
 8011b72:	69c3      	ldr	r3, [r0, #28]
 8011b74:	b113      	cbz	r3, 8011b7c <arp_announce+0xc>
 8011b76:	212a      	movs	r1, #42	; 0x2a
 8011b78:	f003 bbee 	b.w	8015358 <emac_eth_send>
 8011b7c:	4770      	bx	lr
 8011b7e:	bf00      	nop
 8011b80:	2000ccc4 	andcs	ip, r0, r4, asr #25

08011b84 <arp_handle_request>:
 8011b84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011b86:	2204      	movs	r2, #4
 8011b88:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8011b8c:	4604      	mov	r4, r0
 8011b8e:	eb0d 0002 	add.w	r0, sp, r2
 8011b92:	f7ff ffe3 	bl	8011b5c <memcpy.isra.0>
 8011b96:	4b0d      	ldr	r3, [pc, #52]	; (8011bcc <arp_handle_request+0x48>)
 8011b98:	9a01      	ldr	r2, [sp, #4]
 8011b9a:	69db      	ldr	r3, [r3, #28]
 8011b9c:	429a      	cmp	r2, r3
 8011b9e:	d113      	bne.n	8011bc8 <arp_handle_request+0x44>
 8011ba0:	2206      	movs	r2, #6
 8011ba2:	4d0b      	ldr	r5, [pc, #44]	; (8011bd0 <arp_handle_request+0x4c>)
 8011ba4:	18a1      	adds	r1, r4, r2
 8011ba6:	4628      	mov	r0, r5
 8011ba8:	f7ff ffd8 	bl	8011b5c <memcpy.isra.0>
 8011bac:	f104 0116 	add.w	r1, r4, #22
 8011bb0:	f105 0020 	add.w	r0, r5, #32
 8011bb4:	2206      	movs	r2, #6
 8011bb6:	f7ff ffd1 	bl	8011b5c <memcpy.isra.0>
 8011bba:	69e3      	ldr	r3, [r4, #28]
 8011bbc:	212a      	movs	r1, #42	; 0x2a
 8011bbe:	4628      	mov	r0, r5
 8011bc0:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8011bc4:	f003 fbc8 	bl	8015358 <emac_eth_send>
 8011bc8:	b003      	add	sp, #12
 8011bca:	bd30      	pop	{r4, r5, pc}
 8011bcc:	2000ccc4 	andcs	ip, r0, r4, asr #25
 8011bd0:	2000ccf0 	strdcs	ip, [r0], -r0

08011bd4 <arp_handle_reply>:
 8011bd4:	69c1      	ldr	r1, [r0, #28]
 8011bd6:	3016      	adds	r0, #22
 8011bd8:	f000 b80a 	b.w	8011bf0 <arp_cache_update>

08011bdc <arp_send_request>:
 8011bdc:	4b03      	ldr	r3, [pc, #12]	; (8011bec <arp_send_request+0x10>)
 8011bde:	212a      	movs	r1, #42	; 0x2a
 8011be0:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8011be4:	4618      	mov	r0, r3
 8011be6:	f003 bbb7 	b.w	8015358 <emac_eth_send>
 8011bea:	bf00      	nop
 8011bec:	2000cd1c 	andcs	ip, r0, ip, lsl sp

08011bf0 <arp_cache_update>:
 8011bf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011bf2:	4e11      	ldr	r6, [pc, #68]	; (8011c38 <arp_cache_update+0x48>)
 8011bf4:	8833      	ldrh	r3, [r6, #0]
 8011bf6:	2b20      	cmp	r3, #32
 8011bf8:	d018      	beq.n	8011c2c <arp_cache_update+0x3c>
 8011bfa:	2400      	movs	r4, #0
 8011bfc:	220c      	movs	r2, #12
 8011bfe:	4d0f      	ldr	r5, [pc, #60]	; (8011c3c <arp_cache_update+0x4c>)
 8011c00:	b2a7      	uxth	r7, r4
 8011c02:	42bb      	cmp	r3, r7
 8011c04:	d80b      	bhi.n	8011c1e <arp_cache_update+0x2e>
 8011c06:	fb02 5203 	mla	r2, r2, r3, r5
 8011c0a:	1d84      	adds	r4, r0, #6
 8011c0c:	3203      	adds	r2, #3
 8011c0e:	42a0      	cmp	r0, r4
 8011c10:	d10d      	bne.n	8011c2e <arp_cache_update+0x3e>
 8011c12:	220c      	movs	r2, #12
 8011c14:	435a      	muls	r2, r3
 8011c16:	3301      	adds	r3, #1
 8011c18:	50a9      	str	r1, [r5, r2]
 8011c1a:	8033      	strh	r3, [r6, #0]
 8011c1c:	e006      	b.n	8011c2c <arp_cache_update+0x3c>
 8011c1e:	3401      	adds	r4, #1
 8011c20:	fb02 5704 	mla	r7, r2, r4, r5
 8011c24:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8011c28:	428f      	cmp	r7, r1
 8011c2a:	d1e9      	bne.n	8011c00 <arp_cache_update+0x10>
 8011c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c2e:	f810 7b01 	ldrb.w	r7, [r0], #1
 8011c32:	f802 7f01 	strb.w	r7, [r2, #1]!
 8011c36:	e7ea      	b.n	8011c0e <arp_cache_update+0x1e>
 8011c38:	2000cec8 	andcs	ip, r0, r8, asr #29
 8011c3c:	2000cd48 	andcs	ip, r0, r8, asr #26

08011c40 <arp_cache_lookup>:
 8011c40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011c44:	2200      	movs	r2, #0
 8011c46:	4606      	mov	r6, r0
 8011c48:	460c      	mov	r4, r1
 8011c4a:	200c      	movs	r0, #12
 8011c4c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8011cd4 <arp_cache_lookup+0x94>
 8011c50:	fb00 f302 	mul.w	r3, r0, r2
 8011c54:	f853 1008 	ldr.w	r1, [r3, r8]
 8011c58:	42b1      	cmp	r1, r6
 8011c5a:	d10d      	bne.n	8011c78 <arp_cache_lookup+0x38>
 8011c5c:	3304      	adds	r3, #4
 8011c5e:	4443      	add	r3, r8
 8011c60:	3c01      	subs	r4, #1
 8011c62:	1d9a      	adds	r2, r3, #6
 8011c64:	4293      	cmp	r3, r2
 8011c66:	d102      	bne.n	8011c6e <arp_cache_lookup+0x2e>
 8011c68:	4630      	mov	r0, r6
 8011c6a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011c6e:	f813 1b01 	ldrb.w	r1, [r3], #1
 8011c72:	f804 1f01 	strb.w	r1, [r4, #1]!
 8011c76:	e7f5      	b.n	8011c64 <arp_cache_lookup+0x24>
 8011c78:	b111      	cbz	r1, 8011c80 <arp_cache_lookup+0x40>
 8011c7a:	3201      	adds	r2, #1
 8011c7c:	2a20      	cmp	r2, #32
 8011c7e:	d1e7      	bne.n	8011c50 <arp_cache_lookup+0x10>
 8011c80:	2704      	movs	r7, #4
 8011c82:	f8df a054 	ldr.w	sl, [pc, #84]	; 8011cd8 <arp_cache_lookup+0x98>
 8011c86:	f8ba 5000 	ldrh.w	r5, [sl]
 8011c8a:	3f01      	subs	r7, #1
 8011c8c:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8011c90:	d101      	bne.n	8011c96 <arp_cache_lookup+0x56>
 8011c92:	463e      	mov	r6, r7
 8011c94:	e7e8      	b.n	8011c68 <arp_cache_lookup+0x28>
 8011c96:	4630      	mov	r0, r6
 8011c98:	f7ff ffa0 	bl	8011bdc <arp_send_request>
 8011c9c:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8011ca0:	f1b9 0901 	subs.w	r9, r9, #1
 8011ca4:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ca8:	d011      	beq.n	8011cce <arp_cache_lookup+0x8e>
 8011caa:	429d      	cmp	r5, r3
 8011cac:	d00c      	beq.n	8011cc8 <arp_cache_lookup+0x88>
 8011cae:	230c      	movs	r3, #12
 8011cb0:	fb03 8505 	mla	r5, r3, r5, r8
 8011cb4:	3c01      	subs	r4, #1
 8011cb6:	1d2b      	adds	r3, r5, #4
 8011cb8:	350a      	adds	r5, #10
 8011cba:	42ab      	cmp	r3, r5
 8011cbc:	d0d4      	beq.n	8011c68 <arp_cache_lookup+0x28>
 8011cbe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011cc2:	f804 2f01 	strb.w	r2, [r4, #1]!
 8011cc6:	e7f8      	b.n	8011cba <arp_cache_lookup+0x7a>
 8011cc8:	f7f5 fc5a 	bl	8007580 <net_handle>
 8011ccc:	e7e8      	b.n	8011ca0 <arp_cache_lookup+0x60>
 8011cce:	429d      	cmp	r5, r3
 8011cd0:	d0db      	beq.n	8011c8a <arp_cache_lookup+0x4a>
 8011cd2:	e7ec      	b.n	8011cae <arp_cache_lookup+0x6e>
 8011cd4:	2000cd48 	andcs	ip, r0, r8, asr #26
 8011cd8:	2000cec8 	andcs	ip, r0, r8, asr #29

08011cdc <_parse_response>:
 8011cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ce0:	460c      	mov	r4, r1
 8011ce2:	4e5b      	ldr	r6, [pc, #364]	; (8011e50 <_parse_response+0x174>)
 8011ce4:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 8011ce8:	6837      	ldr	r7, [r6, #0]
 8011cea:	b2c5      	uxtb	r5, r0
 8011cec:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8011cf0:	f7f5 fc46 	bl	8007580 <net_handle>
 8011cf4:	f44f 7209 	mov.w	r2, #548	; 0x224
 8011cf8:	4628      	mov	r0, r5
 8011cfa:	f8cd 8000 	str.w	r8, [sp]
 8011cfe:	ab0a      	add	r3, sp, #40	; 0x28
 8011d00:	a90b      	add	r1, sp, #44	; 0x2c
 8011d02:	f7fe fcfd 	bl	8010700 <udp_recv>
 8011d06:	2800      	cmp	r0, #0
 8011d08:	d05f      	beq.n	8011dca <_parse_response+0xee>
 8011d0a:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8011d0e:	2b43      	cmp	r3, #67	; 0x43
 8011d10:	d15b      	bne.n	8011dca <_parse_response+0xee>
 8011d12:	aa12      	add	r2, sp, #72	; 0x48
 8011d14:	1e63      	subs	r3, r4, #1
 8011d16:	1d61      	adds	r1, r4, #5
 8011d18:	428b      	cmp	r3, r1
 8011d1a:	d150      	bne.n	8011dbe <_parse_response+0xe2>
 8011d1c:	2100      	movs	r1, #0
 8011d1e:	ab0b      	add	r3, sp, #44	; 0x2c
 8011d20:	181c      	adds	r4, r3, r0
 8011d22:	4608      	mov	r0, r1
 8011d24:	4b4b      	ldr	r3, [pc, #300]	; (8011e54 <_parse_response+0x178>)
 8011d26:	e9cd 1104 	strd	r1, r1, [sp, #16]
 8011d2a:	781a      	ldrb	r2, [r3, #0]
 8011d2c:	f893 b001 	ldrb.w	fp, [r3, #1]
 8011d30:	f893 c002 	ldrb.w	ip, [r3, #2]
 8011d34:	78dd      	ldrb	r5, [r3, #3]
 8011d36:	4b48      	ldr	r3, [pc, #288]	; (8011e58 <_parse_response+0x17c>)
 8011d38:	9207      	str	r2, [sp, #28]
 8011d3a:	781a      	ldrb	r2, [r3, #0]
 8011d3c:	789f      	ldrb	r7, [r3, #2]
 8011d3e:	78de      	ldrb	r6, [r3, #3]
 8011d40:	9206      	str	r2, [sp, #24]
 8011d42:	785a      	ldrb	r2, [r3, #1]
 8011d44:	4b45      	ldr	r3, [pc, #276]	; (8011e5c <_parse_response+0x180>)
 8011d46:	9203      	str	r2, [sp, #12]
 8011d48:	f893 a000 	ldrb.w	sl, [r3]
 8011d4c:	f893 9001 	ldrb.w	r9, [r3, #1]
 8011d50:	f893 8002 	ldrb.w	r8, [r3, #2]
 8011d54:	f893 e003 	ldrb.w	lr, [r3, #3]
 8011d58:	ab47      	add	r3, sp, #284	; 0x11c
 8011d5a:	42a3      	cmp	r3, r4
 8011d5c:	d33f      	bcc.n	8011dde <_parse_response+0x102>
 8011d5e:	9b04      	ldr	r3, [sp, #16]
 8011d60:	b143      	cbz	r3, 8011d74 <_parse_response+0x98>
 8011d62:	4b3e      	ldr	r3, [pc, #248]	; (8011e5c <_parse_response+0x180>)
 8011d64:	f883 a000 	strb.w	sl, [r3]
 8011d68:	f883 9001 	strb.w	r9, [r3, #1]
 8011d6c:	f883 8002 	strb.w	r8, [r3, #2]
 8011d70:	f883 e003 	strb.w	lr, [r3, #3]
 8011d74:	9b05      	ldr	r3, [sp, #20]
 8011d76:	b133      	cbz	r3, 8011d86 <_parse_response+0xaa>
 8011d78:	4b37      	ldr	r3, [pc, #220]	; (8011e58 <_parse_response+0x17c>)
 8011d7a:	9a06      	ldr	r2, [sp, #24]
 8011d7c:	709f      	strb	r7, [r3, #2]
 8011d7e:	701a      	strb	r2, [r3, #0]
 8011d80:	9a03      	ldr	r2, [sp, #12]
 8011d82:	70de      	strb	r6, [r3, #3]
 8011d84:	705a      	strb	r2, [r3, #1]
 8011d86:	b139      	cbz	r1, 8011d98 <_parse_response+0xbc>
 8011d88:	4b32      	ldr	r3, [pc, #200]	; (8011e54 <_parse_response+0x178>)
 8011d8a:	9a07      	ldr	r2, [sp, #28]
 8011d8c:	f883 b001 	strb.w	fp, [r3, #1]
 8011d90:	701a      	strb	r2, [r3, #0]
 8011d92:	f883 c002 	strb.w	ip, [r3, #2]
 8011d96:	70dd      	strb	r5, [r3, #3]
 8011d98:	2802      	cmp	r0, #2
 8011d9a:	d10c      	bne.n	8011db6 <_parse_response+0xda>
 8011d9c:	4b30      	ldr	r3, [pc, #192]	; (8011e60 <_parse_response+0x184>)
 8011d9e:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 8011da2:	701a      	strb	r2, [r3, #0]
 8011da4:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 8011da8:	705a      	strb	r2, [r3, #1]
 8011daa:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 8011dae:	709a      	strb	r2, [r3, #2]
 8011db0:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 8011db4:	70da      	strb	r2, [r3, #3]
 8011db6:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 8011dba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dbe:	f812 cb01 	ldrb.w	ip, [r2], #1
 8011dc2:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8011dc6:	45e6      	cmp	lr, ip
 8011dc8:	d0a6      	beq.n	8011d18 <_parse_response+0x3c>
 8011dca:	6833      	ldr	r3, [r6, #0]
 8011dcc:	1bdb      	subs	r3, r3, r7
 8011dce:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011dd2:	d38b      	bcc.n	8011cec <_parse_response+0x10>
 8011dd4:	2800      	cmp	r0, #0
 8011dd6:	d1a1      	bne.n	8011d1c <_parse_response+0x40>
 8011dd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011ddc:	e7eb      	b.n	8011db6 <_parse_response+0xda>
 8011dde:	781a      	ldrb	r2, [r3, #0]
 8011de0:	2a35      	cmp	r2, #53	; 0x35
 8011de2:	d011      	beq.n	8011e08 <_parse_response+0x12c>
 8011de4:	d808      	bhi.n	8011df8 <_parse_response+0x11c>
 8011de6:	2a01      	cmp	r2, #1
 8011de8:	d011      	beq.n	8011e0e <_parse_response+0x132>
 8011dea:	2a03      	cmp	r2, #3
 8011dec:	d01a      	beq.n	8011e24 <_parse_response+0x148>
 8011dee:	b14a      	cbz	r2, 8011e04 <_parse_response+0x128>
 8011df0:	1c9a      	adds	r2, r3, #2
 8011df2:	785b      	ldrb	r3, [r3, #1]
 8011df4:	4413      	add	r3, r2
 8011df6:	e7b0      	b.n	8011d5a <_parse_response+0x7e>
 8011df8:	2a36      	cmp	r2, #54	; 0x36
 8011dfa:	d01f      	beq.n	8011e3c <_parse_response+0x160>
 8011dfc:	2aff      	cmp	r2, #255	; 0xff
 8011dfe:	d1f7      	bne.n	8011df0 <_parse_response+0x114>
 8011e00:	4623      	mov	r3, r4
 8011e02:	e7aa      	b.n	8011d5a <_parse_response+0x7e>
 8011e04:	3301      	adds	r3, #1
 8011e06:	e7a8      	b.n	8011d5a <_parse_response+0x7e>
 8011e08:	7898      	ldrb	r0, [r3, #2]
 8011e0a:	3303      	adds	r3, #3
 8011e0c:	e7a5      	b.n	8011d5a <_parse_response+0x7e>
 8011e0e:	f893 a002 	ldrb.w	sl, [r3, #2]
 8011e12:	f893 9003 	ldrb.w	r9, [r3, #3]
 8011e16:	f893 8004 	ldrb.w	r8, [r3, #4]
 8011e1a:	f893 e005 	ldrb.w	lr, [r3, #5]
 8011e1e:	9204      	str	r2, [sp, #16]
 8011e20:	3306      	adds	r3, #6
 8011e22:	e79a      	b.n	8011d5a <_parse_response+0x7e>
 8011e24:	789a      	ldrb	r2, [r3, #2]
 8011e26:	791f      	ldrb	r7, [r3, #4]
 8011e28:	9206      	str	r2, [sp, #24]
 8011e2a:	78da      	ldrb	r2, [r3, #3]
 8011e2c:	795e      	ldrb	r6, [r3, #5]
 8011e2e:	9203      	str	r2, [sp, #12]
 8011e30:	785a      	ldrb	r2, [r3, #1]
 8011e32:	4413      	add	r3, r2
 8011e34:	2201      	movs	r2, #1
 8011e36:	3302      	adds	r3, #2
 8011e38:	9205      	str	r2, [sp, #20]
 8011e3a:	e78e      	b.n	8011d5a <_parse_response+0x7e>
 8011e3c:	789a      	ldrb	r2, [r3, #2]
 8011e3e:	f893 b003 	ldrb.w	fp, [r3, #3]
 8011e42:	f893 c004 	ldrb.w	ip, [r3, #4]
 8011e46:	795d      	ldrb	r5, [r3, #5]
 8011e48:	2101      	movs	r1, #1
 8011e4a:	9207      	str	r2, [sp, #28]
 8011e4c:	3306      	adds	r3, #6
 8011e4e:	e784      	b.n	8011d5a <_parse_response+0x7e>
 8011e50:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8011e54:	2000d0fc 	strdcs	sp, [r0], -ip
 8011e58:	2000cecc 	andcs	ip, r0, ip, asr #29
 8011e5c:	2000ced4 	ldrdcs	ip, [r0], -r4
 8011e60:	2000ced0 	ldrdcs	ip, [r0], -r0

08011e64 <memcpy.isra.0>:
 8011e64:	3801      	subs	r0, #1
 8011e66:	440a      	add	r2, r1
 8011e68:	4291      	cmp	r1, r2
 8011e6a:	d100      	bne.n	8011e6e <memcpy.isra.0+0xa>
 8011e6c:	4770      	bx	lr
 8011e6e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011e72:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011e76:	e7f7      	b.n	8011e68 <memcpy.isra.0+0x4>

08011e78 <dhcp_client>:
 8011e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e7c:	b087      	sub	sp, #28
 8011e7e:	9203      	str	r2, [sp, #12]
 8011e80:	4a77      	ldr	r2, [pc, #476]	; (8012060 <dhcp_client+0x1e8>)
 8011e82:	460f      	mov	r7, r1
 8011e84:	4605      	mov	r5, r0
 8011e86:	f44f 7309 	mov.w	r3, #548	; 0x224
 8011e8a:	4614      	mov	r4, r2
 8011e8c:	2100      	movs	r1, #0
 8011e8e:	3b01      	subs	r3, #1
 8011e90:	f802 1b01 	strb.w	r1, [r2], #1
 8011e94:	d1fb      	bne.n	8011e8e <dhcp_client+0x16>
 8011e96:	f240 1301 	movw	r3, #257	; 0x101
 8011e9a:	2206      	movs	r2, #6
 8011e9c:	4629      	mov	r1, r5
 8011e9e:	4871      	ldr	r0, [pc, #452]	; (8012064 <dhcp_client+0x1ec>)
 8011ea0:	8023      	strh	r3, [r4, #0]
 8011ea2:	70a2      	strb	r2, [r4, #2]
 8011ea4:	f7ff ffde 	bl	8011e64 <memcpy.isra.0>
 8011ea8:	4b6f      	ldr	r3, [pc, #444]	; (8012068 <dhcp_client+0x1f0>)
 8011eaa:	2044      	movs	r0, #68	; 0x44
 8011eac:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8011eb0:	f240 1335 	movw	r3, #309	; 0x135
 8011eb4:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8011eb8:	f7fe fbe8 	bl	801068c <udp_bind>
 8011ebc:	1e06      	subs	r6, r0, #0
 8011ebe:	f2c0 80c9 	blt.w	8012054 <dhcp_client+0x1dc>
 8011ec2:	f04f 0915 	mov.w	r9, #21
 8011ec6:	f8df a198 	ldr.w	sl, [pc, #408]	; 8012060 <dhcp_client+0x1e8>
 8011eca:	f1b9 0901 	subs.w	r9, r9, #1
 8011ece:	d11f      	bne.n	8011f10 <dhcp_client+0x98>
 8011ed0:	464c      	mov	r4, r9
 8011ed2:	2044      	movs	r0, #68	; 0x44
 8011ed4:	f7fe fbf4 	bl	80106c0 <udp_unbind>
 8011ed8:	2c00      	cmp	r4, #0
 8011eda:	f000 80be 	beq.w	801205a <dhcp_client+0x1e2>
 8011ede:	2204      	movs	r2, #4
 8011ee0:	4962      	ldr	r1, [pc, #392]	; (801206c <dhcp_client+0x1f4>)
 8011ee2:	a805      	add	r0, sp, #20
 8011ee4:	f7ff ffbe 	bl	8011e64 <memcpy.isra.0>
 8011ee8:	9b05      	ldr	r3, [sp, #20]
 8011eea:	2204      	movs	r2, #4
 8011eec:	4960      	ldr	r1, [pc, #384]	; (8012070 <dhcp_client+0x1f8>)
 8011eee:	603b      	str	r3, [r7, #0]
 8011ef0:	a805      	add	r0, sp, #20
 8011ef2:	f7ff ffb7 	bl	8011e64 <memcpy.isra.0>
 8011ef6:	9b05      	ldr	r3, [sp, #20]
 8011ef8:	a805      	add	r0, sp, #20
 8011efa:	60bb      	str	r3, [r7, #8]
 8011efc:	2204      	movs	r2, #4
 8011efe:	495d      	ldr	r1, [pc, #372]	; (8012074 <dhcp_client+0x1fc>)
 8011f00:	f7ff ffb0 	bl	8011e64 <memcpy.isra.0>
 8011f04:	2000      	movs	r0, #0
 8011f06:	9b05      	ldr	r3, [sp, #20]
 8011f08:	607b      	str	r3, [r7, #4]
 8011f0a:	b007      	add	sp, #28
 8011f0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f10:	f643 5301 	movw	r3, #15617	; 0x3d01
 8011f14:	f240 1807 	movw	r8, #263	; 0x107
 8011f18:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011f1c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011f20:	782b      	ldrb	r3, [r5, #0]
 8011f22:	4a55      	ldr	r2, [pc, #340]	; (8012078 <dhcp_client+0x200>)
 8011f24:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011f28:	786b      	ldrb	r3, [r5, #1]
 8011f2a:	fa5f fb86 	uxtb.w	fp, r6
 8011f2e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011f32:	78ab      	ldrb	r3, [r5, #2]
 8011f34:	4651      	mov	r1, sl
 8011f36:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011f3a:	78eb      	ldrb	r3, [r5, #3]
 8011f3c:	4658      	mov	r0, fp
 8011f3e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011f42:	792b      	ldrb	r3, [r5, #4]
 8011f44:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011f48:	796b      	ldrb	r3, [r5, #5]
 8011f4a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011f4e:	4b4b      	ldr	r3, [pc, #300]	; (801207c <dhcp_client+0x204>)
 8011f50:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8011f54:	23ff      	movs	r3, #255	; 0xff
 8011f56:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8011f5a:	2343      	movs	r3, #67	; 0x43
 8011f5c:	f240 1205 	movw	r2, #261	; 0x105
 8011f60:	9300      	str	r3, [sp, #0]
 8011f62:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011f66:	f7fe fc27 	bl	80107b8 <udp_send>
 8011f6a:	4629      	mov	r1, r5
 8011f6c:	4630      	mov	r0, r6
 8011f6e:	f7ff feb5 	bl	8011cdc <_parse_response>
 8011f72:	2802      	cmp	r0, #2
 8011f74:	d1a9      	bne.n	8011eca <dhcp_client+0x52>
 8011f76:	f643 5303 	movw	r3, #15619	; 0x3d03
 8011f7a:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011f7e:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011f82:	782b      	ldrb	r3, [r5, #0]
 8011f84:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8012080 <dhcp_client+0x208>
 8011f88:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011f8c:	786b      	ldrb	r3, [r5, #1]
 8011f8e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011f92:	78ab      	ldrb	r3, [r5, #2]
 8011f94:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011f98:	78eb      	ldrb	r3, [r5, #3]
 8011f9a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011f9e:	792b      	ldrb	r3, [r5, #4]
 8011fa0:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011fa4:	796b      	ldrb	r3, [r5, #5]
 8011fa6:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011faa:	f240 4332 	movw	r3, #1074	; 0x432
 8011fae:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8011fb2:	4b2e      	ldr	r3, [pc, #184]	; (801206c <dhcp_client+0x1f4>)
 8011fb4:	881a      	ldrh	r2, [r3, #0]
 8011fb6:	885b      	ldrh	r3, [r3, #2]
 8011fb8:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8011fbc:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011fc0:	f240 4336 	movw	r3, #1078	; 0x436
 8011fc4:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8011fc8:	4b2e      	ldr	r3, [pc, #184]	; (8012084 <dhcp_client+0x20c>)
 8011fca:	221e      	movs	r2, #30
 8011fcc:	681b      	ldr	r3, [r3, #0]
 8011fce:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8011fd2:	230c      	movs	r3, #12
 8011fd4:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8011fd8:	9b03      	ldr	r3, [sp, #12]
 8011fda:	1e58      	subs	r0, r3, #1
 8011fdc:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8011fe0:	f1a2 0e1e 	sub.w	lr, r2, #30
 8011fe4:	1c51      	adds	r1, r2, #1
 8011fe6:	bb8b      	cbnz	r3, 801204c <dhcp_client+0x1d4>
 8011fe8:	2037      	movs	r0, #55	; 0x37
 8011fea:	18a3      	adds	r3, r4, r2
 8011fec:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8011ff0:	2006      	movs	r0, #6
 8011ff2:	4421      	add	r1, r4
 8011ff4:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8011ff8:	2103      	movs	r1, #3
 8011ffa:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8011ffe:	210f      	movs	r1, #15
 8012000:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8012004:	213a      	movs	r1, #58	; 0x3a
 8012006:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 801200a:	213b      	movs	r1, #59	; 0x3b
 801200c:	f04f 0801 	mov.w	r8, #1
 8012010:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8012014:	21ff      	movs	r1, #255	; 0xff
 8012016:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 801201a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 801201e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8012022:	2343      	movs	r3, #67	; 0x43
 8012024:	32f5      	adds	r2, #245	; 0xf5
 8012026:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801202a:	4651      	mov	r1, sl
 801202c:	9300      	str	r3, [sp, #0]
 801202e:	b292      	uxth	r2, r2
 8012030:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012034:	4658      	mov	r0, fp
 8012036:	f7fe fbbf 	bl	80107b8 <udp_send>
 801203a:	4629      	mov	r1, r5
 801203c:	4630      	mov	r0, r6
 801203e:	f7ff fe4d 	bl	8011cdc <_parse_response>
 8012042:	2805      	cmp	r0, #5
 8012044:	f47f af41 	bne.w	8011eca <dhcp_client+0x52>
 8012048:	4644      	mov	r4, r8
 801204a:	e742      	b.n	8011ed2 <dhcp_client+0x5a>
 801204c:	460a      	mov	r2, r1
 801204e:	f80c 3b01 	strb.w	r3, [ip], #1
 8012052:	e7c3      	b.n	8011fdc <dhcp_client+0x164>
 8012054:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012058:	e757      	b.n	8011f0a <dhcp_client+0x92>
 801205a:	f06f 0001 	mvn.w	r0, #1
 801205e:	e754      	b.n	8011f0a <dhcp_client+0x92>
 8012060:	2000ced8 	ldrdcs	ip, [r0], -r8
 8012064:	2000cef4 	strdcs	ip, [r0], -r4
 8012068:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 801206c:	2000ced0 	ldrdcs	ip, [r0], -r0
 8012070:	2000cecc 	andcs	ip, r0, ip, asr #29
 8012074:	2000ced4 	ldrdcs	ip, [r0], -r4
 8012078:	03010637 	movweq	r0, #5687	; 0x1637
 801207c:	3b3a0f06 	blcc	8e95c9c <__exidx_end+0xe7d568>
 8012080:	2000cfe2 	andcs	ip, r0, r2, ror #31
 8012084:	2000d0fc 	strdcs	sp, [r0], -ip

08012088 <dhcp_client_release>:
 8012088:	b507      	push	{r0, r1, r2, lr}
 801208a:	2044      	movs	r0, #68	; 0x44
 801208c:	f7fe fafe 	bl	801068c <udp_bind>
 8012090:	f243 6307 	movw	r3, #13831	; 0x3607
 8012094:	4911      	ldr	r1, [pc, #68]	; (80120dc <dhcp_client_release+0x54>)
 8012096:	b2c0      	uxtb	r0, r0
 8012098:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 801209c:	2304      	movs	r3, #4
 801209e:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 80120a2:	4b0f      	ldr	r3, [pc, #60]	; (80120e0 <dhcp_client_release+0x58>)
 80120a4:	781a      	ldrb	r2, [r3, #0]
 80120a6:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 80120aa:	785a      	ldrb	r2, [r3, #1]
 80120ac:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 80120b0:	789a      	ldrb	r2, [r3, #2]
 80120b2:	78db      	ldrb	r3, [r3, #3]
 80120b4:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 80120b8:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 80120bc:	23ff      	movs	r3, #255	; 0xff
 80120be:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 80120c2:	2343      	movs	r3, #67	; 0x43
 80120c4:	22fa      	movs	r2, #250	; 0xfa
 80120c6:	9300      	str	r3, [sp, #0]
 80120c8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80120cc:	f7fe fb74 	bl	80107b8 <udp_send>
 80120d0:	2044      	movs	r0, #68	; 0x44
 80120d2:	b003      	add	sp, #12
 80120d4:	f85d eb04 	ldr.w	lr, [sp], #4
 80120d8:	f7fe baf2 	b.w	80106c0 <udp_unbind>
 80120dc:	2000ced8 	ldrdcs	ip, [r0], -r8
 80120e0:	2000d0fc 	strdcs	sp, [r0], -ip

080120e4 <memcpy.isra.0>:
 80120e4:	3801      	subs	r0, #1
 80120e6:	440a      	add	r2, r1
 80120e8:	4291      	cmp	r1, r2
 80120ea:	d100      	bne.n	80120ee <memcpy.isra.0+0xa>
 80120ec:	4770      	bx	lr
 80120ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 80120f2:	f800 3f01 	strb.w	r3, [r0, #1]!
 80120f6:	e7f7      	b.n	80120e8 <memcpy.isra.0+0x4>

080120f8 <_send_report>:
 80120f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80120fa:	491c      	ldr	r1, [pc, #112]	; (801216c <_send_report+0x74>)
 80120fc:	4c1c      	ldr	r4, [pc, #112]	; (8012170 <_send_report+0x78>)
 80120fe:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8012102:	9001      	str	r0, [sp, #4]
 8012104:	70cb      	strb	r3, [r1, #3]
 8012106:	f3c0 4307 	ubfx	r3, r0, #16, #8
 801210a:	f3c0 6007 	ubfx	r0, r0, #24, #8
 801210e:	710b      	strb	r3, [r1, #4]
 8012110:	7148      	strb	r0, [r1, #5]
 8012112:	2206      	movs	r2, #6
 8012114:	4620      	mov	r0, r4
 8012116:	f7ff ffe5 	bl	80120e4 <memcpy.isra.0>
 801211a:	2204      	movs	r2, #4
 801211c:	2700      	movs	r7, #0
 801211e:	4d15      	ldr	r5, [pc, #84]	; (8012174 <_send_report+0x7c>)
 8012120:	eb0d 0102 	add.w	r1, sp, r2
 8012124:	882b      	ldrh	r3, [r5, #0]
 8012126:	f104 001e 	add.w	r0, r4, #30
 801212a:	f104 060e 	add.w	r6, r4, #14
 801212e:	8263      	strh	r3, [r4, #18]
 8012130:	f7ff ffd8 	bl	80120e4 <memcpy.isra.0>
 8012134:	2118      	movs	r1, #24
 8012136:	4630      	mov	r0, r6
 8012138:	8327      	strh	r7, [r4, #24]
 801213a:	f000 f8c6 	bl	80122ca <net_chksum>
 801213e:	2204      	movs	r2, #4
 8012140:	8320      	strh	r0, [r4, #24]
 8012142:	eb0d 0102 	add.w	r1, sp, r2
 8012146:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801214a:	f7ff ffcb 	bl	80120e4 <memcpy.isra.0>
 801214e:	2120      	movs	r1, #32
 8012150:	4630      	mov	r0, r6
 8012152:	8527      	strh	r7, [r4, #40]	; 0x28
 8012154:	f000 f8b9 	bl	80122ca <net_chksum>
 8012158:	212e      	movs	r1, #46	; 0x2e
 801215a:	8520      	strh	r0, [r4, #40]	; 0x28
 801215c:	4620      	mov	r0, r4
 801215e:	f003 f8fb 	bl	8015358 <emac_eth_send>
 8012162:	882b      	ldrh	r3, [r5, #0]
 8012164:	3301      	adds	r3, #1
 8012166:	802b      	strh	r3, [r5, #0]
 8012168:	b003      	add	sp, #12
 801216a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801216c:	2000d258 	andcs	sp, r0, r8, asr r2
 8012170:	2000d260 	andcs	sp, r0, r0, ror #4
 8012174:	2000d220 	andcs	sp, r0, r0, lsr #4

08012178 <igmp_set_ip>:
 8012178:	b507      	push	{r0, r1, r2, lr}
 801217a:	2204      	movs	r2, #4
 801217c:	6803      	ldr	r3, [r0, #0]
 801217e:	eb0d 0102 	add.w	r1, sp, r2
 8012182:	4806      	ldr	r0, [pc, #24]	; (801219c <igmp_set_ip+0x24>)
 8012184:	9301      	str	r3, [sp, #4]
 8012186:	f7ff ffad 	bl	80120e4 <memcpy.isra.0>
 801218a:	2204      	movs	r2, #4
 801218c:	4804      	ldr	r0, [pc, #16]	; (80121a0 <igmp_set_ip+0x28>)
 801218e:	eb0d 0102 	add.w	r1, sp, r2
 8012192:	f7ff ffa7 	bl	80120e4 <memcpy.isra.0>
 8012196:	b003      	add	sp, #12
 8012198:	f85d fb04 	ldr.w	pc, [sp], #4
 801219c:	2000d27a 	andcs	sp, r0, sl, ror r2
 80121a0:	2000d242 	andcs	sp, r0, r2, asr #4

080121a4 <igmp_timer>:
 80121a4:	b570      	push	{r4, r5, r6, lr}
 80121a6:	2500      	movs	r5, #0
 80121a8:	2602      	movs	r6, #2
 80121aa:	4c0a      	ldr	r4, [pc, #40]	; (80121d4 <igmp_timer+0x30>)
 80121ac:	7963      	ldrb	r3, [r4, #5]
 80121ae:	2b01      	cmp	r3, #1
 80121b0:	d109      	bne.n	80121c6 <igmp_timer+0x22>
 80121b2:	7923      	ldrb	r3, [r4, #4]
 80121b4:	b13b      	cbz	r3, 80121c6 <igmp_timer+0x22>
 80121b6:	3b01      	subs	r3, #1
 80121b8:	b2db      	uxtb	r3, r3
 80121ba:	7123      	strb	r3, [r4, #4]
 80121bc:	b91b      	cbnz	r3, 80121c6 <igmp_timer+0x22>
 80121be:	6820      	ldr	r0, [r4, #0]
 80121c0:	f7ff ff9a 	bl	80120f8 <_send_report>
 80121c4:	7166      	strb	r6, [r4, #5]
 80121c6:	3501      	adds	r5, #1
 80121c8:	2d24      	cmp	r5, #36	; 0x24
 80121ca:	f104 0408 	add.w	r4, r4, #8
 80121ce:	d1ed      	bne.n	80121ac <igmp_timer+0x8>
 80121d0:	bd70      	pop	{r4, r5, r6, pc}
 80121d2:	bf00      	nop
 80121d4:	2000d100 	andcs	sp, r0, r0, lsl #2

080121d8 <igmp_join>:
 80121d8:	b538      	push	{r3, r4, r5, lr}
 80121da:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 80121de:	2be0      	cmp	r3, #224	; 0xe0
 80121e0:	d11b      	bne.n	801221a <igmp_join+0x42>
 80121e2:	4911      	ldr	r1, [pc, #68]	; (8012228 <igmp_join+0x50>)
 80121e4:	680c      	ldr	r4, [r1, #0]
 80121e6:	2c24      	cmp	r4, #36	; 0x24
 80121e8:	d01a      	beq.n	8012220 <igmp_join+0x48>
 80121ea:	2300      	movs	r3, #0
 80121ec:	4a0f      	ldr	r2, [pc, #60]	; (801222c <igmp_join+0x54>)
 80121ee:	429c      	cmp	r4, r3
 80121f0:	dc0d      	bgt.n	801220e <igmp_join+0x36>
 80121f2:	f44f 7381 	mov.w	r3, #258	; 0x102
 80121f6:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 80121fa:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 80121fe:	8093      	strh	r3, [r2, #4]
 8012200:	1c63      	adds	r3, r4, #1
 8012202:	600b      	str	r3, [r1, #0]
 8012204:	f7ff ff78 	bl	80120f8 <_send_report>
 8012208:	4623      	mov	r3, r4
 801220a:	4618      	mov	r0, r3
 801220c:	bd38      	pop	{r3, r4, r5, pc}
 801220e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8012212:	4285      	cmp	r5, r0
 8012214:	d0f9      	beq.n	801220a <igmp_join+0x32>
 8012216:	3301      	adds	r3, #1
 8012218:	e7e9      	b.n	80121ee <igmp_join+0x16>
 801221a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801221e:	e7f4      	b.n	801220a <igmp_join+0x32>
 8012220:	f06f 0301 	mvn.w	r3, #1
 8012224:	e7f1      	b.n	801220a <igmp_join+0x32>
 8012226:	bf00      	nop
 8012228:	2000d224 	andcs	sp, r0, r4, lsr #4
 801222c:	2000d100 	andcs	sp, r0, r0, lsl #2

08012230 <igmp_leave>:
 8012230:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8012234:	2600      	movs	r6, #0
 8012236:	4f1c      	ldr	r7, [pc, #112]	; (80122a8 <igmp_leave+0x78>)
 8012238:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 801223c:	4283      	cmp	r3, r0
 801223e:	d007      	beq.n	8012250 <igmp_leave+0x20>
 8012240:	3601      	adds	r6, #1
 8012242:	2e24      	cmp	r6, #36	; 0x24
 8012244:	d1f8      	bne.n	8012238 <igmp_leave+0x8>
 8012246:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801224a:	b002      	add	sp, #8
 801224c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012250:	2400      	movs	r4, #0
 8012252:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80122ac <igmp_leave+0x7c>
 8012256:	4d16      	ldr	r5, [pc, #88]	; (80122b0 <igmp_leave+0x80>)
 8012258:	f8b8 3000 	ldrh.w	r3, [r8]
 801225c:	2118      	movs	r1, #24
 801225e:	9001      	str	r0, [sp, #4]
 8012260:	4814      	ldr	r0, [pc, #80]	; (80122b4 <igmp_leave+0x84>)
 8012262:	826b      	strh	r3, [r5, #18]
 8012264:	832c      	strh	r4, [r5, #24]
 8012266:	f000 f830 	bl	80122ca <net_chksum>
 801226a:	2204      	movs	r2, #4
 801226c:	8328      	strh	r0, [r5, #24]
 801226e:	eb0d 0102 	add.w	r1, sp, r2
 8012272:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8012276:	f7ff ff35 	bl	80120e4 <memcpy.isra.0>
 801227a:	2120      	movs	r1, #32
 801227c:	f105 000e 	add.w	r0, r5, #14
 8012280:	852c      	strh	r4, [r5, #40]	; 0x28
 8012282:	f000 f822 	bl	80122ca <net_chksum>
 8012286:	212e      	movs	r1, #46	; 0x2e
 8012288:	8528      	strh	r0, [r5, #40]	; 0x28
 801228a:	4628      	mov	r0, r5
 801228c:	f003 f864 	bl	8015358 <emac_eth_send>
 8012290:	f8b8 3000 	ldrh.w	r3, [r8]
 8012294:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8012298:	3301      	adds	r3, #1
 801229a:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 801229e:	4620      	mov	r0, r4
 80122a0:	f8a8 3000 	strh.w	r3, [r8]
 80122a4:	80b4      	strh	r4, [r6, #4]
 80122a6:	e7d0      	b.n	801224a <igmp_leave+0x1a>
 80122a8:	2000d100 	andcs	sp, r0, r0, lsl #2
 80122ac:	2000d220 	andcs	sp, r0, r0, lsr #4
 80122b0:	2000d228 	andcs	sp, r0, r8, lsr #4
 80122b4:	2000d26e 	andcs	sp, r0, lr, ror #4

080122b8 <ip_set_ip>:
 80122b8:	b510      	push	{r4, lr}
 80122ba:	4604      	mov	r4, r0
 80122bc:	f7fe f9c6 	bl	801064c <udp_set_ip>
 80122c0:	4620      	mov	r0, r4
 80122c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122c6:	f7ff bf57 	b.w	8012178 <igmp_set_ip>

080122ca <net_chksum>:
 80122ca:	2300      	movs	r3, #0
 80122cc:	f021 0201 	bic.w	r2, r1, #1
 80122d0:	b530      	push	{r4, r5, lr}
 80122d2:	4402      	add	r2, r0
 80122d4:	084c      	lsrs	r4, r1, #1
 80122d6:	4290      	cmp	r0, r2
 80122d8:	d10e      	bne.n	80122f8 <net_chksum+0x2e>
 80122da:	f06f 0201 	mvn.w	r2, #1
 80122de:	fb02 1104 	mla	r1, r2, r4, r1
 80122e2:	b121      	cbz	r1, 80122ee <net_chksum+0x24>
 80122e4:	7802      	ldrb	r2, [r0, #0]
 80122e6:	0212      	lsls	r2, r2, #8
 80122e8:	ba52      	rev16	r2, r2
 80122ea:	b292      	uxth	r2, r2
 80122ec:	4413      	add	r3, r2
 80122ee:	0c1a      	lsrs	r2, r3, #16
 80122f0:	d106      	bne.n	8012300 <net_chksum+0x36>
 80122f2:	43d8      	mvns	r0, r3
 80122f4:	b280      	uxth	r0, r0
 80122f6:	bd30      	pop	{r4, r5, pc}
 80122f8:	f830 5b02 	ldrh.w	r5, [r0], #2
 80122fc:	442b      	add	r3, r5
 80122fe:	e7ea      	b.n	80122d6 <net_chksum+0xc>
 8012300:	b29b      	uxth	r3, r3
 8012302:	e7f3      	b.n	80122ec <net_chksum+0x22>

08012304 <memcpy.isra.0>:
 8012304:	3801      	subs	r0, #1
 8012306:	440a      	add	r2, r1
 8012308:	4291      	cmp	r1, r2
 801230a:	d100      	bne.n	801230e <memcpy.isra.0+0xa>
 801230c:	4770      	bx	lr
 801230e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012312:	f800 3f01 	strb.w	r3, [r0, #1]!
 8012316:	e7f7      	b.n	8012308 <memcpy.isra.0+0x4>

08012318 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8012318:	b430      	push	{r4, r5}
 801231a:	b168      	cbz	r0, 8012338 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 801231c:	2300      	movs	r3, #0
 801231e:	7905      	ldrb	r5, [r0, #4]
 8012320:	5cd4      	ldrb	r4, [r2, r3]
 8012322:	b11c      	cbz	r4, 801232c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8012324:	1c5c      	adds	r4, r3, #1
 8012326:	429d      	cmp	r5, r3
 8012328:	4623      	mov	r3, r4
 801232a:	dcf9      	bgt.n	8012320 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 801232c:	6804      	ldr	r4, [r0, #0]
 801232e:	b2db      	uxtb	r3, r3
 8012330:	69e4      	ldr	r4, [r4, #28]
 8012332:	46a4      	mov	ip, r4
 8012334:	bc30      	pop	{r4, r5}
 8012336:	4760      	bx	ip
 8012338:	bc30      	pop	{r4, r5}
 801233a:	4770      	bx	lr

0801233c <Display::ClearLine(unsigned char) [clone .isra.0]>:
 801233c:	b110      	cbz	r0, 8012344 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801233e:	6803      	ldr	r3, [r0, #0]
 8012340:	691b      	ldr	r3, [r3, #16]
 8012342:	4718      	bx	r3
 8012344:	4770      	bx	lr

08012346 <Display::Printf(unsigned char, char const*, ...)>:
 8012346:	b40c      	push	{r2, r3}
 8012348:	b570      	push	{r4, r5, r6, lr}
 801234a:	6984      	ldr	r4, [r0, #24]
 801234c:	4605      	mov	r5, r0
 801234e:	460e      	mov	r6, r1
 8012350:	b08a      	sub	sp, #40	; 0x28
 8012352:	b174      	cbz	r4, 8012372 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8012354:	ab0f      	add	r3, sp, #60	; 0x3c
 8012356:	2120      	movs	r1, #32
 8012358:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801235a:	a802      	add	r0, sp, #8
 801235c:	9301      	str	r3, [sp, #4]
 801235e:	f001 ffad 	bl	80142bc <vsnprintf>
 8012362:	4604      	mov	r4, r0
 8012364:	69a8      	ldr	r0, [r5, #24]
 8012366:	4631      	mov	r1, r6
 8012368:	6803      	ldr	r3, [r0, #0]
 801236a:	aa02      	add	r2, sp, #8
 801236c:	69dd      	ldr	r5, [r3, #28]
 801236e:	b2a3      	uxth	r3, r4
 8012370:	47a8      	blx	r5
 8012372:	4620      	mov	r0, r4
 8012374:	b00a      	add	sp, #40	; 0x28
 8012376:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801237a:	b002      	add	sp, #8
 801237c:	4770      	bx	lr

0801237e <Display::Status(Display7SegmentMessage)>:
 801237e:	7c43      	ldrb	r3, [r0, #17]
 8012380:	b513      	push	{r0, r1, r4, lr}
 8012382:	4604      	mov	r4, r0
 8012384:	b19b      	cbz	r3, 80123ae <Display::Status(Display7SegmentMessage)+0x30>
 8012386:	43c9      	mvns	r1, r1
 8012388:	2312      	movs	r3, #18
 801238a:	7a00      	ldrb	r0, [r0, #8]
 801238c:	f88d 3004 	strb.w	r3, [sp, #4]
 8012390:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8012394:	f88d 1006 	strb.w	r1, [sp, #6]
 8012398:	f88d 3005 	strb.w	r3, [sp, #5]
 801239c:	f003 f874 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 80123a0:	68e0      	ldr	r0, [r4, #12]
 80123a2:	f003 f869 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 80123a6:	2103      	movs	r1, #3
 80123a8:	a801      	add	r0, sp, #4
 80123aa:	f003 f873 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 80123ae:	b002      	add	sp, #8
 80123b0:	bd10      	pop	{r4, pc}
	...

080123b4 <DisplayUdf::DisplayUdf()>:
 80123b4:	b510      	push	{r4, lr}
 80123b6:	4604      	mov	r4, r0
 80123b8:	f000 ff72 	bl	80132a0 <Display::Display()>
 80123bc:	2202      	movs	r2, #2
 80123be:	2300      	movs	r3, #0
 80123c0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 80123c4:	4b05      	ldr	r3, [pc, #20]	; (80123dc <DisplayUdf::DisplayUdf()+0x28>)
 80123c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80123ca:	601c      	str	r4, [r3, #0]
 80123cc:	2301      	movs	r3, #1
 80123ce:	f802 3b01 	strb.w	r3, [r2], #1
 80123d2:	3301      	adds	r3, #1
 80123d4:	2b15      	cmp	r3, #21
 80123d6:	d1fa      	bne.n	80123ce <DisplayUdf::DisplayUdf()+0x1a>
 80123d8:	4620      	mov	r0, r4
 80123da:	bd10      	pop	{r4, pc}
 80123dc:	2000d290 	mulcs	r0, r0, r2

080123e0 <DisplayUdf::SetTitle(char const*, ...)>:
 80123e0:	b40e      	push	{r1, r2, r3}
 80123e2:	b517      	push	{r0, r1, r2, r4, lr}
 80123e4:	ab05      	add	r3, sp, #20
 80123e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80123ea:	4604      	mov	r4, r0
 80123ec:	211f      	movs	r1, #31
 80123ee:	301c      	adds	r0, #28
 80123f0:	9301      	str	r3, [sp, #4]
 80123f2:	f001 ff63 	bl	80142bc <vsnprintf>
 80123f6:	2300      	movs	r3, #0
 80123f8:	4404      	add	r4, r0
 80123fa:	7723      	strb	r3, [r4, #28]
 80123fc:	b003      	add	sp, #12
 80123fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012402:	b003      	add	sp, #12
 8012404:	4770      	bx	lr
	...

08012408 <DisplayUdf::ShowEmacStart()>:
 8012408:	b510      	push	{r4, lr}
 801240a:	4604      	mov	r4, r0
 801240c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8012410:	6980      	ldr	r0, [r0, #24]
 8012412:	f7ff ff93 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012416:	4620      	mov	r0, r4
 8012418:	4a02      	ldr	r2, [pc, #8]	; (8012424 <DisplayUdf::ShowEmacStart()+0x1c>)
 801241a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801241e:	f7ff ff92 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012422:	bd10      	pop	{r4, pc}
 8012424:	0801804e 	stmdaeq	r1, {r1, r2, r3, r6, pc}

08012428 <DisplayUdf::ShowIpAddress()>:
 8012428:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801242c:	4604      	mov	r4, r0
 801242e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8012432:	b086      	sub	sp, #24
 8012434:	6980      	ldr	r0, [r0, #24]
 8012436:	f7ff ff81 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 801243a:	4b13      	ldr	r3, [pc, #76]	; (8012488 <DisplayUdf::ShowIpAddress()+0x60>)
 801243c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8012440:	681d      	ldr	r5, [r3, #0]
 8012442:	69a8      	ldr	r0, [r5, #24]
 8012444:	692e      	ldr	r6, [r5, #16]
 8012446:	f7f6 f89d 	bl	8008584 <__popcountsi2>
 801244a:	78eb      	ldrb	r3, [r5, #3]
 801244c:	fa5f f886 	uxtb.w	r8, r6
 8012450:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8012454:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8012458:	0e36      	lsrs	r6, r6, #24
 801245a:	b99b      	cbnz	r3, 8012484 <DisplayUdf::ShowIpAddress()+0x5c>
 801245c:	786b      	ldrb	r3, [r5, #1]
 801245e:	2b00      	cmp	r3, #0
 8012460:	bf14      	ite	ne
 8012462:	2244      	movne	r2, #68	; 0x44
 8012464:	2253      	moveq	r2, #83	; 0x53
 8012466:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801246a:	4643      	mov	r3, r8
 801246c:	4639      	mov	r1, r7
 801246e:	4620      	mov	r0, r4
 8012470:	e9cd a601 	strd	sl, r6, [sp, #4]
 8012474:	4a05      	ldr	r2, [pc, #20]	; (801248c <DisplayUdf::ShowIpAddress()+0x64>)
 8012476:	f8cd 9000 	str.w	r9, [sp]
 801247a:	f7ff ff64 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 801247e:	b006      	add	sp, #24
 8012480:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012484:	225a      	movs	r2, #90	; 0x5a
 8012486:	e7ee      	b.n	8012466 <DisplayUdf::ShowIpAddress()+0x3e>
 8012488:	2000cc60 	andcs	ip, r0, r0, ror #24
 801248c:	0801805d 	stmdaeq	r1, {r0, r2, r3, r4, r6, pc}

08012490 <DisplayUdf::ShowNetmask()>:
 8012490:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012492:	4604      	mov	r4, r0
 8012494:	4b0b      	ldr	r3, [pc, #44]	; (80124c4 <DisplayUdf::ShowNetmask()+0x34>)
 8012496:	681b      	ldr	r3, [r3, #0]
 8012498:	699b      	ldr	r3, [r3, #24]
 801249a:	0e1a      	lsrs	r2, r3, #24
 801249c:	9202      	str	r2, [sp, #8]
 801249e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80124a2:	9201      	str	r2, [sp, #4]
 80124a4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80124a8:	9200      	str	r2, [sp, #0]
 80124aa:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 80124ae:	4a06      	ldr	r2, [pc, #24]	; (80124c8 <DisplayUdf::ShowNetmask()+0x38>)
 80124b0:	b2db      	uxtb	r3, r3
 80124b2:	f7ff ff48 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 80124b6:	4620      	mov	r0, r4
 80124b8:	b004      	add	sp, #16
 80124ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124be:	f7ff bfb3 	b.w	8012428 <DisplayUdf::ShowIpAddress()>
 80124c2:	bf00      	nop
 80124c4:	2000cc60 	andcs	ip, r0, r0, ror #24
 80124c8:	0801806f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, pc}

080124cc <DisplayUdf::ShowGatewayIp()>:
 80124cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80124ce:	4604      	mov	r4, r0
 80124d0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80124d4:	6980      	ldr	r0, [r0, #24]
 80124d6:	f7ff ff31 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 80124da:	4b0a      	ldr	r3, [pc, #40]	; (8012504 <DisplayUdf::ShowGatewayIp()+0x38>)
 80124dc:	4620      	mov	r0, r4
 80124de:	681b      	ldr	r3, [r3, #0]
 80124e0:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80124e4:	695b      	ldr	r3, [r3, #20]
 80124e6:	0e1a      	lsrs	r2, r3, #24
 80124e8:	9202      	str	r2, [sp, #8]
 80124ea:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80124ee:	9201      	str	r2, [sp, #4]
 80124f0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80124f4:	9200      	str	r2, [sp, #0]
 80124f6:	b2db      	uxtb	r3, r3
 80124f8:	4a03      	ldr	r2, [pc, #12]	; (8012508 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80124fa:	f7ff ff24 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 80124fe:	b004      	add	sp, #16
 8012500:	bd10      	pop	{r4, pc}
 8012502:	bf00      	nop
 8012504:	2000cc60 	andcs	ip, r0, r0, ror #24
 8012508:	0801807e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, pc}

0801250c <DisplayUdf::ShowHostName()>:
 801250c:	b510      	push	{r4, lr}
 801250e:	4604      	mov	r4, r0
 8012510:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8012514:	6980      	ldr	r0, [r0, #24]
 8012516:	f7ff ff11 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 801251a:	4b05      	ldr	r3, [pc, #20]	; (8012530 <DisplayUdf::ShowHostName()+0x24>)
 801251c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8012520:	681a      	ldr	r2, [r3, #0]
 8012522:	69a0      	ldr	r0, [r4, #24]
 8012524:	321c      	adds	r2, #28
 8012526:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801252a:	f7ff bef5 	b.w	8012318 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801252e:	bf00      	nop
 8012530:	2000cc60 	andcs	ip, r0, r0, ror #24

08012534 <DisplayUdf::Show()>:
 8012534:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012536:	4604      	mov	r4, r0
 8012538:	21ff      	movs	r1, #255	; 0xff
 801253a:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 801253e:	f100 0250 	add.w	r2, r0, #80	; 0x50
 8012542:	f813 0b01 	ldrb.w	r0, [r3], #1
 8012546:	2806      	cmp	r0, #6
 8012548:	bf88      	it	hi
 801254a:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 801254e:	429a      	cmp	r2, r3
 8012550:	d1f7      	bne.n	8012542 <DisplayUdf::Show()+0xe>
 8012552:	2501      	movs	r5, #1
 8012554:	4629      	mov	r1, r5
 8012556:	3501      	adds	r5, #1
 8012558:	69a0      	ldr	r0, [r4, #24]
 801255a:	b2ed      	uxtb	r5, r5
 801255c:	f7ff feee 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012560:	2d06      	cmp	r5, #6
 8012562:	d1f7      	bne.n	8012554 <DisplayUdf::Show()+0x20>
 8012564:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8012568:	69a0      	ldr	r0, [r4, #24]
 801256a:	f104 021c 	add.w	r2, r4, #28
 801256e:	f7ff fed3 	bl	8012318 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012572:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8012576:	69a0      	ldr	r0, [r4, #24]
 8012578:	4a0d      	ldr	r2, [pc, #52]	; (80125b0 <DisplayUdf::Show()+0x7c>)
 801257a:	f7ff fecd 	bl	8012318 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801257e:	4b0d      	ldr	r3, [pc, #52]	; (80125b4 <DisplayUdf::Show()+0x80>)
 8012580:	4a0d      	ldr	r2, [pc, #52]	; (80125b8 <DisplayUdf::Show()+0x84>)
 8012582:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8012586:	9300      	str	r3, [sp, #0]
 8012588:	4620      	mov	r0, r4
 801258a:	2303      	movs	r3, #3
 801258c:	f7ff fedb 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012590:	4620      	mov	r0, r4
 8012592:	f7ff ff49 	bl	8012428 <DisplayUdf::ShowIpAddress()>
 8012596:	4620      	mov	r0, r4
 8012598:	f7ff ff98 	bl	80124cc <DisplayUdf::ShowGatewayIp()>
 801259c:	4620      	mov	r0, r4
 801259e:	f7ff ff77 	bl	8012490 <DisplayUdf::ShowNetmask()>
 80125a2:	4620      	mov	r0, r4
 80125a4:	b003      	add	sp, #12
 80125a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80125aa:	f7ff bfaf 	b.w	801250c <DisplayUdf::ShowHostName()>
 80125ae:	bf00      	nop
 80125b0:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 80125b4:	2000d328 	andcs	sp, r0, r8, lsr #6
 80125b8:	0801808d 	stmdaeq	r1, {r0, r2, r3, r7, pc}

080125bc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80125bc:	3901      	subs	r1, #1
 80125be:	b510      	push	{r4, lr}
 80125c0:	4604      	mov	r4, r0
 80125c2:	2903      	cmp	r1, #3
 80125c4:	d814      	bhi.n	80125f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80125c6:	e8df f001 	tbb	[pc, r1]
 80125ca:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80125ce:	4b14      	ldr	r3, [pc, #80]	; (8012620 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80125d0:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80125d4:	6818      	ldr	r0, [r3, #0]
 80125d6:	f7ff fed2 	bl	801237e <Display::Status(Display7SegmentMessage)>
 80125da:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80125de:	69a0      	ldr	r0, [r4, #24]
 80125e0:	f7ff feac 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 80125e4:	4a0f      	ldr	r2, [pc, #60]	; (8012624 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80125e6:	4620      	mov	r0, r4
 80125e8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80125ec:	f7ff feab 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 80125f0:	bd10      	pop	{r4, pc}
 80125f2:	f248 0180 	movw	r1, #32896	; 0x8080
 80125f6:	4b0a      	ldr	r3, [pc, #40]	; (8012620 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80125f8:	6818      	ldr	r0, [r3, #0]
 80125fa:	f7ff fec0 	bl	801237e <Display::Status(Display7SegmentMessage)>
 80125fe:	e7f7      	b.n	80125f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8012600:	4b07      	ldr	r3, [pc, #28]	; (8012620 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8012602:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8012606:	6818      	ldr	r0, [r3, #0]
 8012608:	f7ff feb9 	bl	801237e <Display::Status(Display7SegmentMessage)>
 801260c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012610:	69a0      	ldr	r0, [r4, #24]
 8012612:	f7ff fe93 	bl	801233c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012616:	4a04      	ldr	r2, [pc, #16]	; (8012628 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8012618:	e7e5      	b.n	80125e6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 801261a:	f645 3179 	movw	r1, #23417	; 0x5b79
 801261e:	e7ea      	b.n	80125f6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8012620:	2000d298 	mulcs	r0, r8, r2
 8012624:	0801809c 	stmdaeq	r1, {r2, r3, r4, r7, pc}
 8012628:	080180aa 	stmdaeq	r1, {r1, r3, r5, r7, pc}

0801262c <DisplayUdf::ShowShutdown()>:
 801262c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012630:	4604      	mov	r4, r0
 8012632:	6980      	ldr	r0, [r0, #24]
 8012634:	b308      	cbz	r0, 801267a <DisplayUdf::ShowShutdown()+0x4e>
 8012636:	f890 8005 	ldrb.w	r8, [r0, #5]
 801263a:	6803      	ldr	r3, [r0, #0]
 801263c:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8012640:	b2ed      	uxtb	r5, r5
 8012642:	462a      	mov	r2, r5
 8012644:	2100      	movs	r1, #0
 8012646:	6a1b      	ldr	r3, [r3, #32]
 8012648:	7907      	ldrb	r7, [r0, #4]
 801264a:	2600      	movs	r6, #0
 801264c:	4798      	blx	r3
 801264e:	3f01      	subs	r7, #1
 8012650:	42b7      	cmp	r7, r6
 8012652:	69a0      	ldr	r0, [r4, #24]
 8012654:	d906      	bls.n	8012664 <DisplayUdf::ShowShutdown()+0x38>
 8012656:	b118      	cbz	r0, 8012660 <DisplayUdf::ShowShutdown()+0x34>
 8012658:	6803      	ldr	r3, [r0, #0]
 801265a:	2120      	movs	r1, #32
 801265c:	695b      	ldr	r3, [r3, #20]
 801265e:	4798      	blx	r3
 8012660:	3601      	adds	r6, #1
 8012662:	e7f5      	b.n	8012650 <DisplayUdf::ShowShutdown()+0x24>
 8012664:	b120      	cbz	r0, 8012670 <DisplayUdf::ShowShutdown()+0x44>
 8012666:	6803      	ldr	r3, [r0, #0]
 8012668:	462a      	mov	r2, r5
 801266a:	2100      	movs	r1, #0
 801266c:	6a1b      	ldr	r3, [r3, #32]
 801266e:	4798      	blx	r3
 8012670:	4641      	mov	r1, r8
 8012672:	4a05      	ldr	r2, [pc, #20]	; (8012688 <DisplayUdf::ShowShutdown()+0x5c>)
 8012674:	69a0      	ldr	r0, [r4, #24]
 8012676:	f7ff fe4f 	bl	8012318 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801267a:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801267e:	4620      	mov	r0, r4
 8012680:	f7ff fe7d 	bl	801237e <Display::Status(Display7SegmentMessage)>
 8012684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012688:	080180b8 	stmdaeq	r1, {r3, r4, r5, r7, pc}

0801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801268c:	1e4b      	subs	r3, r1, #1
 801268e:	2b05      	cmp	r3, #5
 8012690:	b530      	push	{r4, r5, lr}
 8012692:	d80f      	bhi.n	80126b4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8012694:	2300      	movs	r3, #0
 8012696:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 801269a:	f814 5b01 	ldrb.w	r5, [r4], #1
 801269e:	428d      	cmp	r5, r1
 80126a0:	d109      	bne.n	80126b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80126a2:	1884      	adds	r4, r0, r2
 80126a4:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80126a8:	4403      	add	r3, r0
 80126aa:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80126ae:	4410      	add	r0, r2
 80126b0:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 80126b4:	bd30      	pop	{r4, r5, pc}
 80126b6:	3301      	adds	r3, #1
 80126b8:	2b14      	cmp	r3, #20
 80126ba:	d1ee      	bne.n	801269a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80126bc:	e7f7      	b.n	80126ae <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

080126c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 80126c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80126c2:	88c5      	ldrh	r5, [r0, #6]
 80126c4:	8886      	ldrh	r6, [r0, #4]
 80126c6:	42b5      	cmp	r5, r6
 80126c8:	d216      	bcs.n	80126f8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80126ca:	4604      	mov	r4, r0
 80126cc:	6800      	ldr	r0, [r0, #0]
 80126ce:	4428      	add	r0, r5
 80126d0:	1b75      	subs	r5, r6, r5
 80126d2:	7a26      	ldrb	r6, [r4, #8]
 80126d4:	b923      	cbnz	r3, 80126e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80126d6:	b926      	cbnz	r6, 80126e2 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80126d8:	9200      	str	r2, [sp, #0]
 80126da:	460b      	mov	r3, r1
 80126dc:	4a09      	ldr	r2, [pc, #36]	; (8012704 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80126de:	e003      	b.n	80126e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80126e0:	b166      	cbz	r6, 80126fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 80126e2:	460b      	mov	r3, r1
 80126e4:	9200      	str	r2, [sp, #0]
 80126e6:	4a08      	ldr	r2, [pc, #32]	; (8012708 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 80126e8:	4629      	mov	r1, r5
 80126ea:	f001 fdcf 	bl	801428c <snprintf>
 80126ee:	4285      	cmp	r5, r0
 80126f0:	bfa2      	ittt	ge
 80126f2:	88e3      	ldrhge	r3, [r4, #6]
 80126f4:	181b      	addge	r3, r3, r0
 80126f6:	80e3      	strhge	r3, [r4, #6]
 80126f8:	b002      	add	sp, #8
 80126fa:	bd70      	pop	{r4, r5, r6, pc}
 80126fc:	9200      	str	r2, [sp, #0]
 80126fe:	460b      	mov	r3, r1
 8012700:	4a02      	ldr	r2, [pc, #8]	; (801270c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8012702:	e7f1      	b.n	80126e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8012704:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 8012708:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 801270c:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

08012710 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8012710:	b510      	push	{r4, lr}
 8012712:	2220      	movs	r2, #32
 8012714:	4604      	mov	r4, r0
 8012716:	f840 1b04 	str.w	r1, [r0], #4
 801271a:	2100      	movs	r1, #0
 801271c:	f001 fa5e 	bl	8013bdc <memset>
 8012720:	f647 7305 	movw	r3, #32517	; 0x7f05
 8012724:	4620      	mov	r0, r4
 8012726:	84a3      	strh	r3, [r4, #36]	; 0x24
 8012728:	bd10      	pop	{r4, pc}

0801272a <DisplayUdfParams::Load()>:
 801272a:	b508      	push	{r3, lr}
 801272c:	2300      	movs	r3, #0
 801272e:	4601      	mov	r1, r0
 8012730:	6043      	str	r3, [r0, #4]
 8012732:	6800      	ldr	r0, [r0, #0]
 8012734:	b120      	cbz	r0, 8012740 <DisplayUdfParams::Load()+0x16>
 8012736:	6803      	ldr	r3, [r0, #0]
 8012738:	3104      	adds	r1, #4
 801273a:	68db      	ldr	r3, [r3, #12]
 801273c:	4798      	blx	r3
 801273e:	2001      	movs	r0, #1
 8012740:	bd08      	pop	{r3, pc}
	...

08012744 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8012744:	6803      	ldr	r3, [r0, #0]
 8012746:	b1d3      	cbz	r3, 801277e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8012748:	2300      	movs	r3, #0
 801274a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801274c:	460d      	mov	r5, r1
 801274e:	4616      	mov	r6, r2
 8012750:	4604      	mov	r4, r0
 8012752:	6043      	str	r3, [r0, #4]
 8012754:	4602      	mov	r2, r0
 8012756:	490a      	ldr	r1, [pc, #40]	; (8012780 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8012758:	4668      	mov	r0, sp
 801275a:	f000 fbcf 	bl	8012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801275e:	4632      	mov	r2, r6
 8012760:	4629      	mov	r1, r5
 8012762:	4668      	mov	r0, sp
 8012764:	f000 fbce 	bl	8012f04 <ReadConfigFile::Read(char const*, unsigned int)>
 8012768:	4621      	mov	r1, r4
 801276a:	f851 0b04 	ldr.w	r0, [r1], #4
 801276e:	6803      	ldr	r3, [r0, #0]
 8012770:	689b      	ldr	r3, [r3, #8]
 8012772:	4798      	blx	r3
 8012774:	4668      	mov	r0, sp
 8012776:	f000 fbc4 	bl	8012f02 <ReadConfigFile::~ReadConfigFile()>
 801277a:	b002      	add	sp, #8
 801277c:	bd70      	pop	{r4, r5, r6, pc}
 801277e:	4770      	bx	lr
 8012780:	08012849 	stmdaeq	r1, {r0, r3, r6, fp, sp}

08012784 <DisplayUdfParams::callbackFunction(char const*)>:
 8012784:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012786:	460e      	mov	r6, r1
 8012788:	4604      	mov	r4, r0
 801278a:	492b      	ldr	r1, [pc, #172]	; (8012838 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 801278c:	4630      	mov	r0, r6
 801278e:	f10d 0207 	add.w	r2, sp, #7
 8012792:	f000 fcc5 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012796:	b968      	cbnz	r0, 80127b4 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012798:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801279c:	6863      	ldr	r3, [r4, #4]
 801279e:	2a7f      	cmp	r2, #127	; 0x7f
 80127a0:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80127a4:	bf14      	ite	ne
 80127a6:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 80127aa:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 80127ae:	6063      	str	r3, [r4, #4]
 80127b0:	b003      	add	sp, #12
 80127b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127b4:	4630      	mov	r0, r6
 80127b6:	4921      	ldr	r1, [pc, #132]	; (801283c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 80127b8:	f10d 0207 	add.w	r2, sp, #7
 80127bc:	f000 fcb0 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80127c0:	b958      	cbnz	r0, 80127da <DisplayUdfParams::callbackFunction(char const*)+0x56>
 80127c2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80127c6:	6863      	ldr	r3, [r4, #4]
 80127c8:	2a05      	cmp	r2, #5
 80127ca:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80127ce:	bf14      	ite	ne
 80127d0:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80127d4:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80127d8:	e7e9      	b.n	80127ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127da:	4630      	mov	r0, r6
 80127dc:	4918      	ldr	r1, [pc, #96]	; (8012840 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 80127de:	f10d 0207 	add.w	r2, sp, #7
 80127e2:	f000 fc9d 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80127e6:	b948      	cbnz	r0, 80127fc <DisplayUdfParams::callbackFunction(char const*)+0x78>
 80127e8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80127ec:	6863      	ldr	r3, [r4, #4]
 80127ee:	b112      	cbz	r2, 80127f6 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 80127f0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80127f4:	e7db      	b.n	80127ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127f6:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80127fa:	e7d8      	b.n	80127ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80127fc:	2500      	movs	r5, #0
 80127fe:	4f11      	ldr	r7, [pc, #68]	; (8012844 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8012800:	4630      	mov	r0, r6
 8012802:	f857 1b04 	ldr.w	r1, [r7], #4
 8012806:	f10d 0207 	add.w	r2, sp, #7
 801280a:	f000 fc89 	bl	8013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801280e:	b978      	cbnz	r0, 8012830 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 8012810:	2301      	movs	r3, #1
 8012812:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012816:	6862      	ldr	r2, [r4, #4]
 8012818:	1e4e      	subs	r6, r1, #1
 801281a:	2e05      	cmp	r6, #5
 801281c:	fa03 f305 	lsl.w	r3, r3, r5
 8012820:	4425      	add	r5, r4
 8012822:	bf99      	ittee	ls
 8012824:	7229      	strbls	r1, [r5, #8]
 8012826:	4313      	orrls	r3, r2
 8012828:	7228      	strbhi	r0, [r5, #8]
 801282a:	ea22 0303 	bichi.w	r3, r2, r3
 801282e:	e7be      	b.n	80127ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012830:	3501      	adds	r5, #1
 8012832:	2d14      	cmp	r5, #20
 8012834:	d1e4      	bne.n	8012800 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8012836:	e7bb      	b.n	80127b0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012838:	0801817a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, pc}
 801283c:	08018142 	stmdaeq	r1, {r1, r6, r8, pc}
 8012840:	08018150 	stmdaeq	r1, {r4, r6, r8, pc}
 8012844:	080180cc 	stmdaeq	r1, {r2, r3, r6, r7, pc}

08012848 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8012848:	f7ff bf9c 	b.w	8012784 <DisplayUdfParams::callbackFunction(char const*)>

0801284c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 801284c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012850:	4604      	mov	r4, r0
 8012852:	4615      	mov	r5, r2
 8012854:	461e      	mov	r6, r3
 8012856:	b086      	sub	sp, #24
 8012858:	3004      	adds	r0, #4
 801285a:	b379      	cbz	r1, 80128bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 801285c:	2222      	movs	r2, #34	; 0x22
 801285e:	f001 f9a6 	bl	8013bae <memmove>
 8012862:	462a      	mov	r2, r5
 8012864:	4633      	mov	r3, r6
 8012866:	493d      	ldr	r1, [pc, #244]	; (801295c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8012868:	a803      	add	r0, sp, #12
 801286a:	f000 faa7 	bl	8012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801286e:	6863      	ldr	r3, [r4, #4]
 8012870:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8012874:	493a      	ldr	r1, [pc, #232]	; (8012960 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8012876:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801287a:	a803      	add	r0, sp, #12
 801287c:	f7ff ff20 	bl	80126c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012880:	6863      	ldr	r3, [r4, #4]
 8012882:	4938      	ldr	r1, [pc, #224]	; (8012964 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8012884:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8012888:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801288c:	a803      	add	r0, sp, #12
 801288e:	f7ff ff17 	bl	80126c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012892:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8012896:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801289a:	42a9      	cmp	r1, r5
 801289c:	d227      	bcs.n	80128ee <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 801289e:	6863      	ldr	r3, [r4, #4]
 80128a0:	9803      	ldr	r0, [sp, #12]
 80128a2:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 80128a6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80128aa:	4408      	add	r0, r1
 80128ac:	eba5 0501 	sub.w	r5, r5, r1
 80128b0:	d10b      	bne.n	80128ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80128b2:	b962      	cbnz	r2, 80128ce <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80128b4:	9200      	str	r2, [sp, #0]
 80128b6:	4b2c      	ldr	r3, [pc, #176]	; (8012968 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80128b8:	4a2c      	ldr	r2, [pc, #176]	; (801296c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 80128ba:	e00e      	b.n	80128da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80128bc:	6823      	ldr	r3, [r4, #0]
 80128be:	4601      	mov	r1, r0
 80128c0:	681a      	ldr	r2, [r3, #0]
 80128c2:	4618      	mov	r0, r3
 80128c4:	68d2      	ldr	r2, [r2, #12]
 80128c6:	4790      	blx	r2
 80128c8:	e7cb      	b.n	8012862 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80128ca:	2a00      	cmp	r2, #0
 80128cc:	d041      	beq.n	8012952 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80128ce:	3b00      	subs	r3, #0
 80128d0:	bf18      	it	ne
 80128d2:	2301      	movne	r3, #1
 80128d4:	4a26      	ldr	r2, [pc, #152]	; (8012970 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80128d6:	9300      	str	r3, [sp, #0]
 80128d8:	4b23      	ldr	r3, [pc, #140]	; (8012968 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80128da:	4629      	mov	r1, r5
 80128dc:	f001 fcd6 	bl	801428c <snprintf>
 80128e0:	4285      	cmp	r5, r0
 80128e2:	bfa2      	ittt	ge
 80128e4:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80128e8:	181b      	addge	r3, r3, r0
 80128ea:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80128ee:	2500      	movs	r5, #0
 80128f0:	2701      	movs	r7, #1
 80128f2:	4e20      	ldr	r6, [pc, #128]	; (8012974 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 80128f4:	f104 0808 	add.w	r8, r4, #8
 80128f8:	f856 1b04 	ldr.w	r1, [r6], #4
 80128fc:	780b      	ldrb	r3, [r1, #0]
 80128fe:	b15b      	cbz	r3, 8012918 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8012900:	6862      	ldr	r2, [r4, #4]
 8012902:	fa07 f305 	lsl.w	r3, r7, r5
 8012906:	4393      	bics	r3, r2
 8012908:	bf0c      	ite	eq
 801290a:	2301      	moveq	r3, #1
 801290c:	2300      	movne	r3, #0
 801290e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8012912:	a803      	add	r0, sp, #12
 8012914:	f7ff fed4 	bl	80126c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012918:	3501      	adds	r5, #1
 801291a:	2d14      	cmp	r5, #20
 801291c:	d1ec      	bne.n	80128f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 801291e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012922:	b17b      	cbz	r3, 8012944 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8012924:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012928:	9b03      	ldr	r3, [sp, #12]
 801292a:	4413      	add	r3, r2
 801292c:	227d      	movs	r2, #125	; 0x7d
 801292e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012932:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012936:	9903      	ldr	r1, [sp, #12]
 8012938:	54ca      	strb	r2, [r1, r3]
 801293a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801293e:	3301      	adds	r3, #1
 8012940:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012944:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012948:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801294a:	601a      	str	r2, [r3, #0]
 801294c:	b006      	add	sp, #24
 801294e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012952:	2301      	movs	r3, #1
 8012954:	4a08      	ldr	r2, [pc, #32]	; (8012978 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8012956:	9300      	str	r3, [sp, #0]
 8012958:	4b03      	ldr	r3, [pc, #12]	; (8012968 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801295a:	e7be      	b.n	80128da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 801295c:	0801816e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, pc}
 8012960:	0801817a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, pc}
 8012964:	08018142 	stmdaeq	r1, {r1, r6, r8, pc}
 8012968:	08018150 	stmdaeq	r1, {r4, r6, r8, pc}
 801296c:	08016879 	stmdaeq	r1, {r0, r3, r4, r5, r6, fp, sp, lr}
 8012970:	08016870 	stmdaeq	r1, {r4, r5, r6, fp, sp, lr}
 8012974:	080180cc 	stmdaeq	r1, {r2, r3, r6, r7, pc}
 8012978:	0801687a 	stmdaeq	r1, {r1, r3, r4, r5, r6, fp, sp, lr}

0801297c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 801297c:	b513      	push	{r0, r1, r4, lr}
 801297e:	6804      	ldr	r4, [r0, #0]
 8012980:	b914      	cbnz	r4, 8012988 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8012982:	601c      	str	r4, [r3, #0]
 8012984:	b002      	add	sp, #8
 8012986:	bd10      	pop	{r4, pc}
 8012988:	9300      	str	r3, [sp, #0]
 801298a:	4613      	mov	r3, r2
 801298c:	460a      	mov	r2, r1
 801298e:	2100      	movs	r1, #0
 8012990:	f7ff ff5c 	bl	801284c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8012994:	e7f6      	b.n	8012984 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08012996 <DisplayUdfParams::Set(DisplayUdf*)>:
 8012996:	6843      	ldr	r3, [r0, #4]
 8012998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801299c:	009a      	lsls	r2, r3, #2
 801299e:	4604      	mov	r4, r0
 80129a0:	460e      	mov	r6, r1
 80129a2:	d506      	bpl.n	80129b2 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80129a4:	6988      	ldr	r0, [r1, #24]
 80129a6:	b120      	cbz	r0, 80129b2 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80129a8:	6803      	ldr	r3, [r0, #0]
 80129aa:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 80129ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80129b0:	4798      	blx	r3
 80129b2:	6863      	ldr	r3, [r4, #4]
 80129b4:	69b0      	ldr	r0, [r6, #24]
 80129b6:	00db      	lsls	r3, r3, #3
 80129b8:	bf41      	itttt	mi
 80129ba:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 80129be:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 80129c2:	4353      	mulmi	r3, r2
 80129c4:	6173      	strmi	r3, [r6, #20]
 80129c6:	6861      	ldr	r1, [r4, #4]
 80129c8:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80129cc:	b110      	cbz	r0, 80129d4 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80129ce:	6803      	ldr	r3, [r0, #0]
 80129d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80129d2:	4798      	blx	r3
 80129d4:	2500      	movs	r5, #0
 80129d6:	2701      	movs	r7, #1
 80129d8:	f104 0808 	add.w	r8, r4, #8
 80129dc:	6862      	ldr	r2, [r4, #4]
 80129de:	fa07 f305 	lsl.w	r3, r7, r5
 80129e2:	4393      	bics	r3, r2
 80129e4:	d105      	bne.n	80129f2 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 80129e6:	462a      	mov	r2, r5
 80129e8:	4630      	mov	r0, r6
 80129ea:	f818 1005 	ldrb.w	r1, [r8, r5]
 80129ee:	f7ff fe4d 	bl	801268c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80129f2:	3501      	adds	r5, #1
 80129f4:	2d14      	cmp	r5, #20
 80129f6:	d1f1      	bne.n	80129dc <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80129f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080129fc <DisplayUdfParams::Dump()>:
 80129fc:	4770      	bx	lr
	...

08012a00 <NetworkDisplay::ShowEmacStart()>:
 8012a00:	4b01      	ldr	r3, [pc, #4]	; (8012a08 <NetworkDisplay::ShowEmacStart()+0x8>)
 8012a02:	6818      	ldr	r0, [r3, #0]
 8012a04:	f7ff bd00 	b.w	8012408 <DisplayUdf::ShowEmacStart()>
 8012a08:	2000d290 	mulcs	r0, r0, r2

08012a0c <NetworkDisplay::ShowIp()>:
 8012a0c:	4b01      	ldr	r3, [pc, #4]	; (8012a14 <NetworkDisplay::ShowIp()+0x8>)
 8012a0e:	6818      	ldr	r0, [r3, #0]
 8012a10:	f7ff bd0a 	b.w	8012428 <DisplayUdf::ShowIpAddress()>
 8012a14:	2000d290 	mulcs	r0, r0, r2

08012a18 <NetworkDisplay::ShowNetMask()>:
 8012a18:	4b01      	ldr	r3, [pc, #4]	; (8012a20 <NetworkDisplay::ShowNetMask()+0x8>)
 8012a1a:	6818      	ldr	r0, [r3, #0]
 8012a1c:	f7ff bd38 	b.w	8012490 <DisplayUdf::ShowNetmask()>
 8012a20:	2000d290 	mulcs	r0, r0, r2

08012a24 <NetworkDisplay::ShowGatewayIp()>:
 8012a24:	4b01      	ldr	r3, [pc, #4]	; (8012a2c <NetworkDisplay::ShowGatewayIp()+0x8>)
 8012a26:	6818      	ldr	r0, [r3, #0]
 8012a28:	f7ff bd50 	b.w	80124cc <DisplayUdf::ShowGatewayIp()>
 8012a2c:	2000d290 	mulcs	r0, r0, r2

08012a30 <NetworkDisplay::ShowShutdown()>:
 8012a30:	4b01      	ldr	r3, [pc, #4]	; (8012a38 <NetworkDisplay::ShowShutdown()+0x8>)
 8012a32:	6818      	ldr	r0, [r3, #0]
 8012a34:	f7ff bdfa 	b.w	801262c <DisplayUdf::ShowShutdown()>
 8012a38:	2000d290 	mulcs	r0, r0, r2

08012a3c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8012a3c:	4b01      	ldr	r3, [pc, #4]	; (8012a44 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8012a3e:	6818      	ldr	r0, [r3, #0]
 8012a40:	f7ff bdbc 	b.w	80125bc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012a44:	2000d290 	mulcs	r0, r0, r2

08012a48 <DisplayUdf::ShowNodeName(ArtNetNode*)>:
 8012a48:	b570      	push	{r4, r5, r6, lr}
 8012a4a:	4605      	mov	r5, r0
 8012a4c:	6980      	ldr	r0, [r0, #24]
 8012a4e:	460c      	mov	r4, r1
 8012a50:	b120      	cbz	r0, 8012a5c <DisplayUdf::ShowNodeName(ArtNetNode*)+0x14>
 8012a52:	6803      	ldr	r3, [r0, #0]
 8012a54:	f895 1042 	ldrb.w	r1, [r5, #66]	; 0x42
 8012a58:	691b      	ldr	r3, [r3, #16]
 8012a5a:	4798      	blx	r3
 8012a5c:	69a8      	ldr	r0, [r5, #24]
 8012a5e:	f104 0244 	add.w	r2, r4, #68	; 0x44
 8012a62:	b190      	cbz	r0, 8012a8a <DisplayUdf::ShowNodeName(ArtNetNode*)+0x42>
 8012a64:	2300      	movs	r3, #0
 8012a66:	7906      	ldrb	r6, [r0, #4]
 8012a68:	3443      	adds	r4, #67	; 0x43
 8012a6a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012a6e:	b119      	cbz	r1, 8012a78 <DisplayUdf::ShowNodeName(ArtNetNode*)+0x30>
 8012a70:	1c59      	adds	r1, r3, #1
 8012a72:	429e      	cmp	r6, r3
 8012a74:	460b      	mov	r3, r1
 8012a76:	dcf8      	bgt.n	8012a6a <DisplayUdf::ShowNodeName(ArtNetNode*)+0x22>
 8012a78:	6801      	ldr	r1, [r0, #0]
 8012a7a:	b2db      	uxtb	r3, r3
 8012a7c:	69cc      	ldr	r4, [r1, #28]
 8012a7e:	f895 1042 	ldrb.w	r1, [r5, #66]	; 0x42
 8012a82:	46a4      	mov	ip, r4
 8012a84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a88:	4760      	bx	ip
 8012a8a:	bd70      	pop	{r4, r5, r6, pc}

08012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>:
 8012a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a90:	460c      	mov	r4, r1
 8012a92:	b08b      	sub	sp, #44	; 0x2c
 8012a94:	4606      	mov	r6, r0
 8012a96:	2301      	movs	r3, #1
 8012a98:	2100      	movs	r1, #0
 8012a9a:	4620      	mov	r0, r4
 8012a9c:	f10d 0227 	add.w	r2, sp, #39	; 0x27
 8012aa0:	f7f8 fa68 	bl	800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 8012aa4:	b350      	cbz	r0, 8012afc <DisplayUdf::ShowUniverse(ArtNetNode*)+0x70>
 8012aa6:	2100      	movs	r1, #0
 8012aa8:	4620      	mov	r0, r4
 8012aaa:	f896 9040 	ldrb.w	r9, [r6, #64]	; 0x40
 8012aae:	f7f8 fa7b 	bl	800afa8 <ArtNetNode::GetNetSwitch(unsigned int) const>
 8012ab2:	2100      	movs	r1, #0
 8012ab4:	4605      	mov	r5, r0
 8012ab6:	4620      	mov	r0, r4
 8012ab8:	f7f8 fa72 	bl	800afa0 <ArtNetNode::GetSubnetSwitch(unsigned int) const>
 8012abc:	2100      	movs	r1, #0
 8012abe:	4607      	mov	r7, r0
 8012ac0:	4620      	mov	r0, r4
 8012ac2:	f89d a027 	ldrb.w	sl, [sp, #39]	; 0x27
 8012ac6:	f7f8 fbee 	bl	800b2a6 <ArtNetNode::GetMergeMode(unsigned int) const>
 8012aca:	4a2d      	ldr	r2, [pc, #180]	; (8012b80 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf4>)
 8012acc:	4b2d      	ldr	r3, [pc, #180]	; (8012b84 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf8>)
 8012ace:	2100      	movs	r1, #0
 8012ad0:	2800      	cmp	r0, #0
 8012ad2:	bf0c      	ite	eq
 8012ad4:	4690      	moveq	r8, r2
 8012ad6:	4698      	movne	r8, r3
 8012ad8:	4620      	mov	r0, r4
 8012ada:	f7f8 fbb3 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 8012ade:	4a2a      	ldr	r2, [pc, #168]	; (8012b88 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xfc>)
 8012ae0:	4b2a      	ldr	r3, [pc, #168]	; (8012b8c <DisplayUdf::ShowUniverse(ArtNetNode*)+0x100>)
 8012ae2:	4649      	mov	r1, r9
 8012ae4:	2800      	cmp	r0, #0
 8012ae6:	bf18      	it	ne
 8012ae8:	4613      	movne	r3, r2
 8012aea:	e9cd 7a00 	strd	r7, sl, [sp]
 8012aee:	e9cd 8302 	strd	r8, r3, [sp, #8]
 8012af2:	4630      	mov	r0, r6
 8012af4:	462b      	mov	r3, r5
 8012af6:	4a26      	ldr	r2, [pc, #152]	; (8012b90 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x104>)
 8012af8:	f7ff fc25 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012afc:	2500      	movs	r5, #0
 8012afe:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8012b8c <DisplayUdf::ShowUniverse(ArtNetNode*)+0x100>
 8012b02:	4629      	mov	r1, r5
 8012b04:	2301      	movs	r3, #1
 8012b06:	4620      	mov	r0, r4
 8012b08:	f10d 0227 	add.w	r2, sp, #39	; 0x27
 8012b0c:	f7f8 fa32 	bl	800af74 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 8012b10:	46a9      	mov	r9, r5
 8012b12:	3501      	adds	r5, #1
 8012b14:	b378      	cbz	r0, 8012b76 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xea>
 8012b16:	f106 0343 	add.w	r3, r6, #67	; 0x43
 8012b1a:	2100      	movs	r1, #0
 8012b1c:	4620      	mov	r0, r4
 8012b1e:	f813 b005 	ldrb.w	fp, [r3, r5]
 8012b22:	f7f8 fa41 	bl	800afa8 <ArtNetNode::GetNetSwitch(unsigned int) const>
 8012b26:	2100      	movs	r1, #0
 8012b28:	4607      	mov	r7, r0
 8012b2a:	4620      	mov	r0, r4
 8012b2c:	f7f8 fa38 	bl	800afa0 <ArtNetNode::GetSubnetSwitch(unsigned int) const>
 8012b30:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
 8012b34:	4680      	mov	r8, r0
 8012b36:	4649      	mov	r1, r9
 8012b38:	4620      	mov	r0, r4
 8012b3a:	9307      	str	r3, [sp, #28]
 8012b3c:	f7f8 fbb3 	bl	800b2a6 <ArtNetNode::GetMergeMode(unsigned int) const>
 8012b40:	4b10      	ldr	r3, [pc, #64]	; (8012b84 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf8>)
 8012b42:	4a0f      	ldr	r2, [pc, #60]	; (8012b80 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf4>)
 8012b44:	4649      	mov	r1, r9
 8012b46:	2800      	cmp	r0, #0
 8012b48:	bf18      	it	ne
 8012b4a:	461a      	movne	r2, r3
 8012b4c:	4620      	mov	r0, r4
 8012b4e:	9206      	str	r2, [sp, #24]
 8012b50:	f7f8 fb78 	bl	800b244 <ArtNetNode::GetPortProtocol(unsigned int) const>
 8012b54:	490c      	ldr	r1, [pc, #48]	; (8012b88 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xfc>)
 8012b56:	9a06      	ldr	r2, [sp, #24]
 8012b58:	2800      	cmp	r0, #0
 8012b5a:	bf08      	it	eq
 8012b5c:	4651      	moveq	r1, sl
 8012b5e:	9b07      	ldr	r3, [sp, #28]
 8012b60:	9104      	str	r1, [sp, #16]
 8012b62:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8012b66:	9203      	str	r2, [sp, #12]
 8012b68:	462b      	mov	r3, r5
 8012b6a:	4659      	mov	r1, fp
 8012b6c:	4630      	mov	r0, r6
 8012b6e:	4a09      	ldr	r2, [pc, #36]	; (8012b94 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x108>)
 8012b70:	9700      	str	r7, [sp, #0]
 8012b72:	f7ff fbe8 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012b76:	2d04      	cmp	r5, #4
 8012b78:	d1c3      	bne.n	8012b02 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x76>
 8012b7a:	b00b      	add	sp, #44	; 0x2c
 8012b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b80:	0801775d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 8012b84:	08017761 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, ip, sp, lr}
 8012b88:	0801776d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
 8012b8c:	08018184 	stmdaeq	r1, {r2, r7, r8, pc}
 8012b90:	08018189 	stmdaeq	r1, {r0, r3, r7, r8, pc}
 8012b94:	0801819d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, pc}

08012b98 <DisplayUdf::ShowDestinationIp(ArtNetNode*)>:
 8012b98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012b9c:	4606      	mov	r6, r0
 8012b9e:	2541      	movs	r5, #65	; 0x41
 8012ba0:	f8df 903c 	ldr.w	r9, [pc, #60]	; 8012be0 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x48>
 8012ba4:	b085      	sub	sp, #20
 8012ba6:	f100 084a 	add.w	r8, r0, #74	; 0x4a
 8012baa:	f501 6780 	add.w	r7, r1, #1024	; 0x400
 8012bae:	012b      	lsls	r3, r5, #4
 8012bb0:	58fc      	ldr	r4, [r7, r3]
 8012bb2:	464a      	mov	r2, r9
 8012bb4:	0e23      	lsrs	r3, r4, #24
 8012bb6:	9303      	str	r3, [sp, #12]
 8012bb8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8012bbc:	9302      	str	r3, [sp, #8]
 8012bbe:	f3c4 2307 	ubfx	r3, r4, #8, #8
 8012bc2:	b2e4      	uxtb	r4, r4
 8012bc4:	9301      	str	r3, [sp, #4]
 8012bc6:	9400      	str	r4, [sp, #0]
 8012bc8:	462b      	mov	r3, r5
 8012bca:	4630      	mov	r0, r6
 8012bcc:	f818 1b01 	ldrb.w	r1, [r8], #1
 8012bd0:	3501      	adds	r5, #1
 8012bd2:	f7ff fbb8 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012bd6:	2d45      	cmp	r5, #69	; 0x45
 8012bd8:	d1e9      	bne.n	8012bae <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x16>
 8012bda:	b005      	add	sp, #20
 8012bdc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012be0:	080181b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, pc}

08012be4 <DisplayUdf::Show(ArtNetNode*)>:
 8012be4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012be6:	4604      	mov	r4, r0
 8012be8:	460d      	mov	r5, r1
 8012bea:	f7ff fca3 	bl	8012534 <DisplayUdf::Show()>
 8012bee:	4629      	mov	r1, r5
 8012bf0:	4620      	mov	r0, r4
 8012bf2:	f7ff ff29 	bl	8012a48 <DisplayUdf::ShowNodeName(ArtNetNode*)>
 8012bf6:	4629      	mov	r1, r5
 8012bf8:	4620      	mov	r0, r4
 8012bfa:	f7ff ff47 	bl	8012a8c <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8012bfe:	4629      	mov	r1, r5
 8012c00:	4620      	mov	r0, r4
 8012c02:	f7ff ffc9 	bl	8012b98 <DisplayUdf::ShowDestinationIp(ArtNetNode*)>
 8012c06:	f895 26e2 	ldrb.w	r2, [r5, #1762]	; 0x6e2
 8012c0a:	f895 36e3 	ldrb.w	r3, [r5, #1763]	; 0x6e3
 8012c0e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8012c12:	4413      	add	r3, r2
 8012c14:	4620      	mov	r0, r4
 8012c16:	4a0d      	ldr	r2, [pc, #52]	; (8012c4c <DisplayUdf::Show(ArtNetNode*)+0x68>)
 8012c18:	f7ff fb95 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012c1c:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8012c1e:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8012c22:	2a02      	cmp	r2, #2
 8012c24:	d001      	beq.n	8012c2a <DisplayUdf::Show(ArtNetNode*)+0x46>
 8012c26:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012c28:	b92b      	cbnz	r3, 8012c36 <DisplayUdf::Show(ArtNetNode*)+0x52>
 8012c2a:	4620      	mov	r0, r4
 8012c2c:	4a08      	ldr	r2, [pc, #32]	; (8012c50 <DisplayUdf::Show(ArtNetNode*)+0x6c>)
 8012c2e:	f7ff fb8a 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012c32:	b003      	add	sp, #12
 8012c34:	bd30      	pop	{r4, r5, pc}
 8012c36:	4807      	ldr	r0, [pc, #28]	; (8012c54 <DisplayUdf::Show(ArtNetNode*)+0x70>)
 8012c38:	9300      	str	r3, [sp, #0]
 8012c3a:	4b07      	ldr	r3, [pc, #28]	; (8012c58 <DisplayUdf::Show(ArtNetNode*)+0x74>)
 8012c3c:	2a00      	cmp	r2, #0
 8012c3e:	bf08      	it	eq
 8012c40:	4603      	moveq	r3, r0
 8012c42:	4620      	mov	r0, r4
 8012c44:	4a05      	ldr	r2, [pc, #20]	; (8012c5c <DisplayUdf::Show(ArtNetNode*)+0x78>)
 8012c46:	f7ff fb7e 	bl	8012346 <Display::Printf(unsigned char, char const*, ...)>
 8012c4a:	e7f2      	b.n	8012c32 <DisplayUdf::Show(ArtNetNode*)+0x4e>
 8012c4c:	080181c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, pc}
 8012c50:	080181ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, pc}
 8012c54:	0801791b 	stmdaeq	r1, {r0, r1, r3, r4, r8, fp, ip, sp, lr}
 8012c58:	08017910 	stmdaeq	r1, {r4, r8, fp, ip, sp, lr}
 8012c5c:	080181d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, pc}

08012c60 <properties::convert_json_file(char*, unsigned short, bool)>:
 8012c60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c64:	7803      	ldrb	r3, [r0, #0]
 8012c66:	2b7b      	cmp	r3, #123	; 0x7b
 8012c68:	d170      	bne.n	8012d4c <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 8012c6a:	b322      	cbz	r2, 8012cb6 <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 8012c6c:	2301      	movs	r3, #1
 8012c6e:	4606      	mov	r6, r0
 8012c70:	461c      	mov	r4, r3
 8012c72:	2a00      	cmp	r2, #0
 8012c74:	bf0c      	ite	eq
 8012c76:	f04f 0c0a 	moveq.w	ip, #10
 8012c7a:	f04f 0c00 	movne.w	ip, #0
 8012c7e:	273d      	movs	r7, #61	; 0x3d
 8012c80:	4299      	cmp	r1, r3
 8012c82:	d960      	bls.n	8012d46 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8012c84:	4299      	cmp	r1, r3
 8012c86:	4602      	mov	r2, r0
 8012c88:	f890 e000 	ldrb.w	lr, [r0]
 8012c8c:	f103 0301 	add.w	r3, r3, #1
 8012c90:	f100 0001 	add.w	r0, r0, #1
 8012c94:	d846      	bhi.n	8012d24 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 8012c96:	1aa0      	subs	r0, r4, r2
 8012c98:	4615      	mov	r5, r2
 8012c9a:	1884      	adds	r4, r0, r2
 8012c9c:	f812 8b01 	ldrb.w	r8, [r2], #1
 8012ca0:	f103 0e01 	add.w	lr, r3, #1
 8012ca4:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 8012ca8:	d053      	beq.n	8012d52 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 8012caa:	4299      	cmp	r1, r3
 8012cac:	d957      	bls.n	8012d5e <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8012cae:	4673      	mov	r3, lr
 8012cb0:	f806 8b01 	strb.w	r8, [r6], #1
 8012cb4:	e7f0      	b.n	8012c98 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 8012cb6:	2323      	movs	r3, #35	; 0x23
 8012cb8:	f800 3b01 	strb.w	r3, [r0], #1
 8012cbc:	4605      	mov	r5, r0
 8012cbe:	2301      	movs	r3, #1
 8012cc0:	4299      	cmp	r1, r3
 8012cc2:	d92d      	bls.n	8012d20 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 8012cc4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012cc8:	2c22      	cmp	r4, #34	; 0x22
 8012cca:	d001      	beq.n	8012cd0 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8012ccc:	3301      	adds	r3, #1
 8012cce:	e7f7      	b.n	8012cc0 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 8012cd0:	46ac      	mov	ip, r5
 8012cd2:	4606      	mov	r6, r0
 8012cd4:	2701      	movs	r7, #1
 8012cd6:	f89c e000 	ldrb.w	lr, [ip]
 8012cda:	4665      	mov	r5, ip
 8012cdc:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012ce0:	4630      	mov	r0, r6
 8012ce2:	463c      	mov	r4, r7
 8012ce4:	f10c 0c01 	add.w	ip, ip, #1
 8012ce8:	f106 0601 	add.w	r6, r6, #1
 8012cec:	f107 0701 	add.w	r7, r7, #1
 8012cf0:	d007      	beq.n	8012d02 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8012cf2:	3301      	adds	r3, #1
 8012cf4:	4299      	cmp	r1, r3
 8012cf6:	4665      	mov	r5, ip
 8012cf8:	f806 ec01 	strb.w	lr, [r6, #-1]
 8012cfc:	d8eb      	bhi.n	8012cd6 <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 8012cfe:	463c      	mov	r4, r7
 8012d00:	4630      	mov	r0, r6
 8012d02:	4606      	mov	r6, r0
 8012d04:	200a      	movs	r0, #10
 8012d06:	3401      	adds	r4, #1
 8012d08:	f806 0b01 	strb.w	r0, [r6], #1
 8012d0c:	4628      	mov	r0, r5
 8012d0e:	f815 7b01 	ldrb.w	r7, [r5], #1
 8012d12:	2f7b      	cmp	r7, #123	; 0x7b
 8012d14:	d0ad      	beq.n	8012c72 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8012d16:	1c5f      	adds	r7, r3, #1
 8012d18:	4299      	cmp	r1, r3
 8012d1a:	463b      	mov	r3, r7
 8012d1c:	d8f6      	bhi.n	8012d0c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8012d1e:	e7a8      	b.n	8012c72 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8012d20:	2401      	movs	r4, #1
 8012d22:	e7ee      	b.n	8012d02 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8012d24:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012d28:	d1ac      	bne.n	8012c84 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8012d2a:	4602      	mov	r2, r0
 8012d2c:	e7b3      	b.n	8012c96 <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8012d2e:	283a      	cmp	r0, #58	; 0x3a
 8012d30:	d115      	bne.n	8012d5e <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8012d32:	462b      	mov	r3, r5
 8012d34:	e01b      	b.n	8012d6e <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8012d36:	4686      	mov	lr, r0
 8012d38:	e027      	b.n	8012d8a <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 8012d3a:	4673      	mov	r3, lr
 8012d3c:	f806 cb01 	strb.w	ip, [r6], #1
 8012d40:	3401      	adds	r4, #1
 8012d42:	3301      	adds	r3, #1
 8012d44:	e79c      	b.n	8012c80 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 8012d46:	4620      	mov	r0, r4
 8012d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d4c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012d50:	e7fa      	b.n	8012d48 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8012d52:	4630      	mov	r0, r6
 8012d54:	f800 7b01 	strb.w	r7, [r0], #1
 8012d58:	469e      	mov	lr, r3
 8012d5a:	4606      	mov	r6, r0
 8012d5c:	3401      	adds	r4, #1
 8012d5e:	4571      	cmp	r1, lr
 8012d60:	462b      	mov	r3, r5
 8012d62:	7828      	ldrb	r0, [r5, #0]
 8012d64:	f10e 0e01 	add.w	lr, lr, #1
 8012d68:	f105 0501 	add.w	r5, r5, #1
 8012d6c:	d8df      	bhi.n	8012d2e <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 8012d6e:	781d      	ldrb	r5, [r3, #0]
 8012d70:	461a      	mov	r2, r3
 8012d72:	2d2f      	cmp	r5, #47	; 0x2f
 8012d74:	4670      	mov	r0, lr
 8012d76:	f103 0301 	add.w	r3, r3, #1
 8012d7a:	f10e 0e01 	add.w	lr, lr, #1
 8012d7e:	d8da      	bhi.n	8012d36 <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 8012d80:	4281      	cmp	r1, r0
 8012d82:	d8f4      	bhi.n	8012d6e <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8012d84:	2d22      	cmp	r5, #34	; 0x22
 8012d86:	bf08      	it	eq
 8012d88:	461a      	moveq	r2, r3
 8012d8a:	4610      	mov	r0, r2
 8012d8c:	f810 5b01 	ldrb.w	r5, [r0], #1
 8012d90:	f10e 0301 	add.w	r3, lr, #1
 8012d94:	2d22      	cmp	r5, #34	; 0x22
 8012d96:	d0d0      	beq.n	8012d3a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8012d98:	2d2c      	cmp	r5, #44	; 0x2c
 8012d9a:	d0ce      	beq.n	8012d3a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8012d9c:	2d7d      	cmp	r5, #125	; 0x7d
 8012d9e:	d0cc      	beq.n	8012d3a <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8012da0:	4571      	cmp	r1, lr
 8012da2:	d9ce      	bls.n	8012d42 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8012da4:	f1a5 0e20 	sub.w	lr, r5, #32
 8012da8:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8012dac:	d803      	bhi.n	8012db6 <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 8012dae:	4602      	mov	r2, r0
 8012db0:	f806 5b01 	strb.w	r5, [r6], #1
 8012db4:	3401      	adds	r4, #1
 8012db6:	469e      	mov	lr, r3
 8012db8:	e7e7      	b.n	8012d8a <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08012dbc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8012dbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012dc0:	6002      	str	r2, [r0, #0]
 8012dc2:	4614      	mov	r4, r2
 8012dc4:	2200      	movs	r2, #0
 8012dc6:	4606      	mov	r6, r0
 8012dc8:	460f      	mov	r7, r1
 8012dca:	80c2      	strh	r2, [r0, #6]
 8012dcc:	4a1b      	ldr	r2, [pc, #108]	; (8012e3c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8012dce:	8083      	strh	r3, [r0, #4]
 8012dd0:	7810      	ldrb	r0, [r2, #0]
 8012dd2:	f000 0001 	and.w	r0, r0, #1
 8012dd6:	7230      	strb	r0, [r6, #8]
 8012dd8:	463d      	mov	r5, r7
 8012dda:	782a      	ldrb	r2, [r5, #0]
 8012ddc:	3701      	adds	r7, #1
 8012dde:	2a00      	cmp	r2, #0
 8012de0:	d1fa      	bne.n	8012dd8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8012de2:	1a6d      	subs	r5, r5, r1
 8012de4:	b29b      	uxth	r3, r3
 8012de6:	b1d0      	cbz	r0, 8012e1e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8012de8:	1d2f      	adds	r7, r5, #4
 8012dea:	429f      	cmp	r7, r3
 8012dec:	d814      	bhi.n	8012e18 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012dee:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8012df2:	f04f 0922 	mov.w	r9, #34	; 0x22
 8012df6:	462a      	mov	r2, r5
 8012df8:	f884 8000 	strb.w	r8, [r4]
 8012dfc:	f884 9001 	strb.w	r9, [r4, #1]
 8012e00:	1ca0      	adds	r0, r4, #2
 8012e02:	f000 fed4 	bl	8013bae <memmove>
 8012e06:	223a      	movs	r2, #58	; 0x3a
 8012e08:	1963      	adds	r3, r4, r5
 8012e0a:	3505      	adds	r5, #5
 8012e0c:	f883 9002 	strb.w	r9, [r3, #2]
 8012e10:	70da      	strb	r2, [r3, #3]
 8012e12:	80f5      	strh	r5, [r6, #6]
 8012e14:	f804 8007 	strb.w	r8, [r4, r7]
 8012e18:	4630      	mov	r0, r6
 8012e1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012e1e:	1caf      	adds	r7, r5, #2
 8012e20:	429f      	cmp	r7, r3
 8012e22:	d8f9      	bhi.n	8012e18 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012e24:	4620      	mov	r0, r4
 8012e26:	2323      	movs	r3, #35	; 0x23
 8012e28:	462a      	mov	r2, r5
 8012e2a:	f800 3b01 	strb.w	r3, [r0], #1
 8012e2e:	f000 febe 	bl	8013bae <memmove>
 8012e32:	230a      	movs	r3, #10
 8012e34:	442c      	add	r4, r5
 8012e36:	7063      	strb	r3, [r4, #1]
 8012e38:	80f7      	strh	r7, [r6, #6]
 8012e3a:	e7ed      	b.n	8012e18 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012e3c:	2000d294 	mulcs	r0, r4, r2

08012e40 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8012e40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012e42:	469c      	mov	ip, r3
 8012e44:	8885      	ldrh	r5, [r0, #4]
 8012e46:	88c3      	ldrh	r3, [r0, #6]
 8012e48:	b085      	sub	sp, #20
 8012e4a:	42ab      	cmp	r3, r5
 8012e4c:	d302      	bcc.n	8012e54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8012e4e:	2000      	movs	r0, #0
 8012e50:	b005      	add	sp, #20
 8012e52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012e54:	4604      	mov	r4, r0
 8012e56:	6800      	ldr	r0, [r0, #0]
 8012e58:	1aed      	subs	r5, r5, r3
 8012e5a:	4418      	add	r0, r3
 8012e5c:	b2d6      	uxtb	r6, r2
 8012e5e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8012e62:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8012e66:	f894 e008 	ldrb.w	lr, [r4, #8]
 8012e6a:	0e12      	lsrs	r2, r2, #24
 8012e6c:	f1bc 0f00 	cmp.w	ip, #0
 8012e70:	d109      	bne.n	8012e86 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8012e72:	f1be 0f00 	cmp.w	lr, #0
 8012e76:	d109      	bne.n	8012e8c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8012e78:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012e7c:	e9cd 6700 	strd	r6, r7, [sp]
 8012e80:	460b      	mov	r3, r1
 8012e82:	4a0e      	ldr	r2, [pc, #56]	; (8012ebc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8012e84:	e008      	b.n	8012e98 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8012e86:	f1be 0f00 	cmp.w	lr, #0
 8012e8a:	d00f      	beq.n	8012eac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8012e8c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012e90:	460b      	mov	r3, r1
 8012e92:	e9cd 6700 	strd	r6, r7, [sp]
 8012e96:	4a0a      	ldr	r2, [pc, #40]	; (8012ec0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8012e98:	4629      	mov	r1, r5
 8012e9a:	f001 f9f7 	bl	801428c <snprintf>
 8012e9e:	4285      	cmp	r5, r0
 8012ea0:	dbd5      	blt.n	8012e4e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8012ea2:	88e3      	ldrh	r3, [r4, #6]
 8012ea4:	4403      	add	r3, r0
 8012ea6:	80e3      	strh	r3, [r4, #6]
 8012ea8:	2001      	movs	r0, #1
 8012eaa:	e7d1      	b.n	8012e50 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8012eac:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012eb0:	e9cd 6700 	strd	r6, r7, [sp]
 8012eb4:	460b      	mov	r3, r1
 8012eb6:	4a03      	ldr	r2, [pc, #12]	; (8012ec4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8012eb8:	e7ee      	b.n	8012e98 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8012eba:	bf00      	nop
 8012ebc:	080181ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, pc}
 8012ec0:	080181db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, pc}
 8012ec4:	080181f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, pc}

08012ec8 <PropertiesBuilder::AddComment(char const*)>:
 8012ec8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012eca:	7a06      	ldrb	r6, [r0, #8]
 8012ecc:	b996      	cbnz	r6, 8012ef4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8012ece:	4604      	mov	r4, r0
 8012ed0:	88c0      	ldrh	r0, [r0, #6]
 8012ed2:	88a5      	ldrh	r5, [r4, #4]
 8012ed4:	42a8      	cmp	r0, r5
 8012ed6:	d20d      	bcs.n	8012ef4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8012ed8:	6827      	ldr	r7, [r4, #0]
 8012eda:	1a2d      	subs	r5, r5, r0
 8012edc:	460b      	mov	r3, r1
 8012ede:	4a06      	ldr	r2, [pc, #24]	; (8012ef8 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8012ee0:	4629      	mov	r1, r5
 8012ee2:	4438      	add	r0, r7
 8012ee4:	f001 f9d2 	bl	801428c <snprintf>
 8012ee8:	4285      	cmp	r5, r0
 8012eea:	bfa1      	itttt	ge
 8012eec:	2601      	movge	r6, #1
 8012eee:	88e3      	ldrhge	r3, [r4, #6]
 8012ef0:	18c0      	addge	r0, r0, r3
 8012ef2:	80e0      	strhge	r0, [r4, #6]
 8012ef4:	4630      	mov	r0, r6
 8012ef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012ef8:	08018200 	stmdaeq	r1, {r9, pc}

08012efc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8012efc:	e9c0 1200 	strd	r1, r2, [r0]
 8012f00:	4770      	bx	lr

08012f02 <ReadConfigFile::~ReadConfigFile()>:
 8012f02:	4770      	bx	lr

08012f04 <ReadConfigFile::Read(char const*, unsigned int)>:
 8012f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f08:	4606      	mov	r6, r0
 8012f0a:	460d      	mov	r5, r1
 8012f0c:	4614      	mov	r4, r2
 8012f0e:	f04f 0800 	mov.w	r8, #0
 8012f12:	b090      	sub	sp, #64	; 0x40
 8012f14:	b33c      	cbz	r4, 8012f66 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8012f16:	466b      	mov	r3, sp
 8012f18:	462a      	mov	r2, r5
 8012f1a:	4619      	mov	r1, r3
 8012f1c:	7817      	ldrb	r7, [r2, #0]
 8012f1e:	4610      	mov	r0, r2
 8012f20:	2f0d      	cmp	r7, #13
 8012f22:	f102 0201 	add.w	r2, r2, #1
 8012f26:	d013      	beq.n	8012f50 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8012f28:	2f0a      	cmp	r7, #10
 8012f2a:	d011      	beq.n	8012f50 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8012f2c:	f803 7b01 	strb.w	r7, [r3], #1
 8012f30:	1a58      	subs	r0, r3, r1
 8012f32:	283f      	cmp	r0, #63	; 0x3f
 8012f34:	4615      	mov	r5, r2
 8012f36:	dc16      	bgt.n	8012f66 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8012f38:	3c01      	subs	r4, #1
 8012f3a:	d1ef      	bne.n	8012f1c <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 8012f3c:	f89d 2000 	ldrb.w	r2, [sp]
 8012f40:	2a60      	cmp	r2, #96	; 0x60
 8012f42:	d9e7      	bls.n	8012f14 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8012f44:	f883 8000 	strb.w	r8, [r3]
 8012f48:	e9d6 3000 	ldrd	r3, r0, [r6]
 8012f4c:	4798      	blx	r3
 8012f4e:	e7e1      	b.n	8012f14 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8012f50:	4605      	mov	r5, r0
 8012f52:	2c00      	cmp	r4, #0
 8012f54:	d0f2      	beq.n	8012f3c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8012f56:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012f5a:	2a0d      	cmp	r2, #13
 8012f5c:	d001      	beq.n	8012f62 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8012f5e:	2a0a      	cmp	r2, #10
 8012f60:	d1ec      	bne.n	8012f3c <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8012f62:	3c01      	subs	r4, #1
 8012f64:	e7f4      	b.n	8012f50 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8012f66:	b010      	add	sp, #64	; 0x40
 8012f68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012f6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8012f6c:	b570      	push	{r4, r5, r6, lr}
 8012f6e:	4615      	mov	r5, r2
 8012f70:	461c      	mov	r4, r3
 8012f72:	f000 f8f2 	bl	801315a <Sscan::checkName(char const*, char const*)>
 8012f76:	b160      	cbz	r0, 8012f92 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 8012f78:	2100      	movs	r1, #0
 8012f7a:	5c43      	ldrb	r3, [r0, r1]
 8012f7c:	6826      	ldr	r6, [r4, #0]
 8012f7e:	b28a      	uxth	r2, r1
 8012f80:	b123      	cbz	r3, 8012f8c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8012f82:	42b2      	cmp	r2, r6
 8012f84:	d207      	bcs.n	8012f96 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 8012f86:	546b      	strb	r3, [r5, r1]
 8012f88:	3101      	adds	r1, #1
 8012f8a:	e7f6      	b.n	8012f7a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8012f8c:	2000      	movs	r0, #0
 8012f8e:	6022      	str	r2, [r4, #0]
 8012f90:	bd70      	pop	{r4, r5, r6, pc}
 8012f92:	2001      	movs	r0, #1
 8012f94:	e7fc      	b.n	8012f90 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 8012f96:	2b0a      	cmp	r3, #10
 8012f98:	d0f8      	beq.n	8012f8c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8012f9a:	2002      	movs	r0, #2
 8012f9c:	e7f8      	b.n	8012f90 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

08012f9e <Sscan::Float(char const*, char const*, float&)>:
 8012f9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012fa2:	4616      	mov	r6, r2
 8012fa4:	f000 f8d9 	bl	801315a <Sscan::checkName(char const*, char const*)>
 8012fa8:	2800      	cmp	r0, #0
 8012faa:	d059      	beq.n	8013060 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8012fac:	4604      	mov	r4, r0
 8012fae:	7803      	ldrb	r3, [r0, #0]
 8012fb0:	2b2d      	cmp	r3, #45	; 0x2d
 8012fb2:	bf08      	it	eq
 8012fb4:	3401      	addeq	r4, #1
 8012fb6:	7823      	ldrb	r3, [r4, #0]
 8012fb8:	bf0c      	ite	eq
 8012fba:	f04f 0801 	moveq.w	r8, #1
 8012fbe:	f04f 0800 	movne.w	r8, #0
 8012fc2:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012fc6:	d103      	bne.n	8012fd0 <Sscan::Float(char const*, char const*, float&)+0x32>
 8012fc8:	2702      	movs	r7, #2
 8012fca:	4638      	mov	r0, r7
 8012fcc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012fd0:	2000      	movs	r0, #0
 8012fd2:	220a      	movs	r2, #10
 8012fd4:	7823      	ldrb	r3, [r4, #0]
 8012fd6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8012fda:	2909      	cmp	r1, #9
 8012fdc:	d8f4      	bhi.n	8012fc8 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8012fde:	fb02 3000 	mla	r0, r2, r0, r3
 8012fe2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012fe6:	3830      	subs	r0, #48	; 0x30
 8012fe8:	2b2e      	cmp	r3, #46	; 0x2e
 8012fea:	d002      	beq.n	8012ff2 <Sscan::Float(char const*, char const*, float&)+0x54>
 8012fec:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012ff0:	d1f0      	bne.n	8012fd4 <Sscan::Float(char const*, char const*, float&)+0x36>
 8012ff2:	f7f5 f86b 	bl	80080cc <__aeabi_ui2f>
 8012ff6:	6030      	str	r0, [r6, #0]
 8012ff8:	7823      	ldrb	r3, [r4, #0]
 8012ffa:	4605      	mov	r5, r0
 8012ffc:	2b2e      	cmp	r3, #46	; 0x2e
 8012ffe:	d008      	beq.n	8013012 <Sscan::Float(char const*, char const*, float&)+0x74>
 8013000:	f1b8 0f00 	cmp.w	r8, #0
 8013004:	d101      	bne.n	801300a <Sscan::Float(char const*, char const*, float&)+0x6c>
 8013006:	2700      	movs	r7, #0
 8013008:	e7df      	b.n	8012fca <Sscan::Float(char const*, char const*, float&)+0x2c>
 801300a:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 801300e:	6035      	str	r5, [r6, #0]
 8013010:	e7f9      	b.n	8013006 <Sscan::Float(char const*, char const*, float&)+0x68>
 8013012:	f04f 0901 	mov.w	r9, #1
 8013016:	2000      	movs	r0, #0
 8013018:	220a      	movs	r2, #10
 801301a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801301e:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8013022:	d007      	beq.n	8013034 <Sscan::Float(char const*, char const*, float&)+0x96>
 8013024:	3b30      	subs	r3, #48	; 0x30
 8013026:	2b09      	cmp	r3, #9
 8013028:	d8ce      	bhi.n	8012fc8 <Sscan::Float(char const*, char const*, float&)+0x2a>
 801302a:	fb02 3000 	mla	r0, r2, r0, r3
 801302e:	fb02 f909 	mul.w	r9, r2, r9
 8013032:	e7f2      	b.n	801301a <Sscan::Float(char const*, char const*, float&)+0x7c>
 8013034:	f7f5 f84a 	bl	80080cc <__aeabi_ui2f>
 8013038:	4604      	mov	r4, r0
 801303a:	4648      	mov	r0, r9
 801303c:	f7f5 f846 	bl	80080cc <__aeabi_ui2f>
 8013040:	4601      	mov	r1, r0
 8013042:	4620      	mov	r0, r4
 8013044:	f7f5 f94e 	bl	80082e4 <__aeabi_fdiv>
 8013048:	4629      	mov	r1, r5
 801304a:	f7f4 ff8f 	bl	8007f6c <__addsf3>
 801304e:	f1b8 0f00 	cmp.w	r8, #0
 8013052:	d101      	bne.n	8013058 <Sscan::Float(char const*, char const*, float&)+0xba>
 8013054:	6030      	str	r0, [r6, #0]
 8013056:	e7d6      	b.n	8013006 <Sscan::Float(char const*, char const*, float&)+0x68>
 8013058:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 801305c:	6030      	str	r0, [r6, #0]
 801305e:	e7b4      	b.n	8012fca <Sscan::Float(char const*, char const*, float&)+0x2c>
 8013060:	2701      	movs	r7, #1
 8013062:	e7b2      	b.n	8012fca <Sscan::Float(char const*, char const*, float&)+0x2c>

08013064 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8013064:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013066:	4615      	mov	r5, r2
 8013068:	f000 f877 	bl	801315a <Sscan::checkName(char const*, char const*)>
 801306c:	b3c0      	cbz	r0, 80130e0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 801306e:	2400      	movs	r4, #0
 8013070:	270a      	movs	r7, #10
 8013072:	ae01      	add	r6, sp, #4
 8013074:	4603      	mov	r3, r0
 8013076:	2100      	movs	r1, #0
 8013078:	f100 0c04 	add.w	ip, r0, #4
 801307c:	4618      	mov	r0, r3
 801307e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013082:	2a2e      	cmp	r2, #46	; 0x2e
 8013084:	d00e      	beq.n	80130a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8013086:	b16a      	cbz	r2, 80130a4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8013088:	4560      	cmp	r0, ip
 801308a:	d102      	bne.n	8013092 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 801308c:	2002      	movs	r0, #2
 801308e:	b003      	add	sp, #12
 8013090:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013092:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8013096:	2b09      	cmp	r3, #9
 8013098:	d8f8      	bhi.n	801308c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801309a:	fb07 2101 	mla	r1, r7, r1, r2
 801309e:	4603      	mov	r3, r0
 80130a0:	3930      	subs	r1, #48	; 0x30
 80130a2:	e7eb      	b.n	801307c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 80130a4:	29ff      	cmp	r1, #255	; 0xff
 80130a6:	d8f1      	bhi.n	801308c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80130a8:	3401      	adds	r4, #1
 80130aa:	2c03      	cmp	r4, #3
 80130ac:	f806 1b01 	strb.w	r1, [r6], #1
 80130b0:	d1e0      	bne.n	8013074 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 80130b2:	2400      	movs	r4, #0
 80130b4:	220a      	movs	r2, #10
 80130b6:	1d1e      	adds	r6, r3, #4
 80130b8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80130bc:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80130c0:	d007      	beq.n	80130d2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 80130c2:	429e      	cmp	r6, r3
 80130c4:	d0e2      	beq.n	801308c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80130c6:	3930      	subs	r1, #48	; 0x30
 80130c8:	2909      	cmp	r1, #9
 80130ca:	d8df      	bhi.n	801308c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80130cc:	fb02 1404 	mla	r4, r2, r4, r1
 80130d0:	e7f2      	b.n	80130b8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80130d2:	2cff      	cmp	r4, #255	; 0xff
 80130d4:	d8da      	bhi.n	801308c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80130d6:	f88d 4007 	strb.w	r4, [sp, #7]
 80130da:	9b01      	ldr	r3, [sp, #4]
 80130dc:	602b      	str	r3, [r5, #0]
 80130de:	e7d6      	b.n	801308e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 80130e0:	2001      	movs	r0, #1
 80130e2:	e7d4      	b.n	801308e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

080130e4 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80130e4:	b538      	push	{r3, r4, r5, lr}
 80130e6:	4615      	mov	r5, r2
 80130e8:	f000 f837 	bl	801315a <Sscan::checkName(char const*, char const*)>
 80130ec:	b1a0      	cbz	r0, 8013118 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80130ee:	4604      	mov	r4, r0
 80130f0:	2100      	movs	r1, #0
 80130f2:	220a      	movs	r2, #10
 80130f4:	7823      	ldrb	r3, [r4, #0]
 80130f6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80130fa:	2809      	cmp	r0, #9
 80130fc:	d80e      	bhi.n	801311c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80130fe:	fb02 3101 	mla	r1, r2, r1, r3
 8013102:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013106:	3930      	subs	r1, #48	; 0x30
 8013108:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801310c:	d1f2      	bne.n	80130f4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 801310e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8013112:	d203      	bcs.n	801311c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8013114:	8029      	strh	r1, [r5, #0]
 8013116:	bd38      	pop	{r3, r4, r5, pc}
 8013118:	2001      	movs	r0, #1
 801311a:	e7fc      	b.n	8013116 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 801311c:	2002      	movs	r0, #2
 801311e:	e7fa      	b.n	8013116 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08013120 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8013120:	b538      	push	{r3, r4, r5, lr}
 8013122:	4615      	mov	r5, r2
 8013124:	f000 f819 	bl	801315a <Sscan::checkName(char const*, char const*)>
 8013128:	b198      	cbz	r0, 8013152 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 801312a:	4604      	mov	r4, r0
 801312c:	2100      	movs	r1, #0
 801312e:	220a      	movs	r2, #10
 8013130:	7823      	ldrb	r3, [r4, #0]
 8013132:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8013136:	2809      	cmp	r0, #9
 8013138:	d80d      	bhi.n	8013156 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801313a:	fb02 3101 	mla	r1, r2, r1, r3
 801313e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013142:	3930      	subs	r1, #48	; 0x30
 8013144:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8013148:	d1f2      	bne.n	8013130 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 801314a:	29ff      	cmp	r1, #255	; 0xff
 801314c:	d803      	bhi.n	8013156 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801314e:	7029      	strb	r1, [r5, #0]
 8013150:	bd38      	pop	{r3, r4, r5, pc}
 8013152:	2001      	movs	r0, #1
 8013154:	e7fc      	b.n	8013150 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8013156:	2002      	movs	r0, #2
 8013158:	e7fa      	b.n	8013150 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0801315a <Sscan::checkName(char const*, char const*)>:
 801315a:	4603      	mov	r3, r0
 801315c:	b510      	push	{r4, lr}
 801315e:	3901      	subs	r1, #1
 8013160:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8013164:	461c      	mov	r4, r3
 8013166:	f813 2b01 	ldrb.w	r2, [r3], #1
 801316a:	b120      	cbz	r0, 8013176 <Sscan::checkName(char const*, char const*)+0x1c>
 801316c:	b10a      	cbz	r2, 8013172 <Sscan::checkName(char const*, char const*)+0x18>
 801316e:	4290      	cmp	r0, r2
 8013170:	d0f6      	beq.n	8013160 <Sscan::checkName(char const*, char const*)+0x6>
 8013172:	2000      	movs	r0, #0
 8013174:	e006      	b.n	8013184 <Sscan::checkName(char const*, char const*)+0x2a>
 8013176:	2a3d      	cmp	r2, #61	; 0x3d
 8013178:	d104      	bne.n	8013184 <Sscan::checkName(char const*, char const*)+0x2a>
 801317a:	7860      	ldrb	r0, [r4, #1]
 801317c:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8013180:	d000      	beq.n	8013184 <Sscan::checkName(char const*, char const*)+0x2a>
 8013182:	1c60      	adds	r0, r4, #1
 8013184:	bd10      	pop	{r4, pc}

08013186 <LightSet::GetDmxStartAddress()>:
 8013186:	2001      	movs	r0, #1
 8013188:	4770      	bx	lr

0801318a <LightSet::GetDmxFootprint()>:
 801318a:	f44f 7000 	mov.w	r0, #512	; 0x200
 801318e:	4770      	bx	lr

08013190 <LightSet::SetDmxStartAddress(unsigned short)>:
 8013190:	2000      	movs	r0, #0
 8013192:	4770      	bx	lr

08013194 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8013194:	2300      	movs	r3, #0
 8013196:	2001      	movs	r0, #1
 8013198:	7093      	strb	r3, [r2, #2]
 801319a:	8010      	strh	r0, [r2, #0]
 801319c:	4770      	bx	lr
	...

080131a0 <Display::PrintInfo() [clone .isra.0]>:
 80131a0:	b910      	cbnz	r0, 80131a8 <Display::PrintInfo() [clone .isra.0]+0x8>
 80131a2:	4803      	ldr	r0, [pc, #12]	; (80131b0 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80131a4:	f001 b89a 	b.w	80142dc <puts>
 80131a8:	6803      	ldr	r3, [r0, #0]
 80131aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80131ac:	4718      	bx	r3
 80131ae:	bf00      	nop
 80131b0:	080182f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, pc}

080131b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80131b4:	b513      	push	{r0, r1, r4, lr}
 80131b6:	4604      	mov	r4, r0
 80131b8:	0a13      	lsrs	r3, r2, #8
 80131ba:	7800      	ldrb	r0, [r0, #0]
 80131bc:	f88d 1004 	strb.w	r1, [sp, #4]
 80131c0:	f88d 3005 	strb.w	r3, [sp, #5]
 80131c4:	f88d 2006 	strb.w	r2, [sp, #6]
 80131c8:	f002 f95e 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 80131cc:	6860      	ldr	r0, [r4, #4]
 80131ce:	f002 f953 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 80131d2:	2103      	movs	r1, #3
 80131d4:	a801      	add	r0, sp, #4
 80131d6:	f002 f95d 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 80131da:	b002      	add	sp, #8
 80131dc:	bd10      	pop	{r4, pc}

080131de <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 80131de:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80131e0:	460d      	mov	r5, r1
 80131e2:	4604      	mov	r4, r0
 80131e4:	f002 f950 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 80131e8:	4628      	mov	r0, r5
 80131ea:	f002 f945 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 80131ee:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80131f2:	2b07      	cmp	r3, #7
 80131f4:	d902      	bls.n	80131fc <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80131f6:	3c50      	subs	r4, #80	; 0x50
 80131f8:	2c0f      	cmp	r4, #15
 80131fa:	d809      	bhi.n	8013210 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 80131fc:	2101      	movs	r1, #1
 80131fe:	f10d 0007 	add.w	r0, sp, #7
 8013202:	f002 f9ad 	bl	8015560 <gd32_i2c_read(char*, unsigned int)>
 8013206:	fab0 f080 	clz	r0, r0
 801320a:	0940      	lsrs	r0, r0, #5
 801320c:	b003      	add	sp, #12
 801320e:	bd30      	pop	{r4, r5, pc}
 8013210:	2100      	movs	r1, #0
 8013212:	4608      	mov	r0, r1
 8013214:	f002 f93e 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8013218:	e7f5      	b.n	8013206 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801321a <Display::Detect7Segment()>:
 801321a:	b538      	push	{r3, r4, r5, lr}
 801321c:	68c1      	ldr	r1, [r0, #12]
 801321e:	4604      	mov	r4, r0
 8013220:	7a00      	ldrb	r0, [r0, #8]
 8013222:	f7ff ffdc 	bl	80131de <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8013226:	7460      	strb	r0, [r4, #17]
 8013228:	b170      	cbz	r0, 8013248 <Display::Detect7Segment()+0x2e>
 801322a:	2200      	movs	r2, #0
 801322c:	f104 0508 	add.w	r5, r4, #8
 8013230:	4611      	mov	r1, r2
 8013232:	4628      	mov	r0, r5
 8013234:	f7ff ffbe 	bl	80131b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8013238:	7c63      	ldrb	r3, [r4, #17]
 801323a:	b12b      	cbz	r3, 8013248 <Display::Detect7Segment()+0x2e>
 801323c:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8013240:	2112      	movs	r1, #18
 8013242:	4628      	mov	r0, r5
 8013244:	f7ff ffb6 	bl	80131b4 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8013248:	bd38      	pop	{r3, r4, r5, pc}

0801324a <Display::Detect(display::Type)>:
 801324a:	2902      	cmp	r1, #2
 801324c:	b538      	push	{r3, r4, r5, lr}
 801324e:	4604      	mov	r4, r0
 8013250:	d014      	beq.n	801327c <Display::Detect(display::Type)+0x32>
 8013252:	2904      	cmp	r1, #4
 8013254:	d01b      	beq.n	801328e <Display::Detect(display::Type)+0x44>
 8013256:	69a0      	ldr	r0, [r4, #24]
 8013258:	b168      	cbz	r0, 8013276 <Display::Detect(display::Type)+0x2c>
 801325a:	6803      	ldr	r3, [r0, #0]
 801325c:	689b      	ldr	r3, [r3, #8]
 801325e:	4798      	blx	r3
 8013260:	4603      	mov	r3, r0
 8013262:	69a0      	ldr	r0, [r4, #24]
 8013264:	b9ab      	cbnz	r3, 8013292 <Display::Detect(display::Type)+0x48>
 8013266:	b110      	cbz	r0, 801326e <Display::Detect(display::Type)+0x24>
 8013268:	6803      	ldr	r3, [r0, #0]
 801326a:	685b      	ldr	r3, [r3, #4]
 801326c:	4798      	blx	r3
 801326e:	2300      	movs	r3, #0
 8013270:	61a3      	str	r3, [r4, #24]
 8013272:	2304      	movs	r3, #4
 8013274:	6023      	str	r3, [r4, #0]
 8013276:	2300      	movs	r3, #0
 8013278:	6163      	str	r3, [r4, #20]
 801327a:	e010      	b.n	801329e <Display::Detect(display::Type)+0x54>
 801327c:	2018      	movs	r0, #24
 801327e:	f000 fbd7 	bl	8013a30 <operator new(unsigned int)>
 8013282:	4605      	mov	r5, r0
 8013284:	2100      	movs	r1, #0
 8013286:	f000 f8a3 	bl	80133d0 <Ssd1306::Ssd1306(TOledPanel)>
 801328a:	61a5      	str	r5, [r4, #24]
 801328c:	e7e3      	b.n	8013256 <Display::Detect(display::Type)+0xc>
 801328e:	6001      	str	r1, [r0, #0]
 8013290:	e7e1      	b.n	8013256 <Display::Detect(display::Type)+0xc>
 8013292:	6803      	ldr	r3, [r0, #0]
 8013294:	68db      	ldr	r3, [r3, #12]
 8013296:	4798      	blx	r3
 8013298:	69a3      	ldr	r3, [r4, #24]
 801329a:	2b00      	cmp	r3, #0
 801329c:	d0eb      	beq.n	8013276 <Display::Detect(display::Type)+0x2c>
 801329e:	bd38      	pop	{r3, r4, r5, pc}

080132a0 <Display::Display()>:
 80132a0:	2304      	movs	r3, #4
 80132a2:	b510      	push	{r4, lr}
 80132a4:	6003      	str	r3, [r0, #0]
 80132a6:	4b0f      	ldr	r3, [pc, #60]	; (80132e4 <Display::Display()+0x44>)
 80132a8:	4604      	mov	r4, r0
 80132aa:	681b      	ldr	r3, [r3, #0]
 80132ac:	4a0e      	ldr	r2, [pc, #56]	; (80132e8 <Display::Display()+0x48>)
 80132ae:	6043      	str	r3, [r0, #4]
 80132b0:	2321      	movs	r3, #33	; 0x21
 80132b2:	7203      	strb	r3, [r0, #8]
 80132b4:	4b0d      	ldr	r3, [pc, #52]	; (80132ec <Display::Display()+0x4c>)
 80132b6:	2102      	movs	r1, #2
 80132b8:	60c3      	str	r3, [r0, #12]
 80132ba:	2300      	movs	r3, #0
 80132bc:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80132c0:	8203      	strh	r3, [r0, #16]
 80132c2:	4b0b      	ldr	r3, [pc, #44]	; (80132f0 <Display::Display()+0x50>)
 80132c4:	6018      	str	r0, [r3, #0]
 80132c6:	f7ff ffc0 	bl	801324a <Display::Detect(display::Type)>
 80132ca:	4620      	mov	r0, r4
 80132cc:	f7ff ffa5 	bl	801321a <Display::Detect7Segment()>
 80132d0:	69a3      	ldr	r3, [r4, #24]
 80132d2:	b10b      	cbz	r3, 80132d8 <Display::Display()+0x38>
 80132d4:	f000 f80e 	bl	80132f4 <display::timeout::gpio_init()>
 80132d8:	69a0      	ldr	r0, [r4, #24]
 80132da:	f7ff ff61 	bl	80131a0 <Display::PrintInfo() [clone .isra.0]>
 80132de:	4620      	mov	r0, r4
 80132e0:	bd10      	pop	{r4, pc}
 80132e2:	bf00      	nop
 80132e4:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 80132e8:	000493e0 	andeq	r9, r4, r0, ror #7
 80132ec:	00061a80 	andeq	r1, r6, r0, lsl #21
 80132f0:	2000d298 	mulcs	r0, r8, r2

080132f4 <display::timeout::gpio_init()>:
 80132f4:	4770      	bx	lr

080132f6 <display::timeout::gpio_renew()>:
 80132f6:	2000      	movs	r0, #0
 80132f8:	4770      	bx	lr

080132fa <Ssd1306::~Ssd1306()>:
 80132fa:	4770      	bx	lr

080132fc <Ssd1306::SetCursor(unsigned int)>:
 80132fc:	4770      	bx	lr
	...

08013300 <Ssd1306::PrintInfo()>:
 8013300:	b410      	push	{r4}
 8013302:	4906      	ldr	r1, [pc, #24]	; (801331c <Ssd1306::PrintInfo()+0x1c>)
 8013304:	7c44      	ldrb	r4, [r0, #17]
 8013306:	7903      	ldrb	r3, [r0, #4]
 8013308:	7942      	ldrb	r2, [r0, #5]
 801330a:	4805      	ldr	r0, [pc, #20]	; (8013320 <Ssd1306::PrintInfo()+0x20>)
 801330c:	2c00      	cmp	r4, #0
 801330e:	bf08      	it	eq
 8013310:	4601      	moveq	r1, r0
 8013312:	4804      	ldr	r0, [pc, #16]	; (8013324 <Ssd1306::PrintInfo()+0x24>)
 8013314:	bc10      	pop	{r4}
 8013316:	f000 bf91 	b.w	801423c <printf>
 801331a:	bf00      	nop
 801331c:	08018304 	stmdaeq	r1, {r2, r8, r9, pc}
 8013320:	0801830b 	stmdaeq	r1, {r0, r1, r3, r8, r9, pc}
 8013324:	08018313 	stmdaeq	r1, {r0, r1, r4, r8, r9, pc}

08013328 <Ssd1306::~Ssd1306()>:
 8013328:	b510      	push	{r4, lr}
 801332a:	4604      	mov	r4, r0
 801332c:	f000 fb7c 	bl	8013a28 <operator delete(void*)>
 8013330:	4620      	mov	r0, r4
 8013332:	bd10      	pop	{r4, pc}

08013334 <HAL_I2C::Setup()>:
 8013334:	b510      	push	{r4, lr}
 8013336:	4604      	mov	r4, r0
 8013338:	7800      	ldrb	r0, [r0, #0]
 801333a:	f002 f8a5 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 801333e:	6860      	ldr	r0, [r4, #4]
 8013340:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013344:	f002 b898 	b.w	8015478 <gd32_i2c_set_baudrate(unsigned int)>

08013348 <Ssd1306::PutChar(int)>:
 8013348:	b510      	push	{r4, lr}
 801334a:	f1a1 0420 	sub.w	r4, r1, #32
 801334e:	2c5f      	cmp	r4, #95	; 0x5f
 8013350:	bf88      	it	hi
 8013352:	2400      	movhi	r4, #0
 8013354:	3008      	adds	r0, #8
 8013356:	f7ff ffed 	bl	8013334 <HAL_I2C::Setup()>
 801335a:	4804      	ldr	r0, [pc, #16]	; (801336c <Ssd1306::PutChar(int)+0x24>)
 801335c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8013360:	4420      	add	r0, r4
 8013362:	2107      	movs	r1, #7
 8013364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013368:	f002 b894 	b.w	8015494 <gd32_i2c_write(char const*, unsigned int)>
 801336c:	08018328 	stmdaeq	r1, {r3, r5, r8, r9, pc}

08013370 <Ssd1306::PutString(char const*)>:
 8013370:	b538      	push	{r3, r4, r5, lr}
 8013372:	4605      	mov	r5, r0
 8013374:	1e4c      	subs	r4, r1, #1
 8013376:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801337a:	b119      	cbz	r1, 8013384 <Ssd1306::PutString(char const*)+0x14>
 801337c:	4628      	mov	r0, r5
 801337e:	f7ff ffe3 	bl	8013348 <Ssd1306::PutChar(int)>
 8013382:	e7f8      	b.n	8013376 <Ssd1306::PutString(char const*)+0x6>
 8013384:	bd38      	pop	{r3, r4, r5, pc}

08013386 <Ssd1306::Text(char const*, unsigned int)>:
 8013386:	b570      	push	{r4, r5, r6, lr}
 8013388:	7903      	ldrb	r3, [r0, #4]
 801338a:	4605      	mov	r5, r0
 801338c:	460c      	mov	r4, r1
 801338e:	4293      	cmp	r3, r2
 8013390:	bf94      	ite	ls
 8013392:	18ce      	addls	r6, r1, r3
 8013394:	188e      	addhi	r6, r1, r2
 8013396:	42b4      	cmp	r4, r6
 8013398:	d005      	beq.n	80133a6 <Ssd1306::Text(char const*, unsigned int)+0x20>
 801339a:	4628      	mov	r0, r5
 801339c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80133a0:	f7ff ffd2 	bl	8013348 <Ssd1306::PutChar(int)>
 80133a4:	e7f7      	b.n	8013396 <Ssd1306::Text(char const*, unsigned int)+0x10>
 80133a6:	bd70      	pop	{r4, r5, r6, pc}

080133a8 <Ssd1306::InitMembers()>:
 80133a8:	7c03      	ldrb	r3, [r0, #16]
 80133aa:	b12b      	cbz	r3, 80133b8 <Ssd1306::InitMembers()+0x10>
 80133ac:	3b01      	subs	r3, #1
 80133ae:	2b01      	cmp	r3, #1
 80133b0:	d908      	bls.n	80133c4 <Ssd1306::InitMembers()+0x1c>
 80133b2:	f640 0315 	movw	r3, #2069	; 0x815
 80133b6:	e007      	b.n	80133c8 <Ssd1306::InitMembers()+0x20>
 80133b8:	f640 0315 	movw	r3, #2069	; 0x815
 80133bc:	8083      	strh	r3, [r0, #4]
 80133be:	2308      	movs	r3, #8
 80133c0:	6143      	str	r3, [r0, #20]
 80133c2:	4770      	bx	lr
 80133c4:	f240 4315 	movw	r3, #1045	; 0x415
 80133c8:	8083      	strh	r3, [r0, #4]
 80133ca:	2304      	movs	r3, #4
 80133cc:	e7f8      	b.n	80133c0 <Ssd1306::InitMembers()+0x18>
	...

080133d0 <Ssd1306::Ssd1306(TOledPanel)>:
 80133d0:	4a08      	ldr	r2, [pc, #32]	; (80133f4 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80133d2:	b508      	push	{r3, lr}
 80133d4:	6002      	str	r2, [r0, #0]
 80133d6:	227f      	movs	r2, #127	; 0x7f
 80133d8:	80c2      	strh	r2, [r0, #6]
 80133da:	223c      	movs	r2, #60	; 0x3c
 80133dc:	7202      	strb	r2, [r0, #8]
 80133de:	4a06      	ldr	r2, [pc, #24]	; (80133f8 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 80133e0:	7401      	strb	r1, [r0, #16]
 80133e2:	60c2      	str	r2, [r0, #12]
 80133e4:	2200      	movs	r2, #0
 80133e6:	7442      	strb	r2, [r0, #17]
 80133e8:	4a04      	ldr	r2, [pc, #16]	; (80133fc <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80133ea:	6010      	str	r0, [r2, #0]
 80133ec:	f7ff ffdc 	bl	80133a8 <Ssd1306::InitMembers()>
 80133f0:	bd08      	pop	{r3, pc}
 80133f2:	bf00      	nop
 80133f4:	08018600 	stmdaeq	r1, {r9, sl, pc}
 80133f8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80133fc:	2000d324 	andcs	sp, r0, r4, lsr #6

08013400 <Ssd1306::SendCommand(unsigned char)>:
 8013400:	2300      	movs	r3, #0
 8013402:	b507      	push	{r0, r1, r2, lr}
 8013404:	3008      	adds	r0, #8
 8013406:	f88d 3004 	strb.w	r3, [sp, #4]
 801340a:	f88d 1005 	strb.w	r1, [sp, #5]
 801340e:	f7ff ff91 	bl	8013334 <HAL_I2C::Setup()>
 8013412:	2102      	movs	r1, #2
 8013414:	a801      	add	r0, sp, #4
 8013416:	f002 f83d 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 801341a:	b003      	add	sp, #12
 801341c:	f85d fb04 	ldr.w	pc, [sp], #4

08013420 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8013420:	2914      	cmp	r1, #20
 8013422:	b570      	push	{r4, r5, r6, lr}
 8013424:	4605      	mov	r5, r0
 8013426:	4616      	mov	r6, r2
 8013428:	d81c      	bhi.n	8013464 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801342a:	7943      	ldrb	r3, [r0, #5]
 801342c:	4293      	cmp	r3, r2
 801342e:	d919      	bls.n	8013464 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8013430:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8013434:	7c43      	ldrb	r3, [r0, #17]
 8013436:	004c      	lsls	r4, r1, #1
 8013438:	b2e4      	uxtb	r4, r4
 801343a:	b10b      	cbz	r3, 8013440 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 801343c:	3404      	adds	r4, #4
 801343e:	b2e4      	uxtb	r4, r4
 8013440:	4628      	mov	r0, r5
 8013442:	f004 010e 	and.w	r1, r4, #14
 8013446:	f7ff ffdb 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801344a:	0921      	lsrs	r1, r4, #4
 801344c:	4628      	mov	r0, r5
 801344e:	f041 0110 	orr.w	r1, r1, #16
 8013452:	f7ff ffd5 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013456:	4628      	mov	r0, r5
 8013458:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 801345c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013460:	f7ff bfce 	b.w	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013464:	bd70      	pop	{r4, r5, r6, pc}

08013466 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8013466:	b570      	push	{r4, r5, r6, lr}
 8013468:	4604      	mov	r4, r0
 801346a:	4615      	mov	r5, r2
 801346c:	461e      	mov	r6, r3
 801346e:	b171      	cbz	r1, 801348e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8013470:	7943      	ldrb	r3, [r0, #5]
 8013472:	428b      	cmp	r3, r1
 8013474:	d30b      	bcc.n	801348e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8013476:	3901      	subs	r1, #1
 8013478:	b2ca      	uxtb	r2, r1
 801347a:	2100      	movs	r1, #0
 801347c:	f7ff ffd0 	bl	8013420 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8013480:	4632      	mov	r2, r6
 8013482:	4629      	mov	r1, r5
 8013484:	4620      	mov	r0, r4
 8013486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801348a:	f7ff bf7c 	b.w	8013386 <Ssd1306::Text(char const*, unsigned int)>
 801348e:	bd70      	pop	{r4, r5, r6, pc}

08013490 <Ssd1306::ClearLine(unsigned char)>:
 8013490:	b538      	push	{r3, r4, r5, lr}
 8013492:	4605      	mov	r5, r0
 8013494:	b1b9      	cbz	r1, 80134c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 8013496:	7943      	ldrb	r3, [r0, #5]
 8013498:	428b      	cmp	r3, r1
 801349a:	d314      	bcc.n	80134c6 <Ssd1306::ClearLine(unsigned char)+0x36>
 801349c:	3901      	subs	r1, #1
 801349e:	b2cc      	uxtb	r4, r1
 80134a0:	4622      	mov	r2, r4
 80134a2:	2100      	movs	r1, #0
 80134a4:	f7ff ffbc 	bl	8013420 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80134a8:	f105 0008 	add.w	r0, r5, #8
 80134ac:	f7ff ff42 	bl	8013334 <HAL_I2C::Setup()>
 80134b0:	2181      	movs	r1, #129	; 0x81
 80134b2:	4805      	ldr	r0, [pc, #20]	; (80134c8 <Ssd1306::ClearLine(unsigned char)+0x38>)
 80134b4:	f001 ffee 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 80134b8:	4622      	mov	r2, r4
 80134ba:	4628      	mov	r0, r5
 80134bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80134c0:	2100      	movs	r1, #0
 80134c2:	f7ff bfad 	b.w	8013420 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80134c6:	bd38      	pop	{r3, r4, r5, pc}
 80134c8:	2000d29c 	mulcs	r0, ip, r2

080134cc <Ssd1306::SetSleep(bool)>:
 80134cc:	b111      	cbz	r1, 80134d4 <Ssd1306::SetSleep(bool)+0x8>
 80134ce:	21ae      	movs	r1, #174	; 0xae
 80134d0:	f7ff bf96 	b.w	8013400 <Ssd1306::SendCommand(unsigned char)>
 80134d4:	21af      	movs	r1, #175	; 0xaf
 80134d6:	e7fb      	b.n	80134d0 <Ssd1306::SetSleep(bool)+0x4>

080134d8 <Ssd1306::SetContrast(unsigned char)>:
 80134d8:	b538      	push	{r3, r4, r5, lr}
 80134da:	4604      	mov	r4, r0
 80134dc:	460d      	mov	r5, r1
 80134de:	7181      	strb	r1, [r0, #6]
 80134e0:	2181      	movs	r1, #129	; 0x81
 80134e2:	f7ff ff8d 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 80134e6:	4629      	mov	r1, r5
 80134e8:	4620      	mov	r0, r4
 80134ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80134ee:	f7ff bf87 	b.w	8013400 <Ssd1306::SendCommand(unsigned char)>

080134f2 <Ssd1306::SetFlipVertically(bool)>:
 80134f2:	b510      	push	{r4, lr}
 80134f4:	4604      	mov	r4, r0
 80134f6:	71c1      	strb	r1, [r0, #7]
 80134f8:	b141      	cbz	r1, 801350c <Ssd1306::SetFlipVertically(bool)+0x1a>
 80134fa:	21c0      	movs	r1, #192	; 0xc0
 80134fc:	f7ff ff80 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013500:	21a0      	movs	r1, #160	; 0xa0
 8013502:	4620      	mov	r0, r4
 8013504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013508:	f7ff bf7a 	b.w	8013400 <Ssd1306::SendCommand(unsigned char)>
 801350c:	21c8      	movs	r1, #200	; 0xc8
 801350e:	f7ff ff77 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013512:	21a1      	movs	r1, #161	; 0xa1
 8013514:	e7f5      	b.n	8013502 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08013518 <Ssd1306::CheckSH1106()>:
 8013518:	b570      	push	{r4, r5, r6, lr}
 801351a:	4604      	mov	r4, r0
 801351c:	b086      	sub	sp, #24
 801351e:	2100      	movs	r1, #0
 8013520:	f7ff ff6e 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013524:	2190      	movs	r1, #144	; 0x90
 8013526:	4620      	mov	r0, r4
 8013528:	f7ff ff6a 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801352c:	21b0      	movs	r1, #176	; 0xb0
 801352e:	4620      	mov	r0, r4
 8013530:	f7ff ff66 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013534:	4b22      	ldr	r3, [pc, #136]	; (80135c0 <Ssd1306::CheckSH1106()+0xa8>)
 8013536:	f104 0608 	add.w	r6, r4, #8
 801353a:	6818      	ldr	r0, [r3, #0]
 801353c:	791b      	ldrb	r3, [r3, #4]
 801353e:	ad02      	add	r5, sp, #8
 8013540:	9002      	str	r0, [sp, #8]
 8013542:	4630      	mov	r0, r6
 8013544:	712b      	strb	r3, [r5, #4]
 8013546:	f7ff fef5 	bl	8013334 <HAL_I2C::Setup()>
 801354a:	2105      	movs	r1, #5
 801354c:	4628      	mov	r0, r5
 801354e:	f001 ffa1 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8013552:	2100      	movs	r1, #0
 8013554:	4620      	mov	r0, r4
 8013556:	f7ff ff53 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801355a:	2190      	movs	r1, #144	; 0x90
 801355c:	4620      	mov	r0, r4
 801355e:	f7ff ff4f 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013562:	21b0      	movs	r1, #176	; 0xb0
 8013564:	4620      	mov	r0, r4
 8013566:	f7ff ff4b 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801356a:	2300      	movs	r3, #0
 801356c:	9304      	str	r3, [sp, #16]
 801356e:	f88d 3014 	strb.w	r3, [sp, #20]
 8013572:	2340      	movs	r3, #64	; 0x40
 8013574:	4630      	mov	r0, r6
 8013576:	f88d 3007 	strb.w	r3, [sp, #7]
 801357a:	f7ff fedb 	bl	8013334 <HAL_I2C::Setup()>
 801357e:	2101      	movs	r1, #1
 8013580:	f10d 0007 	add.w	r0, sp, #7
 8013584:	f001 ff86 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8013588:	4630      	mov	r0, r6
 801358a:	f7ff fed3 	bl	8013334 <HAL_I2C::Setup()>
 801358e:	2105      	movs	r1, #5
 8013590:	a804      	add	r0, sp, #16
 8013592:	f001 ffe5 	bl	8015560 <gd32_i2c_read(char*, unsigned int)>
 8013596:	2201      	movs	r2, #1
 8013598:	5cab      	ldrb	r3, [r5, r2]
 801359a:	a904      	add	r1, sp, #16
 801359c:	3201      	adds	r2, #1
 801359e:	4411      	add	r1, r2
 80135a0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 80135a4:	428b      	cmp	r3, r1
 80135a6:	d006      	beq.n	80135b6 <Ssd1306::CheckSH1106()+0x9e>
 80135a8:	1a5b      	subs	r3, r3, r1
 80135aa:	fab3 f383 	clz	r3, r3
 80135ae:	095b      	lsrs	r3, r3, #5
 80135b0:	7463      	strb	r3, [r4, #17]
 80135b2:	b006      	add	sp, #24
 80135b4:	bd70      	pop	{r4, r5, r6, pc}
 80135b6:	2a05      	cmp	r2, #5
 80135b8:	d1ee      	bne.n	8013598 <Ssd1306::CheckSH1106()+0x80>
 80135ba:	2300      	movs	r3, #0
 80135bc:	e7f5      	b.n	80135aa <Ssd1306::CheckSH1106()+0x92>
 80135be:	bf00      	nop
 80135c0:	0801831f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, pc}

080135c4 <Ssd1306::Cls()>:
 80135c4:	7c43      	ldrb	r3, [r0, #17]
 80135c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135ca:	2b00      	cmp	r3, #0
 80135cc:	bf0c      	ite	eq
 80135ce:	2500      	moveq	r5, #0
 80135d0:	2504      	movne	r5, #4
 80135d2:	4604      	mov	r4, r0
 80135d4:	2600      	movs	r6, #0
 80135d6:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 80135da:	f045 0810 	orr.w	r8, r5, #16
 80135de:	b2ff      	uxtb	r7, r7
 80135e0:	6963      	ldr	r3, [r4, #20]
 80135e2:	4629      	mov	r1, r5
 80135e4:	42b3      	cmp	r3, r6
 80135e6:	4620      	mov	r0, r4
 80135e8:	d91b      	bls.n	8013622 <Ssd1306::Cls()+0x5e>
 80135ea:	f7ff ff09 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 80135ee:	4641      	mov	r1, r8
 80135f0:	4620      	mov	r0, r4
 80135f2:	f7ff ff05 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 80135f6:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80135fa:	4620      	mov	r0, r4
 80135fc:	b2c9      	uxtb	r1, r1
 80135fe:	f7ff feff 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013602:	7c23      	ldrb	r3, [r4, #16]
 8013604:	b123      	cbz	r3, 8013610 <Ssd1306::Cls()+0x4c>
 8013606:	3b01      	subs	r3, #1
 8013608:	2b01      	cmp	r3, #1
 801360a:	d901      	bls.n	8013610 <Ssd1306::Cls()+0x4c>
 801360c:	3601      	adds	r6, #1
 801360e:	e7e7      	b.n	80135e0 <Ssd1306::Cls()+0x1c>
 8013610:	f104 0008 	add.w	r0, r4, #8
 8013614:	f7ff fe8e 	bl	8013334 <HAL_I2C::Setup()>
 8013618:	4639      	mov	r1, r7
 801361a:	4808      	ldr	r0, [pc, #32]	; (801363c <Ssd1306::Cls()+0x78>)
 801361c:	f001 ff3a 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 8013620:	e7f4      	b.n	801360c <Ssd1306::Cls()+0x48>
 8013622:	f7ff feed 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 8013626:	4641      	mov	r1, r8
 8013628:	4620      	mov	r0, r4
 801362a:	f7ff fee9 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801362e:	4620      	mov	r0, r4
 8013630:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013634:	21b0      	movs	r1, #176	; 0xb0
 8013636:	f7ff bee3 	b.w	8013400 <Ssd1306::SendCommand(unsigned char)>
 801363a:	bf00      	nop
 801363c:	2000d29c 	mulcs	r0, ip, r2

08013640 <Ssd1306::Start()>:
 8013640:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013642:	7a04      	ldrb	r4, [r0, #8]
 8013644:	68c6      	ldr	r6, [r0, #12]
 8013646:	4605      	mov	r5, r0
 8013648:	4620      	mov	r0, r4
 801364a:	f001 ff1d 	bl	8015488 <gd32_i2c_set_address(unsigned char)>
 801364e:	4630      	mov	r0, r6
 8013650:	f001 ff12 	bl	8015478 <gd32_i2c_set_baudrate(unsigned int)>
 8013654:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013658:	2b07      	cmp	r3, #7
 801365a:	d902      	bls.n	8013662 <Ssd1306::Start()+0x22>
 801365c:	3c50      	subs	r4, #80	; 0x50
 801365e:	2c0f      	cmp	r4, #15
 8013660:	d80f      	bhi.n	8013682 <Ssd1306::Start()+0x42>
 8013662:	2101      	movs	r1, #1
 8013664:	f10d 0007 	add.w	r0, sp, #7
 8013668:	f001 ff7a 	bl	8015560 <gd32_i2c_read(char*, unsigned int)>
 801366c:	fab0 f480 	clz	r4, r0
 8013670:	0964      	lsrs	r4, r4, #5
 8013672:	b35c      	cbz	r4, 80136cc <Ssd1306::Start()+0x8c>
 8013674:	7c2e      	ldrb	r6, [r5, #16]
 8013676:	b14e      	cbz	r6, 801368c <Ssd1306::Start()+0x4c>
 8013678:	3e01      	subs	r6, #1
 801367a:	2e01      	cmp	r6, #1
 801367c:	d929      	bls.n	80136d2 <Ssd1306::Start()+0x92>
 801367e:	2400      	movs	r4, #0
 8013680:	e024      	b.n	80136cc <Ssd1306::Start()+0x8c>
 8013682:	2100      	movs	r1, #0
 8013684:	4608      	mov	r0, r1
 8013686:	f001 ff05 	bl	8015494 <gd32_i2c_write(char const*, unsigned int)>
 801368a:	e7ef      	b.n	801366c <Ssd1306::Start()+0x2c>
 801368c:	4f16      	ldr	r7, [pc, #88]	; (80136e8 <Ssd1306::Start()+0xa8>)
 801368e:	4628      	mov	r0, r5
 8013690:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013694:	3601      	adds	r6, #1
 8013696:	f7ff feb3 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 801369a:	2e18      	cmp	r6, #24
 801369c:	d1f7      	bne.n	801368e <Ssd1306::Start()+0x4e>
 801369e:	2300      	movs	r3, #0
 80136a0:	4a12      	ldr	r2, [pc, #72]	; (80136ec <Ssd1306::Start()+0xac>)
 80136a2:	4618      	mov	r0, r3
 80136a4:	4611      	mov	r1, r2
 80136a6:	3301      	adds	r3, #1
 80136a8:	2b86      	cmp	r3, #134	; 0x86
 80136aa:	f802 0b01 	strb.w	r0, [r2], #1
 80136ae:	d1fa      	bne.n	80136a6 <Ssd1306::Start()+0x66>
 80136b0:	2340      	movs	r3, #64	; 0x40
 80136b2:	4628      	mov	r0, r5
 80136b4:	700b      	strb	r3, [r1, #0]
 80136b6:	f7ff ff2f 	bl	8013518 <Ssd1306::CheckSH1106()>
 80136ba:	4628      	mov	r0, r5
 80136bc:	f7ff ff82 	bl	80135c4 <Ssd1306::Cls()>
 80136c0:	21af      	movs	r1, #175	; 0xaf
 80136c2:	4628      	mov	r0, r5
 80136c4:	f7ff fe9c 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 80136c8:	2301      	movs	r3, #1
 80136ca:	71eb      	strb	r3, [r5, #7]
 80136cc:	4620      	mov	r0, r4
 80136ce:	b003      	add	sp, #12
 80136d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80136d2:	2600      	movs	r6, #0
 80136d4:	4f06      	ldr	r7, [pc, #24]	; (80136f0 <Ssd1306::Start()+0xb0>)
 80136d6:	4628      	mov	r0, r5
 80136d8:	f817 1b01 	ldrb.w	r1, [r7], #1
 80136dc:	3601      	adds	r6, #1
 80136de:	f7ff fe8f 	bl	8013400 <Ssd1306::SendCommand(unsigned char)>
 80136e2:	2e18      	cmp	r6, #24
 80136e4:	d1f7      	bne.n	80136d6 <Ssd1306::Start()+0x96>
 80136e6:	e7da      	b.n	801369e <Ssd1306::Start()+0x5e>
 80136e8:	080185e0 	stmdaeq	r1, {r5, r6, r7, r8, sl, pc}
 80136ec:	2000d29c 	mulcs	r0, ip, r2
 80136f0:	080185c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, pc}

080136f4 <console_putc>:
 80136f4:	f000 bef4 	b.w	80144e0 <uart0_putc>

080136f8 <console_puts>:
 80136f8:	f000 bf12 	b.w	8014520 <uart0_puts>

080136fc <console_set_fg_color>:
 80136fc:	2807      	cmp	r0, #7
 80136fe:	d810      	bhi.n	8013722 <console_set_fg_color+0x26>
 8013700:	e8df f000 	tbb	[pc, r0]
 8013704:	0b090704 	bleq	825531c <__exidx_end+0x23cbe8>
 8013708:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 80136d4 <Ssd1306::Start()+0x94>
 801370c:	4806      	ldr	r0, [pc, #24]	; (8013728 <console_set_fg_color+0x2c>)
 801370e:	f000 bf07 	b.w	8014520 <uart0_puts>
 8013712:	4806      	ldr	r0, [pc, #24]	; (801372c <console_set_fg_color+0x30>)
 8013714:	e7fb      	b.n	801370e <console_set_fg_color+0x12>
 8013716:	4806      	ldr	r0, [pc, #24]	; (8013730 <console_set_fg_color+0x34>)
 8013718:	e7f9      	b.n	801370e <console_set_fg_color+0x12>
 801371a:	4806      	ldr	r0, [pc, #24]	; (8013734 <console_set_fg_color+0x38>)
 801371c:	e7f7      	b.n	801370e <console_set_fg_color+0x12>
 801371e:	4806      	ldr	r0, [pc, #24]	; (8013738 <console_set_fg_color+0x3c>)
 8013720:	e7f5      	b.n	801370e <console_set_fg_color+0x12>
 8013722:	4806      	ldr	r0, [pc, #24]	; (801373c <console_set_fg_color+0x40>)
 8013724:	e7f3      	b.n	801370e <console_set_fg_color+0x12>
 8013726:	bf00      	nop
 8013728:	0801863e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, sl, pc}
 801372c:	08018644 	stmdaeq	r1, {r2, r6, r9, sl, pc}
 8013730:	0801864a 	stmdaeq	r1, {r1, r3, r6, r9, sl, pc}
 8013734:	08018650 	stmdaeq	r1, {r4, r6, r9, sl, pc}
 8013738:	080164ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, lr}
 801373c:	08018656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, pc}

08013740 <console_error>:
 8013740:	b510      	push	{r4, lr}
 8013742:	4604      	mov	r4, r0
 8013744:	4805      	ldr	r0, [pc, #20]	; (801375c <console_error+0x1c>)
 8013746:	f000 feeb 	bl	8014520 <uart0_puts>
 801374a:	4620      	mov	r0, r4
 801374c:	f000 fee8 	bl	8014520 <uart0_puts>
 8013750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013754:	4802      	ldr	r0, [pc, #8]	; (8013760 <console_error+0x20>)
 8013756:	f000 bee3 	b.w	8014520 <uart0_puts>
 801375a:	bf00      	nop
 801375c:	08018644 	stmdaeq	r1, {r2, r6, r9, sl, pc}
 8013760:	080164ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, lr}

08013764 <console_status>:
 8013764:	b510      	push	{r4, lr}
 8013766:	460c      	mov	r4, r1
 8013768:	b280      	uxth	r0, r0
 801376a:	f7ff ffc7 	bl	80136fc <console_set_fg_color>
 801376e:	4807      	ldr	r0, [pc, #28]	; (801378c <console_status+0x28>)
 8013770:	f000 fed6 	bl	8014520 <uart0_puts>
 8013774:	4620      	mov	r0, r4
 8013776:	f000 fed3 	bl	8014520 <uart0_puts>
 801377a:	200a      	movs	r0, #10
 801377c:	f000 feb0 	bl	80144e0 <uart0_putc>
 8013780:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013784:	4802      	ldr	r0, [pc, #8]	; (8013790 <console_status+0x2c>)
 8013786:	f000 becb 	b.w	8014520 <uart0_puts>
 801378a:	bf00      	nop
 801378c:	08018638 	stmdaeq	r1, {r3, r4, r5, r9, sl, pc}
 8013790:	080164ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, sp, lr}

08013794 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8013794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013798:	4617      	mov	r7, r2
 801379a:	461e      	mov	r6, r3
 801379c:	4d14      	ldr	r5, [pc, #80]	; (80137f0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801379e:	4b15      	ldr	r3, [pc, #84]	; (80137f4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80137a0:	b086      	sub	sp, #24
 80137a2:	6018      	str	r0, [r3, #0]
 80137a4:	4604      	mov	r4, r0
 80137a6:	f105 0803 	add.w	r8, r5, #3
 80137aa:	2203      	movs	r2, #3
 80137ac:	4628      	mov	r0, r5
 80137ae:	f000 f9fe 	bl	8013bae <memmove>
 80137b2:	4639      	mov	r1, r7
 80137b4:	220b      	movs	r2, #11
 80137b6:	4640      	mov	r0, r8
 80137b8:	f000 f9f9 	bl	8013bae <memmove>
 80137bc:	f105 030e 	add.w	r3, r5, #14
 80137c0:	4631      	mov	r1, r6
 80137c2:	2208      	movs	r2, #8
 80137c4:	4618      	mov	r0, r3
 80137c6:	f000 f9f2 	bl	8013bae <memmove>
 80137ca:	2308      	movs	r3, #8
 80137cc:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80137d0:	230b      	movs	r3, #11
 80137d2:	9302      	str	r3, [sp, #8]
 80137d4:	4b08      	ldr	r3, [pc, #32]	; (80137f8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80137d6:	9005      	str	r0, [sp, #20]
 80137d8:	e9cd 5300 	strd	r5, r3, [sp]
 80137dc:	213f      	movs	r1, #63	; 0x3f
 80137de:	2303      	movs	r3, #3
 80137e0:	4a06      	ldr	r2, [pc, #24]	; (80137fc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80137e2:	4807      	ldr	r0, [pc, #28]	; (8013800 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80137e4:	f000 fd52 	bl	801428c <snprintf>
 80137e8:	4620      	mov	r0, r4
 80137ea:	b006      	add	sp, #24
 80137ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80137f0:	2000d328 	andcs	sp, r0, r8, lsr #6
 80137f4:	2000d380 	andcs	sp, r0, r0, lsl #7
 80137f8:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 80137fc:	0801865c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, pc}
 8013800:	2000d33e 	andcs	sp, r0, lr, lsr r3

08013804 <FirmwareVersion::Print(char const*)>:
 8013804:	b510      	push	{r4, lr}
 8013806:	460c      	mov	r4, r1
 8013808:	4804      	ldr	r0, [pc, #16]	; (801381c <FirmwareVersion::Print(char const*)+0x18>)
 801380a:	f000 fd67 	bl	80142dc <puts>
 801380e:	b124      	cbz	r4, 801381a <FirmwareVersion::Print(char const*)+0x16>
 8013810:	4620      	mov	r0, r4
 8013812:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013816:	f000 bd61 	b.w	80142dc <puts>
 801381a:	bd10      	pop	{r4, pc}
 801381c:	2000d33e 	andcs	sp, r0, lr, lsr r3

08013820 <LedBlink::LedBlink()>:
 8013820:	b538      	push	{r3, r4, r5, lr}
 8013822:	2205      	movs	r2, #5
 8013824:	2300      	movs	r3, #0
 8013826:	e9c0 3200 	strd	r3, r2, [r0]
 801382a:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 801382e:	6083      	str	r3, [r0, #8]
 8013830:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8013834:	6143      	str	r3, [r0, #20]
 8013836:	4b09      	ldr	r3, [pc, #36]	; (801385c <LedBlink::LedBlink()+0x3c>)
 8013838:	4d09      	ldr	r5, [pc, #36]	; (8013860 <LedBlink::LedBlink()+0x40>)
 801383a:	4604      	mov	r4, r0
 801383c:	6018      	str	r0, [r3, #0]
 801383e:	f240 6004 	movw	r0, #1540	; 0x604
 8013842:	f001 f8f1 	bl	8014a28 <rcu_periph_clock_enable>
 8013846:	4628      	mov	r0, r5
 8013848:	2301      	movs	r3, #1
 801384a:	2203      	movs	r2, #3
 801384c:	2110      	movs	r1, #16
 801384e:	f001 f84f 	bl	80148f0 <gpio_init>
 8013852:	2301      	movs	r3, #1
 8013854:	4620      	mov	r0, r4
 8013856:	616b      	str	r3, [r5, #20]
 8013858:	bd38      	pop	{r3, r4, r5, pc}
 801385a:	bf00      	nop
 801385c:	2000d384 	andcs	sp, r0, r4, lsl #7
 8013860:	40011000 	andmi	r1, r1, r0

08013864 <LedBlink::SetMode(ledblink::Mode)>:
 8013864:	6843      	ldr	r3, [r0, #4]
 8013866:	428b      	cmp	r3, r1
 8013868:	d02f      	beq.n	80138ca <LedBlink::SetMode(ledblink::Mode)+0x66>
 801386a:	6041      	str	r1, [r0, #4]
 801386c:	2904      	cmp	r1, #4
 801386e:	d822      	bhi.n	80138b6 <LedBlink::SetMode(ledblink::Mode)+0x52>
 8013870:	e8df f001 	tbb	[pc, r1]
 8013874:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8013878:	23ff001d 	mvnscs	r0, #29
 801387c:	6003      	str	r3, [r0, #0]
 801387e:	2300      	movs	r3, #0
 8013880:	2201      	movs	r2, #1
 8013882:	60c3      	str	r3, [r0, #12]
 8013884:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013888:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 801388c:	611a      	str	r2, [r3, #16]
 801388e:	6880      	ldr	r0, [r0, #8]
 8013890:	b1d8      	cbz	r0, 80138ca <LedBlink::SetMode(ledblink::Mode)+0x66>
 8013892:	6803      	ldr	r3, [r0, #0]
 8013894:	689b      	ldr	r3, [r3, #8]
 8013896:	4718      	bx	r3
 8013898:	2301      	movs	r3, #1
 801389a:	6003      	str	r3, [r0, #0]
 801389c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80138a0:	60c3      	str	r3, [r0, #12]
 80138a2:	e7f4      	b.n	801388e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80138a4:	2303      	movs	r3, #3
 80138a6:	6003      	str	r3, [r0, #0]
 80138a8:	f240 134d 	movw	r3, #333	; 0x14d
 80138ac:	e7f8      	b.n	80138a0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80138ae:	2305      	movs	r3, #5
 80138b0:	6003      	str	r3, [r0, #0]
 80138b2:	23c8      	movs	r3, #200	; 0xc8
 80138b4:	e7f4      	b.n	80138a0 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80138b6:	2300      	movs	r3, #0
 80138b8:	2201      	movs	r2, #1
 80138ba:	6003      	str	r3, [r0, #0]
 80138bc:	60c3      	str	r3, [r0, #12]
 80138be:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80138c2:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80138c6:	615a      	str	r2, [r3, #20]
 80138c8:	e7e1      	b.n	801388e <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80138ca:	4770      	bx	lr

080138cc <Hardware::Hardware()>:
 80138cc:	b570      	push	{r4, r5, r6, lr}
 80138ce:	2400      	movs	r4, #0
 80138d0:	4b25      	ldr	r3, [pc, #148]	; (8013968 <Hardware::Hardware()+0x9c>)
 80138d2:	b090      	sub	sp, #64	; 0x40
 80138d4:	6004      	str	r4, [r0, #0]
 80138d6:	7104      	strb	r4, [r0, #4]
 80138d8:	4e24      	ldr	r6, [pc, #144]	; (801396c <Hardware::Hardware()+0xa0>)
 80138da:	6018      	str	r0, [r3, #0]
 80138dc:	4605      	mov	r5, r0
 80138de:	f7f3 fe3f 	bl	8007560 <console_init>
 80138e2:	f000 fe2d 	bl	8014540 <systick_config>
 80138e6:	f002 f83d 	bl	8015964 <udelay_init()>
 80138ea:	f001 ffed 	bl	80158c8 <micros_init()>
 80138ee:	f240 7004 	movw	r0, #1796	; 0x704
 80138f2:	f001 f899 	bl	8014a28 <rcu_periph_clock_enable>
 80138f6:	4630      	mov	r0, r6
 80138f8:	f001 fa0a 	bl	8014d10 <timer_deinit>
 80138fc:	2377      	movs	r3, #119	; 0x77
 80138fe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013902:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013906:	a903      	add	r1, sp, #12
 8013908:	4630      	mov	r0, r6
 801390a:	9305      	str	r3, [sp, #20]
 801390c:	f001 faa6 	bl	8014e5c <timer_init>
 8013910:	4630      	mov	r0, r6
 8013912:	f001 fafb 	bl	8014f0c <timer_enable>
 8013916:	2602      	movs	r6, #2
 8013918:	f001 fd20 	bl	801535c <gd32_adc_init()>
 801391c:	237a      	movs	r3, #122	; 0x7a
 801391e:	a807      	add	r0, sp, #28
 8013920:	930c      	str	r3, [sp, #48]	; 0x30
 8013922:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8013926:	e9cd 660a 	strd	r6, r6, [sp, #40]	; 0x28
 801392a:	9407      	str	r4, [sp, #28]
 801392c:	940f      	str	r4, [sp, #60]	; 0x3c
 801392e:	f000 fd2d 	bl	801438c <mktime>
 8013932:	4621      	mov	r1, r4
 8013934:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8013938:	a801      	add	r0, sp, #4
 801393a:	f000 fd9d 	bl	8014478 <settimeofday>
 801393e:	f240 701b 	movw	r0, #1819	; 0x71b
 8013942:	f001 f871 	bl	8014a28 <rcu_periph_clock_enable>
 8013946:	f240 701c 	movw	r0, #1820	; 0x71c
 801394a:	f001 f86d 	bl	8014a28 <rcu_periph_clock_enable>
 801394e:	f001 f863 	bl	8014a18 <pmu_backup_write_enable>
 8013952:	f000 fe99 	bl	8014688 <bkp_deinit>
 8013956:	4630      	mov	r0, r6
 8013958:	4621      	mov	r1, r4
 801395a:	f000 fe9d 	bl	8014698 <bkp_data_write>
 801395e:	f001 fd57 	bl	8015410 <gd32_i2c_begin()>
 8013962:	4628      	mov	r0, r5
 8013964:	b010      	add	sp, #64	; 0x40
 8013966:	bd70      	pop	{r4, r5, r6, pc}
 8013968:	2000d388 	andcs	sp, r0, r8, lsl #7
 801396c:	40001000 	andmi	r1, r0, r0

08013970 <Hardware::GetUuid(unsigned char*)>:
 8013970:	4a0c      	ldr	r2, [pc, #48]	; (80139a4 <Hardware::GetUuid(unsigned char*)+0x34>)
 8013972:	b084      	sub	sp, #16
 8013974:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8013978:	9300      	str	r3, [sp, #0]
 801397a:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 801397e:	9001      	str	r0, [sp, #4]
 8013980:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8013984:	4403      	add	r3, r0
 8013986:	4413      	add	r3, r2
 8013988:	9202      	str	r2, [sp, #8]
 801398a:	466a      	mov	r2, sp
 801398c:	9303      	str	r3, [sp, #12]
 801398e:	1e4b      	subs	r3, r1, #1
 8013990:	310f      	adds	r1, #15
 8013992:	428b      	cmp	r3, r1
 8013994:	d004      	beq.n	80139a0 <Hardware::GetUuid(unsigned char*)+0x30>
 8013996:	f812 0b01 	ldrb.w	r0, [r2], #1
 801399a:	f803 0f01 	strb.w	r0, [r3, #1]!
 801399e:	e7f8      	b.n	8013992 <Hardware::GetUuid(unsigned char*)+0x22>
 80139a0:	b004      	add	sp, #16
 80139a2:	4770      	bx	lr
 80139a4:	1ffff000 	svcne	0x00fff000

080139a8 <Hardware::SetTime(tm const*)>:
 80139a8:	2000      	movs	r0, #0
 80139aa:	4770      	bx	lr

080139ac <Hardware::Reboot()>:
 80139ac:	b508      	push	{r3, lr}
 80139ae:	6803      	ldr	r3, [r0, #0]
 80139b0:	4604      	mov	r4, r0
 80139b2:	b153      	cbz	r3, 80139ca <Hardware::Reboot()+0x1e>
 80139b4:	2300      	movs	r3, #0
 80139b6:	2104      	movs	r1, #4
 80139b8:	7103      	strb	r3, [r0, #4]
 80139ba:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80139be:	f000 ff6d 	bl	801489c <fwdgt_config>
 80139c2:	6820      	ldr	r0, [r4, #0]
 80139c4:	6803      	ldr	r3, [r0, #0]
 80139c6:	689b      	ldr	r3, [r3, #8]
 80139c8:	4798      	blx	r3
 80139ca:	2102      	movs	r1, #2
 80139cc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80139d0:	f000 ff64 	bl	801489c <fwdgt_config>
 80139d4:	2801      	cmp	r0, #1
 80139d6:	bf0c      	ite	eq
 80139d8:	2301      	moveq	r3, #1
 80139da:	2300      	movne	r3, #0
 80139dc:	7123      	strb	r3, [r4, #4]
 80139de:	d101      	bne.n	80139e4 <Hardware::Reboot()+0x38>
 80139e0:	f000 ff4c 	bl	801487c <fwdgt_enable>
 80139e4:	2208      	movs	r2, #8
 80139e6:	4b0d      	ldr	r3, [pc, #52]	; (8013a1c <Hardware::Reboot()+0x70>)
 80139e8:	2501      	movs	r5, #1
 80139ea:	681b      	ldr	r3, [r3, #0]
 80139ec:	480c      	ldr	r0, [pc, #48]	; (8013a20 <Hardware::Reboot()+0x74>)
 80139ee:	601a      	str	r2, [r3, #0]
 80139f0:	227d      	movs	r2, #125	; 0x7d
 80139f2:	490c      	ldr	r1, [pc, #48]	; (8013a24 <Hardware::Reboot()+0x78>)
 80139f4:	60da      	str	r2, [r3, #12]
 80139f6:	68dc      	ldr	r4, [r3, #12]
 80139f8:	b904      	cbnz	r4, 80139fc <Hardware::Reboot()+0x50>
 80139fa:	e7fe      	b.n	80139fa <Hardware::Reboot()+0x4e>
 80139fc:	6802      	ldr	r2, [r0, #0]
 80139fe:	695e      	ldr	r6, [r3, #20]
 8013a00:	1b92      	subs	r2, r2, r6
 8013a02:	4294      	cmp	r4, r2
 8013a04:	d8f8      	bhi.n	80139f8 <Hardware::Reboot()+0x4c>
 8013a06:	6802      	ldr	r2, [r0, #0]
 8013a08:	615a      	str	r2, [r3, #20]
 8013a0a:	691a      	ldr	r2, [r3, #16]
 8013a0c:	2a01      	cmp	r2, #1
 8013a0e:	f082 0401 	eor.w	r4, r2, #1
 8013a12:	611c      	str	r4, [r3, #16]
 8013a14:	bf14      	ite	ne
 8013a16:	610d      	strne	r5, [r1, #16]
 8013a18:	614a      	streq	r2, [r1, #20]
 8013a1a:	e7ec      	b.n	80139f6 <Hardware::Reboot()+0x4a>
 8013a1c:	2000d384 	andcs	sp, r0, r4, lsl #7
 8013a20:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 8013a24:	40011000 	andmi	r1, r1, r0

08013a28 <operator delete(void*)>:
 8013a28:	f000 b890 	b.w	8013b4c <free>

08013a2c <operator delete[](void*)>:
 8013a2c:	f000 b88e 	b.w	8013b4c <free>

08013a30 <operator new(unsigned int)>:
 8013a30:	f000 b842 	b.w	8013ab8 <malloc>

08013a34 <operator new[](unsigned int)>:
 8013a34:	f000 b840 	b.w	8013ab8 <malloc>

08013a38 <inet_aton>:
 8013a38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013a3a:	f04f 0c0a 	mov.w	ip, #10
 8013a3e:	2500      	movs	r5, #0
 8013a40:	ae01      	add	r6, sp, #4
 8013a42:	4603      	mov	r3, r0
 8013a44:	2200      	movs	r2, #0
 8013a46:	1d07      	adds	r7, r0, #4
 8013a48:	e007      	b.n	8013a5a <inet_aton+0x22>
 8013a4a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013a4e:	2b09      	cmp	r3, #9
 8013a50:	d820      	bhi.n	8013a94 <inet_aton+0x5c>
 8013a52:	4603      	mov	r3, r0
 8013a54:	fb0c 4202 	mla	r2, ip, r2, r4
 8013a58:	3a30      	subs	r2, #48	; 0x30
 8013a5a:	4618      	mov	r0, r3
 8013a5c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8013a60:	2c2e      	cmp	r4, #46	; 0x2e
 8013a62:	d111      	bne.n	8013a88 <inet_aton+0x50>
 8013a64:	3501      	adds	r5, #1
 8013a66:	2d03      	cmp	r5, #3
 8013a68:	f806 2b01 	strb.w	r2, [r6], #1
 8013a6c:	d1e9      	bne.n	8013a42 <inet_aton+0xa>
 8013a6e:	2200      	movs	r2, #0
 8013a70:	250a      	movs	r5, #10
 8013a72:	1d1c      	adds	r4, r3, #4
 8013a74:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013a78:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8013a7c:	d10d      	bne.n	8013a9a <inet_aton+0x62>
 8013a7e:	f88d 2007 	strb.w	r2, [sp, #7]
 8013a82:	b9b1      	cbnz	r1, 8013ab2 <inet_aton+0x7a>
 8013a84:	2001      	movs	r0, #1
 8013a86:	e006      	b.n	8013a96 <inet_aton+0x5e>
 8013a88:	2c00      	cmp	r4, #0
 8013a8a:	d0eb      	beq.n	8013a64 <inet_aton+0x2c>
 8013a8c:	2c0a      	cmp	r4, #10
 8013a8e:	d0e9      	beq.n	8013a64 <inet_aton+0x2c>
 8013a90:	42b8      	cmp	r0, r7
 8013a92:	d1da      	bne.n	8013a4a <inet_aton+0x12>
 8013a94:	2000      	movs	r0, #0
 8013a96:	b003      	add	sp, #12
 8013a98:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a9a:	280a      	cmp	r0, #10
 8013a9c:	d0ef      	beq.n	8013a7e <inet_aton+0x46>
 8013a9e:	42a3      	cmp	r3, r4
 8013aa0:	d0f8      	beq.n	8013a94 <inet_aton+0x5c>
 8013aa2:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8013aa6:	2e09      	cmp	r6, #9
 8013aa8:	d8f4      	bhi.n	8013a94 <inet_aton+0x5c>
 8013aaa:	fb05 0202 	mla	r2, r5, r2, r0
 8013aae:	3a30      	subs	r2, #48	; 0x30
 8013ab0:	e7e0      	b.n	8013a74 <inet_aton+0x3c>
 8013ab2:	9b01      	ldr	r3, [sp, #4]
 8013ab4:	600b      	str	r3, [r1, #0]
 8013ab6:	e7e5      	b.n	8013a84 <inet_aton+0x4c>

08013ab8 <malloc>:
 8013ab8:	b538      	push	{r3, r4, r5, lr}
 8013aba:	4604      	mov	r4, r0
 8013abc:	4601      	mov	r1, r0
 8013abe:	481c      	ldr	r0, [pc, #112]	; (8013b30 <malloc+0x78>)
 8013ac0:	f000 fbbc 	bl	801423c <printf>
 8013ac4:	b17c      	cbz	r4, 8013ae6 <malloc+0x2e>
 8013ac6:	4b1b      	ldr	r3, [pc, #108]	; (8013b34 <malloc+0x7c>)
 8013ac8:	6818      	ldr	r0, [r3, #0]
 8013aca:	b978      	cbnz	r0, 8013aec <malloc+0x34>
 8013acc:	4a1a      	ldr	r2, [pc, #104]	; (8013b38 <malloc+0x80>)
 8013ace:	f104 031b 	add.w	r3, r4, #27
 8013ad2:	6811      	ldr	r1, [r2, #0]
 8013ad4:	4819      	ldr	r0, [pc, #100]	; (8013b3c <malloc+0x84>)
 8013ad6:	f023 030f 	bic.w	r3, r3, #15
 8013ada:	440b      	add	r3, r1
 8013adc:	4283      	cmp	r3, r0
 8013ade:	d921      	bls.n	8013b24 <malloc+0x6c>
 8013ae0:	4817      	ldr	r0, [pc, #92]	; (8013b40 <malloc+0x88>)
 8013ae2:	f000 fbab 	bl	801423c <printf>
 8013ae6:	2500      	movs	r5, #0
 8013ae8:	4628      	mov	r0, r5
 8013aea:	bd38      	pop	{r3, r4, r5, pc}
 8013aec:	4284      	cmp	r4, r0
 8013aee:	d80a      	bhi.n	8013b06 <malloc+0x4e>
 8013af0:	685a      	ldr	r2, [r3, #4]
 8013af2:	6899      	ldr	r1, [r3, #8]
 8013af4:	3201      	adds	r2, #1
 8013af6:	428a      	cmp	r2, r1
 8013af8:	605a      	str	r2, [r3, #4]
 8013afa:	d900      	bls.n	8013afe <malloc+0x46>
 8013afc:	609a      	str	r2, [r3, #8]
 8013afe:	68d9      	ldr	r1, [r3, #12]
 8013b00:	b919      	cbnz	r1, 8013b0a <malloc+0x52>
 8013b02:	4604      	mov	r4, r0
 8013b04:	e7e2      	b.n	8013acc <malloc+0x14>
 8013b06:	3310      	adds	r3, #16
 8013b08:	e7de      	b.n	8013ac8 <malloc+0x10>
 8013b0a:	4604      	mov	r4, r0
 8013b0c:	688a      	ldr	r2, [r1, #8]
 8013b0e:	60da      	str	r2, [r3, #12]
 8013b10:	2300      	movs	r3, #0
 8013b12:	f101 050c 	add.w	r5, r1, #12
 8013b16:	608b      	str	r3, [r1, #8]
 8013b18:	4622      	mov	r2, r4
 8013b1a:	462b      	mov	r3, r5
 8013b1c:	4809      	ldr	r0, [pc, #36]	; (8013b44 <malloc+0x8c>)
 8013b1e:	f000 fb8d 	bl	801423c <printf>
 8013b22:	e7e1      	b.n	8013ae8 <malloc+0x30>
 8013b24:	6013      	str	r3, [r2, #0]
 8013b26:	4b08      	ldr	r3, [pc, #32]	; (8013b48 <malloc+0x90>)
 8013b28:	e9c1 3400 	strd	r3, r4, [r1]
 8013b2c:	e7f0      	b.n	8013b10 <malloc+0x58>
 8013b2e:	bf00      	nop
 8013b30:	08018680 	stmdaeq	r1, {r7, r9, sl, pc}
 8013b34:	20000024 	andcs	r0, r0, r4, lsr #32
 8013b38:	20000020 	andcs	r0, r0, r0, lsr #32
 8013b3c:	2001e000 	andcs	lr, r1, r0
 8013b40:	0801868c 	stmdaeq	r1, {r2, r3, r7, r9, sl, pc}
 8013b44:	080186a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, pc}
 8013b48:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08013b4c <free>:
 8013b4c:	b538      	push	{r3, r4, r5, lr}
 8013b4e:	4604      	mov	r4, r0
 8013b50:	b1c8      	cbz	r0, 8013b86 <free+0x3a>
 8013b52:	f1a0 050c 	sub.w	r5, r0, #12
 8013b56:	4602      	mov	r2, r0
 8013b58:	4629      	mov	r1, r5
 8013b5a:	480c      	ldr	r0, [pc, #48]	; (8013b8c <free+0x40>)
 8013b5c:	f000 fb6e 	bl	801423c <printf>
 8013b60:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8013b64:	4b0a      	ldr	r3, [pc, #40]	; (8013b90 <free+0x44>)
 8013b66:	429a      	cmp	r2, r3
 8013b68:	d10d      	bne.n	8013b86 <free+0x3a>
 8013b6a:	4b0a      	ldr	r3, [pc, #40]	; (8013b94 <free+0x48>)
 8013b6c:	681a      	ldr	r2, [r3, #0]
 8013b6e:	b152      	cbz	r2, 8013b86 <free+0x3a>
 8013b70:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8013b74:	4291      	cmp	r1, r2
 8013b76:	d107      	bne.n	8013b88 <free+0x3c>
 8013b78:	68da      	ldr	r2, [r3, #12]
 8013b7a:	f844 2c04 	str.w	r2, [r4, #-4]
 8013b7e:	685a      	ldr	r2, [r3, #4]
 8013b80:	60dd      	str	r5, [r3, #12]
 8013b82:	3a01      	subs	r2, #1
 8013b84:	605a      	str	r2, [r3, #4]
 8013b86:	bd38      	pop	{r3, r4, r5, pc}
 8013b88:	3310      	adds	r3, #16
 8013b8a:	e7ef      	b.n	8013b6c <free+0x20>
 8013b8c:	080186d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, pc}
 8013b90:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8013b94:	20000024 	andcs	r0, r0, r4, lsr #32

08013b98 <memcpy>:
 8013b98:	b510      	push	{r4, lr}
 8013b9a:	1e43      	subs	r3, r0, #1
 8013b9c:	440a      	add	r2, r1
 8013b9e:	4291      	cmp	r1, r2
 8013ba0:	d100      	bne.n	8013ba4 <memcpy+0xc>
 8013ba2:	bd10      	pop	{r4, pc}
 8013ba4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013ba8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013bac:	e7f7      	b.n	8013b9e <memcpy+0x6>

08013bae <memmove>:
 8013bae:	4288      	cmp	r0, r1
 8013bb0:	b510      	push	{r4, lr}
 8013bb2:	eb01 0302 	add.w	r3, r1, r2
 8013bb6:	d208      	bcs.n	8013bca <memmove+0x1c>
 8013bb8:	1e42      	subs	r2, r0, #1
 8013bba:	4299      	cmp	r1, r3
 8013bbc:	d100      	bne.n	8013bc0 <memmove+0x12>
 8013bbe:	bd10      	pop	{r4, pc}
 8013bc0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013bc4:	f802 4f01 	strb.w	r4, [r2, #1]!
 8013bc8:	e7f7      	b.n	8013bba <memmove+0xc>
 8013bca:	4601      	mov	r1, r0
 8013bcc:	4402      	add	r2, r0
 8013bce:	428a      	cmp	r2, r1
 8013bd0:	d0f5      	beq.n	8013bbe <memmove+0x10>
 8013bd2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8013bd6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8013bda:	e7f8      	b.n	8013bce <memmove+0x20>

08013bdc <memset>:
 8013bdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013bde:	b1e2      	cbz	r2, 8013c1a <memset+0x3e>
 8013be0:	4603      	mov	r3, r0
 8013be2:	b2c9      	uxtb	r1, r1
 8013be4:	075c      	lsls	r4, r3, #29
 8013be6:	d114      	bne.n	8013c12 <memset+0x36>
 8013be8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8013bec:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8013bf0:	463d      	mov	r5, r7
 8013bf2:	f022 0407 	bic.w	r4, r2, #7
 8013bf6:	08d6      	lsrs	r6, r2, #3
 8013bf8:	441c      	add	r4, r3
 8013bfa:	42a3      	cmp	r3, r4
 8013bfc:	d10e      	bne.n	8013c1c <memset+0x40>
 8013bfe:	f06f 0307 	mvn.w	r3, #7
 8013c02:	fb03 2206 	mla	r2, r3, r6, r2
 8013c06:	4422      	add	r2, r4
 8013c08:	4294      	cmp	r4, r2
 8013c0a:	d006      	beq.n	8013c1a <memset+0x3e>
 8013c0c:	f804 1b01 	strb.w	r1, [r4], #1
 8013c10:	e7fa      	b.n	8013c08 <memset+0x2c>
 8013c12:	3a01      	subs	r2, #1
 8013c14:	f803 1b01 	strb.w	r1, [r3], #1
 8013c18:	d1e4      	bne.n	8013be4 <memset+0x8>
 8013c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c1c:	f843 7b08 	str.w	r7, [r3], #8
 8013c20:	f843 5c04 	str.w	r5, [r3, #-4]
 8013c24:	e7e9      	b.n	8013bfa <memset+0x1e>

08013c26 <_itostr>:
 8013c26:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013c28:	0fc7      	lsrs	r7, r0, #31
 8013c2a:	b091      	sub	sp, #68	; 0x44
 8013c2c:	bf18      	it	ne
 8013c2e:	4240      	negne	r0, r0
 8013c30:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8013c34:	b9c8      	cbnz	r0, 8013c6a <_itostr+0x44>
 8013c36:	2330      	movs	r3, #48	; 0x30
 8013c38:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8013c3c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8013c40:	b132      	cbz	r2, 8013c50 <_itostr+0x2a>
 8013c42:	4668      	mov	r0, sp
 8013c44:	2530      	movs	r5, #48	; 0x30
 8013c46:	1ae6      	subs	r6, r4, r3
 8013c48:	4296      	cmp	r6, r2
 8013c4a:	da01      	bge.n	8013c50 <_itostr+0x2a>
 8013c4c:	4283      	cmp	r3, r0
 8013c4e:	d81c      	bhi.n	8013c8a <_itostr+0x64>
 8013c50:	b117      	cbz	r7, 8013c58 <_itostr+0x32>
 8013c52:	222d      	movs	r2, #45	; 0x2d
 8013c54:	f803 2901 	strb.w	r2, [r3], #-1
 8013c58:	3301      	adds	r3, #1
 8013c5a:	1ae0      	subs	r0, r4, r3
 8013c5c:	3901      	subs	r1, #1
 8013c5e:	aa10      	add	r2, sp, #64	; 0x40
 8013c60:	4293      	cmp	r3, r2
 8013c62:	d315      	bcc.n	8013c90 <_itostr+0x6a>
 8013c64:	3001      	adds	r0, #1
 8013c66:	b011      	add	sp, #68	; 0x44
 8013c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013c6a:	4623      	mov	r3, r4
 8013c6c:	250a      	movs	r5, #10
 8013c6e:	46ec      	mov	ip, sp
 8013c70:	fb90 f6f5 	sdiv	r6, r0, r5
 8013c74:	fb05 0016 	mls	r0, r5, r6, r0
 8013c78:	3030      	adds	r0, #48	; 0x30
 8013c7a:	f803 0901 	strb.w	r0, [r3], #-1
 8013c7e:	4630      	mov	r0, r6
 8013c80:	2e00      	cmp	r6, #0
 8013c82:	d0dd      	beq.n	8013c40 <_itostr+0x1a>
 8013c84:	4563      	cmp	r3, ip
 8013c86:	d1f3      	bne.n	8013c70 <_itostr+0x4a>
 8013c88:	e7da      	b.n	8013c40 <_itostr+0x1a>
 8013c8a:	f803 5901 	strb.w	r5, [r3], #-1
 8013c8e:	e7da      	b.n	8013c46 <_itostr+0x20>
 8013c90:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013c94:	f801 2f01 	strb.w	r2, [r1, #1]!
 8013c98:	e7e1      	b.n	8013c5e <_itostr+0x38>
	...

08013c9c <_xputch>:
 8013c9c:	4603      	mov	r3, r0
 8013c9e:	b410      	push	{r4}
 8013ca0:	4c08      	ldr	r4, [pc, #32]	; (8013cc4 <_xputch+0x28>)
 8013ca2:	68da      	ldr	r2, [r3, #12]
 8013ca4:	4608      	mov	r0, r1
 8013ca6:	6821      	ldr	r1, [r4, #0]
 8013ca8:	3201      	adds	r2, #1
 8013caa:	60da      	str	r2, [r3, #12]
 8013cac:	b139      	cbz	r1, 8013cbe <_xputch+0x22>
 8013cae:	691b      	ldr	r3, [r3, #16]
 8013cb0:	429a      	cmp	r2, r3
 8013cb2:	da02      	bge.n	8013cba <_xputch+0x1e>
 8013cb4:	1c4b      	adds	r3, r1, #1
 8013cb6:	6023      	str	r3, [r4, #0]
 8013cb8:	7008      	strb	r0, [r1, #0]
 8013cba:	bc10      	pop	{r4}
 8013cbc:	4770      	bx	lr
 8013cbe:	bc10      	pop	{r4}
 8013cc0:	f7ff bd18 	b.w	80136f4 <console_putc>
 8013cc4:	2000d394 	mulcs	r0, r4, r3

08013cc8 <_format_int>:
 8013cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ccc:	461f      	mov	r7, r3
 8013cce:	b091      	sub	sp, #68	; 0x44
 8013cd0:	ea52 0307 	orrs.w	r3, r2, r7
 8013cd4:	4680      	mov	r8, r0
 8013cd6:	4616      	mov	r6, r2
 8013cd8:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8013cdc:	d138      	bne.n	8013d50 <_format_int+0x88>
 8013cde:	2330      	movs	r3, #48	; 0x30
 8013ce0:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8013ce4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8013ce8:	f8d8 3000 	ldr.w	r3, [r8]
 8013cec:	07d8      	lsls	r0, r3, #31
 8013cee:	d508      	bpl.n	8013d02 <_format_int+0x3a>
 8013cf0:	466a      	mov	r2, sp
 8013cf2:	2030      	movs	r0, #48	; 0x30
 8013cf4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8013cf8:	1b2e      	subs	r6, r5, r4
 8013cfa:	428e      	cmp	r6, r1
 8013cfc:	da01      	bge.n	8013d02 <_format_int+0x3a>
 8013cfe:	4294      	cmp	r4, r2
 8013d00:	d843      	bhi.n	8013d8a <_format_int+0xc2>
 8013d02:	0699      	lsls	r1, r3, #26
 8013d04:	d508      	bpl.n	8013d18 <_format_int+0x50>
 8013d06:	466a      	mov	r2, sp
 8013d08:	2030      	movs	r0, #48	; 0x30
 8013d0a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013d0e:	1b2e      	subs	r6, r5, r4
 8013d10:	428e      	cmp	r6, r1
 8013d12:	da01      	bge.n	8013d18 <_format_int+0x50>
 8013d14:	4294      	cmp	r4, r2
 8013d16:	d83b      	bhi.n	8013d90 <_format_int+0xc8>
 8013d18:	071a      	lsls	r2, r3, #28
 8013d1a:	bf44      	itt	mi
 8013d1c:	222d      	movmi	r2, #45	; 0x2d
 8013d1e:	f804 2901 	strbmi.w	r2, [r4], #-1
 8013d22:	065b      	lsls	r3, r3, #25
 8013d24:	d408      	bmi.n	8013d38 <_format_int+0x70>
 8013d26:	466b      	mov	r3, sp
 8013d28:	2120      	movs	r1, #32
 8013d2a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8013d2e:	1b28      	subs	r0, r5, r4
 8013d30:	4290      	cmp	r0, r2
 8013d32:	da01      	bge.n	8013d38 <_format_int+0x70>
 8013d34:	429c      	cmp	r4, r3
 8013d36:	d82e      	bhi.n	8013d96 <_format_int+0xce>
 8013d38:	1b2d      	subs	r5, r5, r4
 8013d3a:	3401      	adds	r4, #1
 8013d3c:	ab10      	add	r3, sp, #64	; 0x40
 8013d3e:	429c      	cmp	r4, r3
 8013d40:	d32c      	bcc.n	8013d9c <_format_int+0xd4>
 8013d42:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8013d46:	42ab      	cmp	r3, r5
 8013d48:	dc2e      	bgt.n	8013da8 <_format_int+0xe0>
 8013d4a:	b011      	add	sp, #68	; 0x44
 8013d4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d50:	462c      	mov	r4, r5
 8013d52:	46eb      	mov	fp, sp
 8013d54:	4630      	mov	r0, r6
 8013d56:	4639      	mov	r1, r7
 8013d58:	220a      	movs	r2, #10
 8013d5a:	2300      	movs	r3, #0
 8013d5c:	f7f4 fbfa 	bl	8008554 <__aeabi_uldivmod>
 8013d60:	46b2      	mov	sl, r6
 8013d62:	3230      	adds	r2, #48	; 0x30
 8013d64:	46b9      	mov	r9, r7
 8013d66:	2300      	movs	r3, #0
 8013d68:	4630      	mov	r0, r6
 8013d6a:	4639      	mov	r1, r7
 8013d6c:	f804 2901 	strb.w	r2, [r4], #-1
 8013d70:	220a      	movs	r2, #10
 8013d72:	f7f4 fbef 	bl	8008554 <__aeabi_uldivmod>
 8013d76:	f1ba 0f0a 	cmp.w	sl, #10
 8013d7a:	f179 0300 	sbcs.w	r3, r9, #0
 8013d7e:	4606      	mov	r6, r0
 8013d80:	460f      	mov	r7, r1
 8013d82:	d3b1      	bcc.n	8013ce8 <_format_int+0x20>
 8013d84:	455c      	cmp	r4, fp
 8013d86:	d1e5      	bne.n	8013d54 <_format_int+0x8c>
 8013d88:	e7ae      	b.n	8013ce8 <_format_int+0x20>
 8013d8a:	f804 0901 	strb.w	r0, [r4], #-1
 8013d8e:	e7b3      	b.n	8013cf8 <_format_int+0x30>
 8013d90:	f804 0901 	strb.w	r0, [r4], #-1
 8013d94:	e7bb      	b.n	8013d0e <_format_int+0x46>
 8013d96:	f804 1901 	strb.w	r1, [r4], #-1
 8013d9a:	e7c8      	b.n	8013d2e <_format_int+0x66>
 8013d9c:	4640      	mov	r0, r8
 8013d9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013da2:	f7ff ff7b 	bl	8013c9c <_xputch>
 8013da6:	e7c9      	b.n	8013d3c <_format_int+0x74>
 8013da8:	2120      	movs	r1, #32
 8013daa:	4640      	mov	r0, r8
 8013dac:	f7ff ff76 	bl	8013c9c <_xputch>
 8013db0:	3501      	adds	r5, #1
 8013db2:	e7c6      	b.n	8013d42 <_format_int+0x7a>

08013db4 <_format_hex>:
 8013db4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013db6:	b091      	sub	sp, #68	; 0x44
 8013db8:	4606      	mov	r6, r0
 8013dba:	6804      	ldr	r4, [r0, #0]
 8013dbc:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8013dc0:	bb61      	cbnz	r1, 8013e1c <_format_hex+0x68>
 8013dc2:	2330      	movs	r3, #48	; 0x30
 8013dc4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8013dc8:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8013dcc:	07e5      	lsls	r5, r4, #31
 8013dce:	d507      	bpl.n	8013de0 <_format_hex+0x2c>
 8013dd0:	4669      	mov	r1, sp
 8013dd2:	2530      	movs	r5, #48	; 0x30
 8013dd4:	6870      	ldr	r0, [r6, #4]
 8013dd6:	1ad7      	subs	r7, r2, r3
 8013dd8:	4287      	cmp	r7, r0
 8013dda:	da01      	bge.n	8013de0 <_format_hex+0x2c>
 8013ddc:	428b      	cmp	r3, r1
 8013dde:	d831      	bhi.n	8013e44 <_format_hex+0x90>
 8013de0:	06a0      	lsls	r0, r4, #26
 8013de2:	d507      	bpl.n	8013df4 <_format_hex+0x40>
 8013de4:	4669      	mov	r1, sp
 8013de6:	2530      	movs	r5, #48	; 0x30
 8013de8:	68b0      	ldr	r0, [r6, #8]
 8013dea:	1ad7      	subs	r7, r2, r3
 8013dec:	4287      	cmp	r7, r0
 8013dee:	da01      	bge.n	8013df4 <_format_hex+0x40>
 8013df0:	428b      	cmp	r3, r1
 8013df2:	d82a      	bhi.n	8013e4a <_format_hex+0x96>
 8013df4:	0661      	lsls	r1, r4, #25
 8013df6:	d407      	bmi.n	8013e08 <_format_hex+0x54>
 8013df8:	4669      	mov	r1, sp
 8013dfa:	2420      	movs	r4, #32
 8013dfc:	68b0      	ldr	r0, [r6, #8]
 8013dfe:	1ad5      	subs	r5, r2, r3
 8013e00:	4285      	cmp	r5, r0
 8013e02:	da01      	bge.n	8013e08 <_format_hex+0x54>
 8013e04:	428b      	cmp	r3, r1
 8013e06:	d823      	bhi.n	8013e50 <_format_hex+0x9c>
 8013e08:	1ad5      	subs	r5, r2, r3
 8013e0a:	1c5c      	adds	r4, r3, #1
 8013e0c:	ab10      	add	r3, sp, #64	; 0x40
 8013e0e:	429c      	cmp	r4, r3
 8013e10:	d321      	bcc.n	8013e56 <_format_hex+0xa2>
 8013e12:	68b3      	ldr	r3, [r6, #8]
 8013e14:	429d      	cmp	r5, r3
 8013e16:	db24      	blt.n	8013e62 <_format_hex+0xae>
 8013e18:	b011      	add	sp, #68	; 0x44
 8013e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e1c:	f014 0f02 	tst.w	r4, #2
 8013e20:	bf0c      	ite	eq
 8013e22:	2757      	moveq	r7, #87	; 0x57
 8013e24:	2737      	movne	r7, #55	; 0x37
 8013e26:	4613      	mov	r3, r2
 8013e28:	466d      	mov	r5, sp
 8013e2a:	f001 000f 	and.w	r0, r1, #15
 8013e2e:	2809      	cmp	r0, #9
 8013e30:	bf94      	ite	ls
 8013e32:	3030      	addls	r0, #48	; 0x30
 8013e34:	19c0      	addhi	r0, r0, r7
 8013e36:	0909      	lsrs	r1, r1, #4
 8013e38:	f803 0901 	strb.w	r0, [r3], #-1
 8013e3c:	d0c6      	beq.n	8013dcc <_format_hex+0x18>
 8013e3e:	42ab      	cmp	r3, r5
 8013e40:	d1f3      	bne.n	8013e2a <_format_hex+0x76>
 8013e42:	e7c3      	b.n	8013dcc <_format_hex+0x18>
 8013e44:	f803 5901 	strb.w	r5, [r3], #-1
 8013e48:	e7c5      	b.n	8013dd6 <_format_hex+0x22>
 8013e4a:	f803 5901 	strb.w	r5, [r3], #-1
 8013e4e:	e7cc      	b.n	8013dea <_format_hex+0x36>
 8013e50:	f803 4901 	strb.w	r4, [r3], #-1
 8013e54:	e7d3      	b.n	8013dfe <_format_hex+0x4a>
 8013e56:	4630      	mov	r0, r6
 8013e58:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013e5c:	f7ff ff1e 	bl	8013c9c <_xputch>
 8013e60:	e7d4      	b.n	8013e0c <_format_hex+0x58>
 8013e62:	2120      	movs	r1, #32
 8013e64:	4630      	mov	r0, r6
 8013e66:	f7ff ff19 	bl	8013c9c <_xputch>
 8013e6a:	3501      	adds	r5, #1
 8013e6c:	e7d1      	b.n	8013e12 <_format_hex+0x5e>
	...

08013e70 <_vprintf>:
 8013e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e74:	4614      	mov	r4, r2
 8013e76:	2200      	movs	r2, #0
 8013e78:	460b      	mov	r3, r1
 8013e7a:	2700      	movs	r7, #0
 8013e7c:	b099      	sub	sp, #100	; 0x64
 8013e7e:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8013e82:	ae08      	add	r6, sp, #32
 8013e84:	7819      	ldrb	r1, [r3, #0]
 8013e86:	b919      	cbnz	r1, 8013e90 <_vprintf+0x20>
 8013e88:	9806      	ldr	r0, [sp, #24]
 8013e8a:	b019      	add	sp, #100	; 0x64
 8013e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e90:	2925      	cmp	r1, #37	; 0x25
 8013e92:	f103 0501 	add.w	r5, r3, #1
 8013e96:	d004      	beq.n	8013ea2 <_vprintf+0x32>
 8013e98:	a803      	add	r0, sp, #12
 8013e9a:	f7ff feff 	bl	8013c9c <_xputch>
 8013e9e:	462b      	mov	r3, r5
 8013ea0:	e7f0      	b.n	8013e84 <_vprintf+0x14>
 8013ea2:	2200      	movs	r2, #0
 8013ea4:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013ea8:	9205      	str	r2, [sp, #20]
 8013eaa:	785a      	ldrb	r2, [r3, #1]
 8013eac:	2a30      	cmp	r2, #48	; 0x30
 8013eae:	d12b      	bne.n	8013f08 <_vprintf+0x98>
 8013eb0:	2220      	movs	r2, #32
 8013eb2:	9203      	str	r2, [sp, #12]
 8013eb4:	1c9d      	adds	r5, r3, #2
 8013eb6:	2200      	movs	r2, #0
 8013eb8:	46ac      	mov	ip, r5
 8013eba:	4613      	mov	r3, r2
 8013ebc:	f04f 0e0a 	mov.w	lr, #10
 8013ec0:	f89c 1000 	ldrb.w	r1, [ip]
 8013ec4:	4665      	mov	r5, ip
 8013ec6:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8013eca:	2809      	cmp	r0, #9
 8013ecc:	f10c 0c01 	add.w	ip, ip, #1
 8013ed0:	d91e      	bls.n	8013f10 <_vprintf+0xa0>
 8013ed2:	b12a      	cbz	r2, 8013ee0 <_vprintf+0x70>
 8013ed4:	9305      	str	r3, [sp, #20]
 8013ed6:	b11b      	cbz	r3, 8013ee0 <_vprintf+0x70>
 8013ed8:	9b03      	ldr	r3, [sp, #12]
 8013eda:	f043 0310 	orr.w	r3, r3, #16
 8013ede:	9303      	str	r3, [sp, #12]
 8013ee0:	292e      	cmp	r1, #46	; 0x2e
 8013ee2:	d124      	bne.n	8013f2e <_vprintf+0xbe>
 8013ee4:	786b      	ldrb	r3, [r5, #1]
 8013ee6:	2b2a      	cmp	r3, #42	; 0x2a
 8013ee8:	d016      	beq.n	8013f18 <_vprintf+0xa8>
 8013eea:	2100      	movs	r1, #0
 8013eec:	f04f 0c0a 	mov.w	ip, #10
 8013ef0:	460a      	mov	r2, r1
 8013ef2:	1c68      	adds	r0, r5, #1
 8013ef4:	7803      	ldrb	r3, [r0, #0]
 8013ef6:	4605      	mov	r5, r0
 8013ef8:	3b30      	subs	r3, #48	; 0x30
 8013efa:	2b09      	cmp	r3, #9
 8013efc:	f100 0001 	add.w	r0, r0, #1
 8013f00:	d958      	bls.n	8013fb4 <_vprintf+0x144>
 8013f02:	b181      	cbz	r1, 8013f26 <_vprintf+0xb6>
 8013f04:	9204      	str	r2, [sp, #16]
 8013f06:	e00e      	b.n	8013f26 <_vprintf+0xb6>
 8013f08:	2a2d      	cmp	r2, #45	; 0x2d
 8013f0a:	d1d4      	bne.n	8013eb6 <_vprintf+0x46>
 8013f0c:	2240      	movs	r2, #64	; 0x40
 8013f0e:	e7d0      	b.n	8013eb2 <_vprintf+0x42>
 8013f10:	2201      	movs	r2, #1
 8013f12:	fb0e 0303 	mla	r3, lr, r3, r0
 8013f16:	e7d3      	b.n	8013ec0 <_vprintf+0x50>
 8013f18:	f854 3b04 	ldr.w	r3, [r4], #4
 8013f1c:	3502      	adds	r5, #2
 8013f1e:	2b00      	cmp	r3, #0
 8013f20:	bfb8      	it	lt
 8013f22:	425b      	neglt	r3, r3
 8013f24:	9304      	str	r3, [sp, #16]
 8013f26:	9b03      	ldr	r3, [sp, #12]
 8013f28:	f043 0301 	orr.w	r3, r3, #1
 8013f2c:	9303      	str	r3, [sp, #12]
 8013f2e:	782b      	ldrb	r3, [r5, #0]
 8013f30:	2b6c      	cmp	r3, #108	; 0x6c
 8013f32:	bf04      	itt	eq
 8013f34:	9b03      	ldreq	r3, [sp, #12]
 8013f36:	3501      	addeq	r5, #1
 8013f38:	7829      	ldrb	r1, [r5, #0]
 8013f3a:	bf04      	itt	eq
 8013f3c:	f043 0304 	orreq.w	r3, r3, #4
 8013f40:	9303      	streq	r3, [sp, #12]
 8013f42:	2958      	cmp	r1, #88	; 0x58
 8013f44:	f000 8173 	beq.w	801422e <_vprintf+0x3be>
 8013f48:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8013f4c:	b2da      	uxtb	r2, r3
 8013f4e:	2a15      	cmp	r2, #21
 8013f50:	d8a2      	bhi.n	8013e98 <_vprintf+0x28>
 8013f52:	2b15      	cmp	r3, #21
 8013f54:	d8a0      	bhi.n	8013e98 <_vprintf+0x28>
 8013f56:	a201      	add	r2, pc, #4	; (adr r2, 8013f5c <_vprintf+0xec>)
 8013f58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8013f5c:	08013fbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp}
 8013f60:	08013fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, sp}
 8013f64:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f68:	08013fff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp}
 8013f6c:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f70:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f74:	08013fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, sp}
 8013f78:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f7c:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f80:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f84:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f88:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f8c:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f90:	08014171 	stmdaeq	r1, {r0, r4, r5, r6, r8, lr}
 8013f94:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f98:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013f9c:	08014197 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, lr}
 8013fa0:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013fa4:	08014211 	stmdaeq	r1, {r0, r4, r9, lr}
 8013fa8:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013fac:	08013e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp, ip, sp}
 8013fb0:	08014237 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, lr}
 8013fb4:	2101      	movs	r1, #1
 8013fb6:	fb0c 3202 	mla	r2, ip, r2, r3
 8013fba:	e79b      	b.n	8013ef4 <_vprintf+0x84>
 8013fbc:	f854 1b04 	ldr.w	r1, [r4], #4
 8013fc0:	a803      	add	r0, sp, #12
 8013fc2:	f7ff fe6b 	bl	8013c9c <_xputch>
 8013fc6:	3501      	adds	r5, #1
 8013fc8:	e769      	b.n	8013e9e <_vprintf+0x2e>
 8013fca:	9903      	ldr	r1, [sp, #12]
 8013fcc:	074a      	lsls	r2, r1, #29
 8013fce:	bf43      	ittte	mi
 8013fd0:	3407      	addmi	r4, #7
 8013fd2:	f024 0307 	bicmi.w	r3, r4, #7
 8013fd6:	461c      	movmi	r4, r3
 8013fd8:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8013fdc:	bf4a      	itet	mi
 8013fde:	685b      	ldrmi	r3, [r3, #4]
 8013fe0:	17d3      	asrpl	r3, r2, #31
 8013fe2:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8013fe6:	2b00      	cmp	r3, #0
 8013fe8:	da05      	bge.n	8013ff6 <_vprintf+0x186>
 8013fea:	f041 0108 	orr.w	r1, r1, #8
 8013fee:	4252      	negs	r2, r2
 8013ff0:	9103      	str	r1, [sp, #12]
 8013ff2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8013ff6:	a803      	add	r0, sp, #12
 8013ff8:	f7ff fe66 	bl	8013cc8 <_format_int>
 8013ffc:	e7e3      	b.n	8013fc6 <_vprintf+0x156>
 8013ffe:	3407      	adds	r4, #7
 8014000:	f024 0407 	bic.w	r4, r4, #7
 8014004:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8014008:	f7f3 ff5a 	bl	8007ec0 <__aeabi_d2f>
 801400c:	9b03      	ldr	r3, [sp, #12]
 801400e:	4639      	mov	r1, r7
 8014010:	07db      	lsls	r3, r3, #31
 8014012:	bf54      	ite	pl
 8014014:	f04f 0a06 	movpl.w	sl, #6
 8014018:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 801401c:	4681      	mov	r9, r0
 801401e:	f7f4 fa4b 	bl	80084b8 <__aeabi_fcmplt>
 8014022:	2800      	cmp	r0, #0
 8014024:	d069      	beq.n	80140fa <_vprintf+0x28a>
 8014026:	232d      	movs	r3, #45	; 0x2d
 8014028:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 801402c:	f88d 3020 	strb.w	r3, [sp, #32]
 8014030:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8014034:	4648      	mov	r0, r9
 8014036:	f7f4 fa67 	bl	8008508 <__aeabi_f2iz>
 801403a:	4659      	mov	r1, fp
 801403c:	2200      	movs	r2, #0
 801403e:	4680      	mov	r8, r0
 8014040:	f7ff fdf1 	bl	8013c26 <_itostr>
 8014044:	eb0b 0200 	add.w	r2, fp, r0
 8014048:	e9cd 2000 	strd	r2, r0, [sp]
 801404c:	4640      	mov	r0, r8
 801404e:	f7f4 f841 	bl	80080d4 <__aeabi_i2f>
 8014052:	4601      	mov	r1, r0
 8014054:	4648      	mov	r0, r9
 8014056:	f7f3 ff87 	bl	8007f68 <__aeabi_fsub>
 801405a:	222e      	movs	r2, #46	; 0x2e
 801405c:	4601      	mov	r1, r0
 801405e:	200a      	movs	r0, #10
 8014060:	9b00      	ldr	r3, [sp, #0]
 8014062:	f10a 0901 	add.w	r9, sl, #1
 8014066:	f103 0801 	add.w	r8, r3, #1
 801406a:	9b01      	ldr	r3, [sp, #4]
 801406c:	f80b 2003 	strb.w	r2, [fp, r3]
 8014070:	4603      	mov	r3, r0
 8014072:	f1ba 0f00 	cmp.w	sl, #0
 8014076:	dc42      	bgt.n	80140fe <_vprintf+0x28e>
 8014078:	9100      	str	r1, [sp, #0]
 801407a:	f7f4 f82b 	bl	80080d4 <__aeabi_i2f>
 801407e:	9900      	ldr	r1, [sp, #0]
 8014080:	f7f4 f87c 	bl	800817c <__aeabi_fmul>
 8014084:	f7f4 fa40 	bl	8008508 <__aeabi_f2iz>
 8014088:	4641      	mov	r1, r8
 801408a:	464a      	mov	r2, r9
 801408c:	f7ff fdcb 	bl	8013c26 <_itostr>
 8014090:	4480      	add	r8, r0
 8014092:	eba8 0806 	sub.w	r8, r8, r6
 8014096:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 801409a:	5c73      	ldrb	r3, [r6, r1]
 801409c:	1872      	adds	r2, r6, r1
 801409e:	2b34      	cmp	r3, #52	; 0x34
 80140a0:	d910      	bls.n	80140c4 <_vprintf+0x254>
 80140a2:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80140a6:	1e53      	subs	r3, r2, #1
 80140a8:	282e      	cmp	r0, #46	; 0x2e
 80140aa:	d02f      	beq.n	801410c <_vprintf+0x29c>
 80140ac:	469c      	mov	ip, r3
 80140ae:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80140b2:	4663      	mov	r3, ip
 80140b4:	f81c 0901 	ldrb.w	r0, [ip], #-1
 80140b8:	2839      	cmp	r0, #57	; 0x39
 80140ba:	d024      	beq.n	8014106 <_vprintf+0x296>
 80140bc:	282e      	cmp	r0, #46	; 0x2e
 80140be:	d025      	beq.n	801410c <_vprintf+0x29c>
 80140c0:	3001      	adds	r0, #1
 80140c2:	7018      	strb	r0, [r3, #0]
 80140c4:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80140c8:	446b      	add	r3, sp
 80140ca:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80140ce:	2b2e      	cmp	r3, #46	; 0x2e
 80140d0:	bf08      	it	eq
 80140d2:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 80140d6:	4688      	mov	r8, r1
 80140d8:	4689      	mov	r9, r1
 80140da:	9b05      	ldr	r3, [sp, #20]
 80140dc:	454b      	cmp	r3, r9
 80140de:	dc40      	bgt.n	8014162 <_vprintf+0x2f2>
 80140e0:	46b1      	mov	r9, r6
 80140e2:	f1b8 0f00 	cmp.w	r8, #0
 80140e6:	f77f af6e 	ble.w	8013fc6 <_vprintf+0x156>
 80140ea:	f819 1b01 	ldrb.w	r1, [r9], #1
 80140ee:	a803      	add	r0, sp, #12
 80140f0:	f7ff fdd4 	bl	8013c9c <_xputch>
 80140f4:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80140f8:	e7f3      	b.n	80140e2 <_vprintf+0x272>
 80140fa:	46b3      	mov	fp, r6
 80140fc:	e79a      	b.n	8014034 <_vprintf+0x1c4>
 80140fe:	4358      	muls	r0, r3
 8014100:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8014104:	e7b5      	b.n	8014072 <_vprintf+0x202>
 8014106:	f88c e001 	strb.w	lr, [ip, #1]
 801410a:	e7d2      	b.n	80140b2 <_vprintf+0x242>
 801410c:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8014110:	3b01      	subs	r3, #1
 8014112:	7818      	ldrb	r0, [r3, #0]
 8014114:	2839      	cmp	r0, #57	; 0x39
 8014116:	d112      	bne.n	801413e <_vprintf+0x2ce>
 8014118:	42b3      	cmp	r3, r6
 801411a:	d20d      	bcs.n	8014138 <_vprintf+0x2c8>
 801411c:	1c98      	adds	r0, r3, #2
 801411e:	1c59      	adds	r1, r3, #1
 8014120:	4281      	cmp	r1, r0
 8014122:	eba2 0203 	sub.w	r2, r2, r3
 8014126:	d913      	bls.n	8014150 <_vprintf+0x2e0>
 8014128:	3201      	adds	r2, #1
 801412a:	441a      	add	r2, r3
 801412c:	428a      	cmp	r2, r1
 801412e:	d10b      	bne.n	8014148 <_vprintf+0x2d8>
 8014130:	2231      	movs	r2, #49	; 0x31
 8014132:	4641      	mov	r1, r8
 8014134:	705a      	strb	r2, [r3, #1]
 8014136:	e7c5      	b.n	80140c4 <_vprintf+0x254>
 8014138:	f803 c901 	strb.w	ip, [r3], #-1
 801413c:	e7e9      	b.n	8014112 <_vprintf+0x2a2>
 801413e:	42b3      	cmp	r3, r6
 8014140:	d3ec      	bcc.n	801411c <_vprintf+0x2ac>
 8014142:	282d      	cmp	r0, #45	; 0x2d
 8014144:	d0ea      	beq.n	801411c <_vprintf+0x2ac>
 8014146:	e7bb      	b.n	80140c0 <_vprintf+0x250>
 8014148:	f811 0b01 	ldrb.w	r0, [r1], #1
 801414c:	7008      	strb	r0, [r1, #0]
 801414e:	e7ed      	b.n	801412c <_vprintf+0x2bc>
 8014150:	4411      	add	r1, r2
 8014152:	4402      	add	r2, r0
 8014154:	4290      	cmp	r0, r2
 8014156:	d0eb      	beq.n	8014130 <_vprintf+0x2c0>
 8014158:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 801415c:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8014160:	e7f8      	b.n	8014154 <_vprintf+0x2e4>
 8014162:	2120      	movs	r1, #32
 8014164:	a803      	add	r0, sp, #12
 8014166:	f7ff fd99 	bl	8013c9c <_xputch>
 801416a:	f109 0901 	add.w	r9, r9, #1
 801416e:	e7b4      	b.n	80140da <_vprintf+0x26a>
 8014170:	2308      	movs	r3, #8
 8014172:	9305      	str	r3, [sp, #20]
 8014174:	2320      	movs	r3, #32
 8014176:	2130      	movs	r1, #48	; 0x30
 8014178:	f854 8b04 	ldr.w	r8, [r4], #4
 801417c:	a803      	add	r0, sp, #12
 801417e:	9303      	str	r3, [sp, #12]
 8014180:	f7ff fd8c 	bl	8013c9c <_xputch>
 8014184:	2178      	movs	r1, #120	; 0x78
 8014186:	a803      	add	r0, sp, #12
 8014188:	f7ff fd88 	bl	8013c9c <_xputch>
 801418c:	4641      	mov	r1, r8
 801418e:	a803      	add	r0, sp, #12
 8014190:	f7ff fe10 	bl	8013db4 <_format_hex>
 8014194:	e717      	b.n	8013fc6 <_vprintf+0x156>
 8014196:	f04f 0800 	mov.w	r8, #0
 801419a:	f854 9b04 	ldr.w	r9, [r4], #4
 801419e:	f819 3008 	ldrb.w	r3, [r9, r8]
 80141a2:	b993      	cbnz	r3, 80141ca <_vprintf+0x35a>
 80141a4:	9b03      	ldr	r3, [sp, #12]
 80141a6:	07d9      	lsls	r1, r3, #31
 80141a8:	d503      	bpl.n	80141b2 <_vprintf+0x342>
 80141aa:	9b04      	ldr	r3, [sp, #16]
 80141ac:	4598      	cmp	r8, r3
 80141ae:	bfa8      	it	ge
 80141b0:	4698      	movge	r8, r3
 80141b2:	9b03      	ldr	r3, [sp, #12]
 80141b4:	f108 0a01 	add.w	sl, r8, #1
 80141b8:	065a      	lsls	r2, r3, #25
 80141ba:	d403      	bmi.n	80141c4 <_vprintf+0x354>
 80141bc:	9b05      	ldr	r3, [sp, #20]
 80141be:	4598      	cmp	r8, r3
 80141c0:	db06      	blt.n	80141d0 <_vprintf+0x360>
 80141c2:	46d0      	mov	r8, sl
 80141c4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80141c8:	e00e      	b.n	80141e8 <_vprintf+0x378>
 80141ca:	f108 0801 	add.w	r8, r8, #1
 80141ce:	e7e6      	b.n	801419e <_vprintf+0x32e>
 80141d0:	2120      	movs	r1, #32
 80141d2:	a803      	add	r0, sp, #12
 80141d4:	f7ff fd62 	bl	8013c9c <_xputch>
 80141d8:	46d0      	mov	r8, sl
 80141da:	e7ea      	b.n	80141b2 <_vprintf+0x342>
 80141dc:	a803      	add	r0, sp, #12
 80141de:	f7ff fd5d 	bl	8013c9c <_xputch>
 80141e2:	9b04      	ldr	r3, [sp, #16]
 80141e4:	3b01      	subs	r3, #1
 80141e6:	9304      	str	r3, [sp, #16]
 80141e8:	9b03      	ldr	r3, [sp, #12]
 80141ea:	07db      	lsls	r3, r3, #31
 80141ec:	d501      	bpl.n	80141f2 <_vprintf+0x382>
 80141ee:	9b04      	ldr	r3, [sp, #16]
 80141f0:	b11b      	cbz	r3, 80141fa <_vprintf+0x38a>
 80141f2:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80141f6:	2900      	cmp	r1, #0
 80141f8:	d1f0      	bne.n	80141dc <_vprintf+0x36c>
 80141fa:	9b05      	ldr	r3, [sp, #20]
 80141fc:	4543      	cmp	r3, r8
 80141fe:	f77f aee2 	ble.w	8013fc6 <_vprintf+0x156>
 8014202:	2120      	movs	r1, #32
 8014204:	a803      	add	r0, sp, #12
 8014206:	f7ff fd49 	bl	8013c9c <_xputch>
 801420a:	f108 0801 	add.w	r8, r8, #1
 801420e:	e7f4      	b.n	80141fa <_vprintf+0x38a>
 8014210:	9b03      	ldr	r3, [sp, #12]
 8014212:	f013 0304 	ands.w	r3, r3, #4
 8014216:	bf1d      	ittte	ne
 8014218:	3407      	addne	r4, #7
 801421a:	f024 0307 	bicne.w	r3, r4, #7
 801421e:	461c      	movne	r4, r3
 8014220:	f854 2b04 	ldreq.w	r2, [r4], #4
 8014224:	bf1c      	itt	ne
 8014226:	f854 2b08 	ldrne.w	r2, [r4], #8
 801422a:	685b      	ldrne	r3, [r3, #4]
 801422c:	e6e3      	b.n	8013ff6 <_vprintf+0x186>
 801422e:	9b03      	ldr	r3, [sp, #12]
 8014230:	f043 0302 	orr.w	r3, r3, #2
 8014234:	9303      	str	r3, [sp, #12]
 8014236:	f854 1b04 	ldr.w	r1, [r4], #4
 801423a:	e7a8      	b.n	801418e <_vprintf+0x31e>

0801423c <printf>:
 801423c:	b40f      	push	{r0, r1, r2, r3}
 801423e:	b507      	push	{r0, r1, r2, lr}
 8014240:	aa04      	add	r2, sp, #16
 8014242:	f852 1b04 	ldr.w	r1, [r2], #4
 8014246:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801424a:	9201      	str	r2, [sp, #4]
 801424c:	f7ff fe10 	bl	8013e70 <_vprintf>
 8014250:	b003      	add	sp, #12
 8014252:	f85d eb04 	ldr.w	lr, [sp], #4
 8014256:	b004      	add	sp, #16
 8014258:	4770      	bx	lr
	...

0801425c <sprintf>:
 801425c:	b40e      	push	{r1, r2, r3}
 801425e:	b517      	push	{r0, r1, r2, r4, lr}
 8014260:	4c09      	ldr	r4, [pc, #36]	; (8014288 <sprintf+0x2c>)
 8014262:	aa05      	add	r2, sp, #20
 8014264:	f852 1b04 	ldr.w	r1, [r2], #4
 8014268:	6020      	str	r0, [r4, #0]
 801426a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801426e:	9201      	str	r2, [sp, #4]
 8014270:	f7ff fdfe 	bl	8013e70 <_vprintf>
 8014274:	2300      	movs	r3, #0
 8014276:	6822      	ldr	r2, [r4, #0]
 8014278:	6023      	str	r3, [r4, #0]
 801427a:	7013      	strb	r3, [r2, #0]
 801427c:	b003      	add	sp, #12
 801427e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014282:	b003      	add	sp, #12
 8014284:	4770      	bx	lr
 8014286:	bf00      	nop
 8014288:	2000d394 	mulcs	r0, r4, r3

0801428c <snprintf>:
 801428c:	b40c      	push	{r2, r3}
 801428e:	460b      	mov	r3, r1
 8014290:	b513      	push	{r0, r1, r4, lr}
 8014292:	4c09      	ldr	r4, [pc, #36]	; (80142b8 <snprintf+0x2c>)
 8014294:	aa04      	add	r2, sp, #16
 8014296:	f852 1b04 	ldr.w	r1, [r2], #4
 801429a:	6020      	str	r0, [r4, #0]
 801429c:	4618      	mov	r0, r3
 801429e:	9201      	str	r2, [sp, #4]
 80142a0:	f7ff fde6 	bl	8013e70 <_vprintf>
 80142a4:	2300      	movs	r3, #0
 80142a6:	6822      	ldr	r2, [r4, #0]
 80142a8:	6023      	str	r3, [r4, #0]
 80142aa:	7013      	strb	r3, [r2, #0]
 80142ac:	b002      	add	sp, #8
 80142ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80142b2:	b002      	add	sp, #8
 80142b4:	4770      	bx	lr
 80142b6:	bf00      	nop
 80142b8:	2000d394 	mulcs	r0, r4, r3

080142bc <vsnprintf>:
 80142bc:	b538      	push	{r3, r4, r5, lr}
 80142be:	4605      	mov	r5, r0
 80142c0:	4c05      	ldr	r4, [pc, #20]	; (80142d8 <vsnprintf+0x1c>)
 80142c2:	4608      	mov	r0, r1
 80142c4:	4611      	mov	r1, r2
 80142c6:	461a      	mov	r2, r3
 80142c8:	6025      	str	r5, [r4, #0]
 80142ca:	f7ff fdd1 	bl	8013e70 <_vprintf>
 80142ce:	2300      	movs	r3, #0
 80142d0:	6822      	ldr	r2, [r4, #0]
 80142d2:	6023      	str	r3, [r4, #0]
 80142d4:	7013      	strb	r3, [r2, #0]
 80142d6:	bd38      	pop	{r3, r4, r5, pc}
 80142d8:	2000d394 	mulcs	r0, r4, r3

080142dc <puts>:
 80142dc:	b508      	push	{r3, lr}
 80142de:	f7ff fa0b 	bl	80136f8 <console_puts>
 80142e2:	200a      	movs	r0, #10
 80142e4:	f7ff fa06 	bl	80136f4 <console_putc>
 80142e8:	2001      	movs	r0, #1
 80142ea:	bd08      	pop	{r3, pc}

080142ec <strtok>:
 80142ec:	b530      	push	{r4, r5, lr}
 80142ee:	b910      	cbnz	r0, 80142f6 <strtok+0xa>
 80142f0:	4b12      	ldr	r3, [pc, #72]	; (801433c <strtok+0x50>)
 80142f2:	6818      	ldr	r0, [r3, #0]
 80142f4:	b158      	cbz	r0, 801430e <strtok+0x22>
 80142f6:	4603      	mov	r3, r0
 80142f8:	460d      	mov	r5, r1
 80142fa:	4618      	mov	r0, r3
 80142fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014300:	f815 4b01 	ldrb.w	r4, [r5], #1
 8014304:	b924      	cbnz	r4, 8014310 <strtok+0x24>
 8014306:	b94a      	cbnz	r2, 801431c <strtok+0x30>
 8014308:	4610      	mov	r0, r2
 801430a:	4b0c      	ldr	r3, [pc, #48]	; (801433c <strtok+0x50>)
 801430c:	601a      	str	r2, [r3, #0]
 801430e:	bd30      	pop	{r4, r5, pc}
 8014310:	42a2      	cmp	r2, r4
 8014312:	d1f5      	bne.n	8014300 <strtok+0x14>
 8014314:	e7f0      	b.n	80142f8 <strtok+0xc>
 8014316:	4613      	mov	r3, r2
 8014318:	e00c      	b.n	8014334 <strtok+0x48>
 801431a:	b914      	cbnz	r4, 8014322 <strtok+0x36>
 801431c:	460d      	mov	r5, r1
 801431e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8014322:	f815 4b01 	ldrb.w	r4, [r5], #1
 8014326:	42a2      	cmp	r2, r4
 8014328:	d1f7      	bne.n	801431a <strtok+0x2e>
 801432a:	2a00      	cmp	r2, #0
 801432c:	d0f3      	beq.n	8014316 <strtok+0x2a>
 801432e:	2200      	movs	r2, #0
 8014330:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014334:	4a01      	ldr	r2, [pc, #4]	; (801433c <strtok+0x50>)
 8014336:	6013      	str	r3, [r2, #0]
 8014338:	e7e9      	b.n	801430e <strtok+0x22>
 801433a:	bf00      	nop
 801433c:	2000d398 	mulcs	r0, r8, r3

08014340 <isleapyear>:
 8014340:	2264      	movs	r2, #100	; 0x64
 8014342:	fb90 f3f2 	sdiv	r3, r0, r2
 8014346:	fb02 0313 	mls	r3, r2, r3, r0
 801434a:	b94b      	cbnz	r3, 8014360 <isleapyear+0x20>
 801434c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8014350:	fb90 f2f3 	sdiv	r2, r0, r3
 8014354:	fb03 0012 	mls	r0, r3, r2, r0
 8014358:	fab0 f080 	clz	r0, r0
 801435c:	0940      	lsrs	r0, r0, #5
 801435e:	4770      	bx	lr
 8014360:	f010 0f03 	tst.w	r0, #3
 8014364:	bf0c      	ite	eq
 8014366:	2001      	moveq	r0, #1
 8014368:	2000      	movne	r0, #0
 801436a:	4770      	bx	lr

0801436c <getdaysofmonth>:
 801436c:	b510      	push	{r4, lr}
 801436e:	4604      	mov	r4, r0
 8014370:	2c01      	cmp	r4, #1
 8014372:	4608      	mov	r0, r1
 8014374:	d102      	bne.n	801437c <getdaysofmonth+0x10>
 8014376:	f7ff ffe3 	bl	8014340 <isleapyear>
 801437a:	b918      	cbnz	r0, 8014384 <getdaysofmonth+0x18>
 801437c:	4b02      	ldr	r3, [pc, #8]	; (8014388 <getdaysofmonth+0x1c>)
 801437e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8014382:	bd10      	pop	{r4, pc}
 8014384:	201d      	movs	r0, #29
 8014386:	e7fc      	b.n	8014382 <getdaysofmonth+0x16>
 8014388:	080186fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, pc}

0801438c <mktime>:
 801438c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014390:	4604      	mov	r4, r0
 8014392:	2800      	cmp	r0, #0
 8014394:	d042      	beq.n	801441c <mktime+0x90>
 8014396:	6941      	ldr	r1, [r0, #20]
 8014398:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 801439c:	2b45      	cmp	r3, #69	; 0x45
 801439e:	d83d      	bhi.n	801441c <mktime+0x90>
 80143a0:	2600      	movs	r6, #0
 80143a2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80143a6:	f240 186d 	movw	r8, #365	; 0x16d
 80143aa:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80143ae:	42af      	cmp	r7, r5
 80143b0:	da23      	bge.n	80143fa <mktime+0x6e>
 80143b2:	6927      	ldr	r7, [r4, #16]
 80143b4:	2f0b      	cmp	r7, #11
 80143b6:	d831      	bhi.n	801441c <mktime+0x90>
 80143b8:	2500      	movs	r5, #0
 80143ba:	42af      	cmp	r7, r5
 80143bc:	d128      	bne.n	8014410 <mktime+0x84>
 80143be:	68e5      	ldr	r5, [r4, #12]
 80143c0:	2d00      	cmp	r5, #0
 80143c2:	dd2b      	ble.n	801441c <mktime+0x90>
 80143c4:	4638      	mov	r0, r7
 80143c6:	f7ff ffd1 	bl	801436c <getdaysofmonth>
 80143ca:	4285      	cmp	r5, r0
 80143cc:	dc26      	bgt.n	801441c <mktime+0x90>
 80143ce:	2318      	movs	r3, #24
 80143d0:	3d01      	subs	r5, #1
 80143d2:	4435      	add	r5, r6
 80143d4:	435d      	muls	r5, r3
 80143d6:	68a3      	ldr	r3, [r4, #8]
 80143d8:	2b17      	cmp	r3, #23
 80143da:	d81f      	bhi.n	801441c <mktime+0x90>
 80143dc:	203c      	movs	r0, #60	; 0x3c
 80143de:	442b      	add	r3, r5
 80143e0:	fb00 f503 	mul.w	r5, r0, r3
 80143e4:	6863      	ldr	r3, [r4, #4]
 80143e6:	2b3b      	cmp	r3, #59	; 0x3b
 80143e8:	d818      	bhi.n	801441c <mktime+0x90>
 80143ea:	442b      	add	r3, r5
 80143ec:	4343      	muls	r3, r0
 80143ee:	6820      	ldr	r0, [r4, #0]
 80143f0:	283b      	cmp	r0, #59	; 0x3b
 80143f2:	d813      	bhi.n	801441c <mktime+0x90>
 80143f4:	4418      	add	r0, r3
 80143f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143fa:	4628      	mov	r0, r5
 80143fc:	f7ff ffa0 	bl	8014340 <isleapyear>
 8014400:	2800      	cmp	r0, #0
 8014402:	bf14      	ite	ne
 8014404:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8014408:	4643      	moveq	r3, r8
 801440a:	3501      	adds	r5, #1
 801440c:	441e      	add	r6, r3
 801440e:	e7ce      	b.n	80143ae <mktime+0x22>
 8014410:	4628      	mov	r0, r5
 8014412:	f7ff ffab 	bl	801436c <getdaysofmonth>
 8014416:	3501      	adds	r5, #1
 8014418:	4406      	add	r6, r0
 801441a:	e7ce      	b.n	80143ba <mktime+0x2e>
 801441c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014420:	e7e9      	b.n	80143f6 <mktime+0x6a>
	...

08014424 <gettimeofday>:
 8014424:	b538      	push	{r3, r4, r5, lr}
 8014426:	4b10      	ldr	r3, [pc, #64]	; (8014468 <gettimeofday+0x44>)
 8014428:	4a10      	ldr	r2, [pc, #64]	; (801446c <gettimeofday+0x48>)
 801442a:	681b      	ldr	r3, [r3, #0]
 801442c:	6814      	ldr	r4, [r2, #0]
 801442e:	6013      	str	r3, [r2, #0]
 8014430:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014434:	429c      	cmp	r4, r3
 8014436:	bf2c      	ite	cs
 8014438:	1ae4      	subcs	r4, r4, r3
 801443a:	1b1c      	subcc	r4, r3, r4
 801443c:	4354      	muls	r4, r2
 801443e:	4b0c      	ldr	r3, [pc, #48]	; (8014470 <gettimeofday+0x4c>)
 8014440:	4605      	mov	r5, r0
 8014442:	e9d3 2100 	ldrd	r2, r1, [r3]
 8014446:	18a4      	adds	r4, r4, r2
 8014448:	f141 0100 	adc.w	r1, r1, #0
 801444c:	e9c3 4100 	strd	r4, r1, [r3]
 8014450:	4620      	mov	r0, r4
 8014452:	2300      	movs	r3, #0
 8014454:	4a07      	ldr	r2, [pc, #28]	; (8014474 <gettimeofday+0x50>)
 8014456:	f7f4 f87d 	bl	8008554 <__aeabi_uldivmod>
 801445a:	4b06      	ldr	r3, [pc, #24]	; (8014474 <gettimeofday+0x50>)
 801445c:	6028      	str	r0, [r5, #0]
 801445e:	fb03 4410 	mls	r4, r3, r0, r4
 8014462:	2000      	movs	r0, #0
 8014464:	606c      	str	r4, [r5, #4]
 8014466:	bd38      	pop	{r3, r4, r5, pc}
 8014468:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 801446c:	2000d3a8 	andcs	sp, r0, r8, lsr #7
 8014470:	2000d3a0 	andcs	sp, r0, r0, lsr #7
 8014474:	000f4240 	andeq	r4, pc, r0, asr #4

08014478 <settimeofday>:
 8014478:	4b07      	ldr	r3, [pc, #28]	; (8014498 <settimeofday+0x20>)
 801447a:	b510      	push	{r4, lr}
 801447c:	681a      	ldr	r2, [r3, #0]
 801447e:	4b07      	ldr	r3, [pc, #28]	; (801449c <settimeofday+0x24>)
 8014480:	6804      	ldr	r4, [r0, #0]
 8014482:	601a      	str	r2, [r3, #0]
 8014484:	6843      	ldr	r3, [r0, #4]
 8014486:	4806      	ldr	r0, [pc, #24]	; (80144a0 <settimeofday+0x28>)
 8014488:	17da      	asrs	r2, r3, #31
 801448a:	fbc4 3200 	smlal	r3, r2, r4, r0
 801448e:	4905      	ldr	r1, [pc, #20]	; (80144a4 <settimeofday+0x2c>)
 8014490:	2000      	movs	r0, #0
 8014492:	e9c1 3200 	strd	r3, r2, [r1]
 8014496:	bd10      	pop	{r4, pc}
 8014498:	2000d3ac 	andcs	sp, r0, ip, lsr #7
 801449c:	2000d3a8 	andcs	sp, r0, r8, lsr #7
 80144a0:	000f4240 	andeq	r4, pc, r0, asr #4
 80144a4:	2000d3a0 	andcs	sp, r0, r0, lsr #7

080144a8 <time>:
 80144a8:	b513      	push	{r0, r1, r4, lr}
 80144aa:	4604      	mov	r4, r0
 80144ac:	2100      	movs	r1, #0
 80144ae:	4668      	mov	r0, sp
 80144b0:	f7ff ffb8 	bl	8014424 <gettimeofday>
 80144b4:	9800      	ldr	r0, [sp, #0]
 80144b6:	b104      	cbz	r4, 80144ba <time+0x12>
 80144b8:	6020      	str	r0, [r4, #0]
 80144ba:	b002      	add	sp, #8
 80144bc:	bd10      	pop	{r4, pc}
	...

080144c0 <uart0_init>:
 80144c0:	2301      	movs	r3, #1
 80144c2:	b507      	push	{r0, r1, r2, lr}
 80144c4:	2208      	movs	r2, #8
 80144c6:	9300      	str	r3, [sp, #0]
 80144c8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80144cc:	2300      	movs	r3, #0
 80144ce:	4803      	ldr	r0, [pc, #12]	; (80144dc <uart0_init+0x1c>)
 80144d0:	f001 f8e6 	bl	80156a0 <gd32_uart_begin>
 80144d4:	b003      	add	sp, #12
 80144d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80144da:	bf00      	nop
 80144dc:	40013800 	andmi	r3, r1, r0, lsl #16

080144e0 <uart0_putc>:
 80144e0:	280a      	cmp	r0, #10
 80144e2:	b538      	push	{r3, r4, r5, lr}
 80144e4:	4604      	mov	r4, r0
 80144e6:	d10a      	bne.n	80144fe <uart0_putc+0x1e>
 80144e8:	4d0b      	ldr	r5, [pc, #44]	; (8014518 <uart0_putc+0x38>)
 80144ea:	2107      	movs	r1, #7
 80144ec:	4628      	mov	r0, r5
 80144ee:	f000 fe41 	bl	8015174 <usart_flag_get>
 80144f2:	2800      	cmp	r0, #0
 80144f4:	d0f9      	beq.n	80144ea <uart0_putc+0xa>
 80144f6:	220d      	movs	r2, #13
 80144f8:	4b08      	ldr	r3, [pc, #32]	; (801451c <uart0_putc+0x3c>)
 80144fa:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80144fe:	4d06      	ldr	r5, [pc, #24]	; (8014518 <uart0_putc+0x38>)
 8014500:	2107      	movs	r1, #7
 8014502:	4628      	mov	r0, r5
 8014504:	f000 fe36 	bl	8015174 <usart_flag_get>
 8014508:	2800      	cmp	r0, #0
 801450a:	d0f9      	beq.n	8014500 <uart0_putc+0x20>
 801450c:	4b03      	ldr	r3, [pc, #12]	; (801451c <uart0_putc+0x3c>)
 801450e:	b2e4      	uxtb	r4, r4
 8014510:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8014514:	bd38      	pop	{r3, r4, r5, pc}
 8014516:	bf00      	nop
 8014518:	40013800 	andmi	r3, r1, r0, lsl #16
 801451c:	40013000 	andmi	r3, r1, r0

08014520 <uart0_puts>:
 8014520:	b510      	push	{r4, lr}
 8014522:	1e44      	subs	r4, r0, #1
 8014524:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8014528:	b903      	cbnz	r3, 801452c <uart0_puts+0xc>
 801452a:	bd10      	pop	{r4, pc}
 801452c:	2b0a      	cmp	r3, #10
 801452e:	d102      	bne.n	8014536 <uart0_puts+0x16>
 8014530:	200d      	movs	r0, #13
 8014532:	f7ff ffd5 	bl	80144e0 <uart0_putc>
 8014536:	7820      	ldrb	r0, [r4, #0]
 8014538:	f7ff ffd2 	bl	80144e0 <uart0_putc>
 801453c:	e7f2      	b.n	8014524 <uart0_puts+0x4>
	...

08014540 <systick_config>:
 8014540:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014544:	4b0b      	ldr	r3, [pc, #44]	; (8014574 <systick_config+0x34>)
 8014546:	681b      	ldr	r3, [r3, #0]
 8014548:	fbb3 f3f2 	udiv	r3, r3, r2
 801454c:	3b01      	subs	r3, #1
 801454e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8014552:	d20d      	bcs.n	8014570 <systick_config+0x30>
 8014554:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8014558:	21f0      	movs	r1, #240	; 0xf0
 801455a:	6153      	str	r3, [r2, #20]
 801455c:	4b06      	ldr	r3, [pc, #24]	; (8014578 <systick_config+0x38>)
 801455e:	2007      	movs	r0, #7
 8014560:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8014564:	2100      	movs	r1, #0
 8014566:	6191      	str	r1, [r2, #24]
 8014568:	6110      	str	r0, [r2, #16]
 801456a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801456e:	4770      	bx	lr
 8014570:	e7fe      	b.n	8014570 <systick_config+0x30>
 8014572:	bf00      	nop
 8014574:	200000f4 	strdcs	r0, [r0], -r4
 8014578:	e000ed00 	and	lr, r0, r0, lsl #26

0801457c <SysTick_Handler>:
 801457c:	4a02      	ldr	r2, [pc, #8]	; (8014588 <SysTick_Handler+0xc>)
 801457e:	6813      	ldr	r3, [r2, #0]
 8014580:	3301      	adds	r3, #1
 8014582:	6013      	str	r3, [r2, #0]
 8014584:	4770      	bx	lr
 8014586:	bf00      	nop
 8014588:	2000d3ac 	andcs	sp, r0, ip, lsr #7

0801458c <SystemInit>:
 801458c:	4b3a      	ldr	r3, [pc, #232]	; (8014678 <SystemInit+0xec>)
 801458e:	681a      	ldr	r2, [r3, #0]
 8014590:	f042 0201 	orr.w	r2, r2, #1
 8014594:	601a      	str	r2, [r3, #0]
 8014596:	6859      	ldr	r1, [r3, #4]
 8014598:	4a38      	ldr	r2, [pc, #224]	; (801467c <SystemInit+0xf0>)
 801459a:	400a      	ands	r2, r1
 801459c:	605a      	str	r2, [r3, #4]
 801459e:	681a      	ldr	r2, [r3, #0]
 80145a0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80145a4:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80145a8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80145ac:	601a      	str	r2, [r3, #0]
 80145ae:	681a      	ldr	r2, [r3, #0]
 80145b0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80145b4:	601a      	str	r2, [r3, #0]
 80145b6:	685a      	ldr	r2, [r3, #4]
 80145b8:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80145bc:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80145c0:	605a      	str	r2, [r3, #4]
 80145c2:	681a      	ldr	r2, [r3, #0]
 80145c4:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 80145c8:	601a      	str	r2, [r3, #0]
 80145ca:	2200      	movs	r2, #0
 80145cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80145ce:	6099      	str	r1, [r3, #8]
 80145d0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80145d4:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 80145d8:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80145dc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80145e0:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80145e4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80145e8:	4a25      	ldr	r2, [pc, #148]	; (8014680 <SystemInit+0xf4>)
 80145ea:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80145ee:	681a      	ldr	r2, [r3, #0]
 80145f0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80145f4:	601a      	str	r2, [r3, #0]
 80145f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80145fa:	6819      	ldr	r1, [r3, #0]
 80145fc:	0389      	lsls	r1, r1, #14
 80145fe:	d401      	bmi.n	8014604 <SystemInit+0x78>
 8014600:	3a01      	subs	r2, #1
 8014602:	d1fa      	bne.n	80145fa <SystemInit+0x6e>
 8014604:	681a      	ldr	r2, [r3, #0]
 8014606:	0392      	lsls	r2, r2, #14
 8014608:	d400      	bmi.n	801460c <SystemInit+0x80>
 801460a:	e7fe      	b.n	801460a <SystemInit+0x7e>
 801460c:	685a      	ldr	r2, [r3, #4]
 801460e:	605a      	str	r2, [r3, #4]
 8014610:	685a      	ldr	r2, [r3, #4]
 8014612:	605a      	str	r2, [r3, #4]
 8014614:	685a      	ldr	r2, [r3, #4]
 8014616:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801461a:	605a      	str	r2, [r3, #4]
 801461c:	685a      	ldr	r2, [r3, #4]
 801461e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8014622:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8014626:	605a      	str	r2, [r3, #4]
 8014628:	685a      	ldr	r2, [r3, #4]
 801462a:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 801462e:	605a      	str	r2, [r3, #4]
 8014630:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8014632:	4a14      	ldr	r2, [pc, #80]	; (8014684 <SystemInit+0xf8>)
 8014634:	400a      	ands	r2, r1
 8014636:	62da      	str	r2, [r3, #44]	; 0x2c
 8014638:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801463a:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 801463e:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8014642:	62da      	str	r2, [r3, #44]	; 0x2c
 8014644:	681a      	ldr	r2, [r3, #0]
 8014646:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801464a:	601a      	str	r2, [r3, #0]
 801464c:	681a      	ldr	r2, [r3, #0]
 801464e:	0110      	lsls	r0, r2, #4
 8014650:	d5fc      	bpl.n	801464c <SystemInit+0xc0>
 8014652:	681a      	ldr	r2, [r3, #0]
 8014654:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8014658:	601a      	str	r2, [r3, #0]
 801465a:	681a      	ldr	r2, [r3, #0]
 801465c:	0191      	lsls	r1, r2, #6
 801465e:	d5fc      	bpl.n	801465a <SystemInit+0xce>
 8014660:	685a      	ldr	r2, [r3, #4]
 8014662:	f022 0203 	bic.w	r2, r2, #3
 8014666:	605a      	str	r2, [r3, #4]
 8014668:	685a      	ldr	r2, [r3, #4]
 801466a:	f042 0202 	orr.w	r2, r2, #2
 801466e:	605a      	str	r2, [r3, #4]
 8014670:	685a      	ldr	r2, [r3, #4]
 8014672:	0712      	lsls	r2, r2, #28
 8014674:	d5fc      	bpl.n	8014670 <SystemInit+0xe4>
 8014676:	4770      	bx	lr
 8014678:	40021000 	andmi	r1, r2, r0
 801467c:	e0ff000c 	rscs	r0, pc, ip
 8014680:	20003010 	andcs	r3, r0, r0, lsl r0
 8014684:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08014688 <bkp_deinit>:
 8014688:	b508      	push	{r3, lr}
 801468a:	f000 f9ef 	bl	8014a6c <rcu_bkp_reset_enable>
 801468e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014692:	f000 b9f3 	b.w	8014a7c <rcu_bkp_reset_disable>
	...

08014698 <bkp_data_write>:
 8014698:	f1a0 030b 	sub.w	r3, r0, #11
 801469c:	2b1f      	cmp	r3, #31
 801469e:	d804      	bhi.n	80146aa <bkp_data_write+0x12>
 80146a0:	4b07      	ldr	r3, [pc, #28]	; (80146c0 <bkp_data_write+0x28>)
 80146a2:	4403      	add	r3, r0
 80146a4:	009b      	lsls	r3, r3, #2
 80146a6:	8019      	strh	r1, [r3, #0]
 80146a8:	4770      	bx	lr
 80146aa:	1e43      	subs	r3, r0, #1
 80146ac:	2b09      	cmp	r3, #9
 80146ae:	bf9f      	itttt	ls
 80146b0:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80146b4:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80146b8:	0080      	lslls	r0, r0, #2
 80146ba:	8001      	strhls	r1, [r0, #0]
 80146bc:	4770      	bx	lr
 80146be:	bf00      	nop
 80146c0:	10001b05 	andne	r1, r0, r5, lsl #22

080146c4 <bkp_data_read>:
 80146c4:	f1a0 030b 	sub.w	r3, r0, #11
 80146c8:	2b1f      	cmp	r3, #31
 80146ca:	d805      	bhi.n	80146d8 <bkp_data_read+0x14>
 80146cc:	4b08      	ldr	r3, [pc, #32]	; (80146f0 <bkp_data_read+0x2c>)
 80146ce:	4403      	add	r3, r0
 80146d0:	009b      	lsls	r3, r3, #2
 80146d2:	8818      	ldrh	r0, [r3, #0]
 80146d4:	b280      	uxth	r0, r0
 80146d6:	4770      	bx	lr
 80146d8:	1e43      	subs	r3, r0, #1
 80146da:	2b09      	cmp	r3, #9
 80146dc:	d806      	bhi.n	80146ec <bkp_data_read+0x28>
 80146de:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 80146e2:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80146e6:	0080      	lsls	r0, r0, #2
 80146e8:	8800      	ldrh	r0, [r0, #0]
 80146ea:	e7f3      	b.n	80146d4 <bkp_data_read+0x10>
 80146ec:	2000      	movs	r0, #0
 80146ee:	4770      	bx	lr
 80146f0:	10001b05 	andne	r1, r0, r5, lsl #22

080146f4 <dma_deinit>:
 80146f4:	2314      	movs	r3, #20
 80146f6:	fb03 0301 	mla	r3, r3, r1, r0
 80146fa:	689a      	ldr	r2, [r3, #8]
 80146fc:	b530      	push	{r4, r5, lr}
 80146fe:	f022 0201 	bic.w	r2, r2, #1
 8014702:	609a      	str	r2, [r3, #8]
 8014704:	2200      	movs	r2, #0
 8014706:	609a      	str	r2, [r3, #8]
 8014708:	60da      	str	r2, [r3, #12]
 801470a:	611a      	str	r2, [r3, #16]
 801470c:	615a      	str	r2, [r3, #20]
 801470e:	230f      	movs	r3, #15
 8014710:	6844      	ldr	r4, [r0, #4]
 8014712:	008d      	lsls	r5, r1, #2
 8014714:	40ab      	lsls	r3, r5
 8014716:	4323      	orrs	r3, r4
 8014718:	6043      	str	r3, [r0, #4]
 801471a:	4b04      	ldr	r3, [pc, #16]	; (801472c <dma_deinit+0x38>)
 801471c:	4298      	cmp	r0, r3
 801471e:	d103      	bne.n	8014728 <dma_deinit+0x34>
 8014720:	2905      	cmp	r1, #5
 8014722:	bf08      	it	eq
 8014724:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8014728:	bd30      	pop	{r4, r5, pc}
 801472a:	bf00      	nop
 801472c:	40020400 	andmi	r0, r2, r0, lsl #8

08014730 <dma_init>:
 8014730:	2314      	movs	r3, #20
 8014732:	fb03 0101 	mla	r1, r3, r1, r0
 8014736:	6813      	ldr	r3, [r2, #0]
 8014738:	b510      	push	{r4, lr}
 801473a:	610b      	str	r3, [r1, #16]
 801473c:	6893      	ldr	r3, [r2, #8]
 801473e:	614b      	str	r3, [r1, #20]
 8014740:	8a13      	ldrh	r3, [r2, #16]
 8014742:	60cb      	str	r3, [r1, #12]
 8014744:	68d4      	ldr	r4, [r2, #12]
 8014746:	6853      	ldr	r3, [r2, #4]
 8014748:	6888      	ldr	r0, [r1, #8]
 801474a:	4323      	orrs	r3, r4
 801474c:	6954      	ldr	r4, [r2, #20]
 801474e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8014752:	4323      	orrs	r3, r4
 8014754:	4303      	orrs	r3, r0
 8014756:	608b      	str	r3, [r1, #8]
 8014758:	7e13      	ldrb	r3, [r2, #24]
 801475a:	2b01      	cmp	r3, #1
 801475c:	688b      	ldr	r3, [r1, #8]
 801475e:	bf0c      	ite	eq
 8014760:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8014764:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8014768:	608b      	str	r3, [r1, #8]
 801476a:	7e53      	ldrb	r3, [r2, #25]
 801476c:	2b01      	cmp	r3, #1
 801476e:	688b      	ldr	r3, [r1, #8]
 8014770:	bf0c      	ite	eq
 8014772:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8014776:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 801477a:	608b      	str	r3, [r1, #8]
 801477c:	7e93      	ldrb	r3, [r2, #26]
 801477e:	b923      	cbnz	r3, 801478a <dma_init+0x5a>
 8014780:	688b      	ldr	r3, [r1, #8]
 8014782:	f023 0310 	bic.w	r3, r3, #16
 8014786:	608b      	str	r3, [r1, #8]
 8014788:	bd10      	pop	{r4, pc}
 801478a:	688b      	ldr	r3, [r1, #8]
 801478c:	f043 0310 	orr.w	r3, r3, #16
 8014790:	e7f9      	b.n	8014786 <dma_init+0x56>

08014792 <dma_circulation_disable>:
 8014792:	2314      	movs	r3, #20
 8014794:	4359      	muls	r1, r3
 8014796:	3008      	adds	r0, #8
 8014798:	580b      	ldr	r3, [r1, r0]
 801479a:	f023 0320 	bic.w	r3, r3, #32
 801479e:	500b      	str	r3, [r1, r0]
 80147a0:	4770      	bx	lr

080147a2 <dma_memory_to_memory_disable>:
 80147a2:	2314      	movs	r3, #20
 80147a4:	4359      	muls	r1, r3
 80147a6:	3008      	adds	r0, #8
 80147a8:	580b      	ldr	r3, [r1, r0]
 80147aa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80147ae:	500b      	str	r3, [r1, r0]
 80147b0:	4770      	bx	lr

080147b2 <dma_channel_enable>:
 80147b2:	2314      	movs	r3, #20
 80147b4:	4359      	muls	r1, r3
 80147b6:	3008      	adds	r0, #8
 80147b8:	580b      	ldr	r3, [r1, r0]
 80147ba:	f043 0301 	orr.w	r3, r3, #1
 80147be:	500b      	str	r3, [r1, r0]
 80147c0:	4770      	bx	lr

080147c2 <dma_channel_disable>:
 80147c2:	2314      	movs	r3, #20
 80147c4:	4359      	muls	r1, r3
 80147c6:	3008      	adds	r0, #8
 80147c8:	580b      	ldr	r3, [r1, r0]
 80147ca:	f023 0301 	bic.w	r3, r3, #1
 80147ce:	500b      	str	r3, [r1, r0]
 80147d0:	4770      	bx	lr
	...

080147d4 <fmc_bank0_unlock>:
 80147d4:	4b04      	ldr	r3, [pc, #16]	; (80147e8 <fmc_bank0_unlock+0x14>)
 80147d6:	691a      	ldr	r2, [r3, #16]
 80147d8:	0612      	lsls	r2, r2, #24
 80147da:	bf41      	itttt	mi
 80147dc:	4a03      	ldrmi	r2, [pc, #12]	; (80147ec <fmc_bank0_unlock+0x18>)
 80147de:	605a      	strmi	r2, [r3, #4]
 80147e0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80147e4:	605a      	strmi	r2, [r3, #4]
 80147e6:	4770      	bx	lr
 80147e8:	40022000 	andmi	r2, r2, r0
 80147ec:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080147f0 <fmc_bank1_unlock>:
 80147f0:	4b04      	ldr	r3, [pc, #16]	; (8014804 <fmc_bank1_unlock+0x14>)
 80147f2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80147f4:	0612      	lsls	r2, r2, #24
 80147f6:	bf41      	itttt	mi
 80147f8:	4a03      	ldrmi	r2, [pc, #12]	; (8014808 <fmc_bank1_unlock+0x18>)
 80147fa:	645a      	strmi	r2, [r3, #68]	; 0x44
 80147fc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8014800:	645a      	strmi	r2, [r3, #68]	; 0x44
 8014802:	4770      	bx	lr
 8014804:	40022000 	andmi	r2, r2, r0
 8014808:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801480c <fmc_bank0_lock>:
 801480c:	4a02      	ldr	r2, [pc, #8]	; (8014818 <fmc_bank0_lock+0xc>)
 801480e:	6913      	ldr	r3, [r2, #16]
 8014810:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014814:	6113      	str	r3, [r2, #16]
 8014816:	4770      	bx	lr
 8014818:	40022000 	andmi	r2, r2, r0

0801481c <fmc_bank1_lock>:
 801481c:	4a02      	ldr	r2, [pc, #8]	; (8014828 <fmc_bank1_lock+0xc>)
 801481e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8014820:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014824:	6513      	str	r3, [r2, #80]	; 0x50
 8014826:	4770      	bx	lr
 8014828:	40022000 	andmi	r2, r2, r0

0801482c <fmc_bank0_state_get>:
 801482c:	4b08      	ldr	r3, [pc, #32]	; (8014850 <fmc_bank0_state_get+0x24>)
 801482e:	68da      	ldr	r2, [r3, #12]
 8014830:	07d1      	lsls	r1, r2, #31
 8014832:	d409      	bmi.n	8014848 <fmc_bank0_state_get+0x1c>
 8014834:	68da      	ldr	r2, [r3, #12]
 8014836:	06d2      	lsls	r2, r2, #27
 8014838:	d408      	bmi.n	801484c <fmc_bank0_state_get+0x20>
 801483a:	68db      	ldr	r3, [r3, #12]
 801483c:	f013 0f04 	tst.w	r3, #4
 8014840:	bf0c      	ite	eq
 8014842:	2000      	moveq	r0, #0
 8014844:	2002      	movne	r0, #2
 8014846:	4770      	bx	lr
 8014848:	2001      	movs	r0, #1
 801484a:	4770      	bx	lr
 801484c:	2003      	movs	r0, #3
 801484e:	4770      	bx	lr
 8014850:	40022000 	andmi	r2, r2, r0

08014854 <fmc_bank1_state_get>:
 8014854:	4b08      	ldr	r3, [pc, #32]	; (8014878 <fmc_bank1_state_get+0x24>)
 8014856:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8014858:	07d1      	lsls	r1, r2, #31
 801485a:	d409      	bmi.n	8014870 <fmc_bank1_state_get+0x1c>
 801485c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801485e:	06d2      	lsls	r2, r2, #27
 8014860:	d408      	bmi.n	8014874 <fmc_bank1_state_get+0x20>
 8014862:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014864:	f013 0f04 	tst.w	r3, #4
 8014868:	bf0c      	ite	eq
 801486a:	2000      	moveq	r0, #0
 801486c:	2002      	movne	r0, #2
 801486e:	4770      	bx	lr
 8014870:	2001      	movs	r0, #1
 8014872:	4770      	bx	lr
 8014874:	2003      	movs	r0, #3
 8014876:	4770      	bx	lr
 8014878:	40022000 	andmi	r2, r2, r0

0801487c <fwdgt_enable>:
 801487c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8014880:	4b01      	ldr	r3, [pc, #4]	; (8014888 <fwdgt_enable+0xc>)
 8014882:	601a      	str	r2, [r3, #0]
 8014884:	4770      	bx	lr
 8014886:	bf00      	nop
 8014888:	40003000 	andmi	r3, r0, r0

0801488c <fwdgt_counter_reload>:
 801488c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8014890:	4b01      	ldr	r3, [pc, #4]	; (8014898 <fwdgt_counter_reload+0xc>)
 8014892:	601a      	str	r2, [r3, #0]
 8014894:	4770      	bx	lr
 8014896:	bf00      	nop
 8014898:	40003000 	andmi	r3, r0, r0

0801489c <fwdgt_config>:
 801489c:	f245 5355 	movw	r3, #21845	; 0x5555
 80148a0:	4a11      	ldr	r2, [pc, #68]	; (80148e8 <fwdgt_config+0x4c>)
 80148a2:	b510      	push	{r4, lr}
 80148a4:	4c11      	ldr	r4, [pc, #68]	; (80148ec <fwdgt_config+0x50>)
 80148a6:	6013      	str	r3, [r2, #0]
 80148a8:	68d3      	ldr	r3, [r2, #12]
 80148aa:	3c01      	subs	r4, #1
 80148ac:	f003 0301 	and.w	r3, r3, #1
 80148b0:	d013      	beq.n	80148da <fwdgt_config+0x3e>
 80148b2:	2b00      	cmp	r3, #0
 80148b4:	d1f8      	bne.n	80148a8 <fwdgt_config+0xc>
 80148b6:	6051      	str	r1, [r2, #4]
 80148b8:	490c      	ldr	r1, [pc, #48]	; (80148ec <fwdgt_config+0x50>)
 80148ba:	4a0b      	ldr	r2, [pc, #44]	; (80148e8 <fwdgt_config+0x4c>)
 80148bc:	68d3      	ldr	r3, [r2, #12]
 80148be:	3901      	subs	r1, #1
 80148c0:	f003 0302 	and.w	r3, r3, #2
 80148c4:	d00d      	beq.n	80148e2 <fwdgt_config+0x46>
 80148c6:	2b00      	cmp	r3, #0
 80148c8:	d1f8      	bne.n	80148bc <fwdgt_config+0x20>
 80148ca:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80148ce:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80148d2:	6090      	str	r0, [r2, #8]
 80148d4:	2001      	movs	r0, #1
 80148d6:	6013      	str	r3, [r2, #0]
 80148d8:	e002      	b.n	80148e0 <fwdgt_config+0x44>
 80148da:	2b00      	cmp	r3, #0
 80148dc:	d0eb      	beq.n	80148b6 <fwdgt_config+0x1a>
 80148de:	2000      	movs	r0, #0
 80148e0:	bd10      	pop	{r4, pc}
 80148e2:	2b00      	cmp	r3, #0
 80148e4:	d1fb      	bne.n	80148de <fwdgt_config+0x42>
 80148e6:	e7f0      	b.n	80148ca <fwdgt_config+0x2e>
 80148e8:	40003000 	andmi	r3, r0, r0
 80148ec:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080148f0 <gpio_init>:
 80148f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80148f4:	f04f 0c0f 	mov.w	ip, #15
 80148f8:	06cf      	lsls	r7, r1, #27
 80148fa:	f04f 0400 	mov.w	r4, #0
 80148fe:	f04f 0701 	mov.w	r7, #1
 8014902:	f001 050f 	and.w	r5, r1, #15
 8014906:	bf48      	it	mi
 8014908:	4315      	orrmi	r5, r2
 801490a:	fa23 f204 	lsr.w	r2, r3, r4
 801490e:	07d6      	lsls	r6, r2, #31
 8014910:	d510      	bpl.n	8014934 <gpio_init+0x44>
 8014912:	00a2      	lsls	r2, r4, #2
 8014914:	6806      	ldr	r6, [r0, #0]
 8014916:	fa0c fe02 	lsl.w	lr, ip, r2
 801491a:	ea26 060e 	bic.w	r6, r6, lr
 801491e:	fa05 f202 	lsl.w	r2, r5, r2
 8014922:	2928      	cmp	r1, #40	; 0x28
 8014924:	ea42 0206 	orr.w	r2, r2, r6
 8014928:	d128      	bne.n	801497c <gpio_init+0x8c>
 801492a:	fa07 f604 	lsl.w	r6, r7, r4
 801492e:	401e      	ands	r6, r3
 8014930:	6146      	str	r6, [r0, #20]
 8014932:	6002      	str	r2, [r0, #0]
 8014934:	3401      	adds	r4, #1
 8014936:	2c08      	cmp	r4, #8
 8014938:	d1e7      	bne.n	801490a <gpio_init+0x1a>
 801493a:	2600      	movs	r6, #0
 801493c:	f04f 0c0f 	mov.w	ip, #15
 8014940:	2701      	movs	r7, #1
 8014942:	f106 0208 	add.w	r2, r6, #8
 8014946:	fa23 f402 	lsr.w	r4, r3, r2
 801494a:	07e4      	lsls	r4, r4, #31
 801494c:	d511      	bpl.n	8014972 <gpio_init+0x82>
 801494e:	00b4      	lsls	r4, r6, #2
 8014950:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8014954:	fa0c f804 	lsl.w	r8, ip, r4
 8014958:	ea2e 0e08 	bic.w	lr, lr, r8
 801495c:	fa05 f404 	lsl.w	r4, r5, r4
 8014960:	2928      	cmp	r1, #40	; 0x28
 8014962:	ea44 040e 	orr.w	r4, r4, lr
 8014966:	d110      	bne.n	801498a <gpio_init+0x9a>
 8014968:	fa07 f202 	lsl.w	r2, r7, r2
 801496c:	401a      	ands	r2, r3
 801496e:	6142      	str	r2, [r0, #20]
 8014970:	6044      	str	r4, [r0, #4]
 8014972:	3601      	adds	r6, #1
 8014974:	2e08      	cmp	r6, #8
 8014976:	d1e4      	bne.n	8014942 <gpio_init+0x52>
 8014978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801497c:	2948      	cmp	r1, #72	; 0x48
 801497e:	bf02      	ittt	eq
 8014980:	fa07 f604 	lsleq.w	r6, r7, r4
 8014984:	401e      	andeq	r6, r3
 8014986:	6106      	streq	r6, [r0, #16]
 8014988:	e7d3      	b.n	8014932 <gpio_init+0x42>
 801498a:	2948      	cmp	r1, #72	; 0x48
 801498c:	bf02      	ittt	eq
 801498e:	fa07 f202 	lsleq.w	r2, r7, r2
 8014992:	401a      	andeq	r2, r3
 8014994:	6102      	streq	r2, [r0, #16]
 8014996:	e7eb      	b.n	8014970 <gpio_init+0x80>

08014998 <gpio_bit_set>:
 8014998:	6101      	str	r1, [r0, #16]
 801499a:	4770      	bx	lr

0801499c <gpio_bit_reset>:
 801499c:	6141      	str	r1, [r0, #20]
 801499e:	4770      	bx	lr

080149a0 <gpio_pin_remap_config>:
 80149a0:	2800      	cmp	r0, #0
 80149a2:	4a16      	ldr	r2, [pc, #88]	; (80149fc <gpio_pin_remap_config+0x5c>)
 80149a4:	b530      	push	{r4, r5, lr}
 80149a6:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80149aa:	bfb4      	ite	lt
 80149ac:	69d3      	ldrlt	r3, [r2, #28]
 80149ae:	6853      	ldrge	r3, [r2, #4]
 80149b0:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80149b4:	b284      	uxth	r4, r0
 80149b6:	d110      	bne.n	80149da <gpio_pin_remap_config+0x3a>
 80149b8:	6855      	ldr	r5, [r2, #4]
 80149ba:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80149be:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80149c2:	6055      	str	r5, [r2, #4]
 80149c4:	b119      	cbz	r1, 80149ce <gpio_pin_remap_config+0x2e>
 80149c6:	0d42      	lsrs	r2, r0, #21
 80149c8:	0112      	lsls	r2, r2, #4
 80149ca:	4094      	lsls	r4, r2
 80149cc:	4323      	orrs	r3, r4
 80149ce:	4a0b      	ldr	r2, [pc, #44]	; (80149fc <gpio_pin_remap_config+0x5c>)
 80149d0:	2800      	cmp	r0, #0
 80149d2:	bfb4      	ite	lt
 80149d4:	61d3      	strlt	r3, [r2, #28]
 80149d6:	6053      	strge	r3, [r2, #4]
 80149d8:	bd30      	pop	{r4, r5, pc}
 80149da:	02c2      	lsls	r2, r0, #11
 80149dc:	bf4d      	iteet	mi
 80149de:	2203      	movmi	r2, #3
 80149e0:	0d42      	lsrpl	r2, r0, #21
 80149e2:	0112      	lslpl	r2, r2, #4
 80149e4:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80149e8:	bf4c      	ite	mi
 80149ea:	40aa      	lslmi	r2, r5
 80149ec:	fa04 f202 	lslpl.w	r2, r4, r2
 80149f0:	ea23 0302 	bic.w	r3, r3, r2
 80149f4:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 80149f8:	e7e4      	b.n	80149c4 <gpio_pin_remap_config+0x24>
 80149fa:	bf00      	nop
 80149fc:	40010000 	andmi	r0, r1, r0

08014a00 <gpio_ethernet_phy_select>:
 8014a00:	4b04      	ldr	r3, [pc, #16]	; (8014a14 <gpio_ethernet_phy_select+0x14>)
 8014a02:	6859      	ldr	r1, [r3, #4]
 8014a04:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8014a08:	6059      	str	r1, [r3, #4]
 8014a0a:	685a      	ldr	r2, [r3, #4]
 8014a0c:	4302      	orrs	r2, r0
 8014a0e:	605a      	str	r2, [r3, #4]
 8014a10:	4770      	bx	lr
 8014a12:	bf00      	nop
 8014a14:	40010000 	andmi	r0, r1, r0

08014a18 <pmu_backup_write_enable>:
 8014a18:	4a02      	ldr	r2, [pc, #8]	; (8014a24 <pmu_backup_write_enable+0xc>)
 8014a1a:	6813      	ldr	r3, [r2, #0]
 8014a1c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014a20:	6013      	str	r3, [r2, #0]
 8014a22:	4770      	bx	lr
 8014a24:	40007000 	andmi	r7, r0, r0

08014a28 <rcu_periph_clock_enable>:
 8014a28:	2201      	movs	r2, #1
 8014a2a:	0983      	lsrs	r3, r0, #6
 8014a2c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014a30:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014a34:	6819      	ldr	r1, [r3, #0]
 8014a36:	f000 001f 	and.w	r0, r0, #31
 8014a3a:	fa02 f000 	lsl.w	r0, r2, r0
 8014a3e:	4308      	orrs	r0, r1
 8014a40:	6018      	str	r0, [r3, #0]
 8014a42:	4770      	bx	lr

08014a44 <rcu_periph_clock_disable>:
 8014a44:	2101      	movs	r1, #1
 8014a46:	0983      	lsrs	r3, r0, #6
 8014a48:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014a4c:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014a50:	681a      	ldr	r2, [r3, #0]
 8014a52:	f000 001f 	and.w	r0, r0, #31
 8014a56:	fa01 f000 	lsl.w	r0, r1, r0
 8014a5a:	ea22 0000 	bic.w	r0, r2, r0
 8014a5e:	6018      	str	r0, [r3, #0]
 8014a60:	4770      	bx	lr

08014a62 <rcu_periph_reset_enable>:
 8014a62:	f7ff bfe1 	b.w	8014a28 <rcu_periph_clock_enable>

08014a66 <rcu_periph_reset_disable>:
 8014a66:	f7ff bfed 	b.w	8014a44 <rcu_periph_clock_disable>
	...

08014a6c <rcu_bkp_reset_enable>:
 8014a6c:	4a02      	ldr	r2, [pc, #8]	; (8014a78 <rcu_bkp_reset_enable+0xc>)
 8014a6e:	6a13      	ldr	r3, [r2, #32]
 8014a70:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8014a74:	6213      	str	r3, [r2, #32]
 8014a76:	4770      	bx	lr
 8014a78:	40021000 	andmi	r1, r2, r0

08014a7c <rcu_bkp_reset_disable>:
 8014a7c:	4a02      	ldr	r2, [pc, #8]	; (8014a88 <rcu_bkp_reset_disable+0xc>)
 8014a7e:	6a13      	ldr	r3, [r2, #32]
 8014a80:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8014a84:	6213      	str	r3, [r2, #32]
 8014a86:	4770      	bx	lr
 8014a88:	40021000 	andmi	r1, r2, r0

08014a8c <rcu_ckout0_config>:
 8014a8c:	b510      	push	{r4, lr}
 8014a8e:	4c07      	ldr	r4, [pc, #28]	; (8014aac <rcu_ckout0_config+0x20>)
 8014a90:	6862      	ldr	r2, [r4, #4]
 8014a92:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8014a96:	4302      	orrs	r2, r0
 8014a98:	6062      	str	r2, [r4, #4]
 8014a9a:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8014a9e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8014aa2:	430b      	orrs	r3, r1
 8014aa4:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8014aa8:	bd10      	pop	{r4, pc}
 8014aaa:	bf00      	nop
 8014aac:	40021000 	andmi	r1, r2, r0

08014ab0 <rcu_pll2_config>:
 8014ab0:	4b04      	ldr	r3, [pc, #16]	; (8014ac4 <rcu_pll2_config+0x14>)
 8014ab2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8014ab4:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8014ab8:	62d9      	str	r1, [r3, #44]	; 0x2c
 8014aba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8014abc:	4302      	orrs	r2, r0
 8014abe:	62da      	str	r2, [r3, #44]	; 0x2c
 8014ac0:	4770      	bx	lr
 8014ac2:	bf00      	nop
 8014ac4:	40021000 	andmi	r1, r2, r0

08014ac8 <rcu_adc_clock_config>:
 8014ac8:	490c      	ldr	r1, [pc, #48]	; (8014afc <rcu_adc_clock_config+0x34>)
 8014aca:	2805      	cmp	r0, #5
 8014acc:	684b      	ldr	r3, [r1, #4]
 8014ace:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8014ad2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8014ad6:	d006      	beq.n	8014ae6 <rcu_adc_clock_config+0x1e>
 8014ad8:	d803      	bhi.n	8014ae2 <rcu_adc_clock_config+0x1a>
 8014ada:	2804      	cmp	r0, #4
 8014adc:	d10a      	bne.n	8014af4 <rcu_adc_clock_config+0x2c>
 8014ade:	604b      	str	r3, [r1, #4]
 8014ae0:	4770      	bx	lr
 8014ae2:	2807      	cmp	r0, #7
 8014ae4:	d1fb      	bne.n	8014ade <rcu_adc_clock_config+0x16>
 8014ae6:	4a06      	ldr	r2, [pc, #24]	; (8014b00 <rcu_adc_clock_config+0x38>)
 8014ae8:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8014aec:	4303      	orrs	r3, r0
 8014aee:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8014af2:	e7f4      	b.n	8014ade <rcu_adc_clock_config+0x16>
 8014af4:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8014af8:	e7f1      	b.n	8014ade <rcu_adc_clock_config+0x16>
 8014afa:	bf00      	nop
 8014afc:	40021000 	andmi	r1, r2, r0
 8014b00:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08014b04 <rcu_flag_get>:
 8014b04:	0983      	lsrs	r3, r0, #6
 8014b06:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014b0a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014b0e:	681b      	ldr	r3, [r3, #0]
 8014b10:	f000 001f 	and.w	r0, r0, #31
 8014b14:	fa23 f000 	lsr.w	r0, r3, r0
 8014b18:	f000 0001 	and.w	r0, r0, #1
 8014b1c:	4770      	bx	lr
	...

08014b20 <rcu_osci_stab_wait>:
 8014b20:	281c      	cmp	r0, #28
 8014b22:	b508      	push	{r3, lr}
 8014b24:	d056      	beq.n	8014bd4 <rcu_osci_stab_wait+0xb4>
 8014b26:	d812      	bhi.n	8014b4e <rcu_osci_stab_wait+0x2e>
 8014b28:	2818      	cmp	r0, #24
 8014b2a:	d04a      	beq.n	8014bc2 <rcu_osci_stab_wait+0xa2>
 8014b2c:	d804      	bhi.n	8014b38 <rcu_osci_stab_wait+0x18>
 8014b2e:	b398      	cbz	r0, 8014b98 <rcu_osci_stab_wait+0x78>
 8014b30:	2810      	cmp	r0, #16
 8014b32:	d022      	beq.n	8014b7a <rcu_osci_stab_wait+0x5a>
 8014b34:	2000      	movs	r0, #0
 8014b36:	bd08      	pop	{r3, pc}
 8014b38:	281a      	cmp	r0, #26
 8014b3a:	d1fb      	bne.n	8014b34 <rcu_osci_stab_wait+0x14>
 8014b3c:	4a2f      	ldr	r2, [pc, #188]	; (8014bfc <rcu_osci_stab_wait+0xdc>)
 8014b3e:	201b      	movs	r0, #27
 8014b40:	f7ff ffe0 	bl	8014b04 <rcu_flag_get>
 8014b44:	b908      	cbnz	r0, 8014b4a <rcu_osci_stab_wait+0x2a>
 8014b46:	3a01      	subs	r2, #1
 8014b48:	d1f9      	bne.n	8014b3e <rcu_osci_stab_wait+0x1e>
 8014b4a:	201b      	movs	r0, #27
 8014b4c:	e01e      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014b4e:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8014b52:	d02b      	beq.n	8014bac <rcu_osci_stab_wait+0x8c>
 8014b54:	f242 431c 	movw	r3, #9244	; 0x241c
 8014b58:	4298      	cmp	r0, r3
 8014b5a:	d044      	beq.n	8014be6 <rcu_osci_stab_wait+0xc6>
 8014b5c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8014b60:	d1e8      	bne.n	8014b34 <rcu_osci_stab_wait+0x14>
 8014b62:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 8014b66:	f640 0001 	movw	r0, #2049	; 0x801
 8014b6a:	f7ff ffcb 	bl	8014b04 <rcu_flag_get>
 8014b6e:	b908      	cbnz	r0, 8014b74 <rcu_osci_stab_wait+0x54>
 8014b70:	3a01      	subs	r2, #1
 8014b72:	d1f8      	bne.n	8014b66 <rcu_osci_stab_wait+0x46>
 8014b74:	f640 0001 	movw	r0, #2049	; 0x801
 8014b78:	e008      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014b7a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8014b7e:	2011      	movs	r0, #17
 8014b80:	f7ff ffc0 	bl	8014b04 <rcu_flag_get>
 8014b84:	b908      	cbnz	r0, 8014b8a <rcu_osci_stab_wait+0x6a>
 8014b86:	3a01      	subs	r2, #1
 8014b88:	d1f9      	bne.n	8014b7e <rcu_osci_stab_wait+0x5e>
 8014b8a:	2011      	movs	r0, #17
 8014b8c:	f7ff ffba 	bl	8014b04 <rcu_flag_get>
 8014b90:	3800      	subs	r0, #0
 8014b92:	bf18      	it	ne
 8014b94:	2001      	movne	r0, #1
 8014b96:	e7ce      	b.n	8014b36 <rcu_osci_stab_wait+0x16>
 8014b98:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8014b9c:	2001      	movs	r0, #1
 8014b9e:	f7ff ffb1 	bl	8014b04 <rcu_flag_get>
 8014ba2:	b908      	cbnz	r0, 8014ba8 <rcu_osci_stab_wait+0x88>
 8014ba4:	3a01      	subs	r2, #1
 8014ba6:	d1f9      	bne.n	8014b9c <rcu_osci_stab_wait+0x7c>
 8014ba8:	2001      	movs	r0, #1
 8014baa:	e7ef      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014bac:	4a13      	ldr	r2, [pc, #76]	; (8014bfc <rcu_osci_stab_wait+0xdc>)
 8014bae:	f640 1001 	movw	r0, #2305	; 0x901
 8014bb2:	f7ff ffa7 	bl	8014b04 <rcu_flag_get>
 8014bb6:	b908      	cbnz	r0, 8014bbc <rcu_osci_stab_wait+0x9c>
 8014bb8:	3a01      	subs	r2, #1
 8014bba:	d1f8      	bne.n	8014bae <rcu_osci_stab_wait+0x8e>
 8014bbc:	f640 1001 	movw	r0, #2305	; 0x901
 8014bc0:	e7e4      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014bc2:	4a0e      	ldr	r2, [pc, #56]	; (8014bfc <rcu_osci_stab_wait+0xdc>)
 8014bc4:	2019      	movs	r0, #25
 8014bc6:	f7ff ff9d 	bl	8014b04 <rcu_flag_get>
 8014bca:	b908      	cbnz	r0, 8014bd0 <rcu_osci_stab_wait+0xb0>
 8014bcc:	3a01      	subs	r2, #1
 8014bce:	d1f9      	bne.n	8014bc4 <rcu_osci_stab_wait+0xa4>
 8014bd0:	2019      	movs	r0, #25
 8014bd2:	e7db      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014bd4:	4a09      	ldr	r2, [pc, #36]	; (8014bfc <rcu_osci_stab_wait+0xdc>)
 8014bd6:	201d      	movs	r0, #29
 8014bd8:	f7ff ff94 	bl	8014b04 <rcu_flag_get>
 8014bdc:	b908      	cbnz	r0, 8014be2 <rcu_osci_stab_wait+0xc2>
 8014bde:	3a01      	subs	r2, #1
 8014be0:	d1f9      	bne.n	8014bd6 <rcu_osci_stab_wait+0xb6>
 8014be2:	201d      	movs	r0, #29
 8014be4:	e7d2      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014be6:	4a05      	ldr	r2, [pc, #20]	; (8014bfc <rcu_osci_stab_wait+0xdc>)
 8014be8:	f242 401d 	movw	r0, #9245	; 0x241d
 8014bec:	f7ff ff8a 	bl	8014b04 <rcu_flag_get>
 8014bf0:	b908      	cbnz	r0, 8014bf6 <rcu_osci_stab_wait+0xd6>
 8014bf2:	3a01      	subs	r2, #1
 8014bf4:	d1f8      	bne.n	8014be8 <rcu_osci_stab_wait+0xc8>
 8014bf6:	f242 401d 	movw	r0, #9245	; 0x241d
 8014bfa:	e7c7      	b.n	8014b8c <rcu_osci_stab_wait+0x6c>
 8014bfc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08014c00 <rcu_osci_on>:
 8014c00:	f7ff bf12 	b.w	8014a28 <rcu_periph_clock_enable>

08014c04 <rcu_clock_freq_get>:
 8014c04:	4b3d      	ldr	r3, [pc, #244]	; (8014cfc <rcu_clock_freq_get+0xf8>)
 8014c06:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014c08:	4604      	mov	r4, r0
 8014c0a:	461f      	mov	r7, r3
 8014c0c:	b089      	sub	sp, #36	; 0x24
 8014c0e:	ad04      	add	r5, sp, #16
 8014c10:	f103 0610 	add.w	r6, r3, #16
 8014c14:	462a      	mov	r2, r5
 8014c16:	6818      	ldr	r0, [r3, #0]
 8014c18:	6859      	ldr	r1, [r3, #4]
 8014c1a:	3308      	adds	r3, #8
 8014c1c:	c203      	stmia	r2!, {r0, r1}
 8014c1e:	42b3      	cmp	r3, r6
 8014c20:	4615      	mov	r5, r2
 8014c22:	d1f7      	bne.n	8014c14 <rcu_clock_freq_get+0x10>
 8014c24:	466b      	mov	r3, sp
 8014c26:	6938      	ldr	r0, [r7, #16]
 8014c28:	6871      	ldr	r1, [r6, #4]
 8014c2a:	4a35      	ldr	r2, [pc, #212]	; (8014d00 <rcu_clock_freq_get+0xfc>)
 8014c2c:	c303      	stmia	r3!, {r0, r1}
 8014c2e:	c303      	stmia	r3!, {r0, r1}
 8014c30:	6853      	ldr	r3, [r2, #4]
 8014c32:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8014c36:	2b01      	cmp	r3, #1
 8014c38:	d052      	beq.n	8014ce0 <rcu_clock_freq_get+0xdc>
 8014c3a:	2b02      	cmp	r3, #2
 8014c3c:	d152      	bne.n	8014ce4 <rcu_clock_freq_get+0xe0>
 8014c3e:	6853      	ldr	r3, [r2, #4]
 8014c40:	03dd      	lsls	r5, r3, #15
 8014c42:	d523      	bpl.n	8014c8c <rcu_clock_freq_get+0x88>
 8014c44:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8014c46:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8014c4a:	4b2e      	ldr	r3, [pc, #184]	; (8014d04 <rcu_clock_freq_get+0x100>)
 8014c4c:	d00e      	beq.n	8014c6c <rcu_clock_freq_get+0x68>
 8014c4e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014c50:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8014c52:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8014c56:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8014c5a:	3101      	adds	r1, #1
 8014c5c:	280f      	cmp	r0, #15
 8014c5e:	f100 0502 	add.w	r5, r0, #2
 8014c62:	fbb3 f3f1 	udiv	r3, r3, r1
 8014c66:	bf08      	it	eq
 8014c68:	2514      	moveq	r5, #20
 8014c6a:	436b      	muls	r3, r5
 8014c6c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014c6e:	f001 010f 	and.w	r1, r1, #15
 8014c72:	3101      	adds	r1, #1
 8014c74:	fbb3 f3f1 	udiv	r3, r3, r1
 8014c78:	6851      	ldr	r1, [r2, #4]
 8014c7a:	6850      	ldr	r0, [r2, #4]
 8014c7c:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8014c80:	0080      	lsls	r0, r0, #2
 8014c82:	d505      	bpl.n	8014c90 <rcu_clock_freq_get+0x8c>
 8014c84:	f041 0110 	orr.w	r1, r1, #16
 8014c88:	3101      	adds	r1, #1
 8014c8a:	e027      	b.n	8014cdc <rcu_clock_freq_get+0xd8>
 8014c8c:	4b1e      	ldr	r3, [pc, #120]	; (8014d08 <rcu_clock_freq_get+0x104>)
 8014c8e:	e7f3      	b.n	8014c78 <rcu_clock_freq_get+0x74>
 8014c90:	290d      	cmp	r1, #13
 8014c92:	d120      	bne.n	8014cd6 <rcu_clock_freq_get+0xd2>
 8014c94:	2006      	movs	r0, #6
 8014c96:	0859      	lsrs	r1, r3, #1
 8014c98:	fb00 1303 	mla	r3, r0, r3, r1
 8014c9c:	6851      	ldr	r1, [r2, #4]
 8014c9e:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8014ca2:	3120      	adds	r1, #32
 8014ca4:	4469      	add	r1, sp
 8014ca6:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8014caa:	fa23 f001 	lsr.w	r0, r3, r1
 8014cae:	6851      	ldr	r1, [r2, #4]
 8014cb0:	6852      	ldr	r2, [r2, #4]
 8014cb2:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8014cb6:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8014cba:	3120      	adds	r1, #32
 8014cbc:	3220      	adds	r2, #32
 8014cbe:	4469      	add	r1, sp
 8014cc0:	446a      	add	r2, sp
 8014cc2:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8014cc6:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8014cca:	2c03      	cmp	r4, #3
 8014ccc:	d813      	bhi.n	8014cf6 <rcu_clock_freq_get+0xf2>
 8014cce:	e8df f004 	tbb	[pc, r4]
 8014cd2:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8014cd6:	290f      	cmp	r1, #15
 8014cd8:	d0d6      	beq.n	8014c88 <rcu_clock_freq_get+0x84>
 8014cda:	3102      	adds	r1, #2
 8014cdc:	434b      	muls	r3, r1
 8014cde:	e7dd      	b.n	8014c9c <rcu_clock_freq_get+0x98>
 8014ce0:	4b08      	ldr	r3, [pc, #32]	; (8014d04 <rcu_clock_freq_get+0x100>)
 8014ce2:	e7db      	b.n	8014c9c <rcu_clock_freq_get+0x98>
 8014ce4:	4b09      	ldr	r3, [pc, #36]	; (8014d0c <rcu_clock_freq_get+0x108>)
 8014ce6:	e7d9      	b.n	8014c9c <rcu_clock_freq_get+0x98>
 8014ce8:	4618      	mov	r0, r3
 8014cea:	b009      	add	sp, #36	; 0x24
 8014cec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014cee:	40c8      	lsrs	r0, r1
 8014cf0:	e7fb      	b.n	8014cea <rcu_clock_freq_get+0xe6>
 8014cf2:	40d0      	lsrs	r0, r2
 8014cf4:	e7f9      	b.n	8014cea <rcu_clock_freq_get+0xe6>
 8014cf6:	2000      	movs	r0, #0
 8014cf8:	e7f7      	b.n	8014cea <rcu_clock_freq_get+0xe6>
 8014cfa:	bf00      	nop
 8014cfc:	0801648d 	stmdaeq	r1, {r0, r2, r3, r7, sl, sp, lr}
 8014d00:	40021000 	andmi	r1, r2, r0
 8014d04:	017d7840 	cmneq	sp, r0, asr #16
 8014d08:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8014d0c:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08014d10 <timer_deinit>:
 8014d10:	b508      	push	{r3, lr}
 8014d12:	4b4e      	ldr	r3, [pc, #312]	; (8014e4c <timer_deinit+0x13c>)
 8014d14:	4298      	cmp	r0, r3
 8014d16:	f000 8092 	beq.w	8014e3e <timer_deinit+0x12e>
 8014d1a:	d822      	bhi.n	8014d62 <timer_deinit+0x52>
 8014d1c:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8014d20:	4298      	cmp	r0, r3
 8014d22:	d062      	beq.n	8014dea <timer_deinit+0xda>
 8014d24:	d80b      	bhi.n	8014d3e <timer_deinit+0x2e>
 8014d26:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014d2a:	4298      	cmp	r0, r3
 8014d2c:	d04f      	beq.n	8014dce <timer_deinit+0xbe>
 8014d2e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014d32:	4298      	cmp	r0, r3
 8014d34:	d052      	beq.n	8014ddc <timer_deinit+0xcc>
 8014d36:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8014d3a:	d041      	beq.n	8014dc0 <timer_deinit+0xb0>
 8014d3c:	bd08      	pop	{r3, pc}
 8014d3e:	4b44      	ldr	r3, [pc, #272]	; (8014e50 <timer_deinit+0x140>)
 8014d40:	4298      	cmp	r0, r3
 8014d42:	d059      	beq.n	8014df8 <timer_deinit+0xe8>
 8014d44:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014d48:	4298      	cmp	r0, r3
 8014d4a:	d071      	beq.n	8014e30 <timer_deinit+0x120>
 8014d4c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014d50:	4298      	cmp	r0, r3
 8014d52:	d1f3      	bne.n	8014d3c <timer_deinit+0x2c>
 8014d54:	f240 4004 	movw	r0, #1028	; 0x404
 8014d58:	f7ff fe83 	bl	8014a62 <rcu_periph_reset_enable>
 8014d5c:	f240 4004 	movw	r0, #1028	; 0x404
 8014d60:	e02a      	b.n	8014db8 <timer_deinit+0xa8>
 8014d62:	4b3c      	ldr	r3, [pc, #240]	; (8014e54 <timer_deinit+0x144>)
 8014d64:	4298      	cmp	r0, r3
 8014d66:	d055      	beq.n	8014e14 <timer_deinit+0x104>
 8014d68:	d812      	bhi.n	8014d90 <timer_deinit+0x80>
 8014d6a:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8014d6e:	4298      	cmp	r0, r3
 8014d70:	d01c      	beq.n	8014dac <timer_deinit+0x9c>
 8014d72:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8014d76:	4298      	cmp	r0, r3
 8014d78:	d045      	beq.n	8014e06 <timer_deinit+0xf6>
 8014d7a:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 8014d7e:	4298      	cmp	r0, r3
 8014d80:	d1dc      	bne.n	8014d3c <timer_deinit+0x2c>
 8014d82:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8014d86:	f7ff fe6c 	bl	8014a62 <rcu_periph_reset_enable>
 8014d8a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8014d8e:	e013      	b.n	8014db8 <timer_deinit+0xa8>
 8014d90:	4b31      	ldr	r3, [pc, #196]	; (8014e58 <timer_deinit+0x148>)
 8014d92:	4298      	cmp	r0, r3
 8014d94:	d045      	beq.n	8014e22 <timer_deinit+0x112>
 8014d96:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014d9a:	4298      	cmp	r0, r3
 8014d9c:	d1ce      	bne.n	8014d3c <timer_deinit+0x2c>
 8014d9e:	f240 3015 	movw	r0, #789	; 0x315
 8014da2:	f7ff fe5e 	bl	8014a62 <rcu_periph_reset_enable>
 8014da6:	f240 3015 	movw	r0, #789	; 0x315
 8014daa:	e005      	b.n	8014db8 <timer_deinit+0xa8>
 8014dac:	f240 300b 	movw	r0, #779	; 0x30b
 8014db0:	f7ff fe57 	bl	8014a62 <rcu_periph_reset_enable>
 8014db4:	f240 300b 	movw	r0, #779	; 0x30b
 8014db8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014dbc:	f7ff be53 	b.w	8014a66 <rcu_periph_reset_disable>
 8014dc0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8014dc4:	f7ff fe4d 	bl	8014a62 <rcu_periph_reset_enable>
 8014dc8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8014dcc:	e7f4      	b.n	8014db8 <timer_deinit+0xa8>
 8014dce:	f240 4001 	movw	r0, #1025	; 0x401
 8014dd2:	f7ff fe46 	bl	8014a62 <rcu_periph_reset_enable>
 8014dd6:	f240 4001 	movw	r0, #1025	; 0x401
 8014dda:	e7ed      	b.n	8014db8 <timer_deinit+0xa8>
 8014ddc:	f240 4002 	movw	r0, #1026	; 0x402
 8014de0:	f7ff fe3f 	bl	8014a62 <rcu_periph_reset_enable>
 8014de4:	f240 4002 	movw	r0, #1026	; 0x402
 8014de8:	e7e6      	b.n	8014db8 <timer_deinit+0xa8>
 8014dea:	f240 4003 	movw	r0, #1027	; 0x403
 8014dee:	f7ff fe38 	bl	8014a62 <rcu_periph_reset_enable>
 8014df2:	f240 4003 	movw	r0, #1027	; 0x403
 8014df6:	e7df      	b.n	8014db8 <timer_deinit+0xa8>
 8014df8:	f240 4005 	movw	r0, #1029	; 0x405
 8014dfc:	f7ff fe31 	bl	8014a62 <rcu_periph_reset_enable>
 8014e00:	f240 4005 	movw	r0, #1029	; 0x405
 8014e04:	e7d8      	b.n	8014db8 <timer_deinit+0xa8>
 8014e06:	f240 300d 	movw	r0, #781	; 0x30d
 8014e0a:	f7ff fe2a 	bl	8014a62 <rcu_periph_reset_enable>
 8014e0e:	f240 300d 	movw	r0, #781	; 0x30d
 8014e12:	e7d1      	b.n	8014db8 <timer_deinit+0xa8>
 8014e14:	f240 3013 	movw	r0, #787	; 0x313
 8014e18:	f7ff fe23 	bl	8014a62 <rcu_periph_reset_enable>
 8014e1c:	f240 3013 	movw	r0, #787	; 0x313
 8014e20:	e7ca      	b.n	8014db8 <timer_deinit+0xa8>
 8014e22:	f44f 7045 	mov.w	r0, #788	; 0x314
 8014e26:	f7ff fe1c 	bl	8014a62 <rcu_periph_reset_enable>
 8014e2a:	f44f 7045 	mov.w	r0, #788	; 0x314
 8014e2e:	e7c3      	b.n	8014db8 <timer_deinit+0xa8>
 8014e30:	f240 4006 	movw	r0, #1030	; 0x406
 8014e34:	f7ff fe15 	bl	8014a62 <rcu_periph_reset_enable>
 8014e38:	f240 4006 	movw	r0, #1030	; 0x406
 8014e3c:	e7bc      	b.n	8014db8 <timer_deinit+0xa8>
 8014e3e:	f240 4007 	movw	r0, #1031	; 0x407
 8014e42:	f7ff fe0e 	bl	8014a62 <rcu_periph_reset_enable>
 8014e46:	f240 4007 	movw	r0, #1031	; 0x407
 8014e4a:	e7b5      	b.n	8014db8 <timer_deinit+0xa8>
 8014e4c:	40001c00 	andmi	r1, r0, r0, lsl #24
 8014e50:	40001400 	andmi	r1, r0, r0, lsl #8
 8014e54:	40014c00 	andmi	r4, r1, r0, lsl #24
 8014e58:	40015000 	andmi	r5, r1, r0

08014e5c <timer_init>:
 8014e5c:	880b      	ldrh	r3, [r1, #0]
 8014e5e:	6283      	str	r3, [r0, #40]	; 0x28
 8014e60:	4b26      	ldr	r3, [pc, #152]	; (8014efc <timer_init+0xa0>)
 8014e62:	4298      	cmp	r0, r3
 8014e64:	d018      	beq.n	8014e98 <timer_init+0x3c>
 8014e66:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8014e6a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8014e6e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8014e72:	d011      	beq.n	8014e98 <timer_init+0x3c>
 8014e74:	4a22      	ldr	r2, [pc, #136]	; (8014f00 <timer_init+0xa4>)
 8014e76:	4290      	cmp	r0, r2
 8014e78:	d00e      	beq.n	8014e98 <timer_init+0x3c>
 8014e7a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8014e7e:	4290      	cmp	r0, r2
 8014e80:	d00a      	beq.n	8014e98 <timer_init+0x3c>
 8014e82:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8014e86:	4293      	cmp	r3, r2
 8014e88:	d006      	beq.n	8014e98 <timer_init+0x3c>
 8014e8a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8014e8e:	4293      	cmp	r3, r2
 8014e90:	d002      	beq.n	8014e98 <timer_init+0x3c>
 8014e92:	4b1c      	ldr	r3, [pc, #112]	; (8014f04 <timer_init+0xa8>)
 8014e94:	4298      	cmp	r0, r3
 8014e96:	d10f      	bne.n	8014eb8 <timer_init+0x5c>
 8014e98:	6803      	ldr	r3, [r0, #0]
 8014e9a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014e9e:	6003      	str	r3, [r0, #0]
 8014ea0:	884b      	ldrh	r3, [r1, #2]
 8014ea2:	6802      	ldr	r2, [r0, #0]
 8014ea4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8014ea8:	4313      	orrs	r3, r2
 8014eaa:	6003      	str	r3, [r0, #0]
 8014eac:	888b      	ldrh	r3, [r1, #4]
 8014eae:	6802      	ldr	r2, [r0, #0]
 8014eb0:	f003 0310 	and.w	r3, r3, #16
 8014eb4:	4313      	orrs	r3, r2
 8014eb6:	6003      	str	r3, [r0, #0]
 8014eb8:	688b      	ldr	r3, [r1, #8]
 8014eba:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014ebc:	4b12      	ldr	r3, [pc, #72]	; (8014f08 <timer_init+0xac>)
 8014ebe:	4298      	cmp	r0, r3
 8014ec0:	d003      	beq.n	8014eca <timer_init+0x6e>
 8014ec2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014ec6:	4298      	cmp	r0, r3
 8014ec8:	d104      	bne.n	8014ed4 <timer_init+0x78>
 8014eca:	6943      	ldr	r3, [r0, #20]
 8014ecc:	f043 0301 	orr.w	r3, r3, #1
 8014ed0:	6143      	str	r3, [r0, #20]
 8014ed2:	4770      	bx	lr
 8014ed4:	6803      	ldr	r3, [r0, #0]
 8014ed6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8014eda:	6003      	str	r3, [r0, #0]
 8014edc:	898b      	ldrh	r3, [r1, #12]
 8014ede:	6802      	ldr	r2, [r0, #0]
 8014ee0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8014ee4:	4313      	orrs	r3, r2
 8014ee6:	6003      	str	r3, [r0, #0]
 8014ee8:	4b04      	ldr	r3, [pc, #16]	; (8014efc <timer_init+0xa0>)
 8014eea:	4298      	cmp	r0, r3
 8014eec:	d002      	beq.n	8014ef4 <timer_init+0x98>
 8014eee:	4b04      	ldr	r3, [pc, #16]	; (8014f00 <timer_init+0xa4>)
 8014ef0:	4298      	cmp	r0, r3
 8014ef2:	d1ea      	bne.n	8014eca <timer_init+0x6e>
 8014ef4:	7b8b      	ldrb	r3, [r1, #14]
 8014ef6:	6303      	str	r3, [r0, #48]	; 0x30
 8014ef8:	e7e7      	b.n	8014eca <timer_init+0x6e>
 8014efa:	bf00      	nop
 8014efc:	40012c00 	andmi	r2, r1, r0, lsl #24
 8014f00:	40013400 	andmi	r3, r1, r0, lsl #8
 8014f04:	40002000 	andmi	r2, r0, r0
 8014f08:	40001000 	andmi	r1, r0, r0

08014f0c <timer_enable>:
 8014f0c:	6803      	ldr	r3, [r0, #0]
 8014f0e:	f043 0301 	orr.w	r3, r3, #1
 8014f12:	6003      	str	r3, [r0, #0]
 8014f14:	4770      	bx	lr

08014f16 <timer_channel_output_mode_config>:
 8014f16:	2903      	cmp	r1, #3
 8014f18:	d81a      	bhi.n	8014f50 <timer_channel_output_mode_config+0x3a>
 8014f1a:	e8df f001 	tbb	[pc, r1]
 8014f1e:	1a120a02 	bne	849772e <__exidx_end+0x47effa>
 8014f22:	6983      	ldr	r3, [r0, #24]
 8014f24:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014f28:	6183      	str	r3, [r0, #24]
 8014f2a:	6983      	ldr	r3, [r0, #24]
 8014f2c:	431a      	orrs	r2, r3
 8014f2e:	6182      	str	r2, [r0, #24]
 8014f30:	4770      	bx	lr
 8014f32:	6983      	ldr	r3, [r0, #24]
 8014f34:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014f38:	6183      	str	r3, [r0, #24]
 8014f3a:	6983      	ldr	r3, [r0, #24]
 8014f3c:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8014f40:	e7f5      	b.n	8014f2e <timer_channel_output_mode_config+0x18>
 8014f42:	69c3      	ldr	r3, [r0, #28]
 8014f44:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014f48:	61c3      	str	r3, [r0, #28]
 8014f4a:	69c3      	ldr	r3, [r0, #28]
 8014f4c:	431a      	orrs	r2, r3
 8014f4e:	61c2      	str	r2, [r0, #28]
 8014f50:	4770      	bx	lr
 8014f52:	69c3      	ldr	r3, [r0, #28]
 8014f54:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014f58:	61c3      	str	r3, [r0, #28]
 8014f5a:	69c3      	ldr	r3, [r0, #28]
 8014f5c:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8014f60:	e7f5      	b.n	8014f4e <timer_channel_output_mode_config+0x38>

08014f62 <timer_channel_output_pulse_value_config>:
 8014f62:	2903      	cmp	r1, #3
 8014f64:	d80a      	bhi.n	8014f7c <timer_channel_output_pulse_value_config+0x1a>
 8014f66:	e8df f001 	tbb	[pc, r1]
 8014f6a:	08060402 	stmdaeq	r6, {r1, sl}
 8014f6e:	6342      	str	r2, [r0, #52]	; 0x34
 8014f70:	4770      	bx	lr
 8014f72:	6382      	str	r2, [r0, #56]	; 0x38
 8014f74:	4770      	bx	lr
 8014f76:	63c2      	str	r2, [r0, #60]	; 0x3c
 8014f78:	4770      	bx	lr
 8014f7a:	6402      	str	r2, [r0, #64]	; 0x40
 8014f7c:	4770      	bx	lr

08014f7e <timer_input_trigger_source_select>:
 8014f7e:	6882      	ldr	r2, [r0, #8]
 8014f80:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014f84:	6082      	str	r2, [r0, #8]
 8014f86:	6883      	ldr	r3, [r0, #8]
 8014f88:	430b      	orrs	r3, r1
 8014f8a:	6083      	str	r3, [r0, #8]
 8014f8c:	4770      	bx	lr

08014f8e <timer_master_output_trigger_source_select>:
 8014f8e:	6842      	ldr	r2, [r0, #4]
 8014f90:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8014f94:	6042      	str	r2, [r0, #4]
 8014f96:	6843      	ldr	r3, [r0, #4]
 8014f98:	430b      	orrs	r3, r1
 8014f9a:	6043      	str	r3, [r0, #4]
 8014f9c:	4770      	bx	lr

08014f9e <timer_slave_mode_select>:
 8014f9e:	6882      	ldr	r2, [r0, #8]
 8014fa0:	f022 0207 	bic.w	r2, r2, #7
 8014fa4:	6082      	str	r2, [r0, #8]
 8014fa6:	6883      	ldr	r3, [r0, #8]
 8014fa8:	430b      	orrs	r3, r1
 8014faa:	6083      	str	r3, [r0, #8]
 8014fac:	4770      	bx	lr

08014fae <timer_master_slave_mode_config>:
 8014fae:	2980      	cmp	r1, #128	; 0x80
 8014fb0:	d104      	bne.n	8014fbc <timer_master_slave_mode_config+0xe>
 8014fb2:	6883      	ldr	r3, [r0, #8]
 8014fb4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8014fb8:	6083      	str	r3, [r0, #8]
 8014fba:	4770      	bx	lr
 8014fbc:	2900      	cmp	r1, #0
 8014fbe:	d1fc      	bne.n	8014fba <timer_master_slave_mode_config+0xc>
 8014fc0:	6883      	ldr	r3, [r0, #8]
 8014fc2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014fc6:	e7f7      	b.n	8014fb8 <timer_master_slave_mode_config+0xa>

08014fc8 <timer_interrupt_enable>:
 8014fc8:	68c3      	ldr	r3, [r0, #12]
 8014fca:	430b      	orrs	r3, r1
 8014fcc:	60c3      	str	r3, [r0, #12]
 8014fce:	4770      	bx	lr

08014fd0 <timer_interrupt_flag_clear>:
 8014fd0:	43c9      	mvns	r1, r1
 8014fd2:	6101      	str	r1, [r0, #16]
 8014fd4:	4770      	bx	lr

08014fd6 <timer_flag_clear>:
 8014fd6:	43c9      	mvns	r1, r1
 8014fd8:	6101      	str	r1, [r0, #16]
 8014fda:	4770      	bx	lr

08014fdc <usart_deinit>:
 8014fdc:	b508      	push	{r3, lr}
 8014fde:	4b2d      	ldr	r3, [pc, #180]	; (8015094 <usart_deinit+0xb8>)
 8014fe0:	4298      	cmp	r0, r3
 8014fe2:	d050      	beq.n	8015086 <usart_deinit+0xaa>
 8014fe4:	d817      	bhi.n	8015016 <usart_deinit+0x3a>
 8014fe6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014fea:	4298      	cmp	r0, r3
 8014fec:	d044      	beq.n	8015078 <usart_deinit+0x9c>
 8014fee:	d808      	bhi.n	8015002 <usart_deinit+0x26>
 8014ff0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014ff4:	4298      	cmp	r0, r3
 8014ff6:	d02a      	beq.n	801504e <usart_deinit+0x72>
 8014ff8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014ffc:	4298      	cmp	r0, r3
 8014ffe:	d02d      	beq.n	801505c <usart_deinit+0x80>
 8015000:	bd08      	pop	{r3, pc}
 8015002:	4b25      	ldr	r3, [pc, #148]	; (8015098 <usart_deinit+0xbc>)
 8015004:	4298      	cmp	r0, r3
 8015006:	d1fb      	bne.n	8015000 <usart_deinit+0x24>
 8015008:	f240 4014 	movw	r0, #1044	; 0x414
 801500c:	f7ff fd29 	bl	8014a62 <rcu_periph_reset_enable>
 8015010:	f240 4014 	movw	r0, #1044	; 0x414
 8015014:	e017      	b.n	8015046 <usart_deinit+0x6a>
 8015016:	4b21      	ldr	r3, [pc, #132]	; (801509c <usart_deinit+0xc0>)
 8015018:	4298      	cmp	r0, r3
 801501a:	d00e      	beq.n	801503a <usart_deinit+0x5e>
 801501c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8015020:	4298      	cmp	r0, r3
 8015022:	d022      	beq.n	801506a <usart_deinit+0x8e>
 8015024:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8015028:	4298      	cmp	r0, r3
 801502a:	d1e9      	bne.n	8015000 <usart_deinit+0x24>
 801502c:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8015030:	f7ff fd17 	bl	8014a62 <rcu_periph_reset_enable>
 8015034:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8015038:	e005      	b.n	8015046 <usart_deinit+0x6a>
 801503a:	f240 300e 	movw	r0, #782	; 0x30e
 801503e:	f7ff fd10 	bl	8014a62 <rcu_periph_reset_enable>
 8015042:	f240 300e 	movw	r0, #782	; 0x30e
 8015046:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801504a:	f7ff bd0c 	b.w	8014a66 <rcu_periph_reset_disable>
 801504e:	f240 4011 	movw	r0, #1041	; 0x411
 8015052:	f7ff fd06 	bl	8014a62 <rcu_periph_reset_enable>
 8015056:	f240 4011 	movw	r0, #1041	; 0x411
 801505a:	e7f4      	b.n	8015046 <usart_deinit+0x6a>
 801505c:	f240 4012 	movw	r0, #1042	; 0x412
 8015060:	f7ff fcff 	bl	8014a62 <rcu_periph_reset_enable>
 8015064:	f240 4012 	movw	r0, #1042	; 0x412
 8015068:	e7ed      	b.n	8015046 <usart_deinit+0x6a>
 801506a:	f641 5018 	movw	r0, #7448	; 0x1d18
 801506e:	f7ff fcf8 	bl	8014a62 <rcu_periph_reset_enable>
 8015072:	f641 5018 	movw	r0, #7448	; 0x1d18
 8015076:	e7e6      	b.n	8015046 <usart_deinit+0x6a>
 8015078:	f240 4013 	movw	r0, #1043	; 0x413
 801507c:	f7ff fcf1 	bl	8014a62 <rcu_periph_reset_enable>
 8015080:	f240 4013 	movw	r0, #1043	; 0x413
 8015084:	e7df      	b.n	8015046 <usart_deinit+0x6a>
 8015086:	f641 601e 	movw	r0, #7710	; 0x1e1e
 801508a:	f7ff fcea 	bl	8014a62 <rcu_periph_reset_enable>
 801508e:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8015092:	e7d8      	b.n	8015046 <usart_deinit+0x6a>
 8015094:	40007800 	andmi	r7, r0, r0, lsl #16
 8015098:	40005000 	andmi	r5, r0, r0
 801509c:	40013800 	andmi	r3, r1, r0, lsl #16

080150a0 <usart_baudrate_set>:
 80150a0:	b538      	push	{r3, r4, r5, lr}
 80150a2:	4b16      	ldr	r3, [pc, #88]	; (80150fc <usart_baudrate_set+0x5c>)
 80150a4:	4604      	mov	r4, r0
 80150a6:	4298      	cmp	r0, r3
 80150a8:	460d      	mov	r5, r1
 80150aa:	d025      	beq.n	80150f8 <usart_baudrate_set+0x58>
 80150ac:	d816      	bhi.n	80150dc <usart_baudrate_set+0x3c>
 80150ae:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80150b2:	4298      	cmp	r0, r3
 80150b4:	d020      	beq.n	80150f8 <usart_baudrate_set+0x58>
 80150b6:	d80f      	bhi.n	80150d8 <usart_baudrate_set+0x38>
 80150b8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80150bc:	4298      	cmp	r0, r3
 80150be:	d01b      	beq.n	80150f8 <usart_baudrate_set+0x58>
 80150c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80150c4:	429c      	cmp	r4, r3
 80150c6:	d017      	beq.n	80150f8 <usart_baudrate_set+0x58>
 80150c8:	2000      	movs	r0, #0
 80150ca:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 80150ce:	fbb3 f1f5 	udiv	r1, r3, r5
 80150d2:	b289      	uxth	r1, r1
 80150d4:	60a1      	str	r1, [r4, #8]
 80150d6:	bd38      	pop	{r3, r4, r5, pc}
 80150d8:	4b09      	ldr	r3, [pc, #36]	; (8015100 <usart_baudrate_set+0x60>)
 80150da:	e7f3      	b.n	80150c4 <usart_baudrate_set+0x24>
 80150dc:	4b09      	ldr	r3, [pc, #36]	; (8015104 <usart_baudrate_set+0x64>)
 80150de:	4298      	cmp	r0, r3
 80150e0:	d006      	beq.n	80150f0 <usart_baudrate_set+0x50>
 80150e2:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80150e6:	4298      	cmp	r0, r3
 80150e8:	d002      	beq.n	80150f0 <usart_baudrate_set+0x50>
 80150ea:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80150ee:	e7e9      	b.n	80150c4 <usart_baudrate_set+0x24>
 80150f0:	2003      	movs	r0, #3
 80150f2:	f7ff fd87 	bl	8014c04 <rcu_clock_freq_get>
 80150f6:	e7e8      	b.n	80150ca <usart_baudrate_set+0x2a>
 80150f8:	2002      	movs	r0, #2
 80150fa:	e7fa      	b.n	80150f2 <usart_baudrate_set+0x52>
 80150fc:	40007800 	andmi	r7, r0, r0, lsl #16
 8015100:	40005000 	andmi	r5, r0, r0
 8015104:	40013800 	andmi	r3, r1, r0, lsl #16

08015108 <usart_parity_config>:
 8015108:	68c2      	ldr	r2, [r0, #12]
 801510a:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 801510e:	60c2      	str	r2, [r0, #12]
 8015110:	68c3      	ldr	r3, [r0, #12]
 8015112:	430b      	orrs	r3, r1
 8015114:	60c3      	str	r3, [r0, #12]
 8015116:	4770      	bx	lr

08015118 <usart_word_length_set>:
 8015118:	68c2      	ldr	r2, [r0, #12]
 801511a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 801511e:	60c2      	str	r2, [r0, #12]
 8015120:	68c3      	ldr	r3, [r0, #12]
 8015122:	430b      	orrs	r3, r1
 8015124:	60c3      	str	r3, [r0, #12]
 8015126:	4770      	bx	lr

08015128 <usart_stop_bit_set>:
 8015128:	6902      	ldr	r2, [r0, #16]
 801512a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 801512e:	6102      	str	r2, [r0, #16]
 8015130:	6903      	ldr	r3, [r0, #16]
 8015132:	430b      	orrs	r3, r1
 8015134:	6103      	str	r3, [r0, #16]
 8015136:	4770      	bx	lr

08015138 <usart_transmit_config>:
 8015138:	68c3      	ldr	r3, [r0, #12]
 801513a:	f023 0308 	bic.w	r3, r3, #8
 801513e:	430b      	orrs	r3, r1
 8015140:	60c3      	str	r3, [r0, #12]
 8015142:	4770      	bx	lr

08015144 <usart_receive_config>:
 8015144:	68c3      	ldr	r3, [r0, #12]
 8015146:	f023 0304 	bic.w	r3, r3, #4
 801514a:	430b      	orrs	r3, r1
 801514c:	60c3      	str	r3, [r0, #12]
 801514e:	4770      	bx	lr

08015150 <usart_hardware_flow_rts_config>:
 8015150:	6943      	ldr	r3, [r0, #20]
 8015152:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015156:	430b      	orrs	r3, r1
 8015158:	6143      	str	r3, [r0, #20]
 801515a:	4770      	bx	lr

0801515c <usart_hardware_flow_cts_config>:
 801515c:	6943      	ldr	r3, [r0, #20]
 801515e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8015162:	430b      	orrs	r3, r1
 8015164:	6143      	str	r3, [r0, #20]
 8015166:	4770      	bx	lr

08015168 <usart_dma_transmit_config>:
 8015168:	6943      	ldr	r3, [r0, #20]
 801516a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801516e:	430b      	orrs	r3, r1
 8015170:	6143      	str	r3, [r0, #20]
 8015172:	4770      	bx	lr

08015174 <usart_flag_get>:
 8015174:	098b      	lsrs	r3, r1, #6
 8015176:	5818      	ldr	r0, [r3, r0]
 8015178:	f001 011f 	and.w	r1, r1, #31
 801517c:	40c8      	lsrs	r0, r1
 801517e:	f000 0001 	and.w	r0, r0, #1
 8015182:	4770      	bx	lr

08015184 <usart_interrupt_enable>:
 8015184:	2301      	movs	r3, #1
 8015186:	b510      	push	{r4, lr}
 8015188:	f3c1 1289 	ubfx	r2, r1, #6, #10
 801518c:	5814      	ldr	r4, [r2, r0]
 801518e:	f001 011f 	and.w	r1, r1, #31
 8015192:	fa03 f101 	lsl.w	r1, r3, r1
 8015196:	4321      	orrs	r1, r4
 8015198:	5011      	str	r1, [r2, r0]
 801519a:	bd10      	pop	{r4, pc}

0801519c <usart_interrupt_disable>:
 801519c:	2201      	movs	r2, #1
 801519e:	b510      	push	{r4, lr}
 80151a0:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80151a4:	5823      	ldr	r3, [r4, r0]
 80151a6:	f001 011f 	and.w	r1, r1, #31
 80151aa:	fa02 f101 	lsl.w	r1, r2, r1
 80151ae:	ea23 0101 	bic.w	r1, r3, r1
 80151b2:	5021      	str	r1, [r4, r0]
 80151b4:	bd10      	pop	{r4, pc}

080151b6 <usart_interrupt_flag_clear>:
 80151b6:	2201      	movs	r2, #1
 80151b8:	b510      	push	{r4, lr}
 80151ba:	0d8c      	lsrs	r4, r1, #22
 80151bc:	5823      	ldr	r3, [r4, r0]
 80151be:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80151c2:	fa02 f101 	lsl.w	r1, r2, r1
 80151c6:	ea23 0101 	bic.w	r1, r3, r1
 80151ca:	5021      	str	r1, [r4, r0]
 80151cc:	bd10      	pop	{r4, pc}
	...

080151d0 <emac_start>:
 80151d0:	b510      	push	{r4, lr}
 80151d2:	4604      	mov	r4, r0
 80151d4:	f240 6002 	movw	r0, #1538	; 0x602
 80151d8:	f7ff fc26 	bl	8014a28 <rcu_periph_clock_enable>
 80151dc:	f240 6003 	movw	r0, #1539	; 0x603
 80151e0:	f7ff fc22 	bl	8014a28 <rcu_periph_clock_enable>
 80151e4:	f240 6004 	movw	r0, #1540	; 0x604
 80151e8:	f7ff fc1e 	bl	8014a28 <rcu_periph_clock_enable>
 80151ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80151f0:	2203      	movs	r2, #3
 80151f2:	2118      	movs	r1, #24
 80151f4:	4846      	ldr	r0, [pc, #280]	; (8015310 <emac_start+0x140>)
 80151f6:	f7ff fb7b 	bl	80148f0 <gpio_init>
 80151fa:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80151fe:	f7ff fc13 	bl	8014a28 <rcu_periph_clock_enable>
 8015202:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8015206:	f7ff fc53 	bl	8014ab0 <rcu_pll2_config>
 801520a:	201c      	movs	r0, #28
 801520c:	f7ff fcf8 	bl	8014c00 <rcu_osci_on>
 8015210:	201c      	movs	r0, #28
 8015212:	f7ff fc85 	bl	8014b20 <rcu_osci_stab_wait>
 8015216:	2100      	movs	r1, #0
 8015218:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 801521c:	f7ff fc36 	bl	8014a8c <rcu_ckout0_config>
 8015220:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8015224:	f7ff fbec 	bl	8014a00 <gpio_ethernet_phy_select>
 8015228:	2302      	movs	r3, #2
 801522a:	2203      	movs	r2, #3
 801522c:	2104      	movs	r1, #4
 801522e:	4838      	ldr	r0, [pc, #224]	; (8015310 <emac_start+0x140>)
 8015230:	f7ff fb5e 	bl	80148f0 <gpio_init>
 8015234:	2304      	movs	r3, #4
 8015236:	2203      	movs	r2, #3
 8015238:	2118      	movs	r1, #24
 801523a:	4835      	ldr	r0, [pc, #212]	; (8015310 <emac_start+0x140>)
 801523c:	f7ff fb58 	bl	80148f0 <gpio_init>
 8015240:	2380      	movs	r3, #128	; 0x80
 8015242:	2203      	movs	r2, #3
 8015244:	2104      	movs	r1, #4
 8015246:	4832      	ldr	r0, [pc, #200]	; (8015310 <emac_start+0x140>)
 8015248:	f7ff fb52 	bl	80148f0 <gpio_init>
 801524c:	2302      	movs	r3, #2
 801524e:	2203      	movs	r2, #3
 8015250:	2118      	movs	r1, #24
 8015252:	4830      	ldr	r0, [pc, #192]	; (8015314 <emac_start+0x144>)
 8015254:	f7ff fb4c 	bl	80148f0 <gpio_init>
 8015258:	2310      	movs	r3, #16
 801525a:	2203      	movs	r2, #3
 801525c:	2104      	movs	r1, #4
 801525e:	482d      	ldr	r0, [pc, #180]	; (8015314 <emac_start+0x144>)
 8015260:	f7ff fb46 	bl	80148f0 <gpio_init>
 8015264:	2320      	movs	r3, #32
 8015266:	2203      	movs	r2, #3
 8015268:	2104      	movs	r1, #4
 801526a:	482a      	ldr	r0, [pc, #168]	; (8015314 <emac_start+0x144>)
 801526c:	f7ff fb40 	bl	80148f0 <gpio_init>
 8015270:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015274:	2203      	movs	r2, #3
 8015276:	2118      	movs	r1, #24
 8015278:	4827      	ldr	r0, [pc, #156]	; (8015318 <emac_start+0x148>)
 801527a:	f7ff fb39 	bl	80148f0 <gpio_init>
 801527e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8015282:	2203      	movs	r2, #3
 8015284:	2118      	movs	r1, #24
 8015286:	4824      	ldr	r0, [pc, #144]	; (8015318 <emac_start+0x148>)
 8015288:	f7ff fb32 	bl	80148f0 <gpio_init>
 801528c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8015290:	2203      	movs	r2, #3
 8015292:	2118      	movs	r1, #24
 8015294:	4820      	ldr	r0, [pc, #128]	; (8015318 <emac_start+0x148>)
 8015296:	f7ff fb2b 	bl	80148f0 <gpio_init>
 801529a:	f240 500e 	movw	r0, #1294	; 0x50e
 801529e:	f7ff fbc3 	bl	8014a28 <rcu_periph_clock_enable>
 80152a2:	f240 500f 	movw	r0, #1295	; 0x50f
 80152a6:	f7ff fbbf 	bl	8014a28 <rcu_periph_clock_enable>
 80152aa:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80152ae:	f7ff fbbb 	bl	8014a28 <rcu_periph_clock_enable>
 80152b2:	f001 f831 	bl	8016318 <enet_deinit>
 80152b6:	f000 fc89 	bl	8015bcc <enet_software_reset>
 80152ba:	b900      	cbnz	r0, 80152be <emac_start+0xee>
 80152bc:	e7fe      	b.n	80152bc <emac_start+0xec>
 80152be:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80152c2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80152c6:	2001      	movs	r0, #1
 80152c8:	f000 fe04 	bl	8015ed4 <enet_init>
 80152cc:	4b13      	ldr	r3, [pc, #76]	; (801531c <emac_start+0x14c>)
 80152ce:	6018      	str	r0, [r3, #0]
 80152d0:	681b      	ldr	r3, [r3, #0]
 80152d2:	b903      	cbnz	r3, 80152d6 <emac_start+0x106>
 80152d4:	e7fe      	b.n	80152d4 <emac_start+0x104>
 80152d6:	4620      	mov	r0, r4
 80152d8:	f000 fb70 	bl	80159bc <mac_address_get>
 80152dc:	4621      	mov	r1, r4
 80152de:	2000      	movs	r0, #0
 80152e0:	f000 fd58 	bl	8015d94 <enet_mac_address_set>
 80152e4:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80152e8:	f000 fc84 	bl	8015bf4 <enet_descriptors_chain_init>
 80152ec:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80152f0:	f000 fc80 	bl	8015bf4 <enet_descriptors_chain_init>
 80152f4:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80152f8:	4809      	ldr	r0, [pc, #36]	; (8015320 <emac_start+0x150>)
 80152fa:	f000 fd45 	bl	8015d88 <enet_transmit_checksum_config>
 80152fe:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8015302:	4808      	ldr	r0, [pc, #32]	; (8015324 <emac_start+0x154>)
 8015304:	f000 fd40 	bl	8015d88 <enet_transmit_checksum_config>
 8015308:	f000 ff7e 	bl	8016208 <enet_enable>
 801530c:	2001      	movs	r0, #1
 801530e:	bd10      	pop	{r4, pc}
 8015310:	40010800 	andmi	r0, r1, r0, lsl #16
 8015314:	40011000 	andmi	r1, r1, r0
 8015318:	40010c00 	andmi	r0, r1, r0, lsl #24
 801531c:	2000d3b0 			; <UNDEFINED> instruction: 0x2000d3b0
 8015320:	20011c14 	andcs	r1, r1, r4, lsl ip
 8015324:	20011c24 	andcs	r1, r1, r4, lsr #24

08015328 <emac_eth_recv>:
 8015328:	b538      	push	{r3, r4, r5, lr}
 801532a:	4605      	mov	r5, r0
 801532c:	f000 ffc4 	bl	80162b8 <enet_rxframe_size_get>
 8015330:	4604      	mov	r4, r0
 8015332:	b138      	cbz	r0, 8015344 <emac_eth_recv+0x1c>
 8015334:	4b05      	ldr	r3, [pc, #20]	; (801534c <emac_eth_recv+0x24>)
 8015336:	2105      	movs	r1, #5
 8015338:	6818      	ldr	r0, [r3, #0]
 801533a:	f000 ff6c 	bl	8016216 <enet_desc_information_get>
 801533e:	6028      	str	r0, [r5, #0]
 8015340:	4620      	mov	r0, r4
 8015342:	bd38      	pop	{r3, r4, r5, pc}
 8015344:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015348:	e7fb      	b.n	8015342 <emac_eth_recv+0x1a>
 801534a:	bf00      	nop
 801534c:	2000d3c0 	andcs	sp, r0, r0, asr #7

08015350 <emac_free_pkt>:
 8015350:	2100      	movs	r1, #0
 8015352:	4608      	mov	r0, r1
 8015354:	f000 bc96 	b.w	8015c84 <enet_frame_receive>

08015358 <emac_eth_send>:
 8015358:	f000 bcd4 	b.w	8015d04 <enet_frame_transmit>

0801535c <gd32_adc_init()>:
 801535c:	b510      	push	{r4, lr}
 801535e:	f240 6009 	movw	r0, #1545	; 0x609
 8015362:	4c21      	ldr	r4, [pc, #132]	; (80153e8 <gd32_adc_init()+0x8c>)
 8015364:	f7ff fb60 	bl	8014a28 <rcu_periph_clock_enable>
 8015368:	2005      	movs	r0, #5
 801536a:	f7ff fbad 	bl	8014ac8 <rcu_adc_clock_config>
 801536e:	4620      	mov	r0, r4
 8015370:	2201      	movs	r2, #1
 8015372:	f44f 7180 	mov.w	r1, #256	; 0x100
 8015376:	f000 fb43 	bl	8015a00 <adc_special_function_config>
 801537a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 801537e:	4620      	mov	r0, r4
 8015380:	2102      	movs	r1, #2
 8015382:	f000 fbdd 	bl	8015b40 <adc_external_trigger_source_config>
 8015386:	2100      	movs	r1, #0
 8015388:	4620      	mov	r0, r4
 801538a:	f000 fb61 	bl	8015a50 <adc_data_alignment_config>
 801538e:	2000      	movs	r0, #0
 8015390:	f000 fb26 	bl	80159e0 <adc_mode_config>
 8015394:	2202      	movs	r2, #2
 8015396:	4620      	mov	r0, r4
 8015398:	4611      	mov	r1, r2
 801539a:	f000 fb85 	bl	8015aa8 <adc_channel_length_config>
 801539e:	4620      	mov	r0, r4
 80153a0:	2307      	movs	r3, #7
 80153a2:	2210      	movs	r2, #16
 80153a4:	2100      	movs	r1, #0
 80153a6:	f000 fb9c 	bl	8015ae2 <adc_inserted_channel_config>
 80153aa:	2307      	movs	r3, #7
 80153ac:	4620      	mov	r0, r4
 80153ae:	2211      	movs	r2, #17
 80153b0:	2101      	movs	r1, #1
 80153b2:	f000 fb96 	bl	8015ae2 <adc_inserted_channel_config>
 80153b6:	2201      	movs	r2, #1
 80153b8:	2102      	movs	r1, #2
 80153ba:	4620      	mov	r0, r4
 80153bc:	f000 fbd1 	bl	8015b62 <adc_external_trigger_config>
 80153c0:	f000 fb68 	bl	8015a94 <adc_tempsensor_vrefint_enable>
 80153c4:	4620      	mov	r0, r4
 80153c6:	f000 fb4c 	bl	8015a62 <adc_enable>
 80153ca:	2100      	movs	r1, #0
 80153cc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80153d0:	f000 fadc 	bl	801598c <udelay(unsigned int, unsigned int)>
 80153d4:	4620      	mov	r0, r4
 80153d6:	f000 fb4c 	bl	8015a72 <adc_calibration_enable>
 80153da:	4620      	mov	r0, r4
 80153dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80153e0:	2102      	movs	r1, #2
 80153e2:	f000 bbd9 	b.w	8015b98 <adc_software_trigger_enable>
 80153e6:	bf00      	nop
 80153e8:	40012400 	andmi	r2, r1, r0, lsl #8

080153ec <_stop() [clone .isra.0]>:
 80153ec:	b508      	push	{r3, lr}
 80153ee:	4806      	ldr	r0, [pc, #24]	; (8015408 <_stop() [clone .isra.0]+0x1c>)
 80153f0:	f001 f822 	bl	8016438 <i2c_stop_on_bus>
 80153f4:	f640 73ff 	movw	r3, #4095	; 0xfff
 80153f8:	4a04      	ldr	r2, [pc, #16]	; (801540c <_stop() [clone .isra.0]+0x20>)
 80153fa:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 80153fe:	0589      	lsls	r1, r1, #22
 8015400:	d501      	bpl.n	8015406 <_stop() [clone .isra.0]+0x1a>
 8015402:	3b01      	subs	r3, #1
 8015404:	d1f9      	bne.n	80153fa <_stop() [clone .isra.0]+0xe>
 8015406:	bd08      	pop	{r3, pc}
 8015408:	40005400 	andmi	r5, r0, r0, lsl #8
 801540c:	40005000 	andmi	r5, r0, r0

08015410 <gd32_i2c_begin()>:
 8015410:	b510      	push	{r4, lr}
 8015412:	f240 7015 	movw	r0, #1813	; 0x715
 8015416:	f7ff fb07 	bl	8014a28 <rcu_periph_clock_enable>
 801541a:	4c15      	ldr	r4, [pc, #84]	; (8015470 <gd32_i2c_begin()+0x60>)
 801541c:	f240 6003 	movw	r0, #1539	; 0x603
 8015420:	f7ff fb02 	bl	8014a28 <rcu_periph_clock_enable>
 8015424:	f240 6003 	movw	r0, #1539	; 0x603
 8015428:	f7ff fafe 	bl	8014a28 <rcu_periph_clock_enable>
 801542c:	4620      	mov	r0, r4
 801542e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8015432:	2203      	movs	r2, #3
 8015434:	211c      	movs	r1, #28
 8015436:	f7ff fa5b 	bl	80148f0 <gpio_init>
 801543a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801543e:	2203      	movs	r2, #3
 8015440:	4620      	mov	r0, r4
 8015442:	211c      	movs	r1, #28
 8015444:	f7ff fa54 	bl	80148f0 <gpio_init>
 8015448:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 801544c:	2101      	movs	r1, #1
 801544e:	2002      	movs	r0, #2
 8015450:	f7ff faa6 	bl	80149a0 <gpio_pin_remap_config>
 8015454:	4620      	mov	r0, r4
 8015456:	4907      	ldr	r1, [pc, #28]	; (8015474 <gd32_i2c_begin()+0x64>)
 8015458:	2200      	movs	r2, #0
 801545a:	f000 ff6b 	bl	8016334 <i2c_clock_config>
 801545e:	4620      	mov	r0, r4
 8015460:	f000 ffe0 	bl	8016424 <i2c_enable>
 8015464:	4620      	mov	r0, r4
 8015466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801546a:	2101      	movs	r1, #1
 801546c:	f000 bfc0 	b.w	80163f0 <i2c_ack_config>
 8015470:	40010c00 	andmi	r0, r1, r0, lsl #24
 8015474:	00061a80 	andeq	r1, r6, r0, lsl #21

08015478 <gd32_i2c_set_baudrate(unsigned int)>:
 8015478:	4601      	mov	r1, r0
 801547a:	2200      	movs	r2, #0
 801547c:	4801      	ldr	r0, [pc, #4]	; (8015484 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 801547e:	f000 bf59 	b.w	8016334 <i2c_clock_config>
 8015482:	bf00      	nop
 8015484:	40005400 	andmi	r5, r0, r0, lsl #8

08015488 <gd32_i2c_set_address(unsigned char)>:
 8015488:	4b01      	ldr	r3, [pc, #4]	; (8015490 <gd32_i2c_set_address(unsigned char)+0x8>)
 801548a:	0040      	lsls	r0, r0, #1
 801548c:	7018      	strb	r0, [r3, #0]
 801548e:	4770      	bx	lr
 8015490:	2000d3b4 			; <UNDEFINED> instruction: 0x2000d3b4

08015494 <gd32_i2c_write(char const*, unsigned int)>:
 8015494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015496:	4604      	mov	r4, r0
 8015498:	460f      	mov	r7, r1
 801549a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801549e:	4e2e      	ldr	r6, [pc, #184]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154a0:	f240 6101 	movw	r1, #1537	; 0x601
 80154a4:	4630      	mov	r0, r6
 80154a6:	f000 ffd1 	bl	801644c <i2c_flag_get>
 80154aa:	b138      	cbz	r0, 80154bc <gd32_i2c_write(char const*, unsigned int)+0x28>
 80154ac:	3d01      	subs	r5, #1
 80154ae:	d1f7      	bne.n	80154a0 <gd32_i2c_write(char const*, unsigned int)+0xc>
 80154b0:	f7ff ff9c 	bl	80153ec <_stop() [clone .isra.0]>
 80154b4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80154b8:	4240      	negs	r0, r0
 80154ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80154bc:	4826      	ldr	r0, [pc, #152]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154be:	f000 ffb6 	bl	801642e <i2c_start_on_bus>
 80154c2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80154c6:	4e24      	ldr	r6, [pc, #144]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154c8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80154cc:	4630      	mov	r0, r6
 80154ce:	f000 ffbd 	bl	801644c <i2c_flag_get>
 80154d2:	bb68      	cbnz	r0, 8015530 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 80154d4:	3d01      	subs	r5, #1
 80154d6:	d1f7      	bne.n	80154c8 <gd32_i2c_write(char const*, unsigned int)+0x34>
 80154d8:	e7ea      	b.n	80154b0 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80154da:	f240 5101 	movw	r1, #1281	; 0x501
 80154de:	481e      	ldr	r0, [pc, #120]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154e0:	f000 ffbc 	bl	801645c <i2c_flag_clear>
 80154e4:	f640 75ff 	movw	r5, #4095	; 0xfff
 80154e8:	4e1b      	ldr	r6, [pc, #108]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154ea:	f240 5107 	movw	r1, #1287	; 0x507
 80154ee:	4630      	mov	r0, r6
 80154f0:	f000 ffac 	bl	801644c <i2c_flag_get>
 80154f4:	2801      	cmp	r0, #1
 80154f6:	d114      	bne.n	8015522 <gd32_i2c_write(char const*, unsigned int)+0x8e>
 80154f8:	4e17      	ldr	r6, [pc, #92]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80154fa:	4427      	add	r7, r4
 80154fc:	42a7      	cmp	r7, r4
 80154fe:	d013      	beq.n	8015528 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8015500:	4630      	mov	r0, r6
 8015502:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015506:	f000 ff9c 	bl	8016442 <i2c_data_transmit>
 801550a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801550e:	f240 5102 	movw	r1, #1282	; 0x502
 8015512:	4630      	mov	r0, r6
 8015514:	f000 ff9a 	bl	801644c <i2c_flag_get>
 8015518:	2800      	cmp	r0, #0
 801551a:	d1ef      	bne.n	80154fc <gd32_i2c_write(char const*, unsigned int)+0x68>
 801551c:	3d01      	subs	r5, #1
 801551e:	d1f6      	bne.n	801550e <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8015520:	e7c6      	b.n	80154b0 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8015522:	3d01      	subs	r5, #1
 8015524:	d1e1      	bne.n	80154ea <gd32_i2c_write(char const*, unsigned int)+0x56>
 8015526:	e7c3      	b.n	80154b0 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8015528:	f7ff ff60 	bl	80153ec <_stop() [clone .isra.0]>
 801552c:	2000      	movs	r0, #0
 801552e:	e7c3      	b.n	80154b8 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8015530:	4b0a      	ldr	r3, [pc, #40]	; (801555c <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8015532:	f06f 0201 	mvn.w	r2, #1
 8015536:	7819      	ldrb	r1, [r3, #0]
 8015538:	4807      	ldr	r0, [pc, #28]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801553a:	f000 ff6b 	bl	8016414 <i2c_master_addressing>
 801553e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8015542:	4e05      	ldr	r6, [pc, #20]	; (8015558 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8015544:	f240 5101 	movw	r1, #1281	; 0x501
 8015548:	4630      	mov	r0, r6
 801554a:	f000 ff7f 	bl	801644c <i2c_flag_get>
 801554e:	2800      	cmp	r0, #0
 8015550:	d1c3      	bne.n	80154da <gd32_i2c_write(char const*, unsigned int)+0x46>
 8015552:	3d01      	subs	r5, #1
 8015554:	d1f6      	bne.n	8015544 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8015556:	e7ab      	b.n	80154b0 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8015558:	40005400 	andmi	r5, r0, r0, lsl #8
 801555c:	2000d3b4 			; <UNDEFINED> instruction: 0x2000d3b4

08015560 <gd32_i2c_read(char*, unsigned int)>:
 8015560:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8015564:	4680      	mov	r8, r0
 8015566:	460c      	mov	r4, r1
 8015568:	f640 76ff 	movw	r6, #4095	; 0xfff
 801556c:	4f49      	ldr	r7, [pc, #292]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801556e:	f240 6101 	movw	r1, #1537	; 0x601
 8015572:	4638      	mov	r0, r7
 8015574:	f000 ff6a 	bl	801644c <i2c_flag_get>
 8015578:	4605      	mov	r5, r0
 801557a:	b128      	cbz	r0, 8015588 <gd32_i2c_read(char*, unsigned int)+0x28>
 801557c:	3e01      	subs	r6, #1
 801557e:	d1f6      	bne.n	801556e <gd32_i2c_read(char*, unsigned int)+0xe>
 8015580:	f7ff ff34 	bl	80153ec <_stop() [clone .isra.0]>
 8015584:	2504      	movs	r5, #4
 8015586:	e082      	b.n	801568e <gd32_i2c_read(char*, unsigned int)+0x12e>
 8015588:	2c02      	cmp	r4, #2
 801558a:	d103      	bne.n	8015594 <gd32_i2c_read(char*, unsigned int)+0x34>
 801558c:	4601      	mov	r1, r0
 801558e:	4841      	ldr	r0, [pc, #260]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8015590:	f000 ff37 	bl	8016402 <i2c_ackpos_config>
 8015594:	483f      	ldr	r0, [pc, #252]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8015596:	f000 ff4a 	bl	801642e <i2c_start_on_bus>
 801559a:	f640 76ff 	movw	r6, #4095	; 0xfff
 801559e:	4f3d      	ldr	r7, [pc, #244]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155a0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80155a4:	4638      	mov	r0, r7
 80155a6:	f000 ff51 	bl	801644c <i2c_flag_get>
 80155aa:	b910      	cbnz	r0, 80155b2 <gd32_i2c_read(char*, unsigned int)+0x52>
 80155ac:	3e01      	subs	r6, #1
 80155ae:	d1f7      	bne.n	80155a0 <gd32_i2c_read(char*, unsigned int)+0x40>
 80155b0:	e7e6      	b.n	8015580 <gd32_i2c_read(char*, unsigned int)+0x20>
 80155b2:	4b39      	ldr	r3, [pc, #228]	; (8015698 <gd32_i2c_read(char*, unsigned int)+0x138>)
 80155b4:	2201      	movs	r2, #1
 80155b6:	7819      	ldrb	r1, [r3, #0]
 80155b8:	4836      	ldr	r0, [pc, #216]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155ba:	f000 ff2b 	bl	8016414 <i2c_master_addressing>
 80155be:	2c02      	cmp	r4, #2
 80155c0:	d803      	bhi.n	80155ca <gd32_i2c_read(char*, unsigned int)+0x6a>
 80155c2:	2100      	movs	r1, #0
 80155c4:	4833      	ldr	r0, [pc, #204]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155c6:	f000 ff13 	bl	80163f0 <i2c_ack_config>
 80155ca:	f640 76ff 	movw	r6, #4095	; 0xfff
 80155ce:	4f31      	ldr	r7, [pc, #196]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155d0:	f240 5101 	movw	r1, #1281	; 0x501
 80155d4:	4638      	mov	r0, r7
 80155d6:	f000 ff39 	bl	801644c <i2c_flag_get>
 80155da:	b910      	cbnz	r0, 80155e2 <gd32_i2c_read(char*, unsigned int)+0x82>
 80155dc:	3e01      	subs	r6, #1
 80155de:	d1f7      	bne.n	80155d0 <gd32_i2c_read(char*, unsigned int)+0x70>
 80155e0:	e7ce      	b.n	8015580 <gd32_i2c_read(char*, unsigned int)+0x20>
 80155e2:	f240 5101 	movw	r1, #1281	; 0x501
 80155e6:	482b      	ldr	r0, [pc, #172]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155e8:	f000 ff38 	bl	801645c <i2c_flag_clear>
 80155ec:	2c01      	cmp	r4, #1
 80155ee:	d102      	bne.n	80155f6 <gd32_i2c_read(char*, unsigned int)+0x96>
 80155f0:	4828      	ldr	r0, [pc, #160]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155f2:	f000 ff21 	bl	8016438 <i2c_stop_on_bus>
 80155f6:	f640 77ff 	movw	r7, #4095	; 0xfff
 80155fa:	4e26      	ldr	r6, [pc, #152]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 80155fc:	b3ac      	cbz	r4, 801566a <gd32_i2c_read(char*, unsigned int)+0x10a>
 80155fe:	2c03      	cmp	r4, #3
 8015600:	d121      	bne.n	8015646 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8015602:	f640 79ff 	movw	r9, #4095	; 0xfff
 8015606:	f240 5102 	movw	r1, #1282	; 0x502
 801560a:	4630      	mov	r0, r6
 801560c:	f000 ff1e 	bl	801644c <i2c_flag_get>
 8015610:	b918      	cbnz	r0, 801561a <gd32_i2c_read(char*, unsigned int)+0xba>
 8015612:	f1b9 0901 	subs.w	r9, r9, #1
 8015616:	d1f6      	bne.n	8015606 <gd32_i2c_read(char*, unsigned int)+0xa6>
 8015618:	e7b2      	b.n	8015580 <gd32_i2c_read(char*, unsigned int)+0x20>
 801561a:	2100      	movs	r1, #0
 801561c:	4630      	mov	r0, r6
 801561e:	f000 fee7 	bl	80163f0 <i2c_ack_config>
 8015622:	f240 5106 	movw	r1, #1286	; 0x506
 8015626:	4630      	mov	r0, r6
 8015628:	f000 ff10 	bl	801644c <i2c_flag_get>
 801562c:	b138      	cbz	r0, 801563e <gd32_i2c_read(char*, unsigned int)+0xde>
 801562e:	4630      	mov	r0, r6
 8015630:	f000 ff09 	bl	8016446 <i2c_data_receive>
 8015634:	f640 77ff 	movw	r7, #4095	; 0xfff
 8015638:	f808 0b01 	strb.w	r0, [r8], #1
 801563c:	3c01      	subs	r4, #1
 801563e:	3f01      	subs	r7, #1
 8015640:	2f00      	cmp	r7, #0
 8015642:	dcdb      	bgt.n	80155fc <gd32_i2c_read(char*, unsigned int)+0x9c>
 8015644:	e79c      	b.n	8015580 <gd32_i2c_read(char*, unsigned int)+0x20>
 8015646:	2c02      	cmp	r4, #2
 8015648:	d1eb      	bne.n	8015622 <gd32_i2c_read(char*, unsigned int)+0xc2>
 801564a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801564e:	f240 5102 	movw	r1, #1282	; 0x502
 8015652:	4630      	mov	r0, r6
 8015654:	f000 fefa 	bl	801644c <i2c_flag_get>
 8015658:	b918      	cbnz	r0, 8015662 <gd32_i2c_read(char*, unsigned int)+0x102>
 801565a:	f1b9 0901 	subs.w	r9, r9, #1
 801565e:	d1f6      	bne.n	801564e <gd32_i2c_read(char*, unsigned int)+0xee>
 8015660:	e78e      	b.n	8015580 <gd32_i2c_read(char*, unsigned int)+0x20>
 8015662:	4630      	mov	r0, r6
 8015664:	f000 fee8 	bl	8016438 <i2c_stop_on_bus>
 8015668:	e7db      	b.n	8015622 <gd32_i2c_read(char*, unsigned int)+0xc2>
 801566a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801566e:	4a0b      	ldr	r2, [pc, #44]	; (801569c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8015670:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8015674:	0589      	lsls	r1, r1, #22
 8015676:	d502      	bpl.n	801567e <gd32_i2c_read(char*, unsigned int)+0x11e>
 8015678:	3b01      	subs	r3, #1
 801567a:	d1f9      	bne.n	8015670 <gd32_i2c_read(char*, unsigned int)+0x110>
 801567c:	e782      	b.n	8015584 <gd32_i2c_read(char*, unsigned int)+0x24>
 801567e:	2101      	movs	r1, #1
 8015680:	4804      	ldr	r0, [pc, #16]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 8015682:	f000 feb5 	bl	80163f0 <i2c_ack_config>
 8015686:	2101      	movs	r1, #1
 8015688:	4802      	ldr	r0, [pc, #8]	; (8015694 <gd32_i2c_read(char*, unsigned int)+0x134>)
 801568a:	f000 feba 	bl	8016402 <i2c_ackpos_config>
 801568e:	4628      	mov	r0, r5
 8015690:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8015694:	40005400 	andmi	r5, r0, r0, lsl #8
 8015698:	2000d3b4 			; <UNDEFINED> instruction: 0x2000d3b4
 801569c:	40005000 	andmi	r5, r0, r0

080156a0 <gd32_uart_begin>:
 80156a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80156a2:	461d      	mov	r5, r3
 80156a4:	4b81      	ldr	r3, [pc, #516]	; (80158ac <gd32_uart_begin+0x20c>)
 80156a6:	4604      	mov	r4, r0
 80156a8:	4298      	cmp	r0, r3
 80156aa:	460f      	mov	r7, r1
 80156ac:	4616      	mov	r6, r2
 80156ae:	d05b      	beq.n	8015768 <gd32_uart_begin+0xc8>
 80156b0:	d80b      	bhi.n	80156ca <gd32_uart_begin+0x2a>
 80156b2:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80156b6:	4298      	cmp	r0, r3
 80156b8:	d045      	beq.n	8015746 <gd32_uart_begin+0xa6>
 80156ba:	d84b      	bhi.n	8015754 <gd32_uart_begin+0xb4>
 80156bc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80156c0:	4298      	cmp	r0, r3
 80156c2:	d039      	beq.n	8015738 <gd32_uart_begin+0x98>
 80156c4:	f240 7012 	movw	r0, #1810	; 0x712
 80156c8:	e038      	b.n	801573c <gd32_uart_begin+0x9c>
 80156ca:	4b79      	ldr	r3, [pc, #484]	; (80158b0 <gd32_uart_begin+0x210>)
 80156cc:	4298      	cmp	r0, r3
 80156ce:	d006      	beq.n	80156de <gd32_uart_begin+0x3e>
 80156d0:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80156d4:	4298      	cmp	r0, r3
 80156d6:	d044      	beq.n	8015762 <gd32_uart_begin+0xc2>
 80156d8:	f641 201f 	movw	r0, #6687	; 0x1a1f
 80156dc:	e046      	b.n	801576c <gd32_uart_begin+0xcc>
 80156de:	f240 600e 	movw	r0, #1550	; 0x60e
 80156e2:	f7ff f9a1 	bl	8014a28 <rcu_periph_clock_enable>
 80156e6:	f240 6002 	movw	r0, #1538	; 0x602
 80156ea:	f7ff f99d 	bl	8014a28 <rcu_periph_clock_enable>
 80156ee:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80156f2:	f7ff f999 	bl	8014a28 <rcu_periph_clock_enable>
 80156f6:	4b6d      	ldr	r3, [pc, #436]	; (80158ac <gd32_uart_begin+0x20c>)
 80156f8:	429c      	cmp	r4, r3
 80156fa:	f000 80c5 	beq.w	8015888 <gd32_uart_begin+0x1e8>
 80156fe:	d83a      	bhi.n	8015776 <gd32_uart_begin+0xd6>
 8015700:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8015704:	429c      	cmp	r4, r3
 8015706:	f000 809e 	beq.w	8015846 <gd32_uart_begin+0x1a6>
 801570a:	f200 80a9 	bhi.w	8015860 <gd32_uart_begin+0x1c0>
 801570e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8015712:	429c      	cmp	r4, r3
 8015714:	d04d      	beq.n	80157b2 <gd32_uart_begin+0x112>
 8015716:	f44f 7380 	mov.w	r3, #256	; 0x100
 801571a:	2203      	movs	r2, #3
 801571c:	2118      	movs	r1, #24
 801571e:	4865      	ldr	r0, [pc, #404]	; (80158b4 <gd32_uart_begin+0x214>)
 8015720:	f7ff f8e6 	bl	80148f0 <gpio_init>
 8015724:	2104      	movs	r1, #4
 8015726:	4863      	ldr	r0, [pc, #396]	; (80158b4 <gd32_uart_begin+0x214>)
 8015728:	f44f 7300 	mov.w	r3, #512	; 0x200
 801572c:	2203      	movs	r2, #3
 801572e:	f7ff f8df 	bl	80148f0 <gpio_init>
 8015732:	2101      	movs	r1, #1
 8015734:	4860      	ldr	r0, [pc, #384]	; (80158b8 <gd32_uart_begin+0x218>)
 8015736:	e04a      	b.n	80157ce <gd32_uart_begin+0x12e>
 8015738:	f240 7011 	movw	r0, #1809	; 0x711
 801573c:	f7ff f974 	bl	8014a28 <rcu_periph_clock_enable>
 8015740:	f240 6005 	movw	r0, #1541	; 0x605
 8015744:	e7d1      	b.n	80156ea <gd32_uart_begin+0x4a>
 8015746:	f240 7013 	movw	r0, #1811	; 0x713
 801574a:	f7ff f96d 	bl	8014a28 <rcu_periph_clock_enable>
 801574e:	f240 6004 	movw	r0, #1540	; 0x604
 8015752:	e7ca      	b.n	80156ea <gd32_uart_begin+0x4a>
 8015754:	f240 7014 	movw	r0, #1812	; 0x714
 8015758:	f7ff f966 	bl	8014a28 <rcu_periph_clock_enable>
 801575c:	f240 6004 	movw	r0, #1540	; 0x604
 8015760:	e7ec      	b.n	801573c <gd32_uart_begin+0x9c>
 8015762:	f641 1018 	movw	r0, #6424	; 0x1918
 8015766:	e7f0      	b.n	801574a <gd32_uart_begin+0xaa>
 8015768:	f641 201e 	movw	r0, #6686	; 0x1a1e
 801576c:	f7ff f95c 	bl	8014a28 <rcu_periph_clock_enable>
 8015770:	f240 6006 	movw	r0, #1542	; 0x606
 8015774:	e7b9      	b.n	80156ea <gd32_uart_begin+0x4a>
 8015776:	4b4e      	ldr	r3, [pc, #312]	; (80158b0 <gd32_uart_begin+0x210>)
 8015778:	429c      	cmp	r4, r3
 801577a:	d00b      	beq.n	8015794 <gd32_uart_begin+0xf4>
 801577c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8015780:	429c      	cmp	r4, r3
 8015782:	d079      	beq.n	8015878 <gd32_uart_begin+0x1d8>
 8015784:	2302      	movs	r3, #2
 8015786:	2203      	movs	r2, #3
 8015788:	2118      	movs	r1, #24
 801578a:	484c      	ldr	r0, [pc, #304]	; (80158bc <gd32_uart_begin+0x21c>)
 801578c:	f7ff f8b0 	bl	80148f0 <gpio_init>
 8015790:	2301      	movs	r3, #1
 8015792:	e081      	b.n	8015898 <gd32_uart_begin+0x1f8>
 8015794:	f44f 7300 	mov.w	r3, #512	; 0x200
 8015798:	2203      	movs	r2, #3
 801579a:	2118      	movs	r1, #24
 801579c:	4848      	ldr	r0, [pc, #288]	; (80158c0 <gd32_uart_begin+0x220>)
 801579e:	f7ff f8a7 	bl	80148f0 <gpio_init>
 80157a2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80157a6:	2203      	movs	r2, #3
 80157a8:	2104      	movs	r1, #4
 80157aa:	4845      	ldr	r0, [pc, #276]	; (80158c0 <gd32_uart_begin+0x220>)
 80157ac:	f7ff f8a0 	bl	80148f0 <gpio_init>
 80157b0:	e00f      	b.n	80157d2 <gd32_uart_begin+0x132>
 80157b2:	2320      	movs	r3, #32
 80157b4:	2203      	movs	r2, #3
 80157b6:	2118      	movs	r1, #24
 80157b8:	483e      	ldr	r0, [pc, #248]	; (80158b4 <gd32_uart_begin+0x214>)
 80157ba:	f7ff f899 	bl	80148f0 <gpio_init>
 80157be:	2104      	movs	r1, #4
 80157c0:	483c      	ldr	r0, [pc, #240]	; (80158b4 <gd32_uart_begin+0x214>)
 80157c2:	2340      	movs	r3, #64	; 0x40
 80157c4:	2203      	movs	r2, #3
 80157c6:	f7ff f893 	bl	80148f0 <gpio_init>
 80157ca:	2101      	movs	r1, #1
 80157cc:	2008      	movs	r0, #8
 80157ce:	f7ff f8e7 	bl	80149a0 <gpio_pin_remap_config>
 80157d2:	4620      	mov	r0, r4
 80157d4:	f7ff fc02 	bl	8014fdc <usart_deinit>
 80157d8:	68e3      	ldr	r3, [r4, #12]
 80157da:	4639      	mov	r1, r7
 80157dc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80157e0:	60e3      	str	r3, [r4, #12]
 80157e2:	4620      	mov	r0, r4
 80157e4:	f7ff fc5c 	bl	80150a0 <usart_baudrate_set>
 80157e8:	2e09      	cmp	r6, #9
 80157ea:	bf0c      	ite	eq
 80157ec:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 80157f0:	2100      	movne	r1, #0
 80157f2:	4620      	mov	r0, r4
 80157f4:	f7ff fc90 	bl	8015118 <usart_word_length_set>
 80157f8:	9b06      	ldr	r3, [sp, #24]
 80157fa:	4620      	mov	r0, r4
 80157fc:	2b02      	cmp	r3, #2
 80157fe:	bf0c      	ite	eq
 8015800:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8015804:	2100      	movne	r1, #0
 8015806:	f7ff fc8f 	bl	8015128 <usart_stop_bit_set>
 801580a:	2d01      	cmp	r5, #1
 801580c:	d048      	beq.n	80158a0 <gd32_uart_begin+0x200>
 801580e:	2d02      	cmp	r5, #2
 8015810:	d149      	bne.n	80158a6 <gd32_uart_begin+0x206>
 8015812:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8015816:	4620      	mov	r0, r4
 8015818:	f7ff fc76 	bl	8015108 <usart_parity_config>
 801581c:	2100      	movs	r1, #0
 801581e:	4620      	mov	r0, r4
 8015820:	f7ff fc96 	bl	8015150 <usart_hardware_flow_rts_config>
 8015824:	2100      	movs	r1, #0
 8015826:	4620      	mov	r0, r4
 8015828:	f7ff fc98 	bl	801515c <usart_hardware_flow_cts_config>
 801582c:	2104      	movs	r1, #4
 801582e:	4620      	mov	r0, r4
 8015830:	f7ff fc88 	bl	8015144 <usart_receive_config>
 8015834:	2108      	movs	r1, #8
 8015836:	4620      	mov	r0, r4
 8015838:	f7ff fc7e 	bl	8015138 <usart_transmit_config>
 801583c:	68e3      	ldr	r3, [r4, #12]
 801583e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8015842:	60e3      	str	r3, [r4, #12]
 8015844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015846:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801584a:	2203      	movs	r2, #3
 801584c:	2118      	movs	r1, #24
 801584e:	481d      	ldr	r0, [pc, #116]	; (80158c4 <gd32_uart_begin+0x224>)
 8015850:	f7ff f84e 	bl	80148f0 <gpio_init>
 8015854:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8015858:	2203      	movs	r2, #3
 801585a:	2104      	movs	r1, #4
 801585c:	4819      	ldr	r0, [pc, #100]	; (80158c4 <gd32_uart_begin+0x224>)
 801585e:	e7a5      	b.n	80157ac <gd32_uart_begin+0x10c>
 8015860:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8015864:	2203      	movs	r2, #3
 8015866:	2118      	movs	r1, #24
 8015868:	4816      	ldr	r0, [pc, #88]	; (80158c4 <gd32_uart_begin+0x224>)
 801586a:	f7ff f841 	bl	80148f0 <gpio_init>
 801586e:	2304      	movs	r3, #4
 8015870:	2203      	movs	r2, #3
 8015872:	4619      	mov	r1, r3
 8015874:	480f      	ldr	r0, [pc, #60]	; (80158b4 <gd32_uart_begin+0x214>)
 8015876:	e799      	b.n	80157ac <gd32_uart_begin+0x10c>
 8015878:	2340      	movs	r3, #64	; 0x40
 801587a:	2203      	movs	r2, #3
 801587c:	2118      	movs	r1, #24
 801587e:	4811      	ldr	r0, [pc, #68]	; (80158c4 <gd32_uart_begin+0x224>)
 8015880:	f7ff f836 	bl	80148f0 <gpio_init>
 8015884:	2380      	movs	r3, #128	; 0x80
 8015886:	e7e7      	b.n	8015858 <gd32_uart_begin+0x1b8>
 8015888:	f44f 7380 	mov.w	r3, #256	; 0x100
 801588c:	2203      	movs	r2, #3
 801588e:	2118      	movs	r1, #24
 8015890:	480a      	ldr	r0, [pc, #40]	; (80158bc <gd32_uart_begin+0x21c>)
 8015892:	f7ff f82d 	bl	80148f0 <gpio_init>
 8015896:	2380      	movs	r3, #128	; 0x80
 8015898:	2203      	movs	r2, #3
 801589a:	2104      	movs	r1, #4
 801589c:	4807      	ldr	r0, [pc, #28]	; (80158bc <gd32_uart_begin+0x21c>)
 801589e:	e785      	b.n	80157ac <gd32_uart_begin+0x10c>
 80158a0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80158a4:	e7b7      	b.n	8015816 <gd32_uart_begin+0x176>
 80158a6:	2100      	movs	r1, #0
 80158a8:	e7b5      	b.n	8015816 <gd32_uart_begin+0x176>
 80158aa:	bf00      	nop
 80158ac:	40007800 	andmi	r7, r0, r0, lsl #16
 80158b0:	40013800 	andmi	r3, r1, r0, lsl #16
 80158b4:	40011400 	andmi	r1, r1, r0, lsl #8
 80158b8:	00140030 	andseq	r0, r4, r0, lsr r0
 80158bc:	40011800 	andmi	r1, r1, r0, lsl #16
 80158c0:	40010800 	andmi	r0, r1, r0, lsl #16
 80158c4:	40011000 	andmi	r1, r1, r0

080158c8 <micros_init()>:
 80158c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80158ca:	2400      	movs	r4, #0
 80158cc:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 80158d0:	4d22      	ldr	r5, [pc, #136]	; (801595c <micros_init()+0x94>)
 80158d2:	f240 6013 	movw	r0, #1555	; 0x613
 80158d6:	f7ff f8a7 	bl	8014a28 <rcu_periph_clock_enable>
 80158da:	4628      	mov	r0, r5
 80158dc:	f7ff fa18 	bl	8014d10 <timer_deinit>
 80158e0:	4b1f      	ldr	r3, [pc, #124]	; (8015960 <micros_init()+0x98>)
 80158e2:	4628      	mov	r0, r5
 80158e4:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 80158e8:	4669      	mov	r1, sp
 80158ea:	9400      	str	r4, [sp, #0]
 80158ec:	f8ad 4004 	strh.w	r4, [sp, #4]
 80158f0:	9602      	str	r6, [sp, #8]
 80158f2:	f8ad 400c 	strh.w	r4, [sp, #12]
 80158f6:	f7ff fab1 	bl	8014e5c <timer_init>
 80158fa:	4628      	mov	r0, r5
 80158fc:	4621      	mov	r1, r4
 80158fe:	f7ff fb56 	bl	8014fae <timer_master_slave_mode_config>
 8015902:	4628      	mov	r0, r5
 8015904:	2107      	movs	r1, #7
 8015906:	f7ff fb4a 	bl	8014f9e <timer_slave_mode_select>
 801590a:	2120      	movs	r1, #32
 801590c:	4628      	mov	r0, r5
 801590e:	f7ff fb36 	bl	8014f7e <timer_input_trigger_source_select>
 8015912:	4628      	mov	r0, r5
 8015914:	f7ff fafa 	bl	8014f0c <timer_enable>
 8015918:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 801591c:	f240 6014 	movw	r0, #1556	; 0x614
 8015920:	f7ff f882 	bl	8014a28 <rcu_periph_clock_enable>
 8015924:	4628      	mov	r0, r5
 8015926:	f7ff f9f3 	bl	8014d10 <timer_deinit>
 801592a:	2377      	movs	r3, #119	; 0x77
 801592c:	626c      	str	r4, [r5, #36]	; 0x24
 801592e:	4669      	mov	r1, sp
 8015930:	4628      	mov	r0, r5
 8015932:	9300      	str	r3, [sp, #0]
 8015934:	f8ad 4004 	strh.w	r4, [sp, #4]
 8015938:	9602      	str	r6, [sp, #8]
 801593a:	f8ad 400c 	strh.w	r4, [sp, #12]
 801593e:	f7ff fa8d 	bl	8014e5c <timer_init>
 8015942:	4621      	mov	r1, r4
 8015944:	4628      	mov	r0, r5
 8015946:	f7ff fb32 	bl	8014fae <timer_master_slave_mode_config>
 801594a:	2120      	movs	r1, #32
 801594c:	4628      	mov	r0, r5
 801594e:	f7ff fb1e 	bl	8014f8e <timer_master_output_trigger_source_select>
 8015952:	4628      	mov	r0, r5
 8015954:	f7ff fada 	bl	8014f0c <timer_enable>
 8015958:	b004      	add	sp, #16
 801595a:	bd70      	pop	{r4, r5, r6, pc}
 801595c:	40014c00 	andmi	r4, r1, r0, lsl #24
 8015960:	40014000 	andmi	r4, r1, r0

08015964 <udelay_init()>:
 8015964:	4a07      	ldr	r2, [pc, #28]	; (8015984 <udelay_init()+0x20>)
 8015966:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 801596a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 801596e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8015972:	2200      	movs	r2, #0
 8015974:	4b04      	ldr	r3, [pc, #16]	; (8015988 <udelay_init()+0x24>)
 8015976:	605a      	str	r2, [r3, #4]
 8015978:	681a      	ldr	r2, [r3, #0]
 801597a:	f042 0201 	orr.w	r2, r2, #1
 801597e:	601a      	str	r2, [r3, #0]
 8015980:	4770      	bx	lr
 8015982:	bf00      	nop
 8015984:	e000ed00 	and	lr, r0, r0, lsl #26
 8015988:	e0001000 	and	r1, r0, r0

0801598c <udelay(unsigned int, unsigned int)>:
 801598c:	2378      	movs	r3, #120	; 0x78
 801598e:	b510      	push	{r4, lr}
 8015990:	4358      	muls	r0, r3
 8015992:	b909      	cbnz	r1, 8015998 <udelay(unsigned int, unsigned int)+0xc>
 8015994:	4b08      	ldr	r3, [pc, #32]	; (80159b8 <udelay(unsigned int, unsigned int)+0x2c>)
 8015996:	6859      	ldr	r1, [r3, #4]
 8015998:	2300      	movs	r3, #0
 801599a:	4c07      	ldr	r4, [pc, #28]	; (80159b8 <udelay(unsigned int, unsigned int)+0x2c>)
 801599c:	6862      	ldr	r2, [r4, #4]
 801599e:	4291      	cmp	r1, r2
 80159a0:	d0fc      	beq.n	801599c <udelay(unsigned int, unsigned int)+0x10>
 80159a2:	bf28      	it	cs
 80159a4:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 80159a8:	1a5b      	subs	r3, r3, r1
 80159aa:	4413      	add	r3, r2
 80159ac:	4283      	cmp	r3, r0
 80159ae:	d300      	bcc.n	80159b2 <udelay(unsigned int, unsigned int)+0x26>
 80159b0:	bd10      	pop	{r4, pc}
 80159b2:	4611      	mov	r1, r2
 80159b4:	e7f2      	b.n	801599c <udelay(unsigned int, unsigned int)+0x10>
 80159b6:	bf00      	nop
 80159b8:	e0001000 	and	r1, r0, r0

080159bc <mac_address_get>:
 80159bc:	2102      	movs	r1, #2
 80159be:	4a07      	ldr	r2, [pc, #28]	; (80159dc <mac_address_get+0x20>)
 80159c0:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80159c4:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80159c8:	7001      	strb	r1, [r0, #0]
 80159ca:	7042      	strb	r2, [r0, #1]
 80159cc:	0e1a      	lsrs	r2, r3, #24
 80159ce:	7082      	strb	r2, [r0, #2]
 80159d0:	0c1a      	lsrs	r2, r3, #16
 80159d2:	70c2      	strb	r2, [r0, #3]
 80159d4:	0a1a      	lsrs	r2, r3, #8
 80159d6:	7102      	strb	r2, [r0, #4]
 80159d8:	7143      	strb	r3, [r0, #5]
 80159da:	4770      	bx	lr
 80159dc:	1ffff000 	svcne	0x00fff000

080159e0 <adc_mode_config>:
 80159e0:	4b06      	ldr	r3, [pc, #24]	; (80159fc <adc_mode_config+0x1c>)
 80159e2:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 80159e6:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 80159ea:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 80159ee:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80159f2:	4302      	orrs	r2, r0
 80159f4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 80159f8:	4770      	bx	lr
 80159fa:	bf00      	nop
 80159fc:	40012000 	andmi	r2, r1, r0

08015a00 <adc_special_function_config>:
 8015a00:	b510      	push	{r4, lr}
 8015a02:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8015a06:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8015a0a:	f001 0102 	and.w	r1, r1, #2
 8015a0e:	b17a      	cbz	r2, 8015a30 <adc_special_function_config+0x30>
 8015a10:	b11b      	cbz	r3, 8015a1a <adc_special_function_config+0x1a>
 8015a12:	6843      	ldr	r3, [r0, #4]
 8015a14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015a18:	6043      	str	r3, [r0, #4]
 8015a1a:	b11c      	cbz	r4, 8015a24 <adc_special_function_config+0x24>
 8015a1c:	6843      	ldr	r3, [r0, #4]
 8015a1e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8015a22:	6043      	str	r3, [r0, #4]
 8015a24:	b119      	cbz	r1, 8015a2e <adc_special_function_config+0x2e>
 8015a26:	6883      	ldr	r3, [r0, #8]
 8015a28:	f043 0302 	orr.w	r3, r3, #2
 8015a2c:	6083      	str	r3, [r0, #8]
 8015a2e:	bd10      	pop	{r4, pc}
 8015a30:	b11b      	cbz	r3, 8015a3a <adc_special_function_config+0x3a>
 8015a32:	6843      	ldr	r3, [r0, #4]
 8015a34:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8015a38:	6043      	str	r3, [r0, #4]
 8015a3a:	b11c      	cbz	r4, 8015a44 <adc_special_function_config+0x44>
 8015a3c:	6843      	ldr	r3, [r0, #4]
 8015a3e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8015a42:	6043      	str	r3, [r0, #4]
 8015a44:	2900      	cmp	r1, #0
 8015a46:	d0f2      	beq.n	8015a2e <adc_special_function_config+0x2e>
 8015a48:	6883      	ldr	r3, [r0, #8]
 8015a4a:	f023 0302 	bic.w	r3, r3, #2
 8015a4e:	e7ed      	b.n	8015a2c <adc_special_function_config+0x2c>

08015a50 <adc_data_alignment_config>:
 8015a50:	6883      	ldr	r3, [r0, #8]
 8015a52:	b119      	cbz	r1, 8015a5c <adc_data_alignment_config+0xc>
 8015a54:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8015a58:	6083      	str	r3, [r0, #8]
 8015a5a:	4770      	bx	lr
 8015a5c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8015a60:	e7fa      	b.n	8015a58 <adc_data_alignment_config+0x8>

08015a62 <adc_enable>:
 8015a62:	6883      	ldr	r3, [r0, #8]
 8015a64:	07db      	lsls	r3, r3, #31
 8015a66:	bf5e      	ittt	pl
 8015a68:	6883      	ldrpl	r3, [r0, #8]
 8015a6a:	f043 0301 	orrpl.w	r3, r3, #1
 8015a6e:	6083      	strpl	r3, [r0, #8]
 8015a70:	4770      	bx	lr

08015a72 <adc_calibration_enable>:
 8015a72:	6883      	ldr	r3, [r0, #8]
 8015a74:	f100 0208 	add.w	r2, r0, #8
 8015a78:	f043 0308 	orr.w	r3, r3, #8
 8015a7c:	6083      	str	r3, [r0, #8]
 8015a7e:	6813      	ldr	r3, [r2, #0]
 8015a80:	0719      	lsls	r1, r3, #28
 8015a82:	d4fc      	bmi.n	8015a7e <adc_calibration_enable+0xc>
 8015a84:	6883      	ldr	r3, [r0, #8]
 8015a86:	f043 0304 	orr.w	r3, r3, #4
 8015a8a:	6083      	str	r3, [r0, #8]
 8015a8c:	6813      	ldr	r3, [r2, #0]
 8015a8e:	075b      	lsls	r3, r3, #29
 8015a90:	d4fc      	bmi.n	8015a8c <adc_calibration_enable+0x1a>
 8015a92:	4770      	bx	lr

08015a94 <adc_tempsensor_vrefint_enable>:
 8015a94:	4a03      	ldr	r2, [pc, #12]	; (8015aa4 <adc_tempsensor_vrefint_enable+0x10>)
 8015a96:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8015a9a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8015a9e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8015aa2:	4770      	bx	lr
 8015aa4:	40012000 	andmi	r2, r1, r0

08015aa8 <adc_channel_length_config>:
 8015aa8:	2901      	cmp	r1, #1
 8015aaa:	d002      	beq.n	8015ab2 <adc_channel_length_config+0xa>
 8015aac:	2902      	cmp	r1, #2
 8015aae:	d00c      	beq.n	8015aca <adc_channel_length_config+0x22>
 8015ab0:	4770      	bx	lr
 8015ab2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015ab4:	3a01      	subs	r2, #1
 8015ab6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8015aba:	62c3      	str	r3, [r0, #44]	; 0x2c
 8015abc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8015abe:	0512      	lsls	r2, r2, #20
 8015ac0:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8015ac4:	431a      	orrs	r2, r3
 8015ac6:	62c2      	str	r2, [r0, #44]	; 0x2c
 8015ac8:	4770      	bx	lr
 8015aca:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8015acc:	3a01      	subs	r2, #1
 8015ace:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8015ad2:	6383      	str	r3, [r0, #56]	; 0x38
 8015ad4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8015ad6:	0512      	lsls	r2, r2, #20
 8015ad8:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8015adc:	431a      	orrs	r2, r3
 8015ade:	6382      	str	r2, [r0, #56]	; 0x38
 8015ae0:	4770      	bx	lr

08015ae2 <adc_inserted_channel_config>:
 8015ae2:	b530      	push	{r4, r5, lr}
 8015ae4:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8015ae6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8015ae8:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8015aec:	1a61      	subs	r1, r4, r1
 8015aee:	f06f 0404 	mvn.w	r4, #4
 8015af2:	4361      	muls	r1, r4
 8015af4:	241f      	movs	r4, #31
 8015af6:	310f      	adds	r1, #15
 8015af8:	408c      	lsls	r4, r1
 8015afa:	ea25 0504 	bic.w	r5, r5, r4
 8015afe:	fa02 f101 	lsl.w	r1, r2, r1
 8015b02:	4329      	orrs	r1, r5
 8015b04:	2a09      	cmp	r2, #9
 8015b06:	6381      	str	r1, [r0, #56]	; 0x38
 8015b08:	d80b      	bhi.n	8015b22 <adc_inserted_channel_config+0x40>
 8015b0a:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8015b0e:	2207      	movs	r2, #7
 8015b10:	6904      	ldr	r4, [r0, #16]
 8015b12:	408a      	lsls	r2, r1
 8015b14:	ea24 0402 	bic.w	r4, r4, r2
 8015b18:	fa03 f201 	lsl.w	r2, r3, r1
 8015b1c:	4322      	orrs	r2, r4
 8015b1e:	6102      	str	r2, [r0, #16]
 8015b20:	bd30      	pop	{r4, r5, pc}
 8015b22:	2a11      	cmp	r2, #17
 8015b24:	d8fc      	bhi.n	8015b20 <adc_inserted_channel_config+0x3e>
 8015b26:	2407      	movs	r4, #7
 8015b28:	3a0a      	subs	r2, #10
 8015b2a:	68c1      	ldr	r1, [r0, #12]
 8015b2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b30:	4094      	lsls	r4, r2
 8015b32:	ea21 0104 	bic.w	r1, r1, r4
 8015b36:	fa03 f202 	lsl.w	r2, r3, r2
 8015b3a:	430a      	orrs	r2, r1
 8015b3c:	60c2      	str	r2, [r0, #12]
 8015b3e:	e7ef      	b.n	8015b20 <adc_inserted_channel_config+0x3e>

08015b40 <adc_external_trigger_source_config>:
 8015b40:	2901      	cmp	r1, #1
 8015b42:	d002      	beq.n	8015b4a <adc_external_trigger_source_config+0xa>
 8015b44:	2902      	cmp	r1, #2
 8015b46:	d008      	beq.n	8015b5a <adc_external_trigger_source_config+0x1a>
 8015b48:	4770      	bx	lr
 8015b4a:	6883      	ldr	r3, [r0, #8]
 8015b4c:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8015b50:	6083      	str	r3, [r0, #8]
 8015b52:	6883      	ldr	r3, [r0, #8]
 8015b54:	431a      	orrs	r2, r3
 8015b56:	6082      	str	r2, [r0, #8]
 8015b58:	4770      	bx	lr
 8015b5a:	6883      	ldr	r3, [r0, #8]
 8015b5c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8015b60:	e7f6      	b.n	8015b50 <adc_external_trigger_source_config+0x10>

08015b62 <adc_external_trigger_config>:
 8015b62:	f001 0301 	and.w	r3, r1, #1
 8015b66:	f001 0102 	and.w	r1, r1, #2
 8015b6a:	b152      	cbz	r2, 8015b82 <adc_external_trigger_config+0x20>
 8015b6c:	b11b      	cbz	r3, 8015b76 <adc_external_trigger_config+0x14>
 8015b6e:	6883      	ldr	r3, [r0, #8]
 8015b70:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8015b74:	6083      	str	r3, [r0, #8]
 8015b76:	b119      	cbz	r1, 8015b80 <adc_external_trigger_config+0x1e>
 8015b78:	6883      	ldr	r3, [r0, #8]
 8015b7a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8015b7e:	6083      	str	r3, [r0, #8]
 8015b80:	4770      	bx	lr
 8015b82:	b11b      	cbz	r3, 8015b8c <adc_external_trigger_config+0x2a>
 8015b84:	6883      	ldr	r3, [r0, #8]
 8015b86:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8015b8a:	6083      	str	r3, [r0, #8]
 8015b8c:	2900      	cmp	r1, #0
 8015b8e:	d0f7      	beq.n	8015b80 <adc_external_trigger_config+0x1e>
 8015b90:	6883      	ldr	r3, [r0, #8]
 8015b92:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8015b96:	e7f2      	b.n	8015b7e <adc_external_trigger_config+0x1c>

08015b98 <adc_software_trigger_enable>:
 8015b98:	07ca      	lsls	r2, r1, #31
 8015b9a:	bf42      	ittt	mi
 8015b9c:	6883      	ldrmi	r3, [r0, #8]
 8015b9e:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8015ba2:	6083      	strmi	r3, [r0, #8]
 8015ba4:	078b      	lsls	r3, r1, #30
 8015ba6:	bf42      	ittt	mi
 8015ba8:	6883      	ldrmi	r3, [r0, #8]
 8015baa:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8015bae:	6083      	strmi	r3, [r0, #8]
 8015bb0:	4770      	bx	lr

08015bb2 <enet_delay>:
 8015bb2:	2300      	movs	r3, #0
 8015bb4:	b082      	sub	sp, #8
 8015bb6:	9301      	str	r3, [sp, #4]
 8015bb8:	9001      	str	r0, [sp, #4]
 8015bba:	9b01      	ldr	r3, [sp, #4]
 8015bbc:	b90b      	cbnz	r3, 8015bc2 <enet_delay+0x10>
 8015bbe:	b002      	add	sp, #8
 8015bc0:	4770      	bx	lr
 8015bc2:	9b01      	ldr	r3, [sp, #4]
 8015bc4:	3b01      	subs	r3, #1
 8015bc6:	9301      	str	r3, [sp, #4]
 8015bc8:	e7f7      	b.n	8015bba <enet_delay+0x8>
	...

08015bcc <enet_software_reset>:
 8015bcc:	4b07      	ldr	r3, [pc, #28]	; (8015bec <enet_software_reset+0x20>)
 8015bce:	681a      	ldr	r2, [r3, #0]
 8015bd0:	f042 0201 	orr.w	r2, r2, #1
 8015bd4:	601a      	str	r2, [r3, #0]
 8015bd6:	4a06      	ldr	r2, [pc, #24]	; (8015bf0 <enet_software_reset+0x24>)
 8015bd8:	6819      	ldr	r1, [r3, #0]
 8015bda:	07c9      	lsls	r1, r1, #31
 8015bdc:	d501      	bpl.n	8015be2 <enet_software_reset+0x16>
 8015bde:	3a01      	subs	r2, #1
 8015be0:	d1fa      	bne.n	8015bd8 <enet_software_reset+0xc>
 8015be2:	6818      	ldr	r0, [r3, #0]
 8015be4:	43c0      	mvns	r0, r0
 8015be6:	f000 0001 	and.w	r0, r0, #1
 8015bea:	4770      	bx	lr
 8015bec:	40029000 	andmi	r9, r2, r0
 8015bf0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015bf4 <enet_descriptors_chain_init>:
 8015bf4:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8015bf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015bfa:	4a19      	ldr	r2, [pc, #100]	; (8015c60 <enet_descriptors_chain_init+0x6c>)
 8015bfc:	d125      	bne.n	8015c4a <enet_descriptors_chain_init+0x56>
 8015bfe:	2500      	movs	r5, #0
 8015c00:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8015c04:	2002      	movs	r0, #2
 8015c06:	4b17      	ldr	r3, [pc, #92]	; (8015c64 <enet_descriptors_chain_init+0x70>)
 8015c08:	4c17      	ldr	r4, [pc, #92]	; (8015c68 <enet_descriptors_chain_init+0x74>)
 8015c0a:	6113      	str	r3, [r2, #16]
 8015c0c:	4a17      	ldr	r2, [pc, #92]	; (8015c6c <enet_descriptors_chain_init+0x78>)
 8015c0e:	6013      	str	r3, [r2, #0]
 8015c10:	2200      	movs	r2, #0
 8015c12:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8015c16:	4916      	ldr	r1, [pc, #88]	; (8015c70 <enet_descriptors_chain_init+0x7c>)
 8015c18:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8015c1c:	600a      	str	r2, [r1, #0]
 8015c1e:	4915      	ldr	r1, [pc, #84]	; (8015c74 <enet_descriptors_chain_init+0x80>)
 8015c20:	600a      	str	r2, [r1, #0]
 8015c22:	f103 0110 	add.w	r1, r3, #16
 8015c26:	fb0e 4702 	mla	r7, lr, r2, r4
 8015c2a:	f841 7c08 	str.w	r7, [r1, #-8]
 8015c2e:	4594      	cmp	ip, r2
 8015c30:	bf94      	ite	ls
 8015c32:	461f      	movls	r7, r3
 8015c34:	460f      	movhi	r7, r1
 8015c36:	3201      	adds	r2, #1
 8015c38:	4290      	cmp	r0, r2
 8015c3a:	e941 6504 	strd	r6, r5, [r1, #-16]
 8015c3e:	f841 7c04 	str.w	r7, [r1, #-4]
 8015c42:	f101 0110 	add.w	r1, r1, #16
 8015c46:	d1ee      	bne.n	8015c26 <enet_descriptors_chain_init+0x32>
 8015c48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015c4a:	4b0b      	ldr	r3, [pc, #44]	; (8015c78 <enet_descriptors_chain_init+0x84>)
 8015c4c:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8015c50:	60d3      	str	r3, [r2, #12]
 8015c52:	4a0a      	ldr	r2, [pc, #40]	; (8015c7c <enet_descriptors_chain_init+0x88>)
 8015c54:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8015c58:	200a      	movs	r0, #10
 8015c5a:	4c09      	ldr	r4, [pc, #36]	; (8015c80 <enet_descriptors_chain_init+0x8c>)
 8015c5c:	6013      	str	r3, [r2, #0]
 8015c5e:	e7d7      	b.n	8015c10 <enet_descriptors_chain_init+0x1c>
 8015c60:	40029000 	andmi	r9, r2, r0
 8015c64:	20011c14 	andcs	r1, r1, r4, lsl ip
 8015c68:	2001102c 	andcs	r1, r1, ip, lsr #32
 8015c6c:	2000d3c4 	andcs	sp, r0, r4, asr #7
 8015c70:	2000d3b8 			; <UNDEFINED> instruction: 0x2000d3b8
 8015c74:	2000d3bc 			; <UNDEFINED> instruction: 0x2000d3bc
 8015c78:	20010f8c 	andcs	r0, r1, ip, lsl #31
 8015c7c:	2000d3c0 	andcs	sp, r0, r0, asr #7
 8015c80:	2000d404 	andcs	sp, r0, r4, lsl #8

08015c84 <enet_frame_receive>:
 8015c84:	4a1d      	ldr	r2, [pc, #116]	; (8015cfc <enet_frame_receive+0x78>)
 8015c86:	b510      	push	{r4, lr}
 8015c88:	6813      	ldr	r3, [r2, #0]
 8015c8a:	681b      	ldr	r3, [r3, #0]
 8015c8c:	2b00      	cmp	r3, #0
 8015c8e:	db33      	blt.n	8015cf8 <enet_frame_receive+0x74>
 8015c90:	b970      	cbnz	r0, 8015cb0 <enet_frame_receive+0x2c>
 8015c92:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8015c96:	6813      	ldr	r3, [r2, #0]
 8015c98:	6019      	str	r1, [r3, #0]
 8015c9a:	4919      	ldr	r1, [pc, #100]	; (8015d00 <enet_frame_receive+0x7c>)
 8015c9c:	6948      	ldr	r0, [r1, #20]
 8015c9e:	0604      	lsls	r4, r0, #24
 8015ca0:	d419      	bmi.n	8015cd6 <enet_frame_receive+0x52>
 8015ca2:	6859      	ldr	r1, [r3, #4]
 8015ca4:	0448      	lsls	r0, r1, #17
 8015ca6:	d51b      	bpl.n	8015ce0 <enet_frame_receive+0x5c>
 8015ca8:	68db      	ldr	r3, [r3, #12]
 8015caa:	2001      	movs	r0, #1
 8015cac:	6013      	str	r3, [r2, #0]
 8015cae:	bd10      	pop	{r4, pc}
 8015cb0:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8015cb4:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8015cb8:	d11e      	bne.n	8015cf8 <enet_frame_receive+0x74>
 8015cba:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8015cbe:	3b04      	subs	r3, #4
 8015cc0:	428b      	cmp	r3, r1
 8015cc2:	d819      	bhi.n	8015cf8 <enet_frame_receive+0x74>
 8015cc4:	2100      	movs	r1, #0
 8015cc6:	4299      	cmp	r1, r3
 8015cc8:	6814      	ldr	r4, [r2, #0]
 8015cca:	d2e2      	bcs.n	8015c92 <enet_frame_receive+0xe>
 8015ccc:	68a4      	ldr	r4, [r4, #8]
 8015cce:	5d0c      	ldrb	r4, [r1, r4]
 8015cd0:	5444      	strb	r4, [r0, r1]
 8015cd2:	3101      	adds	r1, #1
 8015cd4:	e7f7      	b.n	8015cc6 <enet_frame_receive+0x42>
 8015cd6:	2080      	movs	r0, #128	; 0x80
 8015cd8:	6148      	str	r0, [r1, #20]
 8015cda:	2000      	movs	r0, #0
 8015cdc:	6088      	str	r0, [r1, #8]
 8015cde:	e7e0      	b.n	8015ca2 <enet_frame_receive+0x1e>
 8015ce0:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8015ce4:	4906      	ldr	r1, [pc, #24]	; (8015d00 <enet_frame_receive+0x7c>)
 8015ce6:	bf05      	ittet	eq
 8015ce8:	3310      	addeq	r3, #16
 8015cea:	6809      	ldreq	r1, [r1, #0]
 8015cec:	68cb      	ldrne	r3, [r1, #12]
 8015cee:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8015cf2:	bf08      	it	eq
 8015cf4:	185b      	addeq	r3, r3, r1
 8015cf6:	e7d8      	b.n	8015caa <enet_frame_receive+0x26>
 8015cf8:	2000      	movs	r0, #0
 8015cfa:	e7d8      	b.n	8015cae <enet_frame_receive+0x2a>
 8015cfc:	2000d3c0 	andcs	sp, r0, r0, asr #7
 8015d00:	40029000 	andmi	r9, r2, r0

08015d04 <enet_frame_transmit>:
 8015d04:	4a1e      	ldr	r2, [pc, #120]	; (8015d80 <enet_frame_transmit+0x7c>)
 8015d06:	b530      	push	{r4, r5, lr}
 8015d08:	6813      	ldr	r3, [r2, #0]
 8015d0a:	681b      	ldr	r3, [r3, #0]
 8015d0c:	2b00      	cmp	r3, #0
 8015d0e:	db34      	blt.n	8015d7a <enet_frame_transmit+0x76>
 8015d10:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8015d14:	4299      	cmp	r1, r3
 8015d16:	d830      	bhi.n	8015d7a <enet_frame_transmit+0x76>
 8015d18:	b9e8      	cbnz	r0, 8015d56 <enet_frame_transmit+0x52>
 8015d1a:	6813      	ldr	r3, [r2, #0]
 8015d1c:	4819      	ldr	r0, [pc, #100]	; (8015d84 <enet_frame_transmit+0x80>)
 8015d1e:	6059      	str	r1, [r3, #4]
 8015d20:	6819      	ldr	r1, [r3, #0]
 8015d22:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8015d26:	6019      	str	r1, [r3, #0]
 8015d28:	6941      	ldr	r1, [r0, #20]
 8015d2a:	6944      	ldr	r4, [r0, #20]
 8015d2c:	f001 0104 	and.w	r1, r1, #4
 8015d30:	f004 0420 	and.w	r4, r4, #32
 8015d34:	4321      	orrs	r1, r4
 8015d36:	d110      	bne.n	8015d5a <enet_frame_transmit+0x56>
 8015d38:	6819      	ldr	r1, [r3, #0]
 8015d3a:	02c8      	lsls	r0, r1, #11
 8015d3c:	d511      	bpl.n	8015d62 <enet_frame_transmit+0x5e>
 8015d3e:	68db      	ldr	r3, [r3, #12]
 8015d40:	2001      	movs	r0, #1
 8015d42:	6013      	str	r3, [r2, #0]
 8015d44:	bd30      	pop	{r4, r5, pc}
 8015d46:	5cc5      	ldrb	r5, [r0, r3]
 8015d48:	68a4      	ldr	r4, [r4, #8]
 8015d4a:	551d      	strb	r5, [r3, r4]
 8015d4c:	3301      	adds	r3, #1
 8015d4e:	428b      	cmp	r3, r1
 8015d50:	6814      	ldr	r4, [r2, #0]
 8015d52:	d1f8      	bne.n	8015d46 <enet_frame_transmit+0x42>
 8015d54:	e7e1      	b.n	8015d1a <enet_frame_transmit+0x16>
 8015d56:	2300      	movs	r3, #0
 8015d58:	e7f9      	b.n	8015d4e <enet_frame_transmit+0x4a>
 8015d5a:	6141      	str	r1, [r0, #20]
 8015d5c:	2100      	movs	r1, #0
 8015d5e:	6041      	str	r1, [r0, #4]
 8015d60:	e7ea      	b.n	8015d38 <enet_frame_transmit+0x34>
 8015d62:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8015d66:	4907      	ldr	r1, [pc, #28]	; (8015d84 <enet_frame_transmit+0x80>)
 8015d68:	bf05      	ittet	eq
 8015d6a:	3310      	addeq	r3, #16
 8015d6c:	6809      	ldreq	r1, [r1, #0]
 8015d6e:	690b      	ldrne	r3, [r1, #16]
 8015d70:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8015d74:	bf08      	it	eq
 8015d76:	185b      	addeq	r3, r3, r1
 8015d78:	e7e2      	b.n	8015d40 <enet_frame_transmit+0x3c>
 8015d7a:	2000      	movs	r0, #0
 8015d7c:	e7e2      	b.n	8015d44 <enet_frame_transmit+0x40>
 8015d7e:	bf00      	nop
 8015d80:	2000d3c4 	andcs	sp, r0, r4, asr #7
 8015d84:	40029000 	andmi	r9, r2, r0

08015d88 <enet_transmit_checksum_config>:
 8015d88:	6803      	ldr	r3, [r0, #0]
 8015d8a:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8015d8e:	430b      	orrs	r3, r1
 8015d90:	6003      	str	r3, [r0, #0]
 8015d92:	4770      	bx	lr

08015d94 <enet_mac_address_set>:
 8015d94:	888a      	ldrh	r2, [r1, #4]
 8015d96:	4b03      	ldr	r3, [pc, #12]	; (8015da4 <enet_mac_address_set+0x10>)
 8015d98:	50c2      	str	r2, [r0, r3]
 8015d9a:	680a      	ldr	r2, [r1, #0]
 8015d9c:	3304      	adds	r3, #4
 8015d9e:	50c2      	str	r2, [r0, r3]
 8015da0:	4770      	bx	lr
 8015da2:	bf00      	nop
 8015da4:	40028040 	andmi	r8, r2, r0, asr #32

08015da8 <enet_rx_enable>:
 8015da8:	4a05      	ldr	r2, [pc, #20]	; (8015dc0 <enet_rx_enable+0x18>)
 8015daa:	6813      	ldr	r3, [r2, #0]
 8015dac:	f043 0304 	orr.w	r3, r3, #4
 8015db0:	6013      	str	r3, [r2, #0]
 8015db2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8015db6:	6993      	ldr	r3, [r2, #24]
 8015db8:	f043 0302 	orr.w	r3, r3, #2
 8015dbc:	6193      	str	r3, [r2, #24]
 8015dbe:	4770      	bx	lr
 8015dc0:	40028000 	andmi	r8, r2, r0

08015dc4 <enet_phy_write_read>:
 8015dc4:	b530      	push	{r4, r5, lr}
 8015dc6:	4604      	mov	r4, r0
 8015dc8:	4d13      	ldr	r5, [pc, #76]	; (8015e18 <enet_phy_write_read+0x54>)
 8015dca:	0192      	lsls	r2, r2, #6
 8015dcc:	6928      	ldr	r0, [r5, #16]
 8015dce:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8015dd2:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8015dd6:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8015dda:	4302      	orrs	r2, r0
 8015ddc:	02c9      	lsls	r1, r1, #11
 8015dde:	b289      	uxth	r1, r1
 8015de0:	2c02      	cmp	r4, #2
 8015de2:	ea42 0204 	orr.w	r2, r2, r4
 8015de6:	ea42 0201 	orr.w	r2, r2, r1
 8015dea:	bf08      	it	eq
 8015dec:	8819      	ldrheq	r1, [r3, #0]
 8015dee:	f042 0201 	orr.w	r2, r2, #1
 8015df2:	bf08      	it	eq
 8015df4:	6169      	streq	r1, [r5, #20]
 8015df6:	612a      	str	r2, [r5, #16]
 8015df8:	4907      	ldr	r1, [pc, #28]	; (8015e18 <enet_phy_write_read+0x54>)
 8015dfa:	4a08      	ldr	r2, [pc, #32]	; (8015e1c <enet_phy_write_read+0x58>)
 8015dfc:	6908      	ldr	r0, [r1, #16]
 8015dfe:	07c0      	lsls	r0, r0, #31
 8015e00:	d501      	bpl.n	8015e06 <enet_phy_write_read+0x42>
 8015e02:	3a01      	subs	r2, #1
 8015e04:	d1fa      	bne.n	8015dfc <enet_phy_write_read+0x38>
 8015e06:	690a      	ldr	r2, [r1, #16]
 8015e08:	43d2      	mvns	r2, r2
 8015e0a:	f002 0001 	and.w	r0, r2, #1
 8015e0e:	b90c      	cbnz	r4, 8015e14 <enet_phy_write_read+0x50>
 8015e10:	694a      	ldr	r2, [r1, #20]
 8015e12:	801a      	strh	r2, [r3, #0]
 8015e14:	bd30      	pop	{r4, r5, pc}
 8015e16:	bf00      	nop
 8015e18:	40028000 	andmi	r8, r2, r0
 8015e1c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08015e20 <enet_phy_config>:
 8015e20:	4b22      	ldr	r3, [pc, #136]	; (8015eac <enet_phy_config+0x8c>)
 8015e22:	b513      	push	{r0, r1, r4, lr}
 8015e24:	2001      	movs	r0, #1
 8015e26:	691c      	ldr	r4, [r3, #16]
 8015e28:	f7fe feec 	bl	8014c04 <rcu_clock_freq_get>
 8015e2c:	4b20      	ldr	r3, [pc, #128]	; (8015eb0 <enet_phy_config+0x90>)
 8015e2e:	4a21      	ldr	r2, [pc, #132]	; (8015eb4 <enet_phy_config+0x94>)
 8015e30:	4403      	add	r3, r0
 8015e32:	4293      	cmp	r3, r2
 8015e34:	f024 041c 	bic.w	r4, r4, #28
 8015e38:	d220      	bcs.n	8015e7c <enet_phy_config+0x5c>
 8015e3a:	f044 0408 	orr.w	r4, r4, #8
 8015e3e:	4b1b      	ldr	r3, [pc, #108]	; (8015eac <enet_phy_config+0x8c>)
 8015e40:	2200      	movs	r2, #0
 8015e42:	611c      	str	r4, [r3, #16]
 8015e44:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015e48:	2101      	movs	r1, #1
 8015e4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015e4e:	2002      	movs	r0, #2
 8015e50:	f10d 0306 	add.w	r3, sp, #6
 8015e54:	f7ff ffb6 	bl	8015dc4 <enet_phy_write_read>
 8015e58:	b310      	cbz	r0, 8015ea0 <enet_phy_config+0x80>
 8015e5a:	2200      	movs	r2, #0
 8015e5c:	4816      	ldr	r0, [pc, #88]	; (8015eb8 <enet_phy_config+0x98>)
 8015e5e:	f7ff fea8 	bl	8015bb2 <enet_delay>
 8015e62:	2101      	movs	r1, #1
 8015e64:	4610      	mov	r0, r2
 8015e66:	f10d 0306 	add.w	r3, sp, #6
 8015e6a:	f7ff ffab 	bl	8015dc4 <enet_phy_write_read>
 8015e6e:	b1b8      	cbz	r0, 8015ea0 <enet_phy_config+0x80>
 8015e70:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015e74:	43c0      	mvns	r0, r0
 8015e76:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8015e7a:	e012      	b.n	8015ea2 <enet_phy_config+0x82>
 8015e7c:	4b0f      	ldr	r3, [pc, #60]	; (8015ebc <enet_phy_config+0x9c>)
 8015e7e:	4a10      	ldr	r2, [pc, #64]	; (8015ec0 <enet_phy_config+0xa0>)
 8015e80:	4403      	add	r3, r0
 8015e82:	4293      	cmp	r3, r2
 8015e84:	d802      	bhi.n	8015e8c <enet_phy_config+0x6c>
 8015e86:	f044 040c 	orr.w	r4, r4, #12
 8015e8a:	e7d8      	b.n	8015e3e <enet_phy_config+0x1e>
 8015e8c:	4b0d      	ldr	r3, [pc, #52]	; (8015ec4 <enet_phy_config+0xa4>)
 8015e8e:	4a0e      	ldr	r2, [pc, #56]	; (8015ec8 <enet_phy_config+0xa8>)
 8015e90:	4403      	add	r3, r0
 8015e92:	4293      	cmp	r3, r2
 8015e94:	d3d3      	bcc.n	8015e3e <enet_phy_config+0x1e>
 8015e96:	4b0d      	ldr	r3, [pc, #52]	; (8015ecc <enet_phy_config+0xac>)
 8015e98:	4a0d      	ldr	r2, [pc, #52]	; (8015ed0 <enet_phy_config+0xb0>)
 8015e9a:	4403      	add	r3, r0
 8015e9c:	4293      	cmp	r3, r2
 8015e9e:	d902      	bls.n	8015ea6 <enet_phy_config+0x86>
 8015ea0:	2000      	movs	r0, #0
 8015ea2:	b002      	add	sp, #8
 8015ea4:	bd10      	pop	{r4, pc}
 8015ea6:	f044 0404 	orr.w	r4, r4, #4
 8015eaa:	e7c8      	b.n	8015e3e <enet_phy_config+0x1e>
 8015eac:	40028000 	andmi	r8, r2, r0
 8015eb0:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8015eb4:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8015eb8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015ebc:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8015ec0:	017d783f 	cmneq	sp, pc, lsr r8
 8015ec4:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8015ec8:	02625a00 	rsbeq	r5, r2, #0, 20
 8015ecc:	fa0a1f00 	blx	829dad4 <__exidx_end+0x2853a0>
 8015ed0:	01312d00 	teqeq	r1, r0, lsl #26

08015ed4 <enet_init>:
 8015ed4:	2300      	movs	r3, #0
 8015ed6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015ed8:	4604      	mov	r4, r0
 8015eda:	460d      	mov	r5, r1
 8015edc:	4616      	mov	r6, r2
 8015ede:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015ee2:	f7ff ff9d 	bl	8015e20 <enet_phy_config>
 8015ee6:	2800      	cmp	r0, #0
 8015ee8:	d039      	beq.n	8015f5e <enet_init+0x8a>
 8015eea:	4b3c      	ldr	r3, [pc, #240]	; (8015fdc <enet_init+0x108>)
 8015eec:	4a3c      	ldr	r2, [pc, #240]	; (8015fe0 <enet_init+0x10c>)
 8015eee:	6819      	ldr	r1, [r3, #0]
 8015ef0:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8015ef4:	400a      	ands	r2, r1
 8015ef6:	601a      	str	r2, [r3, #0]
 8015ef8:	2200      	movs	r2, #0
 8015efa:	605a      	str	r2, [r3, #4]
 8015efc:	609a      	str	r2, [r3, #8]
 8015efe:	60da      	str	r2, [r3, #12]
 8015f00:	6999      	ldr	r1, [r3, #24]
 8015f02:	2c01      	cmp	r4, #1
 8015f04:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8015f08:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8015f0c:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8015f10:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8015f14:	6199      	str	r1, [r3, #24]
 8015f16:	4933      	ldr	r1, [pc, #204]	; (8015fe4 <enet_init+0x110>)
 8015f18:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8015f1c:	61da      	str	r2, [r3, #28]
 8015f1e:	6988      	ldr	r0, [r1, #24]
 8015f20:	4b31      	ldr	r3, [pc, #196]	; (8015fe8 <enet_init+0x114>)
 8015f22:	ea03 0300 	and.w	r3, r3, r0
 8015f26:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015f2a:	618b      	str	r3, [r1, #24]
 8015f2c:	680b      	ldr	r3, [r1, #0]
 8015f2e:	4b2f      	ldr	r3, [pc, #188]	; (8015fec <enet_init+0x118>)
 8015f30:	600b      	str	r3, [r1, #0]
 8015f32:	d01e      	beq.n	8015f72 <enet_init+0x9e>
 8015f34:	08e3      	lsrs	r3, r4, #3
 8015f36:	0861      	lsrs	r1, r4, #1
 8015f38:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015f3c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015f40:	430b      	orrs	r3, r1
 8015f42:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015f46:	2101      	movs	r1, #1
 8015f48:	2002      	movs	r0, #2
 8015f4a:	f10d 0306 	add.w	r3, sp, #6
 8015f4e:	f7ff ff39 	bl	8015dc4 <enet_phy_write_read>
 8015f52:	b158      	cbz	r0, 8015f6c <enet_init+0x98>
 8015f54:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8015f58:	f7ff fe2b 	bl	8015bb2 <enet_delay>
 8015f5c:	e05f      	b.n	801601e <enet_init+0x14a>
 8015f5e:	4824      	ldr	r0, [pc, #144]	; (8015ff0 <enet_init+0x11c>)
 8015f60:	f7ff fe27 	bl	8015bb2 <enet_delay>
 8015f64:	f7ff ff5c 	bl	8015e20 <enet_phy_config>
 8015f68:	2800      	cmp	r0, #0
 8015f6a:	d1be      	bne.n	8015eea <enet_init+0x16>
 8015f6c:	2000      	movs	r0, #0
 8015f6e:	b003      	add	sp, #12
 8015f70:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015f72:	4614      	mov	r4, r2
 8015f74:	4f1f      	ldr	r7, [pc, #124]	; (8015ff4 <enet_init+0x120>)
 8015f76:	2201      	movs	r2, #1
 8015f78:	2000      	movs	r0, #0
 8015f7a:	4611      	mov	r1, r2
 8015f7c:	f10d 0306 	add.w	r3, sp, #6
 8015f80:	f7ff ff20 	bl	8015dc4 <enet_phy_write_read>
 8015f84:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015f88:	3401      	adds	r4, #1
 8015f8a:	f002 0204 	and.w	r2, r2, #4
 8015f8e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015f92:	b912      	cbnz	r2, 8015f9a <enet_init+0xc6>
 8015f94:	42bc      	cmp	r4, r7
 8015f96:	d1ee      	bne.n	8015f76 <enet_init+0xa2>
 8015f98:	e7e8      	b.n	8015f6c <enet_init+0x98>
 8015f9a:	42bc      	cmp	r4, r7
 8015f9c:	d0e6      	beq.n	8015f6c <enet_init+0x98>
 8015f9e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8015fa2:	2101      	movs	r1, #1
 8015fa4:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015fa8:	2002      	movs	r0, #2
 8015faa:	2200      	movs	r2, #0
 8015fac:	f7ff ff0a 	bl	8015dc4 <enet_phy_write_read>
 8015fb0:	2800      	cmp	r0, #0
 8015fb2:	d0db      	beq.n	8015f6c <enet_init+0x98>
 8015fb4:	2400      	movs	r4, #0
 8015fb6:	4f0f      	ldr	r7, [pc, #60]	; (8015ff4 <enet_init+0x120>)
 8015fb8:	2201      	movs	r2, #1
 8015fba:	2000      	movs	r0, #0
 8015fbc:	4611      	mov	r1, r2
 8015fbe:	f10d 0306 	add.w	r3, sp, #6
 8015fc2:	f7ff feff 	bl	8015dc4 <enet_phy_write_read>
 8015fc6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015fca:	3401      	adds	r4, #1
 8015fcc:	f002 0220 	and.w	r2, r2, #32
 8015fd0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015fd4:	b982      	cbnz	r2, 8015ff8 <enet_init+0x124>
 8015fd6:	42bc      	cmp	r4, r7
 8015fd8:	d1ee      	bne.n	8015fb8 <enet_init+0xe4>
 8015fda:	e7c7      	b.n	8015f6c <enet_init+0x98>
 8015fdc:	40028000 	andmi	r8, r2, r0
 8015fe0:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8015fe4:	40029000 	andmi	r9, r2, r0
 8015fe8:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8015fec:	02c16000 	sbceq	r6, r1, #0
 8015ff0:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8015ff4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015ff8:	42bc      	cmp	r4, r7
 8015ffa:	d0b7      	beq.n	8015f6c <enet_init+0x98>
 8015ffc:	2101      	movs	r1, #1
 8015ffe:	2210      	movs	r2, #16
 8016000:	2000      	movs	r0, #0
 8016002:	f7ff fedf 	bl	8015dc4 <enet_phy_write_read>
 8016006:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801600a:	f013 0f04 	tst.w	r3, #4
 801600e:	bf14      	ite	ne
 8016010:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8016014:	2400      	moveq	r4, #0
 8016016:	0799      	lsls	r1, r3, #30
 8016018:	d401      	bmi.n	801601e <enet_init+0x14a>
 801601a:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801601e:	4b64      	ldr	r3, [pc, #400]	; (80161b0 <enet_init+0x2dc>)
 8016020:	056a      	lsls	r2, r5, #21
 8016022:	6818      	ldr	r0, [r3, #0]
 8016024:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8016028:	ea44 0400 	orr.w	r4, r4, r0
 801602c:	601c      	str	r4, [r3, #0]
 801602e:	d50c      	bpl.n	801604a <enet_init+0x176>
 8016030:	681a      	ldr	r2, [r3, #0]
 8016032:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8016036:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801603a:	601a      	str	r2, [r3, #0]
 801603c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8016040:	6999      	ldr	r1, [r3, #24]
 8016042:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8016046:	430d      	orrs	r5, r1
 8016048:	619d      	str	r5, [r3, #24]
 801604a:	4959      	ldr	r1, [pc, #356]	; (80161b0 <enet_init+0x2dc>)
 801604c:	4b59      	ldr	r3, [pc, #356]	; (80161b4 <enet_init+0x2e0>)
 801604e:	684a      	ldr	r2, [r1, #4]
 8016050:	4316      	orrs	r6, r2
 8016052:	604e      	str	r6, [r1, #4]
 8016054:	681a      	ldr	r2, [r3, #0]
 8016056:	07d7      	lsls	r7, r2, #31
 8016058:	d510      	bpl.n	801607c <enet_init+0x1a8>
 801605a:	685a      	ldr	r2, [r3, #4]
 801605c:	680c      	ldr	r4, [r1, #0]
 801605e:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8016062:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8016066:	4320      	orrs	r0, r4
 8016068:	6008      	str	r0, [r1, #0]
 801606a:	4853      	ldr	r0, [pc, #332]	; (80161b8 <enet_init+0x2e4>)
 801606c:	0892      	lsrs	r2, r2, #2
 801606e:	6981      	ldr	r1, [r0, #24]
 8016070:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8016074:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8016078:	430a      	orrs	r2, r1
 801607a:	6182      	str	r2, [r0, #24]
 801607c:	681a      	ldr	r2, [r3, #0]
 801607e:	0796      	lsls	r6, r2, #30
 8016080:	d508      	bpl.n	8016094 <enet_init+0x1c0>
 8016082:	494d      	ldr	r1, [pc, #308]	; (80161b8 <enet_init+0x2e4>)
 8016084:	6898      	ldr	r0, [r3, #8]
 8016086:	680a      	ldr	r2, [r1, #0]
 8016088:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 801608c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8016090:	4302      	orrs	r2, r0
 8016092:	600a      	str	r2, [r1, #0]
 8016094:	681a      	ldr	r2, [r3, #0]
 8016096:	0755      	lsls	r5, r2, #29
 8016098:	d508      	bpl.n	80160ac <enet_init+0x1d8>
 801609a:	4947      	ldr	r1, [pc, #284]	; (80161b8 <enet_init+0x2e4>)
 801609c:	68d8      	ldr	r0, [r3, #12]
 801609e:	680a      	ldr	r2, [r1, #0]
 80160a0:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80160a4:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80160a8:	4302      	orrs	r2, r0
 80160aa:	600a      	str	r2, [r1, #0]
 80160ac:	681a      	ldr	r2, [r3, #0]
 80160ae:	0714      	lsls	r4, r2, #28
 80160b0:	d508      	bpl.n	80160c4 <enet_init+0x1f0>
 80160b2:	4941      	ldr	r1, [pc, #260]	; (80161b8 <enet_init+0x2e4>)
 80160b4:	6918      	ldr	r0, [r3, #16]
 80160b6:	680a      	ldr	r2, [r1, #0]
 80160b8:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80160bc:	f022 0202 	bic.w	r2, r2, #2
 80160c0:	4302      	orrs	r2, r0
 80160c2:	600a      	str	r2, [r1, #0]
 80160c4:	681a      	ldr	r2, [r3, #0]
 80160c6:	06d0      	lsls	r0, r2, #27
 80160c8:	d506      	bpl.n	80160d8 <enet_init+0x204>
 80160ca:	493b      	ldr	r1, [pc, #236]	; (80161b8 <enet_init+0x2e4>)
 80160cc:	4a3b      	ldr	r2, [pc, #236]	; (80161bc <enet_init+0x2e8>)
 80160ce:	6988      	ldr	r0, [r1, #24]
 80160d0:	4002      	ands	r2, r0
 80160d2:	6958      	ldr	r0, [r3, #20]
 80160d4:	4302      	orrs	r2, r0
 80160d6:	618a      	str	r2, [r1, #24]
 80160d8:	681a      	ldr	r2, [r3, #0]
 80160da:	0691      	lsls	r1, r2, #26
 80160dc:	d508      	bpl.n	80160f0 <enet_init+0x21c>
 80160de:	4936      	ldr	r1, [pc, #216]	; (80161b8 <enet_init+0x2e4>)
 80160e0:	6998      	ldr	r0, [r3, #24]
 80160e2:	698a      	ldr	r2, [r1, #24]
 80160e4:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80160e8:	f022 0204 	bic.w	r2, r2, #4
 80160ec:	4302      	orrs	r2, r0
 80160ee:	618a      	str	r2, [r1, #24]
 80160f0:	681a      	ldr	r2, [r3, #0]
 80160f2:	0652      	lsls	r2, r2, #25
 80160f4:	d506      	bpl.n	8016104 <enet_init+0x230>
 80160f6:	492e      	ldr	r1, [pc, #184]	; (80161b0 <enet_init+0x2dc>)
 80160f8:	69d8      	ldr	r0, [r3, #28]
 80160fa:	69ca      	ldr	r2, [r1, #28]
 80160fc:	0c52      	lsrs	r2, r2, #17
 80160fe:	0452      	lsls	r2, r2, #17
 8016100:	4302      	orrs	r2, r0
 8016102:	61ca      	str	r2, [r1, #28]
 8016104:	681a      	ldr	r2, [r3, #0]
 8016106:	0617      	lsls	r7, r2, #24
 8016108:	d517      	bpl.n	801613a <enet_init+0x266>
 801610a:	4c29      	ldr	r4, [pc, #164]	; (80161b0 <enet_init+0x2dc>)
 801610c:	6a1a      	ldr	r2, [r3, #32]
 801610e:	69a0      	ldr	r0, [r4, #24]
 8016110:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8016114:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8016118:	0400      	lsls	r0, r0, #16
 801611a:	0c00      	lsrs	r0, r0, #16
 801611c:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8016120:	4301      	orrs	r1, r0
 8016122:	4825      	ldr	r0, [pc, #148]	; (80161b8 <enet_init+0x2e4>)
 8016124:	61a1      	str	r1, [r4, #24]
 8016126:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801612a:	0a12      	lsrs	r2, r2, #8
 801612c:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8016130:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8016134:	430a      	orrs	r2, r1
 8016136:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801613a:	681a      	ldr	r2, [r3, #0]
 801613c:	05d6      	lsls	r6, r2, #23
 801613e:	bf42      	ittt	mi
 8016140:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8016142:	4a1b      	ldrmi	r2, [pc, #108]	; (80161b0 <enet_init+0x2dc>)
 8016144:	6091      	strmi	r1, [r2, #8]
 8016146:	681a      	ldr	r2, [r3, #0]
 8016148:	0595      	lsls	r5, r2, #22
 801614a:	bf42      	ittt	mi
 801614c:	4a18      	ldrmi	r2, [pc, #96]	; (80161b0 <enet_init+0x2dc>)
 801614e:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8016150:	60d1      	strmi	r1, [r2, #12]
 8016152:	681a      	ldr	r2, [r3, #0]
 8016154:	0554      	lsls	r4, r2, #21
 8016156:	d508      	bpl.n	801616a <enet_init+0x296>
 8016158:	4915      	ldr	r1, [pc, #84]	; (80161b0 <enet_init+0x2dc>)
 801615a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 801615c:	684a      	ldr	r2, [r1, #4]
 801615e:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8016162:	f022 0206 	bic.w	r2, r2, #6
 8016166:	4302      	orrs	r2, r0
 8016168:	604a      	str	r2, [r1, #4]
 801616a:	681a      	ldr	r2, [r3, #0]
 801616c:	0510      	lsls	r0, r2, #20
 801616e:	d508      	bpl.n	8016182 <enet_init+0x2ae>
 8016170:	490f      	ldr	r1, [pc, #60]	; (80161b0 <enet_init+0x2dc>)
 8016172:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8016174:	680a      	ldr	r2, [r1, #0]
 8016176:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801617a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801617e:	4302      	orrs	r2, r0
 8016180:	600a      	str	r2, [r1, #0]
 8016182:	681a      	ldr	r2, [r3, #0]
 8016184:	04d1      	lsls	r1, r2, #19
 8016186:	d506      	bpl.n	8016196 <enet_init+0x2c2>
 8016188:	4909      	ldr	r1, [pc, #36]	; (80161b0 <enet_init+0x2dc>)
 801618a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 801618c:	680a      	ldr	r2, [r1, #0]
 801618e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8016192:	4302      	orrs	r2, r0
 8016194:	600a      	str	r2, [r1, #0]
 8016196:	681a      	ldr	r2, [r3, #0]
 8016198:	0492      	lsls	r2, r2, #18
 801619a:	d506      	bpl.n	80161aa <enet_init+0x2d6>
 801619c:	4904      	ldr	r1, [pc, #16]	; (80161b0 <enet_init+0x2dc>)
 801619e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80161a0:	680a      	ldr	r2, [r1, #0]
 80161a2:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80161a6:	4313      	orrs	r3, r2
 80161a8:	600b      	str	r3, [r1, #0]
 80161aa:	2001      	movs	r0, #1
 80161ac:	e6df      	b.n	8015f6e <enet_init+0x9a>
 80161ae:	bf00      	nop
 80161b0:	40028000 	andmi	r8, r2, r0
 80161b4:	2000d3c8 	andcs	sp, r0, r8, asr #7
 80161b8:	40029000 	andmi	r9, r2, r0
 80161bc:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080161c0 <enet_txfifo_flush>:
 80161c0:	4b06      	ldr	r3, [pc, #24]	; (80161dc <enet_txfifo_flush+0x1c>)
 80161c2:	4807      	ldr	r0, [pc, #28]	; (80161e0 <enet_txfifo_flush+0x20>)
 80161c4:	699a      	ldr	r2, [r3, #24]
 80161c6:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80161ca:	619a      	str	r2, [r3, #24]
 80161cc:	699a      	ldr	r2, [r3, #24]
 80161ce:	02d2      	lsls	r2, r2, #11
 80161d0:	d502      	bpl.n	80161d8 <enet_txfifo_flush+0x18>
 80161d2:	3801      	subs	r0, #1
 80161d4:	d1fa      	bne.n	80161cc <enet_txfifo_flush+0xc>
 80161d6:	4770      	bx	lr
 80161d8:	2001      	movs	r0, #1
 80161da:	4770      	bx	lr
 80161dc:	40029000 	andmi	r9, r2, r0
 80161e0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080161e4 <enet_tx_enable>:
 80161e4:	4a06      	ldr	r2, [pc, #24]	; (8016200 <enet_tx_enable+0x1c>)
 80161e6:	b508      	push	{r3, lr}
 80161e8:	6813      	ldr	r3, [r2, #0]
 80161ea:	f043 0308 	orr.w	r3, r3, #8
 80161ee:	6013      	str	r3, [r2, #0]
 80161f0:	f7ff ffe6 	bl	80161c0 <enet_txfifo_flush>
 80161f4:	4a03      	ldr	r2, [pc, #12]	; (8016204 <enet_tx_enable+0x20>)
 80161f6:	6993      	ldr	r3, [r2, #24]
 80161f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80161fc:	6193      	str	r3, [r2, #24]
 80161fe:	bd08      	pop	{r3, pc}
 8016200:	40028000 	andmi	r8, r2, r0
 8016204:	40029000 	andmi	r9, r2, r0

08016208 <enet_enable>:
 8016208:	b508      	push	{r3, lr}
 801620a:	f7ff ffeb 	bl	80161e4 <enet_tx_enable>
 801620e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016212:	f7ff bdc9 	b.w	8015da8 <enet_rx_enable>

08016216 <enet_desc_information_get>:
 8016216:	2905      	cmp	r1, #5
 8016218:	d817      	bhi.n	801624a <enet_desc_information_get+0x34>
 801621a:	e8df f001 	tbb	[pc, r1]
 801621e:	03091012 	movweq	r1, #36882	; 0x9012
 8016222:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8016226:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801622a:	4770      	bx	lr
 801622c:	88c0      	ldrh	r0, [r0, #6]
 801622e:	e7fa      	b.n	8016226 <enet_desc_information_get+0x10>
 8016230:	8840      	ldrh	r0, [r0, #2]
 8016232:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8016236:	2804      	cmp	r0, #4
 8016238:	d90a      	bls.n	8016250 <enet_desc_information_get+0x3a>
 801623a:	3804      	subs	r0, #4
 801623c:	4770      	bx	lr
 801623e:	6880      	ldr	r0, [r0, #8]
 8016240:	4770      	bx	lr
 8016242:	6800      	ldr	r0, [r0, #0]
 8016244:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8016248:	4770      	bx	lr
 801624a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801624e:	4770      	bx	lr
 8016250:	2000      	movs	r0, #0
 8016252:	4770      	bx	lr

08016254 <enet_rxframe_drop>:
 8016254:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8016258:	4814      	ldr	r0, [pc, #80]	; (80162ac <enet_rxframe_drop+0x58>)
 801625a:	b510      	push	{r4, lr}
 801625c:	6802      	ldr	r2, [r0, #0]
 801625e:	4914      	ldr	r1, [pc, #80]	; (80162b0 <enet_rxframe_drop+0x5c>)
 8016260:	6854      	ldr	r4, [r2, #4]
 8016262:	6013      	str	r3, [r2, #0]
 8016264:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8016268:	680b      	ldr	r3, [r1, #0]
 801626a:	d009      	beq.n	8016280 <enet_rxframe_drop+0x2c>
 801626c:	b12b      	cbz	r3, 801627a <enet_rxframe_drop+0x26>
 801626e:	68da      	ldr	r2, [r3, #12]
 8016270:	6002      	str	r2, [r0, #0]
 8016272:	681a      	ldr	r2, [r3, #0]
 8016274:	b1ba      	cbz	r2, 80162a6 <enet_rxframe_drop+0x52>
 8016276:	600a      	str	r2, [r1, #0]
 8016278:	bd10      	pop	{r4, pc}
 801627a:	68d3      	ldr	r3, [r2, #12]
 801627c:	6003      	str	r3, [r0, #0]
 801627e:	e7fb      	b.n	8016278 <enet_rxframe_drop+0x24>
 8016280:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8016284:	4c0b      	ldr	r4, [pc, #44]	; (80162b4 <enet_rxframe_drop+0x60>)
 8016286:	d006      	beq.n	8016296 <enet_rxframe_drop+0x42>
 8016288:	68e2      	ldr	r2, [r4, #12]
 801628a:	6002      	str	r2, [r0, #0]
 801628c:	2b00      	cmp	r3, #0
 801628e:	d0f3      	beq.n	8016278 <enet_rxframe_drop+0x24>
 8016290:	681b      	ldr	r3, [r3, #0]
 8016292:	600b      	str	r3, [r1, #0]
 8016294:	e7f0      	b.n	8016278 <enet_rxframe_drop+0x24>
 8016296:	6824      	ldr	r4, [r4, #0]
 8016298:	3210      	adds	r2, #16
 801629a:	f3c4 0484 	ubfx	r4, r4, #2, #5
 801629e:	4422      	add	r2, r4
 80162a0:	6002      	str	r2, [r0, #0]
 80162a2:	2b00      	cmp	r3, #0
 80162a4:	d0e8      	beq.n	8016278 <enet_rxframe_drop+0x24>
 80162a6:	3310      	adds	r3, #16
 80162a8:	e7f3      	b.n	8016292 <enet_rxframe_drop+0x3e>
 80162aa:	bf00      	nop
 80162ac:	2000d3c0 	andcs	sp, r0, r0, asr #7
 80162b0:	2000d3b8 			; <UNDEFINED> instruction: 0x2000d3b8
 80162b4:	40029000 	andmi	r9, r2, r0

080162b8 <enet_rxframe_size_get>:
 80162b8:	b508      	push	{r3, lr}
 80162ba:	4b0c      	ldr	r3, [pc, #48]	; (80162ec <enet_rxframe_size_get+0x34>)
 80162bc:	681b      	ldr	r3, [r3, #0]
 80162be:	6818      	ldr	r0, [r3, #0]
 80162c0:	2800      	cmp	r0, #0
 80162c2:	db10      	blt.n	80162e6 <enet_rxframe_size_get+0x2e>
 80162c4:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80162c8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80162cc:	d003      	beq.n	80162d6 <enet_rxframe_size_get+0x1e>
 80162ce:	f7ff ffc1 	bl	8016254 <enet_rxframe_drop>
 80162d2:	2001      	movs	r0, #1
 80162d4:	bd08      	pop	{r3, pc}
 80162d6:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80162da:	2b21      	cmp	r3, #33	; 0x21
 80162dc:	d0f7      	beq.n	80162ce <enet_rxframe_size_get+0x16>
 80162de:	f3c0 400d 	ubfx	r0, r0, #16, #14
 80162e2:	3804      	subs	r0, #4
 80162e4:	e7f6      	b.n	80162d4 <enet_rxframe_size_get+0x1c>
 80162e6:	2000      	movs	r0, #0
 80162e8:	e7f4      	b.n	80162d4 <enet_rxframe_size_get+0x1c>
 80162ea:	bf00      	nop
 80162ec:	2000d3c0 	andcs	sp, r0, r0, asr #7

080162f0 <enet_initpara_reset>:
 80162f0:	2200      	movs	r2, #0
 80162f2:	4b08      	ldr	r3, [pc, #32]	; (8016314 <enet_initpara_reset+0x24>)
 80162f4:	e9c3 2200 	strd	r2, r2, [r3]
 80162f8:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80162fc:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8016300:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8016304:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8016308:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 801630c:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8016310:	639a      	str	r2, [r3, #56]	; 0x38
 8016312:	4770      	bx	lr
 8016314:	2000d3c8 	andcs	sp, r0, r8, asr #7

08016318 <enet_deinit>:
 8016318:	b508      	push	{r3, lr}
 801631a:	f640 200e 	movw	r0, #2574	; 0xa0e
 801631e:	f7fe fba0 	bl	8014a62 <rcu_periph_reset_enable>
 8016322:	f640 200e 	movw	r0, #2574	; 0xa0e
 8016326:	f7fe fb9e 	bl	8014a66 <rcu_periph_reset_disable>
 801632a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801632e:	f7ff bfdf 	b.w	80162f0 <enet_initpara_reset>
	...

08016334 <i2c_clock_config>:
 8016334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016336:	4605      	mov	r5, r0
 8016338:	2002      	movs	r0, #2
 801633a:	460c      	mov	r4, r1
 801633c:	4617      	mov	r7, r2
 801633e:	f7fe fc61 	bl	8014c04 <rcu_clock_freq_get>
 8016342:	4927      	ldr	r1, [pc, #156]	; (80163e0 <i2c_clock_config+0xac>)
 8016344:	4a27      	ldr	r2, [pc, #156]	; (80163e4 <i2c_clock_config+0xb0>)
 8016346:	fbb0 f1f1 	udiv	r1, r0, r1
 801634a:	4290      	cmp	r0, r2
 801634c:	bf94      	ite	ls
 801634e:	460b      	movls	r3, r1
 8016350:	233f      	movhi	r3, #63	; 0x3f
 8016352:	686e      	ldr	r6, [r5, #4]
 8016354:	4a24      	ldr	r2, [pc, #144]	; (80163e8 <i2c_clock_config+0xb4>)
 8016356:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 801635a:	431e      	orrs	r6, r3
 801635c:	4294      	cmp	r4, r2
 801635e:	606e      	str	r6, [r5, #4]
 8016360:	d816      	bhi.n	8016390 <i2c_clock_config+0x5c>
 8016362:	3101      	adds	r1, #1
 8016364:	293e      	cmp	r1, #62	; 0x3e
 8016366:	d90d      	bls.n	8016384 <i2c_clock_config+0x50>
 8016368:	233f      	movs	r3, #63	; 0x3f
 801636a:	622b      	str	r3, [r5, #32]
 801636c:	0064      	lsls	r4, r4, #1
 801636e:	fbb0 f4f4 	udiv	r4, r0, r4
 8016372:	2c04      	cmp	r4, #4
 8016374:	bf38      	it	cc
 8016376:	2404      	movcc	r4, #4
 8016378:	69e8      	ldr	r0, [r5, #28]
 801637a:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801637e:	4304      	orrs	r4, r0
 8016380:	61ec      	str	r4, [r5, #28]
 8016382:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016384:	2902      	cmp	r1, #2
 8016386:	d801      	bhi.n	801638c <i2c_clock_config+0x58>
 8016388:	2302      	movs	r3, #2
 801638a:	e7ee      	b.n	801636a <i2c_clock_config+0x36>
 801638c:	6229      	str	r1, [r5, #32]
 801638e:	e7ed      	b.n	801636c <i2c_clock_config+0x38>
 8016390:	4a16      	ldr	r2, [pc, #88]	; (80163ec <i2c_clock_config+0xb8>)
 8016392:	4294      	cmp	r4, r2
 8016394:	d8f5      	bhi.n	8016382 <i2c_clock_config+0x4e>
 8016396:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801639a:	4353      	muls	r3, r2
 801639c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80163a0:	fbb3 f3f2 	udiv	r3, r3, r2
 80163a4:	3301      	adds	r3, #1
 80163a6:	622b      	str	r3, [r5, #32]
 80163a8:	b997      	cbnz	r7, 80163d0 <i2c_clock_config+0x9c>
 80163aa:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80163ae:	fbb0 f4f4 	udiv	r4, r0, r4
 80163b2:	69eb      	ldr	r3, [r5, #28]
 80163b4:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80163b8:	61eb      	str	r3, [r5, #28]
 80163ba:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80163be:	b90b      	cbnz	r3, 80163c4 <i2c_clock_config+0x90>
 80163c0:	f044 0401 	orr.w	r4, r4, #1
 80163c4:	69eb      	ldr	r3, [r5, #28]
 80163c6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80163ca:	61eb      	str	r3, [r5, #28]
 80163cc:	69e8      	ldr	r0, [r5, #28]
 80163ce:	e7d6      	b.n	801637e <i2c_clock_config+0x4a>
 80163d0:	2119      	movs	r1, #25
 80163d2:	434c      	muls	r4, r1
 80163d4:	69eb      	ldr	r3, [r5, #28]
 80163d6:	fbb0 f4f4 	udiv	r4, r0, r4
 80163da:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80163de:	e7eb      	b.n	80163b8 <i2c_clock_config+0x84>
 80163e0:	000f4240 	andeq	r4, pc, r0, asr #4
 80163e4:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80163e8:	000186a0 	andeq	r8, r1, r0, lsr #13
 80163ec:	00061a80 	andeq	r1, r6, r0, lsl #21

080163f0 <i2c_ack_config>:
 80163f0:	6803      	ldr	r3, [r0, #0]
 80163f2:	2901      	cmp	r1, #1
 80163f4:	bf0c      	ite	eq
 80163f6:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80163fa:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80163fe:	6003      	str	r3, [r0, #0]
 8016400:	4770      	bx	lr

08016402 <i2c_ackpos_config>:
 8016402:	6803      	ldr	r3, [r0, #0]
 8016404:	b919      	cbnz	r1, 801640e <i2c_ackpos_config+0xc>
 8016406:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 801640a:	6003      	str	r3, [r0, #0]
 801640c:	4770      	bx	lr
 801640e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8016412:	e7fa      	b.n	801640a <i2c_ackpos_config+0x8>

08016414 <i2c_master_addressing>:
 8016414:	3202      	adds	r2, #2
 8016416:	bf0c      	ite	eq
 8016418:	f021 0101 	biceq.w	r1, r1, #1
 801641c:	f041 0101 	orrne.w	r1, r1, #1
 8016420:	6101      	str	r1, [r0, #16]
 8016422:	4770      	bx	lr

08016424 <i2c_enable>:
 8016424:	6803      	ldr	r3, [r0, #0]
 8016426:	f043 0301 	orr.w	r3, r3, #1
 801642a:	6003      	str	r3, [r0, #0]
 801642c:	4770      	bx	lr

0801642e <i2c_start_on_bus>:
 801642e:	6803      	ldr	r3, [r0, #0]
 8016430:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8016434:	6003      	str	r3, [r0, #0]
 8016436:	4770      	bx	lr

08016438 <i2c_stop_on_bus>:
 8016438:	6803      	ldr	r3, [r0, #0]
 801643a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801643e:	6003      	str	r3, [r0, #0]
 8016440:	4770      	bx	lr

08016442 <i2c_data_transmit>:
 8016442:	6101      	str	r1, [r0, #16]
 8016444:	4770      	bx	lr

08016446 <i2c_data_receive>:
 8016446:	6900      	ldr	r0, [r0, #16]
 8016448:	b2c0      	uxtb	r0, r0
 801644a:	4770      	bx	lr

0801644c <i2c_flag_get>:
 801644c:	098b      	lsrs	r3, r1, #6
 801644e:	5818      	ldr	r0, [r3, r0]
 8016450:	f001 011f 	and.w	r1, r1, #31
 8016454:	40c8      	lsrs	r0, r1
 8016456:	f000 0001 	and.w	r0, r0, #1
 801645a:	4770      	bx	lr

0801645c <i2c_flag_clear>:
 801645c:	f240 5301 	movw	r3, #1281	; 0x501
 8016460:	4299      	cmp	r1, r3
 8016462:	b510      	push	{r4, lr}
 8016464:	d102      	bne.n	801646c <i2c_flag_clear+0x10>
 8016466:	6943      	ldr	r3, [r0, #20]
 8016468:	6983      	ldr	r3, [r0, #24]
 801646a:	bd10      	pop	{r4, pc}
 801646c:	2201      	movs	r2, #1
 801646e:	098c      	lsrs	r4, r1, #6
 8016470:	5823      	ldr	r3, [r4, r0]
 8016472:	f001 011f 	and.w	r1, r1, #31
 8016476:	fa02 f101 	lsl.w	r1, r2, r1
 801647a:	ea23 0101 	bic.w	r1, r3, r1
 801647e:	5021      	str	r1, [r4, r0]
 8016480:	e7f3      	b.n	801646a <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08016484 <vtable for DisplayUdfHandler-0xc8>:
 8016484:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8016488:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8016494:	03020100 	movweq	r0, #8448	; 0x2100
 8016498:	08070604 	stmdaeq	r7, {r2, r9, sl}
 801649c:	00000009 	andeq	r0, r0, r9
 80164a0:	03020100 	movweq	r0, #8448	; 0x2100
 80164a4:	3a313104 	bcc	8c628bc <__exidx_end+0xc4a188>
 80164a8:	333a3931 	teqcc	sl, #802816	; 0xc4000
 80164ac:	614d0038 	cmpvs	sp, r8, lsr r0
 80164b0:	32202072 	eorcc	r2, r0, #114	; 0x72
 80164b4:	32303220 	eorscc	r3, r0, #32, 4
 80164b8:	72410032 	subvc	r0, r1, #50	; 0x32
 80164bc:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
 80164c0:	20342074 	eorscs	r2, r4, r4, ror r0
 80164c4:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
 80164c8:	335b1b20 	cmpcc	fp, #32, 22	; 0x8000
 80164cc:	4d446d32 	stclmi	13, cr6, [r4, #-200]	; 0xffffff38
 80164d0:	44522f58 	ldrbmi	r2, [r2], #-3928	; 0xfffff0a8
 80164d4:	6f63204d 	svcvs	0x0063204d
 80164d8:	6f72746e 	svcvs	0x0072746e
 80164dc:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 80164e0:	20347b20 	eorscs	r7, r4, r0, lsr #22
 80164e4:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 80164e8:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80164ec:	5b1b7d73 	blpl	86f5ac0 <__exidx_end+0x6dd38c>
 80164f0:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 80164f4:	6f635f2e 	svcvs	0x00635f2e
 80164f8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80164fc:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8016500:	00707474 	rsbseq	r7, r0, r4, ror r4
 8016504:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8016508:	7472413d 	ldrbtvc	r4, [r2], #-317	; 0xfffffec3
 801650c:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
 8016510:	44203420 	strtmi	r3, [r0], #-1056	; 0xfffffbe0
 8016514:	522f584d 	eorpl	r5, pc, #5046272	; 0x4d0000
 8016518:	41004d44 	tstmi	r0, r4, asr #26
 801651c:	4e2d7472 	mcrmi	4, 1, r7, cr13, cr2, {3}
 8016520:	34207465 	strtcc	r7, [r0], #-1125	; 0xfffffb9b
 8016524:	00752520 	rsbseq	r2, r5, r0, lsr #10
 8016528:	21786d64 	cmncs	r8, r4, ror #26
 801652c:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
 8016530:	00236b61 	eoreq	r6, r3, r1, ror #22
 8016534:	2362616d 	cmncs	r2, #1073741851	; 0x4000001b
 8016538:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
 801653c:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8016540:	6c730023 	ldclvs	0, cr0, [r3], #-140	; 0xffffff74
 8016544:	2373746f 	cmncs	r3, #1862270976	; 0x6f000000
 8016548:	00000000 	andeq	r0, r0, r0

0801654c <vtable for DisplayUdfHandler>:
	...
 8016554:	080088eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, fp, pc}
 8016558:	08008951 	stmdaeq	r0, {r0, r4, r6, r8, fp, pc}
 801655c:	080089c1 	stmdaeq	r0, {r0, r6, r7, r8, fp, pc}
 8016560:	080088ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, fp, pc}
 8016564:	080089ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, pc}
 8016568:	08008999 	stmdaeq	r0, {r0, r3, r4, r7, r8, fp, pc}
 801656c:	08008985 	stmdaeq	r0, {r0, r2, r7, r8, fp, pc}
 8016570:	08008971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, pc}
 8016574:	0800895d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, fp, pc}

08016578 <vtable for DisplayHandler>:
	...
 8016580:	080088ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, fp, pc}
 8016584:	08008945 	stmdaeq	r0, {r0, r2, r6, r8, fp, pc}
 8016588:	080089e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, pc}

0801658c <vtable for ArtNetReboot>:
	...
 8016594:	080088f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, pc}
 8016598:	08008939 	stmdaeq	r0, {r0, r3, r4, r5, r8, fp, pc}
 801659c:	08008915 	stmdaeq	r0, {r0, r2, r4, r8, fp, pc}

080165a0 <CSWTCH.117>:
 80165a0:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80165a4:	 	eorcc	r3, lr, r6, asr #2

080165a5 <SOFTWARE_VERSION>:
 80165a5:	00302e31 	eorseq	r2, r0, r1, lsr lr
 80165a9:	 	andeq	r0, r0, r0

080165ac <vtable for DmxInput>:
	...
 80165b4:	08009165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip, pc}
 80165b8:	08009205 	stmdaeq	r0, {r0, r2, r9, ip, pc}
 80165bc:	08009169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, pc}
 80165c0:	08009199 	stmdaeq	r0, {r0, r3, r4, r7, r8, ip, pc}
 80165c4:	080091c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, ip, pc}
 80165c8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165cc:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165d0:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80165d4:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80165d8:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80165dc:	0a73252c 	beq	9cdfa94 <__exidx_end+0x1cc7360>
 80165e0:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80165e4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165e8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165ec:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80165f0:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80165f4:	4f000a64 	svcmi	0x00000a64
 80165f8:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80165fc:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8016600:	616c7073 	smcvs	50947	; 0xc703
 8016604:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8016608:	6674000a 	ldrbtvs	r0, [r4], -sl
 801660c:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8016610:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8016614:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016618:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 801661c:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8016620:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016624:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016628:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 801662c:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8016630:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 8016634:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
 8016638:	23707466 	cmncs	r0, #1711276032	; 0x66000000
 801663c:	73696400 	cmnvc	r9, #0, 8
 8016640:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016644:	52450023 	subpl	r0, r5, #35	; 0x23
 8016648:	23524f52 	cmpcs	r2, #328	; 0x148
 801664c:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
 8016650:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8016654:	000a3f23 	andeq	r3, sl, r3, lsr #30
 8016658:	6f626572 	svcvs	0x00626572
 801665c:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8016660:	73696c00 	cmnvc	r9, #0, 24
 8016664:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8016668:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 801666c:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8016670:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016674:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8016678:	6f697372 	svcvs	0x00697372
 801667c:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 8016680:	00237465 	eoreq	r7, r3, r5, ror #8
 8016684:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8016688:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 801668c:	 	subvc	r0, r1, #35	; 0x23

0801668e <s_Node>:
 801668e:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8016692:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801669e:	41730000 	cmnmi	r3, r0
 80166a2:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80166a6:	31332e31 	teqcc	r3, r1, lsr lr
	...
 80166b2:	2043534f 	subcs	r5, r3, pc, asr #6
 80166b6:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80166ba:	00007265 	andeq	r7, r0, r5, ror #4
 80166be:	00000000 	andeq	r0, r0, r0
 80166c2:	544c0000 	strbpl	r0, [ip], #-0
 80166c6:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80166d6:	2043534f 	subcs	r5, r3, pc, asr #6
 80166da:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80166de:	0000746e 	andeq	r7, r0, lr, ror #8
 80166e2:	00000000 	andeq	r0, r0, r0
 80166e6:	44520000 	ldrbmi	r0, [r2], #-0
 80166ea:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80166ee:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80166f2:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80166f6:	0000796c 	andeq	r7, r0, ip, ror #18
 80166fa:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80166fe:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 801670a:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 801670e:	00004944 	andeq	r4, r0, r4, asr #18
	...
 801671e:	00504444 	subseq	r4, r0, r4, asr #8
	...

08016730 <s_Output>:
 8016730:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 801673c:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8016748:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 801674c:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8016750:	00000000 	andeq	r0, r0, r0
 8016754:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8016758:	0000006c 	andeq	r0, r0, ip, rrx
 801675c:	00000000 	andeq	r0, r0, r0
 8016760:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8016764:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8016768:	00000000 	andeq	r0, r0, r0
 801676c:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8016778:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801677c:	00006769 	andeq	r6, r0, r9, ror #14
 8016780:	00000000 	andeq	r0, r0, r0
 8016784:	70657453 	rsbvc	r7, r5, r3, asr r4
 8016788:	00726570 	rsbseq	r6, r2, r0, ror r5
 801678c:	00000000 	andeq	r0, r0, r0
 8016790:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8016794:	00007265 	andeq	r7, r0, r5, ror #4
 8016798:	00000000 	andeq	r0, r0, r0
 801679c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80167a0:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80167a4:	00000000 	andeq	r0, r0, r0
 80167a8:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 80167ac:	00006c61 	andeq	r6, r0, r1, ror #24
 80167b0:	00000000 	andeq	r0, r0, r0
 80167b4:	20424752 	subcs	r4, r2, r2, asr r7
 80167b8:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 80167bc:	0000006c 	andeq	r0, r0, ip, rrx

080167c0 <RemoteConfig::s_GET>:
 80167c0:	08009d79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, ip, pc}
 80167c4:	00000000 	andeq	r0, r0, r0
 80167c8:	08016658 	stmdaeq	r1, {r3, r4, r6, r9, sl, sp, lr}
 80167cc:	00000008 	andeq	r0, r0, r8
 80167d0:	08009231 	stmdaeq	r0, {r0, r4, r5, r9, ip, pc}
 80167d4:	00000000 	andeq	r0, r0, r0
 80167d8:	08016661 	stmdaeq	r1, {r0, r5, r6, r9, sl, sp, lr}
 80167dc:	00000005 	andeq	r0, r0, r5
 80167e0:	08009231 	stmdaeq	r0, {r0, r4, r5, r9, ip, pc}
 80167e4:	00000000 	andeq	r0, r0, r0
 80167e8:	08016667 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, sp, lr}
 80167ec:	00000006 	andeq	r0, r0, r6
 80167f0:	08009435 	stmdaeq	r0, {r0, r2, r4, r5, sl, ip, pc}
 80167f4:	00000000 	andeq	r0, r0, r0
 80167f8:	0801666e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
 80167fc:	00000007 	andeq	r0, r0, r7
 8016800:	080093f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, ip, pc}
 8016804:	00000000 	andeq	r0, r0, r0
 8016808:	08016676 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, sp, lr}
 801680c:	00000008 	andeq	r0, r0, r8
 8016810:	08009319 	stmdaeq	r0, {r0, r3, r4, r8, r9, ip, pc}
 8016814:	00000000 	andeq	r0, r0, r0
 8016818:	0801663d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, sp, lr}
 801681c:	00000008 	andeq	r0, r0, r8
 8016820:	080096b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, ip, pc}
 8016824:	00000000 	andeq	r0, r0, r0
 8016828:	0801667f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, sp, lr}
 801682c:	00010004 	andeq	r0, r1, r4
 8016830:	08009399 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, ip, pc}
 8016834:	00000000 	andeq	r0, r0, r0
 8016838:	08016637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp, lr}
 801683c:	00000005 	andeq	r0, r0, r5
 8016840:	08009a61 	stmdaeq	r0, {r0, r5, r6, r9, fp, ip, pc}
 8016844:	00000000 	andeq	r0, r0, r0
 8016848:	08016684 	stmdaeq	r1, {r2, r7, r9, sl, sp, lr}
 801684c:	00000009 	andeq	r0, r0, r9

08016850 <RemoteConfig::s_SET>:
 8016850:	08009375 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, ip, pc}
 8016854:	00000000 	andeq	r0, r0, r0
 8016858:	08016637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, sp, lr}
 801685c:	00010005 	andeq	r0, r1, r5
 8016860:	08009489 	stmdaeq	r0, {r0, r3, r7, sl, ip, pc}
 8016864:	00000000 	andeq	r0, r0, r0
 8016868:	0801663d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, sp, lr}
 801686c:	00010008 	andeq	r0, r1, r8
 8016870:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016874:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8016878:	73252300 			; <UNDEFINED> instruction: 0x73252300
 801687c:	0a64253d 	beq	991fd78 <__exidx_end+0x1907644>
 8016880:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8016884:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016888:	002c2273 	eoreq	r2, ip, r3, ror r2
 801688c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8016890:	000a7325 	andeq	r7, sl, r5, lsr #6
 8016894:	6f626552 	svcvs	0x00626552
 8016898:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801689c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 80168a0:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 80168a4:	6f6f6265 	svcvs	0x006f6265
 80168a8:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80168ac:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 80168b0:	6f637200 	svcvs	0x00637200
 80168b4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80168b8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80168bc:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80168c0:	6b726f77 	blvs	9cb26a4 <__exidx_end+0x1c99f70>
 80168c4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80168c8:	73696400 	cmnvc	r9, #0, 8
 80168cc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80168d0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80168d4:	33316500 	teqcc	r1, #0, 10
 80168d8:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80168dc:	61700074 	cmnvs	r0, r4, ror r0
 80168e0:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80168e4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80168e8:	00000000 	andeq	r0, r0, r0

080168ec <RemoteConfig::s_TXT>:
 80168ec:	080096bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, ip, pc}
 80168f0:	00000000 	andeq	r0, r0, r0
 80168f4:	08009985 	stmdaeq	r0, {r0, r2, r7, r8, fp, ip, pc}
 80168f8:	00000000 	andeq	r0, r0, r0
 80168fc:	080168b1 	stmdaeq	r1, {r0, r4, r5, r7, fp, sp, lr}
 8016900:	0000000b 	andeq	r0, r0, fp
 8016904:	0000000c 	andeq	r0, r0, ip
 8016908:	080096e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, ip, pc}
 801690c:	00000000 	andeq	r0, r0, r0
 8016910:	080099b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, ip, pc}
 8016914:	00000000 	andeq	r0, r0, r0
 8016918:	080168bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, fp, sp, lr}
 801691c:	0000000b 	andeq	r0, r0, fp
 8016920:	00000000 	andeq	r0, r0, r0
 8016924:	0800976d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sl, ip, pc}
 8016928:	00000000 	andeq	r0, r0, r0
 801692c:	08009a35 	stmdaeq	r0, {r0, r2, r4, r5, r9, fp, ip, pc}
 8016930:	00000000 	andeq	r0, r0, r0
 8016934:	080168c9 	stmdaeq	r1, {r0, r3, r6, r7, fp, sp, lr}
 8016938:	0000000b 	andeq	r0, r0, fp
 801693c:	0000000f 	andeq	r0, r0, pc
 8016940:	08009715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, ip, pc}
 8016944:	00000000 	andeq	r0, r0, r0
 8016948:	080099e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp, ip, pc}
 801694c:	00000000 	andeq	r0, r0, r0
 8016950:	080168d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, fp, sp, lr}
 8016954:	00000008 	andeq	r0, r0, r8
 8016958:	00000004 	andeq	r0, r0, r4
 801695c:	08009741 	stmdaeq	r0, {r0, r6, r8, r9, sl, ip, pc}
 8016960:	00000000 	andeq	r0, r0, r0
 8016964:	08009a0d 	stmdaeq	r0, {r0, r2, r3, r9, fp, ip, pc}
 8016968:	00000000 	andeq	r0, r0, r0
 801696c:	080168de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, fp, sp, lr}
 8016970:	0000000a 	andeq	r0, r0, sl
 8016974:	00000002 	andeq	r0, r0, r2
 8016978:	00544547 	subseq	r4, r4, r7, asr #10
 801697c:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8016980:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8016984:	0a200050 	beq	8816acc <__exidx_end+0x7fe398>
 8016988:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 801698c:	43003a00 	movwmi	r3, #2560	; 0xa00
 8016990:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016994:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8016998:	00657079 	rsbeq	r7, r5, r9, ror r0
 801699c:	61003b20 	tstvs	r0, r0, lsr #22
 80169a0:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 80169a4:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 80169a8:	6a2f6e6f 	bvs	8bf236c <__exidx_end+0xbd9c38>
 80169ac:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 80169b0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80169b4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80169b8:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 80169bc:	2f006874 	svccs	0x00006874
 80169c0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80169c4:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80169c8:	2f006c6d 	svccs	0x00006c6d
 80169cc:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80169d0:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80169d4:	2f007373 	svccs	0x00007373
 80169d8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80169dc:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80169e0:	736a2f00 	cmnvc	sl, #0, 30
 80169e4:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80169e8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80169ec:	72657600 	rsbvc	r7, r5, #0, 12
 80169f0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80169f4:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80169f8:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80169fc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016a00:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8016a04:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016a08:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016a0c:	6a2f0079 	bvs	8bd6bf8 <__exidx_end+0xbbe4c4>
 8016a10:	2f6e6f73 	svccs	0x006e6f73
 8016a14:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8016a18:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8016a1c:	6f6f6265 	svcvs	0x006f6265
 8016a20:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8016a24:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8016a28:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8016a2c:	434f4421 	movtmi	r4, #62497	; 0xf421
 8016a30:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8016a34:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8016a38:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016a3c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016a40:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8016a44:	3e646165 	powccsz	f6, f4, f5
 8016a48:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016a4c:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8016a50:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8016a54:	742f3c74 	strtvc	r3, [pc], #-3188	; 8016a5c <RemoteConfig::s_TXT+0x170>
 8016a58:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8016a5c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016a60:	3e646165 	powccsz	f6, f4, f5
 8016a64:	6f623c0a 	svcvs	0x00623c0a
 8016a68:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8016a6c:	4f3e3168 	svcmi	0x003e3168
 8016a70:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016a74:	2f3c3e31 	svccs	0x003c3e31
 8016a78:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016a7c:	2f3c0a3e 	svccs	0x003c0a3e
 8016a80:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016a84:	52000a3e 	andpl	r0, r0, #253952	; 0x3e000
 8016a88:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8016a8c:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8016a90:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8016a94:	6f542079 	svcvs	0x00542079
 8016a98:	614c206f 	cmpvs	ip, pc, rrx
 8016a9c:	00656772 	rsbeq	r6, r5, r2, ror r7
 8016aa0:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8016aa4:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 8016aa8:	65520064 	ldrbvs	r0, [r2, #-100]	; 0xffffff9c
 8016aac:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8016ab0:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8016ab4:	6f542049 	svcvs	0x00542049
 8016ab8:	6f4c206f 	svcvs	0x004c206f
 8016abc:	5600676e 	strpl	r6, [r0], -lr, ror #14
 8016ac0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016ac4:	4e206e6f 	cdpmi	14, 2, cr6, cr0, cr15, {3}
 8016ac8:	5320746f 			; <UNDEFINED> instruction: 0x5320746f
 8016acc:	6f707075 	svcvs	0x00707075
 8016ad0:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 8016ad4:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8016ad8:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8016adc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8016ae0:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8016ae4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8016ae8:	00646574 	rsbeq	r6, r4, r4, ror r5
 8016aec:	20646142 	rsbcs	r6, r4, r2, asr #2
 8016af0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8016af4:	00747365 	rsbseq	r7, r4, r5, ror #6
 8016af8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8016afc:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8016b00:	6f727245 	svcvs	0x00727245
 8016b04:	6e490072 	mcrvs	0, 2, r0, cr9, cr2, {3}
 8016b08:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8016b0c:	53206c61 			; <UNDEFINED> instruction: 0x53206c61
 8016b10:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 8016b14:	72452072 	subvc	r2, r5, #114	; 0x72
 8016b18:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8016b1c:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8016b20:	434f4421 	movtmi	r4, #62497	; 0xf421
 8016b24:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8016b28:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8016b2c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016b30:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016b34:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8016b38:	3e646165 	powccsz	f6, f4, f5
 8016b3c:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016b40:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8016b44:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8016b48:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016b4c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8016b50:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8016b54:	0a3e6461 	beq	8fafce0 <__exidx_end+0xf975ac>
 8016b58:	646f623c 	strbtvs	r6, [pc], #-572	; 8016b60 <RemoteConfig::s_TXT+0x274>
 8016b5c:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016b60:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8016b64:	31682f3c 	cmncc	r8, ip, lsr pc
 8016b68:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8016b6c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016b70:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016b74:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016b78:	5448000a 	strbpl	r0, [r8], #-10
 8016b7c:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8016b80:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8016b84:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8016b88:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8016b8c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8016b90:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8016b94:	6f430a0d 	svcvs	0x00430a0d
 8016b98:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016b9c:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8016ba0:	203a6570 	eorscs	r6, sl, r0, ror r5
 8016ba4:	0a0d7325 	beq	8373840 <__exidx_end+0x35b10c>
 8016ba8:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8016bac:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8016bb0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8016bb4:	203a6874 	eorscs	r6, sl, r4, ror r8
 8016bb8:	0a0d7525 	beq	8374054 <__exidx_end+0x35b920>
 8016bbc:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8016bc0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8016bc4:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 8016bc8:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8016bcc:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8016bd0:	4447000a 	strbmi	r0, [r7], #-10
 8016bd4:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 8016bd8:	5f433730 	svcpl	0x00433730
 8016bdc:	4c415645 	mcrrmi	6, 4, r5, r1, cr5
	...

08016be1 <contentType>:
 8016be1:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016be5:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8016be9:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8016c01:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016c05:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8016c21:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016c25:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8016c29:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8016c2d:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8016c41:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8016c45:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8016c49:	2f6e6f69 	svccs	0x006e6f69
 8016c4d:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08016c61 <RemoteConfigConst::PARAMS_DISABLE>:
 8016c61:	61736964 	cmnvs	r3, r4, ror #18
 8016c65:	00656c62 	rsbeq	r6, r5, r2, ror #24

08016c69 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8016c69:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8016c6d:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8016c71:	00747874 	rsbseq	r7, r4, r4, ror r8

08016c75 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8016c75:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016c79:	5f79616c 	svcpl	0x0079616c
 8016c7d:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016c82 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8016c82:	61736964 	cmnvs	r3, r4, ror #18
 8016c86:	5f656c62 	svcpl	0x00656c62
 8016c8a:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8016c8e:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016c90 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8016c90:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016c94:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8016c98:	6f6f6265 	svcvs	0x006f6265
 8016c9c:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08016c9e <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8016c9e:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016ca2:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 801673e <s_Output+0xe>
 8016ca6:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016caa:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016cac <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8016cac:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8016cb0:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8016cb4:	6f746361 	svcvs	0x00746361
 8016cb8:	7b007972 	blvc	8035288 <__exidx_end+0x1cb54>
 8016cbc:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8016cc0:	7b3a2274 	blvc	8e9f698 <__exidx_end+0xe86f64>
 8016cc4:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8016cc8:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016ccc:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016cd0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016cd4:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016cd8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8016cdc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016ce0:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016ce4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8016ce8:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016cec:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016cf0:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016cf4:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016cf8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016cfc:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016d00:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016d04:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016d08:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016d0c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016d10:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8016d14:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8016d18:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016d1c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016d20:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016d24:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016d28:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016d2c:	616f6222 	cmnvs	pc, r2, lsr #4
 8016d30:	3a226472 	bcc	88aff00 <__exidx_end+0x8977cc>
 8016d34:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016d38:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8016d3c:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8016d40:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8016d44:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8016d48:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016d4c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016d50:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8016d54:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8016d58:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016d5c:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8016d60:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8016d64:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016d68:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8016d6c:	7b000a7d 	blvc	8019768 <__exidx_end+0x1034>
 8016d70:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8016d74:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016d78:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8016d7c:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016d80:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016d84:	7b3a2273 	blvc	8e9f758 <__exidx_end+0xe87024>
 8016d88:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8016d8c:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016d90:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8016d94:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016d98:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016d9c:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8016da0:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8016da4:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8016da8:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8016dac:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8016db0:	72542058 	subsvc	r2, r4, #88	; 0x58
 8016db4:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8016db8:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8016dbc:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8016dc0:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016dc4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016dc8:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8016dcc:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016dd0:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8016dd4:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 8016dd8:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 8016ddc:	6b726f77 	blvs	9cb2bc0 <__exidx_end+0x1c9a48c>
 8016de0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016de4:	4e223a22 	vmulmi.f32	s6, s4, s5
 8016de8:	6f777465 	svcvs	0x00777465
 8016dec:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8016df0:	6f637222 	svcvs	0x00637222
 8016df4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016df8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016dfc:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8016e00:	746f6d65 	strbtvc	r6, [pc], #-3429	; 8016e08 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8016e04:	6f632065 	svcvs	0x00632065
 8016e08:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016e0c:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8016e10:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016e14:	73007d7d 	movwvc	r7, #3453	; 0xd7d
 8016e18:	682f6372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
 8016e1c:	64707474 	ldrbtvs	r7, [r0], #-1140	; 0xfffffb8c
 8016e20:	7465672f 	strbtvc	r6, [r5], #-1839	; 0xfffff8d1
 8016e24:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8016e28:	6f635f65 	svcvs	0x00635f65
 8016e2c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016e30:	70632e74 	rsbvc	r2, r3, r4, ror lr
 8016e34:	65670070 	strbvs	r0, [r7, #-112]!	; 0xffffff90
 8016e38:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016e3c:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 8016e40:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016e44:	2500746e 	strcs	r7, [r0, #-1134]	; 0xfffffb92
 8016e48:	20292873 	eorcs	r2, r9, r3, ror r8
 8016e4c:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8016e50:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 8016e54:	3a692520 	bcc	9a602dc <__exidx_end+0x1a47ba8>
 8016e58:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8016e5c:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 8016e60:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 8016e64:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 8016e68:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 8016e6c:	0a64253a 	beq	992035c <__exidx_end+0x1907c28>
	...

08016e71 <index_html>:
 8016e71:	4f44213c 	svcmi	0x0044213c
 8016e75:	50595443 	subspl	r5, r9, r3, asr #8
 8016e79:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8016e7d:	0a3e6c6d 	beq	8fb2039 <__exidx_end+0xf99905>
 8016e81:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8016e85:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016e89:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8016e8d:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8016e91:	6b6e696c 	blvs	9bb1449 <__exidx_end+0x1b98d15>
 8016e95:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8016e99:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8016e9d:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8016ea1:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8016ea5:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8016ea9:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8016ead:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8016eb1:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8016eb5:	20227373 	eorcs	r7, r2, r3, ror r3
 8016eb9:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8016ebd:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016ec1:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8016ec5:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8016ec9:	0a3e656c 	beq	8fb0481 <__exidx_end+0xf97d4d>
 8016ecd:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8016ed1:	0a3e6461 	beq	8fb005d <__exidx_end+0xf97929>
 8016ed5:	646f623c 	strbtvs	r6, [pc], #-572	; 8016edd <index_html+0x6c>
 8016ed9:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016edd:	6165683c 	cmnvs	r5, ip, lsr r8
 8016ee1:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8016ee5:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8016ee9:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8016eed:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8016ef1:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8016ef5:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016ef9:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016efd:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8016f01:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016f05:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8016f09:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8016f0d:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8016f11:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8016f15:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8016f19:	6f746365 	svcvs	0x00746365
 8016f1d:	20227972 	eorcs	r7, r2, r2, ror r9
 8016f21:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8016f25:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8016f29:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8016f2d:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016f31:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8016f35:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8016f39:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8016f3d:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8016f41:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8016f45:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8016f49:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8016f4d:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8016f51:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8016f55:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016f59:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8016f5d:	20227478 	eorcs	r7, r2, r8, ror r4
 8016f61:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016f65:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8016f69:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8016f6d:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8016f71:	0a3e656c 	beq	8fb0529 <__exidx_end+0xf97df5>
 8016f75:	6f663c09 	svcvs	0x00663c09
 8016f79:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8016f7d:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8016f81:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016f85:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016f89:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016f8d:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8016f91:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016f95:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016f99:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016f9d:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016fa1:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8016fa5:	20747069 	rsbscs	r7, r4, r9, rrx
 8016fa9:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016fad:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8016fb1:	6a2e7865 	bvs	8bb514d <__exidx_end+0xb9ca19>
 8016fb5:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8016fb9:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8016fbd:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8016fc1:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8016fc5:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016fc9:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016fcd:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016fd1:	 	svcvs	0x0062000a

08016fd3 <styles_css>:
 8016fd3:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016fd7:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016fdb:	63616220 	cmnvs	r1, #32, 4
 8016fdf:	6f72676b 	svcvs	0x0072676b
 8016fe3:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8016fe7:	6f6c6f63 	svcvs	0x006c6f63
 8016feb:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016fef:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016ff3:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8016ff7:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8016ffb:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016fff:	6f6c6f63 	svcvs	0x006c6f63
 8017003:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8017007:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801700b:	202c3535 	eorcs	r3, ip, r5, lsr r5
 801700f:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8017013:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8017017:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 801701b:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 801701f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8017023:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8017027:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801702b:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801702f:	0a3b7865 	beq	8ef51cb <__exidx_end+0xedca97>
 8017033:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8017037:	0a7b2069 	beq	9edf1e3 <__exidx_end+0x1ec6aaf>
 801703b:	696c2020 	stmdbvs	ip!, {r5, sp}^
 801703f:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8017043:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8017047:	6f6e203a 	svcvs	0x006e203a
 801704b:	0a3b656e 	beq	8ef060b <__exidx_end+0xed7ed7>
 801704f:	616d2020 	cmnvs	sp, r0, lsr #32
 8017053:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8017057:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 801705b:	70352078 	eorsvc	r2, r5, r8, ror r0
 801705f:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8017063:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8017067:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801706b:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801706f:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8017073:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8017077:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801707b:	0a3b7865 	beq	8ef5217 <__exidx_end+0xedcae3>
 801707f:	6f622020 	svcvs	0x00622020
 8017083:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8017087:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801708b:	3a737569 	bcc	9cf4637 <__exidx_end+0x1cdbf03>
 801708f:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8017093:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8017097:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801709b:	203a7265 	eorscs	r7, sl, r5, ror #4
 801709f:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80170a3:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80170a7:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80170ab:	0a3b7870 	beq	8ef5273 <__exidx_end+0xedcb3f>
 80170af:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 80170b3:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80170b7:	0a7b2072 	beq	9edf287 <__exidx_end+0x1ec6b53>
 80170bb:	69642020 	stmdbvs	r4!, {r5, sp}^
 80170bf:	616c7073 	smcvs	50947	; 0xc703
 80170c3:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80170c7:	3b78656c 	blcc	9e3067f <__exidx_end+0x1e17f4b>
 80170cb:	6a20200a 	bvs	881f0fb <__exidx_end+0x8069c7>
 80170cf:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80170d3:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80170d7:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80170db:	203a746e 	eorscs	r7, sl, lr, ror #8
 80170df:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80170e3:	0a3b7265 	beq	8ef3a7f <__exidx_end+0xedb34b>
 80170e7:	6f622020 	svcvs	0x00622020
 80170eb:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80170ef:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80170f3:	3a737569 	bcc	9cf469f <__exidx_end+0x1cdbf6b>
 80170f7:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80170fb:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80170ff:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8017103:	203a7265 	eorscs	r7, sl, r5, ror #4
 8017107:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801710b:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801710f:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8017113:	0a3b7870 	beq	8ef52db <__exidx_end+0xedcba7>
 8017117:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

0801711c <HttpContent>:
 801711c:	080169cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, sp, lr}
 8017120:	08016fd3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 8017124:	080169d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, sp, lr}
 8017128:	08017134 	stmdaeq	r1, {r2, r4, r5, r8, ip, sp, lr}
 801712c:	080169c0 	stmdaeq	r1, {r6, r7, r8, fp, sp, lr}
 8017130:	08016e71 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, fp, sp, lr}

08017134 <index_js>:
 8017134:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017138:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801713c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017140:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017144:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017148:	6a284e4f 	bvs	8a2aa8c <__exidx_end+0xa12358>
 801714c:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017150:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017154:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017158:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 801715c:	6a2f273d 	bvs	8be0e58 <__exidx_end+0xbc8724>
 8017160:	2f6e6f73 	svccs	0x006e6f73
 8017164:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8017168:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 801716c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8017170:	20797274 	rsbscs	r7, r9, r4, ror r2
 8017174:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8017178:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 801717c:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8017180:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8017184:	20746961 	rsbscs	r6, r4, r1, ror #18
 8017188:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 801718c:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8017190:	0a3b296c 	beq	8ee1748 <__exidx_end+0xec9014>
 8017194:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017198:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 801719c:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 80171a0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80171a4:	73657220 	cmnvc	r5, #32, 4
 80171a8:	6f736a2e 	svcvs	0x00736a2e
 80171ac:	3b29286e 	blcc	8a6136c <__exidx_end+0xa48c38>
 80171b0:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80171b4:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 80171b8:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 80171bc:	6f727265 	svcvs	0x00727265
 80171c0:	7b202972 	blvc	8821790 <__exidx_end+0x80905c>
 80171c4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80171c8:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 80171cc:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 80171d0:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80171d4:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 80171d8:	3b29726f 	blcc	8a73b9c <__exidx_end+0xa5b468>
 80171dc:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80171e0:	0a0a7d0a 	beq	82b6610 <__exidx_end+0x29dedc>
 80171e4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80171e8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80171ec:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80171f0:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80171f4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80171f8:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80171fc:	20292874 	eorcs	r2, r9, r4, ror r8
 8017200:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8017204:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017208:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801720c:	6177613d 	cmnvs	r7, sp, lsr r1
 8017210:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017214:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017218:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801721c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017220:	0a3b2927 	beq	8ee16c4 <__exidx_end+0xec8f90>
 8017224:	6f640909 	svcvs	0x00640909
 8017228:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 801722c:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8017230:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017234:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8017238:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 801723c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8017240:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8017244:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8017248:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 801724c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017250:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8017254:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8017258:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 801725c:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8017260:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8017264:	2b656d61 	blcs	99727f0 <__exidx_end+0x195a0bc>
 8017268:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80171e8 <index_js+0xb4>
 801726c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017270:	2b223e69 	blcs	88a6c1c <__exidx_end+0x88e4e8>
 8017274:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017278:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 801727c:	6f6e2e74 	svcvs	0x006e2e74
 8017280:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8017284:	2b657079 	blcs	9973470 <__exidx_end+0x195ad3c>
 8017288:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017208 <index_js+0xd4>
 801728c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017290:	2b223e69 	blcs	88a6c3c <__exidx_end+0x88e508>
 8017294:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8017298:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 801729c:	6f6e2e74 	svcvs	0x006e2e74
 80172a0:	702e6564 	eorvc	r6, lr, r4, ror #10
 80172a4:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 80172a8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80172ac:	2f3c222b 	svccs	0x003c222b
 80172b0:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80172b4:	0a7d0a3b 	beq	9f59ba8 <__exidx_end+0x1f41474>
 80172b8:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80172bc:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80172c0:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80172c4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80172c8:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80172cc:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80172d0:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80172d4:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80172d8:	0a7b2029 	beq	9edf384 <__exidx_end+0x1ec6c50>
 80172dc:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80172e0:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80172e4:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80172e8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80172ec:	6177613d 	cmnvs	r7, sp, lsr r1
 80172f0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80172f4:	534a7465 	movtpl	r7, #42085	; 0xa465
 80172f8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80172fc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017300:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017304:	3b292779 	blcc	8a610f0 <__exidx_end+0xa489bc>
 8017308:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801730c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017310:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017314:	0a22223d 	beq	889fc10 <__exidx_end+0x8874dc>
 8017318:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 801731c:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8017320:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8017324:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8017328:	6a624f3d 	bvs	98ab024 <__exidx_end+0x18928f0>
 801732c:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8017330:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8017334:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8017338:	6f746365 	svcvs	0x00746365
 801733c:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8017340:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8017344:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8017348:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 801734c:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8017350:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8017354:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8017358:	6145726f 	cmpvs	r5, pc, ror #4
 801735c:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8017360:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8017364:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017368:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 801736c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017370:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8017374:	20726176 	rsbscs	r6, r2, r6, ror r1
 8017378:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 801737c:	203d2065 	eorscs	r2, sp, r5, rrx
 8017380:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017384:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017388:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 801738c:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8017390:	6b5b5d22 	blvs	96ee820 <__exidx_end+0x16d60ec>
 8017394:	3b5d7965 	blcc	9775930 <__exidx_end+0x175d1fc>
 8017398:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801739c:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 80173a0:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 80173a4:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 80173a8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80173ac:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 80173b0:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 80173b4:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80173b8:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 80173bc:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80173c0:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80173c4:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 80173c8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80173cc:	0a3b223e 	beq	8edfccc <__exidx_end+0xec7598>
 80173d0:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80173d4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80173d8:	6f640909 	svcvs	0x00640909
 80173dc:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80173e0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80173e4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80173e8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80173ec:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80173f0:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80173f4:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80173f8:	6f746365 	svcvs	0x00746365
 80173fc:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8017400:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8017404:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8017408:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 801740c:	3b6c6d74 	blcc	9b329e4 <__exidx_end+0x1b1a2b0>
 8017410:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017414:	5f746567 	svcpl	0x00746567
 8017418:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 801741c:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8017420:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8017424:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8017428:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 801742c:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8017430:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8017434:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017438:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801743c:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8017440:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8017444:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017448:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 801744c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8017450:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8017454:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8017458:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801745c:	6177613d 	cmnvs	r7, sp, lsr r1
 8017460:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8017464:	534a7465 	movtpl	r7, #42085	; 0xa465
 8017468:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 801746c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017470:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8017474:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017478:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 801747c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8017480:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8017484:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8017488:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 801748c:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8017490:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8017494:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8017498:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801749c:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 80174a0:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 80174a4:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 80174a8:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 80174ac:	2b22563e 	blcs	88acdac <__exidx_end+0x894678>
 80174b0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80174b4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80174b8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80174bc:	2b6e6f69 	blcs	9bb3268 <__exidx_end+0x1b9ab34>
 80174c0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017440 <index_js+0x30c>
 80174c4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80174c8:	2b223e69 	blcs	88a6e74 <__exidx_end+0x88e740>
 80174cc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80174d0:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80174d4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80174d8:	61642e64 	cmnvs	r4, r4, ror #28
 80174dc:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80174e0:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80174e4:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80174e8:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80174ec:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80174f0:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80174f4:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80174f8:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80174fc:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8017500:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8017504:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8017508:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 801750c:	6f697372 	svcvs	0x00697372
 8017510:	6f622e6e 	svcvs	0x00622e6e
 8017514:	2b647261 	blcs	9933ea0 <__exidx_end+0x191b76c>
 8017518:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017498 <index_js+0x364>
 801751c:	3b223e69 	blcc	88a6ec8 <__exidx_end+0x88e794>
 8017520:	0a0a7d0a 	beq	82b6950 <__exidx_end+0x29e21c>
 8017524:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8017528:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 801752c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017530:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8017534:	745f7465 	ldrbvc	r7, [pc], #-1125	; 801753c <index_js+0x408>
 8017538:	73287478 			; <UNDEFINED> instruction: 0x73287478
 801753c:	20296c65 	eorcs	r6, r9, r5, ror #24
 8017540:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8017544:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8017548:	613d7478 	teqvs	sp, r8, ror r4
 801754c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8017550:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8017554:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8017558:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 801755c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017560:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8017564:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017568:	3b22223d 	blcc	889fe64 <__exidx_end+0x887730>
 801756c:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8017570:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8017574:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8017578:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 801757c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017580:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8017584:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8017588:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 801758c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017590:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017594:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8017598:	0a7b2029 	beq	9edf644 <__exidx_end+0x1ec6f10>
 801759c:	61760909 	cmnvs	r6, r9, lsl #18
 80175a0:	61762072 	cmnvs	r6, r2, ror r0
 80175a4:	2065756c 	rsbcs	r7, r5, ip, ror #10
 80175a8:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80175ac:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80175b0:	6b5b5d6c 	blvs	96eeb68 <__exidx_end+0x16d6434>
 80175b4:	3b5d7965 	blcc	9775b50 <__exidx_end+0x175d41c>
 80175b8:	2009090a 	andcs	r0, r9, sl, lsl #18
 80175bc:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80175c0:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 80175c4:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 80175c8:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80175cc:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80175d0:	2f3c222b 	svccs	0x003c222b
 80175d4:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80175d8:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80175dc:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80175e0:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80175e4:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80175e8:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80175f0 <index_js+0x4bc>
 80175ec:	3b223e72 	blcc	88a6fbc <__exidx_end+0x88e888>
 80175f0:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80175f4:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80175f8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80175fc:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8017600:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8017604:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8017608:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 801760c:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8017610:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8017614:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8017618:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 801761c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8017620:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8017624:	0a3b6c6d 	beq	8ef27e0 <__exidx_end+0xeda0ac>
 8017628:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 801762c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8017630:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8017634:	3b292874 	blcc	8a6180c <__exidx_end+0xa490d8>
 8017638:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 801763c:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8017640:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8017644:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017648:	0a3b2928 	beq	8ee1af0 <__exidx_end+0xec93bc>
 801764c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8017650:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8017654:	6f697372 	svcvs	0x00697372
 8017658:	3b29286e 	blcc	8a61818 <__exidx_end+0xa490e4>
 801765c:	2020000a 	eorcs	r0, r0, sl
 8017660:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8017664:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017668:	72612073 	rsbvc	r2, r1, #115	; 0x73
 801766c:	616d2065 	cmnvs	sp, r5, rrx
 8017670:	65707070 	ldrbvs	r7, [r0, #-112]!	; 0xffffff90
 8017674:	312b2064 			; <UNDEFINED> instruction: 0x312b2064
 8017678:	0000000a 	andeq	r0, r0, sl

0801767c <vtable for ArtNet4Node>:
	...
 8017684:	0800a755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, sp, pc}
 8017688:	0800a843 	stmdaeq	r0, {r0, r1, r6, fp, sp, pc}
 801768c:	0800a6f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, sl, sp, pc}
 8017690:	0800a775 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, sp, pc}
 8017694:	0800a855 	stmdaeq	r0, {r0, r2, r4, r6, fp, sp, pc}
 8017698:	0800a83b 	stmdaeq	r0, {r0, r1, r3, r4, r5, fp, sp, pc}

0801769c <ArtNetMsgConst::START>:
 801769c:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80176a0:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80176a4:	74724120 	ldrbtvc	r4, [r2], #-288	; 0xfffffee0
 80176a8:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
	...

080176ad <ArtNetMsgConst::PARAMS>:
 80176ad:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80176b1:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80176b5:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80176b9:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80176bd:	0074654e 	rsbseq	r6, r4, lr, asr #10

080176c1 <ArtNetMsgConst::RDM_RUN>:
 80176c1:	6e6e7552 	mcrvs	5, 3, r7, cr14, cr2, {2}
 80176c5:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80176c9:	204d4452 	subcs	r4, sp, r2, asr r4
 80176cd:	63736944 	cmnvs	r3, #68, 18	; 0x110000
 80176d1:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
 80176d5:	 	subvc	r0, r1, #121	; 0x79

080176d7 <ArtNetMsgConst::STARTED>:
 80176d7:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80176db:	2074654e 	rsbscs	r6, r4, lr, asr #10
 80176df:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80176e3:	00646574 	rsbeq	r6, r4, r4, ror r5
 80176e7:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 80176eb:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 80176ef:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80176f3:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80176f7:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 80176fb:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 80176ff:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8017703:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8017707:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
 801770b:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
	...

08017710 <artnet::NODE_ID>:
 8017710:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017714:	0074654e 	rsbseq	r6, r4, lr, asr #10

08017718 <defaults::SHORT_NAME>:
 8017718:	20567641 	subscs	r7, r6, r1, asr #12
 801771c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017720:	2074654e 	rsbscs	r6, r4, lr, asr #10
 8017724:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08017729 <artnet::NODE_ID>:
 8017729:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801772d:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8017731:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8017735:	30255b20 	eorcc	r5, r5, r0, lsr #22
 8017739:	205d6434 	subscs	r6, sp, r4, lsr r4
 801773d:	41207325 			; <UNDEFINED> instruction: 0x41207325
 8017741:	 	tstmi	r0, r6, ror r6

08017744 <artnet::NODE_ID>:
 8017744:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017748:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801774c:	52206f4e 	eorpl	r6, r0, #312	; 0x138
 8017750:	72204d44 	eorvc	r4, r0, #68, 26	; 0x1100
 8017754:	6f707365 	svcvs	0x00707365
 8017758:	0a65736e 	beq	9974518 <__exidx_end+0x195bde4>
 801775c:	50544800 	subspl	r4, r4, r0, lsl #16
 8017760:	50544c00 	subspl	r4, r4, r0, lsl #24
 8017764:	74724100 	ldrbtvc	r4, [r2], #-256	; 0xffffff00
 8017768:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
 801776c:	43417300 	movtmi	r7, #4864	; 0x1300
 8017770:	6f4e004e 	svcvs	0x004e004e
 8017774:	25206564 	strcs	r6, [r0, #-1380]!	; 0xfffffa9c
 8017778:	255b2064 	ldrbcs	r2, [fp, #-100]	; 0xffffff9c
 801777c:	000a5d75 	andeq	r5, sl, r5, ror sp
 8017780:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8017784:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8017788:	20202065 	eorcs	r2, r0, r5, rrx
 801778c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017790:	0a64252e 	beq	9920c50 <__exidx_end+0x190851c>
 8017794:	68532000 	ldmdavs	r3, {sp}^
 8017798:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801779c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80177a0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80177a4:	20000a73 	andcs	r0, r0, r3, ror sl
 80177a8:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 80177ac:	6d616e20 	stclvs	14, cr6, [r1, #-128]!	; 0xffffff80
 80177b0:	3a202065 	bcc	881f94c <__exidx_end+0x807218>
 80177b4:	0a732520 	beq	9ce0c3c <__exidx_end+0x1cc8508>
 80177b8:	754f2000 	strbvc	r2, [pc, #-0]	; 80177c0 <artnet::NODE_ID+0x7c>
 80177bc:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 80177c0:	2020000a 	eorcs	r0, r0, sl
 80177c4:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 80177c8:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 80177cc:	3a642520 	bcc	9920c54 <__exidx_end+0x1908520>
 80177d0:	322d255b 	eorcc	r2, sp, #381681664	; 0x16c00000
 80177d4:	2d253a64 	vstmdbcs	r5!, {s6-s105}
 80177d8:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
 80177dc:	5d64322d 	sfmpl	f3, 2, [r4, #-180]!	; 0xffffff4c
 80177e0:	7534253a 	ldrvc	r2, [r4, #-1338]!	; 0xfffffac6
 80177e4:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80177e8:	7b20005d 	blvc	8817964 <__exidx_end+0x7ff230>
 80177ec:	0a7d7325 	beq	9f74488 <__exidx_end+0x1f5bd54>
 80177f0:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 80177f4:	0a747570 	beq	9d34dbc <__exidx_end+0x1d1c688>
 80177f8:	50202000 	eorpl	r2, r0, r0
 80177fc:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8017800:	20643225 	rsbcs	r3, r4, r5, lsr #4
 8017804:	5b3a6425 	blpl	8eb08a0 <__exidx_end+0xe9816c>
 8017808:	64322d25 	ldrtvs	r2, [r2], #-3365	; 0xfffff2db
 801780c:	322d253a 	eorcc	r2, sp, #243269632	; 0xe800000
 8017810:	2d253a64 	vstmdbcs	r5!, {s6-s105}
 8017814:	3a5d6432 	bcc	97708e4 <__exidx_end+0x17581b0>
 8017818:	20753425 	rsbscs	r3, r5, r5, lsr #8
 801781c:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 8017820:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017824:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017828:	000a6425 	andeq	r6, sl, r5, lsr #8

0801782c <ArtNetConst::OEM_ID>:
 801782c:	 	ldrsheq	pc, [r0], #-255	; 0xffffff01	; <UNPREDICTABLE>

0801782e <ArtNetConst::ESTA_ID>:
 801782e:	 	strcc	r0, [r1, #-80]	; 0xffffffb0

08017830 <ArtNetConst::VERSION>:
 8017830:	33323501 	teqcc	r2, #4194304	; 0x400000
 8017834:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8017838:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 801783c:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8017840:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8017844:	30007325 	andcc	r7, r0, r5, lsr #6
 8017848:	6f4e202e 	svcvs	0x004e202e
 801784c:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8017850:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8017854:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8017858:	202c6465 	eorcs	r6, ip, r5, ror #8
 801785c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8017860:	6f687320 	svcvs	0x00687320
 8017864:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8017868:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 801786c:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8017870:	000a216e 	andeq	r2, sl, lr, ror #2
 8017874:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8017878:	000a6567 	andeq	r6, sl, r7, ror #10
 801787c:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8017880:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8017884:	203a2065 	eorscs	r2, sl, r5, rrx
 8017888:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801788c:	20000a64 	andcs	r0, r0, r4, ror #20
 8017890:	20444943 	subcs	r4, r4, r3, asr #18
 8017894:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017898:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801789c:	20000a73 	andcs	r0, r0, r3, ror sl
 80178a0:	726f5020 	rsbvc	r5, pc, #32
 80178a4:	32252074 	eorcc	r2, r5, #116	; 0x74
 80178a8:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80178ac:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80178b0:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80178b4:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 80178b8:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
 80178bc:	2020000a 	eorcs	r0, r0, sl
 80178c0:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 80178c4:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 80178c8:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80178cc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80178d0:	2d252065 	stccs	0, cr2, [r5, #-404]!	; 0xfffffe6c
 80178d4:	5b206433 	blpl	88309a8 <__exidx_end+0x818274>
 80178d8:	0a5d6425 	beq	9770974 <__exidx_end+0x1758240>
 80178dc:	79532000 	ldmdbvc	r3, {sp}^
 80178e0:	7268636e 	rsbvc	r6, r8, #-1207959551	; 0xb8000001
 80178e4:	7a696e6f 	bvc	9a732a8 <__exidx_end+0x1a5ab74>
 80178e8:	73692065 	cmnvc	r9, #101	; 0x65
 80178ec:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80178f0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80178f4:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 80178f8:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 80178fc:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8017900:	00747570 	rsbseq	r7, r4, r0, ror r5
 8017904:	00707468 	rsbseq	r7, r0, r8, ror #8
 8017908:	0070746c 	rsbseq	r7, r0, ip, ror #8
 801790c:	20584d44 	subscs	r4, r8, r4, asr #26
 8017910:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8017914:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8017918:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 801791c:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8017920:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8017924:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08017927 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8017927:	61736964 	cmnvs	r3, r4, ror #18
 801792b:	5f656c62 	svcpl	0x00656c62
 801792f:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017933:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017937:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80173d2 <index_js+0x29e>
 801793b:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

0801793d <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 801793d:	61736964 	cmnvs	r3, r4, ror #18
 8017941:	5f656c62 	svcpl	0x00656c62
 8017945:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8017949:	5f6b726f 	svcpl	0x006b726f
 801794d:	61746164 	cmnvs	r4, r4, ror #2
 8017951:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8017955:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017959:	756f656d 	strbvc	r6, [pc, #-1389]!	; 80173f4 <index_js+0x2c0>
 801795d:	 	rsbsvc	r0, r0, #116	; 0x74

0801795f <E131ParamsConst::PRIORITY>:
 801795f:	6f697270 	svcvs	0x00697270
 8017963:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017967:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801796b:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801796f:	72700000 	rsbsvc	r0, r0, #0
 8017973:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8017977:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801797b:	5f74726f 	svcpl	0x0074726f
 801797f:	00000062 	andeq	r0, r0, r2, rrx
 8017983:	6f697270 	svcvs	0x00697270
 8017987:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801798b:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801798f:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8017993:	72700000 	rsbsvc	r0, r0, #0
 8017997:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801799b:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801799f:	5f74726f 	svcpl	0x0074726f
 80179a3:	00000064 	andeq	r0, r0, r4, rrx

080179a7 <E131ParamsConst::FILE_NAME>:
 80179a7:	31333165 	teqcc	r3, r5, ror #2
 80179ab:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

080179b0 <E117Const::ACN_PACKET_IDENTIFIER>:
 80179b0:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80179b4:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80179b8:	00000037 	andeq	r0, r0, r7, lsr r0

080179bc <E131BridgeConst::VERSION>:
 80179bc:	00001801 	andeq	r1, r0, r1, lsl #16

080179c0 <UID_ALL>:
 80179c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80179c4:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

080179c8 <vtable for ArtNetRdmController>:
	...
 80179d0:	0800da21 	stmdaeq	r0, {r0, r5, r9, fp, ip, lr, pc}
 80179d4:	0800da6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, ip, lr, pc}
 80179d8:	0800da7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, fp, ip, lr, pc}
 80179dc:	0800d9f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r8, fp, ip, lr, pc}
 80179e0:	0800da01 	stmdaeq	r0, {r0, r9, fp, ip, lr, pc}
 80179e4:	0800da89 	stmdaeq	r0, {r0, r3, r7, r9, fp, ip, lr, pc}

080179e8 <UID_ALL>:
 80179e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80179ec:	4452ffff 	ldrbmi	pc, [r2], #-4095	; 0xfffff001	; <UNPREDICTABLE>
 80179f0:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 80179f4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 80179f8:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80179fc:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8017a00:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8017a04:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8017a08:	6e614d20 	cdpvs	13, 6, cr4, cr1, cr0, {1}
 8017a0c:	63616675 	cmnvs	r1, #122683392	; 0x7500000
 8017a10:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
 8017a14:	614e2072 	hvcvs	57858	; 0xe202
 8017a18:	3a20656d 	bcc	8830fd4 <__exidx_end+0x8188a0>
 8017a1c:	2a2e2520 	bcs	8ba0ea4 <__exidx_end+0xb88770>
 8017a20:	20000a73 	andcs	r0, r0, r3, ror sl
 8017a24:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 8017a28:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8017a2c:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 8017a30:	20444920 	subcs	r4, r4, r0, lsr #18
 8017a34:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017a38:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017a3c:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017a40:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8017a44:	61697265 	cmnvs	r9, r5, ror #4
 8017a48:	754e206c 	strbvc	r2, [lr, #-108]	; 0xffffff94
 8017a4c:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
 8017a50:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a54:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017a58:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017a5c:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017a60:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017a64:	0a58322e 	beq	9624324 <__exidx_end+0x160bbf0>
 8017a68:	6f522000 	svcvs	0x00522000
 8017a6c:	6c20746f 	cfstrsvs	mvf7, [r0], #-444	; 0xfffffe44
 8017a70:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
 8017a74:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a78:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017a7c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017a80:	000a732a 	andeq	r7, sl, sl, lsr #6
 8017a84:	6f725020 	svcvs	0x00725020
 8017a88:	74637564 	strbtvc	r7, [r3], #-1380	; 0xfffffa9c
 8017a8c:	74614320 	strbtvc	r4, [r1], #-800	; 0xfffffce0
 8017a90:	726f6765 	rsbvc	r6, pc, #26476544	; 0x1940000
 8017a94:	3a202079 	bcc	881fc80 <__exidx_end+0x80754c>
 8017a98:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8017a9c:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8017aa0:	20000a58 	andcs	r0, r0, r8, asr sl
 8017aa4:	646f7250 	strbtvs	r7, [pc], #-592	; 8017aac <UID_ALL+0xc4>
 8017aa8:	20746375 	rsbscs	r6, r4, r5, ror r3
 8017aac:	61746544 	cmnvs	r4, r4, asr #10
 8017ab0:	20206c69 	eorcs	r6, r0, r9, ror #24
 8017ab4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017ab8:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017abc:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017ac0:	 	strbmi	r0, [r7], #-10

08017ac2 <DEVICE_LABEL>:
 8017ac2:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8017ac6:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8017aca:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8017ace:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 8017ad2:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 8017ad6:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8017ada:	 	stmdbvs	r7, {r0, r2, r5, r6}^

08017adc <DEVICE_LABEL>:
 8017adc:	61676947 	cmnvs	r7, r7, asr #18
 8017ae0:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8017ae4:	52206563 	eorpl	r6, r0, #415236096	; 0x18c00000
 8017ae8:	43204d44 			; <UNDEFINED> instruction: 0x43204d44
 8017aec:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8017af0:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8017af4:	00000072 	andeq	r0, r0, r2, ror r0

08017af8 <UID_ALL>:
 8017af8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8017afc:	 	ldrsheq	pc, [r0], #-255	; 0xffffff01	; <UNPREDICTABLE>

08017afe <RDMConst::MANUFACTURER_ID>:
 8017afe:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08017b00 <RDMConst::MANUFACTURER_NAME>:
 8017b00:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8017b04:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8017b08:	6f2e7777 	svcvs	0x002e7777
 8017b0c:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 8017b10:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 8017b14:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8017b18:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8017b1c:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 8017b20:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 8017b24:	30252d78 	eorcc	r2, r5, r8, ror sp
 8017b28:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8017b2c:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8017b30:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8017b34:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b38:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b3c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b40:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b44:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b48:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017b4c:	584d4400 	stmdapl	sp, {sl, lr}^
 8017b50:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 8017b54:	20000a64 	andcs	r0, r0, r4, ror #20
 8017b58:	61657242 	cmnvs	r5, r2, asr #4
 8017b5c:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 8017b60:	2020656d 	eorcs	r6, r0, sp, ror #10
 8017b64:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017b68:	20000a64 	andcs	r0, r0, r4, ror #20
 8017b6c:	2042414d 	subcs	r4, r2, sp, asr #2
 8017b70:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8017b74:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017b78:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017b7c:	20000a64 	andcs	r0, r0, r4, ror #20
 8017b80:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 8017b84:	20687365 	rsbcs	r7, r8, r5, ror #6
 8017b88:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 8017b8c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017b90:	20000a64 	andcs	r0, r0, r4, ror #20
 8017b94:	746f6c53 	strbtvc	r6, [pc], #-3155	; 8017b9c <RDMConst::MANUFACTURER_NAME+0x9c>
 8017b98:	20202073 	eorcs	r2, r0, r3, ror r0
 8017b9c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017ba0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017ba4:	00000a64 	andeq	r0, r0, r4, ror #20

08017ba8 <vtable for DmxSend>:
	...
 8017bb0:	0800e33b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, r9, sp, lr, pc}
 8017bb4:	0800e409 	stmdaeq	r0, {r0, r3, sl, sp, lr, pc}
 8017bb8:	0800e33d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sp, lr, pc}
 8017bbc:	0800e36d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sp, lr, pc}
 8017bc0:	0800e3a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sp, lr, pc}
 8017bc4:	0800e339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sp, lr, pc}
 8017bc8:	0800e3b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sp, lr, pc}
 8017bcc:	08013191 	stmdaeq	r1, {r0, r4, r7, r8, ip, sp}
 8017bd0:	08013187 	stmdaeq	r1, {r0, r1, r2, r7, r8, ip, sp}
 8017bd4:	0801318b 	stmdaeq	r1, {r0, r1, r3, r7, r8, ip, sp}
 8017bd8:	08013195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip, sp}

08017bdc <DmxParamsConst::BREAK_TIME>:
 8017bdc:	61657262 	cmnvs	r5, r2, ror #4
 8017be0:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017be4:	 	movwvc	r6, #1389	; 0x56d

08017be7 <DmxParamsConst::SLOTS_COUNT>:
 8017be7:	746f6c73 	strbtvc	r6, [pc], #-3187	; 8017bef <DmxParamsConst::SLOTS_COUNT+0x8>
 8017beb:	6f635f73 	svcvs	0x00635f73
 8017bef:	00746e75 	rsbseq	r6, r4, r5, ror lr

08017bf3 <DmxParamsConst::REFRESH_RATE>:
 8017bf3:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8017bf7:	5f687365 	svcpl	0x00687365
 8017bfb:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

08017c00 <DmxParamsConst::MAB_TIME>:
 8017c00:	5f62616d 	svcpl	0x0062616d
 8017c04:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08017c09 <DmxParamsConst::FILE_NAME>:
 8017c09:	61726170 	cmnvs	r2, r0, ror r1
 8017c0d:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 8017c11:	 	andeq	r7, r0, r8, ror r4

08017c14 <s_DirGpio>:
 8017c14:	40011800 	andmi	r1, r1, r0, lsl #16
 8017c18:	00000200 	andeq	r0, r0, r0, lsl #4
 8017c1c:	40011800 	andmi	r1, r1, r0, lsl #16
 8017c20:	00000400 	andeq	r0, r0, r0, lsl #8
 8017c24:	40011800 	andmi	r1, r1, r0, lsl #16
 8017c28:	00000800 	andeq	r0, r0, r0, lsl #16
 8017c2c:	40011800 	andmi	r1, r1, r0, lsl #16
 8017c30:	00001000 	andeq	r1, r0, r0

08017c34 <s_aStorSize>:
 8017c34:	00000060 	andeq	r0, r0, r0, rrx
 8017c38:	00000090 	muleq	r0, r0, r0
 8017c3c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c40:	00000040 	andeq	r0, r0, r0, asr #32
 8017c44:	00000060 	andeq	r0, r0, r0, rrx
 8017c48:	00000040 	andeq	r0, r0, r0, asr #32
 8017c4c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c50:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c54:	000001e0 	andeq	r0, r0, r0, ror #3
 8017c58:	00000040 	andeq	r0, r0, r0, asr #32
 8017c5c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c60:	00000060 	andeq	r0, r0, r0, rrx
 8017c64:	00000030 	andeq	r0, r0, r0, lsr r0
 8017c68:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c6c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8017c70:	00000030 	andeq	r0, r0, r0, lsr r0
 8017c74:	00000040 	andeq	r0, r0, r0, asr #32
 8017c78:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c7c:	00000060 	andeq	r0, r0, r0, rrx
 8017c80:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c84:	00000400 	andeq	r0, r0, r0, lsl #8
 8017c88:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c8c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c90:	00000040 	andeq	r0, r0, r0, asr #32
 8017c94:	00000060 	andeq	r0, r0, r0, rrx
 8017c98:	00000020 	andeq	r0, r0, r0, lsr #32
 8017c9c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017ca0:	00000020 	andeq	r0, r0, r0, lsr #32

08017ca4 <vtable for StoreArtNet>:
	...
 8017cac:	0800f915 	stmdaeq	r0, {r0, r2, r4, r8, fp, ip, sp, lr, pc}
 8017cb0:	0800fadd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, ip, sp, lr, pc}
 8017cb4:	0800f91d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, ip, sp, lr, pc}
 8017cb8:	0800faf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip, sp, lr, pc}
 8017cbc:	0800f941 	stmdaeq	r0, {r0, r6, r8, fp, ip, sp, lr, pc}
 8017cc0:	0800f971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, ip, sp, lr, pc}
 8017cc4:	0800f99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, ip, sp, lr, pc}
 8017cc8:	0800f9d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, fp, ip, sp, lr, pc}
 8017ccc:	0800fa09 	stmdaeq	r0, {r0, r3, r9, fp, ip, sp, lr, pc}
 8017cd0:	0800fa3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, ip, sp, lr, pc}
 8017cd4:	0800fa8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, ip, sp, lr, pc}
 8017cd8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017cdc:	00000000 	andeq	r0, r0, r0
 8017ce0:	0800f917 	stmdaeq	r0, {r0, r1, r2, r4, r8, fp, ip, sp, lr, pc}
 8017ce4:	0800fae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp, ip, sp, lr, pc}
 8017ce8:	0800f969 	stmdaeq	r0, {r0, r3, r5, r6, r8, fp, ip, sp, lr, pc}
 8017cec:	0800f995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, sp, lr, pc}
 8017cf0:	0800f9d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, fp, ip, sp, lr, pc}
 8017cf4:	0800fa01 	stmdaeq	r0, {r0, r9, fp, ip, sp, lr, pc}
 8017cf8:	0800fa35 	stmdaeq	r0, {r0, r2, r4, r5, r9, fp, ip, sp, lr, pc}
 8017cfc:	0800fa85 	stmdaeq	r0, {r0, r2, r7, r9, fp, ip, sp, lr, pc}
 8017d00:	0800fad5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, ip, sp, lr, pc}

08017d04 <vtable for StoreDisplayUdf>:
	...
 8017d0c:	0800fb2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, ip, sp, lr, pc}
 8017d10:	0800fb75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, ip, sp, lr, pc}
 8017d14:	0800fb51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp, ip, sp, lr, pc}
 8017d18:	0800fb31 	stmdaeq	r0, {r0, r4, r5, r8, r9, fp, ip, sp, lr, pc}

08017d1c <vtable for StoreDmxSend>:
	...
 8017d24:	0800fb95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, fp, ip, sp, lr, pc}
 8017d28:	0800fbdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 8017d2c:	0800fbb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, fp, ip, sp, lr, pc}
 8017d30:	0800fb99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, ip, sp, lr, pc}

08017d34 <vtable for StoreNetwork>:
	...
 8017d3c:	0800fbfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 8017d40:	0800fd11 	stmdaeq	r0, {r0, r4, r8, sl, fp, ip, sp, lr, pc}
 8017d44:	0800fc05 	stmdaeq	r0, {r0, r2, sl, fp, ip, sp, lr, pc}
 8017d48:	0800fd25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, ip, sp, lr, pc}
 8017d4c:	0800fcb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, fp, ip, sp, lr, pc}
 8017d50:	0800fc89 	stmdaeq	r0, {r0, r3, r7, sl, fp, ip, sp, lr, pc}
 8017d54:	0800fc59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, ip, sp, lr, pc}
 8017d58:	0800fce1 	stmdaeq	r0, {r0, r5, r6, r7, sl, fp, ip, sp, lr, pc}
 8017d5c:	0800fc29 	stmdaeq	r0, {r0, r3, r5, sl, fp, ip, sp, lr, pc}
 8017d60:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017d64:	00000000 	andeq	r0, r0, r0
 8017d68:	0800fbff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
 8017d6c:	0800fd1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, fp, ip, sp, lr, pc}
 8017d70:	0800fcd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sl, fp, ip, sp, lr, pc}
 8017d74:	0800fcad 	stmdaeq	r0, {r0, r2, r3, r5, r7, sl, fp, ip, sp, lr, pc}
 8017d78:	0800fc81 	stmdaeq	r0, {r0, r7, sl, fp, ip, sp, lr, pc}
 8017d7c:	0800fd09 	stmdaeq	r0, {r0, r3, r8, sl, fp, ip, sp, lr, pc}
 8017d80:	0800fc51 	stmdaeq	r0, {r0, r4, r6, sl, fp, ip, sp, lr, pc}

08017d84 <vtable for StoreRDMDevice>:
	...
 8017d8c:	0800fd59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, sp, lr, pc}
 8017d90:	0800fdc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8017d94:	0800fd61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, sp, lr, pc}
 8017d98:	0800fddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8017d9c:	0800fd85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, ip, sp, lr, pc}
 8017da0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017da4:	00000000 	andeq	r0, r0, r0
 8017da8:	0800fd5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, sl, fp, ip, sp, lr, pc}
 8017dac:	0800fdd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
 8017db0:	0800fdc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, sp, lr, pc}

08017db4 <vtable for StoreRemoteConfig>:
	...
 8017dbc:	0800fe15 	stmdaeq	r0, {r0, r2, r4, r9, sl, fp, ip, sp, lr, pc}
 8017dc0:	0800fe5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp, ip, sp, lr, pc}
 8017dc4:	0800fe39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, ip, sp, lr, pc}
 8017dc8:	0800fe19 	stmdaeq	r0, {r0, r3, r4, r9, sl, fp, ip, sp, lr, pc}
 8017dcc:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8017dd0:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8017dd4:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8017dd8:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8017ddc:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017de0:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8017de4:	6f742068 	svcvs	0x00742068
 8017de8:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8017dec:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8017df0:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8017df4:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8017df8:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8017dfc:	6374000a 	cmnvs	r4, #10
 8017e00:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8017e04:	3a6e6967 	bcc	9bb23a8 <__exidx_end+0x1b99c74>
 8017e08:	6f6f7420 	svcvs	0x006f7420
 8017e0c:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8017e10:	6f632079 	svcvs	0x00632079
 8017e14:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8017e18:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017e1c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8017e20:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8017e24:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8017e28:	41000a64 	tstmi	r0, r4, ror #20
 8017e2c:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8017e30:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8017e34:	61662070 	smcvs	25088	; 0x6200
 8017e38:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8017e3c:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8017e40:	61666564 	cmnvs	r6, r4, ror #10
 8017e44:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8017e48:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8017e4c:	0a796177 	beq	9e70430 <__exidx_end+0x1e57cfc>
 8017e50:	50524100 	subspl	r4, r2, r0, lsl #2
 8017e54:	6f6f6c20 	svcvs	0x006f6c20
 8017e58:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8017e5c:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8017e60:	000a6465 	andeq	r6, sl, r5, ror #8

08017e64 <NetworkConst::MSG_NETWORK_INIT>:
 8017e64:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8017e68:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8017e6c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8017e70:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8017e74:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8017e78:	3135322e 	teqcc	r5, lr, lsr #4
 8017e7c:	63745f00 	cmnvs	r4, #0, 30
 8017e80:	6f6c2e70 	svcvs	0x006c2e70
 8017e84:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8017e88:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8017e8c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8017e90:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8017e98 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8017e94:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8017e98:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 801703c <styles_css+0x69>
 8017e9c:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8017ea0:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8017ea4:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8017ea8:	20000a53 	andcs	r0, r0, r3, asr sl
 8017eac:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8017eb0:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8017eb4:	0a676e69 	beq	99f3860 <__exidx_end+0x19db12c>
 8017eb8:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8017ebc:	3a20656d 	bcc	8831478 <__exidx_end+0x818d44>
 8017ec0:	0a732520 	beq	9ce1348 <__exidx_end+0x1cc8c14>
 8017ec4:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8017ec8:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8017ecc:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017ed0:	30687465 	rsbcc	r7, r8, r5, ror #8
 8017ed4:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017ed8:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8017edc:	5f656369 	svcpl	0x00656369
 8017ee0:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8017ee4:	6b726f77 	blvs	9cb3cc8 <__exidx_end+0x1c9b594>
 8017ee8:	4820000a 	stmdami	r0!, {r1, r3}
 8017eec:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8017ef0:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8017ef4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017ef8:	20000a73 	andcs	r0, r0, r3, ror sl
 8017efc:	614e6649 	cmpvs	lr, r9, asr #12
 8017f00:	2020656d 	eorcs	r6, r0, sp, ror #10
 8017f04:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017f08:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8017f0c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017f10:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8017f14:	20202074 	eorcs	r2, r0, r4, ror r0
 8017f18:	3a202020 	bcc	881ffa0 <__exidx_end+0x80786c>
 8017f1c:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017f20:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017f24:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017f28:	0a64252f 	beq	99213ec <__exidx_end+0x1908cb8>
 8017f2c:	654e2000 	strbvs	r2, [lr, #-0]
 8017f30:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8017f34:	2020206b 	eorcs	r2, r0, fp, rrx
 8017f38:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017f3c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017f40:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017f44:	20000a64 	andcs	r0, r0, r4, ror #20
 8017f48:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8017f4c:	20796177 	rsbscs	r6, r9, r7, ror r1
 8017f50:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017f54:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017f58:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017f5c:	0a64252e 	beq	992141c <__exidx_end+0x1908ce8>
 8017f60:	72422000 	subvc	r2, r2, #0
 8017f64:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8017f68:	20747361 	rsbscs	r7, r4, r1, ror #6
 8017f6c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017f70:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017f74:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017f78:	20000a64 	andcs	r0, r0, r4, ror #20
 8017f7c:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8017f80:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017f84:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017f88:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017f8c:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017f90:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8017f94:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017f98:	3a78322e 	bcc	9e24858 <__exidx_end+0x1e0c124>
 8017f9c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017fa0:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017fa4:	20000a78 	andcs	r0, r0, r8, ror sl
 8017fa8:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8017fac:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017fb0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017fb4:	000a6325 	andeq	r6, sl, r5, lsr #6
 8017fb8:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8017fbc:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8017fc0:	544e0050 	strbpl	r0, [lr], #-80	; 0xffffffb0
 8017fc4:	65532050 	ldrbvs	r2, [r3, #-80]	; 0xffffffb0
 8017fc8:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8017fcc:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8017fd0:	2e253a22 	vmulcs.f32	s6, s10, s5
 8017fd4:	002c662a 	eoreq	r6, ip, sl, lsr #12
 8017fd8:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8017fdc:	662a2e25 	strtvs	r2, [sl], -r5, lsr #28
 8017fe0:	 	rsbvc	r0, r9, sl

08017fe2 <NetworkParamsConst::IP_ADDRESS>:
 8017fe2:	615f7069 	cmpvs	pc, r9, rrx
 8017fe6:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8017fea:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08017fed <NetworkParamsConst::NTP_SERVER>:
 8017fed:	5f70746e 	svcpl	0x0070746e
 8017ff1:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8017ff5:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

08017ff8 <NetworkParamsConst::NTP_UTC_OFFSET>:
 8017ff8:	5f70746e 	svcpl	0x0070746e
 8017ffc:	5f637475 	svcpl	0x00637475
 8018000:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 8018004:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

08018007 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8018007:	61666564 	cmnvs	r6, r4, ror #10
 801800b:	5f746c75 	svcpl	0x00746c75
 801800f:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8018013:	00796177 	rsbseq	r6, r9, r7, ror r1

08018017 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8018017:	70636864 	rsbvc	r6, r3, r4, ror #16
 801801b:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801801f:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8018027 <NetworkParamsConst::HOSTNAME>
 8018023:	00656d69 	rsbeq	r6, r5, r9, ror #26

08018027 <NetworkParamsConst::HOSTNAME>:
 8018027:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801802b:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08018030 <NetworkParamsConst::NET_MASK>:
 8018030:	5f74656e 	svcpl	0x0074656e
 8018034:	6b73616d 	blvs	9cf05f0 <__exidx_end+0x1cd7ebc>
	...

08018039 <NetworkParamsConst::USE_DHCP>:
 8018039:	5f657375 	svcpl	0x00657375
 801803d:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08018042 <NetworkParamsConst::FILE_NAME>:
 8018042:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8018046:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 801804a:	00747874 	rsbseq	r7, r4, r4, ror r8
 801804e:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8018052:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8018056:	61747320 	cmnvs	r4, r0, lsr #6
 801805a:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801805e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018062:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8018066:	252f6425 	strcs	r6, [pc, #-1061]!	; 8017c49 <s_aStorSize+0x15>
 801806a:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801806e:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8018072:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8018076:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801807a:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801807e:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8018082:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8018086:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801808a:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801808e:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8018092:	20657261 	rsbcs	r7, r5, r1, ror #4
 8018096:	2a2e2556 	bcs	8ba15f6 <__exidx_end+0xb88ec2>
 801809a:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801809e:	72205043 	eorvc	r5, r0, #67	; 0x43
 80180a2:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80180a6:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80180aa:	50434844 	subpl	r4, r3, r4, asr #16
 80180ae:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80180b2:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80180b6:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80180ba:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80180be:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 80180c2:	6f647475 	svcvs	0x00647475
 80180c6:	00006e77 	andeq	r6, r0, r7, ror lr
	...

080180cc <pArray>:
 80180cc:	08018160 	stmdaeq	r1, {r5, r6, r8, pc}
 80180d0:	0801811c 	stmdaeq	r1, {r2, r3, r4, r8, pc}
 80180d4:	08017fe2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 80180d8:	08018166 	stmdaeq	r1, {r1, r2, r5, r6, r8, pc}
 80180dc:	080182a2 	stmdaeq	r1, {r1, r5, r7, r9, pc}
 80180e0:	08018127 	stmdaeq	r1, {r0, r1, r2, r5, r8, pc}
 80180e4:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 80180e8:	08018027 	stmdaeq	r1, {r0, r1, r2, r5, pc}
 80180ec:	08018208 	stmdaeq	r1, {r3, r9, pc}
 80180f0:	08018218 	stmdaeq	r1, {r3, r4, r9, pc}
 80180f4:	08018228 	stmdaeq	r1, {r3, r5, r9, pc}
 80180f8:	08018238 	stmdaeq	r1, {r3, r4, r5, r9, pc}
 80180fc:	08018030 	stmdaeq	r1, {r4, r5, pc}
 8018100:	08018290 	stmdaeq	r1, {r4, r7, r9, pc}
 8018104:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 8018108:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 801810c:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 8018110:	08016bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, sp, lr}
 8018114:	08018007 	stmdaeq	r1, {r0, r1, r2, pc}
 8018118:	08018134 	stmdaeq	r1, {r2, r4, r5, r8, pc}

0801811c <DisplayUdfParamsConst::BOARD_NAME>:
 801811c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8018120:	616e5f64 	cmnvs	lr, r4, ror #30
 8018124:	 	tstvs	r0, sp, ror #10

08018127 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8018127:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801812b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801812f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08018134 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8018134:	5f786d64 	svcpl	0x00786d64
 8018138:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801813c:	6f697463 	svcvs	0x00697463
 8018140:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08018142 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8018142:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8018146:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801814a:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8017be5 <DmxParamsConst::BREAK_TIME+0x9>
 801814e:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08018150 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8018150:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8018154:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8018158:	61636974 	smcvs	13972	; 0x3694
 801815c:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08018160 <DisplayUdfParamsConst::TITLE>:
 8018160:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8018164:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08018166 <DisplayUdfParamsConst::VERSION>:
 8018166:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801816a:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801816e <DisplayUdfParamsConst::FILE_NAME>:
 801816e:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018172:	2e79616c 	rpwcsez	f6, f1, #4.0
 8018176:	00747874 	rsbseq	r7, r4, r4, ror r8

0801817a <DisplayUdfParamsConst::INTENSITY>:
 801817a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801817e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8018182:	20200079 	eorcs	r0, r0, r9, ror r0
 8018186:	4f002020 	svcmi	0x00002020
 801818a:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801818e:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
 8018192:	64253a64 	strtvs	r3, [r5], #-2660	; 0xfffff59c
 8018196:	20632520 	rsbcs	r2, r3, r0, lsr #10
 801819a:	4f007325 	svcmi	0x00007325
 801819e:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80181a2:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
 80181a6:	3a64253a 	bcc	9921696 <__exidx_end+0x1908f62>
 80181aa:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 80181ae:	73252063 			; <UNDEFINED> instruction: 0x73252063
 80181b2:	3a632500 	bcc	98e15ba <__exidx_end+0x18c8e86>
 80181b6:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80181ba:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80181be:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80181c2:	3a504100 	bcc	94285ca <__exidx_end+0x140fe96>
 80181c6:	00642520 	rsbeq	r2, r4, r0, lsr #10
 80181ca:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 80181ce:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 80181d2:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 80181d6:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 80181da:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80181de:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80181e2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80181e6:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80181ea:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 80181ee:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80181f2:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 80181f6:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80181fa:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80181fe:	2023000a 	eorcs	r0, r3, sl
 8018202:	23207325 			; <UNDEFINED> instruction: 0x23207325
 8018206:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

08018208 <LightSetParamsConst::UNIVERSE_PORT>:
 8018208:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801820c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018210:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018214:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8018218:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801821c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018220:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018224:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8018228:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801822c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018230:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018234:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8018238:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801823c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8018240:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018244:	00645f74 	rsbeq	r5, r4, r4, ror pc

08018248 <LightSetParamsConst::MERGE_MODE_PORT>:
 8018248:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801824c:	6f6d5f65 	svcvs	0x006d5f65
 8018250:	705f6564 	subsvc	r6, pc, r4, ror #10
 8018254:	5f74726f 	svcpl	0x0074726f
 8018258:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801825c:	5f656772 	svcpl	0x00656772
 8018260:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8018264:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8018268:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801826c:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8018270:	6f6d5f65 	svcvs	0x006d5f65
 8018274:	705f6564 	subsvc	r6, pc, r4, ror #10
 8018278:	5f74726f 	svcpl	0x0074726f
 801827c:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8018280:	5f656772 	svcpl	0x00656772
 8018284:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8018288:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801828c:	00645f74 	rsbeq	r5, r4, r4, ror pc

08018290 <LightSetParamsConst::DMX_START_ADDRESS>:
 8018290:	5f786d64 	svcpl	0x00786d64
 8018294:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8018298:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801829c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80182a0:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

080182a2 <LightSetParamsConst::UNIVERSE>:
 80182a2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80182a6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

080182ab <LightSetParamsConst::DIRECTION>:
 80182ab:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80182af:	6f697463 	svcvs	0x00697463
 80182b3:	6f705f6e 	svcvs	0x00705f6e
 80182b7:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 80182bb:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 80182bf:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80182c3:	5f6e6f69 	svcpl	0x006e6f69
 80182c7:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80182cb:	0000625f 	andeq	r6, r0, pc, asr r2
 80182cf:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80182d3:	6f697463 	svcvs	0x00697463
 80182d7:	6f705f6e 	svcvs	0x00705f6e
 80182db:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 80182df:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 80182e3:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80182e7:	5f6e6f69 	svcpl	0x006e6f69
 80182eb:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80182ef:	0000645f 	andeq	r6, r0, pc, asr r4
 80182f3:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 80182f7:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80182fb:	66207961 	strtvs	r7, [r0], -r1, ror #18
 80182ff:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8018303:	31485300 	mrscc	r5, (UNDEF: 120)
 8018307:	00363031 	eorseq	r3, r6, r1, lsr r0
 801830b:	31445353 	cmpcc	r4, r3, asr r3
 801830f:	00363033 	eorseq	r3, r6, r3, lsr r0
 8018313:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8018317:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801831b:	000a2964 	andeq	r2, sl, r4, ror #18
 801831f:	aaeeaa40 	bge	7bc2c27 <__stack_size+0x7bc0c27>
 8018323:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08018328 <_OledFont8x6>:
 8018328:	00000040 	andeq	r0, r0, r0, asr #32
 801832c:	40000000 	andmi	r0, r0, r0
 8018330:	005f0000 	subseq	r0, pc, r0
 8018334:	00400000 	subeq	r0, r0, r0
 8018338:	00070007 	andeq	r0, r7, r7
 801833c:	7f144000 	svcvc	0x00144000
 8018340:	00147f14 	andseq	r7, r4, r4, lsl pc
 8018344:	7f2a2440 	svcvc	0x002a2440
 8018348:	4000122a 	andmi	r1, r0, sl, lsr #4
 801834c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8018350:	36400062 	strbcc	r0, [r0], -r2, rrx
 8018354:	50205649 	eorpl	r5, r0, r9, asr #12
 8018358:	08004000 	stmdaeq	r0, {lr}
 801835c:	00000307 	andeq	r0, r0, r7, lsl #6
 8018360:	221c0040 	andscs	r0, ip, #64	; 0x40
 8018364:	40000041 	andmi	r0, r0, r1, asr #32
 8018368:	1c224100 	stfnes	f4, [r2], #-0
 801836c:	2a400000 	bcs	9018374 <__exidx_end+0xfffc40>
 8018370:	2a1c7f1c 	bcs	8737fe8 <__exidx_end+0x71f8b4>
 8018374:	08084000 	stmdaeq	r8, {lr}
 8018378:	0008083e 	andeq	r0, r8, lr, lsr r8
 801837c:	70800040 	addvc	r0, r0, r0, asr #32
 8018380:	40000030 	andmi	r0, r0, r0, lsr r0
 8018384:	08080808 	stmdaeq	r8, {r3, fp}
 8018388:	00400008 	subeq	r0, r0, r8
 801838c:	00606000 	rsbeq	r6, r0, r0
 8018390:	10204000 	eorne	r4, r0, r0
 8018394:	00020408 	andeq	r0, r2, r8, lsl #8
 8018398:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801839c:	40003e45 	andmi	r3, r0, r5, asr #28
 80183a0:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80183a4:	72400000 	subvc	r0, r0, #0
 80183a8:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80183ac:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80183b0:	00334d49 	eorseq	r4, r3, r9, asr #26
 80183b4:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 80183b8:	4000107f 	andmi	r1, r0, pc, ror r0
 80183bc:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 80183c0:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 80183c4:	3149494a 	cmpcc	r9, sl, asr #18
 80183c8:	21414000 	mrscs	r4, (UNDEF: 65)
 80183cc:	00070911 	andeq	r0, r7, r1, lsl r9
 80183d0:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 80183d4:	40003649 	andmi	r3, r0, r9, asr #12
 80183d8:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 80183dc:	0040001e 	subeq	r0, r0, lr, lsl r0
 80183e0:	00001400 	andeq	r1, r0, r0, lsl #8
 80183e4:	40004000 	andmi	r4, r0, r0
 80183e8:	00000034 	andeq	r0, r0, r4, lsr r0
 80183ec:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80183f0:	40004122 	andmi	r4, r0, r2, lsr #2
 80183f4:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80183f8:	00400014 	subeq	r0, r0, r4, lsl r0
 80183fc:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8018400:	01024000 	mrseq	r4, (UNDEF: 2)
 8018404:	00060959 	andeq	r0, r6, r9, asr r9
 8018408:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801840c:	40004e59 	andmi	r4, r0, r9, asr lr
 8018410:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8018414:	7f40007c 	svcvc	0x0040007c
 8018418:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801841c:	413e4000 	teqmi	lr, r0
 8018420:	00224141 	eoreq	r4, r2, r1, asr #2
 8018424:	41417f40 	cmpmi	r1, r0, asr #30
 8018428:	40003e41 	andmi	r3, r0, r1, asr #28
 801842c:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8018430:	7f400041 	svcvc	0x00400041
 8018434:	01090909 	tsteq	r9, r9, lsl #18
 8018438:	413e4000 	teqmi	lr, r0
 801843c:	00735141 	rsbseq	r5, r3, r1, asr #2
 8018440:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8018444:	40007f08 	andmi	r7, r0, r8, lsl #30
 8018448:	417f4100 	cmnmi	pc, r0, lsl #2
 801844c:	20400000 	subcs	r0, r0, r0
 8018450:	013f4140 	teqeq	pc, r0, asr #2
 8018454:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8018458:	00412214 	subeq	r2, r1, r4, lsl r2
 801845c:	40407f40 	submi	r7, r0, r0, asr #30
 8018460:	40004040 	andmi	r4, r0, r0, asr #32
 8018464:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8018468:	7f40007f 	svcvc	0x0040007f
 801846c:	7f100804 	svcvc	0x00100804
 8018470:	413e4000 	teqmi	lr, r0
 8018474:	003e4141 	eorseq	r4, lr, r1, asr #2
 8018478:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801847c:	40000609 	andmi	r0, r0, r9, lsl #12
 8018480:	2151413e 	cmpcs	r1, lr, lsr r1
 8018484:	7f40005e 	svcvc	0x0040005e
 8018488:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801848c:	49264000 	stmdbmi	r6!, {lr}
 8018490:	00324949 	eorseq	r4, r2, r9, asr #18
 8018494:	7f010340 	svcvc	0x00010340
 8018498:	40000301 	andmi	r0, r0, r1, lsl #6
 801849c:	4040403f 	submi	r4, r0, pc, lsr r0
 80184a0:	1f40003f 	svcne	0x0040003f
 80184a4:	1f204020 	svcne	0x00204020
 80184a8:	403f4000 	eorsmi	r4, pc, r0
 80184ac:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80184b0:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 80184b4:	40006314 	andmi	r6, r0, r4, lsl r3
 80184b8:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 80184bc:	61400003 	cmpvs	r0, r3
 80184c0:	434d4959 	movtmi	r4, #55641	; 0xd959
 80184c4:	7f004000 	svcvc	0x00004000
 80184c8:	00414141 	subeq	r4, r1, r1, asr #2
 80184cc:	08040240 	stmdaeq	r4, {r6, r9}
 80184d0:	40002010 	andmi	r2, r0, r0, lsl r0
 80184d4:	41414100 	mrsmi	r4, (UNDEF: 81)
 80184d8:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 80184dc:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80184e0:	40404000 	submi	r4, r0, r0
 80184e4:	00404040 	subeq	r4, r0, r0, asr #32
 80184e8:	07030040 	streq	r0, [r3, -r0, asr #32]
 80184ec:	40000008 	andmi	r0, r0, r8
 80184f0:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80184f4:	7f400040 	svcvc	0x00400040
 80184f8:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 80184fc:	44384000 	ldrtmi	r4, [r8], #-0
 8018500:	00284444 	eoreq	r4, r8, r4, asr #8
 8018504:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8018508:	40007f28 	andmi	r7, r0, r8, lsr #30
 801850c:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8018510:	00400018 	subeq	r0, r0, r8, lsl r0
 8018514:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8018518:	a4184000 	ldrge	r4, [r8], #-0
 801851c:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8018520:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8018524:	40007804 	andmi	r7, r0, r4, lsl #16
 8018528:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801852c:	20400000 	subcs	r0, r0, r0
 8018530:	003d4040 	eorseq	r4, sp, r0, asr #32
 8018534:	107f4000 	rsbsne	r4, pc, r0
 8018538:	00004428 	andeq	r4, r0, r8, lsr #8
 801853c:	7f410040 	svcvc	0x00410040
 8018540:	40000040 	andmi	r0, r0, r0, asr #32
 8018544:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8018548:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801854c:	78040408 	stmdavc	r4, {r3, sl}
 8018550:	44384000 	ldrtmi	r4, [r8], #-0
 8018554:	00384444 	eorseq	r4, r8, r4, asr #8
 8018558:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801855c:	40001824 	andmi	r1, r0, r4, lsr #16
 8018560:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8018564:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8018568:	08040408 	stmdaeq	r4, {r3, sl}
 801856c:	54484000 	strbpl	r4, [r8], #-0
 8018570:	00245454 	eoreq	r5, r4, r4, asr r4
 8018574:	3f040440 	svccc	0x00040440
 8018578:	40002444 	andmi	r2, r0, r4, asr #8
 801857c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8018580:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8018584:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8018588:	403c4000 	eorsmi	r4, ip, r0
 801858c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8018590:	10284440 	eorne	r4, r8, r0, asr #8
 8018594:	40004428 	andmi	r4, r0, r8, lsr #8
 8018598:	9090904c 	addsls	r9, r0, ip, asr #32
 801859c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80185a0:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80185a4:	08004000 	stmdaeq	r0, {lr}
 80185a8:	00004136 	andeq	r4, r0, r6, lsr r1
 80185ac:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80185b0:	40000000 	andmi	r0, r0, r0
 80185b4:	08364100 	ldmdaeq	r6!, {r8, lr}
 80185b8:	02400000 	subeq	r0, r0, #0
 80185bc:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 80185c0:	263c4000 	ldrtcs	r4, [ip], -r0
 80185c4:	003c2623 	eorseq	r2, ip, r3, lsr #12

080185c8 <oled_128x32_init>:
 80185c8:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80185cc:	4000d31f 	andmi	sp, r0, pc, lsl r3
 80185d0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80185d4:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 80185d8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80185dc:	a6a440db 	ssatge	r4, #5, fp, asr #1

080185e0 <oled_128x64_init>:
 80185e0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80185e4:	4000d33f 	andmi	sp, r0, pc, lsr r3
 80185e8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80185ec:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80185f0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80185f4:	a6a440db 	ssatge	r4, #5, fp, asr #1

080185f8 <vtable for Ssd1306>:
	...
 8018600:	080132fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r9, ip, sp}
 8018604:	08013329 	stmdaeq	r1, {r0, r3, r5, r8, r9, ip, sp}
 8018608:	08013641 	stmdaeq	r1, {r0, r6, r9, sl, ip, sp}
 801860c:	080135c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, ip, sp}
 8018610:	08013491 	stmdaeq	r1, {r0, r4, r7, sl, ip, sp}
 8018614:	08013349 	stmdaeq	r1, {r0, r3, r6, r8, r9, ip, sp}
 8018618:	08013371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, ip, sp}
 801861c:	08013467 	stmdaeq	r1, {r0, r1, r2, r5, r6, sl, ip, sp}
 8018620:	08013421 	stmdaeq	r1, {r0, r5, sl, ip, sp}
 8018624:	080132fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r9, ip, sp}
 8018628:	080134cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, ip, sp}
 801862c:	080134d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, ip, sp}
 8018630:	080134f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, ip, sp}
 8018634:	08013301 	stmdaeq	r1, {r0, r8, r9, ip, sp}
 8018638:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801863c:	5b1b006d 	blpl	86d87f8 <__exidx_end+0x6c00c4>
 8018640:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8018644:	31335b1b 	teqcc	r3, fp, lsl fp
 8018648:	5b1b006d 	blpl	86d8804 <__exidx_end+0x6c00d0>
 801864c:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8018650:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8018654:	5b1b006d 	blpl	86d8810 <__exidx_end+0x6c00dc>
 8018658:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801865c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8018660:	205d732a 	subscs	r7, sp, sl, lsr #6
 8018664:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8018668:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801866c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8018670:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8018674:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8018678:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801867c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8018680:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8018684:	203a636f 	eorscs	r6, sl, pc, ror #6
 8018688:	000a7525 	andeq	r7, sl, r5, lsr #10
 801868c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8018690:	203a636f 	eorscs	r6, sl, pc, ror #6
 8018694:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8018698:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801869c:	6b636f6c 	blvs	98f4454 <__exidx_end+0x18dbd20>
 80186a0:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 80186a4:	000a7469 	andeq	r7, sl, r9, ror #8
 80186a8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80186ac:	203a636f 	eorscs	r6, sl, pc, ror #6
 80186b0:	6f6c4270 	svcvs	0x006c4270
 80186b4:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 80186b8:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80186bc:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 80186c0:	7a697320 	bvc	9a75348 <__exidx_end+0x1a5cc14>
 80186c4:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 80186c8:	6164202c 	cmnvs	r4, ip, lsr #32
 80186cc:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 80186d0:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 80186d4:	3a656572 	bcc	9971ca4 <__exidx_end+0x1959570>
 80186d8:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 80186dc:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80186e0:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80186e4:	203d2072 	eorscs	r2, sp, r2, ror r0
 80186e8:	202c7025 	eorcs	r7, ip, r5, lsr #32
 80186ec:	6f6c4270 	svcvs	0x006c4270
 80186f0:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 80186f4:	0a702520 	beq	9c21b7c <__exidx_end+0x1c09448>
 80186f8:	00000000 	andeq	r0, r0, r0

080186fc <days_of_month>:
 80186fc:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018700:	0000001c 	andeq	r0, r0, ip, lsl r0
 8018704:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018708:	0000001e 	andeq	r0, r0, lr, lsl r0
 801870c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018710:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018714:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018718:	0000001f 	andeq	r0, r0, pc, lsl r0
 801871c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018720:	0000001f 	andeq	r0, r0, pc, lsl r0
 8018724:	0000001e 	andeq	r0, r0, lr, lsl r0
 8018728:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

0801872c <__exidx_start>:
 801872c:	7ffefe80 	svcvc	0x00fefe80
 8018730:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08018734 <.ARM.attributes>:
 8018734:	00002e41 	andeq	r2, r0, r1, asr #28
 8018738:	61656100 	cmnvs	r5, r0, lsl #2
 801873c:	01006962 	tsteq	r0, r2, ror #18
 8018740:	00000024 	andeq	r0, r0, r4, lsr #32
 8018744:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8018748:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801874c:	0600334d 	streq	r3, [r0], -sp, asr #6
 8018750:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8018754:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8018758:	17011501 	strne	r1, [r1, -r1, lsl #10]
 801875c:	1a011803 	bne	805e770 <__exidx_end+0x4603c>
 8018760:	Address 0x0000000008018760 is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20003275 	andcs	r3, r0, r5, ror r2

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	2001d000 	andcs	sp, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <guard variable for lightset::Data::Get()::instance>:
20000128:	00000000 	andeq	r0, r0, r0

2000012c <lightset::Data::Get()::instance>:
	...

2000314c <ArtNetNode::s_pThis>:
2000314c:	00000000 	andeq	r0, r0, r0

20003150 <s_ReceivingMask>:
20003150:	00000000 	andeq	r0, r0, r0

20003154 <ip>:
20003154:	00000000 	andeq	r0, r0, r0

20003158 <ip>:
20003158:	00000000 	andeq	r0, r0, r0

2000315c <E131Bridge::s_pThis>:
2000315c:	00000000 	andeq	r0, r0, r0

20003160 <s_ReceivingMask>:
20003160:	00000000 	andeq	r0, r0, r0

20003164 <ArtNetRdmController::s_rdmMessage>:
	...

20003264 <ArtNetRdmController::s_nPorts>:
20003264:	00000000 	andeq	r0, r0, r0

20003268 <uuid_cast>:
	...

20003270 <DmxSend::s_nStarted>:
	...

20003271 <DmxConfigUdp::s_Buffer>:
	...

20003284 <s_RxBuffer>:
	...

20003ac4 <s_TxBuffer>:
	...

200042d4 <sv_PortState>:
	...

200042e4 <s_nUartsSending>:
200042e4:	00000000 	andeq	r0, r0, r0

200042e8 <sv_nRxDmxPackets>:
	...

20004328 <Dmx::s_pThis>:
20004328:	00000000 	andeq	r0, r0, r0

2000432c <gv_RdmDataReceiveEnd>:
2000432c:	00000000 	andeq	r0, r0, r0

20004330 <s_nLastSendMicros>:
	...

20004340 <s_TransactionNumber>:
20004340:	00000000 	andeq	r0, r0, r0

20004344 <SpiFlashStore::s_nWaitMillis>:
20004344:	00000000 	andeq	r0, r0, r0

20004348 <SpiFlashStore::s_SpiFlashData>:
	...

20005348 <SpiFlashStore::s_nStartAddress>:
20005348:	00000000 	andeq	r0, r0, r0

2000534c <SpiFlashStore::s_bHaveFlashChip>:
2000534c:	00000000 	andeq	r0, r0, r0

20005350 <SpiFlashStore::s_nSpiFlashStoreSize>:
20005350:	00000000 	andeq	r0, r0, r0

20005354 <SpiFlashStore::s_State>:
20005354:	00000000 	andeq	r0, r0, r0

20005358 <SpiFlashStore::s_pThis>:
20005358:	00000000 	andeq	r0, r0, r0

2000535c <SpiFlashStore::s_bIsNew>:
2000535c:	00000000 	andeq	r0, r0, r0

20005360 <StoreArtNet::s_pThis>:
20005360:	00000000 	andeq	r0, r0, r0

20005364 <StoreDisplayUdf::s_pThis>:
20005364:	00000000 	andeq	r0, r0, r0

20005368 <StoreDmxSend::s_pThis>:
20005368:	00000000 	andeq	r0, r0, r0

2000536c <StoreE131::s_pThis>:
2000536c:	00000000 	andeq	r0, r0, r0

20005370 <StoreNetwork::s_pThis>:
20005370:	00000000 	andeq	r0, r0, r0

20005374 <StoreRDMDevice::s_pThis>:
20005374:	00000000 	andeq	r0, r0, r0

20005378 <StoreRemoteConfig::s_pThis>:
20005378:	00000000 	andeq	r0, r0, r0

2000537c <FlashRom::s_pThis>:
2000537c:	00000000 	andeq	r0, r0, r0

20005380 <flashrom::s_nAddress>:
20005380:	00000000 	andeq	r0, r0, r0

20005384 <flashrom::s_State>:
20005384:	00000000 	andeq	r0, r0, r0

20005388 <flashrom::s_nPage>:
20005388:	00000000 	andeq	r0, r0, r0

2000538c <flashrom::s_pData>:
2000538c:	00000000 	andeq	r0, r0, r0

20005390 <flashrom::s_isBank0>:
20005390:	00000000 	andeq	r0, r0, r0

20005394 <flashrom::s_nLength>:
20005394:	00000000 	andeq	r0, r0, r0

20005398 <g_ip_info>:
	...

200053a4 <g_mac_address>:
200053a4:	00000000 	andeq	r0, r0, r0
	...

200053aa <s_is_dhcp>:
	...

200053ac <s_p>:
200053ac:	00000000 	andeq	r0, r0, r0

200053b0 <s_ticker>:
200053b0:	00000000 	andeq	r0, r0, r0

200053b4 <s_mac_address>:
	...

200053bc <s_mac_address_arp_reply>:
200053bc:	00000000 	andeq	r0, r0, r0
	...

200053c2 <s_id>:
	...

200053c4 <s_recv_queue>:
	...

20005f34 <s_tcb>:
	...

20005f78 <s_tcp>:
	...

20006564 <broadcast_mask>:
20006564:	00000000 	andeq	r0, r0, r0

20006568 <gw_ip>:
20006568:	00000000 	andeq	r0, r0, r0

2000656c <on_network_mask>:
2000656c:	00000000 	andeq	r0, r0, r0

20006570 <s_id>:
20006570:	00000000 	andeq	r0, r0, r0

20006574 <s_ports_allowed>:
	...

20006594 <s_recv_queue>:
	...

2000c234 <s_send_packet>:
	...

2000c820 <MDNS::s_nRemoteIp>:
2000c820:	00000000 	andeq	r0, r0, r0

2000c824 <MDNS::s_nRemotePort>:
2000c824:	00000000 	andeq	r0, r0, r0

2000c828 <MDNS::s_nMulticastIp>:
2000c828:	00000000 	andeq	r0, r0, r0

2000c82c <MDNS::s_AnswerLocalIp>:
	...

2000ca30 <MDNS::s_ServiceRecords>:
	...

2000ca50 <MDNS::s_nBytesReceived>:
2000ca50:	00000000 	andeq	r0, r0, r0

2000ca54 <MDNS::s_ServiceRecordsData>:
	...

2000cc58 <MDNS::s_pName>:
2000cc58:	00000000 	andeq	r0, r0, r0

2000cc5c <MDNS::s_pBuffer>:
2000cc5c:	00000000 	andeq	r0, r0, r0

2000cc60 <Network::s_pThis>:
2000cc60:	00000000 	andeq	r0, r0, r0

2000cc64 <NetworkParams::m_tNetworkParams>:
	...

2000ccc4 <s_arp_announce>:
	...

2000ccf0 <s_arp_reply>:
	...

2000cd1c <s_arp_request>:
	...

2000cd48 <s_arp_records>:
	...

2000cec8 <s_entry_current>:
2000cec8:	00000000 	andeq	r0, r0, r0

2000cecc <s_dhcp_allocated_gw>:
2000cecc:	00000000 	andeq	r0, r0, r0

2000ced0 <s_dhcp_allocated_ip>:
2000ced0:	00000000 	andeq	r0, r0, r0

2000ced4 <s_dhcp_allocated_netmask>:
2000ced4:	00000000 	andeq	r0, r0, r0

2000ced8 <s_dhcp_message>:
	...

2000d0fc <s_dhcp_server_ip>:
2000d0fc:	00000000 	andeq	r0, r0, r0

2000d100 <s_groups>:
	...

2000d220 <s_id>:
2000d220:	00000000 	andeq	r0, r0, r0

2000d224 <s_joins_allowed_index>:
2000d224:	00000000 	andeq	r0, r0, r0

2000d228 <s_leave>:
	...

2000d258 <s_multicast_mac>:
	...

2000d260 <s_report>:
	...

2000d290 <DisplayUdf::s_pThis>:
2000d290:	00000000 	andeq	r0, r0, r0

2000d294 <PropertiesConfig::s_Config>:
2000d294:	00000000 	andeq	r0, r0, r0

2000d298 <Display::s_pThis>:
2000d298:	00000000 	andeq	r0, r0, r0

2000d29c <_ClearBuffer>:
	...

2000d324 <Ssd1306::s_pThis>:
2000d324:	00000000 	andeq	r0, r0, r0

2000d328 <FirmwareVersion::s_FirmwareVersion>:
	...

2000d33e <FirmwareVersion::s_Print>:
	...

2000d380 <FirmwareVersion::s_pThis>:
2000d380:	00000000 	andeq	r0, r0, r0

2000d384 <LedBlink::s_pThis>:
2000d384:	00000000 	andeq	r0, r0, r0

2000d388 <Hardware::s_pThis>:
2000d388:	00000000 	andeq	r0, r0, r0

2000d38c <BitBanging595::s_nDataPrevious>:
2000d38c:	00000000 	andeq	r0, r0, r0

2000d390 <BitBanging595::s_nData>:
2000d390:	00000000 	andeq	r0, r0, r0

2000d394 <outptr>:
2000d394:	00000000 	andeq	r0, r0, r0

2000d398 <last.0>:
	...

2000d3a0 <s_micros>:
	...

2000d3a8 <set_timer>:
2000d3a8:	00000000 	andeq	r0, r0, r0

2000d3ac <s_nSysTickMillis>:
2000d3ac:	00000000 	andeq	r0, r0, r0

2000d3b0 <enet_init_status>:
2000d3b0:	00000000 	andeq	r0, r0, r0

2000d3b4 <s_nAddress>:
2000d3b4:	00000000 	andeq	r0, r0, r0

2000d3b8 <dma_current_ptp_rxdesc>:
2000d3b8:	00000000 	andeq	r0, r0, r0

2000d3bc <dma_current_ptp_txdesc>:
2000d3bc:	00000000 	andeq	r0, r0, r0

2000d3c0 <dma_current_rxdesc>:
2000d3c0:	00000000 	andeq	r0, r0, r0

2000d3c4 <dma_current_txdesc>:
2000d3c4:	00000000 	andeq	r0, r0, r0

2000d3c8 <enet_initpara>:
	...

2000d404 <rx_buff>:
	...

20010f8c <rxdesc_tab>:
	...

2001102c <tx_buff>:
	...

20011c14 <txdesc_tab>:
	...

Disassembly of section .heap:

2001d000 <heap_low>:
	...

Disassembly of section .stack:

2001e000 <_sp-0x2000>:
	...
